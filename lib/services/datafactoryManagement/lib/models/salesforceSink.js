/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * A copy activity Salesforce sink.
 *
 * @extends models['CopySink']
 */
class SalesforceSink extends models['CopySink'] {
  /**
   * Create a SalesforceSink.
   * @property {string} [writeBehavior] The write behavior for the operation.
   * Default is Insert. Possible values include: 'Insert', 'Upsert'
   * @property {object} [externalIdFieldName] The name of the external ID field
   * for upsert operation. Default value is 'Id' column. Type: string (or
   * Expression with resultType string).
   * @property {object} [ignoreNullValues] The flag indicating whether or not
   * to ignore null values from input dataset (except key fields) during write
   * operation. Default value is false. If set it to true, it means ADF will
   * leave the data in the destination object unchanged when doing
   * upsert/update operation and insert defined default value when doing insert
   * operation, versus ADF will update the data in the destination object to
   * NULL when doing upsert/update operation and insert NULL value when doing
   * insert operation. Type: boolean (or Expression with resultType boolean).
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of SalesforceSink
   *
   * @returns {object} metadata of SalesforceSink
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SalesforceSink',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'type',
          clientName: 'type'
        },
        uberParent: 'CopySink',
        className: 'SalesforceSink',
        modelProperties: {
          writeBatchSize: {
            required: false,
            serializedName: 'writeBatchSize',
            type: {
              name: 'Object'
            }
          },
          writeBatchTimeout: {
            required: false,
            serializedName: 'writeBatchTimeout',
            type: {
              name: 'Object'
            }
          },
          sinkRetryCount: {
            required: false,
            serializedName: 'sinkRetryCount',
            type: {
              name: 'Object'
            }
          },
          sinkRetryWait: {
            required: false,
            serializedName: 'sinkRetryWait',
            type: {
              name: 'Object'
            }
          },
          type: {
            required: true,
            serializedName: 'type',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          writeBehavior: {
            required: false,
            serializedName: 'writeBehavior',
            type: {
              name: 'String'
            }
          },
          externalIdFieldName: {
            required: false,
            serializedName: 'externalIdFieldName',
            type: {
              name: 'Object'
            }
          },
          ignoreNullValues: {
            required: false,
            serializedName: 'ignoreNullValues',
            type: {
              name: 'Object'
            }
          }
        }
      }
    };
  }
}

module.exports = SalesforceSink;

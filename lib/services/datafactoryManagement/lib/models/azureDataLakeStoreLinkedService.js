/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Azure Data Lake Store linked service.
 *
 * @extends models['LinkedService']
 */
class AzureDataLakeStoreLinkedService extends models['LinkedService'] {
  /**
   * Create a AzureDataLakeStoreLinkedService.
   * @member {object} dataLakeStoreUri Data Lake Store service URI. Type:
   * string (or Expression with resultType string).
   * @member {object} [servicePrincipalId] The ID of the application used to
   * authenticate against the Azure Data Lake Store account. Type: string (or
   * Expression with resultType string).
   * @member {object} [servicePrincipalKey] The Key of the application used to
   * authenticate against the Azure Data Lake Store account.
   * @member {string} [servicePrincipalKey.value] Value of secure string.
   * @member {object} [tenant] The name or ID of the tenant to which the
   * service principal belongs. Type: string (or Expression with resultType
   * string).
   * @member {object} [accountName] Data Lake Store account name. Type: string
   * (or Expression with resultType string).
   * @member {object} [subscriptionId] Data Lake Store account subscription ID
   * (if different from Data Factory account). Type: string (or Expression with
   * resultType string).
   * @member {object} [resourceGroupName] Data Lake Store account resource
   * group name (if different from Data Factory account). Type: string (or
   * Expression with resultType string).
   * @member {object} [encryptedCredential] The encrypted credential used for
   * authentication. Credentials are encrypted using the integration runtime
   * credential manager. Type: string (or Expression with resultType string).
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of AzureDataLakeStoreLinkedService
   *
   * @returns {object} metadata of AzureDataLakeStoreLinkedService
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AzureDataLakeStore',
      type: {
        name: 'Composite',
        className: 'AzureDataLakeStoreLinkedService',
        modelProperties: {
          connectVia: {
            required: false,
            serializedName: 'connectVia',
            type: {
              name: 'Composite',
              className: 'IntegrationRuntimeReference'
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          type: {
            required: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          dataLakeStoreUri: {
            required: true,
            serializedName: 'typeProperties.dataLakeStoreUri',
            type: {
              name: 'Object'
            }
          },
          servicePrincipalId: {
            required: false,
            serializedName: 'typeProperties.servicePrincipalId',
            type: {
              name: 'Object'
            }
          },
          servicePrincipalKey: {
            required: false,
            serializedName: 'typeProperties.servicePrincipalKey',
            type: {
              name: 'Composite',
              className: 'SecureString'
            }
          },
          tenant: {
            required: false,
            serializedName: 'typeProperties.tenant',
            type: {
              name: 'Object'
            }
          },
          accountName: {
            required: false,
            serializedName: 'typeProperties.accountName',
            type: {
              name: 'Object'
            }
          },
          subscriptionId: {
            required: false,
            serializedName: 'typeProperties.subscriptionId',
            type: {
              name: 'Object'
            }
          },
          resourceGroupName: {
            required: false,
            serializedName: 'typeProperties.resourceGroupName',
            type: {
              name: 'Object'
            }
          },
          encryptedCredential: {
            required: false,
            serializedName: 'typeProperties.encryptedCredential',
            type: {
              name: 'Object'
            }
          }
        }
      }
    };
  }
}

module.exports = AzureDataLakeStoreLinkedService;

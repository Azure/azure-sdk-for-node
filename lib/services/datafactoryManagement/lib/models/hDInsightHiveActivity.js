/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * HDInsight Hive activity type.
 *
 * @extends models['ExecutionActivity']
 */
class HDInsightHiveActivity extends models['ExecutionActivity'] {
  /**
   * Create a HDInsightHiveActivity.
   * @property {array} [storageLinkedServices] Storage linked service
   * references.
   * @property {array} [argumentsProperty] User specified arguments to
   * HDInsightActivity.
   * @property {string} [getDebugInfo] Debug info option. Possible values
   * include: 'None', 'Always', 'Failure'
   * @property {object} [scriptPath] Script path. Type: string (or Expression
   * with resultType string).
   * @property {object} [scriptLinkedService] Script linked service reference.
   * @property {string} [scriptLinkedService.referenceName] Reference
   * LinkedService name.
   * @property {object} [scriptLinkedService.parameters] Arguments for
   * LinkedService.
   * @property {object} [defines] Allows user to specify defines for Hive job
   * request.
   * @property {array} [variables] User specified arguments under hivevar
   * namespace.
   * @property {number} [queryTimeout] Query timeout value (in minutes).
   * Effective when the HDInsight cluster is with ESP (Enterprise Security
   * Package)
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of HDInsightHiveActivity
   *
   * @returns {object} metadata of HDInsightHiveActivity
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'HDInsightHive',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'type',
          clientName: 'type'
        },
        uberParent: 'Activity',
        className: 'HDInsightHiveActivity',
        modelProperties: {
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          dependsOn: {
            required: false,
            serializedName: 'dependsOn',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ActivityDependencyElementType',
                  type: {
                    name: 'Composite',
                    additionalProperties: {
                      type: {
                        name: 'Dictionary',
                        value: {
                            required: false,
                            serializedName: 'ObjectElementType',
                            type: {
                              name: 'Object'
                            }
                        }
                      }
                    },
                    className: 'ActivityDependency'
                  }
              }
            }
          },
          userProperties: {
            required: false,
            serializedName: 'userProperties',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'UserPropertyElementType',
                  type: {
                    name: 'Composite',
                    className: 'UserProperty'
                  }
              }
            }
          },
          type: {
            required: true,
            serializedName: 'type',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          linkedServiceName: {
            required: false,
            serializedName: 'linkedServiceName',
            type: {
              name: 'Composite',
              className: 'LinkedServiceReference'
            }
          },
          policy: {
            required: false,
            serializedName: 'policy',
            type: {
              name: 'Composite',
              additionalProperties: {
                type: {
                  name: 'Dictionary',
                  value: {
                      required: false,
                      serializedName: 'ObjectElementType',
                      type: {
                        name: 'Object'
                      }
                  }
                }
              },
              className: 'ActivityPolicy'
            }
          },
          storageLinkedServices: {
            required: false,
            serializedName: 'typeProperties.storageLinkedServices',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'LinkedServiceReferenceElementType',
                  type: {
                    name: 'Composite',
                    className: 'LinkedServiceReference'
                  }
              }
            }
          },
          argumentsProperty: {
            required: false,
            serializedName: 'typeProperties.arguments',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ObjectElementType',
                  type: {
                    name: 'Object'
                  }
              }
            }
          },
          getDebugInfo: {
            required: false,
            serializedName: 'typeProperties.getDebugInfo',
            type: {
              name: 'String'
            }
          },
          scriptPath: {
            required: false,
            serializedName: 'typeProperties.scriptPath',
            type: {
              name: 'Object'
            }
          },
          scriptLinkedService: {
            required: false,
            serializedName: 'typeProperties.scriptLinkedService',
            type: {
              name: 'Composite',
              className: 'LinkedServiceReference'
            }
          },
          defines: {
            required: false,
            serializedName: 'typeProperties.defines',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'ObjectElementType',
                  type: {
                    name: 'Object'
                  }
              }
            }
          },
          variables: {
            required: false,
            serializedName: 'typeProperties.variables',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ObjectElementType',
                  type: {
                    name: 'Object'
                  }
              }
            }
          },
          queryTimeout: {
            required: false,
            serializedName: 'typeProperties.queryTimeout',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = HDInsightHiveActivity;

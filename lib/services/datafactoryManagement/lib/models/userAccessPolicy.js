/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Get Data Plane read only token request definition.
 *
 */
class UserAccessPolicy {
  /**
   * Create a UserAccessPolicy.
   * @property {string} [permissions] The string with permissions for Data
   * Plane access. Currently only 'r' is supported which grants read only
   * access.
   * @property {string} [accessResourcePath] The resource path to get access
   * relative to factory. Currently only empty string is supported which
   * corresponds to the factory resource.
   * @property {string} [profileName] The name of the profile. Currently only
   * the default is supported. The default value is DefaultProfile.
   * @property {string} [startTime] Start time for the token. If not specified
   * the current time will be used.
   * @property {string} [expireTime] Expiration time for the token. Maximum
   * duration for the token is eight hours and by default the token will expire
   * in eight hours.
   */
  constructor() {
  }

  /**
   * Defines the metadata of UserAccessPolicy
   *
   * @returns {object} metadata of UserAccessPolicy
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'UserAccessPolicy',
      type: {
        name: 'Composite',
        className: 'UserAccessPolicy',
        modelProperties: {
          permissions: {
            required: false,
            serializedName: 'permissions',
            type: {
              name: 'String'
            }
          },
          accessResourcePath: {
            required: false,
            serializedName: 'accessResourcePath',
            type: {
              name: 'String'
            }
          },
          profileName: {
            required: false,
            serializedName: 'profileName',
            type: {
              name: 'String'
            }
          },
          startTime: {
            required: false,
            serializedName: 'startTime',
            type: {
              name: 'String'
            }
          },
          expireTime: {
            required: false,
            serializedName: 'expireTime',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = UserAccessPolicy;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Get Data Plane read only token response definition.
 *
 */
class AccessPolicyResponse {
  /**
   * Create a AccessPolicyResponse.
   * @property {object} [policy] The user access policy.
   * @property {string} [policy.permissions] The string with permissions for
   * Data Plane access. Currently only 'r' is supported which grants read only
   * access.
   * @property {string} [policy.accessResourcePath] The resource path to get
   * access relative to factory. Currently only empty string is supported which
   * corresponds to the factory resource.
   * @property {string} [policy.profileName] The name of the profile. Currently
   * only the default is supported. The default value is DefaultProfile.
   * @property {string} [policy.startTime] Start time for the token. If not
   * specified the current time will be used.
   * @property {string} [policy.expireTime] Expiration time for the token.
   * Maximum duration for the token is eight hours and by default the token
   * will expire in eight hours.
   * @property {string} [accessToken] Data Plane read only access token.
   * @property {string} [dataPlaneUrl] Data Plane service base URL.
   */
  constructor() {
  }

  /**
   * Defines the metadata of AccessPolicyResponse
   *
   * @returns {object} metadata of AccessPolicyResponse
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AccessPolicyResponse',
      type: {
        name: 'Composite',
        className: 'AccessPolicyResponse',
        modelProperties: {
          policy: {
            required: false,
            serializedName: 'policy',
            type: {
              name: 'Composite',
              className: 'UserAccessPolicy'
            }
          },
          accessToken: {
            required: false,
            serializedName: 'accessToken',
            type: {
              name: 'String'
            }
          },
          dataPlaneUrl: {
            required: false,
            serializedName: 'dataPlaneUrl',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = AccessPolicyResponse;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * QuickBooks server linked service.
 *
 * @extends models['LinkedService']
 */
class QuickBooksLinkedService extends models['LinkedService'] {
  /**
   * Create a QuickBooksLinkedService.
   * @member {object} endpoint The endpoint of the QuickBooks server. (i.e.
   * quickbooks.api.intuit.com)
   * @member {object} companyId The company ID of the QuickBooks company to
   * authorize.
   * @member {object} consumerKey The consumer key for OAuth 1.0
   * authentication.
   * @member {object} consumerSecret The consumer secret for OAuth 1.0
   * authentication.
   * @member {string} [consumerSecret.type] Polymorphic Discriminator
   * @member {object} accessToken The access token for OAuth 1.0
   * authentication.
   * @member {string} [accessToken.type] Polymorphic Discriminator
   * @member {object} accessTokenSecret The access token secret for OAuth 1.0
   * authentication.
   * @member {string} [accessTokenSecret.type] Polymorphic Discriminator
   * @member {object} [useEncryptedEndpoints] Specifies whether the data source
   * endpoints are encrypted using HTTPS. The default value is true.
   * @member {object} [encryptedCredential] The encrypted credential used for
   * authentication. Credentials are encrypted using the integration runtime
   * credential manager. Type: string (or Expression with resultType string).
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of QuickBooksLinkedService
   *
   * @returns {object} metadata of QuickBooksLinkedService
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'QuickBooks',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'type',
          clientName: 'type'
        },
        uberParent: 'LinkedService',
        className: 'QuickBooksLinkedService',
        modelProperties: {
          connectVia: {
            required: false,
            serializedName: 'connectVia',
            type: {
              name: 'Composite',
              className: 'IntegrationRuntimeReference'
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          parameters: {
            required: false,
            serializedName: 'parameters',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'ParameterSpecificationElementType',
                  type: {
                    name: 'Composite',
                    className: 'ParameterSpecification'
                  }
              }
            }
          },
          annotations: {
            required: false,
            serializedName: 'annotations',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ObjectElementType',
                  type: {
                    name: 'Object'
                  }
              }
            }
          },
          type: {
            required: true,
            serializedName: 'type',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          endpoint: {
            required: true,
            serializedName: 'typeProperties.endpoint',
            type: {
              name: 'Object'
            }
          },
          companyId: {
            required: true,
            serializedName: 'typeProperties.companyId',
            type: {
              name: 'Object'
            }
          },
          consumerKey: {
            required: true,
            serializedName: 'typeProperties.consumerKey',
            type: {
              name: 'Object'
            }
          },
          consumerSecret: {
            required: true,
            serializedName: 'typeProperties.consumerSecret',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'type',
                clientName: 'type'
              },
              uberParent: 'SecretBase',
              className: 'SecretBase'
            }
          },
          accessToken: {
            required: true,
            serializedName: 'typeProperties.accessToken',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'type',
                clientName: 'type'
              },
              uberParent: 'SecretBase',
              className: 'SecretBase'
            }
          },
          accessTokenSecret: {
            required: true,
            serializedName: 'typeProperties.accessTokenSecret',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'type',
                clientName: 'type'
              },
              uberParent: 'SecretBase',
              className: 'SecretBase'
            }
          },
          useEncryptedEndpoints: {
            required: false,
            serializedName: 'typeProperties.useEncryptedEndpoints',
            type: {
              name: 'Object'
            }
          },
          encryptedCredential: {
            required: false,
            serializedName: 'typeProperties.encryptedCredential',
            type: {
              name: 'Object'
            }
          }
        }
      }
    };
  }
}

module.exports = QuickBooksLinkedService;

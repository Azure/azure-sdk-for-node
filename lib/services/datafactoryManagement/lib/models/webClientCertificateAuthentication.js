/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * A WebLinkedService that uses client certificate based authentication to
 * communicate with an HTTP endpoint. This scheme follows mutual
 * authentication; the server must also provide valid credentials to the
 * client.
 *
 * @extends models['WebLinkedServiceTypeProperties']
 */
class WebClientCertificateAuthentication extends models['WebLinkedServiceTypeProperties'] {
  /**
   * Create a WebClientCertificateAuthentication.
   * @member {object} pfx Base64-encoded contents of a PFX file.
   * @member {string} [pfx.value] Value of secure string.
   * @member {object} password Password for the PFX file.
   * @member {string} [password.value] Value of secure string.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of WebClientCertificateAuthentication
   *
   * @returns {object} metadata of WebClientCertificateAuthentication
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ClientCertificate',
      type: {
        name: 'Composite',
        className: 'WebClientCertificateAuthentication',
        modelProperties: {
          url: {
            required: true,
            serializedName: 'url',
            type: {
              name: 'Object'
            }
          },
          authenticationType: {
            required: true,
            serializedName: 'authenticationType',
            type: {
              name: 'String'
            }
          },
          pfx: {
            required: true,
            serializedName: 'pfx',
            defaultValue: {},
            type: {
              name: 'Composite',
              className: 'SecureString'
            }
          },
          password: {
            required: true,
            serializedName: 'password',
            defaultValue: {},
            type: {
              name: 'Composite',
              className: 'SecureString'
            }
          }
        }
      }
    };
  }
}

module.exports = WebClientCertificateAuthentication;

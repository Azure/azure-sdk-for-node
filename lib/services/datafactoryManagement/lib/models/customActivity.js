/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Custom activity type.
 *
 * @extends models['ExecutionActivity']
 */
class CustomActivity extends models['ExecutionActivity'] {
  /**
   * Create a CustomActivity.
   * @member {object} command Command for custom activity Type: string (or
   * Expression with resultType string).
   * @member {object} [resourceLinkedService] Resource linked service
   * reference.
   * @member {string} [resourceLinkedService.referenceName] Reference
   * LinkedService name.
   * @member {object} [folderPath] Folder path for resource files Type: string
   * (or Expression with resultType string).
   * @member {object} [referenceObjects] Reference objects
   * @member {array} [referenceObjects.linkedServices] Linked service
   * references.
   * @member {array} [referenceObjects.datasets] Dataset references.
   * @member {object} [extendedProperties] User defined property bag. There is
   * no restriction on the keys or values that can be used. The user specified
   * custom activity has the full responsibility to consume and interpret the
   * content defined.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of CustomActivity
   *
   * @returns {object} metadata of CustomActivity
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Custom',
      type: {
        name: 'Composite',
        className: 'CustomActivity',
        modelProperties: {
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          dependsOn: {
            required: false,
            serializedName: 'dependsOn',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ActivityDependencyElementType',
                  type: {
                    name: 'Composite',
                    className: 'ActivityDependency'
                  }
              }
            }
          },
          type: {
            required: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          linkedServiceName: {
            required: false,
            serializedName: 'linkedServiceName',
            type: {
              name: 'Composite',
              className: 'LinkedServiceReference'
            }
          },
          policy: {
            required: false,
            serializedName: 'policy',
            type: {
              name: 'Composite',
              className: 'ActivityPolicy'
            }
          },
          command: {
            required: true,
            serializedName: 'typeProperties.command',
            type: {
              name: 'Object'
            }
          },
          resourceLinkedService: {
            required: false,
            serializedName: 'typeProperties.resourceLinkedService',
            type: {
              name: 'Composite',
              className: 'LinkedServiceReference'
            }
          },
          folderPath: {
            required: false,
            serializedName: 'typeProperties.folderPath',
            type: {
              name: 'Object'
            }
          },
          referenceObjects: {
            required: false,
            serializedName: 'typeProperties.referenceObjects',
            type: {
              name: 'Composite',
              className: 'CustomActivityReferenceObject'
            }
          },
          extendedProperties: {
            required: false,
            serializedName: 'typeProperties.extendedProperties',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'ObjectElementType',
                  type: {
                    name: 'Object'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = CustomActivity;

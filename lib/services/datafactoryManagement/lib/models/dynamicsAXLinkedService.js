/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Dynamics AX linked service.
 *
 * @extends models['LinkedService']
 */
class DynamicsAXLinkedService extends models['LinkedService'] {
  /**
   * Create a DynamicsAXLinkedService.
   * @property {object} url The Dynamics AX (or Dynamics 365 Finance and
   * Operations) instance OData endpoint.
   * @property {object} servicePrincipalId Specify the application's client ID.
   * Type: string (or Expression with resultType string).
   * @property {object} servicePrincipalKey Specify the application's key. Mark
   * this field as a SecureString to store it securely in Data Factory, or
   * reference a secret stored in Azure Key Vault. Type: string (or Expression
   * with resultType string).
   * @property {string} [servicePrincipalKey.type] Polymorphic Discriminator
   * @property {object} tenant Specify the tenant information (domain name or
   * tenant ID) under which your application resides. Retrieve it by hovering
   * the mouse in the top-right corner of the Azure portal. Type: string (or
   * Expression with resultType string).
   * @property {object} aadResourceId Specify the resource you are requesting
   * authorization. Type: string (or Expression with resultType string).
   * @property {object} [encryptedCredential] The encrypted credential used for
   * authentication. Credentials are encrypted using the integration runtime
   * credential manager. Type: string (or Expression with resultType string).
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of DynamicsAXLinkedService
   *
   * @returns {object} metadata of DynamicsAXLinkedService
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DynamicsAX',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'type',
          clientName: 'type'
        },
        uberParent: 'LinkedService',
        className: 'DynamicsAXLinkedService',
        modelProperties: {
          connectVia: {
            required: false,
            serializedName: 'connectVia',
            type: {
              name: 'Composite',
              className: 'IntegrationRuntimeReference'
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          parameters: {
            required: false,
            serializedName: 'parameters',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'ParameterSpecificationElementType',
                  type: {
                    name: 'Composite',
                    className: 'ParameterSpecification'
                  }
              }
            }
          },
          annotations: {
            required: false,
            serializedName: 'annotations',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ObjectElementType',
                  type: {
                    name: 'Object'
                  }
              }
            }
          },
          type: {
            required: true,
            serializedName: 'type',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          url: {
            required: true,
            serializedName: 'typeProperties.url',
            type: {
              name: 'Object'
            }
          },
          servicePrincipalId: {
            required: true,
            serializedName: 'typeProperties.servicePrincipalId',
            type: {
              name: 'Object'
            }
          },
          servicePrincipalKey: {
            required: true,
            serializedName: 'typeProperties.servicePrincipalKey',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'type',
                clientName: 'type'
              },
              uberParent: 'SecretBase',
              className: 'SecretBase'
            }
          },
          tenant: {
            required: true,
            serializedName: 'typeProperties.tenant',
            type: {
              name: 'Object'
            }
          },
          aadResourceId: {
            required: true,
            serializedName: 'typeProperties.aadResourceId',
            type: {
              name: 'Object'
            }
          },
          encryptedCredential: {
            required: false,
            serializedName: 'typeProperties.encryptedCredential',
            type: {
              name: 'Object'
            }
          }
        }
      }
    };
  }
}

module.exports = DynamicsAXLinkedService;

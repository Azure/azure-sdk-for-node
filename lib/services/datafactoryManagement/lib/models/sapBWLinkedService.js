/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * SAP Business Warehouse Linked Service.
 *
 * @extends models['LinkedService']
 */
class SapBWLinkedService extends models['LinkedService'] {
  /**
   * Create a SapBWLinkedService.
   * @property {object} server Host name of the SAP BW instance. Type: string
   * (or Expression with resultType string).
   * @property {object} systemNumber System number of the BW system. (Usually a
   * two-digit decimal number represented as a string.) Type: string (or
   * Expression with resultType string).
   * @property {object} clientId Client ID of the client on the BW system.
   * (Usually a three-digit decimal number represented as a string) Type:
   * string (or Expression with resultType string).
   * @property {object} [userName] Username to access the SAP BW server. Type:
   * string (or Expression with resultType string).
   * @property {object} [password] Password to access the SAP BW server.
   * @property {string} [password.type] Polymorphic Discriminator
   * @property {object} [encryptedCredential] The encrypted credential used for
   * authentication. Credentials are encrypted using the integration runtime
   * credential manager. Type: string (or Expression with resultType string).
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of SapBWLinkedService
   *
   * @returns {object} metadata of SapBWLinkedService
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SapBW',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'type',
          clientName: 'type'
        },
        uberParent: 'LinkedService',
        className: 'SapBWLinkedService',
        modelProperties: {
          connectVia: {
            required: false,
            serializedName: 'connectVia',
            type: {
              name: 'Composite',
              className: 'IntegrationRuntimeReference'
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          parameters: {
            required: false,
            serializedName: 'parameters',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'ParameterSpecificationElementType',
                  type: {
                    name: 'Composite',
                    className: 'ParameterSpecification'
                  }
              }
            }
          },
          annotations: {
            required: false,
            serializedName: 'annotations',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ObjectElementType',
                  type: {
                    name: 'Object'
                  }
              }
            }
          },
          type: {
            required: true,
            serializedName: 'type',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          server: {
            required: true,
            serializedName: 'typeProperties.server',
            type: {
              name: 'Object'
            }
          },
          systemNumber: {
            required: true,
            serializedName: 'typeProperties.systemNumber',
            type: {
              name: 'Object'
            }
          },
          clientId: {
            required: true,
            serializedName: 'typeProperties.clientId',
            type: {
              name: 'Object'
            }
          },
          userName: {
            required: false,
            serializedName: 'typeProperties.userName',
            type: {
              name: 'Object'
            }
          },
          password: {
            required: false,
            serializedName: 'typeProperties.password',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'type',
                clientName: 'type'
              },
              uberParent: 'SecretBase',
              className: 'SecretBase'
            }
          },
          encryptedCredential: {
            required: false,
            serializedName: 'typeProperties.encryptedCredential',
            type: {
              name: 'Object'
            }
          }
        }
      }
    };
  }
}

module.exports = SapBWLinkedService;

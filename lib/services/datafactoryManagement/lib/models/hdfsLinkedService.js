/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Hadoop Distributed File System (HDFS) linked service.
 *
 * @extends models['LinkedService']
 */
class HdfsLinkedService extends models['LinkedService'] {
  /**
   * Create a HdfsLinkedService.
   * @member {object} url The URL of the HDFS service endpoint, e.g.
   * http://myhostname:50070/webhdfs/v1 . Type: string (or Expression with
   * resultType string).
   * @member {object} [authenticationType] Type of authentication used to
   * connect to the HDFS. Possible values are: Anonymous and Windows. Type:
   * string (or Expression with resultType string).
   * @member {object} [encryptedCredential] The encrypted credential used for
   * authentication. Credentials are encrypted using the integration runtime
   * credential manager. Type: string (or Expression with resultType string).
   * @member {object} [userName] User name for Windows authentication. Type:
   * string (or Expression with resultType string).
   * @member {object} [password] Password for Windows authentication.
   * @member {string} [password.value] Value of secure string.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of HdfsLinkedService
   *
   * @returns {object} metadata of HdfsLinkedService
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Hdfs',
      type: {
        name: 'Composite',
        className: 'HdfsLinkedService',
        modelProperties: {
          connectVia: {
            required: false,
            serializedName: 'connectVia',
            type: {
              name: 'Composite',
              className: 'IntegrationRuntimeReference'
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          type: {
            required: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          url: {
            required: true,
            serializedName: 'typeProperties.url',
            type: {
              name: 'Object'
            }
          },
          authenticationType: {
            required: false,
            serializedName: 'typeProperties.authenticationType',
            type: {
              name: 'Object'
            }
          },
          encryptedCredential: {
            required: false,
            serializedName: 'typeProperties.encryptedCredential',
            type: {
              name: 'Object'
            }
          },
          userName: {
            required: false,
            serializedName: 'typeProperties.userName',
            type: {
              name: 'Object'
            }
          },
          password: {
            required: false,
            serializedName: 'typeProperties.password',
            type: {
              name: 'Composite',
              className: 'SecureString'
            }
          }
        }
      }
    };
  }
}

module.exports = HdfsLinkedService;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Query parameters for listing runs.
 *
 */
class RunFilterParameters {
  /**
   * Create a RunFilterParameters.
   * @member {string} [continuationToken] The continuation token for getting
   * the next page of results. Null for first page.
   * @member {date} lastUpdatedAfter The time at or after which the run event
   * was updated in 'ISO 8601' format.
   * @member {date} lastUpdatedBefore The time at or before which the run event
   * was updated in 'ISO 8601' format.
   * @member {array} [filters] List of filters.
   * @member {array} [orderBy] List of OrderBy option.
   */
  constructor() {
  }

  /**
   * Defines the metadata of RunFilterParameters
   *
   * @returns {object} metadata of RunFilterParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RunFilterParameters',
      type: {
        name: 'Composite',
        className: 'RunFilterParameters',
        modelProperties: {
          continuationToken: {
            required: false,
            serializedName: 'continuationToken',
            type: {
              name: 'String'
            }
          },
          lastUpdatedAfter: {
            required: true,
            serializedName: 'lastUpdatedAfter',
            type: {
              name: 'DateTime'
            }
          },
          lastUpdatedBefore: {
            required: true,
            serializedName: 'lastUpdatedBefore',
            type: {
              name: 'DateTime'
            }
          },
          filters: {
            required: false,
            serializedName: 'filters',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'RunQueryFilterElementType',
                  type: {
                    name: 'Composite',
                    className: 'RunQueryFilter'
                  }
              }
            }
          },
          orderBy: {
            required: false,
            serializedName: 'orderBy',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'RunQueryOrderByElementType',
                  type: {
                    name: 'Composite',
                    className: 'RunQueryOrderBy'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = RunFilterParameters;

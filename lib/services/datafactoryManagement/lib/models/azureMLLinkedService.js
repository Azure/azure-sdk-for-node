/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Azure ML Web Service linked service.
 *
 * @extends models['LinkedService']
 */
class AzureMLLinkedService extends models['LinkedService'] {
  /**
   * Create a AzureMLLinkedService.
   * @member {object} mlEndpoint The Batch Execution REST URL for an Azure ML
   * Web Service endpoint. Type: string (or Expression with resultType string).
   * @member {object} apiKey The API key for accessing the Azure ML model
   * endpoint.
   * @member {string} [apiKey.value] Value of secure string.
   * @member {object} [updateResourceEndpoint] The Update Resource REST URL for
   * an Azure ML Web Service endpoint. Type: string (or Expression with
   * resultType string).
   * @member {object} [servicePrincipalId] The ID of the service principal used
   * to authenticate against the ARM-based updateResourceEndpoint of an Azure
   * ML web service. Type: string (or Expression with resultType string).
   * @member {object} [servicePrincipalKey] The key of the service principal
   * used to authenticate against the ARM-based updateResourceEndpoint of an
   * Azure ML web service.
   * @member {string} [servicePrincipalKey.value] Value of secure string.
   * @member {object} [tenant] The name or ID of the tenant to which the
   * service principal belongs. Type: string (or Expression with resultType
   * string).
   * @member {object} [encryptedCredential] The encrypted credential used for
   * authentication. Credentials are encrypted using the integration runtime
   * credential manager. Type: string (or Expression with resultType string).
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of AzureMLLinkedService
   *
   * @returns {object} metadata of AzureMLLinkedService
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AzureML',
      type: {
        name: 'Composite',
        className: 'AzureMLLinkedService',
        modelProperties: {
          connectVia: {
            required: false,
            serializedName: 'connectVia',
            type: {
              name: 'Composite',
              className: 'IntegrationRuntimeReference'
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          type: {
            required: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          mlEndpoint: {
            required: true,
            serializedName: 'typeProperties.mlEndpoint',
            type: {
              name: 'Object'
            }
          },
          apiKey: {
            required: true,
            serializedName: 'typeProperties.apiKey',
            defaultValue: {},
            type: {
              name: 'Composite',
              className: 'SecureString'
            }
          },
          updateResourceEndpoint: {
            required: false,
            serializedName: 'typeProperties.updateResourceEndpoint',
            type: {
              name: 'Object'
            }
          },
          servicePrincipalId: {
            required: false,
            serializedName: 'typeProperties.servicePrincipalId',
            type: {
              name: 'Object'
            }
          },
          servicePrincipalKey: {
            required: false,
            serializedName: 'typeProperties.servicePrincipalKey',
            type: {
              name: 'Composite',
              className: 'SecureString'
            }
          },
          tenant: {
            required: false,
            serializedName: 'typeProperties.tenant',
            type: {
              name: 'Object'
            }
          },
          encryptedCredential: {
            required: false,
            serializedName: 'typeProperties.encryptedCredential',
            type: {
              name: 'Object'
            }
          }
        }
      }
    };
  }
}

module.exports = AzureMLLinkedService;

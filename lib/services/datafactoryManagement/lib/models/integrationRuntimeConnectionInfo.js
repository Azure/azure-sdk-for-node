/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Connection information for encrypting the on-premises data source
 * credentials.
 *
 */
class IntegrationRuntimeConnectionInfo {
  /**
   * Create a IntegrationRuntimeConnectionInfo.
   * @member {string} [serviceToken] The token generated in service. Callers
   * use this token to authenticate to integration runtime.
   * @member {string} [identityCertThumbprint] The integration runtime SSL
   * certificate thumbprint. Click-Once application uses it to do server
   * validation.
   * @member {string} [hostServiceUri] The on-premises integration runtime host
   * URL.
   * @member {string} [version] The integration runtime version.
   * @member {string} [publicKey] The public key for encrypting a credential
   * when transferring the credential to the integration runtime.
   * @member {boolean} [isIdentityCertExprired] Whether the identity
   * certificate is expired.
   */
  constructor() {
  }

  /**
   * Defines the metadata of IntegrationRuntimeConnectionInfo
   *
   * @returns {object} metadata of IntegrationRuntimeConnectionInfo
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IntegrationRuntimeConnectionInfo',
      type: {
        name: 'Composite',
        className: 'IntegrationRuntimeConnectionInfo',
        modelProperties: {
          serviceToken: {
            required: false,
            readOnly: true,
            serializedName: 'serviceToken',
            type: {
              name: 'String'
            }
          },
          identityCertThumbprint: {
            required: false,
            readOnly: true,
            serializedName: 'identityCertThumbprint',
            type: {
              name: 'String'
            }
          },
          hostServiceUri: {
            required: false,
            readOnly: true,
            serializedName: 'hostServiceUri',
            type: {
              name: 'String'
            }
          },
          version: {
            required: false,
            readOnly: true,
            serializedName: 'version',
            type: {
              name: 'String'
            }
          },
          publicKey: {
            required: false,
            readOnly: true,
            serializedName: 'publicKey',
            type: {
              name: 'String'
            }
          },
          isIdentityCertExprired: {
            required: false,
            readOnly: true,
            serializedName: 'isIdentityCertExprired',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = IntegrationRuntimeConnectionInfo;

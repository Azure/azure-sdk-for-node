/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a UserBase.
 */
class UserBase {
  /**
   * Create a UserBase.
   * @member {string} [immutableId] This must be specified if you are using a
   * federated domain for the user's userPrincipalName (UPN) property when
   * creating a new user account. It is used to associate an on-premises Active
   * Directory user account with their Azure AD user object.
   * @member {string} [usageLocation] A two letter country code (ISO standard
   * 3166). Required for users that will be assigned licenses due to legal
   * requirement to check for availability of services in countries. Examples
   * include: "US", "JP", and "GB".
   * @member {string} [givenName] The given name for the user.
   * @member {string} [surname] The user's surname (family name or last name).
   * @member {string} [userType] A string value that can be used to classify
   * user types in your directory, such as 'Member' and 'Guest'. Possible
   * values include: 'Member', 'Guest'
   */
  constructor() {
  }

  /**
   * Defines the metadata of UserBase
   *
   * @returns {object} metadata of UserBase
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'UserBase',
      type: {
        name: 'Composite',
        className: 'UserBase',
        modelProperties: {
          immutableId: {
            required: false,
            serializedName: 'immutableId',
            type: {
              name: 'String'
            }
          },
          usageLocation: {
            required: false,
            serializedName: 'usageLocation',
            type: {
              name: 'String'
            }
          },
          givenName: {
            required: false,
            serializedName: 'givenName',
            type: {
              name: 'String'
            }
          },
          surname: {
            required: false,
            serializedName: 'surname',
            type: {
              name: 'String'
            }
          },
          userType: {
            required: false,
            serializedName: 'userType',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = UserBase;

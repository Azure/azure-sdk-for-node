/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the User class.
 * @constructor
 * Active Directory user information.
 *
 * @member {string} [objectId] The object ID.
 *
 * @member {string} [objectType] The object type.
 *
 * @member {string} [userPrincipalName] The principal name of the user.
 *
 * @member {string} [displayName] The display name of the user.
 *
 * @member {string} [signInName] The sign-in name of the user.
 *
 * @member {string} [mail] The primary email address of the user.
 *
 * @member {string} [mailNickname] The mail alias for the user.
 *
 * @member {string} [usageLocation] A two letter country code (ISO standard
 * 3166). Required for users that will be assigned licenses due to legal
 * requirement to check for availability of services in countries. Examples
 * include: "US", "JP", and "GB".
 *
 */
class User {
  constructor() {
  }

  /**
   * Defines the metadata of User
   *
   * @returns {object} metadata of User
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'User',
      type: {
        name: 'Composite',
        className: 'User',
        modelProperties: {
          objectId: {
            required: false,
            serializedName: 'objectId',
            type: {
              name: 'String'
            }
          },
          objectType: {
            required: false,
            serializedName: 'objectType',
            type: {
              name: 'String'
            }
          },
          userPrincipalName: {
            required: false,
            serializedName: 'userPrincipalName',
            type: {
              name: 'String'
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          signInName: {
            required: false,
            serializedName: 'signInName',
            type: {
              name: 'String'
            }
          },
          mail: {
            required: false,
            serializedName: 'mail',
            type: {
              name: 'String'
            }
          },
          mailNickname: {
            required: false,
            serializedName: 'mailNickname',
            type: {
              name: 'String'
            }
          },
          usageLocation: {
            required: false,
            serializedName: 'usageLocation',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = User;

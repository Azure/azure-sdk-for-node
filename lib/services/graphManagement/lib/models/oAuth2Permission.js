/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Represents an OAuth 2.0 delegated permission scope. The specified OAuth 2.0
 * delegated permission scopes may be requested by client applications (through
 * the requiredResourceAccess collection on the Application object) when
 * calling a resource application. The oauth2Permissions property of the
 * ServicePrincipal entity and of the Application entity is a collection of
 * OAuth2Permission.
 *
 */
class OAuth2Permission {
  /**
   * Create a OAuth2Permission.
   * @property {string} [adminConsentDescription] Permission help text that
   * appears in the admin consent and app assignment experiences.
   * @property {string} [adminConsentDisplayName] Display name for the
   * permission that appears in the admin consent and app assignment
   * experiences.
   * @property {string} [id] Unique scope permission identifier inside the
   * oauth2Permissions collection.
   * @property {boolean} [isEnabled] When creating or updating a permission,
   * this property must be set to true (which is the default). To delete a
   * permission, this property must first be set to false. At that point, in a
   * subsequent call, the permission may be removed.
   * @property {string} [type] Specifies whether this scope permission can be
   * consented to by an end user, or whether it is a tenant-wide permission
   * that must be consented to by a Company Administrator. Possible values are
   * "User" or "Admin".
   * @property {string} [userConsentDescription] Permission help text that
   * appears in the end user consent experience.
   * @property {string} [userConsentDisplayName] Display name for the
   * permission that appears in the end user consent experience.
   * @property {string} [value] The value of the scope claim that the resource
   * application should expect in the OAuth 2.0 access token.
   */
  constructor() {
  }

  /**
   * Defines the metadata of OAuth2Permission
   *
   * @returns {object} metadata of OAuth2Permission
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'OAuth2Permission',
      type: {
        name: 'Composite',
        className: 'OAuth2Permission',
        modelProperties: {
          adminConsentDescription: {
            required: false,
            serializedName: 'adminConsentDescription',
            type: {
              name: 'String'
            }
          },
          adminConsentDisplayName: {
            required: false,
            serializedName: 'adminConsentDisplayName',
            type: {
              name: 'String'
            }
          },
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          isEnabled: {
            required: false,
            serializedName: 'isEnabled',
            type: {
              name: 'Boolean'
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          userConsentDescription: {
            required: false,
            serializedName: 'userConsentDescription',
            type: {
              name: 'String'
            }
          },
          userConsentDisplayName: {
            required: false,
            serializedName: 'userConsentDisplayName',
            type: {
              name: 'String'
            }
          },
          value: {
            required: false,
            serializedName: 'value',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = OAuth2Permission;

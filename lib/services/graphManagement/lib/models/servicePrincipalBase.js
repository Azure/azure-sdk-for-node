/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Active Directory service principal common perperties shared among GET, POST
 * and PATCH
 *
 */
class ServicePrincipalBase {
  /**
   * Create a ServicePrincipalBase.
   * @property {array} [keyCredentials] The collection of key credentials
   * associated with the service principal.
   * @property {array} [passwordCredentials] The collection of password
   * credentials associated with the service principal.
   * @property {string} [servicePrincipalType] the type of the servie principal
   * @property {string} [accountEnabled] whether or not the service principal
   * account is enabled
   * @property {array} [tags] Optional list of tags that you can apply to your
   * service principals. Not nullable.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ServicePrincipalBase
   *
   * @returns {object} metadata of ServicePrincipalBase
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ServicePrincipalBase',
      type: {
        name: 'Composite',
        className: 'ServicePrincipalBase',
        modelProperties: {
          keyCredentials: {
            required: false,
            serializedName: 'keyCredentials',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'KeyCredentialElementType',
                  type: {
                    name: 'Composite',
                    additionalProperties: {
                      type: {
                        name: 'Dictionary',
                        value: {
                            required: false,
                            serializedName: 'ObjectElementType',
                            type: {
                              name: 'Object'
                            }
                        }
                      }
                    },
                    className: 'KeyCredential'
                  }
              }
            }
          },
          passwordCredentials: {
            required: false,
            serializedName: 'passwordCredentials',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PasswordCredentialElementType',
                  type: {
                    name: 'Composite',
                    additionalProperties: {
                      type: {
                        name: 'Dictionary',
                        value: {
                            required: false,
                            serializedName: 'ObjectElementType',
                            type: {
                              name: 'Object'
                            }
                        }
                      }
                    },
                    className: 'PasswordCredential'
                  }
              }
            }
          },
          servicePrincipalType: {
            required: false,
            serializedName: 'servicePrincipalType',
            type: {
              name: 'String'
            }
          },
          accountEnabled: {
            required: false,
            serializedName: 'accountEnabled',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = ServicePrincipalBase;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a AppRole.
 */
class AppRole {
  /**
   * Create a AppRole.
   * @property {string} [id] Unique role identifier inside the appRoles
   * collection.
   * @property {array} [allowedMemberTypes] Specifies whether this app role
   * definition can be assigned to users and groups by setting to 'User', or to
   * other applications (that are accessing this application in daemon service
   * scenarios) by setting to 'Application', or to both.
   * @property {string} [description] Permission help text that appears in the
   * admin app assignment and consent experiences.
   * @property {string} [displayName] Display name for the permission that
   * appears in the admin consent and app assignment experiences.
   * @property {boolean} [isEnabled] When creating or updating a role
   * definition, this must be set to true (which is the default). To delete a
   * role, this must first be set to false. At that point, in a subsequent
   * call, this role may be removed.
   * @property {string} [value] Specifies the value of the roles claim that the
   * application should expect in the authentication and access tokens.
   */
  constructor() {
  }

  /**
   * Defines the metadata of AppRole
   *
   * @returns {object} metadata of AppRole
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AppRole',
      type: {
        name: 'Composite',
        className: 'AppRole',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          allowedMemberTypes: {
            required: false,
            serializedName: 'allowedMemberTypes',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          isEnabled: {
            required: false,
            serializedName: 'isEnabled',
            type: {
              name: 'Boolean'
            }
          },
          value: {
            required: false,
            serializedName: 'value',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = AppRole;

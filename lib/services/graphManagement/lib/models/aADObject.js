/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The properties of an Active Directory object.
 *
 */
class AADObject {
  /**
   * Create a AADObject.
   * @member {string} [objectId] The ID of the object.
   * @member {string} [objectType] The type of AAD object.
   * @member {string} [displayName] The display name of the object.
   * @member {string} [userPrincipalName] The principal name of the object.
   * @member {string} [mail] The primary email address of the object.
   * @member {boolean} [mailEnabled] Whether the AAD object is mail-enabled.
   * @member {string} [mailNickname] The mail alias for the user.
   * @member {boolean} [securityEnabled] Whether the AAD object is
   * security-enabled.
   * @member {string} [signInName] The sign-in name of the object.
   * @member {array} [servicePrincipalNames] A collection of service principal
   * names associated with the object.
   * @member {string} [userType] The user type of the object.
   * @member {string} [usageLocation] A two letter country code (ISO standard
   * 3166). Required for users that will be assigned licenses due to legal
   * requirement to check for availability of services in countries. Examples
   * include: "US", "JP", and "GB".
   * @member {string} [appId] The application ID.
   * @member {array} [appPermissions] The application permissions.
   * @member {boolean} [availableToOtherTenants] Whether the application is be
   * available to other tenants.
   * @member {array} [identifierUris] A collection of URIs for the application.
   * @member {array} [replyUrls] A collection of reply URLs for the
   * application.
   * @member {string} [homepage] The home page of the application.
   */
  constructor() {
  }

  /**
   * Defines the metadata of AADObject
   *
   * @returns {object} metadata of AADObject
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AADObject',
      type: {
        name: 'Composite',
        className: 'AADObject',
        modelProperties: {
          objectId: {
            required: false,
            serializedName: 'objectId',
            type: {
              name: 'String'
            }
          },
          objectType: {
            required: false,
            serializedName: 'objectType',
            type: {
              name: 'String'
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          userPrincipalName: {
            required: false,
            serializedName: 'userPrincipalName',
            type: {
              name: 'String'
            }
          },
          mail: {
            required: false,
            serializedName: 'mail',
            type: {
              name: 'String'
            }
          },
          mailEnabled: {
            required: false,
            serializedName: 'mailEnabled',
            type: {
              name: 'Boolean'
            }
          },
          mailNickname: {
            required: false,
            readOnly: true,
            serializedName: 'mailNickname',
            type: {
              name: 'String'
            }
          },
          securityEnabled: {
            required: false,
            serializedName: 'securityEnabled',
            type: {
              name: 'Boolean'
            }
          },
          signInName: {
            required: false,
            serializedName: 'signInName',
            type: {
              name: 'String'
            }
          },
          servicePrincipalNames: {
            required: false,
            serializedName: 'servicePrincipalNames',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          userType: {
            required: false,
            serializedName: 'userType',
            type: {
              name: 'String'
            }
          },
          usageLocation: {
            required: false,
            readOnly: true,
            serializedName: 'usageLocation',
            type: {
              name: 'String'
            }
          },
          appId: {
            required: false,
            readOnly: true,
            serializedName: 'appId',
            type: {
              name: 'String'
            }
          },
          appPermissions: {
            required: false,
            readOnly: true,
            serializedName: 'appPermissions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          availableToOtherTenants: {
            required: false,
            readOnly: true,
            serializedName: 'availableToOtherTenants',
            type: {
              name: 'Boolean'
            }
          },
          identifierUris: {
            required: false,
            readOnly: true,
            serializedName: 'identifierUris',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          replyUrls: {
            required: false,
            readOnly: true,
            serializedName: 'replyUrls',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          homepage: {
            required: false,
            readOnly: true,
            serializedName: 'homepage',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = AADObject;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Active Directory application information.
 *
 * @extends models['DirectoryObject']
 */
class Application extends models['DirectoryObject'] {
  /**
   * Create a Application.
   * @property {string} [appId] The application ID.
   * @property {boolean} [allowGuestsSignIn] A property on the application to
   * indicate if the application accepts other IDPs or not or partially
   * accepts.
   * @property {boolean} [allowPassthroughUsers] Indicates that the application
   * supports pass through users who have no presence in the resource tenant.
   * @property {string} [appLogoUrl] The url for the application logo image
   * stored in a CDN.
   * @property {array} [appRoles] The collection of application roles that an
   * application may declare. These roles can be assigned to users, groups or
   * service principals.
   * @property {array} [appPermissions] The application permissions.
   * @property {boolean} [availableToOtherTenants] Whether the application is
   * available to other tenants.
   * @property {string} [displayName] The display name of the application.
   * @property {string} [errorUrl] A URL provided by the author of the
   * application to report errors when using the application.
   * @property {object} [groupMembershipClaims] Configures the groups claim
   * issued in a user or OAuth 2.0 access token that the app expects.
   * @property {string} [homepage] The home page of the application.
   * @property {array} [identifierUris] A collection of URIs for the
   * application.
   * @property {object} [informationalUrls] URLs with more information about
   * the application.
   * @property {string} [informationalUrls.termsOfService] The terms of service
   * URI
   * @property {string} [informationalUrls.marketing] The marketing URI
   * @property {string} [informationalUrls.privacy] The privacy policy URI
   * @property {string} [informationalUrls.support] The support URI
   * @property {boolean} [isDeviceOnlyAuthSupported] Specifies whether this
   * application supports device authentication without a user. The default is
   * false.
   * @property {array} [keyCredentials] A collection of KeyCredential objects.
   * @property {array} [knownClientApplications] Client applications that are
   * tied to this resource application. Consent to any of the known client
   * applications will result in implicit consent to the resource application
   * through a combined consent dialog (showing the OAuth permission scopes
   * required by the client and the resource).
   * @property {string} [logoutUrl] the url of the logout page
   * @property {boolean} [oauth2AllowImplicitFlow] Whether to allow implicit
   * grant flow for OAuth2
   * @property {boolean} [oauth2AllowUrlPathMatching] Specifies whether during
   * a token Request Azure AD will allow path matching of the redirect URI
   * against the applications collection of replyURLs. The default is false.
   * @property {array} [oauth2Permissions] The collection of OAuth 2.0
   * permission scopes that the web API (resource) application exposes to
   * client applications. These permission scopes may be granted to client
   * applications during consent.
   * @property {boolean} [oauth2RequirePostResponse] Specifies whether, as part
   * of OAuth 2.0 token requests, Azure AD will allow POST requests, as opposed
   * to GET requests. The default is false, which specifies that only GET
   * requests will be allowed.
   * @property {array} [orgRestrictions] A list of tenants allowed to access
   * application.
   * @property {object} [optionalClaims]
   * @property {array} [optionalClaims.idToken] Optional claims requested to be
   * included in the id token.
   * @property {array} [optionalClaims.accessToken] Optional claims requested
   * to be included in the access token.
   * @property {array} [optionalClaims.samlToken] Optional claims requested to
   * be included in the saml token.
   * @property {array} [passwordCredentials] A collection of PasswordCredential
   * objects
   * @property {array} [preAuthorizedApplications] list of pre-authorized
   * applications.
   * @property {boolean} [publicClient] Specifies whether this application is a
   * public client (such as an installed application running on a mobile
   * device). Default is false.
   * @property {string} [publisherDomain] Reliable domain which can be used to
   * identify an application.
   * @property {array} [replyUrls] A collection of reply URLs for the
   * application.
   * @property {array} [requiredResourceAccess] Specifies resources that this
   * application requires access to and the set of OAuth permission scopes and
   * application roles that it needs under each of those resources. This
   * pre-configuration of required resource access drives the consent
   * experience.
   * @property {string} [samlMetadataUrl] The URL to the SAML metadata for the
   * application.
   * @property {string} [signInAudience] Audience for signing in to the
   * application (AzureADMyOrganization, AzureADAllOrganizations,
   * AzureADAndMicrosoftAccounts).
   * @property {string} [wwwHomepage] The primary Web page.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of Application
   *
   * @returns {object} metadata of Application
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Application',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'objectType',
          clientName: 'objectType'
        },
        uberParent: 'DirectoryObject',
        className: 'Application',
        modelProperties: {
          objectId: {
            required: false,
            readOnly: true,
            serializedName: 'objectId',
            type: {
              name: 'String'
            }
          },
          deletionTimestamp: {
            required: false,
            readOnly: true,
            serializedName: 'deletionTimestamp',
            type: {
              name: 'DateTime'
            }
          },
          objectType: {
            required: true,
            serializedName: 'objectType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          appId: {
            required: false,
            serializedName: 'appId',
            type: {
              name: 'String'
            }
          },
          allowGuestsSignIn: {
            required: false,
            serializedName: 'allowGuestsSignIn',
            type: {
              name: 'Boolean'
            }
          },
          allowPassthroughUsers: {
            required: false,
            serializedName: 'allowPassthroughUsers',
            type: {
              name: 'Boolean'
            }
          },
          appLogoUrl: {
            required: false,
            serializedName: 'appLogoUrl',
            type: {
              name: 'String'
            }
          },
          appRoles: {
            required: false,
            serializedName: 'appRoles',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'AppRoleElementType',
                  type: {
                    name: 'Composite',
                    className: 'AppRole'
                  }
              }
            }
          },
          appPermissions: {
            required: false,
            serializedName: 'appPermissions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          availableToOtherTenants: {
            required: false,
            serializedName: 'availableToOtherTenants',
            type: {
              name: 'Boolean'
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          errorUrl: {
            required: false,
            serializedName: 'errorUrl',
            type: {
              name: 'String'
            }
          },
          groupMembershipClaims: {
            required: false,
            serializedName: 'groupMembershipClaims',
            type: {
              name: 'Object'
            }
          },
          homepage: {
            required: false,
            serializedName: 'homepage',
            type: {
              name: 'String'
            }
          },
          identifierUris: {
            required: false,
            serializedName: 'identifierUris',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          informationalUrls: {
            required: false,
            serializedName: 'informationalUrls',
            type: {
              name: 'Composite',
              className: 'InformationalUrl'
            }
          },
          isDeviceOnlyAuthSupported: {
            required: false,
            serializedName: 'isDeviceOnlyAuthSupported',
            type: {
              name: 'Boolean'
            }
          },
          keyCredentials: {
            required: false,
            serializedName: 'keyCredentials',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'KeyCredentialElementType',
                  type: {
                    name: 'Composite',
                    additionalProperties: {
                      type: {
                        name: 'Dictionary',
                        value: {
                            required: false,
                            serializedName: 'ObjectElementType',
                            type: {
                              name: 'Object'
                            }
                        }
                      }
                    },
                    className: 'KeyCredential'
                  }
              }
            }
          },
          knownClientApplications: {
            required: false,
            serializedName: 'knownClientApplications',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          logoutUrl: {
            required: false,
            serializedName: 'logoutUrl',
            type: {
              name: 'String'
            }
          },
          oauth2AllowImplicitFlow: {
            required: false,
            serializedName: 'oauth2AllowImplicitFlow',
            type: {
              name: 'Boolean'
            }
          },
          oauth2AllowUrlPathMatching: {
            required: false,
            serializedName: 'oauth2AllowUrlPathMatching',
            type: {
              name: 'Boolean'
            }
          },
          oauth2Permissions: {
            required: false,
            serializedName: 'oauth2Permissions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'OAuth2PermissionElementType',
                  type: {
                    name: 'Composite',
                    className: 'OAuth2Permission'
                  }
              }
            }
          },
          oauth2RequirePostResponse: {
            required: false,
            serializedName: 'oauth2RequirePostResponse',
            type: {
              name: 'Boolean'
            }
          },
          orgRestrictions: {
            required: false,
            serializedName: 'orgRestrictions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          optionalClaims: {
            required: false,
            serializedName: 'optionalClaims',
            type: {
              name: 'Composite',
              className: 'OptionalClaims'
            }
          },
          passwordCredentials: {
            required: false,
            serializedName: 'passwordCredentials',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PasswordCredentialElementType',
                  type: {
                    name: 'Composite',
                    additionalProperties: {
                      type: {
                        name: 'Dictionary',
                        value: {
                            required: false,
                            serializedName: 'ObjectElementType',
                            type: {
                              name: 'Object'
                            }
                        }
                      }
                    },
                    className: 'PasswordCredential'
                  }
              }
            }
          },
          preAuthorizedApplications: {
            required: false,
            serializedName: 'preAuthorizedApplications',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PreAuthorizedApplicationElementType',
                  type: {
                    name: 'Composite',
                    className: 'PreAuthorizedApplication'
                  }
              }
            }
          },
          publicClient: {
            required: false,
            serializedName: 'publicClient',
            type: {
              name: 'Boolean'
            }
          },
          publisherDomain: {
            required: false,
            serializedName: 'publisherDomain',
            type: {
              name: 'String'
            }
          },
          replyUrls: {
            required: false,
            serializedName: 'replyUrls',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          requiredResourceAccess: {
            required: false,
            serializedName: 'requiredResourceAccess',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'RequiredResourceAccessElementType',
                  type: {
                    name: 'Composite',
                    additionalProperties: {
                      type: {
                        name: 'Dictionary',
                        value: {
                            required: false,
                            serializedName: 'ObjectElementType',
                            type: {
                              name: 'Object'
                            }
                        }
                      }
                    },
                    className: 'RequiredResourceAccess'
                  }
              }
            }
          },
          samlMetadataUrl: {
            required: false,
            serializedName: 'samlMetadataUrl',
            type: {
              name: 'String'
            }
          },
          signInAudience: {
            required: false,
            serializedName: 'signInAudience',
            type: {
              name: 'String'
            }
          },
          wwwHomepage: {
            required: false,
            serializedName: 'wwwHomepage',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = Application;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Active Directory application information.
 *
 * @extends models['DirectoryObject']
 */
class Application extends models['DirectoryObject'] {
  /**
   * Create a Application.
   * @property {string} [appId] The application ID.
   * @property {array} [appRoles] The collection of application roles that an
   * application may declare. These roles can be assigned to users, groups or
   * service principals.
   * @property {array} [appPermissions] The application permissions.
   * @property {boolean} [availableToOtherTenants] Whether the application is
   * be available to other tenants.
   * @property {string} [displayName] The display name of the application.
   * @property {array} [identifierUris] A collection of URIs for the
   * application.
   * @property {array} [replyUrls] A collection of reply URLs for the
   * application.
   * @property {string} [homepage] The home page of the application.
   * @property {boolean} [oauth2AllowImplicitFlow] Whether to allow implicit
   * grant flow for OAuth2
   * @property {array} [requiredResourceAccess] Specifies resources that this
   * application requires access to and the set of OAuth permission scopes and
   * application roles that it needs under each of those resources. This
   * pre-configuration of required resource access drives the consent
   * experience.
   * @property {array} [keyCredentials] A collection of KeyCredential objects.
   * @property {array} [passwordCredentials] A collection of PasswordCredential
   * objects
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of Application
   *
   * @returns {object} metadata of Application
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Application',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'objectType',
          clientName: 'objectType'
        },
        uberParent: 'DirectoryObject',
        className: 'Application',
        modelProperties: {
          objectId: {
            required: false,
            readOnly: true,
            serializedName: 'objectId',
            type: {
              name: 'String'
            }
          },
          deletionTimestamp: {
            required: false,
            readOnly: true,
            serializedName: 'deletionTimestamp',
            type: {
              name: 'DateTime'
            }
          },
          objectType: {
            required: true,
            serializedName: 'objectType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          appId: {
            required: false,
            serializedName: 'appId',
            type: {
              name: 'String'
            }
          },
          appRoles: {
            required: false,
            serializedName: 'appRoles',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'AppRoleElementType',
                  type: {
                    name: 'Composite',
                    className: 'AppRole'
                  }
              }
            }
          },
          appPermissions: {
            required: false,
            serializedName: 'appPermissions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          availableToOtherTenants: {
            required: false,
            serializedName: 'availableToOtherTenants',
            type: {
              name: 'Boolean'
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          identifierUris: {
            required: false,
            serializedName: 'identifierUris',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          replyUrls: {
            required: false,
            serializedName: 'replyUrls',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          homepage: {
            required: false,
            serializedName: 'homepage',
            type: {
              name: 'String'
            }
          },
          oauth2AllowImplicitFlow: {
            required: false,
            serializedName: 'oauth2AllowImplicitFlow',
            type: {
              name: 'Boolean'
            }
          },
          requiredResourceAccess: {
            required: false,
            serializedName: 'requiredResourceAccess',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'RequiredResourceAccessElementType',
                  type: {
                    name: 'Composite',
                    additionalProperties: {
                      type: {
                        name: 'Dictionary',
                        value: {
                            required: false,
                            serializedName: 'ObjectElementType',
                            type: {
                              name: 'Object'
                            }
                        }
                      }
                    },
                    className: 'RequiredResourceAccess'
                  }
              }
            }
          },
          keyCredentials: {
            required: false,
            serializedName: 'keyCredentials',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'KeyCredentialElementType',
                  type: {
                    name: 'Composite',
                    additionalProperties: {
                      type: {
                        name: 'Dictionary',
                        value: {
                            required: false,
                            serializedName: 'ObjectElementType',
                            type: {
                              name: 'Object'
                            }
                        }
                      }
                    },
                    className: 'KeyCredential'
                  }
              }
            }
          },
          passwordCredentials: {
            required: false,
            serializedName: 'passwordCredentials',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PasswordCredentialElementType',
                  type: {
                    name: 'Composite',
                    additionalProperties: {
                      type: {
                        name: 'Dictionary',
                        value: {
                            required: false,
                            serializedName: 'ObjectElementType',
                            type: {
                              name: 'Object'
                            }
                        }
                      }
                    },
                    className: 'PasswordCredential'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = Application;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Active Directory service principal information.
 *
 * @extends models['DirectoryObject']
 */
class ServicePrincipal extends models['DirectoryObject'] {
  /**
   * Create a ServicePrincipal.
   * @property {string} [accountEnabled] whether or not the service principal
   * account is enabled
   * @property {array} [alternativeNames] alterative names
   * @property {string} [appDisplayName] The display name exposed by the
   * associated application.
   * @property {string} [appId] The application ID.
   * @property {string} [appOwnerTenantId]
   * @property {boolean} [appRoleAssignmentRequired] Specifies whether an
   * AppRoleAssignment to a user or group is required before Azure AD will
   * issue a user or access token to the application.
   * @property {array} [appRoles] The collection of application roles that an
   * application may declare. These roles can be assigned to users, groups or
   * service principals.
   * @property {string} [displayName] The display name of the service
   * principal.
   * @property {string} [errorUrl] A URL provided by the author of the
   * associated application to report errors when using the application.
   * @property {string} [homepage] The URL to the homepage of the associated
   * application.
   * @property {array} [keyCredentials] The collection of key credentials
   * associated with the service principal.
   * @property {string} [logoutUrl] A URL provided by the author of the
   * associated application to logout
   * @property {array} [oauth2Permissions] The OAuth 2.0 permissions exposed by
   * the associated application.
   * @property {array} [passwordCredentials] The collection of password
   * credentials associated with the service principal.
   * @property {string} [preferredTokenSigningKeyThumbprint] The thumbprint of
   * preferred certificate to sign the token
   * @property {string} [publisherName] The publisher's name of the associated
   * application
   * @property {array} [replyUrls] The URLs that user tokens are sent to for
   * sign in with the associated application.  The redirect URIs that the oAuth
   * 2.0 authorization code and access tokens are sent to for the associated
   * application.
   * @property {string} [samlMetadataUrl] The URL to the SAML metadata of the
   * associated application
   * @property {array} [servicePrincipalNames] A collection of service
   * principal names.
   * @property {string} [servicePrincipalType] the type of the service
   * principal
   * @property {array} [tags] Optional list of tags that you can apply to your
   * service principals. Not nullable.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ServicePrincipal
   *
   * @returns {object} metadata of ServicePrincipal
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ServicePrincipal',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'objectType',
          clientName: 'objectType'
        },
        uberParent: 'DirectoryObject',
        className: 'ServicePrincipal',
        modelProperties: {
          objectId: {
            required: false,
            readOnly: true,
            serializedName: 'objectId',
            type: {
              name: 'String'
            }
          },
          deletionTimestamp: {
            required: false,
            readOnly: true,
            serializedName: 'deletionTimestamp',
            type: {
              name: 'DateTime'
            }
          },
          objectType: {
            required: true,
            serializedName: 'objectType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          accountEnabled: {
            required: false,
            serializedName: 'accountEnabled',
            type: {
              name: 'String'
            }
          },
          alternativeNames: {
            required: false,
            serializedName: 'alternativeNames',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          appDisplayName: {
            required: false,
            readOnly: true,
            serializedName: 'appDisplayName',
            type: {
              name: 'String'
            }
          },
          appId: {
            required: false,
            serializedName: 'appId',
            type: {
              name: 'String'
            }
          },
          appOwnerTenantId: {
            required: false,
            readOnly: true,
            serializedName: 'appOwnerTenantId',
            type: {
              name: 'String'
            }
          },
          appRoleAssignmentRequired: {
            required: false,
            serializedName: 'appRoleAssignmentRequired',
            type: {
              name: 'Boolean'
            }
          },
          appRoles: {
            required: false,
            serializedName: 'appRoles',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'AppRoleElementType',
                  type: {
                    name: 'Composite',
                    className: 'AppRole'
                  }
              }
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          errorUrl: {
            required: false,
            serializedName: 'errorUrl',
            type: {
              name: 'String'
            }
          },
          homepage: {
            required: false,
            serializedName: 'homepage',
            type: {
              name: 'String'
            }
          },
          keyCredentials: {
            required: false,
            serializedName: 'keyCredentials',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'KeyCredentialElementType',
                  type: {
                    name: 'Composite',
                    additionalProperties: {
                      type: {
                        name: 'Dictionary',
                        value: {
                            required: false,
                            serializedName: 'ObjectElementType',
                            type: {
                              name: 'Object'
                            }
                        }
                      }
                    },
                    className: 'KeyCredential'
                  }
              }
            }
          },
          logoutUrl: {
            required: false,
            serializedName: 'logoutUrl',
            type: {
              name: 'String'
            }
          },
          oauth2Permissions: {
            required: false,
            readOnly: true,
            serializedName: 'oauth2Permissions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'OAuth2PermissionElementType',
                  type: {
                    name: 'Composite',
                    className: 'OAuth2Permission'
                  }
              }
            }
          },
          passwordCredentials: {
            required: false,
            serializedName: 'passwordCredentials',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PasswordCredentialElementType',
                  type: {
                    name: 'Composite',
                    additionalProperties: {
                      type: {
                        name: 'Dictionary',
                        value: {
                            required: false,
                            serializedName: 'ObjectElementType',
                            type: {
                              name: 'Object'
                            }
                        }
                      }
                    },
                    className: 'PasswordCredential'
                  }
              }
            }
          },
          preferredTokenSigningKeyThumbprint: {
            required: false,
            serializedName: 'preferredTokenSigningKeyThumbprint',
            type: {
              name: 'String'
            }
          },
          publisherName: {
            required: false,
            serializedName: 'publisherName',
            type: {
              name: 'String'
            }
          },
          replyUrls: {
            required: false,
            serializedName: 'replyUrls',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          samlMetadataUrl: {
            required: false,
            serializedName: 'samlMetadataUrl',
            type: {
              name: 'String'
            }
          },
          servicePrincipalNames: {
            required: false,
            serializedName: 'servicePrincipalNames',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          servicePrincipalType: {
            required: false,
            serializedName: 'servicePrincipalType',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = ServicePrincipal;

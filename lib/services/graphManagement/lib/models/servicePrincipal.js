/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var util = require('util');

/**
 * @class
 * Initializes a new instance of the ServicePrincipal class.
 * @constructor
 * Active Directory service principal information
 *
 * @member {string} [objectId] Gets or sets object Id
 * 
 * @member {string} [objectType] Gets or sets object type
 * 
 * @member {string} [displayName] Gets or sets service principal display name
 * 
 * @member {string} [appId] Gets or sets app id
 * 
 * @member {array} [servicePrincipalNames] Gets or sets the list of names.
 * 
 */
function ServicePrincipal() {
}

/**
 * Defines the metadata of ServicePrincipal
 *
 * @returns {object} metadata of ServicePrincipal
 *
 */
ServicePrincipal.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'ServicePrincipal',
    type: {
      name: 'Composite',
      className: 'ServicePrincipal',
      modelProperties: {
        objectId: {
          required: false,
          serializedName: 'objectId',
          type: {
            name: 'String'
          }
        },
        objectType: {
          required: false,
          serializedName: 'objectType',
          type: {
            name: 'String'
          }
        },
        displayName: {
          required: false,
          serializedName: 'displayName',
          type: {
            name: 'String'
          }
        },
        appId: {
          required: false,
          serializedName: 'appId',
          type: {
            name: 'String'
          }
        },
        servicePrincipalNames: {
          required: false,
          serializedName: 'servicePrincipalNames',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        }
      }
    }
  };
};

module.exports = ServicePrincipal;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a Permissions.
 */
class Permissions {
  /**
   * Create a Permissions.
   * @property {string} [odatatype]
   * Microsoft.DirectoryServices.OAuth2PermissionGrant
   * @property {string} [clientId] The objectId of the Service Principal
   * associated with the app
   * @property {string} [consentType] Typically set to AllPrincipals
   * @property {object} [principalId] Set to null if AllPrincipals is set
   * @property {string} [resourceId] Service Principal Id of the resource you
   * want to grant
   * @property {string} [scope] Typically set to user_impersonation
   * @property {string} [startTime] Start time for TTL
   * @property {string} [expiryTime] Expiry time for TTL
   */
  constructor() {
  }

  /**
   * Defines the metadata of Permissions
   *
   * @returns {object} metadata of Permissions
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Permissions',
      type: {
        name: 'Composite',
        className: 'Permissions',
        modelProperties: {
          odatatype: {
            required: false,
            serializedName: 'odata\\.type',
            type: {
              name: 'String'
            }
          },
          clientId: {
            required: false,
            serializedName: 'clientId',
            type: {
              name: 'String'
            }
          },
          consentType: {
            required: false,
            serializedName: 'consentType',
            type: {
              name: 'String'
            }
          },
          principalId: {
            required: false,
            serializedName: 'principalId',
            type: {
              name: 'Object'
            }
          },
          resourceId: {
            required: false,
            serializedName: 'resourceId',
            type: {
              name: 'String'
            }
          },
          scope: {
            required: false,
            serializedName: 'scope',
            type: {
              name: 'String'
            }
          },
          startTime: {
            required: false,
            serializedName: 'startTime',
            type: {
              name: 'String'
            }
          },
          expiryTime: {
            required: false,
            serializedName: 'expiryTime',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = Permissions;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * HANA instance info on Azure (ARM properties and HANA properties)
 *
 * @extends models['Resource']
 */
class HanaInstance extends models['Resource'] {
  /**
   * Create a HanaInstance.
   * @member {object} [hardwareProfile] Specifies the hardware settings for the
   * HANA instance.
   * @member {string} [hardwareProfile.hardwareType] Name of the hardware type
   * (vendor and/or thrie product name). Possible values include: 'Cisco_UCS'
   * @member {string} [hardwareProfile.hanaInstanceSize] Specifies the HANA
   * instance SKU. Possible values include: 'S72m', 'S144m', 'S72', 'S144',
   * 'S192', 'S192m'
   * @member {object} [storageProfile] Specifies the storage settings for the
   * HANA instance disks.
   * @member {string} [storageProfile.nfsIpAddress] IP Address to connect to
   * storage.
   * @member {array} [storageProfile.osDisks] Specifies information about the
   * operating system disk used by the hana instance.
   * @member {object} [osProfile] Specifies the operating system settings for
   * the HANA instance.
   * @member {string} [osProfile.computerName] Specifies the host OS name of
   * the HANA instance.
   * @member {string} [osProfile.osType] This property allows you to specify
   * the type of the OS.
   * @member {string} [osProfile.version] Specifies version of operating
   * system.
   * @member {object} [networkProfile] Specifies the network settings for the
   * HANA instance.
   * @member {array} [networkProfile.networkInterfaces] Specifies the network
   * interfaces for the HANA instance.
   * @member {string} [networkProfile.circuitId] Specifies the circuit id for
   * connecting to express route.
   * @member {string} [hanaInstanceId] Specifies the HANA instance unique ID.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of HanaInstance
   *
   * @returns {object} metadata of HanaInstance
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'HanaInstance',
      type: {
        name: 'Composite',
        className: 'HanaInstance',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            readOnly: true,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            readOnly: true,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          hardwareProfile: {
            required: false,
            serializedName: 'properties.hardwareProfile',
            type: {
              name: 'Composite',
              className: 'HardwareProfile'
            }
          },
          storageProfile: {
            required: false,
            serializedName: 'properties.storageProfile',
            type: {
              name: 'Composite',
              className: 'StorageProfile'
            }
          },
          osProfile: {
            required: false,
            serializedName: 'properties.osProfile',
            type: {
              name: 'Composite',
              className: 'OSProfile'
            }
          },
          networkProfile: {
            required: false,
            serializedName: 'properties.networkProfile',
            type: {
              name: 'Composite',
              className: 'NetworkProfile'
            }
          },
          hanaInstanceId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.hanaInstanceId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = HanaInstance;

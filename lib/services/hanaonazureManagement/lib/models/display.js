/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Detailed HANA operation information
 *
 */
class Display {
  /**
   * Create a Display.
   * @member {string} [provider] The localized friendly form of the resource
   * provider name. This form is also expected to include the publisher/company
   * responsible. Use Title Casing. Begin with “Microsoft” for 1st party
   * services.
   * @member {string} [resource] The localized friendly form of the resource
   * type related to this action/operation. This form should match the public
   * documentation for the resource provider. Use Title Casing. For examples,
   * refer to the “name” section.
   * @member {string} [operation] The localized friendly name for the operation
   * as shown to the user. This name should be concise (to fit in drop downs),
   * but clear (self-documenting). Use Title Casing and include the
   * entity/resource to which it applies.
   * @member {string} [description] The localized friendly description for the
   * operation as shown to the user. This description should be thorough, yet
   * concise. It will be used in tool-tips and detailed views.
   * @member {string} [origin] The intended executor of the operation; governs
   * the display of the operation in the RBAC UX and the audit logs UX. Default
   * value is 'user,system'
   */
  constructor() {
  }

  /**
   * Defines the metadata of Display
   *
   * @returns {object} metadata of Display
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Display',
      type: {
        name: 'Composite',
        className: 'Display',
        modelProperties: {
          provider: {
            required: false,
            readOnly: true,
            serializedName: 'provider',
            type: {
              name: 'String'
            }
          },
          resource: {
            required: false,
            readOnly: true,
            serializedName: 'resource',
            type: {
              name: 'String'
            }
          },
          operation: {
            required: false,
            readOnly: true,
            serializedName: 'operation',
            type: {
              name: 'String'
            }
          },
          description: {
            required: false,
            readOnly: true,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          origin: {
            required: false,
            readOnly: true,
            serializedName: 'origin',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = Display;

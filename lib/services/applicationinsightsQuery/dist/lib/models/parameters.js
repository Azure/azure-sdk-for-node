"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const msRest = require("ms-rest-js");
exports.acceptLanguage = {
    parameterPath: "acceptLanguage",
    mapper: {
        serializedName: "accept-language",
        defaultValue: 'en-US',
        type: {
            name: "String"
        }
    }
};
exports.aggregation = {
    parameterPath: [
        "options",
        "aggregation"
    ],
    mapper: {
        serializedName: "aggregation",
        constraints: {
            MinItems: 1
        },
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Enum",
                    allowedValues: [
                        "min",
                        "max",
                        "avg",
                        "sum",
                        "count",
                        "unique"
                    ]
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
exports.appId = {
    parameterPath: "appId",
    mapper: {
        required: true,
        serializedName: "appId",
        type: {
            name: "String"
        }
    }
};
exports.apply = {
    parameterPath: [
        "options",
        "apply"
    ],
    mapper: {
        serializedName: "$apply",
        type: {
            name: "String"
        }
    }
};
exports.count = {
    parameterPath: [
        "options",
        "count"
    ],
    mapper: {
        serializedName: "$count",
        type: {
            name: "Boolean"
        }
    }
};
exports.eventId = {
    parameterPath: "eventId",
    mapper: {
        required: true,
        serializedName: "eventId",
        type: {
            name: "String"
        }
    }
};
exports.eventType = {
    parameterPath: "eventType",
    mapper: {
        required: true,
        serializedName: "eventType",
        type: {
            name: "String"
        }
    }
};
exports.filter0 = {
    parameterPath: [
        "options",
        "filter"
    ],
    mapper: {
        serializedName: "filter",
        type: {
            name: "String"
        }
    }
};
exports.filter1 = {
    parameterPath: [
        "options",
        "filter"
    ],
    mapper: {
        serializedName: "$filter",
        type: {
            name: "String"
        }
    }
};
exports.format = {
    parameterPath: [
        "options",
        "format"
    ],
    mapper: {
        serializedName: "$format",
        type: {
            name: "String"
        }
    }
};
exports.interval = {
    parameterPath: [
        "options",
        "interval"
    ],
    mapper: {
        serializedName: "interval",
        type: {
            name: "TimeSpan"
        }
    }
};
exports.metricId = {
    parameterPath: "metricId",
    mapper: {
        required: true,
        serializedName: "metricId",
        type: {
            name: "String"
        }
    }
};
exports.orderby0 = {
    parameterPath: [
        "options",
        "orderby"
    ],
    mapper: {
        serializedName: "orderby",
        type: {
            name: "String"
        }
    }
};
exports.orderby1 = {
    parameterPath: [
        "options",
        "orderby"
    ],
    mapper: {
        serializedName: "$orderby",
        type: {
            name: "String"
        }
    }
};
exports.search = {
    parameterPath: [
        "options",
        "search"
    ],
    mapper: {
        serializedName: "$search",
        type: {
            name: "String"
        }
    }
};
exports.segment = {
    parameterPath: [
        "options",
        "segment"
    ],
    mapper: {
        serializedName: "segment",
        constraints: {
            MinItems: 1
        },
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "String"
                }
            }
        }
    },
    collectionFormat: msRest.QueryCollectionFormat.Csv
};
exports.select = {
    parameterPath: [
        "options",
        "select"
    ],
    mapper: {
        serializedName: "$select",
        type: {
            name: "String"
        }
    }
};
exports.skip = {
    parameterPath: [
        "options",
        "skip"
    ],
    mapper: {
        serializedName: "$skip",
        type: {
            name: "Number"
        }
    }
};
exports.timespan = {
    parameterPath: [
        "options",
        "timespan"
    ],
    mapper: {
        serializedName: "timespan",
        type: {
            name: "String"
        }
    }
};
exports.top0 = {
    parameterPath: [
        "options",
        "top"
    ],
    mapper: {
        serializedName: "top",
        type: {
            name: "Number"
        }
    }
};
exports.top1 = {
    parameterPath: [
        "options",
        "top"
    ],
    mapper: {
        serializedName: "$top",
        type: {
            name: "Number"
        }
    }
};
//# sourceMappingURL=parameters.js.map
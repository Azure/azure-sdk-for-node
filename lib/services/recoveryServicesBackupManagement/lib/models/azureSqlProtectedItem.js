/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Azure SQL workload-specific backup item.
 *
 * @extends models['ProtectedItem']
 */
class AzureSqlProtectedItem extends models['ProtectedItem'] {
  /**
   * Create a AzureSqlProtectedItem.
   * @member {string} [protectedItemDataId] Internal ID of a backup item. Used
   * by Azure SQL Backup engine to contact Recovery Services.
   * @member {string} [protectionState] Backup state of the backed up item.
   * Possible values include: 'Invalid', 'IRPending', 'Protected',
   * 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   * @member {object} [extendedInfo] Additional information for this backup
   * item.
   * @member {date} [extendedInfo.oldestRecoveryPoint] The oldest backup copy
   * available for this item in the service.
   * @member {number} [extendedInfo.recoveryPointCount] Number of available
   * backup copies associated with this backup item.
   * @member {string} [extendedInfo.policyState] State of the backup policy
   * associated with this backup item.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of AzureSqlProtectedItem
   *
   * @returns {object} metadata of AzureSqlProtectedItem
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Microsoft.Sql/servers/databases',
      type: {
        name: 'Composite',
        className: 'AzureSqlProtectedItem',
        modelProperties: {
          backupManagementType: {
            required: false,
            serializedName: 'backupManagementType',
            type: {
              name: 'String'
            }
          },
          workloadType: {
            required: false,
            serializedName: 'workloadType',
            type: {
              name: 'String'
            }
          },
          containerName: {
            required: false,
            serializedName: 'containerName',
            type: {
              name: 'String'
            }
          },
          sourceResourceId: {
            required: false,
            serializedName: 'sourceResourceId',
            type: {
              name: 'String'
            }
          },
          policyId: {
            required: false,
            serializedName: 'policyId',
            type: {
              name: 'String'
            }
          },
          lastRecoveryPoint: {
            required: false,
            serializedName: 'lastRecoveryPoint',
            type: {
              name: 'DateTime'
            }
          },
          protectedItemType: {
            required: true,
            serializedName: 'protectedItemType',
            type: {
              name: 'String'
            }
          },
          protectedItemDataId: {
            required: false,
            serializedName: 'protectedItemDataId',
            type: {
              name: 'String'
            }
          },
          protectionState: {
            required: false,
            serializedName: 'protectionState',
            type: {
              name: 'String'
            }
          },
          extendedInfo: {
            required: false,
            serializedName: 'extendedInfo',
            type: {
              name: 'Composite',
              className: 'AzureSqlProtectedItemExtendedInfo'
            }
          }
        }
      }
    };
  }
}

module.exports = AzureSqlProtectedItem;

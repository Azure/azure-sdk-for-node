/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Restore files/folders from a backup copy of IaaS VM.
 *
 * @extends models['ILRRequest']
 */
class IaasVMILRRegistrationRequest extends models['ILRRequest'] {
  /**
   * Create a IaasVMILRRegistrationRequest.
   * @property {string} [recoveryPointId] ID of the IaaS VM backup copy from
   * where the files/folders have to be restored.
   * @property {string} [virtualMachineId] Fully qualified ARM ID of the
   * virtual machine whose the files / folders have to be restored.
   * @property {string} [initiatorName] iSCSI initiator name.
   * @property {boolean} [renewExistingRegistration] Whether to renew existing
   * registration with the iSCSI server.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of IaasVMILRRegistrationRequest
   *
   * @returns {object} metadata of IaasVMILRRegistrationRequest
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IaasVMILRRegistrationRequest',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'objectType',
          clientName: 'objectType'
        },
        uberParent: 'ILRRequest',
        className: 'IaasVMILRRegistrationRequest',
        modelProperties: {
          objectType: {
            required: true,
            serializedName: 'objectType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          recoveryPointId: {
            required: false,
            serializedName: 'recoveryPointId',
            type: {
              name: 'String'
            }
          },
          virtualMachineId: {
            required: false,
            serializedName: 'virtualMachineId',
            type: {
              name: 'String'
            }
          },
          initiatorName: {
            required: false,
            serializedName: 'initiatorName',
            type: {
              name: 'String'
            }
          },
          renewExistingRegistration: {
            required: false,
            serializedName: 'renewExistingRegistration',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = IaasVMILRRegistrationRequest;

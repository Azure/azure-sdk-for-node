/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure";
import * as moment from "moment";

export {

  BaseResource,
  CloudError
};

/**
 * Base class for feature request
 */
export interface FeatureSupportRequest {
  /**
   * Polymorphic Discriminator
   */
  featureType: string;
}

/**
 * Azure backup goal feature specific request.
 */
export interface AzureBackupGoalFeatureSupportRequest extends FeatureSupportRequest {
}

/**
 * Additional information about Azure File Share backup item.
 */
export interface AzureFileshareProtectedItemExtendedInfo {
  /**
   * The oldest backup copy available for this item in the service.
   */
  oldestRecoveryPoint?: Date;
  /**
   * Number of available backup copies associated with this backup item.
   */
  recoveryPointCount?: number;
  /**
   * Indicates consistency of policy object and policy applied to this backup item.
   */
  policyState?: string;
}

/**
 * Base class for backup items.
 */
export interface ProtectedItem {
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: string;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase'
   */
  workloadType?: string;
  /**
   * Unique name of container
   */
  containerName?: string;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Timestamp when the last (latest) backup copy was created for this backup item.
   */
  lastRecoveryPoint?: Date;
  /**
   * Name of the backup set the backup item belongs to
   */
  backupSetName?: string;
  /**
   * Create mode to indicate recovery of existing soft deleted data source or creation of new data
   * source. Possible values include: 'Invalid', 'Default', 'Recover'
   */
  createMode?: string;
  /**
   * Polymorphic Discriminator
   */
  protectedItemType: string;
}

/**
 * Azure File Share workload-specific backup item.
 */
export interface AzureFileshareProtectedItem extends ProtectedItem {
  /**
   * Friendly name of the fileshare represented by this backup item.
   */
  friendlyName?: string;
  /**
   * Backup status of this backup item.
   */
  protectionStatus?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: string;
  /**
   * backups running status for this backup item. Possible values include: 'Passed',
   * 'ActionRequired', 'ActionSuggested', 'Invalid'
   */
  healthStatus?: string;
  /**
   * Last backup operation status. Possible values: Healthy, Unhealthy.
   */
  lastBackupStatus?: string;
  /**
   * Timestamp of the last backup operation on this backup item.
   */
  lastBackupTime?: Date;
  /**
   * Additional information with this backup item.
   */
  extendedInfo?: AzureFileshareProtectedItemExtendedInfo;
}

/**
 * Base class for backup schedule.
 */
export interface SchedulePolicy {
  /**
   * Polymorphic Discriminator
   */
  schedulePolicyType: string;
}

/**
 * Base class for retention policy.
 */
export interface RetentionPolicy {
  /**
   * Polymorphic Discriminator
   */
  retentionPolicyType: string;
}

/**
 * Base class for backup policy. Workload-specific backup policies are derived from this class.
 */
export interface ProtectionPolicy {
  /**
   * Number of items associated with this policy.
   */
  protectedItemsCount?: number;
  /**
   * Polymorphic Discriminator
   */
  backupManagementType: string;
}

/**
 * AzureStorage backup policy.
 */
export interface AzureFileShareProtectionPolicy extends ProtectionPolicy {
  /**
   * Type of workload for the backup management. Possible values include: 'Invalid', 'VM',
   * 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
   * 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase'
   */
  workLoadType?: string;
  /**
   * Backup schedule specified as part of backup policy.
   */
  schedulePolicy?: SchedulePolicy;
  /**
   * Retention policy with the details on backup copy retention ranges.
   */
  retentionPolicy?: RetentionPolicy;
  /**
   * TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
   */
  timeZone?: string;
}

/**
 * Restore file specs like file path, type and target folder path info.
 */
export interface RestoreFileSpecs {
  /**
   * Source File/Folder path
   */
  path?: string;
  /**
   * Indicates what the Path variable stands for
   */
  fileSpecType?: string;
  /**
   * Destination folder path in target FileShare
   */
  targetFolderPath?: string;
}

/**
 * Target Azure File Share Info.
 */
export interface TargetAFSRestoreInfo {
  /**
   * File share name
   */
  name?: string;
  /**
   * Target file share resource ARM ID
   */
  targetResourceId?: string;
}

/**
 * Base class for restore request. Workload-specific restore requests are derived from this class.
 */
export interface RestoreRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: string;
}

/**
 * AzureFileShare Restore Request
 */
export interface AzureFileShareRestoreRequest extends RestoreRequest {
  /**
   * Type of this recovery. Possible values include: 'Invalid', 'OriginalLocation',
   * 'AlternateLocation', 'RestoreDisks'
   */
  recoveryType?: string;
  /**
   * Source storage account ARM Id
   */
  sourceResourceId?: string;
  /**
   * Options to resolve copy conflicts. Possible values include: 'Invalid', 'CreateCopy', 'Skip',
   * 'Overwrite', 'FailOnConflict'
   */
  copyOptions?: string;
  /**
   * Restore Type (FullShareRestore or ItemLevelRestore). Possible values include: 'Invalid',
   * 'FullShareRestore', 'ItemLevelRestore'
   */
  restoreRequestType?: string;
  /**
   * List of Source Files/Folders(which need to recover) and TargetFolderPath details
   */
  restoreFileSpecs?: RestoreFileSpecs[];
  /**
   * Target File Share Details
   */
  targetDetails?: TargetAFSRestoreInfo;
}

/**
 * IaaS VM workload-specific backup item.
 */
export interface AzureIaaSVMProtectedItem extends ProtectedItem {
  /**
   * Friendly name of the VM represented by this backup item.
   */
  friendlyName?: string;
  /**
   * Fully qualified ARM ID of the virtual machine represented by this item.
   */
  virtualMachineId?: string;
  /**
   * Backup status of this backup item.
   */
  protectionStatus?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: string;
  /**
   * Health status of protected item. Possible values include: 'Passed', 'ActionRequired',
   * 'ActionSuggested', 'Invalid'
   */
  healthStatus?: string;
  /**
   * Health details on this backup item.
   */
  healthDetails?: AzureIaaSVMHealthDetails[];
  /**
   * Last backup operation status.
   */
  lastBackupStatus?: string;
  /**
   * Timestamp of the last backup operation on this backup item.
   */
  lastBackupTime?: Date;
  /**
   * Data ID of the protected item.
   */
  protectedItemDataId?: string;
  /**
   * Additional information for this backup item.
   */
  extendedInfo?: AzureIaaSVMProtectedItemExtendedInfo;
}

/**
 * IaaS VM workload-specific backup item representing the Classic Compute VM.
 */
export interface AzureIaaSClassicComputeVMProtectedItem extends AzureIaaSVMProtectedItem {
}

/**
 * IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
 */
export interface AzureIaaSComputeVMProtectedItem extends AzureIaaSVMProtectedItem {
}

/**
 * Azure IaaS VM workload-specific error information.
 */
export interface AzureIaaSVMErrorInfo {
  /**
   * Error code.
   */
  errorCode?: number;
  /**
   * Title: Typically, the entity that the error pertains to.
   */
  errorTitle?: string;
  /**
   * Localized error string.
   */
  errorString?: string;
  /**
   * List of localized recommendations for above error code.
   */
  recommendations?: string[];
}

/**
 * Azure IaaS VM workload-specific Health Details.
 */
export interface AzureIaaSVMHealthDetails {
  /**
   * Health Code
   */
  code?: number;
  /**
   * Health Title
   */
  title?: string;
  /**
   * Health Message
   */
  message?: string;
  /**
   * Health Recommended Actions
   */
  recommendations?: string[];
}

/**
 * Azure IaaS VM workload-specific job task details.
 */
export interface AzureIaaSVMJobTaskDetails {
  /**
   * The task display name.
   */
  taskId?: string;
  /**
   * The start time.
   */
  startTime?: Date;
  /**
   * The end time.
   */
  endTime?: Date;
  /**
   * The instanceId.
   */
  instanceId?: string;
  /**
   * Time elapsed for task.
   */
  duration?: moment.Duration;
  /**
   * The status.
   */
  status?: string;
  /**
   * Progress of the task.
   */
  progressPercentage?: number;
  /**
   * Details about execution of the task.
   * eg: number of bytes transferred etc
   */
  taskExecutionDetails?: string;
}

/**
 * Azure IaaS VM workload-specific additional information for job.
 */
export interface AzureIaaSVMJobExtendedInfo {
  /**
   * List of tasks associated with this job.
   */
  tasksList?: AzureIaaSVMJobTaskDetails[];
  /**
   * Job properties.
   */
  propertyBag?: { [propertyName: string]: string };
  /**
   * Job internal properties.
   */
  internalPropertyBag?: { [propertyName: string]: string };
  /**
   * Indicates progress of the job. Null if it has not started or completed.
   */
  progressPercentage?: number;
  /**
   * Time remaining for execution of this job.
   */
  estimatedRemainingDuration?: string;
  /**
   * Non localized error message on job execution.
   */
  dynamicErrorMessage?: string;
}

/**
 * Defines workload agnostic properties for a job.
 */
export interface Job {
  /**
   * Friendly name of the entity on which the current job is executing.
   */
  entityFriendlyName?: string;
  /**
   * Backup management type to execute the current job. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: string;
  /**
   * The operation name.
   */
  operation?: string;
  /**
   * Job status.
   */
  status?: string;
  /**
   * The start time.
   */
  startTime?: Date;
  /**
   * The end time.
   */
  endTime?: Date;
  /**
   * ActivityId of job.
   */
  activityId?: string;
  /**
   * Polymorphic Discriminator
   */
  jobType: string;
}

/**
 * Azure IaaS VM workload-specific job object.
 */
export interface AzureIaaSVMJob extends Job {
  /**
   * Time elapsed during the execution of this job.
   */
  duration?: moment.Duration;
  /**
   * Gets or sets the state/actions applicable on this job like cancel/retry.
   */
  actionsInfo?: string[];
  /**
   * Error details on execution of this job.
   */
  errorDetails?: AzureIaaSVMErrorInfo[];
  /**
   * Specifies whether the backup item is a Classic or an Azure Resource Manager VM.
   */
  virtualMachineVersion?: string;
  /**
   * Additional information for this job.
   */
  extendedInfo?: AzureIaaSVMJobExtendedInfo;
}

/**
 * Additional information on Azure IaaS VM specific backup item.
 */
export interface AzureIaaSVMProtectedItemExtendedInfo {
  /**
   * The oldest backup copy available for this backup item.
   */
  oldestRecoveryPoint?: Date;
  /**
   * Number of backup copies available for this backup item.
   */
  recoveryPointCount?: number;
  /**
   * Specifies if backup policy associated with the backup item is inconsistent.
   */
  policyInconsistent?: boolean;
}

/**
 * IaaS VM workload-specific backup policy.
 */
export interface AzureIaaSVMProtectionPolicy extends ProtectionPolicy {
  /**
   * Backup schedule specified as part of backup policy.
   */
  schedulePolicy?: SchedulePolicy;
  /**
   * Retention policy with the details on backup copy retention ranges.
   */
  retentionPolicy?: RetentionPolicy;
  /**
   * Instant RP retention policy range in days
   */
  instantRpRetentionRangeInDays?: number;
  /**
   * TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
   */
  timeZone?: string;
}

/**
 * Base class for backup ProtectionIntent.
 */
export interface ProtectionIntent {
  /**
   * Type of backup management for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: string;
  /**
   * ARM ID of the resource to be backed up.
   */
  sourceResourceId?: string;
  /**
   * ID of the item which is getting protected, In case of Azure Vm , it is ProtectedItemId
   */
  itemId?: string;
  /**
   * ID of the backup policy with which this item is backed up.
   */
  policyId?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'NotProtected',
   * 'Protecting', 'Protected', 'ProtectionFailed'
   */
  protectionState?: string;
  /**
   * Polymorphic Discriminator
   */
  protectionIntentItemType: string;
}

/**
 * Azure Recovery Services Vault specific protection intent item.
 */
export interface AzureRecoveryServiceVaultProtectionIntent extends ProtectionIntent {
}

/**
 * IaaS VM specific backup protection intent item.
 */
export interface AzureResourceProtectionIntent extends ProtectionIntent {
  /**
   * Friendly name of the VM represented by this backup item.
   */
  friendlyName?: string;
}

/**
 * Additional information on Azure Sql specific protected item.
 */
export interface AzureSqlProtectedItemExtendedInfo {
  /**
   * The oldest backup copy available for this item in the service.
   */
  oldestRecoveryPoint?: Date;
  /**
   * Number of available backup copies associated with this backup item.
   */
  recoveryPointCount?: number;
  /**
   * State of the backup policy associated with this backup item.
   */
  policyState?: string;
}

/**
 * Azure SQL workload-specific backup item.
 */
export interface AzureSqlProtectedItem extends ProtectedItem {
  /**
   * Internal ID of a backup item. Used by Azure SQL Backup engine to contact Recovery Services.
   */
  protectedItemDataId?: string;
  /**
   * Backup state of the backed up item. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: string;
  /**
   * Additional information for this backup item.
   */
  extendedInfo?: AzureSqlProtectedItemExtendedInfo;
}

/**
 * Azure SQL workload-specific backup policy.
 */
export interface AzureSqlProtectionPolicy extends ProtectionPolicy {
  /**
   * Retention policy details.
   */
  retentionPolicy?: RetentionPolicy;
}

/**
 * Azure storage specific error information
 */
export interface AzureStorageErrorInfo {
  /**
   * Error code.
   */
  errorCode?: number;
  /**
   * Localized error string.
   */
  errorString?: string;
  /**
   * List of localized recommendations for above error code.
   */
  recommendations?: string[];
}

/**
 * Azure storage workload specific job task details.
 */
export interface AzureStorageJobTaskDetails {
  /**
   * The task display name.
   */
  taskId?: string;
  /**
   * The status.
   */
  status?: string;
}

/**
 * Azure Storage workload-specific additional information for job.
 */
export interface AzureStorageJobExtendedInfo {
  /**
   * List of tasks for this job
   */
  tasksList?: AzureStorageJobTaskDetails[];
  /**
   * Job properties.
   */
  propertyBag?: { [propertyName: string]: string };
  /**
   * Non localized error message on job execution.
   */
  dynamicErrorMessage?: string;
}

/**
 * Azure storage specific job.
 */
export interface AzureStorageJob extends Job {
  /**
   * Time elapsed during the execution of this job.
   */
  duration?: moment.Duration;
  /**
   * Gets or sets the state/actions applicable on this job like cancel/retry.
   */
  actionsInfo?: string[];
  /**
   * Error details on execution of this job.
   */
  errorDetails?: AzureStorageErrorInfo[];
  /**
   * Specifies friendly name of the storage account.
   */
  storageAccountName?: string;
  /**
   * Specifies whether the Storage account is a Classic or an Azure Resource Manager Storage
   * account.
   */
  storageAccountVersion?: string;
  /**
   * Additional information about the job.
   */
  extendedInfo?: AzureStorageJobExtendedInfo;
}

/**
 * AzureResource(IaaS VM) Specific feature support request
 */
export interface AzureVMResourceFeatureSupportRequest extends FeatureSupportRequest {
  /**
   * Size of the resource: VM size(A/D series etc) in case of IaasVM
   */
  vmSize?: string;
  /**
   * SKUs (Premium/Managed etc) in case of IaasVM
   */
  vmSku?: string;
}

/**
 * Response for feature support requests for Azure IaasVm
 */
export interface AzureVMResourceFeatureSupportResponse {
  /**
   * Support status of feature. Possible values include: 'Invalid', 'Supported', 'DefaultOFF',
   * 'DefaultON', 'NotSupported'
   */
  supportStatus?: string;
}

/**
 * Error Detail class which encapsulates Code, Message and Recommendations.
 */
export interface ErrorDetail {
  /**
   * Error code.
   */
  code?: string;
  /**
   * Error Message related to the Code.
   */
  message?: string;
  /**
   * List of recommendation strings.
   */
  recommendations?: string[];
}

/**
 * Additional information on Azure Workload for SQL specific backup item.
 */
export interface AzureVmWorkloadProtectedItemExtendedInfo {
  /**
   * The oldest backup copy available for this backup item.
   */
  oldestRecoveryPoint?: Date;
  /**
   * Number of backup copies available for this backup item.
   */
  recoveryPointCount?: number;
  /**
   * Indicates consistency of policy object and policy applied to this backup item.
   */
  policyState?: string;
}

/**
 * Azure VM workload-specific protected item.
 */
export interface AzureVmWorkloadProtectedItem extends ProtectedItem {
  /**
   * Friendly name of the DB represented by this backup item.
   */
  friendlyName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Parent name of the DB such as Instance or Availability Group.
   */
  parentName?: string;
  /**
   * Parent type of protected item, example: for a DB, standalone server or distributed
   */
  parentType?: string;
  /**
   * Backup status of this backup item.
   */
  protectionStatus?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: string;
  /**
   * Last backup operation status. Possible values: Healthy, Unhealthy. Possible values include:
   * 'Invalid', 'Healthy', 'Unhealthy', 'IRPending'
   */
  lastBackupStatus?: string;
  /**
   * Timestamp of the last backup operation on this backup item.
   */
  lastBackupTime?: Date;
  /**
   * Error details in last backup
   */
  lastBackupErrorDetail?: ErrorDetail;
  /**
   * Data ID of the protected item.
   */
  protectedItemDataSourceId?: string;
  /**
   * Health status of the backup item, evaluated based on last heartbeat received. Possible values
   * include: 'Invalid', 'Healthy', 'Unhealthy', 'NotReachable', 'IRPending'
   */
  protectedItemHealthStatus?: string;
  /**
   * Additional information for this backup item.
   */
  extendedInfo?: AzureVmWorkloadProtectedItemExtendedInfo;
}

/**
 * Common settings field for backup management
 */
export interface Settings {
  /**
   * TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
   */
  timeZone?: string;
  /**
   * SQL compression flag
   */
  issqlcompression?: boolean;
  /**
   * Workload compression flag. This has been added so that 'isSqlCompression'
   * will be deprecated once clients upgrade to consider this flag.
   */
  isCompression?: boolean;
}

/**
 * Sub-protection policy which includes schedule and retention
 */
export interface SubProtectionPolicy {
  /**
   * Type of backup policy type. Possible values include: 'Invalid', 'Full', 'Differential', 'Log',
   * 'CopyOnlyFull'
   */
  policyType?: string;
  /**
   * Backup schedule specified as part of backup policy.
   */
  schedulePolicy?: SchedulePolicy;
  /**
   * Retention policy with the details on backup copy retention ranges.
   */
  retentionPolicy?: RetentionPolicy;
}

/**
 * Azure VM (Mercury) workload-specific backup policy.
 */
export interface AzureVmWorkloadProtectionPolicy extends ProtectionPolicy {
  /**
   * Type of workload for the backup management. Possible values include: 'Invalid', 'VM',
   * 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
   * 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase'
   */
  workLoadType?: string;
  /**
   * Common settings for the backup management
   */
  settings?: Settings;
  /**
   * List of sub-protection policies which includes schedule and retention
   */
  subProtectionPolicy?: SubProtectionPolicy[];
}

/**
 * Azure VM workload-specific protected item representing SAP Hana Database.
 */
export interface AzureVmWorkloadSAPHanaDatabaseProtectedItem extends AzureVmWorkloadProtectedItem {
}

/**
 * Azure VM workload-specific protected item representing SQL Database.
 */
export interface AzureVmWorkloadSQLDatabaseProtectedItem extends ProtectedItem {
  /**
   * Friendly name of the DB represented by this backup item.
   */
  friendlyName?: string;
  /**
   * Host/Cluster Name for instance or AG
   */
  serverName?: string;
  /**
   * Parent name of the DB such as Instance or Availability Group.
   */
  parentName?: string;
  /**
   * Parent type of DB, SQLAG or StandAlone
   */
  parentType?: string;
  /**
   * Backup status of this backup item.
   */
  protectionStatus?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: string;
  /**
   * Last backup operation status. Possible values: Healthy, Unhealthy. Possible values include:
   * 'Invalid', 'Healthy', 'Unhealthy', 'IRPending'
   */
  lastBackupStatus?: string;
  /**
   * Timestamp of the last backup operation on this backup item.
   */
  lastBackupTime?: Date;
  /**
   * Error details in last backup
   */
  lastBackupErrorDetail?: ErrorDetail;
  /**
   * Data ID of the protected item.
   */
  protectedItemDataSourceId?: string;
  /**
   * Health status of the backup item, evaluated based on last heartbeat received. Possible values
   * include: 'Invalid', 'Healthy', 'Unhealthy', 'NotReachable', 'IRPending'
   */
  protectedItemHealthStatus?: string;
  /**
   * Additional information for this backup item.
   */
  extendedInfo?: AzureVmWorkloadProtectedItemExtendedInfo;
}

/**
 * Azure Recovery Services Vault specific protection intent item.
 */
export interface AzureWorkloadAutoProtectionIntent extends AzureRecoveryServiceVaultProtectionIntent {
}

/**
 * Azure storage specific error information
 */
export interface AzureWorkloadErrorInfo {
  /**
   * Error code.
   */
  errorCode?: number;
  /**
   * Localized error string.
   */
  errorString?: string;
  /**
   * Title: Typically, the entity that the error pertains to.
   */
  errorTitle?: string;
  /**
   * List of localized recommendations for above error code.
   */
  recommendations?: string[];
  /**
   * Additional details for above error code.
   */
  additionalDetails?: string;
}

/**
 * Azure VM workload specific job task details.
 */
export interface AzureWorkloadJobTaskDetails {
  /**
   * The task display name.
   */
  taskId?: string;
  /**
   * The status.
   */
  status?: string;
}

/**
 * Azure VM workload-specific additional information for job.
 */
export interface AzureWorkloadJobExtendedInfo {
  /**
   * List of tasks for this job
   */
  tasksList?: AzureWorkloadJobTaskDetails[];
  /**
   * Job properties.
   */
  propertyBag?: { [propertyName: string]: string };
  /**
   * Non localized error message on job execution.
   */
  dynamicErrorMessage?: string;
}

/**
 * Azure storage specific job.
 */
export interface AzureWorkloadJob extends Job {
  /**
   * Workload type of the job
   */
  workloadType?: string;
  /**
   * Time elapsed during the execution of this job.
   */
  duration?: moment.Duration;
  /**
   * Gets or sets the state/actions applicable on this job like cancel/retry.
   */
  actionsInfo?: string[];
  /**
   * Error details on execution of this job.
   */
  errorDetails?: AzureWorkloadErrorInfo[];
  /**
   * Additional information about the job.
   */
  extendedInfo?: AzureWorkloadJobExtendedInfo;
}

/**
 * AzureWorkload-specific restore.
 */
export interface AzureWorkloadRestoreRequest extends RestoreRequest {
  /**
   * OLR/ALR, RestoreDisks is invalid option. Possible values include: 'Invalid',
   * 'OriginalLocation', 'AlternateLocation', 'RestoreDisks'
   */
  recoveryType?: string;
  /**
   * Fully qualified ARM ID of the VM on which workload that was running is being recovered.
   */
  sourceResourceId?: string;
  /**
   * Workload specific property bag.
   */
  propertyBag?: { [propertyName: string]: string };
}

/**
 * AzureWorkload SAP Hana-specific restore.
 */
export interface AzureWorkloadSAPHanaRestoreRequest extends RestoreRequest {
  /**
   * Details of target database
   */
  targetInfo?: TargetRestoreInfo;
  /**
   * OLR/ALR, RestoreDisks is invalid option. Possible values include: 'Invalid',
   * 'OriginalLocation', 'AlternateLocation', 'RestoreDisks'
   */
  recoveryType?: string;
  /**
   * Fully qualified ARM ID of the VM on which workload that was running is being recovered.
   */
  sourceResourceId?: string;
  /**
   * Workload specific property bag.
   */
  propertyBag?: { [propertyName: string]: string };
}

/**
 * AzureWorkload SAP Hana -specific restore. Specifically for PointInTime/Log restore
 */
export interface AzureWorkloadSAPHanaPointInTimeRestoreRequest extends AzureWorkloadSAPHanaRestoreRequest {
  /**
   * PointInTime value
   */
  pointInTime?: Date;
}

/**
 * Details about target workload during restore operation.
 */
export interface TargetRestoreInfo {
  /**
   * Can Overwrite if Target DataBase already exists. Possible values include: 'Invalid',
   * 'FailOnConflict', 'Overwrite'
   */
  overwriteOption?: string;
  /**
   * Resource Id name of the container in which Target DataBase resides
   */
  containerId?: string;
  /**
   * Database name InstanceName/DataBaseName for SQL or System/DbName for SAP Hana
   */
  databaseName?: string;
}

/**
 * Azure Workload SQL Auto Protection intent item.
 */
export interface AzureWorkloadSQLAutoProtectionIntent extends AzureWorkloadAutoProtectionIntent {
  /**
   * Workload item type of the item for which intent is to be set. Possible values include:
   * 'Invalid', 'SQLInstance', 'SQLDataBase', 'SAPHanaSystem', 'SAPHanaDatabase'
   */
  workloadItemType?: string;
}

/**
 * AzureWorkload SQL -specific restore. Specifically for full/diff restore
 */
export interface AzureWorkloadSQLRestoreRequest extends AzureWorkloadRestoreRequest {
  /**
   * Default option set to true. If this is set to false, alternate data directory must be provided
   */
  shouldUseAlternateTargetLocation?: boolean;
  /**
   * SQL specific property where user can chose to set no-recovery when restore operation is tried
   */
  isNonRecoverable?: boolean;
  /**
   * Details of target database
   */
  targetInfo?: TargetRestoreInfo;
  /**
   * Data directory details
   */
  alternateDirectoryPaths?: SQLDataDirectoryMapping[];
}

/**
 * AzureWorkload SQL -specific restore. Specifically for PointInTime/Log restore
 */
export interface AzureWorkloadSQLPointInTimeRestoreRequest extends AzureWorkloadSQLRestoreRequest {
  /**
   * PointInTime value
   */
  pointInTime?: Date;
}

/**
 * Encapsulates information regarding data directory
 */
export interface SQLDataDirectoryMapping {
  /**
   * Type of data directory mapping. Possible values include: 'Invalid', 'Data', 'Log'
   */
  mappingType?: string;
  /**
   * Restore source logical name path
   */
  sourceLogicalName?: string;
  /**
   * Restore source path
   */
  sourcePath?: string;
  /**
   * Target path
   */
  targetPath?: string;
}

/**
 * The name of usage.
 */
export interface NameInfo {
  /**
   * Value of usage.
   */
  value?: string;
  /**
   * Localized value of usage.
   */
  localizedValue?: string;
}

/**
 * Backup management usages of a vault.
 */
export interface BackupManagementUsage {
  /**
   * Unit of the usage. Possible values include: 'Count', 'Bytes', 'Seconds', 'Percent',
   * 'CountPerSecond', 'BytesPerSecond'
   */
  unit?: string;
  /**
   * Quota period of usage.
   */
  quotaPeriod?: string;
  /**
   * Next reset time of usage.
   */
  nextResetTime?: Date;
  /**
   * Current value of usage.
   */
  currentValue?: number;
  /**
   * Limit of usage.
   */
  limit?: number;
  /**
   * Name of usage.
   */
  name?: NameInfo;
}

/**
 * BackupStatus request.
 */
export interface BackupStatusRequest {
  /**
   * Container Type - VM, SQLPaaS, DPM, AzureFileShare. Possible values include: 'Invalid', 'VM',
   * 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
   * 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase'
   */
  resourceType?: string;
  /**
   * Entire ARM resource id of the resource
   */
  resourceId?: string;
  /**
   * Protectable Item Logical Name
   */
  poLogicalName?: string;
}

/**
 * BackupStatus response.
 */
export interface BackupStatusResponse {
  /**
   * Specifies whether the container is registered or not. Possible values include: 'Invalid',
   * 'NotProtected', 'Protecting', 'Protected', 'ProtectionFailed'
   */
  protectionStatus?: string;
  /**
   * Specifies the fabric name - Azure or AD. Possible values include: 'Invalid', 'Azure'
   */
  fabricName?: string;
  /**
   * Specifies the product specific container name. E.g.
   * iaasvmcontainer;iaasvmcontainer;csname;vmname.
   */
  containerName?: string;
  /**
   * Specifies the product specific ds name. E.g. vm;iaasvmcontainer;csname;vmname.
   */
  protectedItemName?: string;
  /**
   * ErrorCode in case of intent failed
   */
  errorCode?: string;
  /**
   * ErrorMessage in case of intent failed.
   */
  errorMessage?: string;
  /**
   * Specifies the policy name which is used for protection
   */
  policyName?: string;
  /**
   * Container registration status
   */
  registrationStatus?: string;
}

/**
 * Query parameters to fetch backup summaries.
 */
export interface BMSBackupSummariesQueryObject {
  /**
   * Backup management type for this container. Possible values include: 'Invalid',
   * 'BackupProtectedItemCountSummary', 'BackupProtectionContainerCountSummary'
   */
  type?: string;
}

/**
 * Day of the week.
 */
export interface Day {
  /**
   * Date of the month
   */
  date?: number;
  /**
   * Whether Date is last date of month
   */
  isLast?: boolean;
}

/**
 * Daily retention format.
 */
export interface DailyRetentionFormat {
  /**
   * List of days of the month.
   */
  daysOfTheMonth?: Day[];
}

/**
 * Retention duration.
 */
export interface RetentionDuration {
  /**
   * Count of duration types. Retention duration is obtained by the counting the duration type
   * Count times.
   * For example, when Count = 3 and DurationType = Weeks, retention duration will be three weeks.
   */
  count?: number;
  /**
   * Retention duration type of retention policy. Possible values include: 'Invalid', 'Days',
   * 'Weeks', 'Months', 'Years'
   */
  durationType?: string;
}

/**
 * Daily retention schedule.
 */
export interface DailyRetentionSchedule {
  /**
   * Retention times of retention policy.
   */
  retentionTimes?: Date[];
  /**
   * Retention duration of retention Policy.
   */
  retentionDuration?: RetentionDuration;
}

/**
 * DPM workload-specific error information.
 */
export interface DpmErrorInfo {
  /**
   * Localized error string.
   */
  errorString?: string;
  /**
   * List of localized recommendations for above error code.
   */
  recommendations?: string[];
}

/**
 * DPM workload-specific job task details.
 */
export interface DpmJobTaskDetails {
  /**
   * The task display name.
   */
  taskId?: string;
  /**
   * The start time.
   */
  startTime?: Date;
  /**
   * The end time.
   */
  endTime?: Date;
  /**
   * Time elapsed for task.
   */
  duration?: moment.Duration;
  /**
   * The status.
   */
  status?: string;
}

/**
 * Additional information on the DPM workload-specific job.
 */
export interface DpmJobExtendedInfo {
  /**
   * List of tasks associated with this job.
   */
  tasksList?: DpmJobTaskDetails[];
  /**
   * The job properties.
   */
  propertyBag?: { [propertyName: string]: string };
  /**
   * Non localized error message on job execution.
   */
  dynamicErrorMessage?: string;
}

/**
 * DPM workload-specific job object.
 */
export interface DpmJob extends Job {
  /**
   * Time elapsed for job.
   */
  duration?: moment.Duration;
  /**
   * DPM server name managing the backup item or backup job.
   */
  dpmServerName?: string;
  /**
   * Name of cluster/server protecting current backup item, if any.
   */
  containerName?: string;
  /**
   * Type of container.
   */
  containerType?: string;
  /**
   * Type of backup item.
   */
  workloadType?: string;
  /**
   * The state/actions applicable on this job like cancel/retry.
   */
  actionsInfo?: string[];
  /**
   * The errors.
   */
  errorDetails?: DpmErrorInfo[];
  /**
   * Additional information for this job.
   */
  extendedInfo?: DpmJobExtendedInfo;
}

/**
 * Additional information of DPM Protected item.
 */
export interface DPMProtectedItemExtendedInfo {
  /**
   * Attribute to provide information on various DBs.
   */
  protectableObjectLoadPath?: { [propertyName: string]: string };
  /**
   * To check if backup item is disk protected.
   */
  protectedProperty?: boolean;
  /**
   * To check if backup item is cloud protected.
   */
  isPresentOnCloud?: boolean;
  /**
   * Last backup status information on backup item.
   */
  lastBackupStatus?: string;
  /**
   * Last refresh time on backup item.
   */
  lastRefreshedAt?: Date;
  /**
   * Oldest cloud recovery point time.
   */
  oldestRecoveryPoint?: Date;
  /**
   * cloud recovery point count.
   */
  recoveryPointCount?: number;
  /**
   * Oldest disk recovery point time.
   */
  onPremiseOldestRecoveryPoint?: Date;
  /**
   * latest disk recovery point time.
   */
  onPremiseLatestRecoveryPoint?: Date;
  /**
   * disk recovery point count.
   */
  onPremiseRecoveryPointCount?: number;
  /**
   * To check if backup item is collocated.
   */
  isCollocated?: boolean;
  /**
   * Protection group name of the backup item.
   */
  protectionGroupName?: string;
  /**
   * Used Disk storage in bytes.
   */
  diskStorageUsedInBytes?: string;
  /**
   * total Disk storage in bytes.
   */
  totalDiskStorageSizeInBytes?: string;
}

/**
 * Additional information on Backup engine specific backup item.
 */
export interface DPMProtectedItem extends ProtectedItem {
  /**
   * Friendly name of the managed item
   */
  friendlyName?: string;
  /**
   * Backup Management server protecting this backup item
   */
  backupEngineName?: string;
  /**
   * Protection state of the backup engine. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: string;
  /**
   * To check if backup item is scheduled for deferred delete
   */
  isScheduledForDeferredDelete?: boolean;
  /**
   * Extended info of the backup item.
   */
  extendedInfo?: DPMProtectedItemExtendedInfo;
}

/**
 * Details needed if the VM was encrypted at the time of backup.
 */
export interface EncryptionDetails {
  /**
   * Identifies whether this backup copy represents an encrypted VM at the time of backup.
   */
  encryptionEnabled?: boolean;
  /**
   * Key Url.
   */
  kekUrl?: string;
  /**
   * Secret Url.
   */
  secretKeyUrl?: string;
  /**
   * ID of Key Vault where KEK is stored.
   */
  kekVaultId?: string;
  /**
   * ID of Key Vault where Secret is stored.
   */
  secretKeyVaultId?: string;
}

/**
 * Base class for operation result info.
 */
export interface OperationResultInfoBase {
  /**
   * Polymorphic Discriminator
   */
  objectType: string;
}

/**
 * This class is used to send blob details after exporting jobs.
 */
export interface ExportJobsOperationResultInfo extends OperationResultInfoBase {
  /**
   * URL of the blob into which the serialized string of list of jobs is exported.
   */
  blobUrl?: string;
  /**
   * SAS key to access the blob. It expires in 15 mins.
   */
  blobSasKey?: string;
}

/**
 * Base class for backup items.
 */
export interface GenericProtectedItem extends ProtectedItem {
  /**
   * Friendly name of the container.
   */
  friendlyName?: string;
  /**
   * Indicates consistency of policy object and policy applied to this backup item.
   */
  policyState?: string;
  /**
   * Backup state of this backup item. Possible values include: 'Invalid', 'IRPending',
   * 'Protected', 'ProtectionError', 'ProtectionStopped', 'ProtectionPaused'
   */
  protectionState?: string;
  /**
   * Data Plane Service ID of the protected item.
   */
  protectedItemId?: number;
  /**
   * Loosely coupled (type, value) associations (example - parent of a protected item)
   */
  sourceAssociations?: { [propertyName: string]: string };
  /**
   * Name of this backup item's fabric.
   */
  fabricName?: string;
}

/**
 * Azure VM (Mercury) workload-specific backup policy.
 */
export interface GenericProtectionPolicy extends ProtectionPolicy {
  /**
   * List of sub-protection policies which includes schedule and retention
   */
  subProtectionPolicy?: SubProtectionPolicy[];
  /**
   * TimeZone optional input as string. For example: TimeZone = "Pacific Standard Time".
   */
  timeZone?: string;
  /**
   * Name of this policy's fabric.
   */
  fabricName?: string;
}

/**
 * IaaS VM workload-specific restore.
 */
export interface IaasVMRestoreRequest extends RestoreRequest {
  /**
   * ID of the backup copy to be recovered.
   */
  recoveryPointId?: string;
  /**
   * Type of this recovery. Possible values include: 'Invalid', 'OriginalLocation',
   * 'AlternateLocation', 'RestoreDisks'
   */
  recoveryType?: string;
  /**
   * Fully qualified ARM ID of the VM which is being recovered.
   */
  sourceResourceId?: string;
  /**
   * This is the complete ARM Id of the VM that will be created.
   * For e.g.
   * /subscriptions/{subId}/resourcegroups/{rg}/provider/Microsoft.Compute/virtualmachines/{vm}
   */
  targetVirtualMachineId?: string;
  /**
   * This is the ARM Id of the resource group that you want to create for this Virtual machine and
   * other artifacts.
   * For e.g. /subscriptions/{subId}/resourcegroups/{rg}
   */
  targetResourceGroupId?: string;
  /**
   * Fully qualified ARM ID of the storage account to which the VM has to be restored.
   */
  storageAccountId?: string;
  /**
   * This is the virtual network Id of the vnet that will be attached to the virtual machine.
   * User will be validated for join action permissions in the linked access.
   */
  virtualNetworkId?: string;
  /**
   * Subnet ID, is the subnet ID associated with the to be restored VM. For Classic VMs it would be
   * {VnetID}/Subnet/{SubnetName} and, for the Azure Resource Manager VMs it would be ARM resource
   * ID used to represent
   * the subnet.
   */
  subnetId?: string;
  /**
   * Fully qualified ARM ID of the domain name to be associated to the VM being restored. This
   * applies only to Classic
   * Virtual Machines.
   */
  targetDomainNameId?: string;
  /**
   * Region in which the virtual machine is restored.
   */
  region?: string;
  /**
   * Affinity group associated to VM to be restored. Used only for Classic Compute Virtual
   * Machines.
   */
  affinityGroup?: string;
  /**
   * Should a new cloud service be created while restoring the VM. If this is false, VM will be
   * restored to the same
   * cloud service as it was at the time of backup.
   */
  createNewCloudService?: boolean;
  /**
   * Original Storage Account Option
   */
  originalStorageAccountOption?: boolean;
  /**
   * Details needed if the VM was encrypted at the time of backup.
   */
  encryptionDetails?: EncryptionDetails;
}

/**
 * Filters to list the jobs.
 */
export interface JobQueryObject {
  /**
   * Status of the job. Possible values include: 'Invalid', 'InProgress', 'Completed', 'Failed',
   * 'CompletedWithWarnings', 'Cancelled', 'Cancelling'
   */
  status?: string;
  /**
   * Type of backup management for the job. Possible values include: 'Invalid', 'AzureIaasVM',
   * 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: string;
  /**
   * Type of operation. Possible values include: 'Invalid', 'Register', 'UnRegister',
   * 'ConfigureBackup', 'Backup', 'Restore', 'DisableBackup', 'DeleteBackupData'
   */
  operation?: string;
  /**
   * JobID represents the job uniquely.
   */
  jobId?: string;
  /**
   * Job has started at this time. Value is in UTC.
   */
  startTime?: Date;
  /**
   * Job has ended at this time. Value is in UTC.
   */
  endTime?: Date;
}

/**
 * ARM Resource.
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id represents the complete path to the resource.
   */
  readonly id?: string;
  /**
   * Resource name associated with the resource.
   */
  readonly name?: string;
  /**
   * Resource type represents the complete path of the form Namespace/ResourceType/ResourceType/...
   */
  readonly type?: string;
  /**
   * Resource location.
   */
  location?: string;
  /**
   * Resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * Optional ETag.
   */
  eTag?: string;
}

/**
 * Defines workload agnostic properties for a job.
 */
export interface JobResource extends Resource {
  /**
   * JobResource properties
   */
  properties?: Job;
}

/**
 * Log policy schedule.
 */
export interface LogSchedulePolicy extends SchedulePolicy {
  /**
   * Frequency of the log schedule operation of this policy in minutes.
   */
  scheduleFrequencyInMins?: number;
}

/**
 * Weekly retention schedule.
 */
export interface WeeklyRetentionSchedule {
  /**
   * List of days of week for weekly retention policy.
   */
  daysOfTheWeek?: string[];
  /**
   * Retention times of retention policy.
   */
  retentionTimes?: Date[];
  /**
   * Retention duration of retention Policy.
   */
  retentionDuration?: RetentionDuration;
}

/**
 * Weekly retention format.
 */
export interface WeeklyRetentionFormat {
  /**
   * List of days of the week.
   */
  daysOfTheWeek?: string[];
  /**
   * List of weeks of month.
   */
  weeksOfTheMonth?: string[];
}

/**
 * Monthly retention schedule.
 */
export interface MonthlyRetentionSchedule {
  /**
   * Retention schedule format type for monthly retention policy. Possible values include:
   * 'Invalid', 'Daily', 'Weekly'
   */
  retentionScheduleFormatType?: string;
  /**
   * Daily retention format for monthly retention policy.
   */
  retentionScheduleDaily?: DailyRetentionFormat;
  /**
   * Weekly retention format for monthly retention policy.
   */
  retentionScheduleWeekly?: WeeklyRetentionFormat;
  /**
   * Retention times of retention policy.
   */
  retentionTimes?: Date[];
  /**
   * Retention duration of retention Policy.
   */
  retentionDuration?: RetentionDuration;
}

/**
 * Yearly retention schedule.
 */
export interface YearlyRetentionSchedule {
  /**
   * Retention schedule format for yearly retention policy. Possible values include: 'Invalid',
   * 'Daily', 'Weekly'
   */
  retentionScheduleFormatType?: string;
  /**
   * List of months of year of yearly retention policy.
   */
  monthsOfYear?: string[];
  /**
   * Daily retention format for yearly retention policy.
   */
  retentionScheduleDaily?: DailyRetentionFormat;
  /**
   * Weekly retention format for yearly retention policy.
   */
  retentionScheduleWeekly?: WeeklyRetentionFormat;
  /**
   * Retention times of retention policy.
   */
  retentionTimes?: Date[];
  /**
   * Retention duration of retention Policy.
   */
  retentionDuration?: RetentionDuration;
}

/**
 * Long term retention policy.
 */
export interface LongTermRetentionPolicy extends RetentionPolicy {
  /**
   * Daily retention schedule of the protection policy.
   */
  dailySchedule?: DailyRetentionSchedule;
  /**
   * Weekly retention schedule of the protection policy.
   */
  weeklySchedule?: WeeklyRetentionSchedule;
  /**
   * Monthly retention schedule of the protection policy.
   */
  monthlySchedule?: MonthlyRetentionSchedule;
  /**
   * Yearly retention schedule of the protection policy.
   */
  yearlySchedule?: YearlyRetentionSchedule;
}

/**
 * Long term policy schedule.
 */
export interface LongTermSchedulePolicy extends SchedulePolicy {
}

/**
 * MAB workload-specific error information.
 */
export interface MabErrorInfo {
  /**
   * Localized error string.
   */
  errorString?: string;
  /**
   * List of localized recommendations.
   */
  recommendations?: string[];
}

/**
 * Additional information on the backed up item.
 */
export interface MabFileFolderProtectedItemExtendedInfo {
  /**
   * Last time when the agent data synced to service.
   */
  lastRefreshedAt?: Date;
  /**
   * The oldest backup copy available.
   */
  oldestRecoveryPoint?: Date;
  /**
   * Number of backup copies associated with the backup item.
   */
  recoveryPointCount?: number;
}

/**
 * MAB workload-specific backup item.
 */
export interface MabFileFolderProtectedItem extends ProtectedItem {
  /**
   * Friendly name of this backup item.
   */
  friendlyName?: string;
  /**
   * Name of the computer associated with this backup item.
   */
  computerName?: string;
  /**
   * Status of last backup operation.
   */
  lastBackupStatus?: string;
  /**
   * Protected, ProtectionStopped, IRPending or ProtectionError
   */
  protectionState?: string;
  /**
   * Specifies if the item is scheduled for deferred deletion.
   */
  isScheduledForDeferredDelete?: boolean;
  /**
   * Sync time for deferred deletion.
   */
  deferredDeleteSyncTimeInUTC?: number;
  /**
   * Additional information with this backup item.
   */
  extendedInfo?: MabFileFolderProtectedItemExtendedInfo;
}

/**
 * MAB workload-specific job task details.
 */
export interface MabJobTaskDetails {
  /**
   * The task display name.
   */
  taskId?: string;
  /**
   * The start time.
   */
  startTime?: Date;
  /**
   * The end time.
   */
  endTime?: Date;
  /**
   * Time elapsed for task.
   */
  duration?: moment.Duration;
  /**
   * The status.
   */
  status?: string;
}

/**
 * Additional information for the MAB workload-specific job.
 */
export interface MabJobExtendedInfo {
  /**
   * List of tasks for this job.
   */
  tasksList?: MabJobTaskDetails[];
  /**
   * The job properties.
   */
  propertyBag?: { [propertyName: string]: string };
  /**
   * Non localized error message specific to this job.
   */
  dynamicErrorMessage?: string;
}

/**
 * MAB workload-specific job.
 */
export interface MabJob extends Job {
  /**
   * Time taken by job to run.
   */
  duration?: moment.Duration;
  /**
   * The state/actions applicable on jobs like cancel/retry.
   */
  actionsInfo?: string[];
  /**
   * Name of server protecting the DS.
   */
  mabServerName?: string;
  /**
   * Server type of MAB container. Possible values include: 'Invalid', 'Unknown',
   * 'IaasVMContainer', 'IaasVMServiceContainer', 'DPMContainer', 'AzureBackupServerContainer',
   * 'MABContainer', 'Cluster', 'AzureSqlContainer', 'Windows', 'VCenter', 'VMAppContainer',
   * 'SQLAGWorkLoadContainer', 'StorageContainer', 'GenericContainer'
   */
  mabServerType?: string;
  /**
   * Workload type of backup item. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase'
   */
  workloadType?: string;
  /**
   * The errors.
   */
  errorDetails?: MabErrorInfo[];
  /**
   * Additional information on the job.
   */
  extendedInfo?: MabJobExtendedInfo;
}

/**
 * Mab container-specific backup policy.
 */
export interface MabProtectionPolicy extends ProtectionPolicy {
  /**
   * Backup schedule of backup policy.
   */
  schedulePolicy?: SchedulePolicy;
  /**
   * Retention policy details.
   */
  retentionPolicy?: RetentionPolicy;
}

/**
 * Operation result info.
 */
export interface OperationResultInfo extends OperationResultInfoBase {
  /**
   * List of jobs created by this operation.
   */
  jobList?: string[];
}

/**
 * This is the base class for operation result responses.
 */
export interface OperationWorkerResponse {
  /**
   * HTTP Status Code of the operation. Possible values include: 'Continue', 'SwitchingProtocols',
   * 'OK', 'Created', 'Accepted', 'NonAuthoritativeInformation', 'NoContent', 'ResetContent',
   * 'PartialContent', 'MultipleChoices', 'Ambiguous', 'MovedPermanently', 'Moved', 'Found',
   * 'Redirect', 'SeeOther', 'RedirectMethod', 'NotModified', 'UseProxy', 'Unused',
   * 'TemporaryRedirect', 'RedirectKeepVerb', 'BadRequest', 'Unauthorized', 'PaymentRequired',
   * 'Forbidden', 'NotFound', 'MethodNotAllowed', 'NotAcceptable', 'ProxyAuthenticationRequired',
   * 'RequestTimeout', 'Conflict', 'Gone', 'LengthRequired', 'PreconditionFailed',
   * 'RequestEntityTooLarge', 'RequestUriTooLong', 'UnsupportedMediaType',
   * 'RequestedRangeNotSatisfiable', 'ExpectationFailed', 'UpgradeRequired', 'InternalServerError',
   * 'NotImplemented', 'BadGateway', 'ServiceUnavailable', 'GatewayTimeout',
   * 'HttpVersionNotSupported'
   */
  statusCode?: string;
  /**
   * HTTP headers associated with this operation.
   */
  headers?: { [propertyName: string]: string[] };
}

/**
 * Base class for operation result info.
 */
export interface OperationResultInfoBaseResource extends OperationWorkerResponse {
  /**
   * OperationResultInfoBaseResource operation
   */
  operation?: OperationResultInfoBase;
}

/**
 * Contract to validate if backup can be enabled on the given resource in a given vault and given
 * configuration.
 * It will validate followings
 * 1. Vault capacity
 * 2. VM is already protected
 * 3. Any VM related configuration passed in properties.
 */
export interface PreValidateEnableBackupRequest {
  /**
   * ProtectedItem Type- VM, SqlDataBase, AzureFileShare etc. Possible values include: 'Invalid',
   * 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM',
   * 'SystemState', 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare',
   * 'SAPHanaDatabase'
   */
  resourceType?: string;
  /**
   * ARM Virtual Machine Id
   */
  resourceId?: string;
  /**
   * Configuration of VM if any needs to be validated like OS type etc
   */
  properties?: string;
}

/**
 * Response contract for enable backup validation request
 */
export interface PreValidateEnableBackupResponse {
  /**
   * Validation Status. Possible values include: 'Invalid', 'Succeeded', 'Failed'
   */
  status?: string;
  /**
   * Response error code
   */
  errorCode?: string;
  /**
   * Response error message
   */
  errorMessage?: string;
  /**
   * Recommended action for user
   */
  recommendation?: string;
  /**
   * Specifies the product specific container name. E.g.
   * iaasvmcontainer;iaasvmcontainer;rgname;vmname. This is required
   * for portal
   */
  containerName?: string;
  /**
   * Specifies the product specific ds name. E.g. vm;iaasvmcontainer;rgname;vmname. This is
   * required for portal
   */
  protectedItemName?: string;
}

/**
 * Filters to list backup items.
 */
export interface ProtectedItemQueryObject {
  /**
   * Health State for the backed up item. Possible values include: 'Passed', 'ActionRequired',
   * 'ActionSuggested', 'Invalid'
   */
  healthState?: string;
  /**
   * Backup management type for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: string;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase'
   */
  itemType?: string;
  /**
   * Backup policy name associated with the backup item.
   */
  policyName?: string;
  /**
   * Name of the container.
   */
  containerName?: string;
  /**
   * Backup Engine name
   */
  backupEngineName?: string;
  /**
   * Friendly name of protected item
   */
  friendlyName?: string;
  /**
   * Name of the fabric.
   */
  fabricName?: string;
  /**
   * Name of the backup set.
   */
  backupSetName?: string;
}

/**
 * Base class for backup items.
 */
export interface ProtectedItemResource extends Resource {
  /**
   * ProtectedItemResource properties
   */
  properties?: ProtectedItem;
}

/**
 * Filters to list protection intent.
 */
export interface ProtectionIntentQueryObject {
  /**
   * Backup management type for the backed up item. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: string;
  /**
   * Type of workload this item represents. Possible values include: 'Invalid', 'SQLInstance',
   * 'SQLAvailabilityGroupContainer'
   */
  itemType?: string;
  /**
   * Parent name of the intent
   */
  parentName?: string;
  /**
   * Item name of the intent
   */
  itemName?: string;
}

/**
 * Base class for backup ProtectionIntent.
 */
export interface ProtectionIntentResource extends Resource {
  /**
   * ProtectionIntentResource properties
   */
  properties?: ProtectionIntent;
}

/**
 * Filters the list backup policies API.
 */
export interface ProtectionPolicyQueryObject {
  /**
   * Backup management type for the backup policy. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
   */
  backupManagementType?: string;
  /**
   * Fabric name for filter
   */
  fabricName?: string;
  /**
   * Workload type for the backup policy. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase'
   */
  workloadType?: string;
}

/**
 * Base class for backup policy. Workload-specific backup policies are derived from this class.
 */
export interface ProtectionPolicyResource extends Resource {
  /**
   * ProtectionPolicyResource properties
   */
  properties?: ProtectionPolicy;
}

/**
 * Base for all lists of resources.
 */
export interface ResourceList {
  /**
   * The uri to fetch the next page of resources. Call ListNext() fetches next page of resources.
   */
  nextLink?: string;
}

/**
 * Simple policy retention.
 */
export interface SimpleRetentionPolicy extends RetentionPolicy {
  /**
   * Retention duration of the protection policy.
   */
  retentionDuration?: RetentionDuration;
}

/**
 * Simple policy schedule.
 */
export interface SimpleSchedulePolicy extends SchedulePolicy {
  /**
   * Frequency of the schedule operation of this policy. Possible values include: 'Invalid',
   * 'Daily', 'Weekly'
   */
  scheduleRunFrequency?: string;
  /**
   * List of days of week this schedule has to be run.
   */
  scheduleRunDays?: string[];
  /**
   * List of times of day this schedule has to be run.
   */
  scheduleRunTimes?: Date[];
  /**
   * At every number weeks this schedule has to be run.
   */
  scheduleWeeklyFrequency?: number;
}

/**
 * Base class for validate operation request.
 */
export interface ValidateOperationRequest {
  /**
   * Polymorphic Discriminator
   */
  objectType: string;
}

/**
 * AzureRestoreValidation request.
 */
export interface ValidateRestoreOperationRequest extends ValidateOperationRequest {
  /**
   * Sets restore request to be validated
   */
  restoreRequest?: RestoreRequest;
}

/**
 * AzureRestoreValidation request.
 */
export interface ValidateIaasVMRestoreOperationRequest extends ValidateRestoreOperationRequest {
}

/**
 * Base class for validate operation response.
 */
export interface ValidateOperationResponse {
  /**
   * Gets the validation result
   */
  validationResults?: ErrorDetail[];
}

export interface ValidateOperationsResponse {
  validateOperationResponse?: ValidateOperationResponse;
}

/**
 * Additional information of the DPMContainer.
*/
export interface DPMContainerExtendedInfo {
  /**
   * Last refresh time of the DPMContainer.
  */
  lastRefreshedAt?: Date;
}

/**
 * Base class for container with backup items. Containers with specific workloads are derived from
 * this class.
*/
export interface ProtectionContainer {
  /**
   * Friendly name of the container.
  */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
  */
  backupManagementType?: string;
  /**
   * Status of registration of the container with the Recovery Services Vault.
  */
  registrationStatus?: string;
  /**
   * Status of health of the container.
  */
  healthStatus?: string;
  /**
   * Polymorphic Discriminator
  */
  containerType: string;
}

/**
 * AzureBackupServer (DPMVenus) workload-specific protection container.
*/
export interface AzureBackupServerContainer extends ProtectionContainer {
  /**
   * Specifies whether the container is re-registrable.
  */
  canReRegister?: boolean;
  /**
   * ID of container.
  */
  containerId?: string;
  /**
   * Number of protected items in the BackupEngine
  */
  protectedItemCount?: number;
  /**
   * Backup engine Agent version
  */
  dpmAgentVersion?: string;
  /**
   * List of BackupEngines protecting the container
  */
  dpmServers?: string[];
  /**
   * To check if upgrade available
  */
  upgradeAvailable?: boolean;
  /**
   * Protection status of the container.
  */
  protectionStatus?: string;
  /**
   * Extended Info of the container.
  */
  extendedInfo?: DPMContainerExtendedInfo;
}

/**
 * The base backup engine class. All workload specific backup engines derive from this class.
*/
export interface BackupEngineBase {
  /**
   * Friendly name of the backup engine.
  */
  friendlyName?: string;
  /**
   * Type of backup management for the backup engine. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
  */
  backupManagementType?: string;
  /**
   * Registration status of the backup engine with the Recovery Services Vault.
  */
  registrationStatus?: string;
  /**
   * Status of the backup engine with the Recovery Services Vault. = {Active/Deleting/DeleteFailed}
  */
  backupEngineState?: string;
  /**
   * Backup status of the backup engine.
  */
  healthStatus?: string;
  /**
   * Flag indicating if the backup engine be registered, once already registered.
  */
  canReRegister?: boolean;
  /**
   * ID of the backup engine.
  */
  backupEngineId?: string;
  /**
   * Backup engine version
  */
  dpmVersion?: string;
  /**
   * Backup agent version
  */
  azureBackupAgentVersion?: string;
  /**
   * To check if backup agent upgrade available
  */
  isAzureBackupAgentUpgradeAvailable?: boolean;
  /**
   * To check if backup engine upgrade available
  */
  isDpmUpgradeAvailable?: boolean;
  /**
   * Extended info of the backup engine
  */
  extendedInfo?: BackupEngineExtendedInfo;
  /**
   * Polymorphic Discriminator
  */
  backupEngineType: string;
}

/**
 * Backup engine type when Azure Backup Server is used to manage the backups.
*/
export interface AzureBackupServerEngine extends BackupEngineBase {
}

/**
 * Base class for backup request. Workload-specific backup requests are derived from this class.
*/
export interface BackupRequest {
  /**
   * Polymorphic Discriminator
  */
  objectType: string;
}

/**
 * AzureFileShare workload-specific backup request.
*/
export interface AzureFileShareBackupRequest extends BackupRequest {
  /**
   * Backup copy will expire after the time specified (UTC).
  */
  recoveryPointExpiryTimeInUTC?: Date;
}

/**
 * Base class for backup item. Workload-specific backup items are derived from this class.
*/
export interface WorkloadProtectableItem {
  /**
   * Type of backup management to backup an item.
  */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
  */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
  */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
  */
  protectionState?: string;
  /**
   * Polymorphic Discriminator
  */
  protectableItemType: string;
}

/**
 * Protectable item for Azure Fileshare workloads.
*/
export interface AzureFileShareProtectableItem extends WorkloadProtectableItem {
  /**
   * Full Fabric ID of container to which this protectable item belongs. For example, ARM ID.
  */
  parentContainerFabricId?: string;
  /**
   * Friendly name of container to which this protectable item belongs.
  */
  parentContainerFriendlyName?: string;
  /**
   * File Share type XSync or XSMB. Possible values include: 'Invalid', 'XSMB', 'XSync'
  */
  azureFileShareType?: string;
}

/**
 * Base class for backup copies. Workload-specific backup copies are derived from this class.
*/
export interface RecoveryPoint {
  /**
   * Polymorphic Discriminator
  */
  objectType: string;
}

/**
 * Azure File Share workload specific backup copy.
*/
export interface AzureFileShareRecoveryPoint extends RecoveryPoint {
  /**
   * Type of the backup copy. Specifies whether it is a crash consistent backup or app consistent.
  */
  recoveryPointType?: string;
  /**
   * Time at which this backup copy was created.
  */
  recoveryPointTime?: Date;
  /**
   * Contains Url to the snapshot of fileshare, if applicable
  */
  fileShareSnapshotUri?: string;
}

/**
 * IaaS VM workload-specific container.
*/
export interface IaaSVMContainer extends ProtectionContainer {
  /**
   * Fully qualified ARM url of the virtual machine represented by this Azure IaaS VM container.
  */
  virtualMachineId?: string;
  /**
   * Specifies whether the container represents a Classic or an Azure Resource Manager VM.
  */
  virtualMachineVersion?: string;
  /**
   * Resource group name of Recovery Services Vault.
  */
  resourceGroup?: string;
}

/**
 * IaaS VM workload-specific backup item representing a classic virtual machine.
*/
export interface AzureIaaSClassicComputeVMContainer extends IaaSVMContainer {
}

/**
 * IaaS VM workload-specific backup item.
*/
export interface IaaSVMProtectableItem extends WorkloadProtectableItem {
  /**
   * Fully qualified ARM ID of the virtual machine.
  */
  virtualMachineId?: string;
}

/**
 * IaaS VM workload-specific backup item representing the Classic Compute VM.
*/
export interface AzureIaaSClassicComputeVMProtectableItem extends IaaSVMProtectableItem {
}

/**
 * IaaS VM workload-specific backup item representing an Azure Resource Manager virtual machine.
*/
export interface AzureIaaSComputeVMContainer extends IaaSVMContainer {
}

/**
 * IaaS VM workload-specific backup item representing the Azure Resource Manager VM.
*/
export interface AzureIaaSComputeVMProtectableItem extends IaaSVMProtectableItem {
}

/**
 * Container for the workloads running inside Azure Compute or Classic Compute.
*/
export interface AzureWorkloadContainer extends ProtectionContainer {
  /**
   * ARM ID of the virtual machine represented by this Azure Workload Container
  */
  sourceResourceId?: string;
  /**
   * Time stamp when this container was updated.
  */
  lastUpdatedTime?: Date;
  /**
   * Additional details of a workload container.
  */
  extendedInfo?: AzureWorkloadContainerExtendedInfo;
  /**
   * Workload type for which registration was sent. Possible values include: 'Invalid', 'VM',
   * 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
   * 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase'
  */
  workloadType?: string;
}

/**
 * Container for SQL workloads under SQL Availability Group.
*/
export interface AzureSQLAGWorkloadContainerProtectionContainer extends AzureWorkloadContainer {
}

/**
 * Azure Sql workload-specific container.
*/
export interface AzureSqlContainer extends ProtectionContainer {
}

/**
 * Azure Storage Account workload-specific container.
*/
export interface AzureStorageContainer extends ProtectionContainer {
  /**
   * Fully qualified ARM url.
  */
  sourceResourceId?: string;
  /**
   * Storage account version.
  */
  storageAccountVersion?: string;
  /**
   * Resource group name of Recovery Services Vault.
  */
  resourceGroup?: string;
  /**
   * Number of items backed up in this container.
  */
  protectedItemCount?: number;
}

/**
 * Protectable Container Class.
*/
export interface ProtectableContainer {
  /**
   * Friendly name of the container.
  */
  friendlyName?: string;
  /**
   * Type of backup management for the container. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
  */
  backupManagementType?: string;
  /**
   * Status of health of the container.
  */
  healthStatus?: string;
  /**
   * Fabric Id of the container such as ARM Id.
  */
  containerId?: string;
  /**
   * Polymorphic Discriminator
  */
  protectableContainerType: string;
}

/**
 * Azure Storage-specific protectable containers
*/
export interface AzureStorageProtectableContainer extends ProtectableContainer {
}

/**
 * Azure workload-specific container
*/
export interface AzureVMAppContainerProtectableContainer extends ProtectableContainer {
}

/**
 * Container for SQL workloads under Azure Virtual Machines.
*/
export interface AzureVMAppContainerProtectionContainer extends AzureWorkloadContainer {
}

/**
 * Base class for backup item. Workload-specific backup items are derived from this class.
*/
export interface WorkloadItem {
  /**
   * Type of backup management to backup an item.
  */
  backupManagementType?: string;
  /**
   * Type of workload for the backup management
  */
  workloadType?: string;
  /**
   * Friendly name of the backup item.
  */
  friendlyName?: string;
  /**
   * State of the back up item. Possible values include: 'Invalid', 'NotProtected', 'Protecting',
   * 'Protected', 'ProtectionFailed'
  */
  protectionState?: string;
  /**
   * Polymorphic Discriminator
  */
  workloadItemType: string;
}

/**
 * Azure VM workload-specific workload item.
*/
export interface AzureVmWorkloadItem extends WorkloadItem {
  /**
   * Name for instance or AG
  */
  parentName?: string;
  /**
   * Host/Cluster Name for instance or AG
  */
  serverName?: string;
  /**
   * Indicates if workload item is auto-protectable
  */
  isAutoProtectable?: boolean;
  /**
   * For instance or AG, indicates number of DBs present
  */
  subinquireditemcount?: number;
  /**
   * For instance or AG, indicates number of DBs to be protected
  */
  subWorkloadItemCount?: number;
}

/**
 * Pre-backup validation for Azure VM Workload provider.
*/
export interface PreBackupValidation {
  /**
   * Status of protectable item, i.e. InProgress,Succeeded,Failed. Possible values include:
   * 'Invalid', 'Success', 'Failed'
  */
  status?: string;
  /**
   * Error code of protectable item
  */
  code?: string;
  /**
   * Message corresponding to the error code for the protectable item
  */
  message?: string;
}

/**
 * Azure VM workload-specific protectable item.
*/
export interface AzureVmWorkloadProtectableItem extends WorkloadProtectableItem {
  /**
   * Name for instance or AG
  */
  parentName?: string;
  /**
   * Parent Unique Name is added to provide the service formatted URI Name of the Parent
   * Only Applicable for data bases where the parent would be either Instance or a SQL AG.
  */
  parentUniqueName?: string;
  /**
   * Host/Cluster Name for instance or AG
  */
  serverName?: string;
  /**
   * Indicates if protectable item is auto-protectable
  */
  isAutoProtectable?: boolean;
  /**
   * Indicates if protectable item is auto-protected
  */
  isAutoProtected?: boolean;
  /**
   * For instance or AG, indicates number of DBs present
  */
  subinquireditemcount?: number;
  /**
   * For instance or AG, indicates number of DBs to be protected
  */
  subprotectableitemcount?: number;
  /**
   * Pre-backup validation for protectable objects
  */
  prebackupvalidation?: PreBackupValidation;
}

/**
 * Azure VM workload-specific protectable item representing SAP Hana Database.
*/
export interface AzureVmWorkloadSAPHanaDatabaseProtectableItem extends
AzureVmWorkloadProtectableItem {
}

/**
 * Azure VM workload-specific workload item representing SAP Hana Database.
*/
export interface AzureVmWorkloadSAPHanaDatabaseWorkloadItem extends AzureVmWorkloadItem {
}

/**
 * Azure VM workload-specific protectable item representing SAP Hana System.
*/
export interface AzureVmWorkloadSAPHanaSystemProtectableItem extends AzureVmWorkloadProtectableItem
{
}

/**
 * Azure VM workload-specific workload item representing SAP Hana System.
*/
export interface AzureVmWorkloadSAPHanaSystemWorkloadItem extends AzureVmWorkloadItem {
}

/**
 * Azure VM workload-specific protectable item representing SQL Availability Group.
*/
export interface AzureVmWorkloadSQLAvailabilityGroupProtectableItem extends
AzureVmWorkloadProtectableItem {
}

/**
 * Azure VM workload-specific protectable item representing SQL Database.
*/
export interface AzureVmWorkloadSQLDatabaseProtectableItem extends AzureVmWorkloadProtectableItem {
}

/**
 * Azure VM workload-specific workload item representing SQL Database.
*/
export interface AzureVmWorkloadSQLDatabaseWorkloadItem extends AzureVmWorkloadItem {
}

/**
 * Azure VM workload-specific protectable item representing SQL Instance.
*/
export interface AzureVmWorkloadSQLInstanceProtectableItem extends AzureVmWorkloadProtectableItem {
}

/**
 * SQLDataDirectory info
*/
export interface SQLDataDirectory {
  /**
   * Type of data directory mapping. Possible values include: 'Invalid', 'Data', 'Log'
  */
  type?: string;
  /**
   * File path
  */
  path?: string;
  /**
   * Logical name of the file
  */
  logicalName?: string;
}

/**
 * Azure VM workload-specific workload item representing SQL Instance.
*/
export interface AzureVmWorkloadSQLInstanceWorkloadItem extends AzureVmWorkloadItem {
  /**
   * Data Directory Paths for default directories
  */
  dataDirectoryPaths?: SQLDataDirectory[];
}

/**
 * AzureWorkload workload-specific backup request.
*/
export interface AzureWorkloadBackupRequest extends BackupRequest {
  /**
   * Type of backup, viz. Full, Differential, Log or CopyOnlyFull. Possible values include:
   * 'Invalid', 'Full', 'Differential', 'Log', 'CopyOnlyFull'
  */
  backupType?: string;
  /**
   * Bool for Compression setting
  */
  enableCompression?: boolean;
  /**
   * Backup copy will expire after the time specified (UTC).
  */
  recoveryPointExpiryTimeInUTC?: Date;
}

/**
 * Validation for inquired protectable items under a given container.
*/
export interface InquiryValidation {
  /**
   * Status for the Inquiry Validation.
  */
  status?: string;
  /**
   * Error Detail in case the status is non-success.
  */
  errorDetail?: ErrorDetail;
}

/**
 * Details of an inquired protectable item.
*/
export interface WorkloadInquiryDetails {
  /**
   * Type of the Workload such as SQL, Oracle etc.
  */
  type?: string;
  /**
   * Contains the protectable item Count inside this Container.
  */
  itemCount?: number;
  /**
   * Inquiry validation such as permissions and other backup validations.
  */
  inquiryValidation?: InquiryValidation;
}

/**
 * Details about inquired protectable items under a given container.
*/
export interface InquiryInfo {
  /**
   * Inquiry Status for this container such as
   * InProgress | Failed | Succeeded
  */
  status?: string;
  /**
   * Error Details if the Status is non-success.
  */
  errorDetail?: ErrorDetail;
  /**
   * Inquiry Details which will have workload specific details.
   * For e.g. - For SQL and oracle this will contain different details.
  */
  inquiryDetails?: WorkloadInquiryDetails[];
}

/**
 * This is used to represent the various nodes of the distributed container.
*/
export interface DistributedNodesInfo {
  /**
   * Name of the node under a distributed container.
  */
  nodeName?: string;
  /**
   * Status of this Node.
   * Failed | Succeeded
  */
  status?: string;
  /**
   * Error Details if the Status is non-success.
  */
  errorDetail?: ErrorDetail;
}

/**
 * Extended information of the container.
*/
export interface AzureWorkloadContainerExtendedInfo {
  /**
   * Host Os Name in case of Stand Alone and Cluster Name in case of distributed container.
  */
  hostServerName?: string;
  /**
   * Inquiry Status for the container.
  */
  inquiryInfo?: InquiryInfo;
  /**
   * List of the nodes in case of distributed container.
  */
  nodesList?: DistributedNodesInfo[];
}

/**
 * Workload specific recovery point, specifically encapsulates full/diff recovery point
*/
export interface AzureWorkloadRecoveryPoint extends RecoveryPoint {
  /**
   * UTC time at which recovery point was created
  */
  recoveryPointTimeInUTC?: Date;
  /**
   * Type of restore point. Possible values include: 'Invalid', 'Full', 'Log', 'Differential'
  */
  type?: string;
}

/**
 * Provides details for log ranges
*/
export interface PointInTimeRange {
  /**
   * Start time of the time range for log recovery.
  */
  startTime?: Date;
  /**
   * End time of the time range for log recovery.
  */
  endTime?: Date;
}

/**
 * SAPHana specific recovery point, specifically encapsulates full/diff recovery points
*/
export interface AzureWorkloadSAPHanaRecoveryPoint extends RecoveryPoint {
  /**
   * UTC time at which recovery point was created
  */
  recoveryPointTimeInUTC?: Date;
  /**
   * Type of restore point. Possible values include: 'Invalid', 'Full', 'Log', 'Differential'
  */
  type?: string;
}

/**
 * Recovery point specific to PointInTime in SAPHana
*/
export interface AzureWorkloadSAPHanaPointInTimeRecoveryPoint extends
AzureWorkloadSAPHanaRecoveryPoint {
  /**
   * List of log ranges
  */
  timeRanges?: PointInTimeRange[];
}

/**
 * SQL specific recovery point, specifically encapsulates full/diff recovery point along with
 * extended info
*/
export interface AzureWorkloadSQLRecoveryPoint extends AzureWorkloadRecoveryPoint {
  /**
   * Extended Info that provides data directory details. Will be populated in two cases:
   * When a specific recovery point is accessed using GetRecoveryPoint
   * Or when ListRecoveryPoints is called for Log RP only with ExtendedInfo query filter
  */
  extendedInfo?: AzureWorkloadSQLRecoveryPointExtendedInfo;
}

/**
 * Recovery point specific to PointInTime
*/
export interface AzureWorkloadSQLPointInTimeRecoveryPoint extends AzureWorkloadSQLRecoveryPoint {
  /**
   * List of log ranges
  */
  timeRanges?: PointInTimeRange[];
}

/**
 * Extended info class details
*/
export interface AzureWorkloadSQLRecoveryPointExtendedInfo {
  /**
   * UTC time at which data directory info was captured
  */
  dataDirectoryTimeInUTC?: Date;
  /**
   * List of data directory paths during restore operation.
  */
  dataDirectoryPaths?: SQLDataDirectory[];
}

/**
 * Additional information on backup engine.
*/
export interface BackupEngineExtendedInfo {
  /**
   * Database name of backup engine.
  */
  databaseName?: string;
  /**
   * Number of protected items in the backup engine.
  */
  protectedItemsCount?: number;
  /**
   * Number of protected servers in the backup engine.
  */
  protectedServersCount?: number;
  /**
   * Number of disks in the backup engine.
  */
  diskCount?: number;
  /**
   * Disk space used in the backup engine.
  */
  usedDiskSpace?: number;
  /**
   * Disk space currently available in the backup engine.
  */
  availableDiskSpace?: number;
  /**
   * Last refresh time in the backup engine.
  */
  refreshedAt?: Date;
  /**
   * Protected instances in the backup engine.
  */
  azureProtectedInstances?: number;
}

/**
 * The base backup engine class. All workload specific backup engines derive from this class.
*/
export interface BackupEngineBaseResource extends Resource {
  /**
   * BackupEngineBaseResource properties
  */
  properties?: BackupEngineBase;
}

/**
 * Base class for backup request. Workload-specific backup requests are derived from this class.
*/
export interface BackupRequestResource extends Resource {
  /**
   * BackupRequestResource properties
  */
  properties?: BackupRequest;
}

/**
 * The resource storage details.
*/
export interface BackupResourceConfig {
  /**
   * Storage type. Possible values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
  */
  storageModelType?: string;
  /**
   * Storage type. Possible values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
  */
  storageType?: string;
  /**
   * Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is
   * always Locked. Possible values include: 'Invalid', 'Locked', 'Unlocked'
  */
  storageTypeState?: string;
}

/**
 * The resource storage details.
*/
export interface BackupResourceConfigResource extends Resource {
  /**
   * BackupResourceConfigResource properties
  */
  properties?: BackupResourceConfig;
}

/**
 * Backup resource vault config details.
*/
export interface BackupResourceVaultConfig {
  /**
   * Storage type. Possible values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
  */
  storageModelType?: string;
  /**
   * Storage type. Possible values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
  */
  storageType?: string;
  /**
   * Locked or Unlocked. Once a machine is registered against a resource, the storageTypeState is
   * always Locked. Possible values include: 'Invalid', 'Locked', 'Unlocked'
  */
  storageTypeState?: string;
  /**
   * Enabled or Disabled. Possible values include: 'Invalid', 'Enabled', 'Disabled'
  */
  enhancedSecurityState?: string;
}

/**
 * Backup resource vault config details.
*/
export interface BackupResourceVaultConfigResource extends Resource {
  /**
   * BackupResourceVaultConfigResource properties
  */
  properties?: BackupResourceVaultConfig;
}

/**
 * BEK is bitlocker encryption key.
*/
export interface BEKDetails {
  /**
   * Secret is BEK.
  */
  secretUrl?: string;
  /**
   * ID of the Key Vault where this Secret is stored.
  */
  secretVaultId?: string;
  /**
   * BEK data.
  */
  secretData?: string;
}

/**
 * Query parameters to fetch list of backup engines.
*/
export interface BMSBackupEngineQueryObject {
  /**
   * attribute to add extended info
  */
  expand?: string;
}

/**
 * Query parameters to fetch list of backup engines.
*/
export interface BMSBackupEnginesQueryObject {
  /**
   * Backup management type for the backup engine. Possible values include: 'Invalid',
   * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
  */
  backupManagementType?: string;
  /**
   * Friendly name of the backup engine.
  */
  friendlyName?: string;
  /**
   * Attribute to add extended info.
  */
  expand?: string;
}

/**
 * The query filters that can be used with the list containers API.
*/
export interface BMSContainerQueryObject {
  /**
   * Backup management type for this container. Possible values include: 'Invalid', 'AzureIaasVM',
   * 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
  */
  backupManagementType: string;
  /**
   * Type of container for filter. Possible values include: 'Invalid', 'Unknown',
   * 'IaasVMContainer', 'IaasVMServiceContainer', 'DPMContainer', 'AzureBackupServerContainer',
   * 'MABContainer', 'Cluster', 'AzureSqlContainer', 'Windows', 'VCenter', 'VMAppContainer',
   * 'SQLAGWorkLoadContainer', 'StorageContainer', 'GenericContainer'
  */
  containerType?: string;
  /**
   * Backup engine name
  */
  backupEngineName?: string;
  /**
   * Fabric name for filter
  */
  fabricName?: string;
  /**
   * Status of registration of this container with the Recovery Services Vault.
  */
  status?: string;
  /**
   * Friendly name of this container.
  */
  friendlyName?: string;
}

/**
 * The query filters that can be used with the inquire container API.
*/
export interface BMSContainersInquiryQueryObject {
  /**
   * Backup management type for this container. Possible values include: 'Invalid', 'AzureIaasVM',
   * 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
  */
  backupManagementType?: string;
  /**
   * Workload type for this container. Possible values include: 'Invalid', 'VM', 'FileFolder',
   * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client',
   * 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase'
  */
  workloadType?: string;
}

/**
 * Filters to list items that can be backed up.
*/
export interface BMSPOQueryObject {
  /**
   * Backup management type. Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',
   * 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload', 'DefaultBackup'
  */
  backupManagementType?: string;
  /**
   * Workload type. Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB',
   * 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client', 'GenericDataSource',
   * 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase'
  */
  workloadType?: string;
  /**
   * Full name of the container whose Protectable Objects should be returned.
  */
  containerName?: string;
  /**
   * Backup status query parameter.
  */
  status?: string;
  /**
   * Friendly name.
  */
  friendlyName?: string;
}

/**
 * The query filters that can be used with the refresh container API.
*/
export interface BMSRefreshContainersQueryObject {
  /**
   * Backup management type for this container. Possible values include: 'Invalid', 'AzureIaasVM',
   * 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload',
   * 'DefaultBackup'
  */
  backupManagementType?: string;
}

/**
 * Filters to list backup copies.
*/
export interface BMSRPQueryObject {
  /**
   * Backup copies created after this time.
  */
  startDate?: Date;
  /**
   * Backup copies created before this time.
  */
  endDate?: Date;
  /**
   * RestorePoint type. Possible values include: 'Invalid', 'Full', 'Log', 'Differential',
   * 'FullAndDifferential', 'All'
  */
  restorePointQueryType?: string;
  /**
   * In Get Recovery Point, it tells whether extended information about recovery point is asked.
  */
  extendedInfo?: boolean;
}

/**
 * Filters to list items that can be backed up.
*/
export interface BMSWorkloadItemQueryObject {
  /**
   * Backup management type. Possible values include: 'Invalid', 'AzureIaasVM', 'MAB', 'DPM',
   * 'AzureBackupServer', 'AzureSql', 'AzureStorage', 'AzureWorkload', 'DefaultBackup'
  */
  backupManagementType?: string;
  /**
   * Workload Item type. Possible values include: 'Invalid', 'SQLInstance', 'SQLDataBase',
   * 'SAPHanaSystem', 'SAPHanaDatabase'
  */
  workloadItemType?: string;
  /**
   * Workload type. Possible values include: 'Invalid', 'VM', 'FileFolder', 'AzureSqlDb', 'SQLDB',
   * 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState', 'Client', 'GenericDataSource',
   * 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase'
  */
  workloadType?: string;
  /**
   * Backup status query parameter. Possible values include: 'Invalid', 'NotProtected',
   * 'Protecting', 'Protected', 'ProtectionFailed'
  */
  protectionStatus?: string;
}

/**
 * Client script details for file / folder restore.
*/
export interface ClientScriptForConnect {
  /**
   * File content of the client script for file / folder restore.
  */
  scriptContent?: string;
  /**
   * File extension of the client script for file / folder restore - .ps1 , .sh , etc.
  */
  scriptExtension?: string;
  /**
   * OS type - Windows, Linux etc. for which this file / folder restore client script works.
  */
  osType?: string;
  /**
   * URL of Executable from where to source the content. If this is not null then ScriptContent
   * should not be used
  */
  url?: string;
  /**
   * Mandator suffix that should be added to the name of script that is given for download to user.
   * If its null or empty then , ignore it.
  */
  scriptNameSuffix?: string;
}

/**
 * Container identity information
*/
export interface ContainerIdentityInfo {
  /**
   * Unique name of the container
  */
  uniqueName?: string;
  /**
   * Protection container identity - AAD Tenant
  */
  aadTenantId?: string;
  /**
   * Protection container identity - AAD Service Principal
  */
  servicePrincipalClientId?: string;
  /**
   * Protection container identity - Audience
  */
  audience?: string;
}

/**
 * Data Protection Manager (DPM) specific backup engine.
*/
export interface DpmBackupEngine extends BackupEngineBase {
}

/**
 * DPM workload-specific protection container.
*/
export interface DpmContainer extends ProtectionContainer {
  /**
   * Specifies whether the container is re-registrable.
  */
  canReRegister?: boolean;
  /**
   * ID of container.
  */
  containerId?: string;
  /**
   * Number of protected items in the BackupEngine
  */
  protectedItemCount?: number;
  /**
   * Backup engine Agent version
  */
  dpmAgentVersion?: string;
  /**
   * List of BackupEngines protecting the container
  */
  dpmServers?: string[];
  /**
   * To check if upgrade available
  */
  upgradeAvailable?: boolean;
  /**
   * Protection status of the container.
  */
  protectionStatus?: string;
  /**
   * Extended Info of the container.
  */
  extendedInfo?: DPMContainerExtendedInfo;
}

/**
 * Container extended information
*/
export interface GenericContainerExtendedInfo {
  /**
   * Public key of container cert
  */
  rawCertData?: string;
  /**
   * Container identity information
  */
  containerIdentityInfo?: ContainerIdentityInfo;
  /**
   * Azure Backup Service Endpoints for the container
  */
  serviceEndpoints?: { [propertyName: string]: string };
}

/**
 * Base class for generic container of backup items
*/
export interface GenericContainer extends ProtectionContainer {
  /**
   * Name of the container's fabric
  */
  fabricName?: string;
  /**
   * Extended information (not returned in List container API calls)
  */
  extendedInformation?: GenericContainerExtendedInfo;
}

/**
 * Generic backup copy.
*/
export interface GenericRecoveryPoint extends RecoveryPoint {
  /**
   * Friendly name of the backup copy.
  */
  friendlyName?: string;
  /**
   * Type of the backup copy.
  */
  recoveryPointType?: string;
  /**
   * Time at which this backup copy was created.
  */
  recoveryPointTime?: Date;
  /**
   * Additional information associated with this backup copy.
  */
  recoveryPointAdditionalInfo?: string;
}

/**
 * Filters to list backup items.
*/
export interface GetProtectedItemQueryObject {
  /**
   * Specifies if the additional information should be provided for this item.
  */
  expand?: string;
}

/**
 * IaaS VM workload-specific backup request.
*/
export interface IaasVMBackupRequest extends BackupRequest {
  /**
   * Backup copy will expire after the time specified (UTC).
  */
  recoveryPointExpiryTimeInUTC?: Date;
}

/**
 * Parameters to restore file/folders API.
*/
export interface ILRRequest {
  /**
   * Polymorphic Discriminator
  */
  objectType: string;
}

/**
 * Restore files/folders from a backup copy of IaaS VM.
*/
export interface IaasVMILRRegistrationRequest extends ILRRequest {
  /**
   * ID of the IaaS VM backup copy from where the files/folders have to be restored.
  */
  recoveryPointId?: string;
  /**
   * Fully qualified ARM ID of the virtual machine whose the files / folders have to be restored.
  */
  virtualMachineId?: string;
  /**
   * iSCSI initiator name.
  */
  initiatorName?: string;
  /**
   * Whether to renew existing registration with the iSCSI server.
  */
  renewExistingRegistration?: boolean;
}

/**
 * KEK is encryption key for BEK.
*/
export interface KEKDetails {
  /**
   * Key is KEK.
  */
  keyUrl?: string;
  /**
   * Key Vault ID where this Key is stored.
  */
  keyVaultId?: string;
  /**
   * KEK data.
  */
  keyBackupData?: string;
}

/**
 * BEK is bitlocker key.
 * KEK is encryption key for BEK
 * If the VM was encrypted then we will store following details :
 * 1. Secret(BEK) - Url + Backup Data + vaultId.
 * 2. Key(KEK) - Url + Backup Data + vaultId.
 * 3. EncryptionMechanism
 * BEK and KEK can potentially have different vault ids.
*/
export interface KeyAndSecretDetails {
  /**
   * KEK is encryption key for BEK.
  */
  kekDetails?: KEKDetails;
  /**
   * BEK is bitlocker encryption key.
  */
  bekDetails?: BEKDetails;
  /**
   * Encryption mechanism: None/ SinglePass/ DoublePass
  */
  encryptionMechanism?: string;
}

/**
 * Recovery point tier information.
*/
export interface RecoveryPointTierInformation {
  /**
   * Recovery point tier type. Possible values include: 'Invalid', 'InstantRP', 'HardenedRP'
  */
  type?: string;
  /**
   * Recovery point tier status. Possible values include: 'Invalid', 'Valid', 'Disabled', 'Deleted'
  */
  status?: string;
}

/**
 * IaaS VM workload specific backup copy.
*/
export interface IaasVMRecoveryPoint extends RecoveryPoint {
  /**
   * Type of the backup copy.
  */
  recoveryPointType?: string;
  /**
   * Time at which this backup copy was created.
  */
  recoveryPointTime?: Date;
  /**
   * Additional information associated with this backup copy.
  */
  recoveryPointAdditionalInfo?: string;
  /**
   * Storage type of the VM whose backup copy is created.
  */
  sourceVMStorageType?: string;
  /**
   * Identifies whether the VM was encrypted when the backup copy is created.
  */
  isSourceVMEncrypted?: boolean;
  /**
   * Required details for recovering an encrypted VM. Applicable only when IsSourceVMEncrypted is
   * true.
  */
  keyAndSecret?: KeyAndSecretDetails;
  /**
   * Is the session to recover items from this backup copy still active.
  */
  isInstantIlrSessionActive?: boolean;
  /**
   * Recovery point tier information.
  */
  recoveryPointTierDetails?: RecoveryPointTierInformation[];
  /**
   * Whether VM is with Managed Disks
  */
  isManagedVirtualMachine?: boolean;
  /**
   * Virtual Machine Size
  */
  virtualMachineSize?: string;
  /**
   * Original Storage Account Option
  */
  originalStorageAccountOption?: boolean;
  /**
   * OS type
  */
  osType?: string;
}

/**
 * Parameters to restore file/folders API.
*/
export interface ILRRequestResource extends Resource {
  /**
   * ILRRequestResource properties
  */
  properties?: ILRRequest;
}

/**
 * Target details for file / folder restore.
*/
export interface InstantItemRecoveryTarget {
  /**
   * List of client scripts.
  */
  clientScripts?: ClientScriptForConnect[];
}

/**
 * Additional information of the container.
*/
export interface MabContainerExtendedInfo {
  /**
   * Time stamp when this container was refreshed.
  */
  lastRefreshedAt?: Date;
  /**
   * Type of backup items associated with this container. Possible values include: 'Invalid', 'VM',
   * 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
   * 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare', 'SAPHanaDatabase'
  */
  backupItemType?: string;
  /**
   * List of backup items associated with this container.
  */
  backupItems?: string[];
  /**
   * Backup policy associated with this container.
  */
  policyName?: string;
  /**
   * Latest backup status of this container.
  */
  lastBackupStatus?: string;
}

/**
 * MAB workload-specific Health Details.
*/
export interface MABContainerHealthDetails {
  /**
   * Health Code
  */
  code?: number;
  /**
   * Health Title
  */
  title?: string;
  /**
   * Health Message
  */
  message?: string;
  /**
   * Health Recommended Actions
  */
  recommendations?: string[];
}

/**
 * Container with items backed up using MAB backup engine.
*/
export interface MabContainer extends ProtectionContainer {
  /**
   * Can the container be registered one more time.
  */
  canReRegister?: boolean;
  /**
   * ContainerID represents the container.
  */
  containerId?: number;
  /**
   * Number of items backed up in this container.
  */
  protectedItemCount?: number;
  /**
   * Agent version of this container.
  */
  agentVersion?: string;
  /**
   * Additional information for this container
  */
  extendedInfo?: MabContainerExtendedInfo;
  /**
   * Health details on this mab container.
  */
  mabContainerHealthDetails?: MABContainerHealthDetails[];
  /**
   * Health state of mab container.
  */
  containerHealthState?: string;
}

/**
 * Error information associated with operation status call.
*/
export interface OperationStatusError {
  /**
   * Error code of the operation failure.
  */
  code?: string;
  /**
   * Error message displayed if the operation failure.
  */
  message?: string;
}

/**
 * Base class for additional information of operation status.
*/
export interface OperationStatusExtendedInfo {
  /**
   * Polymorphic Discriminator
  */
  objectType: string;
}

/**
 * Operation status.
*/
export interface OperationStatus {
  /**
   * ID of the operation.
  */
  id?: string;
  /**
   * Name of the operation.
  */
  name?: string;
  /**
   * Operation status. Possible values include: 'Invalid', 'InProgress', 'Succeeded', 'Failed',
   * 'Canceled'
  */
  status?: string;
  /**
   * Operation start time. Format: ISO-8601.
  */
  startTime?: Date;
  /**
   * Operation end time. Format: ISO-8601.
  */
  endTime?: Date;
  /**
   * Error information related to this operation.
  */
  error?: OperationStatusError;
  /**
   * Additional information associated with this operation.
  */
  properties?: OperationStatusExtendedInfo;
}

/**
 * Operation status job extended info.
*/
export interface OperationStatusJobExtendedInfo extends OperationStatusExtendedInfo {
  /**
   * ID of the job created for this protected item.
  */
  jobId?: string;
}

/**
 * Operation status extended info for list of jobs.
*/
export interface OperationStatusJobsExtendedInfo extends OperationStatusExtendedInfo {
  /**
   * IDs of the jobs created for the protected item.
  */
  jobIds?: string[];
  /**
   * Stores all the failed jobs along with the corresponding error codes.
  */
  failedJobsError?: { [propertyName: string]: string };
}

/**
 * Operation status extended info for ILR provision action.
*/
export interface OperationStatusProvisionILRExtendedInfo extends OperationStatusExtendedInfo {
  /**
   * Target details for file / folder restore.
  */
  recoveryTarget?: InstantItemRecoveryTarget;
}

/**
 * Protectable Container Class.
*/
export interface ProtectableContainerResource extends Resource {
  /**
   * ProtectableContainerResource properties
  */
  properties?: ProtectableContainer;
}

/**
 * Base class for container with backup items. Containers with specific workloads are derived from
 * this class.
*/
export interface ProtectionContainerResource extends Resource {
  /**
   * ProtectionContainerResource properties
  */
  properties?: ProtectionContainer;
}

/**
 * Base class for backup copies. Workload-specific backup copies are derived from this class.
*/
export interface RecoveryPointResource extends Resource {
  /**
   * RecoveryPointResource properties
  */
  properties?: RecoveryPoint;
}

/**
 * Base class for restore request. Workload-specific restore requests are derived from this class.
*/
export interface RestoreRequestResource extends Resource {
  /**
   * RestoreRequestResource properties
  */
  properties?: RestoreRequest;
}

/**
 * The token information details.
*/
export interface TokenInformation {
  /**
   * Token value.
  */
  token?: string;
  /**
   * Expiry time of token.
  */
  expiryTimeInUtcTicks?: number;
  /**
   * Security PIN
  */
  securityPIN?: string;
}

/**
 * Base class for backup item. Workload-specific backup items are derived from this class.
*/
export interface WorkloadItemResource extends Resource {
  /**
   * WorkloadItemResource properties
  */
  properties?: WorkloadItem;
}

/**
 * Base class for backup item. Workload-specific backup items are derived from this class.
*/
export interface WorkloadProtectableItemResource extends Resource {
  /**
   * WorkloadProtectableItemResource properties
  */
  properties?: WorkloadProtectableItem;
}

/**
 * Localized display information of an operation.
*/
export interface ClientDiscoveryDisplay {
  /**
   * Name of the provider for display purposes
  */
  provider?: string;
  /**
   * ResourceType for which this Operation can be performed.
  */
  resource?: string;
  /**
   * Operations Name itself.
  */
  operation?: string;
  /**
   * Description of the operation having details of what operation is about.
  */
  description?: string;
}

/**
 * Class to represent shoebox log specification in json client discovery.
*/
export interface ClientDiscoveryForLogSpecification {
  /**
   * Name for shoebox log specification.
  */
  name?: string;
  /**
   * Localized display name
  */
  displayName?: string;
  /**
   * blob duration of shoebox log specification
  */
  blobDuration?: string;
}

/**
 * Class to represent shoebox service specification in json client discovery.
*/
export interface ClientDiscoveryForServiceSpecification {
  /**
   * List of log specifications of this operation.
  */
  logSpecifications?: ClientDiscoveryForLogSpecification[];
}

/**
 * Class to represent shoebox properties in json client discovery.
*/
export interface ClientDiscoveryForProperties {
  /**
   * Operation properties.
  */
  serviceSpecification?: ClientDiscoveryForServiceSpecification;
}

/**
 * Available operation details.
*/
export interface ClientDiscoveryValueForSingleApi {
  /**
   * Name of the Operation.
  */
  name?: string;
  /**
   * Contains the localized display information for this particular operation
  */
  display?: ClientDiscoveryDisplay;
  /**
   * The intended executor of the operation;governs the display of the operation in the RBAC UX and
   * the audit logs UX
  */
  origin?: string;
  /**
   * ShoeBox properties for the given operation.
  */
  properties?: ClientDiscoveryForProperties;
}

/**
 * List of Job resources
*/
export interface JobResourceList extends Array<JobResource> {
}

/**
 * List of ProtectionPolicy resources
*/
export interface ProtectionPolicyResourceList extends Array<ProtectionPolicyResource> {
}

/**
 * List of ProtectedItem resources
*/
export interface ProtectedItemResourceList extends Array<ProtectedItemResource> {
}

/**
 * List of ProtectionIntent resources
*/
export interface ProtectionIntentResourceList extends Array<ProtectionIntentResource> {
}

/**
 * Backup management usage for vault.
*/
export interface BackupManagementUsageList extends Array<BackupManagementUsage> {
}

/**
 * List of BackupEngineBase resources
*/
export interface BackupEngineBaseResourceList extends Array<BackupEngineBaseResource> {
}

/**
 * List of ProtectableContainer resources
*/
export interface ProtectableContainerResourceList extends Array<ProtectableContainerResource> {
}

/**
 * List of WorkloadItem resources
*/
export interface WorkloadItemResourceList extends Array<WorkloadItemResource> {
}

/**
 * List of RecoveryPoint resources
*/
export interface RecoveryPointResourceList extends Array<RecoveryPointResource> {
}

/**
 * List of WorkloadProtectableItem resources
*/
export interface WorkloadProtectableItemResourceList extends Array<WorkloadProtectableItemResource>
{
}

/**
 * List of ProtectionContainer resources
*/
export interface ProtectionContainerResourceList extends Array<ProtectionContainerResource> {
}

/**
 * Operations List response which contains list of available APIs.
*/
export interface ClientDiscoveryResponse extends Array<ClientDiscoveryValueForSingleApi> {
  /**
   * Link to the next chunk of Response.
  */
  nextLink?: string;
}

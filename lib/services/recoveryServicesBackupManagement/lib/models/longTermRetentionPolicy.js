/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Long term retention policy.
 *
 * @extends models['RetentionPolicy']
 */
class LongTermRetentionPolicy extends models['RetentionPolicy'] {
  /**
   * Create a LongTermRetentionPolicy.
   * @property {object} [dailySchedule] Daily retention schedule of the
   * protection policy.
   * @property {array} [dailySchedule.retentionTimes] Retention times of
   * retention policy.
   * @property {object} [dailySchedule.retentionDuration] Retention duration of
   * retention Policy.
   * @property {number} [dailySchedule.retentionDuration.count] Count of
   * duration types. Retention duration is obtained by the counting the
   * duration type Count times.
   * For example, when Count = 3 and DurationType = Weeks, retention duration
   * will be three weeks.
   * @property {string} [dailySchedule.retentionDuration.durationType]
   * Retention duration type of retention policy. Possible values include:
   * 'Invalid', 'Days', 'Weeks', 'Months', 'Years'
   * @property {object} [weeklySchedule] Weekly retention schedule of the
   * protection policy.
   * @property {array} [weeklySchedule.daysOfTheWeek] List of days of week for
   * weekly retention policy.
   * @property {array} [weeklySchedule.retentionTimes] Retention times of
   * retention policy.
   * @property {object} [weeklySchedule.retentionDuration] Retention duration
   * of retention Policy.
   * @property {number} [weeklySchedule.retentionDuration.count] Count of
   * duration types. Retention duration is obtained by the counting the
   * duration type Count times.
   * For example, when Count = 3 and DurationType = Weeks, retention duration
   * will be three weeks.
   * @property {string} [weeklySchedule.retentionDuration.durationType]
   * Retention duration type of retention policy. Possible values include:
   * 'Invalid', 'Days', 'Weeks', 'Months', 'Years'
   * @property {object} [monthlySchedule] Monthly retention schedule of the
   * protection policy.
   * @property {string} [monthlySchedule.retentionScheduleFormatType] Retention
   * schedule format type for monthly retention policy. Possible values
   * include: 'Invalid', 'Daily', 'Weekly'
   * @property {object} [monthlySchedule.retentionScheduleDaily] Daily
   * retention format for monthly retention policy.
   * @property {array} [monthlySchedule.retentionScheduleDaily.daysOfTheMonth]
   * List of days of the month.
   * @property {object} [monthlySchedule.retentionScheduleWeekly] Weekly
   * retention format for monthly retention policy.
   * @property {array} [monthlySchedule.retentionScheduleWeekly.daysOfTheWeek]
   * List of days of the week.
   * @property {array}
   * [monthlySchedule.retentionScheduleWeekly.weeksOfTheMonth] List of weeks of
   * month.
   * @property {array} [monthlySchedule.retentionTimes] Retention times of
   * retention policy.
   * @property {object} [monthlySchedule.retentionDuration] Retention duration
   * of retention Policy.
   * @property {number} [monthlySchedule.retentionDuration.count] Count of
   * duration types. Retention duration is obtained by the counting the
   * duration type Count times.
   * For example, when Count = 3 and DurationType = Weeks, retention duration
   * will be three weeks.
   * @property {string} [monthlySchedule.retentionDuration.durationType]
   * Retention duration type of retention policy. Possible values include:
   * 'Invalid', 'Days', 'Weeks', 'Months', 'Years'
   * @property {object} [yearlySchedule] Yearly retention schedule of the
   * protection policy.
   * @property {string} [yearlySchedule.retentionScheduleFormatType] Retention
   * schedule format for yearly retention policy. Possible values include:
   * 'Invalid', 'Daily', 'Weekly'
   * @property {array} [yearlySchedule.monthsOfYear] List of months of year of
   * yearly retention policy.
   * @property {object} [yearlySchedule.retentionScheduleDaily] Daily retention
   * format for yearly retention policy.
   * @property {array} [yearlySchedule.retentionScheduleDaily.daysOfTheMonth]
   * List of days of the month.
   * @property {object} [yearlySchedule.retentionScheduleWeekly] Weekly
   * retention format for yearly retention policy.
   * @property {array} [yearlySchedule.retentionScheduleWeekly.daysOfTheWeek]
   * List of days of the week.
   * @property {array} [yearlySchedule.retentionScheduleWeekly.weeksOfTheMonth]
   * List of weeks of month.
   * @property {array} [yearlySchedule.retentionTimes] Retention times of
   * retention policy.
   * @property {object} [yearlySchedule.retentionDuration] Retention duration
   * of retention Policy.
   * @property {number} [yearlySchedule.retentionDuration.count] Count of
   * duration types. Retention duration is obtained by the counting the
   * duration type Count times.
   * For example, when Count = 3 and DurationType = Weeks, retention duration
   * will be three weeks.
   * @property {string} [yearlySchedule.retentionDuration.durationType]
   * Retention duration type of retention policy. Possible values include:
   * 'Invalid', 'Days', 'Weeks', 'Months', 'Years'
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of LongTermRetentionPolicy
   *
   * @returns {object} metadata of LongTermRetentionPolicy
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'LongTermRetentionPolicy',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'retentionPolicyType',
          clientName: 'retentionPolicyType'
        },
        uberParent: 'RetentionPolicy',
        className: 'LongTermRetentionPolicy',
        modelProperties: {
          retentionPolicyType: {
            required: true,
            serializedName: 'retentionPolicyType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          dailySchedule: {
            required: false,
            serializedName: 'dailySchedule',
            type: {
              name: 'Composite',
              className: 'DailyRetentionSchedule'
            }
          },
          weeklySchedule: {
            required: false,
            serializedName: 'weeklySchedule',
            type: {
              name: 'Composite',
              className: 'WeeklyRetentionSchedule'
            }
          },
          monthlySchedule: {
            required: false,
            serializedName: 'monthlySchedule',
            type: {
              name: 'Composite',
              className: 'MonthlyRetentionSchedule'
            }
          },
          yearlySchedule: {
            required: false,
            serializedName: 'yearlySchedule',
            type: {
              name: 'Composite',
              className: 'YearlyRetentionSchedule'
            }
          }
        }
      }
    };
  }
}

module.exports = LongTermRetentionPolicy;

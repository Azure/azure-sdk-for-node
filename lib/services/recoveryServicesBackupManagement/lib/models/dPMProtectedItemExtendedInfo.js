/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Additional information of DPM Protected item.
 *
 */
class DPMProtectedItemExtendedInfo {
  /**
   * Create a DPMProtectedItemExtendedInfo.
   * @property {object} [protectableObjectLoadPath] Attribute to provide
   * information on various DBs.
   * @property {boolean} [protectedProperty] To check if backup item is disk
   * protected.
   * @property {boolean} [isPresentOnCloud] To check if backup item is cloud
   * protected.
   * @property {string} [lastBackupStatus] Last backup status information on
   * backup item.
   * @property {date} [lastRefreshedAt] Last refresh time on backup item.
   * @property {date} [oldestRecoveryPoint] Oldest cloud recovery point time.
   * @property {number} [recoveryPointCount] cloud recovery point count.
   * @property {date} [onPremiseOldestRecoveryPoint] Oldest disk recovery point
   * time.
   * @property {date} [onPremiseLatestRecoveryPoint] latest disk recovery point
   * time.
   * @property {number} [onPremiseRecoveryPointCount] disk recovery point
   * count.
   * @property {boolean} [isCollocated] To check if backup item is collocated.
   * @property {string} [protectionGroupName] Protection group name of the
   * backup item.
   * @property {string} [diskStorageUsedInBytes] Used Disk storage in bytes.
   * @property {string} [totalDiskStorageSizeInBytes] total Disk storage in
   * bytes.
   */
  constructor() {
  }

  /**
   * Defines the metadata of DPMProtectedItemExtendedInfo
   *
   * @returns {object} metadata of DPMProtectedItemExtendedInfo
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DPMProtectedItemExtendedInfo',
      type: {
        name: 'Composite',
        className: 'DPMProtectedItemExtendedInfo',
        modelProperties: {
          protectableObjectLoadPath: {
            required: false,
            serializedName: 'protectableObjectLoadPath',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          protectedProperty: {
            required: false,
            serializedName: 'protected',
            type: {
              name: 'Boolean'
            }
          },
          isPresentOnCloud: {
            required: false,
            serializedName: 'isPresentOnCloud',
            type: {
              name: 'Boolean'
            }
          },
          lastBackupStatus: {
            required: false,
            serializedName: 'lastBackupStatus',
            type: {
              name: 'String'
            }
          },
          lastRefreshedAt: {
            required: false,
            serializedName: 'lastRefreshedAt',
            type: {
              name: 'DateTime'
            }
          },
          oldestRecoveryPoint: {
            required: false,
            serializedName: 'oldestRecoveryPoint',
            type: {
              name: 'DateTime'
            }
          },
          recoveryPointCount: {
            required: false,
            serializedName: 'recoveryPointCount',
            type: {
              name: 'Number'
            }
          },
          onPremiseOldestRecoveryPoint: {
            required: false,
            serializedName: 'onPremiseOldestRecoveryPoint',
            type: {
              name: 'DateTime'
            }
          },
          onPremiseLatestRecoveryPoint: {
            required: false,
            serializedName: 'onPremiseLatestRecoveryPoint',
            type: {
              name: 'DateTime'
            }
          },
          onPremiseRecoveryPointCount: {
            required: false,
            serializedName: 'onPremiseRecoveryPointCount',
            type: {
              name: 'Number'
            }
          },
          isCollocated: {
            required: false,
            serializedName: 'isCollocated',
            type: {
              name: 'Boolean'
            }
          },
          protectionGroupName: {
            required: false,
            serializedName: 'protectionGroupName',
            type: {
              name: 'String'
            }
          },
          diskStorageUsedInBytes: {
            required: false,
            serializedName: 'diskStorageUsedInBytes',
            type: {
              name: 'String'
            }
          },
          totalDiskStorageSizeInBytes: {
            required: false,
            serializedName: 'totalDiskStorageSizeInBytes',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = DPMProtectedItemExtendedInfo;

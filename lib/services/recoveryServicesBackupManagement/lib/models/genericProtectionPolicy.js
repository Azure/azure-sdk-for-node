/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Azure VM (Mercury) workload-specific backup policy.
 *
 * @extends models['ProtectionPolicy']
 */
class GenericProtectionPolicy extends models['ProtectionPolicy'] {
  /**
   * Create a GenericProtectionPolicy.
   * @property {array} [subProtectionPolicy] List of sub-protection policies
   * which includes schedule and retention
   * @property {string} [timeZone] TimeZone optional input as string. For
   * example: TimeZone = "Pacific Standard Time".
   * @property {string} [fabricName] Name of this policy's fabric.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of GenericProtectionPolicy
   *
   * @returns {object} metadata of GenericProtectionPolicy
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'GenericProtectionPolicy',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'backupManagementType',
          clientName: 'backupManagementType'
        },
        uberParent: 'ProtectionPolicy',
        className: 'GenericProtectionPolicy',
        modelProperties: {
          protectedItemsCount: {
            required: false,
            serializedName: 'protectedItemsCount',
            type: {
              name: 'Number'
            }
          },
          backupManagementType: {
            required: true,
            serializedName: 'backupManagementType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          subProtectionPolicy: {
            required: false,
            serializedName: 'subProtectionPolicy',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'SubProtectionPolicyElementType',
                  type: {
                    name: 'Composite',
                    className: 'SubProtectionPolicy'
                  }
              }
            }
          },
          timeZone: {
            required: false,
            serializedName: 'timeZone',
            type: {
              name: 'String'
            }
          },
          fabricName: {
            required: false,
            serializedName: 'fabricName',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = GenericProtectionPolicy;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * AzureBackupServer (DPMVenus) workload-specific protection container.
 *
 * @extends models['ProtectionContainer']
 */
class AzureBackupServerContainer extends models['ProtectionContainer'] {
  /**
   * Create a AzureBackupServerContainer.
   * @member {boolean} [canReRegister] Specifies whether the container is
   * re-registrable.
   * @member {string} [containerId] ID of container.
   * @member {number} [protectedItemCount] Number of protected items in the
   * BackupEngine
   * @member {string} [dpmAgentVersion] Backup engine Agent version
   * @member {array} [dPMServers] List of BackupEngines protecting the
   * container
   * @member {boolean} [upgradeAvailable] To check if upgrade available
   * @member {string} [protectionStatus] Protection status of the container.
   * @member {object} [extendedInfo] Extended Info of the container.
   * @member {date} [extendedInfo.lastRefreshedAt] Last refresh time of the
   * DPMContainer.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of AzureBackupServerContainer
   *
   * @returns {object} metadata of AzureBackupServerContainer
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AzureBackupServerContainer',
      type: {
        name: 'Composite',
        className: 'AzureBackupServerContainer',
        modelProperties: {
          friendlyName: {
            required: false,
            serializedName: 'friendlyName',
            type: {
              name: 'String'
            }
          },
          backupManagementType: {
            required: false,
            serializedName: 'backupManagementType',
            type: {
              name: 'String'
            }
          },
          registrationStatus: {
            required: false,
            serializedName: 'registrationStatus',
            type: {
              name: 'String'
            }
          },
          healthStatus: {
            required: false,
            serializedName: 'healthStatus',
            type: {
              name: 'String'
            }
          },
          containerType: {
            required: false,
            readOnly: true,
            serializedName: 'containerType',
            type: {
              name: 'String'
            }
          },
          protectableObjectType: {
            required: true,
            serializedName: 'protectableObjectType',
            type: {
              name: 'String'
            }
          },
          canReRegister: {
            required: false,
            serializedName: 'canReRegister',
            type: {
              name: 'Boolean'
            }
          },
          containerId: {
            required: false,
            serializedName: 'containerId',
            type: {
              name: 'String'
            }
          },
          protectedItemCount: {
            required: false,
            serializedName: 'protectedItemCount',
            type: {
              name: 'Number'
            }
          },
          dpmAgentVersion: {
            required: false,
            serializedName: 'dpmAgentVersion',
            type: {
              name: 'String'
            }
          },
          dPMServers: {
            required: false,
            serializedName: 'DPMServers',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          upgradeAvailable: {
            required: false,
            serializedName: 'UpgradeAvailable',
            type: {
              name: 'Boolean'
            }
          },
          protectionStatus: {
            required: false,
            serializedName: 'protectionStatus',
            type: {
              name: 'String'
            }
          },
          extendedInfo: {
            required: false,
            serializedName: 'extendedInfo',
            type: {
              name: 'Composite',
              className: 'DPMContainerExtendedInfo'
            }
          }
        }
      }
    };
  }
}

module.exports = AzureBackupServerContainer;

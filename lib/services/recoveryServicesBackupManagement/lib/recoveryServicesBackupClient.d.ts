/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClientCredentials } from 'ms-rest';
import { AzureServiceClient, AzureServiceClientOptions } from 'ms-rest-azure';
import * as models from "./models";
import * as operations from "./operations";

export default class RecoveryServicesBackupClient extends AzureServiceClient {
  /**
   * Initializes a new instance of the RecoveryServicesBackupClient class.
   * @constructor
   *
   * @class
   * @param {credentials} credentials - Credentials needed for the client to connect to Azure.
   *
   * @param {string} subscriptionId - The subscription Id.
   *
   * @param {string} [baseUri] - The base URI of the service.
   *
   * @param {object} [options] - The parameter options
   *
   * @param {Array} [options.filters] - Filters to be added to the request pipeline
   *
   * @param {object} [options.requestOptions] - Options for the underlying request object
   * {@link https://github.com/request/request#requestoptions-callback Options doc}
   *
   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
   *
   * @param {string} [options.acceptLanguage] - The preferred language for the response.
   *
   * @param {number} [options.longRunningOperationRetryTimeout] - The retry timeout in seconds for Long Running Operations. Default value is 30.
   *
   * @param {boolean} [options.generateClientRequestId] - Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.
   *
   */
  constructor(credentials: ServiceClientCredentials, subscriptionId: string, baseUri?: string, options?: AzureServiceClientOptions);

  credentials: ServiceClientCredentials;

  subscriptionId: string;

  acceptLanguage: string;

  longRunningOperationRetryTimeout: number;

  generateClientRequestId: boolean;

  // Operation groups
  backupFabrics: operations.BackupFabrics;
  scopedBackupPolicies: operations.ScopedBackupPolicies;
  scopedProtectionPolicies: operations.ScopedProtectionPolicies;
  scopedProtectionPolicyOperationResults: operations.ScopedProtectionPolicyOperationResults;
  scopedProtectionPolicyOperationStatuses: operations.ScopedProtectionPolicyOperationStatuses;
  backupProtectionContainersInFabric: operations.BackupProtectionContainersInFabric;
  backupProtectedItemsInContainer: operations.BackupProtectedItemsInContainer;
  protectionContainers: operations.ProtectionContainers;
  protectionIntentOperations: operations.ProtectionIntentOperations;
  backupStatus: operations.BackupStatus;
  featureSupport: operations.FeatureSupport;
  backupJobs: operations.BackupJobs;
  jobDetails: operations.JobDetails;
  exportJobsOperationResults: operations.ExportJobsOperationResults;
  jobs: operations.Jobs;
  backupPolicies: operations.BackupPolicies;
  backupProtectedItems: operations.BackupProtectedItems;
  backupProtectionIntent: operations.BackupProtectionIntent;
  backupUsageSummaries: operations.BackupUsageSummaries;
  operation: operations.Operation;
  backupResourceVaultConfigs: operations.BackupResourceVaultConfigs;
  backupEngines: operations.BackupEngines;
  protectionContainerRefreshOperationResults: operations.ProtectionContainerRefreshOperationResults;
  protectableContainers: operations.ProtectableContainers;
  backupWorkloadItems: operations.BackupWorkloadItems;
  protectionContainerOperationResults: operations.ProtectionContainerOperationResults;
  protectedItems: operations.ProtectedItems;
  backups: operations.Backups;
  protectedItemOperationResults: operations.ProtectedItemOperationResults;
  protectedItemOperationStatuses: operations.ProtectedItemOperationStatuses;
  recoveryPoints: operations.RecoveryPoints;
  itemLevelRecoveryConnections: operations.ItemLevelRecoveryConnections;
  restores: operations.Restores;
  jobCancellations: operations.JobCancellations;
  jobOperationResults: operations.JobOperationResults;
  backupOperationResults: operations.BackupOperationResults;
  backupOperationStatuses: operations.BackupOperationStatuses;
  protectionPolicies: operations.ProtectionPolicies;
  protectionPolicyOperationResults: operations.ProtectionPolicyOperationResults;
  protectionPolicyOperationStatuses: operations.ProtectionPolicyOperationStatuses;
  backupProtectableItems: operations.BackupProtectableItems;
  backupProtectionContainers: operations.BackupProtectionContainers;
  securityPINs: operations.SecurityPINs;
  backupResourceStorageConfigs: operations.BackupResourceStorageConfigs;
  operations: operations.Operations;
}

export { RecoveryServicesBackupClient, models as RecoveryServicesBackupModels };

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * ProtectionIntentOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectionIntentOperations {


    /**
     * @summary It will validate followings
     * 1. Vault capacity
     * 2. VM is already protected
     * 3. Any VM related configuration passed in properties.
     *
     * @param {string} azureRegion Azure region to hit Api
     *
     * @param {object} parameters Enable backup validation request on Virtual
     * Machine
     *
     * @param {string} [parameters.resourceType] ProtectedItem Type- VM,
     * SqlDataBase, AzureFileShare etc. Possible values include: 'Invalid', 'VM',
     * 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM',
     * 'SystemState', 'Client', 'GenericDataSource', 'SQLDataBase',
     * 'AzureFileShare', 'SAPHanaDatabase'
     *
     * @param {string} [parameters.resourceId] ARM Virtual Machine Id
     *
     * @param {string} [parameters.properties] Configuration of VM if any needs to
     * be validated like OS type etc
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PreValidateEnableBackupResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    validateWithHttpOperationResponse(azureRegion: string, parameters: models.PreValidateEnableBackupRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PreValidateEnableBackupResponse>>;

    /**
     * @summary It will validate followings
     * 1. Vault capacity
     * 2. VM is already protected
     * 3. Any VM related configuration passed in properties.
     *
     * @param {string} azureRegion Azure region to hit Api
     *
     * @param {object} parameters Enable backup validation request on Virtual
     * Machine
     *
     * @param {string} [parameters.resourceType] ProtectedItem Type- VM,
     * SqlDataBase, AzureFileShare etc. Possible values include: 'Invalid', 'VM',
     * 'FileFolder', 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM',
     * 'SystemState', 'Client', 'GenericDataSource', 'SQLDataBase',
     * 'AzureFileShare', 'SAPHanaDatabase'
     *
     * @param {string} [parameters.resourceId] ARM Virtual Machine Id
     *
     * @param {string} [parameters.properties] Configuration of VM if any needs to
     * be validated like OS type etc
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PreValidateEnableBackupResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PreValidateEnableBackupResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PreValidateEnableBackupResponse} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    validate(azureRegion: string, parameters: models.PreValidateEnableBackupRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PreValidateEnableBackupResponse>;
    validate(azureRegion: string, parameters: models.PreValidateEnableBackupRequest, callback: ServiceCallback<models.PreValidateEnableBackupResponse>): void;
    validate(azureRegion: string, parameters: models.PreValidateEnableBackupRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PreValidateEnableBackupResponse>): void;


    /**
     * Provides the details of the protection intent up item. This is an
     * asynchronous operation. To know the status of the operation,
     * call the GetItemOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backed up item.
     *
     * @param {string} intentObjectName Backed up item name whose details are to be
     * fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionIntentResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionIntentResource>>;

    /**
     * Provides the details of the protection intent up item. This is an
     * asynchronous operation. To know the status of the operation,
     * call the GetItemOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backed up item.
     *
     * @param {string} intentObjectName Backed up item name whose details are to be
     * fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionIntentResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionIntentResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionIntentResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionIntentResource>;
    get(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, callback: ServiceCallback<models.ProtectionIntentResource>): void;
    get(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionIntentResource>): void;


    /**
     * Create Intent for Enabling backup of an item. This is a synchronous
     * operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backup item.
     *
     * @param {string} intentObjectName Intent object name.
     *
     * @param {object} parameters resource backed up item
     *
     * @param {object} [parameters.properties] ProtectionIntentResource properties
     *
     * @param {string} [parameters.properties.backupManagementType] Type of backup
     * management for the backed up item. Possible values include: 'Invalid',
     * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql',
     * 'AzureStorage', 'AzureWorkload', 'DefaultBackup'
     *
     * @param {string} [parameters.properties.sourceResourceId] ARM ID of the
     * resource to be backed up.
     *
     * @param {string} [parameters.properties.itemId] ID of the item which is
     * getting protected, In case of Azure Vm , it is ProtectedItemId
     *
     * @param {string} [parameters.properties.policyId] ID of the backup policy
     * with which this item is backed up.
     *
     * @param {string} [parameters.properties.protectionState] Backup state of this
     * backup item. Possible values include: 'Invalid', 'NotProtected',
     * 'Protecting', 'Protected', 'ProtectionFailed'
     *
     * @param {string} parameters.properties.protectionIntentItemType Polymorphic
     * Discriminator
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionIntentResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, parameters: models.ProtectionIntentResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionIntentResource>>;

    /**
     * Create Intent for Enabling backup of an item. This is a synchronous
     * operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backup item.
     *
     * @param {string} intentObjectName Intent object name.
     *
     * @param {object} parameters resource backed up item
     *
     * @param {object} [parameters.properties] ProtectionIntentResource properties
     *
     * @param {string} [parameters.properties.backupManagementType] Type of backup
     * management for the backed up item. Possible values include: 'Invalid',
     * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql',
     * 'AzureStorage', 'AzureWorkload', 'DefaultBackup'
     *
     * @param {string} [parameters.properties.sourceResourceId] ARM ID of the
     * resource to be backed up.
     *
     * @param {string} [parameters.properties.itemId] ID of the item which is
     * getting protected, In case of Azure Vm , it is ProtectedItemId
     *
     * @param {string} [parameters.properties.policyId] ID of the backup policy
     * with which this item is backed up.
     *
     * @param {string} [parameters.properties.protectionState] Backup state of this
     * backup item. Possible values include: 'Invalid', 'NotProtected',
     * 'Protecting', 'Protected', 'ProtectionFailed'
     *
     * @param {string} parameters.properties.protectionIntentItemType Polymorphic
     * Discriminator
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionIntentResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionIntentResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionIntentResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, parameters: models.ProtectionIntentResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionIntentResource>;
    createOrUpdate(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, parameters: models.ProtectionIntentResource, callback: ServiceCallback<models.ProtectionIntentResource>): void;
    createOrUpdate(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, parameters: models.ProtectionIntentResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionIntentResource>): void;


    /**
     * Used to remove intent from an item
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the intent.
     *
     * @param {string} intentObjectName Intent to be deleted.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Used to remove intent from an item
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the intent.
     *
     * @param {string} intentObjectName Intent to be deleted.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, callback: ServiceCallback<void>): void;
    deleteMethod(vaultName: string, resourceGroupName: string, fabricName: string, intentObjectName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * BackupStatus
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupStatus {


    /**
     * @summary Get the container backup status
     *
     * @param {string} azureRegion Azure region to hit Api
     *
     * @param {object} parameters Container Backup Status Request
     *
     * @param {string} [parameters.resourceType] Container Type - VM, SQLPaaS, DPM,
     * AzureFileShare. Possible values include: 'Invalid', 'VM', 'FileFolder',
     * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
     * 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare',
     * 'SAPHanaDatabase'
     *
     * @param {string} [parameters.resourceId] Entire ARM resource id of the
     * resource
     *
     * @param {string} [parameters.poLogicalName] Protectable Item Logical Name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BackupStatusResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(azureRegion: string, parameters: models.BackupStatusRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BackupStatusResponse>>;

    /**
     * @summary Get the container backup status
     *
     * @param {string} azureRegion Azure region to hit Api
     *
     * @param {object} parameters Container Backup Status Request
     *
     * @param {string} [parameters.resourceType] Container Type - VM, SQLPaaS, DPM,
     * AzureFileShare. Possible values include: 'Invalid', 'VM', 'FileFolder',
     * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
     * 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare',
     * 'SAPHanaDatabase'
     *
     * @param {string} [parameters.resourceId] Entire ARM resource id of the
     * resource
     *
     * @param {string} [parameters.poLogicalName] Protectable Item Logical Name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BackupStatusResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BackupStatusResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BackupStatusResponse} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(azureRegion: string, parameters: models.BackupStatusRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BackupStatusResponse>;
    get(azureRegion: string, parameters: models.BackupStatusRequest, callback: ServiceCallback<models.BackupStatusResponse>): void;
    get(azureRegion: string, parameters: models.BackupStatusRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BackupStatusResponse>): void;
}

/**
 * @class
 * FeatureSupport
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface FeatureSupport {


    /**
     * @summary It will validate if given feature with resource properties is
     * supported in service
     *
     * @param {string} azureRegion Azure region to hit Api
     *
     * @param {object} parameters Feature support request object
     *
     * @param {string} parameters.featureType Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AzureVMResourceFeatureSupportResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    validateWithHttpOperationResponse(azureRegion: string, parameters: models.FeatureSupportRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AzureVMResourceFeatureSupportResponse>>;

    /**
     * @summary It will validate if given feature with resource properties is
     * supported in service
     *
     * @param {string} azureRegion Azure region to hit Api
     *
     * @param {object} parameters Feature support request object
     *
     * @param {string} parameters.featureType Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AzureVMResourceFeatureSupportResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AzureVMResourceFeatureSupportResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AzureVMResourceFeatureSupportResponse} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    validate(azureRegion: string, parameters: models.FeatureSupportRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AzureVMResourceFeatureSupportResponse>;
    validate(azureRegion: string, parameters: models.FeatureSupportRequest, callback: ServiceCallback<models.AzureVMResourceFeatureSupportResponse>): void;
    validate(azureRegion: string, parameters: models.FeatureSupportRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AzureVMResourceFeatureSupportResponse>): void;
}

/**
 * @class
 * BackupJobs
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupJobs {


    /**
     * Provides a pageable list of jobs.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {string} [options.skipToken] skipToken Filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobResourceList>>;

    /**
     * Provides a pageable list of jobs.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {string} [options.skipToken] skipToken Filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobResourceList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.JobResourceList>;
    list(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.JobResourceList>): void;
    list(vaultName: string, resourceGroupName: string, options: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobResourceList>): void;


    /**
     * Provides a pageable list of jobs.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobResourceList>>;

    /**
     * Provides a pageable list of jobs.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobResourceList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JobResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.JobResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobResourceList>): void;
}

/**
 * @class
 * JobDetails
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface JobDetails {


    /**
     * Gets extended information associated with the job.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} jobName Name of the job whose details are to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobResource>>;

    /**
     * Gets extended information associated with the job.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} jobName Name of the job whose details are to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JobResource>;
    get(vaultName: string, resourceGroupName: string, jobName: string, callback: ServiceCallback<models.JobResource>): void;
    get(vaultName: string, resourceGroupName: string, jobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobResource>): void;
}

/**
 * @class
 * ExportJobsOperationResults
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ExportJobsOperationResults {


    /**
     * Gets the operation result of operation triggered by Export Jobs API. If the
     * operation is successful, then it also
     * contains URL of a Blob and a SAS key to access the same. The blob contains
     * exported jobs in JSON serialized format.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} operationId OperationID which represents the export job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationResultInfoBaseResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationResultInfoBaseResource>>;

    /**
     * Gets the operation result of operation triggered by Export Jobs API. If the
     * operation is successful, then it also
     * contains URL of a Blob and a SAS key to access the same. The blob contains
     * exported jobs in JSON serialized format.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} operationId OperationID which represents the export job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationResultInfoBaseResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationResultInfoBaseResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationResultInfoBaseResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationResultInfoBaseResource>;
    get(vaultName: string, resourceGroupName: string, operationId: string, callback: ServiceCallback<models.OperationResultInfoBaseResource>): void;
    get(vaultName: string, resourceGroupName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationResultInfoBaseResource>): void;
}

/**
 * @class
 * Jobs
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface Jobs {


    /**
     * Triggers export of jobs specified by filters and returns an OperationID to
     * track.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    exportMethodWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Triggers export of jobs specified by filters and returns an OperationID to
     * track.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    exportMethod(vaultName: string, resourceGroupName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    exportMethod(vaultName: string, resourceGroupName: string, callback: ServiceCallback<void>): void;
    exportMethod(vaultName: string, resourceGroupName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * BackupPolicies
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupPolicies {


    /**
     * Lists of backup policies associated with Recovery Services Vault. API
     * provides pagination parameters to fetch
     * scoped results.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionPolicyResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionPolicyResourceList>>;

    /**
     * Lists of backup policies associated with Recovery Services Vault. API
     * provides pagination parameters to fetch
     * scoped results.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionPolicyResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionPolicyResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionPolicyResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionPolicyResourceList>;
    list(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.ProtectionPolicyResourceList>): void;
    list(vaultName: string, resourceGroupName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionPolicyResourceList>): void;


    /**
     * Lists of backup policies associated with Recovery Services Vault. API
     * provides pagination parameters to fetch
     * scoped results.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionPolicyResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionPolicyResourceList>>;

    /**
     * Lists of backup policies associated with Recovery Services Vault. API
     * provides pagination parameters to fetch
     * scoped results.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionPolicyResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionPolicyResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionPolicyResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionPolicyResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ProtectionPolicyResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionPolicyResourceList>): void;
}

/**
 * @class
 * BackupProtectedItems
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupProtectedItems {


    /**
     * Provides a pageable list of all items that are backed up within a vault.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {string} [options.skipToken] skipToken Filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectedItemResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectedItemResourceList>>;

    /**
     * Provides a pageable list of all items that are backed up within a vault.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {string} [options.skipToken] skipToken Filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectedItemResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectedItemResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectedItemResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectedItemResourceList>;
    list(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.ProtectedItemResourceList>): void;
    list(vaultName: string, resourceGroupName: string, options: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectedItemResourceList>): void;


    /**
     * Provides a pageable list of all items that are backed up within a vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectedItemResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectedItemResourceList>>;

    /**
     * Provides a pageable list of all items that are backed up within a vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectedItemResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectedItemResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectedItemResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectedItemResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ProtectedItemResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectedItemResourceList>): void;
}

/**
 * @class
 * BackupProtectionIntent
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupProtectionIntent {


    /**
     * Provides a pageable list of all intents that are present within a vault.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {string} [options.skipToken] skipToken Filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionIntentResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionIntentResourceList>>;

    /**
     * Provides a pageable list of all intents that are present within a vault.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {string} [options.skipToken] skipToken Filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionIntentResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionIntentResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionIntentResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionIntentResourceList>;
    list(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.ProtectionIntentResourceList>): void;
    list(vaultName: string, resourceGroupName: string, options: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionIntentResourceList>): void;


    /**
     * Provides a pageable list of all intents that are present within a vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionIntentResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionIntentResourceList>>;

    /**
     * Provides a pageable list of all intents that are present within a vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionIntentResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionIntentResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionIntentResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionIntentResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ProtectionIntentResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionIntentResourceList>): void;
}

/**
 * @class
 * BackupUsageSummaries
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupUsageSummaries {


    /**
     * Fetches the backup management usage summaries of the vault.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {string} [options.skipToken] skipToken Filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BackupManagementUsageList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BackupManagementUsageList>>;

    /**
     * Fetches the backup management usage summaries of the vault.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {string} [options.skipToken] skipToken Filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BackupManagementUsageList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BackupManagementUsageList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BackupManagementUsageList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.BackupManagementUsageList>;
    list(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.BackupManagementUsageList>): void;
    list(vaultName: string, resourceGroupName: string, options: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BackupManagementUsageList>): void;
}

/**
 * @class
 * Operation
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface Operation {


    /**
     * Validate operation for specified backed up item. This is a synchronous
     * operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} parameters resource validate operation request
     *
     * @param {string} parameters.objectType Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ValidateOperationsResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    validateWithHttpOperationResponse(vaultName: string, resourceGroupName: string, parameters: models.ValidateOperationRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ValidateOperationsResponse>>;

    /**
     * Validate operation for specified backed up item. This is a synchronous
     * operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} parameters resource validate operation request
     *
     * @param {string} parameters.objectType Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ValidateOperationsResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ValidateOperationsResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ValidateOperationsResponse} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    validate(vaultName: string, resourceGroupName: string, parameters: models.ValidateOperationRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ValidateOperationsResponse>;
    validate(vaultName: string, resourceGroupName: string, parameters: models.ValidateOperationRequest, callback: ServiceCallback<models.ValidateOperationsResponse>): void;
    validate(vaultName: string, resourceGroupName: string, parameters: models.ValidateOperationRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ValidateOperationsResponse>): void;
}

/**
 * @class
 * BackupResourceVaultConfigs
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupResourceVaultConfigs {


    /**
     * Fetches resource vault config.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BackupResourceVaultConfigResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BackupResourceVaultConfigResource>>;

    /**
     * Fetches resource vault config.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BackupResourceVaultConfigResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BackupResourceVaultConfigResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BackupResourceVaultConfigResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BackupResourceVaultConfigResource>;
    get(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.BackupResourceVaultConfigResource>): void;
    get(vaultName: string, resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BackupResourceVaultConfigResource>): void;


    /**
     * Updates vault security config.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} parameters resource config request
     *
     * @param {object} [parameters.properties] BackupResourceVaultConfigResource
     * properties
     *
     * @param {string} [parameters.properties.storageModelType] Storage type.
     * Possible values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
     *
     * @param {string} [parameters.properties.storageType] Storage type. Possible
     * values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
     *
     * @param {string} [parameters.properties.storageTypeState] Locked or Unlocked.
     * Once a machine is registered against a resource, the storageTypeState is
     * always Locked. Possible values include: 'Invalid', 'Locked', 'Unlocked'
     *
     * @param {string} [parameters.properties.enhancedSecurityState] Enabled or
     * Disabled. Possible values include: 'Invalid', 'Enabled', 'Disabled'
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BackupResourceVaultConfigResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(vaultName: string, resourceGroupName: string, parameters: models.BackupResourceVaultConfigResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BackupResourceVaultConfigResource>>;

    /**
     * Updates vault security config.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} parameters resource config request
     *
     * @param {object} [parameters.properties] BackupResourceVaultConfigResource
     * properties
     *
     * @param {string} [parameters.properties.storageModelType] Storage type.
     * Possible values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
     *
     * @param {string} [parameters.properties.storageType] Storage type. Possible
     * values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
     *
     * @param {string} [parameters.properties.storageTypeState] Locked or Unlocked.
     * Once a machine is registered against a resource, the storageTypeState is
     * always Locked. Possible values include: 'Invalid', 'Locked', 'Unlocked'
     *
     * @param {string} [parameters.properties.enhancedSecurityState] Enabled or
     * Disabled. Possible values include: 'Invalid', 'Enabled', 'Disabled'
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BackupResourceVaultConfigResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BackupResourceVaultConfigResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BackupResourceVaultConfigResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(vaultName: string, resourceGroupName: string, parameters: models.BackupResourceVaultConfigResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BackupResourceVaultConfigResource>;
    update(vaultName: string, resourceGroupName: string, parameters: models.BackupResourceVaultConfigResource, callback: ServiceCallback<models.BackupResourceVaultConfigResource>): void;
    update(vaultName: string, resourceGroupName: string, parameters: models.BackupResourceVaultConfigResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BackupResourceVaultConfigResource>): void;
}

/**
 * @class
 * BackupEngines
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupEngines {


    /**
     * Backup management servers registered to Recovery Services Vault. Returns a
     * pageable list of servers.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {string} [options.skipToken] skipToken Filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BackupEngineBaseResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BackupEngineBaseResourceList>>;

    /**
     * Backup management servers registered to Recovery Services Vault. Returns a
     * pageable list of servers.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {string} [options.skipToken] skipToken Filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BackupEngineBaseResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BackupEngineBaseResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BackupEngineBaseResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.BackupEngineBaseResourceList>;
    list(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.BackupEngineBaseResourceList>): void;
    list(vaultName: string, resourceGroupName: string, options: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BackupEngineBaseResourceList>): void;


    /**
     * Returns backup management server registered to Recovery Services Vault.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} backupEngineName Name of the backup management server.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {string} [options.skipToken] skipToken Filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BackupEngineBaseResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, backupEngineName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BackupEngineBaseResource>>;

    /**
     * Returns backup management server registered to Recovery Services Vault.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} backupEngineName Name of the backup management server.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {string} [options.skipToken] skipToken Filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BackupEngineBaseResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BackupEngineBaseResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BackupEngineBaseResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, backupEngineName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.BackupEngineBaseResource>;
    get(vaultName: string, resourceGroupName: string, backupEngineName: string, callback: ServiceCallback<models.BackupEngineBaseResource>): void;
    get(vaultName: string, resourceGroupName: string, backupEngineName: string, options: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BackupEngineBaseResource>): void;


    /**
     * Backup management servers registered to Recovery Services Vault. Returns a
     * pageable list of servers.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BackupEngineBaseResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BackupEngineBaseResourceList>>;

    /**
     * Backup management servers registered to Recovery Services Vault. Returns a
     * pageable list of servers.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BackupEngineBaseResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BackupEngineBaseResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BackupEngineBaseResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BackupEngineBaseResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.BackupEngineBaseResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BackupEngineBaseResourceList>): void;
}

/**
 * @class
 * ProtectionContainerRefreshOperationResults
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectionContainerRefreshOperationResults {


    /**
     * Provides the result of the refresh operation triggered by the BeginRefresh
     * operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the container.
     *
     * @param {string} operationId Operation ID associated with the operation whose
     * result needs to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Provides the result of the refresh operation triggered by the BeginRefresh
     * operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the container.
     *
     * @param {string} operationId Operation ID associated with the operation whose
     * result needs to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    get(vaultName: string, resourceGroupName: string, fabricName: string, operationId: string, callback: ServiceCallback<void>): void;
    get(vaultName: string, resourceGroupName: string, fabricName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * ProtectableContainers
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectableContainers {


    /**
     * Lists the containers that can be registered to Recovery Services Vault.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the container.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectableContainerResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectableContainerResourceList>>;

    /**
     * Lists the containers that can be registered to Recovery Services Vault.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the container.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectableContainerResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectableContainerResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectableContainerResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, fabricName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectableContainerResourceList>;
    list(vaultName: string, resourceGroupName: string, fabricName: string, callback: ServiceCallback<models.ProtectableContainerResourceList>): void;
    list(vaultName: string, resourceGroupName: string, fabricName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectableContainerResourceList>): void;


    /**
     * Lists the containers that can be registered to Recovery Services Vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectableContainerResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectableContainerResourceList>>;

    /**
     * Lists the containers that can be registered to Recovery Services Vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectableContainerResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectableContainerResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectableContainerResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectableContainerResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ProtectableContainerResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectableContainerResourceList>): void;
}

/**
 * @class
 * ProtectionContainers
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectionContainers {


    /**
     * Gets details of the specific container registered to your Recovery Services
     * Vault.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Name of the fabric where the container belongs.
     *
     * @param {string} containerName Name of the container whose details need to be
     * fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerResource>>;

    /**
     * Gets details of the specific container registered to your Recovery Services
     * Vault.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Name of the fabric where the container belongs.
     *
     * @param {string} containerName Name of the container whose details need to be
     * fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerResource>;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, callback: ServiceCallback<models.ProtectionContainerResource>): void;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerResource>): void;


    /**
     * Registers the container with Recovery Services vault.
     * This is an asynchronous operation. To track the operation status, use
     * location header to call get latest status of
     * the operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the container.
     *
     * @param {string} containerName Name of the container to be registered.
     *
     * @param {object} parameters Request body for operation
     *
     * @param {object} [parameters.properties] ProtectionContainerResource
     * properties
     *
     * @param {string} [parameters.properties.friendlyName] Friendly name of the
     * container.
     *
     * @param {string} [parameters.properties.backupManagementType] Type of backup
     * management for the container. Possible values include: 'Invalid',
     * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql',
     * 'AzureStorage', 'AzureWorkload', 'DefaultBackup'
     *
     * @param {string} [parameters.properties.registrationStatus] Status of
     * registration of the container with the Recovery Services Vault.
     *
     * @param {string} [parameters.properties.healthStatus] Status of health of the
     * container.
     *
     * @param {string} parameters.properties.containerType Polymorphic
     * Discriminator
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    registerWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, parameters: models.ProtectionContainerResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerResource>>;

    /**
     * Registers the container with Recovery Services vault.
     * This is an asynchronous operation. To track the operation status, use
     * location header to call get latest status of
     * the operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the container.
     *
     * @param {string} containerName Name of the container to be registered.
     *
     * @param {object} parameters Request body for operation
     *
     * @param {object} [parameters.properties] ProtectionContainerResource
     * properties
     *
     * @param {string} [parameters.properties.friendlyName] Friendly name of the
     * container.
     *
     * @param {string} [parameters.properties.backupManagementType] Type of backup
     * management for the container. Possible values include: 'Invalid',
     * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql',
     * 'AzureStorage', 'AzureWorkload', 'DefaultBackup'
     *
     * @param {string} [parameters.properties.registrationStatus] Status of
     * registration of the container with the Recovery Services Vault.
     *
     * @param {string} [parameters.properties.healthStatus] Status of health of the
     * container.
     *
     * @param {string} parameters.properties.containerType Polymorphic
     * Discriminator
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    register(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, parameters: models.ProtectionContainerResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerResource>;
    register(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, parameters: models.ProtectionContainerResource, callback: ServiceCallback<models.ProtectionContainerResource>): void;
    register(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, parameters: models.ProtectionContainerResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerResource>): void;


    /**
     * Unregisters the given container from your Recovery Services Vault. This is
     * an asynchronous operation. To determine
     * whether the backend service has finished processing the request, call Get
     * Container Operation Result API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Name of the fabric where the container belongs.
     *
     * @param {string} containerName Name of the container which needs to be
     * unregistered from the Recovery Services Vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    unregisterWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Unregisters the given container from your Recovery Services Vault. This is
     * an asynchronous operation. To determine
     * whether the backend service has finished processing the request, call Get
     * Container Operation Result API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Name of the fabric where the container belongs.
     *
     * @param {string} containerName Name of the container which needs to be
     * unregistered from the Recovery Services Vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    unregister(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    unregister(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, callback: ServiceCallback<void>): void;
    unregister(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Inquires all the protectable items under the given container.
     *
     * This is an async operation and the results should be tracked using location
     * header or Azure-async-url.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric Name associated with the container.
     *
     * @param {string} containerName Name of the container in which inquiry needs
     * to be triggered.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    inquireWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Inquires all the protectable items under the given container.
     *
     * This is an async operation and the results should be tracked using location
     * header or Azure-async-url.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric Name associated with the container.
     *
     * @param {string} containerName Name of the container in which inquiry needs
     * to be triggered.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    inquire(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    inquire(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, callback: ServiceCallback<void>): void;
    inquire(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Discovers all the containers in the subscription that can be backed up to
     * Recovery Services Vault. This is an
     * asynchronous operation. To know the status of the operation, call
     * GetRefreshOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated the container.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    refreshWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Discovers all the containers in the subscription that can be backed up to
     * Recovery Services Vault. This is an
     * asynchronous operation. To know the status of the operation, call
     * GetRefreshOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated the container.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    refresh(vaultName: string, resourceGroupName: string, fabricName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    refresh(vaultName: string, resourceGroupName: string, fabricName: string, callback: ServiceCallback<void>): void;
    refresh(vaultName: string, resourceGroupName: string, fabricName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * BackupWorkloadItems
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupWorkloadItems {


    /**
     * Provides a pageable list of workload item of a specific container according
     * to the query filter and the pagination
     * parameters.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the container.
     *
     * @param {string} containerName Name of the container.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {string} [options.skipToken] skipToken Filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WorkloadItemResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WorkloadItemResourceList>>;

    /**
     * Provides a pageable list of workload item of a specific container according
     * to the query filter and the pagination
     * parameters.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the container.
     *
     * @param {string} containerName Name of the container.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {string} [options.skipToken] skipToken Filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WorkloadItemResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WorkloadItemResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WorkloadItemResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.WorkloadItemResourceList>;
    list(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, callback: ServiceCallback<models.WorkloadItemResourceList>): void;
    list(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, options: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WorkloadItemResourceList>): void;


    /**
     * Provides a pageable list of workload item of a specific container according
     * to the query filter and the pagination
     * parameters.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WorkloadItemResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WorkloadItemResourceList>>;

    /**
     * Provides a pageable list of workload item of a specific container according
     * to the query filter and the pagination
     * parameters.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WorkloadItemResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WorkloadItemResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WorkloadItemResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WorkloadItemResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.WorkloadItemResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WorkloadItemResourceList>): void;
}

/**
 * @class
 * ProtectionContainerOperationResults
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectionContainerOperationResults {


    /**
     * Fetches the result of any operation on the container.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the container.
     *
     * @param {string} containerName Container name whose information should be
     * fetched.
     *
     * @param {string} operationId Operation ID which represents the operation
     * whose result needs to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerResource>>;

    /**
     * Fetches the result of any operation on the container.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the container.
     *
     * @param {string} containerName Container name whose information should be
     * fetched.
     *
     * @param {string} operationId Operation ID which represents the operation
     * whose result needs to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerResource>;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, operationId: string, callback: ServiceCallback<models.ProtectionContainerResource>): void;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerResource>): void;
}

/**
 * @class
 * ProtectedItems
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectedItems {


    /**
     * Provides the details of the backed up item. This is an asynchronous
     * operation. To know the status of the operation,
     * call the GetItemOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backed up item.
     *
     * @param {string} containerName Container name associated with the backed up
     * item.
     *
     * @param {string} protectedItemName Backed up item name whose details are to
     * be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectedItemResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectedItemResource>>;

    /**
     * Provides the details of the backed up item. This is an asynchronous
     * operation. To know the status of the operation,
     * call the GetItemOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backed up item.
     *
     * @param {string} containerName Container name associated with the backed up
     * item.
     *
     * @param {string} protectedItemName Backed up item name whose details are to
     * be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectedItemResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectedItemResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectedItemResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectedItemResource>;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, callback: ServiceCallback<models.ProtectedItemResource>): void;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectedItemResource>): void;


    /**
     * Enables backup of an item or to modifies the backup policy information of an
     * already backed up item. This is an
     * asynchronous operation. To know the status of the operation, call the
     * GetItemOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backup item.
     *
     * @param {string} containerName Container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName Item name to be backed up.
     *
     * @param {object} parameters resource backed up item
     *
     * @param {object} [parameters.properties] ProtectedItemResource properties
     *
     * @param {string} [parameters.properties.backupManagementType] Type of backup
     * management for the backed up item. Possible values include: 'Invalid',
     * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql',
     * 'AzureStorage', 'AzureWorkload', 'DefaultBackup'
     *
     * @param {string} [parameters.properties.workloadType] Type of workload this
     * item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
     * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
     * 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare',
     * 'SAPHanaDatabase'
     *
     * @param {string} [parameters.properties.containerName] Unique name of
     * container
     *
     * @param {string} [parameters.properties.sourceResourceId] ARM ID of the
     * resource to be backed up.
     *
     * @param {string} [parameters.properties.policyId] ID of the backup policy
     * with which this item is backed up.
     *
     * @param {date} [parameters.properties.lastRecoveryPoint] Timestamp when the
     * last (latest) backup copy was created for this backup item.
     *
     * @param {string} [parameters.properties.backupSetName] Name of the backup set
     * the backup item belongs to
     *
     * @param {string} [parameters.properties.createMode] Create mode to indicate
     * recovery of existing soft deleted data source or creation of new data
     * source. Possible values include: 'Invalid', 'Default', 'Recover'
     *
     * @param {string} parameters.properties.protectedItemType Polymorphic
     * Discriminator
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectedItemResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, parameters: models.ProtectedItemResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectedItemResource>>;

    /**
     * Enables backup of an item or to modifies the backup policy information of an
     * already backed up item. This is an
     * asynchronous operation. To know the status of the operation, call the
     * GetItemOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backup item.
     *
     * @param {string} containerName Container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName Item name to be backed up.
     *
     * @param {object} parameters resource backed up item
     *
     * @param {object} [parameters.properties] ProtectedItemResource properties
     *
     * @param {string} [parameters.properties.backupManagementType] Type of backup
     * management for the backed up item. Possible values include: 'Invalid',
     * 'AzureIaasVM', 'MAB', 'DPM', 'AzureBackupServer', 'AzureSql',
     * 'AzureStorage', 'AzureWorkload', 'DefaultBackup'
     *
     * @param {string} [parameters.properties.workloadType] Type of workload this
     * item represents. Possible values include: 'Invalid', 'VM', 'FileFolder',
     * 'AzureSqlDb', 'SQLDB', 'Exchange', 'Sharepoint', 'VMwareVM', 'SystemState',
     * 'Client', 'GenericDataSource', 'SQLDataBase', 'AzureFileShare',
     * 'SAPHanaDatabase'
     *
     * @param {string} [parameters.properties.containerName] Unique name of
     * container
     *
     * @param {string} [parameters.properties.sourceResourceId] ARM ID of the
     * resource to be backed up.
     *
     * @param {string} [parameters.properties.policyId] ID of the backup policy
     * with which this item is backed up.
     *
     * @param {date} [parameters.properties.lastRecoveryPoint] Timestamp when the
     * last (latest) backup copy was created for this backup item.
     *
     * @param {string} [parameters.properties.backupSetName] Name of the backup set
     * the backup item belongs to
     *
     * @param {string} [parameters.properties.createMode] Create mode to indicate
     * recovery of existing soft deleted data source or creation of new data
     * source. Possible values include: 'Invalid', 'Default', 'Recover'
     *
     * @param {string} parameters.properties.protectedItemType Polymorphic
     * Discriminator
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectedItemResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectedItemResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectedItemResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, parameters: models.ProtectedItemResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectedItemResource>;
    createOrUpdate(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, parameters: models.ProtectedItemResource, callback: ServiceCallback<models.ProtectedItemResource>): void;
    createOrUpdate(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, parameters: models.ProtectedItemResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectedItemResource>): void;


    /**
     * Used to disable backup of an item within a container. This is an
     * asynchronous operation. To know the status of the
     * request, call the GetItemOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backed up item.
     *
     * @param {string} containerName Container name associated with the backed up
     * item.
     *
     * @param {string} protectedItemName Backed up item to be deleted.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Used to disable backup of an item within a container. This is an
     * asynchronous operation. To know the status of the
     * request, call the GetItemOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backed up item.
     *
     * @param {string} containerName Container name associated with the backed up
     * item.
     *
     * @param {string} protectedItemName Backed up item to be deleted.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, callback: ServiceCallback<void>): void;
    deleteMethod(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * Backups
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface Backups {


    /**
     * Triggers backup for specified backed up item. This is an asynchronous
     * operation. To know the status of the
     * operation, call GetProtectedItemOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backup item.
     *
     * @param {string} containerName Container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName Backup item for which backup needs to be
     * triggered.
     *
     * @param {object} parameters resource backup request
     *
     * @param {object} [parameters.properties] BackupRequestResource properties
     *
     * @param {string} parameters.properties.objectType Polymorphic Discriminator
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    triggerWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, parameters: models.BackupRequestResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Triggers backup for specified backed up item. This is an asynchronous
     * operation. To know the status of the
     * operation, call GetProtectedItemOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backup item.
     *
     * @param {string} containerName Container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName Backup item for which backup needs to be
     * triggered.
     *
     * @param {object} parameters resource backup request
     *
     * @param {object} [parameters.properties] BackupRequestResource properties
     *
     * @param {string} parameters.properties.objectType Polymorphic Discriminator
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    trigger(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, parameters: models.BackupRequestResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    trigger(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, parameters: models.BackupRequestResource, callback: ServiceCallback<void>): void;
    trigger(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, parameters: models.BackupRequestResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * ProtectedItemOperationResults
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectedItemOperationResults {


    /**
     * Fetches the result of any operation on the backup item.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backup item.
     *
     * @param {string} containerName Container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName Backup item name whose details are to be
     * fetched.
     *
     * @param {string} operationId OperationID which represents the operation whose
     * result needs to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectedItemResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectedItemResource>>;

    /**
     * Fetches the result of any operation on the backup item.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backup item.
     *
     * @param {string} containerName Container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName Backup item name whose details are to be
     * fetched.
     *
     * @param {string} operationId OperationID which represents the operation whose
     * result needs to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectedItemResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectedItemResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectedItemResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectedItemResource>;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, callback: ServiceCallback<models.ProtectedItemResource>): void;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectedItemResource>): void;
}

/**
 * @class
 * ProtectedItemOperationStatuses
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectedItemOperationStatuses {


    /**
     * Fetches the status of an operation such as triggering a backup, restore. The
     * status can be in progress, completed
     * or failed. You can refer to the OperationStatus enum for all the possible
     * states of the operation. Some operations
     * create jobs. This method returns the list of jobs associated with the
     * operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backup item.
     *
     * @param {string} containerName Container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName Backup item name whose details are to be
     * fetched.
     *
     * @param {string} operationId OperationID represents the operation whose
     * status needs to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationStatus>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationStatus>>;

    /**
     * Fetches the status of an operation such as triggering a backup, restore. The
     * status can be in progress, completed
     * or failed. You can refer to the OperationStatus enum for all the possible
     * states of the operation. Some operations
     * create jobs. This method returns the list of jobs associated with the
     * operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backup item.
     *
     * @param {string} containerName Container name associated with the backup
     * item.
     *
     * @param {string} protectedItemName Backup item name whose details are to be
     * fetched.
     *
     * @param {string} operationId OperationID represents the operation whose
     * status needs to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationStatus} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationStatus} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationStatus} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationStatus>;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, callback: ServiceCallback<models.OperationStatus>): void;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationStatus>): void;
}

/**
 * @class
 * RecoveryPoints
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface RecoveryPoints {


    /**
     * Lists the backup copies for the backed up item.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backed up item.
     *
     * @param {string} containerName Container name associated with the backed up
     * item.
     *
     * @param {string} protectedItemName Backed up item whose backup copies are to
     * be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPointResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPointResourceList>>;

    /**
     * Lists the backup copies for the backed up item.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backed up item.
     *
     * @param {string} containerName Container name associated with the backed up
     * item.
     *
     * @param {string} protectedItemName Backed up item whose backup copies are to
     * be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPointResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPointResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPointResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPointResourceList>;
    list(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, callback: ServiceCallback<models.RecoveryPointResourceList>): void;
    list(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPointResourceList>): void;


    /**
     * Provides the information of the backed up data identified using
     * RecoveryPointID. This is an asynchronous operation.
     * To know the status of the operation, call the
     * GetProtectedItemOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with backed up item.
     *
     * @param {string} containerName Container name associated with backed up item.
     *
     * @param {string} protectedItemName Backed up item name whose backup data
     * needs to be fetched.
     *
     * @param {string} recoveryPointId RecoveryPointID represents the backed up
     * data to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPointResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPointResource>>;

    /**
     * Provides the information of the backed up data identified using
     * RecoveryPointID. This is an asynchronous operation.
     * To know the status of the operation, call the
     * GetProtectedItemOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with backed up item.
     *
     * @param {string} containerName Container name associated with backed up item.
     *
     * @param {string} protectedItemName Backed up item name whose backup data
     * needs to be fetched.
     *
     * @param {string} recoveryPointId RecoveryPointID represents the backed up
     * data to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPointResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPointResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPointResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPointResource>;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, callback: ServiceCallback<models.RecoveryPointResource>): void;
    get(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPointResource>): void;


    /**
     * Lists the backup copies for the backed up item.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPointResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPointResourceList>>;

    /**
     * Lists the backup copies for the backed up item.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPointResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPointResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPointResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPointResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.RecoveryPointResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPointResourceList>): void;
}

/**
 * @class
 * ItemLevelRecoveryConnections
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ItemLevelRecoveryConnections {


    /**
     * Provisions a script which invokes an iSCSI connection to the backup data.
     * Executing this script opens a file
     * explorer displaying all the recoverable files and folders. This is an
     * asynchronous operation. To know the status of
     * provisioning, call GetProtectedItemOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backed up items.
     *
     * @param {string} containerName Container name associated with the backed up
     * items.
     *
     * @param {string} protectedItemName Backed up item name whose files/folders
     * are to be restored.
     *
     * @param {string} recoveryPointId Recovery point ID which represents backed up
     * data. iSCSI connection will be provisioned
     * for this backed up data.
     *
     * @param {object} parameters resource ILR request
     *
     * @param {object} [parameters.properties] ILRRequestResource properties
     *
     * @param {string} parameters.properties.objectType Polymorphic Discriminator
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    provisionWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: models.ILRRequestResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Provisions a script which invokes an iSCSI connection to the backup data.
     * Executing this script opens a file
     * explorer displaying all the recoverable files and folders. This is an
     * asynchronous operation. To know the status of
     * provisioning, call GetProtectedItemOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backed up items.
     *
     * @param {string} containerName Container name associated with the backed up
     * items.
     *
     * @param {string} protectedItemName Backed up item name whose files/folders
     * are to be restored.
     *
     * @param {string} recoveryPointId Recovery point ID which represents backed up
     * data. iSCSI connection will be provisioned
     * for this backed up data.
     *
     * @param {object} parameters resource ILR request
     *
     * @param {object} [parameters.properties] ILRRequestResource properties
     *
     * @param {string} parameters.properties.objectType Polymorphic Discriminator
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    provision(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: models.ILRRequestResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    provision(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: models.ILRRequestResource, callback: ServiceCallback<void>): void;
    provision(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: models.ILRRequestResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Revokes an iSCSI connection which can be used to download a script.
     * Executing this script opens a file explorer
     * displaying all recoverable files and folders. This is an asynchronous
     * operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backed up items.
     *
     * @param {string} containerName Container name associated with the backed up
     * items.
     *
     * @param {string} protectedItemName Backed up item name whose files/folders
     * are to be restored.
     *
     * @param {string} recoveryPointId Recovery point ID which represents backed up
     * data. iSCSI connection will be revoked for
     * this backed up data.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    revokeWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Revokes an iSCSI connection which can be used to download a script.
     * Executing this script opens a file explorer
     * displaying all recoverable files and folders. This is an asynchronous
     * operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backed up items.
     *
     * @param {string} containerName Container name associated with the backed up
     * items.
     *
     * @param {string} protectedItemName Backed up item name whose files/folders
     * are to be restored.
     *
     * @param {string} recoveryPointId Recovery point ID which represents backed up
     * data. iSCSI connection will be revoked for
     * this backed up data.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    revoke(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    revoke(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, callback: ServiceCallback<void>): void;
    revoke(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * Restores
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface Restores {


    /**
     * Restores the specified backed up data. This is an asynchronous operation. To
     * know the status of this API call, use
     * GetProtectedItemOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backed up items.
     *
     * @param {string} containerName Container name associated with the backed up
     * items.
     *
     * @param {string} protectedItemName Backed up item to be restored.
     *
     * @param {string} recoveryPointId Recovery point ID which represents the
     * backed up data to be restored.
     *
     * @param {object} parameters resource restore request
     *
     * @param {object} [parameters.properties] RestoreRequestResource properties
     *
     * @param {string} parameters.properties.objectType Polymorphic Discriminator
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    triggerWithHttpOperationResponse(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: models.RestoreRequestResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Restores the specified backed up data. This is an asynchronous operation. To
     * know the status of this API call, use
     * GetProtectedItemOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} fabricName Fabric name associated with the backed up items.
     *
     * @param {string} containerName Container name associated with the backed up
     * items.
     *
     * @param {string} protectedItemName Backed up item to be restored.
     *
     * @param {string} recoveryPointId Recovery point ID which represents the
     * backed up data to be restored.
     *
     * @param {object} parameters resource restore request
     *
     * @param {object} [parameters.properties] RestoreRequestResource properties
     *
     * @param {string} parameters.properties.objectType Polymorphic Discriminator
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    trigger(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: models.RestoreRequestResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    trigger(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: models.RestoreRequestResource, callback: ServiceCallback<void>): void;
    trigger(vaultName: string, resourceGroupName: string, fabricName: string, containerName: string, protectedItemName: string, recoveryPointId: string, parameters: models.RestoreRequestResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * JobCancellations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface JobCancellations {


    /**
     * Cancels a job. This is an asynchronous operation. To know the status of the
     * cancellation, call
     * GetCancelOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} jobName Name of the job to cancel.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    triggerWithHttpOperationResponse(vaultName: string, resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Cancels a job. This is an asynchronous operation. To know the status of the
     * cancellation, call
     * GetCancelOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} jobName Name of the job to cancel.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    trigger(vaultName: string, resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    trigger(vaultName: string, resourceGroupName: string, jobName: string, callback: ServiceCallback<void>): void;
    trigger(vaultName: string, resourceGroupName: string, jobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * JobOperationResults
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface JobOperationResults {


    /**
     * Fetches the result of any operation.
     * the operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} jobName Job name whose operation result has to be fetched.
     *
     * @param {string} operationId OperationID which represents the operation whose
     * result has to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, jobName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Fetches the result of any operation.
     * the operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} jobName Job name whose operation result has to be fetched.
     *
     * @param {string} operationId OperationID which represents the operation whose
     * result has to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, jobName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    get(vaultName: string, resourceGroupName: string, jobName: string, operationId: string, callback: ServiceCallback<void>): void;
    get(vaultName: string, resourceGroupName: string, jobName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * BackupOperationResults
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupOperationResults {


    /**
     * Provides the status of the delete operations such as deleting backed up
     * item. Once the operation has started, the
     * status code in the response would be Accepted. It will continue to be in
     * this state till it reaches completion. On
     * successful completion, the status code will be OK. This method expects
     * OperationID as an argument. OperationID is
     * part of the Location header of the operation response.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} operationId OperationID which represents the operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Provides the status of the delete operations such as deleting backed up
     * item. Once the operation has started, the
     * status code in the response would be Accepted. It will continue to be in
     * this state till it reaches completion. On
     * successful completion, the status code will be OK. This method expects
     * OperationID as an argument. OperationID is
     * part of the Location header of the operation response.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} operationId OperationID which represents the operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    get(vaultName: string, resourceGroupName: string, operationId: string, callback: ServiceCallback<void>): void;
    get(vaultName: string, resourceGroupName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * BackupOperationStatuses
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupOperationStatuses {


    /**
     * Fetches the status of an operation such as triggering a backup, restore. The
     * status can be in progress, completed
     * or failed. You can refer to the OperationStatus enum for all the possible
     * states of an operation. Some operations
     * create jobs. This method returns the list of jobs when the operation is
     * complete.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} operationId OperationID which represents the operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationStatus>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationStatus>>;

    /**
     * Fetches the status of an operation such as triggering a backup, restore. The
     * status can be in progress, completed
     * or failed. You can refer to the OperationStatus enum for all the possible
     * states of an operation. Some operations
     * create jobs. This method returns the list of jobs when the operation is
     * complete.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} operationId OperationID which represents the operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationStatus} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationStatus} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationStatus} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationStatus>;
    get(vaultName: string, resourceGroupName: string, operationId: string, callback: ServiceCallback<models.OperationStatus>): void;
    get(vaultName: string, resourceGroupName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationStatus>): void;
}

/**
 * @class
 * ProtectionPolicies
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectionPolicies {


    /**
     * Provides the details of the backup policies associated to Recovery Services
     * Vault. This is an asynchronous
     * operation. Status of the operation can be fetched using
     * GetPolicyOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} policyName Backup policy information to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionPolicyResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionPolicyResource>>;

    /**
     * Provides the details of the backup policies associated to Recovery Services
     * Vault. This is an asynchronous
     * operation. Status of the operation can be fetched using
     * GetPolicyOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} policyName Backup policy information to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionPolicyResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionPolicyResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionPolicyResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionPolicyResource>;
    get(vaultName: string, resourceGroupName: string, policyName: string, callback: ServiceCallback<models.ProtectionPolicyResource>): void;
    get(vaultName: string, resourceGroupName: string, policyName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionPolicyResource>): void;


    /**
     * Creates or modifies a backup policy. This is an asynchronous operation.
     * Status of the operation can be fetched
     * using GetPolicyOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} policyName Backup policy to be created.
     *
     * @param {object} parameters resource backup policy
     *
     * @param {object} [parameters.properties] ProtectionPolicyResource properties
     *
     * @param {number} [parameters.properties.protectedItemsCount] Number of items
     * associated with this policy.
     *
     * @param {string} parameters.properties.backupManagementType Polymorphic
     * Discriminator
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionPolicyResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(vaultName: string, resourceGroupName: string, policyName: string, parameters: models.ProtectionPolicyResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionPolicyResource>>;

    /**
     * Creates or modifies a backup policy. This is an asynchronous operation.
     * Status of the operation can be fetched
     * using GetPolicyOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} policyName Backup policy to be created.
     *
     * @param {object} parameters resource backup policy
     *
     * @param {object} [parameters.properties] ProtectionPolicyResource properties
     *
     * @param {number} [parameters.properties.protectedItemsCount] Number of items
     * associated with this policy.
     *
     * @param {string} parameters.properties.backupManagementType Polymorphic
     * Discriminator
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionPolicyResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionPolicyResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionPolicyResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(vaultName: string, resourceGroupName: string, policyName: string, parameters: models.ProtectionPolicyResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionPolicyResource>;
    createOrUpdate(vaultName: string, resourceGroupName: string, policyName: string, parameters: models.ProtectionPolicyResource, callback: ServiceCallback<models.ProtectionPolicyResource>): void;
    createOrUpdate(vaultName: string, resourceGroupName: string, policyName: string, parameters: models.ProtectionPolicyResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionPolicyResource>): void;


    /**
     * Deletes specified backup policy from your Recovery Services Vault. This is
     * an asynchronous operation. Status of the
     * operation can be fetched using GetPolicyOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} policyName Backup policy to be deleted.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(vaultName: string, resourceGroupName: string, policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes specified backup policy from your Recovery Services Vault. This is
     * an asynchronous operation. Status of the
     * operation can be fetched using GetPolicyOperationResult API.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} policyName Backup policy to be deleted.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(vaultName: string, resourceGroupName: string, policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(vaultName: string, resourceGroupName: string, policyName: string, callback: ServiceCallback<void>): void;
    deleteMethod(vaultName: string, resourceGroupName: string, policyName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * ProtectionPolicyOperationResults
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectionPolicyOperationResults {


    /**
     * Provides the result of an operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} policyName Backup policy name whose operation's result needs
     * to be fetched.
     *
     * @param {string} operationId Operation ID which represents the operation
     * whose result needs to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionPolicyResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionPolicyResource>>;

    /**
     * Provides the result of an operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} policyName Backup policy name whose operation's result needs
     * to be fetched.
     *
     * @param {string} operationId Operation ID which represents the operation
     * whose result needs to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionPolicyResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionPolicyResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionPolicyResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionPolicyResource>;
    get(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, callback: ServiceCallback<models.ProtectionPolicyResource>): void;
    get(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionPolicyResource>): void;
}

/**
 * @class
 * ProtectionPolicyOperationStatuses
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface ProtectionPolicyOperationStatuses {


    /**
     * Provides the status of the asynchronous operations like backup, restore. The
     * status can be in progress, completed
     * or failed. You can refer to the Operation Status enum for all the possible
     * states of an operation. Some operations
     * create jobs. This method returns the list of jobs associated with operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} policyName Backup policy name whose operation's status needs
     * to be fetched.
     *
     * @param {string} operationId Operation ID which represents an operation whose
     * status needs to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationStatus>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationStatus>>;

    /**
     * Provides the status of the asynchronous operations like backup, restore. The
     * status can be in progress, completed
     * or failed. You can refer to the Operation Status enum for all the possible
     * states of an operation. Some operations
     * create jobs. This method returns the list of jobs associated with operation.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {string} policyName Backup policy name whose operation's status needs
     * to be fetched.
     *
     * @param {string} operationId Operation ID which represents an operation whose
     * status needs to be fetched.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationStatus} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationStatus} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationStatus} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationStatus>;
    get(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, callback: ServiceCallback<models.OperationStatus>): void;
    get(vaultName: string, resourceGroupName: string, policyName: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationStatus>): void;
}

/**
 * @class
 * BackupProtectableItems
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupProtectableItems {


    /**
     * Provides a pageable list of protectable objects within your subscription
     * according to the query filter and the
     * pagination parameters.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {string} [options.skipToken] skipToken Filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WorkloadProtectableItemResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WorkloadProtectableItemResourceList>>;

    /**
     * Provides a pageable list of protectable objects within your subscription
     * according to the query filter and the
     * pagination parameters.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {string} [options.skipToken] skipToken Filter.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WorkloadProtectableItemResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WorkloadProtectableItemResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WorkloadProtectableItemResourceList} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, options?: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.WorkloadProtectableItemResourceList>;
    list(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.WorkloadProtectableItemResourceList>): void;
    list(vaultName: string, resourceGroupName: string, options: { filter? : string, skipToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WorkloadProtectableItemResourceList>): void;


    /**
     * Provides a pageable list of protectable objects within your subscription
     * according to the query filter and the
     * pagination parameters.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WorkloadProtectableItemResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WorkloadProtectableItemResourceList>>;

    /**
     * Provides a pageable list of protectable objects within your subscription
     * according to the query filter and the
     * pagination parameters.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WorkloadProtectableItemResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WorkloadProtectableItemResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WorkloadProtectableItemResourceList} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WorkloadProtectableItemResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.WorkloadProtectableItemResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WorkloadProtectableItemResourceList>): void;
}

/**
 * @class
 * BackupProtectionContainers
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupProtectionContainers {


    /**
     * Lists the containers registered to Recovery Services Vault.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerResourceList>>;

    /**
     * Lists the containers registered to Recovery Services Vault.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(vaultName: string, resourceGroupName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerResourceList>;
    list(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.ProtectionContainerResourceList>): void;
    list(vaultName: string, resourceGroupName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerResourceList>): void;


    /**
     * Lists the containers registered to Recovery Services Vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerResourceList>>;

    /**
     * Lists the containers registered to Recovery Services Vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerResourceList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ProtectionContainerResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerResourceList>): void;
}

/**
 * @class
 * SecurityPINs
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface SecurityPINs {


    /**
     * Get the security PIN.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<TokenInformation>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TokenInformation>>;

    /**
     * Get the security PIN.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {TokenInformation} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {TokenInformation} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link TokenInformation} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.TokenInformation>;
    get(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.TokenInformation>): void;
    get(vaultName: string, resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TokenInformation>): void;
}

/**
 * @class
 * BackupResourceStorageConfigs
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface BackupResourceStorageConfigs {


    /**
     * Fetches resource storage config.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BackupResourceConfigResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(vaultName: string, resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BackupResourceConfigResource>>;

    /**
     * Fetches resource storage config.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BackupResourceConfigResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BackupResourceConfigResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BackupResourceConfigResource} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(vaultName: string, resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BackupResourceConfigResource>;
    get(vaultName: string, resourceGroupName: string, callback: ServiceCallback<models.BackupResourceConfigResource>): void;
    get(vaultName: string, resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BackupResourceConfigResource>): void;


    /**
     * Updates vault storage model type.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} parameters Vault storage config request
     *
     * @param {object} [parameters.properties] BackupResourceConfigResource
     * properties
     *
     * @param {string} [parameters.properties.storageModelType] Storage type.
     * Possible values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
     *
     * @param {string} [parameters.properties.storageType] Storage type. Possible
     * values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
     *
     * @param {string} [parameters.properties.storageTypeState] Locked or Unlocked.
     * Once a machine is registered against a resource, the storageTypeState is
     * always Locked. Possible values include: 'Invalid', 'Locked', 'Unlocked'
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(vaultName: string, resourceGroupName: string, parameters: models.BackupResourceConfigResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Updates vault storage model type.
     *
     * @param {string} vaultName The name of the recovery services vault.
     *
     * @param {string} resourceGroupName The name of the resource group where the
     * recovery services vault is present.
     *
     * @param {object} parameters Vault storage config request
     *
     * @param {object} [parameters.properties] BackupResourceConfigResource
     * properties
     *
     * @param {string} [parameters.properties.storageModelType] Storage type.
     * Possible values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
     *
     * @param {string} [parameters.properties.storageType] Storage type. Possible
     * values include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
     *
     * @param {string} [parameters.properties.storageTypeState] Locked or Unlocked.
     * Once a machine is registered against a resource, the storageTypeState is
     * always Locked. Possible values include: 'Invalid', 'Locked', 'Unlocked'
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.eTag] Optional ETag.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(vaultName: string, resourceGroupName: string, parameters: models.BackupResourceConfigResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    update(vaultName: string, resourceGroupName: string, parameters: models.BackupResourceConfigResource, callback: ServiceCallback<void>): void;
    update(vaultName: string, resourceGroupName: string, parameters: models.BackupResourceConfigResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the RecoveryServicesBackupClient.
 */
export interface Operations {


    /**
     * Returns the list of available operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ClientDiscoveryResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ClientDiscoveryResponse>>;

    /**
     * Returns the list of available operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ClientDiscoveryResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ClientDiscoveryResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ClientDiscoveryResponse} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ClientDiscoveryResponse>;
    list(callback: ServiceCallback<models.ClientDiscoveryResponse>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ClientDiscoveryResponse>): void;


    /**
     * Returns the list of available operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ClientDiscoveryResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ClientDiscoveryResponse>>;

    /**
     * Returns the list of available operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ClientDiscoveryResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ClientDiscoveryResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ClientDiscoveryResponse} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ClientDiscoveryResponse>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ClientDiscoveryResponse>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ClientDiscoveryResponse>): void;
}

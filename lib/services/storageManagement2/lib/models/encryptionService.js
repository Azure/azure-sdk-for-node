/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the EncryptionService class.
 * @constructor
 * An encrypted service.
 *
 * @member {boolean} [enabled] A boolean indicating whether or not the service
 * is encrypted.
 * 
 * @member {date} [lastEnabledTime] Gets a time value indicating when was the
 * encryption enabled by the user last time. We return this value only when
 * encryption is enabled. There might be some unencrypted blobs which were
 * written after this time. This time is just to give a rough estimate of
 * when encryption was enabled.
 * 
 */
function EncryptionService() {
}

/**
 * Defines the metadata of EncryptionService
 *
 * @returns {object} metadata of EncryptionService
 *
 */
EncryptionService.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'EncryptionService',
    type: {
      name: 'Composite',
      className: 'EncryptionService',
      modelProperties: {
        enabled: {
          required: false,
          serializedName: 'enabled',
          type: {
            name: 'Boolean'
          }
        },
        lastEnabledTime: {
          required: false,
          readOnly: true,
          serializedName: 'lastEnabledTime',
          type: {
            name: 'DateTime'
          }
        }
      }
    }
  };
};

module.exports = EncryptionService;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Actions are applied to the filtered blobs when the execution condition is
 * met.
 *
 */
class ManagementPolicyAction {
  /**
   * Create a ManagementPolicyAction.
   * @property {object} [baseBlob] The management policy action for base blob
   * @property {object} [baseBlob.tierToCool] The function to tier blobs to
   * cool storage. Support blobs currently at Hot tier
   * @property {number} [baseBlob.tierToCool.daysAfterModificationGreaterThan]
   * Integer value indicating the age in days after last modification
   * @property {object} [baseBlob.tierToArchive] The function to tier blobs to
   * archive storage. Support blobs currently at Hot or Cool tier
   * @property {number}
   * [baseBlob.tierToArchive.daysAfterModificationGreaterThan] Integer value
   * indicating the age in days after last modification
   * @property {object} [baseBlob.deleteProperty] The function to delete the
   * blob
   * @property {number}
   * [baseBlob.deleteProperty.daysAfterModificationGreaterThan] Integer value
   * indicating the age in days after last modification
   * @property {object} [snapshot] The management policy action for snapshot
   * @property {object} [snapshot.deleteProperty] The function to delete the
   * blob snapshot
   * @property {number} [snapshot.deleteProperty.daysAfterCreationGreaterThan]
   * Integer value indicating the age in days after creation
   */
  constructor() {
  }

  /**
   * Defines the metadata of ManagementPolicyAction
   *
   * @returns {object} metadata of ManagementPolicyAction
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ManagementPolicyAction',
      type: {
        name: 'Composite',
        className: 'ManagementPolicyAction',
        modelProperties: {
          baseBlob: {
            required: false,
            serializedName: 'baseBlob',
            type: {
              name: 'Composite',
              className: 'ManagementPolicyBaseBlob'
            }
          },
          snapshot: {
            required: false,
            serializedName: 'snapshot',
            type: {
              name: 'Composite',
              className: 'ManagementPolicySnapShot'
            }
          }
        }
      }
    };
  }
}

module.exports = ManagementPolicyAction;

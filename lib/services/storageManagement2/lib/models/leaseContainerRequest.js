/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Lease Container request schema.
 *
 */
class LeaseContainerRequest {
  /**
   * Create a LeaseContainerRequest.
   * @property {string} action Specifies the lease action. Can be one of the
   * available actions. Possible values include: 'Acquire', 'Renew', 'Change',
   * 'Release', 'Break'
   * @property {string} [leaseId] Identifies the lease. Can be specified in any
   * valid GUID string format.
   * @property {number} [breakPeriod] Optional. For a break action, proposed
   * duration the lease should continue before it is broken, in seconds,
   * between 0 and 60.
   * @property {number} [leaseDuration] Required for acquire. Specifies the
   * duration of the lease, in seconds, or negative one (-1) for a lease that
   * never expires.
   * @property {string} [proposedLeaseId] Optional for acquire, required for
   * change. Proposed lease ID, in a GUID string format.
   */
  constructor() {
  }

  /**
   * Defines the metadata of LeaseContainerRequest
   *
   * @returns {object} metadata of LeaseContainerRequest
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'LeaseContainerRequest',
      type: {
        name: 'Composite',
        className: 'LeaseContainerRequest',
        modelProperties: {
          action: {
            required: true,
            serializedName: 'action',
            type: {
              name: 'String'
            }
          },
          leaseId: {
            required: false,
            serializedName: 'leaseId',
            type: {
              name: 'String'
            }
          },
          breakPeriod: {
            required: false,
            serializedName: 'breakPeriod',
            type: {
              name: 'Number'
            }
          },
          leaseDuration: {
            required: false,
            serializedName: 'leaseDuration',
            type: {
              name: 'Number'
            }
          },
          proposedLeaseId: {
            required: false,
            serializedName: 'proposedLeaseId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = LeaseContainerRequest;

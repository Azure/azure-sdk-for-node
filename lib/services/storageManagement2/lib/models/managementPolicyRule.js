/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * An object that wraps the Lifecycle rule. Each rule is uniquely defined by
 * name.
 *
 */
class ManagementPolicyRule {
  /**
   * Create a ManagementPolicyRule.
   * @property {boolean} [enabled] Rule is enabled if set to true.
   * @property {string} name A rule name can contain any combination of alpha
   * numeric characters. Rule name is case-sensitive. It must be unique within
   * a policy.
   * @property {object} definition An object that defines the Lifecycle rule.
   * @property {object} [definition.actions] An object that defines the action
   * set.
   * @property {object} [definition.actions.baseBlob] The management policy
   * action for base blob
   * @property {object} [definition.actions.baseBlob.tierToCool] The function
   * to tier blobs to cool storage. Support blobs currently at Hot tier
   * @property {number}
   * [definition.actions.baseBlob.tierToCool.daysAfterModificationGreaterThan]
   * Integer value indicating the age in days after last modification
   * @property {object} [definition.actions.baseBlob.tierToArchive] The
   * function to tier blobs to archive storage. Support blobs currently at Hot
   * or Cool tier
   * @property {number}
   * [definition.actions.baseBlob.tierToArchive.daysAfterModificationGreaterThan]
   * Integer value indicating the age in days after last modification
   * @property {object} [definition.actions.baseBlob.deleteProperty] The
   * function to delete the blob
   * @property {number}
   * [definition.actions.baseBlob.deleteProperty.daysAfterModificationGreaterThan]
   * Integer value indicating the age in days after last modification
   * @property {object} [definition.actions.snapshot] The management policy
   * action for snapshot
   * @property {object} [definition.actions.snapshot.deleteProperty] The
   * function to delete the blob snapshot
   * @property {number}
   * [definition.actions.snapshot.deleteProperty.daysAfterCreationGreaterThan]
   * Integer value indicating the age in days after creation
   * @property {object} [definition.filters] An object that defines the filter
   * set.
   * @property {array} [definition.filters.prefixMatch] An array of strings for
   * prefixes to be match.
   * @property {array} [definition.filters.blobTypes] An array of predefined
   * enum values. Only blockBlob is supported.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ManagementPolicyRule
   *
   * @returns {object} metadata of ManagementPolicyRule
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ManagementPolicyRule',
      type: {
        name: 'Composite',
        className: 'ManagementPolicyRule',
        modelProperties: {
          enabled: {
            required: false,
            serializedName: 'enabled',
            type: {
              name: 'Boolean'
            }
          },
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: true,
            isConstant: true,
            serializedName: 'type',
            defaultValue: 'Lifecycle',
            type: {
              name: 'String'
            }
          },
          definition: {
            required: true,
            serializedName: 'definition',
            type: {
              name: 'Composite',
              className: 'ManagementPolicyDefinition'
            }
          }
        }
      }
    };
  }
}

module.exports = ManagementPolicyRule;

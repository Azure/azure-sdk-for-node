/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Metric specification of operation.
 *
 */
class MetricSpecification {
  /**
   * Create a MetricSpecification.
   * @member {string} [name] Name of metric specification.
   * @member {string} [displayName] Display name of metric specification.
   * @member {string} [displayDescription] Display description of metric
   * specification.
   * @member {string} [unit] Unit could be Bytes or Count.
   * @member {array} [dimensions] Dimensions of blobs, including blob type and
   * access tier.
   * @member {string} [aggregationType] Aggregation type could be Average.
   * @member {boolean} [fillGapWithZero] The property to decide fill gap with
   * zero or not.
   * @member {string} [category] The category this metric specification belong
   * to, could be Capacity.
   * @member {string} [resourceIdDimensionNameOverride] Account Resource Id.
   */
  constructor() {
  }

  /**
   * Defines the metadata of MetricSpecification
   *
   * @returns {object} metadata of MetricSpecification
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'MetricSpecification',
      type: {
        name: 'Composite',
        className: 'MetricSpecification',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          displayDescription: {
            required: false,
            serializedName: 'displayDescription',
            type: {
              name: 'String'
            }
          },
          unit: {
            required: false,
            serializedName: 'unit',
            type: {
              name: 'String'
            }
          },
          dimensions: {
            required: false,
            serializedName: 'dimensions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'DimensionElementType',
                  type: {
                    name: 'Composite',
                    className: 'Dimension'
                  }
              }
            }
          },
          aggregationType: {
            required: false,
            serializedName: 'aggregationType',
            type: {
              name: 'String'
            }
          },
          fillGapWithZero: {
            required: false,
            serializedName: 'fillGapWithZero',
            type: {
              name: 'Boolean'
            }
          },
          category: {
            required: false,
            serializedName: 'category',
            type: {
              name: 'String'
            }
          },
          resourceIdDimensionNameOverride: {
            required: false,
            serializedName: 'resourceIdDimensionNameOverride',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = MetricSpecification;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Specifies a CORS rule for the Blob service.
 *
 */
class CorsRule {
  /**
   * Create a CorsRule.
   * @property {array} allowedOrigins Required if CorsRule element is present.
   * A list of origin domains that will be allowed via CORS, or "*" to allow
   * all domains
   * @property {array} allowedMethods Required if CorsRule element is present.
   * A list of HTTP methods that are allowed to be executed by the origin.
   * @property {number} maxAgeInSeconds Required if CorsRule element is
   * present. The number of seconds that the client/browser should cache a
   * preflight response.
   * @property {array} exposedHeaders Required if CorsRule element is present.
   * A list of response headers to expose to CORS clients.
   * @property {array} allowedHeaders Required if CorsRule element is present.
   * A list of headers allowed to be part of the cross-origin request.
   */
  constructor() {
  }

  /**
   * Defines the metadata of CorsRule
   *
   * @returns {object} metadata of CorsRule
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'CorsRule',
      type: {
        name: 'Composite',
        className: 'CorsRule',
        modelProperties: {
          allowedOrigins: {
            required: true,
            serializedName: 'allowedOrigins',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          allowedMethods: {
            required: true,
            serializedName: 'allowedMethods',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          maxAgeInSeconds: {
            required: true,
            serializedName: 'maxAgeInSeconds',
            type: {
              name: 'Number'
            }
          },
          exposedHeaders: {
            required: true,
            serializedName: 'exposedHeaders',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          allowedHeaders: {
            required: true,
            serializedName: 'allowedHeaders',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = CorsRule;

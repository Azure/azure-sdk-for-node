/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * An update history of the ImmutabilityPolicy of a blob container.
 *
 */
class UpdateHistoryProperty {
  /**
   * Create a UpdateHistoryProperty.
   * @member {string} [update] The ImmutabilityPolicy update type of a blob
   * container, possible values include: put, lock and extend. Possible values
   * include: 'put', 'lock', 'extend'
   * @member {number} [immutabilityPeriodSinceCreationInDays] The immutability
   * period for the blobs in the container since the policy creation, in days.
   * @member {date} [timestamp] Returns the date and time the
   * ImmutabilityPolicy was updated.
   * @member {string} [objectIdentifier] Returns the Object ID of the user who
   * updated the ImmutabilityPolicy.
   * @member {string} [tenantId] Returns the Tenant ID that issued the token
   * for the user who updated the ImmutabilityPolicy.
   * @member {string} [upn] Returns the User Principal Name of the user who
   * updated the ImmutabilityPolicy.
   */
  constructor() {
  }

  /**
   * Defines the metadata of UpdateHistoryProperty
   *
   * @returns {object} metadata of UpdateHistoryProperty
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'UpdateHistoryProperty',
      type: {
        name: 'Composite',
        className: 'UpdateHistoryProperty',
        modelProperties: {
          update: {
            required: false,
            readOnly: true,
            serializedName: 'update',
            type: {
              name: 'String'
            }
          },
          immutabilityPeriodSinceCreationInDays: {
            required: false,
            readOnly: true,
            serializedName: 'immutabilityPeriodSinceCreationInDays',
            type: {
              name: 'Number'
            }
          },
          timestamp: {
            required: false,
            readOnly: true,
            serializedName: 'timestamp',
            type: {
              name: 'DateTime'
            }
          },
          objectIdentifier: {
            required: false,
            readOnly: true,
            serializedName: 'objectIdentifier',
            type: {
              name: 'String'
            }
          },
          tenantId: {
            required: false,
            readOnly: true,
            serializedName: 'tenantId',
            type: {
              name: 'String'
            }
          },
          upn: {
            required: false,
            readOnly: true,
            serializedName: 'upn',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = UpdateHistoryProperty;

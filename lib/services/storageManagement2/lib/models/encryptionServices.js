/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * A list of services that support encryption.
 *
 */
class EncryptionServices {
  /**
   * Create a EncryptionServices.
   * @member {object} [blob] The encryption function of the blob storage
   * service.
   * @member {boolean} [blob.enabled] A boolean indicating whether or not the
   * service encrypts the data as it is stored.
   * @member {date} [blob.lastEnabledTime] Gets a rough estimate of the
   * date/time when the encryption was last enabled by the user. Only returned
   * when encryption is enabled. There might be some unencrypted blobs which
   * were written after this time, as it is just a rough estimate.
   * @member {object} [file] The encryption function of the file storage
   * service.
   * @member {boolean} [file.enabled] A boolean indicating whether or not the
   * service encrypts the data as it is stored.
   * @member {date} [file.lastEnabledTime] Gets a rough estimate of the
   * date/time when the encryption was last enabled by the user. Only returned
   * when encryption is enabled. There might be some unencrypted blobs which
   * were written after this time, as it is just a rough estimate.
   * @member {object} [table] The encryption function of the table storage
   * service.
   * @member {boolean} [table.enabled] A boolean indicating whether or not the
   * service encrypts the data as it is stored.
   * @member {date} [table.lastEnabledTime] Gets a rough estimate of the
   * date/time when the encryption was last enabled by the user. Only returned
   * when encryption is enabled. There might be some unencrypted blobs which
   * were written after this time, as it is just a rough estimate.
   * @member {object} [queue] The encryption function of the queue storage
   * service.
   * @member {boolean} [queue.enabled] A boolean indicating whether or not the
   * service encrypts the data as it is stored.
   * @member {date} [queue.lastEnabledTime] Gets a rough estimate of the
   * date/time when the encryption was last enabled by the user. Only returned
   * when encryption is enabled. There might be some unencrypted blobs which
   * were written after this time, as it is just a rough estimate.
   */
  constructor() {
  }

  /**
   * Defines the metadata of EncryptionServices
   *
   * @returns {object} metadata of EncryptionServices
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'EncryptionServices',
      type: {
        name: 'Composite',
        className: 'EncryptionServices',
        modelProperties: {
          blob: {
            required: false,
            serializedName: 'blob',
            type: {
              name: 'Composite',
              className: 'EncryptionService'
            }
          },
          file: {
            required: false,
            serializedName: 'file',
            type: {
              name: 'Composite',
              className: 'EncryptionService'
            }
          },
          table: {
            required: false,
            readOnly: true,
            serializedName: 'table',
            type: {
              name: 'Composite',
              className: 'EncryptionService'
            }
          },
          queue: {
            required: false,
            readOnly: true,
            serializedName: 'queue',
            type: {
              name: 'Composite',
              className: 'EncryptionService'
            }
          }
        }
      }
    };
  }
}

module.exports = EncryptionServices;

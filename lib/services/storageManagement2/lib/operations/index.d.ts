/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the StorageManagementClient.
 */
export interface Operations {


    /**
     * Lists all of the available Storage Rest API operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists all of the available Storage Rest API operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    list(callback: ServiceCallback<models.OperationListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;
}

/**
 * @class
 * Skus
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the StorageManagementClient.
 */
export interface Skus {


    /**
     * Lists the available SKUs supported by Microsoft.Storage for given
     * subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageSkuListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageSkuListResult>>;

    /**
     * Lists the available SKUs supported by Microsoft.Storage for given
     * subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageSkuListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageSkuListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageSkuListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageSkuListResult>;
    list(callback: ServiceCallback<models.StorageSkuListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageSkuListResult>): void;
}

/**
 * @class
 * StorageAccounts
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the StorageManagementClient.
 */
export interface StorageAccounts {


    /**
     * Checks that the storage account name is valid and is not already in use.
     *
     * @param {string} name The storage account name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<CheckNameAvailabilityResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    checkNameAvailabilityWithHttpOperationResponse(name: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CheckNameAvailabilityResult>>;

    /**
     * Checks that the storage account name is valid and is not already in use.
     *
     * @param {string} name The storage account name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {CheckNameAvailabilityResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {CheckNameAvailabilityResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link CheckNameAvailabilityResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    checkNameAvailability(name: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CheckNameAvailabilityResult>;
    checkNameAvailability(name: string, callback: ServiceCallback<models.CheckNameAvailabilityResult>): void;
    checkNameAvailability(name: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CheckNameAvailabilityResult>): void;


    /**
     * Asynchronously creates a new storage account with the specified parameters.
     * If an account is already created and a subsequent create request is issued
     * with different properties, the account properties will be updated. If an
     * account is already created and a subsequent create or update request is
     * issued with the exact same set of properties, the request will succeed.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The parameters to provide for the created
     * account.
     *
     * @param {object} parameters.sku Required. Gets or sets the sku name.
     *
     * @param {string} parameters.sku.name Gets or sets the sku name. Required for
     * account creation; optional for update. Note that in older versions, sku name
     * was called accountType. Possible values include: 'Standard_LRS',
     * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS',
     * 'Premium_ZRS'
     *
     * @param {array} [parameters.sku.restrictions] The restrictions because of
     * which SKU cannot be used. This is empty if there are no restrictions.
     *
     * @param {string} parameters.kind Required. Indicates the type of storage
     * account. Possible values include: 'Storage', 'StorageV2', 'BlobStorage',
     * 'FileStorage', 'BlockBlobStorage'
     *
     * @param {string} parameters.location Required. Gets or sets the location of
     * the resource. This will be one of the supported and registered Azure Geo
     * Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a
     * resource cannot be changed once it is created, but if an identical geo
     * region is specified on update, the request will succeed.
     *
     * @param {object} [parameters.tags] Gets or sets a list of key value pairs
     * that describe the resource. These tags can be used for viewing and grouping
     * this resource (across resource groups). A maximum of 15 tags can be provided
     * for a resource. Each tag must have a key with a length no greater than 128
     * characters and a value with a length no greater than 256 characters.
     *
     * @param {object} [parameters.identity] The identity of the resource.
     *
     * @param {object} [parameters.customDomain] User domain assigned to the
     * storage account. Name is the CNAME source. Only one custom domain is
     * supported per storage account at this time. To clear the existing custom
     * domain, use an empty string for the custom domain name property.
     *
     * @param {string} parameters.customDomain.name Gets or sets the custom domain
     * name assigned to the storage account. Name is the CNAME source.
     *
     * @param {boolean} [parameters.customDomain.useSubDomain] Indicates whether
     * indirect CName validation is enabled. Default value is false. This should
     * only be set on updates.
     *
     * @param {object} [parameters.encryption] Provides the encryption settings on
     * the account. If left unspecified the account encryption settings will remain
     * the same. The default setting is unencrypted.
     *
     * @param {object} [parameters.encryption.services] List of services which
     * support encryption.
     *
     * @param {object} [parameters.encryption.services.blob] The encryption
     * function of the blob storage service.
     *
     * @param {object} [parameters.encryption.services.file] The encryption
     * function of the file storage service.
     *
     * @param {boolean} [parameters.encryption.services.file.enabled] A boolean
     * indicating whether or not the service encrypts the data as it is stored.
     *
     * @param {string} parameters.encryption.keySource The encryption keySource
     * (provider). Possible values (case-insensitive):  Microsoft.Storage,
     * Microsoft.Keyvault. Possible values include: 'Microsoft.Storage',
     * 'Microsoft.Keyvault'
     *
     * @param {object} [parameters.encryption.keyVaultProperties] Properties
     * provided by key vault.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyName] The name
     * of KeyVault key.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyVersion] The
     * version of KeyVault key.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyVaultUri] The
     * Uri of KeyVault.
     *
     * @param {object} [parameters.networkRuleSet] Network rule set
     *
     * @param {string} [parameters.networkRuleSet.bypass] Specifies whether traffic
     * is bypassed for Logging/Metrics/AzureServices. Possible values are any
     * combination of Logging|Metrics|AzureServices (For example, "Logging,
     * Metrics"), or None to bypass none of those traffics. Possible values
     * include: 'None', 'Logging', 'Metrics', 'AzureServices'
     *
     * @param {array} [parameters.networkRuleSet.virtualNetworkRules] Sets the
     * virtual network rules
     *
     * @param {array} [parameters.networkRuleSet.ipRules] Sets the IP ACL rules
     *
     * @param {string} parameters.networkRuleSet.defaultAction Specifies the
     * default action of allow or deny when no other rules match. Possible values
     * include: 'Allow', 'Deny'
     *
     * @param {string} [parameters.accessTier] Required for storage accounts where
     * kind = BlobStorage. The access tier used for billing. Possible values
     * include: 'Hot', 'Cool'
     *
     * @param {boolean} [parameters.enableAzureFilesAadIntegration] Enables Azure
     * Files AAD Integration for SMB if sets to true.
     *
     * @param {boolean} [parameters.enableHttpsTrafficOnly] Allows https traffic
     * only to storage service if sets to true.
     *
     * @param {boolean} [parameters.isHnsEnabled] Account HierarchicalNamespace
     * enabled if sets to true.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageAccount>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: models.StorageAccountCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageAccount>>;

    /**
     * Asynchronously creates a new storage account with the specified parameters.
     * If an account is already created and a subsequent create request is issued
     * with different properties, the account properties will be updated. If an
     * account is already created and a subsequent create or update request is
     * issued with the exact same set of properties, the request will succeed.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The parameters to provide for the created
     * account.
     *
     * @param {object} parameters.sku Required. Gets or sets the sku name.
     *
     * @param {string} parameters.sku.name Gets or sets the sku name. Required for
     * account creation; optional for update. Note that in older versions, sku name
     * was called accountType. Possible values include: 'Standard_LRS',
     * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS',
     * 'Premium_ZRS'
     *
     * @param {array} [parameters.sku.restrictions] The restrictions because of
     * which SKU cannot be used. This is empty if there are no restrictions.
     *
     * @param {string} parameters.kind Required. Indicates the type of storage
     * account. Possible values include: 'Storage', 'StorageV2', 'BlobStorage',
     * 'FileStorage', 'BlockBlobStorage'
     *
     * @param {string} parameters.location Required. Gets or sets the location of
     * the resource. This will be one of the supported and registered Azure Geo
     * Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a
     * resource cannot be changed once it is created, but if an identical geo
     * region is specified on update, the request will succeed.
     *
     * @param {object} [parameters.tags] Gets or sets a list of key value pairs
     * that describe the resource. These tags can be used for viewing and grouping
     * this resource (across resource groups). A maximum of 15 tags can be provided
     * for a resource. Each tag must have a key with a length no greater than 128
     * characters and a value with a length no greater than 256 characters.
     *
     * @param {object} [parameters.identity] The identity of the resource.
     *
     * @param {object} [parameters.customDomain] User domain assigned to the
     * storage account. Name is the CNAME source. Only one custom domain is
     * supported per storage account at this time. To clear the existing custom
     * domain, use an empty string for the custom domain name property.
     *
     * @param {string} parameters.customDomain.name Gets or sets the custom domain
     * name assigned to the storage account. Name is the CNAME source.
     *
     * @param {boolean} [parameters.customDomain.useSubDomain] Indicates whether
     * indirect CName validation is enabled. Default value is false. This should
     * only be set on updates.
     *
     * @param {object} [parameters.encryption] Provides the encryption settings on
     * the account. If left unspecified the account encryption settings will remain
     * the same. The default setting is unencrypted.
     *
     * @param {object} [parameters.encryption.services] List of services which
     * support encryption.
     *
     * @param {object} [parameters.encryption.services.blob] The encryption
     * function of the blob storage service.
     *
     * @param {object} [parameters.encryption.services.file] The encryption
     * function of the file storage service.
     *
     * @param {boolean} [parameters.encryption.services.file.enabled] A boolean
     * indicating whether or not the service encrypts the data as it is stored.
     *
     * @param {string} parameters.encryption.keySource The encryption keySource
     * (provider). Possible values (case-insensitive):  Microsoft.Storage,
     * Microsoft.Keyvault. Possible values include: 'Microsoft.Storage',
     * 'Microsoft.Keyvault'
     *
     * @param {object} [parameters.encryption.keyVaultProperties] Properties
     * provided by key vault.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyName] The name
     * of KeyVault key.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyVersion] The
     * version of KeyVault key.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyVaultUri] The
     * Uri of KeyVault.
     *
     * @param {object} [parameters.networkRuleSet] Network rule set
     *
     * @param {string} [parameters.networkRuleSet.bypass] Specifies whether traffic
     * is bypassed for Logging/Metrics/AzureServices. Possible values are any
     * combination of Logging|Metrics|AzureServices (For example, "Logging,
     * Metrics"), or None to bypass none of those traffics. Possible values
     * include: 'None', 'Logging', 'Metrics', 'AzureServices'
     *
     * @param {array} [parameters.networkRuleSet.virtualNetworkRules] Sets the
     * virtual network rules
     *
     * @param {array} [parameters.networkRuleSet.ipRules] Sets the IP ACL rules
     *
     * @param {string} parameters.networkRuleSet.defaultAction Specifies the
     * default action of allow or deny when no other rules match. Possible values
     * include: 'Allow', 'Deny'
     *
     * @param {string} [parameters.accessTier] Required for storage accounts where
     * kind = BlobStorage. The access tier used for billing. Possible values
     * include: 'Hot', 'Cool'
     *
     * @param {boolean} [parameters.enableAzureFilesAadIntegration] Enables Azure
     * Files AAD Integration for SMB if sets to true.
     *
     * @param {boolean} [parameters.enableHttpsTrafficOnly] Allows https traffic
     * only to storage service if sets to true.
     *
     * @param {boolean} [parameters.isHnsEnabled] Account HierarchicalNamespace
     * enabled if sets to true.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageAccount} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageAccount} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageAccount} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroupName: string, accountName: string, parameters: models.StorageAccountCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageAccount>;
    create(resourceGroupName: string, accountName: string, parameters: models.StorageAccountCreateParameters, callback: ServiceCallback<models.StorageAccount>): void;
    create(resourceGroupName: string, accountName: string, parameters: models.StorageAccountCreateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccount>): void;


    /**
     * Deletes a storage account in Microsoft Azure.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a storage account in Microsoft Azure.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Returns the properties for the specified storage account including but not
     * limited to name, SKU name, location, and account status. The ListKeys
     * operation should be used to retrieve storage keys.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.expand] May be used to expand the properties within
     * account's properties. By default, data is not included when fecthing
     * properties. Currently we only support geoReplicationStats. Possible values
     * include: 'geoReplicationStats'
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageAccount>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getPropertiesWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: { expand? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageAccount>>;

    /**
     * Returns the properties for the specified storage account including but not
     * limited to name, SKU name, location, and account status. The ListKeys
     * operation should be used to retrieve storage keys.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.expand] May be used to expand the properties within
     * account's properties. By default, data is not included when fecthing
     * properties. Currently we only support geoReplicationStats. Possible values
     * include: 'geoReplicationStats'
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageAccount} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageAccount} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageAccount} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getProperties(resourceGroupName: string, accountName: string, options?: { expand? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageAccount>;
    getProperties(resourceGroupName: string, accountName: string, callback: ServiceCallback<models.StorageAccount>): void;
    getProperties(resourceGroupName: string, accountName: string, options: { expand? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccount>): void;


    /**
     * The update operation can be used to update the SKU, encryption, access tier,
     * or tags for a storage account. It can also be used to map the account to a
     * custom domain. Only one custom domain is supported per storage account; the
     * replacement/change of custom domain is not supported. In order to replace an
     * old custom domain, the old value must be cleared/unregistered before a new
     * value can be set. The update of multiple properties is supported. This call
     * does not change the storage keys for the account. If you want to change the
     * storage account keys, use the regenerate keys operation. The location and
     * name of the storage account cannot be changed after creation.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The parameters to provide for the updated
     * account.
     *
     * @param {object} [parameters.sku] Gets or sets the SKU name. Note that the
     * SKU name cannot be updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor
     * can accounts of those sku names be updated to any other value.
     *
     * @param {string} parameters.sku.name Gets or sets the sku name. Required for
     * account creation; optional for update. Note that in older versions, sku name
     * was called accountType. Possible values include: 'Standard_LRS',
     * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS',
     * 'Premium_ZRS'
     *
     * @param {array} [parameters.sku.restrictions] The restrictions because of
     * which SKU cannot be used. This is empty if there are no restrictions.
     *
     * @param {object} [parameters.tags] Gets or sets a list of key value pairs
     * that describe the resource. These tags can be used in viewing and grouping
     * this resource (across resource groups). A maximum of 15 tags can be provided
     * for a resource. Each tag must have a key no greater in length than 128
     * characters and a value no greater in length than 256 characters.
     *
     * @param {object} [parameters.identity] The identity of the resource.
     *
     * @param {object} [parameters.customDomain] Custom domain assigned to the
     * storage account by the user. Name is the CNAME source. Only one custom
     * domain is supported per storage account at this time. To clear the existing
     * custom domain, use an empty string for the custom domain name property.
     *
     * @param {string} parameters.customDomain.name Gets or sets the custom domain
     * name assigned to the storage account. Name is the CNAME source.
     *
     * @param {boolean} [parameters.customDomain.useSubDomain] Indicates whether
     * indirect CName validation is enabled. Default value is false. This should
     * only be set on updates.
     *
     * @param {object} [parameters.encryption] Provides the encryption settings on
     * the account. The default setting is unencrypted.
     *
     * @param {object} [parameters.encryption.services] List of services which
     * support encryption.
     *
     * @param {object} [parameters.encryption.services.blob] The encryption
     * function of the blob storage service.
     *
     * @param {object} [parameters.encryption.services.file] The encryption
     * function of the file storage service.
     *
     * @param {boolean} [parameters.encryption.services.file.enabled] A boolean
     * indicating whether or not the service encrypts the data as it is stored.
     *
     * @param {string} parameters.encryption.keySource The encryption keySource
     * (provider). Possible values (case-insensitive):  Microsoft.Storage,
     * Microsoft.Keyvault. Possible values include: 'Microsoft.Storage',
     * 'Microsoft.Keyvault'
     *
     * @param {object} [parameters.encryption.keyVaultProperties] Properties
     * provided by key vault.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyName] The name
     * of KeyVault key.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyVersion] The
     * version of KeyVault key.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyVaultUri] The
     * Uri of KeyVault.
     *
     * @param {string} [parameters.accessTier] Required for storage accounts where
     * kind = BlobStorage. The access tier used for billing. Possible values
     * include: 'Hot', 'Cool'
     *
     * @param {boolean} [parameters.enableAzureFilesAadIntegration] Enables Azure
     * Files AAD Integration for SMB if sets to true.
     *
     * @param {boolean} [parameters.enableHttpsTrafficOnly] Allows https traffic
     * only to storage service if sets to true.
     *
     * @param {object} [parameters.networkRuleSet] Network rule set
     *
     * @param {string} [parameters.networkRuleSet.bypass] Specifies whether traffic
     * is bypassed for Logging/Metrics/AzureServices. Possible values are any
     * combination of Logging|Metrics|AzureServices (For example, "Logging,
     * Metrics"), or None to bypass none of those traffics. Possible values
     * include: 'None', 'Logging', 'Metrics', 'AzureServices'
     *
     * @param {array} [parameters.networkRuleSet.virtualNetworkRules] Sets the
     * virtual network rules
     *
     * @param {array} [parameters.networkRuleSet.ipRules] Sets the IP ACL rules
     *
     * @param {string} parameters.networkRuleSet.defaultAction Specifies the
     * default action of allow or deny when no other rules match. Possible values
     * include: 'Allow', 'Deny'
     *
     * @param {string} [parameters.kind] Optional. Indicates the type of storage
     * account. Currently only StorageV2 value supported by server. Possible values
     * include: 'Storage', 'StorageV2', 'BlobStorage', 'FileStorage',
     * 'BlockBlobStorage'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageAccount>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: models.StorageAccountUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageAccount>>;

    /**
     * The update operation can be used to update the SKU, encryption, access tier,
     * or tags for a storage account. It can also be used to map the account to a
     * custom domain. Only one custom domain is supported per storage account; the
     * replacement/change of custom domain is not supported. In order to replace an
     * old custom domain, the old value must be cleared/unregistered before a new
     * value can be set. The update of multiple properties is supported. This call
     * does not change the storage keys for the account. If you want to change the
     * storage account keys, use the regenerate keys operation. The location and
     * name of the storage account cannot be changed after creation.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The parameters to provide for the updated
     * account.
     *
     * @param {object} [parameters.sku] Gets or sets the SKU name. Note that the
     * SKU name cannot be updated to Standard_ZRS, Premium_LRS or Premium_ZRS, nor
     * can accounts of those sku names be updated to any other value.
     *
     * @param {string} parameters.sku.name Gets or sets the sku name. Required for
     * account creation; optional for update. Note that in older versions, sku name
     * was called accountType. Possible values include: 'Standard_LRS',
     * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS',
     * 'Premium_ZRS'
     *
     * @param {array} [parameters.sku.restrictions] The restrictions because of
     * which SKU cannot be used. This is empty if there are no restrictions.
     *
     * @param {object} [parameters.tags] Gets or sets a list of key value pairs
     * that describe the resource. These tags can be used in viewing and grouping
     * this resource (across resource groups). A maximum of 15 tags can be provided
     * for a resource. Each tag must have a key no greater in length than 128
     * characters and a value no greater in length than 256 characters.
     *
     * @param {object} [parameters.identity] The identity of the resource.
     *
     * @param {object} [parameters.customDomain] Custom domain assigned to the
     * storage account by the user. Name is the CNAME source. Only one custom
     * domain is supported per storage account at this time. To clear the existing
     * custom domain, use an empty string for the custom domain name property.
     *
     * @param {string} parameters.customDomain.name Gets or sets the custom domain
     * name assigned to the storage account. Name is the CNAME source.
     *
     * @param {boolean} [parameters.customDomain.useSubDomain] Indicates whether
     * indirect CName validation is enabled. Default value is false. This should
     * only be set on updates.
     *
     * @param {object} [parameters.encryption] Provides the encryption settings on
     * the account. The default setting is unencrypted.
     *
     * @param {object} [parameters.encryption.services] List of services which
     * support encryption.
     *
     * @param {object} [parameters.encryption.services.blob] The encryption
     * function of the blob storage service.
     *
     * @param {object} [parameters.encryption.services.file] The encryption
     * function of the file storage service.
     *
     * @param {boolean} [parameters.encryption.services.file.enabled] A boolean
     * indicating whether or not the service encrypts the data as it is stored.
     *
     * @param {string} parameters.encryption.keySource The encryption keySource
     * (provider). Possible values (case-insensitive):  Microsoft.Storage,
     * Microsoft.Keyvault. Possible values include: 'Microsoft.Storage',
     * 'Microsoft.Keyvault'
     *
     * @param {object} [parameters.encryption.keyVaultProperties] Properties
     * provided by key vault.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyName] The name
     * of KeyVault key.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyVersion] The
     * version of KeyVault key.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyVaultUri] The
     * Uri of KeyVault.
     *
     * @param {string} [parameters.accessTier] Required for storage accounts where
     * kind = BlobStorage. The access tier used for billing. Possible values
     * include: 'Hot', 'Cool'
     *
     * @param {boolean} [parameters.enableAzureFilesAadIntegration] Enables Azure
     * Files AAD Integration for SMB if sets to true.
     *
     * @param {boolean} [parameters.enableHttpsTrafficOnly] Allows https traffic
     * only to storage service if sets to true.
     *
     * @param {object} [parameters.networkRuleSet] Network rule set
     *
     * @param {string} [parameters.networkRuleSet.bypass] Specifies whether traffic
     * is bypassed for Logging/Metrics/AzureServices. Possible values are any
     * combination of Logging|Metrics|AzureServices (For example, "Logging,
     * Metrics"), or None to bypass none of those traffics. Possible values
     * include: 'None', 'Logging', 'Metrics', 'AzureServices'
     *
     * @param {array} [parameters.networkRuleSet.virtualNetworkRules] Sets the
     * virtual network rules
     *
     * @param {array} [parameters.networkRuleSet.ipRules] Sets the IP ACL rules
     *
     * @param {string} parameters.networkRuleSet.defaultAction Specifies the
     * default action of allow or deny when no other rules match. Possible values
     * include: 'Allow', 'Deny'
     *
     * @param {string} [parameters.kind] Optional. Indicates the type of storage
     * account. Currently only StorageV2 value supported by server. Possible values
     * include: 'Storage', 'StorageV2', 'BlobStorage', 'FileStorage',
     * 'BlockBlobStorage'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageAccount} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageAccount} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageAccount} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, accountName: string, parameters: models.StorageAccountUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageAccount>;
    update(resourceGroupName: string, accountName: string, parameters: models.StorageAccountUpdateParameters, callback: ServiceCallback<models.StorageAccount>): void;
    update(resourceGroupName: string, accountName: string, parameters: models.StorageAccountUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccount>): void;


    /**
     * Lists all the storage accounts available under the subscription. Note that
     * storage keys are not returned; use the ListKeys operation for this.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageAccountListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageAccountListResult>>;

    /**
     * Lists all the storage accounts available under the subscription. Note that
     * storage keys are not returned; use the ListKeys operation for this.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageAccountListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageAccountListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageAccountListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageAccountListResult>;
    list(callback: ServiceCallback<models.StorageAccountListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccountListResult>): void;


    /**
     * Lists all the storage accounts available under the given resource group.
     * Note that storage keys are not returned; use the ListKeys operation for
     * this.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageAccountListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageAccountListResult>>;

    /**
     * Lists all the storage accounts available under the given resource group.
     * Note that storage keys are not returned; use the ListKeys operation for
     * this.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageAccountListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageAccountListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageAccountListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageAccountListResult>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.StorageAccountListResult>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccountListResult>): void;


    /**
     * Lists the access keys for the specified storage account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageAccountListKeysResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listKeysWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageAccountListKeysResult>>;

    /**
     * Lists the access keys for the specified storage account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageAccountListKeysResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageAccountListKeysResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageAccountListKeysResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listKeys(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageAccountListKeysResult>;
    listKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<models.StorageAccountListKeysResult>): void;
    listKeys(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccountListKeysResult>): void;


    /**
     * Regenerates one of the access keys for the specified storage account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} keyName The name of storage keys that want to be
     * regenerated, possible vaules are key1, key2.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageAccountListKeysResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    regenerateKeyWithHttpOperationResponse(resourceGroupName: string, accountName: string, keyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageAccountListKeysResult>>;

    /**
     * Regenerates one of the access keys for the specified storage account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} keyName The name of storage keys that want to be
     * regenerated, possible vaules are key1, key2.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageAccountListKeysResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageAccountListKeysResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageAccountListKeysResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    regenerateKey(resourceGroupName: string, accountName: string, keyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageAccountListKeysResult>;
    regenerateKey(resourceGroupName: string, accountName: string, keyName: string, callback: ServiceCallback<models.StorageAccountListKeysResult>): void;
    regenerateKey(resourceGroupName: string, accountName: string, keyName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccountListKeysResult>): void;


    /**
     * List SAS credentials of a storage account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The parameters to provide to list SAS credentials
     * for the storage account.
     *
     * @param {string} parameters.services The signed services accessible with the
     * account SAS. Possible values include: Blob (b), Queue (q), Table (t), File
     * (f). Possible values include: 'b', 'q', 't', 'f'
     *
     * @param {string} parameters.resourceTypes The signed resource types that are
     * accessible with the account SAS. Service (s): Access to service-level APIs;
     * Container (c): Access to container-level APIs; Object (o): Access to
     * object-level APIs for blobs, queue messages, table entities, and files.
     * Possible values include: 's', 'c', 'o'
     *
     * @param {string} parameters.permissions The signed permissions for the
     * account SAS. Possible values include: Read (r), Write (w), Delete (d), List
     * (l), Add (a), Create (c), Update (u) and Process (p). Possible values
     * include: 'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'
     *
     * @param {string} [parameters.iPAddressOrRange] An IP address or a range of IP
     * addresses from which to accept requests.
     *
     * @param {string} [parameters.protocols] The protocol permitted for a request
     * made with the account SAS. Possible values include: 'https,http', 'https'
     *
     * @param {date} [parameters.sharedAccessStartTime] The time at which the SAS
     * becomes valid.
     *
     * @param {date} parameters.sharedAccessExpiryTime The time at which the shared
     * access signature becomes invalid.
     *
     * @param {string} [parameters.keyToSign] The key to sign the account SAS token
     * with.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ListAccountSasResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listAccountSASWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: models.AccountSasParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ListAccountSasResponse>>;

    /**
     * List SAS credentials of a storage account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The parameters to provide to list SAS credentials
     * for the storage account.
     *
     * @param {string} parameters.services The signed services accessible with the
     * account SAS. Possible values include: Blob (b), Queue (q), Table (t), File
     * (f). Possible values include: 'b', 'q', 't', 'f'
     *
     * @param {string} parameters.resourceTypes The signed resource types that are
     * accessible with the account SAS. Service (s): Access to service-level APIs;
     * Container (c): Access to container-level APIs; Object (o): Access to
     * object-level APIs for blobs, queue messages, table entities, and files.
     * Possible values include: 's', 'c', 'o'
     *
     * @param {string} parameters.permissions The signed permissions for the
     * account SAS. Possible values include: Read (r), Write (w), Delete (d), List
     * (l), Add (a), Create (c), Update (u) and Process (p). Possible values
     * include: 'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'
     *
     * @param {string} [parameters.iPAddressOrRange] An IP address or a range of IP
     * addresses from which to accept requests.
     *
     * @param {string} [parameters.protocols] The protocol permitted for a request
     * made with the account SAS. Possible values include: 'https,http', 'https'
     *
     * @param {date} [parameters.sharedAccessStartTime] The time at which the SAS
     * becomes valid.
     *
     * @param {date} parameters.sharedAccessExpiryTime The time at which the shared
     * access signature becomes invalid.
     *
     * @param {string} [parameters.keyToSign] The key to sign the account SAS token
     * with.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ListAccountSasResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ListAccountSasResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ListAccountSasResponse} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listAccountSAS(resourceGroupName: string, accountName: string, parameters: models.AccountSasParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ListAccountSasResponse>;
    listAccountSAS(resourceGroupName: string, accountName: string, parameters: models.AccountSasParameters, callback: ServiceCallback<models.ListAccountSasResponse>): void;
    listAccountSAS(resourceGroupName: string, accountName: string, parameters: models.AccountSasParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ListAccountSasResponse>): void;


    /**
     * List service SAS credentials of a specific resource.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The parameters to provide to list service SAS
     * credentials.
     *
     * @param {string} parameters.canonicalizedResource The canonical path to the
     * signed resource.
     *
     * @param {string} [parameters.resource] The signed services accessible with
     * the service SAS. Possible values include: Blob (b), Container (c), File (f),
     * Share (s). Possible values include: 'b', 'c', 'f', 's'
     *
     * @param {string} [parameters.permissions] The signed permissions for the
     * service SAS. Possible values include: Read (r), Write (w), Delete (d), List
     * (l), Add (a), Create (c), Update (u) and Process (p). Possible values
     * include: 'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'
     *
     * @param {string} [parameters.iPAddressOrRange] An IP address or a range of IP
     * addresses from which to accept requests.
     *
     * @param {string} [parameters.protocols] The protocol permitted for a request
     * made with the account SAS. Possible values include: 'https,http', 'https'
     *
     * @param {date} [parameters.sharedAccessStartTime] The time at which the SAS
     * becomes valid.
     *
     * @param {date} [parameters.sharedAccessExpiryTime] The time at which the
     * shared access signature becomes invalid.
     *
     * @param {string} [parameters.identifier] A unique value up to 64 characters
     * in length that correlates to an access policy specified for the container,
     * queue, or table.
     *
     * @param {string} [parameters.partitionKeyStart] The start of partition key.
     *
     * @param {string} [parameters.partitionKeyEnd] The end of partition key.
     *
     * @param {string} [parameters.rowKeyStart] The start of row key.
     *
     * @param {string} [parameters.rowKeyEnd] The end of row key.
     *
     * @param {string} [parameters.keyToSign] The key to sign the account SAS token
     * with.
     *
     * @param {string} [parameters.cacheControl] The response header override for
     * cache control.
     *
     * @param {string} [parameters.contentDisposition] The response header override
     * for content disposition.
     *
     * @param {string} [parameters.contentEncoding] The response header override
     * for content encoding.
     *
     * @param {string} [parameters.contentLanguage] The response header override
     * for content language.
     *
     * @param {string} [parameters.contentType] The response header override for
     * content type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ListServiceSasResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listServiceSASWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: models.ServiceSasParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ListServiceSasResponse>>;

    /**
     * List service SAS credentials of a specific resource.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The parameters to provide to list service SAS
     * credentials.
     *
     * @param {string} parameters.canonicalizedResource The canonical path to the
     * signed resource.
     *
     * @param {string} [parameters.resource] The signed services accessible with
     * the service SAS. Possible values include: Blob (b), Container (c), File (f),
     * Share (s). Possible values include: 'b', 'c', 'f', 's'
     *
     * @param {string} [parameters.permissions] The signed permissions for the
     * service SAS. Possible values include: Read (r), Write (w), Delete (d), List
     * (l), Add (a), Create (c), Update (u) and Process (p). Possible values
     * include: 'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'
     *
     * @param {string} [parameters.iPAddressOrRange] An IP address or a range of IP
     * addresses from which to accept requests.
     *
     * @param {string} [parameters.protocols] The protocol permitted for a request
     * made with the account SAS. Possible values include: 'https,http', 'https'
     *
     * @param {date} [parameters.sharedAccessStartTime] The time at which the SAS
     * becomes valid.
     *
     * @param {date} [parameters.sharedAccessExpiryTime] The time at which the
     * shared access signature becomes invalid.
     *
     * @param {string} [parameters.identifier] A unique value up to 64 characters
     * in length that correlates to an access policy specified for the container,
     * queue, or table.
     *
     * @param {string} [parameters.partitionKeyStart] The start of partition key.
     *
     * @param {string} [parameters.partitionKeyEnd] The end of partition key.
     *
     * @param {string} [parameters.rowKeyStart] The start of row key.
     *
     * @param {string} [parameters.rowKeyEnd] The end of row key.
     *
     * @param {string} [parameters.keyToSign] The key to sign the account SAS token
     * with.
     *
     * @param {string} [parameters.cacheControl] The response header override for
     * cache control.
     *
     * @param {string} [parameters.contentDisposition] The response header override
     * for content disposition.
     *
     * @param {string} [parameters.contentEncoding] The response header override
     * for content encoding.
     *
     * @param {string} [parameters.contentLanguage] The response header override
     * for content language.
     *
     * @param {string} [parameters.contentType] The response header override for
     * content type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ListServiceSasResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ListServiceSasResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ListServiceSasResponse} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listServiceSAS(resourceGroupName: string, accountName: string, parameters: models.ServiceSasParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ListServiceSasResponse>;
    listServiceSAS(resourceGroupName: string, accountName: string, parameters: models.ServiceSasParameters, callback: ServiceCallback<models.ListServiceSasResponse>): void;
    listServiceSAS(resourceGroupName: string, accountName: string, parameters: models.ServiceSasParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ListServiceSasResponse>): void;


    /**
     * Failover request can be triggered for a storage account in case of
     * availability issues. The failover occurs from the storage account's primary
     * cluster to secondary cluster for RA-GRS accounts. The secondary cluster will
     * become primary after failover.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    failoverWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Failover request can be triggered for a storage account in case of
     * availability issues. The failover occurs from the storage account's primary
     * cluster to secondary cluster for RA-GRS accounts. The secondary cluster will
     * become primary after failover.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    failover(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    failover(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>): void;
    failover(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Asynchronously creates a new storage account with the specified parameters.
     * If an account is already created and a subsequent create request is issued
     * with different properties, the account properties will be updated. If an
     * account is already created and a subsequent create or update request is
     * issued with the exact same set of properties, the request will succeed.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The parameters to provide for the created
     * account.
     *
     * @param {object} parameters.sku Required. Gets or sets the sku name.
     *
     * @param {string} parameters.sku.name Gets or sets the sku name. Required for
     * account creation; optional for update. Note that in older versions, sku name
     * was called accountType. Possible values include: 'Standard_LRS',
     * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS',
     * 'Premium_ZRS'
     *
     * @param {array} [parameters.sku.restrictions] The restrictions because of
     * which SKU cannot be used. This is empty if there are no restrictions.
     *
     * @param {string} parameters.kind Required. Indicates the type of storage
     * account. Possible values include: 'Storage', 'StorageV2', 'BlobStorage',
     * 'FileStorage', 'BlockBlobStorage'
     *
     * @param {string} parameters.location Required. Gets or sets the location of
     * the resource. This will be one of the supported and registered Azure Geo
     * Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a
     * resource cannot be changed once it is created, but if an identical geo
     * region is specified on update, the request will succeed.
     *
     * @param {object} [parameters.tags] Gets or sets a list of key value pairs
     * that describe the resource. These tags can be used for viewing and grouping
     * this resource (across resource groups). A maximum of 15 tags can be provided
     * for a resource. Each tag must have a key with a length no greater than 128
     * characters and a value with a length no greater than 256 characters.
     *
     * @param {object} [parameters.identity] The identity of the resource.
     *
     * @param {object} [parameters.customDomain] User domain assigned to the
     * storage account. Name is the CNAME source. Only one custom domain is
     * supported per storage account at this time. To clear the existing custom
     * domain, use an empty string for the custom domain name property.
     *
     * @param {string} parameters.customDomain.name Gets or sets the custom domain
     * name assigned to the storage account. Name is the CNAME source.
     *
     * @param {boolean} [parameters.customDomain.useSubDomain] Indicates whether
     * indirect CName validation is enabled. Default value is false. This should
     * only be set on updates.
     *
     * @param {object} [parameters.encryption] Provides the encryption settings on
     * the account. If left unspecified the account encryption settings will remain
     * the same. The default setting is unencrypted.
     *
     * @param {object} [parameters.encryption.services] List of services which
     * support encryption.
     *
     * @param {object} [parameters.encryption.services.blob] The encryption
     * function of the blob storage service.
     *
     * @param {object} [parameters.encryption.services.file] The encryption
     * function of the file storage service.
     *
     * @param {boolean} [parameters.encryption.services.file.enabled] A boolean
     * indicating whether or not the service encrypts the data as it is stored.
     *
     * @param {string} parameters.encryption.keySource The encryption keySource
     * (provider). Possible values (case-insensitive):  Microsoft.Storage,
     * Microsoft.Keyvault. Possible values include: 'Microsoft.Storage',
     * 'Microsoft.Keyvault'
     *
     * @param {object} [parameters.encryption.keyVaultProperties] Properties
     * provided by key vault.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyName] The name
     * of KeyVault key.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyVersion] The
     * version of KeyVault key.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyVaultUri] The
     * Uri of KeyVault.
     *
     * @param {object} [parameters.networkRuleSet] Network rule set
     *
     * @param {string} [parameters.networkRuleSet.bypass] Specifies whether traffic
     * is bypassed for Logging/Metrics/AzureServices. Possible values are any
     * combination of Logging|Metrics|AzureServices (For example, "Logging,
     * Metrics"), or None to bypass none of those traffics. Possible values
     * include: 'None', 'Logging', 'Metrics', 'AzureServices'
     *
     * @param {array} [parameters.networkRuleSet.virtualNetworkRules] Sets the
     * virtual network rules
     *
     * @param {array} [parameters.networkRuleSet.ipRules] Sets the IP ACL rules
     *
     * @param {string} parameters.networkRuleSet.defaultAction Specifies the
     * default action of allow or deny when no other rules match. Possible values
     * include: 'Allow', 'Deny'
     *
     * @param {string} [parameters.accessTier] Required for storage accounts where
     * kind = BlobStorage. The access tier used for billing. Possible values
     * include: 'Hot', 'Cool'
     *
     * @param {boolean} [parameters.enableAzureFilesAadIntegration] Enables Azure
     * Files AAD Integration for SMB if sets to true.
     *
     * @param {boolean} [parameters.enableHttpsTrafficOnly] Allows https traffic
     * only to storage service if sets to true.
     *
     * @param {boolean} [parameters.isHnsEnabled] Account HierarchicalNamespace
     * enabled if sets to true.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageAccount>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: models.StorageAccountCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageAccount>>;

    /**
     * Asynchronously creates a new storage account with the specified parameters.
     * If an account is already created and a subsequent create request is issued
     * with different properties, the account properties will be updated. If an
     * account is already created and a subsequent create or update request is
     * issued with the exact same set of properties, the request will succeed.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The parameters to provide for the created
     * account.
     *
     * @param {object} parameters.sku Required. Gets or sets the sku name.
     *
     * @param {string} parameters.sku.name Gets or sets the sku name. Required for
     * account creation; optional for update. Note that in older versions, sku name
     * was called accountType. Possible values include: 'Standard_LRS',
     * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS',
     * 'Premium_ZRS'
     *
     * @param {array} [parameters.sku.restrictions] The restrictions because of
     * which SKU cannot be used. This is empty if there are no restrictions.
     *
     * @param {string} parameters.kind Required. Indicates the type of storage
     * account. Possible values include: 'Storage', 'StorageV2', 'BlobStorage',
     * 'FileStorage', 'BlockBlobStorage'
     *
     * @param {string} parameters.location Required. Gets or sets the location of
     * the resource. This will be one of the supported and registered Azure Geo
     * Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a
     * resource cannot be changed once it is created, but if an identical geo
     * region is specified on update, the request will succeed.
     *
     * @param {object} [parameters.tags] Gets or sets a list of key value pairs
     * that describe the resource. These tags can be used for viewing and grouping
     * this resource (across resource groups). A maximum of 15 tags can be provided
     * for a resource. Each tag must have a key with a length no greater than 128
     * characters and a value with a length no greater than 256 characters.
     *
     * @param {object} [parameters.identity] The identity of the resource.
     *
     * @param {object} [parameters.customDomain] User domain assigned to the
     * storage account. Name is the CNAME source. Only one custom domain is
     * supported per storage account at this time. To clear the existing custom
     * domain, use an empty string for the custom domain name property.
     *
     * @param {string} parameters.customDomain.name Gets or sets the custom domain
     * name assigned to the storage account. Name is the CNAME source.
     *
     * @param {boolean} [parameters.customDomain.useSubDomain] Indicates whether
     * indirect CName validation is enabled. Default value is false. This should
     * only be set on updates.
     *
     * @param {object} [parameters.encryption] Provides the encryption settings on
     * the account. If left unspecified the account encryption settings will remain
     * the same. The default setting is unencrypted.
     *
     * @param {object} [parameters.encryption.services] List of services which
     * support encryption.
     *
     * @param {object} [parameters.encryption.services.blob] The encryption
     * function of the blob storage service.
     *
     * @param {object} [parameters.encryption.services.file] The encryption
     * function of the file storage service.
     *
     * @param {boolean} [parameters.encryption.services.file.enabled] A boolean
     * indicating whether or not the service encrypts the data as it is stored.
     *
     * @param {string} parameters.encryption.keySource The encryption keySource
     * (provider). Possible values (case-insensitive):  Microsoft.Storage,
     * Microsoft.Keyvault. Possible values include: 'Microsoft.Storage',
     * 'Microsoft.Keyvault'
     *
     * @param {object} [parameters.encryption.keyVaultProperties] Properties
     * provided by key vault.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyName] The name
     * of KeyVault key.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyVersion] The
     * version of KeyVault key.
     *
     * @param {string} [parameters.encryption.keyVaultProperties.keyVaultUri] The
     * Uri of KeyVault.
     *
     * @param {object} [parameters.networkRuleSet] Network rule set
     *
     * @param {string} [parameters.networkRuleSet.bypass] Specifies whether traffic
     * is bypassed for Logging/Metrics/AzureServices. Possible values are any
     * combination of Logging|Metrics|AzureServices (For example, "Logging,
     * Metrics"), or None to bypass none of those traffics. Possible values
     * include: 'None', 'Logging', 'Metrics', 'AzureServices'
     *
     * @param {array} [parameters.networkRuleSet.virtualNetworkRules] Sets the
     * virtual network rules
     *
     * @param {array} [parameters.networkRuleSet.ipRules] Sets the IP ACL rules
     *
     * @param {string} parameters.networkRuleSet.defaultAction Specifies the
     * default action of allow or deny when no other rules match. Possible values
     * include: 'Allow', 'Deny'
     *
     * @param {string} [parameters.accessTier] Required for storage accounts where
     * kind = BlobStorage. The access tier used for billing. Possible values
     * include: 'Hot', 'Cool'
     *
     * @param {boolean} [parameters.enableAzureFilesAadIntegration] Enables Azure
     * Files AAD Integration for SMB if sets to true.
     *
     * @param {boolean} [parameters.enableHttpsTrafficOnly] Allows https traffic
     * only to storage service if sets to true.
     *
     * @param {boolean} [parameters.isHnsEnabled] Account HierarchicalNamespace
     * enabled if sets to true.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageAccount} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageAccount} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageAccount} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreate(resourceGroupName: string, accountName: string, parameters: models.StorageAccountCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageAccount>;
    beginCreate(resourceGroupName: string, accountName: string, parameters: models.StorageAccountCreateParameters, callback: ServiceCallback<models.StorageAccount>): void;
    beginCreate(resourceGroupName: string, accountName: string, parameters: models.StorageAccountCreateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccount>): void;


    /**
     * Failover request can be triggered for a storage account in case of
     * availability issues. The failover occurs from the storage account's primary
     * cluster to secondary cluster for RA-GRS accounts. The secondary cluster will
     * become primary after failover.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginFailoverWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Failover request can be triggered for a storage account in case of
     * availability issues. The failover occurs from the storage account's primary
     * cluster to secondary cluster for RA-GRS accounts. The secondary cluster will
     * become primary after failover.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginFailover(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginFailover(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>): void;
    beginFailover(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * Usages
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the StorageManagementClient.
 */
export interface Usages {


    /**
     * Gets the current usage count and the limit for the resources of the location
     * under the subscription.
     *
     * @param {string} location The location of the Azure Storage resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<UsageListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByLocationWithHttpOperationResponse(location: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.UsageListResult>>;

    /**
     * Gets the current usage count and the limit for the resources of the location
     * under the subscription.
     *
     * @param {string} location The location of the Azure Storage resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {UsageListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {UsageListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link UsageListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByLocation(location: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.UsageListResult>;
    listByLocation(location: string, callback: ServiceCallback<models.UsageListResult>): void;
    listByLocation(location: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.UsageListResult>): void;
}

/**
 * @class
 * BlobServices
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the StorageManagementClient.
 */
export interface BlobServices {


    /**
     * Sets the properties of a storage account’s Blob service, including
     * properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
     * rules.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The properties of a storage account’s Blob
     * service, including properties for Storage Analytics and CORS (Cross-Origin
     * Resource Sharing) rules.
     *
     * @param {object} [parameters.cors] Specifies CORS rules for the Blob service.
     * You can include up to five CorsRule elements in the request. If no CorsRule
     * elements are included in the request body, all CORS rules will be deleted,
     * and CORS will be disabled for the Blob service.
     *
     * @param {array} [parameters.cors.corsRules] The List of CORS rules. You can
     * include up to five CorsRule elements in the request.
     *
     * @param {string} [parameters.defaultServiceVersion] DefaultServiceVersion
     * indicates the default version to use for requests to the Blob service if an
     * incoming request’s version is not specified. Possible values include version
     * 2008-10-27 and all more recent versions.
     *
     * @param {object} [parameters.deleteRetentionPolicy] The blob service
     * properties for soft delete.
     *
     * @param {boolean} [parameters.deleteRetentionPolicy.enabled] Indicates
     * whether DeleteRetentionPolicy is enabled for the Blob service.
     *
     * @param {number} [parameters.deleteRetentionPolicy.days] Indicates the number
     * of days that the deleted blob should be retained. The minimum specified
     * value can be 1 and the maximum value can be 365.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BlobServiceProperties>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    setServicePropertiesWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: models.BlobServiceProperties, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BlobServiceProperties>>;

    /**
     * Sets the properties of a storage account’s Blob service, including
     * properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
     * rules.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The properties of a storage account’s Blob
     * service, including properties for Storage Analytics and CORS (Cross-Origin
     * Resource Sharing) rules.
     *
     * @param {object} [parameters.cors] Specifies CORS rules for the Blob service.
     * You can include up to five CorsRule elements in the request. If no CorsRule
     * elements are included in the request body, all CORS rules will be deleted,
     * and CORS will be disabled for the Blob service.
     *
     * @param {array} [parameters.cors.corsRules] The List of CORS rules. You can
     * include up to five CorsRule elements in the request.
     *
     * @param {string} [parameters.defaultServiceVersion] DefaultServiceVersion
     * indicates the default version to use for requests to the Blob service if an
     * incoming request’s version is not specified. Possible values include version
     * 2008-10-27 and all more recent versions.
     *
     * @param {object} [parameters.deleteRetentionPolicy] The blob service
     * properties for soft delete.
     *
     * @param {boolean} [parameters.deleteRetentionPolicy.enabled] Indicates
     * whether DeleteRetentionPolicy is enabled for the Blob service.
     *
     * @param {number} [parameters.deleteRetentionPolicy.days] Indicates the number
     * of days that the deleted blob should be retained. The minimum specified
     * value can be 1 and the maximum value can be 365.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BlobServiceProperties} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BlobServiceProperties} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BlobServiceProperties} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    setServiceProperties(resourceGroupName: string, accountName: string, parameters: models.BlobServiceProperties, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BlobServiceProperties>;
    setServiceProperties(resourceGroupName: string, accountName: string, parameters: models.BlobServiceProperties, callback: ServiceCallback<models.BlobServiceProperties>): void;
    setServiceProperties(resourceGroupName: string, accountName: string, parameters: models.BlobServiceProperties, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BlobServiceProperties>): void;


    /**
     * Gets the properties of a storage account’s Blob service, including
     * properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
     * rules.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BlobServiceProperties>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getServicePropertiesWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BlobServiceProperties>>;

    /**
     * Gets the properties of a storage account’s Blob service, including
     * properties for Storage Analytics and CORS (Cross-Origin Resource Sharing)
     * rules.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BlobServiceProperties} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BlobServiceProperties} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BlobServiceProperties} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getServiceProperties(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BlobServiceProperties>;
    getServiceProperties(resourceGroupName: string, accountName: string, callback: ServiceCallback<models.BlobServiceProperties>): void;
    getServiceProperties(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BlobServiceProperties>): void;
}

/**
 * @class
 * BlobContainers
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the StorageManagementClient.
 */
export interface BlobContainers {


    /**
     * Lists all containers and does not support a prefix like data plane. Also SRP
     * today does not return continuation token.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ListContainerItems>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ListContainerItems>>;

    /**
     * Lists all containers and does not support a prefix like data plane. Also SRP
     * today does not return continuation token.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ListContainerItems} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ListContainerItems} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ListContainerItems} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ListContainerItems>;
    list(resourceGroupName: string, accountName: string, callback: ServiceCallback<models.ListContainerItems>): void;
    list(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ListContainerItems>): void;


    /**
     * Creates a new container under the specified account as described by request
     * body. The container resource includes metadata and properties for that
     * container. It does not include a list of the blobs contained by the
     * container.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.publicAccess] Specifies whether data in the
     * container may be accessed publicly and the level of access. Possible values
     * include: 'Container', 'Blob', 'None'
     *
     * @param {object} [options.metadata] A name-value pair to associate with the
     * container as metadata.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BlobContainer>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: { publicAccess? : string, metadata? : { [propertyName: string]: string }, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BlobContainer>>;

    /**
     * Creates a new container under the specified account as described by request
     * body. The container resource includes metadata and properties for that
     * container. It does not include a list of the blobs contained by the
     * container.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.publicAccess] Specifies whether data in the
     * container may be accessed publicly and the level of access. Possible values
     * include: 'Container', 'Blob', 'None'
     *
     * @param {object} [options.metadata] A name-value pair to associate with the
     * container as metadata.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BlobContainer} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BlobContainer} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BlobContainer} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroupName: string, accountName: string, containerName: string, options?: { publicAccess? : string, metadata? : { [propertyName: string]: string }, customHeaders? : { [headerName: string]: string; } }): Promise<models.BlobContainer>;
    create(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<models.BlobContainer>): void;
    create(resourceGroupName: string, accountName: string, containerName: string, options: { publicAccess? : string, metadata? : { [propertyName: string]: string }, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BlobContainer>): void;


    /**
     * Updates container properties as specified in request body. Properties not
     * mentioned in the request will be unchanged. Update fails if the specified
     * container doesn't already exist.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.publicAccess] Specifies whether data in the
     * container may be accessed publicly and the level of access. Possible values
     * include: 'Container', 'Blob', 'None'
     *
     * @param {object} [options.metadata] A name-value pair to associate with the
     * container as metadata.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BlobContainer>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: { publicAccess? : string, metadata? : { [propertyName: string]: string }, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BlobContainer>>;

    /**
     * Updates container properties as specified in request body. Properties not
     * mentioned in the request will be unchanged. Update fails if the specified
     * container doesn't already exist.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.publicAccess] Specifies whether data in the
     * container may be accessed publicly and the level of access. Possible values
     * include: 'Container', 'Blob', 'None'
     *
     * @param {object} [options.metadata] A name-value pair to associate with the
     * container as metadata.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BlobContainer} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BlobContainer} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BlobContainer} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, accountName: string, containerName: string, options?: { publicAccess? : string, metadata? : { [propertyName: string]: string }, customHeaders? : { [headerName: string]: string; } }): Promise<models.BlobContainer>;
    update(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<models.BlobContainer>): void;
    update(resourceGroupName: string, accountName: string, containerName: string, options: { publicAccess? : string, metadata? : { [propertyName: string]: string }, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BlobContainer>): void;


    /**
     * Gets properties of a specified container.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BlobContainer>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BlobContainer>>;

    /**
     * Gets properties of a specified container.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BlobContainer} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BlobContainer} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BlobContainer} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, accountName: string, containerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BlobContainer>;
    get(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<models.BlobContainer>): void;
    get(resourceGroupName: string, accountName: string, containerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BlobContainer>): void;


    /**
     * Deletes specified container under its account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes specified container under its account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Sets legal hold tags. Setting the same tag results in an idempotent
     * operation. SetLegalHold follows an append pattern and does not clear out the
     * existing tags that are not specified in the request.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {array} tags Each tag should be 3 to 23 alphanumeric characters and
     * is normalized to lower case at SRP.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<LegalHold>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    setLegalHoldWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.LegalHold>>;

    /**
     * Sets legal hold tags. Setting the same tag results in an idempotent
     * operation. SetLegalHold follows an append pattern and does not clear out the
     * existing tags that are not specified in the request.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {array} tags Each tag should be 3 to 23 alphanumeric characters and
     * is normalized to lower case at SRP.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {LegalHold} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {LegalHold} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link LegalHold} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.LegalHold>;
    setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<models.LegalHold>): void;
    setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LegalHold>): void;


    /**
     * Clears legal hold tags. Clearing the same or non-existent tag results in an
     * idempotent operation. ClearLegalHold clears out only the specified tags in
     * the request.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {array} tags Each tag should be 3 to 23 alphanumeric characters and
     * is normalized to lower case at SRP.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<LegalHold>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    clearLegalHoldWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.LegalHold>>;

    /**
     * Clears legal hold tags. Clearing the same or non-existent tag results in an
     * idempotent operation. ClearLegalHold clears out only the specified tags in
     * the request.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {array} tags Each tag should be 3 to 23 alphanumeric characters and
     * is normalized to lower case at SRP.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {LegalHold} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {LegalHold} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link LegalHold} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.LegalHold>;
    clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<models.LegalHold>): void;
    clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LegalHold>): void;


    /**
     * Creates or updates an unlocked immutability policy. ETag in If-Match is
     * honored if given but not required for this operation.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {number} immutabilityPeriodSinceCreationInDays The immutability
     * period for the blobs in the container since the policy creation, in days.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The entity state (ETag) version of the
     * immutability policy to update. A value of "*" can be used to apply the
     * operation only if the immutability policy already exists. If omitted, this
     * operation will always be applied.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ImmutabilityPolicy>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ImmutabilityPolicy>>;

    /**
     * Creates or updates an unlocked immutability policy. ETag in If-Match is
     * honored if given but not required for this operation.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {number} immutabilityPeriodSinceCreationInDays The immutability
     * period for the blobs in the container since the policy creation, in days.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The entity state (ETag) version of the
     * immutability policy to update. A value of "*" can be used to apply the
     * operation only if the immutability policy already exists. If omitted, this
     * operation will always be applied.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ImmutabilityPolicy} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ImmutabilityPolicy} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ImmutabilityPolicy} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ImmutabilityPolicy>;
    createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<models.ImmutabilityPolicy>): void;
    createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ImmutabilityPolicy>): void;


    /**
     * Gets the existing immutability policy along with the corresponding ETag in
     * response headers and body.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The entity state (ETag) version of the
     * immutability policy to update. A value of "*" can be used to apply the
     * operation only if the immutability policy already exists. If omitted, this
     * operation will always be applied.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ImmutabilityPolicy>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ImmutabilityPolicy>>;

    /**
     * Gets the existing immutability policy along with the corresponding ETag in
     * response headers and body.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The entity state (ETag) version of the
     * immutability policy to update. A value of "*" can be used to apply the
     * operation only if the immutability policy already exists. If omitted, this
     * operation will always be applied.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ImmutabilityPolicy} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ImmutabilityPolicy} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ImmutabilityPolicy} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ImmutabilityPolicy>;
    getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<models.ImmutabilityPolicy>): void;
    getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ImmutabilityPolicy>): void;


    /**
     * Aborts an unlocked immutability policy. The response of delete has
     * immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required
     * for this operation. Deleting a locked immutability policy is not allowed,
     * only way is to delete the container after deleting all blobs inside the
     * container.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {string} ifMatch The entity state (ETag) version of the immutability
     * policy to update. A value of "*" can be used to apply the operation only if
     * the immutability policy already exists. If omitted, this operation will
     * always be applied.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ImmutabilityPolicy>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ImmutabilityPolicy>>;

    /**
     * Aborts an unlocked immutability policy. The response of delete has
     * immutabilityPeriodSinceCreationInDays set to 0. ETag in If-Match is required
     * for this operation. Deleting a locked immutability policy is not allowed,
     * only way is to delete the container after deleting all blobs inside the
     * container.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {string} ifMatch The entity state (ETag) version of the immutability
     * policy to update. A value of "*" can be used to apply the operation only if
     * the immutability policy already exists. If omitted, this operation will
     * always be applied.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ImmutabilityPolicy} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ImmutabilityPolicy} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ImmutabilityPolicy} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ImmutabilityPolicy>;
    deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<models.ImmutabilityPolicy>): void;
    deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ImmutabilityPolicy>): void;


    /**
     * Sets the ImmutabilityPolicy to Locked state. The only action allowed on a
     * Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is
     * required for this operation.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {string} ifMatch The entity state (ETag) version of the immutability
     * policy to update. A value of "*" can be used to apply the operation only if
     * the immutability policy already exists. If omitted, this operation will
     * always be applied.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ImmutabilityPolicy>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    lockImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ImmutabilityPolicy>>;

    /**
     * Sets the ImmutabilityPolicy to Locked state. The only action allowed on a
     * Locked policy is ExtendImmutabilityPolicy action. ETag in If-Match is
     * required for this operation.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {string} ifMatch The entity state (ETag) version of the immutability
     * policy to update. A value of "*" can be used to apply the operation only if
     * the immutability policy already exists. If omitted, this operation will
     * always be applied.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ImmutabilityPolicy} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ImmutabilityPolicy} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ImmutabilityPolicy} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ImmutabilityPolicy>;
    lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<models.ImmutabilityPolicy>): void;
    lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ImmutabilityPolicy>): void;


    /**
     * Extends the immutabilityPeriodSinceCreationInDays of a locked
     * immutabilityPolicy. The only action allowed on a Locked policy will be this
     * action. ETag in If-Match is required for this operation.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {string} ifMatch The entity state (ETag) version of the immutability
     * policy to update. A value of "*" can be used to apply the operation only if
     * the immutability policy already exists. If omitted, this operation will
     * always be applied.
     *
     * @param {number} immutabilityPeriodSinceCreationInDays The immutability
     * period for the blobs in the container since the policy creation, in days.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ImmutabilityPolicy>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    extendImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ImmutabilityPolicy>>;

    /**
     * Extends the immutabilityPeriodSinceCreationInDays of a locked
     * immutabilityPolicy. The only action allowed on a Locked policy will be this
     * action. ETag in If-Match is required for this operation.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} containerName The name of the blob container within the
     * specified storage account. Blob container names must be between 3 and 63
     * characters in length and use numbers, lower-case letters and dash (-) only.
     * Every dash (-) character must be immediately preceded and followed by a
     * letter or number.
     *
     * @param {string} ifMatch The entity state (ETag) version of the immutability
     * policy to update. A value of "*" can be used to apply the operation only if
     * the immutability policy already exists. If omitted, this operation will
     * always be applied.
     *
     * @param {number} immutabilityPeriodSinceCreationInDays The immutability
     * period for the blobs in the container since the policy creation, in days.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ImmutabilityPolicy} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ImmutabilityPolicy} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ImmutabilityPolicy} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ImmutabilityPolicy>;
    extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<models.ImmutabilityPolicy>): void;
    extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ImmutabilityPolicy>): void;
}

/**
 * @class
 * ManagementPolicies
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the StorageManagementClient.
 */
export interface ManagementPolicies {


    /**
     * Gets the data policy rules associated with the specified storage account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageAccountManagementPolicies>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageAccountManagementPolicies>>;

    /**
     * Gets the data policy rules associated with the specified storage account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageAccountManagementPolicies} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageAccountManagementPolicies} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageAccountManagementPolicies} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageAccountManagementPolicies>;
    get(resourceGroupName: string, accountName: string, callback: ServiceCallback<models.StorageAccountManagementPolicies>): void;
    get(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccountManagementPolicies>): void;


    /**
     * Sets the data policy rules associated with the specified storage account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.policy] The Storage Account ManagementPolicies
     * Rules, in JSON format. See more details in:
     * https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageAccountManagementPolicies>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: { policy? : any, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageAccountManagementPolicies>>;

    /**
     * Sets the data policy rules associated with the specified storage account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.policy] The Storage Account ManagementPolicies
     * Rules, in JSON format. See more details in:
     * https://docs.microsoft.com/en-us/azure/storage/common/storage-lifecycle-managment-concepts.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageAccountManagementPolicies} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageAccountManagementPolicies} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageAccountManagementPolicies} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, accountName: string, options?: { policy? : any, customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageAccountManagementPolicies>;
    createOrUpdate(resourceGroupName: string, accountName: string, callback: ServiceCallback<models.StorageAccountManagementPolicies>): void;
    createOrUpdate(resourceGroupName: string, accountName: string, options: { policy? : any, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccountManagementPolicies>): void;


    /**
     * Deletes the data policy rules associated with the specified storage account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes the data policy rules associated with the specified storage account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * StorageAccounts
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the StorageManagementClient.
 */
export interface StorageAccounts {

    /**
     * Checks that the storage account name is valid and is not already in use.
     *
     * @param {string} name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    checkNameAvailability(name: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CheckNameAvailabilityResult>): void;
    checkNameAvailability(name: string, callback: ServiceCallback<models.CheckNameAvailabilityResult>): void;

    /**
     * Asynchronously creates a new storage account with the specified parameters.
     * If an account is already created and a subsequent create request is issued
     * with different properties, the account properties will be updated. If an
     * account is already created and a subsequent create or update request is
     * issued with the exact same set of properties, the request will succeed.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The parameters to provide for the created
     * account.
     *
     * @param {object} parameters.sku Required. Gets or sets the sku name.
     *
     * @param {string} parameters.sku.name Gets or sets the sku name. Required for
     * account creation; optional for update. Note that in older versions, sku name
     * was called accountType. Possible values include: 'Standard_LRS',
     * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'
     *
     * @param {string} parameters.kind Required. Indicates the type of storage
     * account. Possible values include: 'Storage', 'BlobStorage'
     *
     * @param {string} parameters.location Required. Gets or sets the location of
     * the resource. This will be one of the supported and registered Azure Geo
     * Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a
     * resource cannot be changed once it is created, but if an identical geo
     * region is specified on update, the request will succeed.
     *
     * @param {object} [parameters.tags] Gets or sets a list of key value pairs
     * that describe the resource. These tags can be used for viewing and grouping
     * this resource (across resource groups). A maximum of 15 tags can be provided
     * for a resource. Each tag must have a key with a length no greater than 128
     * characters and a value with a length no greater than 256 characters.
     *
     * @param {object} [parameters.customDomain] User domain assigned to the
     * storage account. Name is the CNAME source. Only one custom domain is
     * supported per storage account at this time. To clear the existing custom
     * domain, use an empty string for the custom domain name property.
     *
     * @param {string} parameters.customDomain.name Gets or sets the custom domain
     * name assigned to the storage account. Name is the CNAME source.
     *
     * @param {boolean} [parameters.customDomain.useSubDomain] Indicates whether
     * indirect CName validation is enabled. Default value is false. This should
     * only be set on updates.
     *
     * @param {object} [parameters.encryption] Provides the encryption settings on
     * the account. If left unspecified the account encryption settings will remain
     * the same. The default setting is unencrypted.
     *
     * @param {object} [parameters.encryption.services] List of services which
     * support encryption.
     *
     * @param {object} [parameters.encryption.services.blob] The encryption
     * function of the blob storage service.
     *
     * @param {object} [parameters.encryption.services.file] The encryption
     * function of the file storage service.
     *
     * @param {boolean} [parameters.encryption.services.file.enabled] A boolean
     * indicating whether or not the service encrypts the data as it is stored.
     *
     * @param {string} [parameters.accessTier] Required for storage accounts where
     * kind = BlobStorage. The access tier used for billing. Possible values
     * include: 'Hot', 'Cool'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    create(resourceGroupName: string, accountName: string, parameters: models.StorageAccountCreateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccount>): void;
    create(resourceGroupName: string, accountName: string, parameters: models.StorageAccountCreateParameters, callback: ServiceCallback<models.StorageAccount>): void;

    /**
     * Deletes a storage account in Microsoft Azure.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>): void;

    /**
     * Returns the properties for the specified storage account including but not
     * limited to name, SKU name, location, and account status. The ListKeys
     * operation should be used to retrieve storage keys.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    getProperties(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccount>): void;
    getProperties(resourceGroupName: string, accountName: string, callback: ServiceCallback<models.StorageAccount>): void;

    /**
     * The update operation can be used to update the SKU, encryption, access tier,
     * or tags for a storage account. It can also be used to map the account to a
     * custom domain. Only one custom domain is supported per storage account; the
     * replacement/change of custom domain is not supported. In order to replace an
     * old custom domain, the old value must be cleared/unregistered before a new
     * value can be set. The update of multiple properties is supported. This call
     * does not change the storage keys for the account. If you want to change the
     * storage account keys, use the regenerate keys operation. The location and
     * name of the storage account cannot be changed after creation.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The parameters to provide for the updated
     * account.
     *
     * @param {object} [parameters.sku] Gets or sets the SKU name. Note that the
     * SKU name cannot be updated to Standard_ZRS or Premium_LRS, nor can accounts
     * of those sku names be updated to any other value.
     *
     * @param {string} parameters.sku.name Gets or sets the sku name. Required for
     * account creation; optional for update. Note that in older versions, sku name
     * was called accountType. Possible values include: 'Standard_LRS',
     * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'
     *
     * @param {object} [parameters.tags] Gets or sets a list of key value pairs
     * that describe the resource. These tags can be used in viewing and grouping
     * this resource (across resource groups). A maximum of 15 tags can be provided
     * for a resource. Each tag must have a key no greater in length than 128
     * characters and a value no greater in length than 256 characters.
     *
     * @param {object} [parameters.customDomain] Custom domain assigned to the
     * storage account by the user. Name is the CNAME source. Only one custom
     * domain is supported per storage account at this time. To clear the existing
     * custom domain, use an empty string for the custom domain name property.
     *
     * @param {string} parameters.customDomain.name Gets or sets the custom domain
     * name assigned to the storage account. Name is the CNAME source.
     *
     * @param {boolean} [parameters.customDomain.useSubDomain] Indicates whether
     * indirect CName validation is enabled. Default value is false. This should
     * only be set on updates.
     *
     * @param {object} [parameters.encryption] Provides the encryption settings on
     * the account. The default setting is unencrypted.
     *
     * @param {object} [parameters.encryption.services] List of services which
     * support encryption.
     *
     * @param {object} [parameters.encryption.services.blob] The encryption
     * function of the blob storage service.
     *
     * @param {object} [parameters.encryption.services.file] The encryption
     * function of the file storage service.
     *
     * @param {boolean} [parameters.encryption.services.file.enabled] A boolean
     * indicating whether or not the service encrypts the data as it is stored.
     *
     * @param {string} [parameters.accessTier] Required for storage accounts where
     * kind = BlobStorage. The access tier used for billing. Possible values
     * include: 'Hot', 'Cool'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    update(resourceGroupName: string, accountName: string, parameters: models.StorageAccountUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccount>): void;
    update(resourceGroupName: string, accountName: string, parameters: models.StorageAccountUpdateParameters, callback: ServiceCallback<models.StorageAccount>): void;

    /**
     * Lists all the storage accounts available under the subscription. Note that
     * storage keys are not returned; use the ListKeys operation for this.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccountListResult>): void;
    list(callback: ServiceCallback<models.StorageAccountListResult>): void;

    /**
     * Lists all the storage accounts available under the given resource group.
     * Note that storage keys are not returned; use the ListKeys operation for
     * this.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccountListResult>): void;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.StorageAccountListResult>): void;

    /**
     * Lists the access keys for the specified storage account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listKeys(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccountListKeysResult>): void;
    listKeys(resourceGroupName: string, accountName: string, callback: ServiceCallback<models.StorageAccountListKeysResult>): void;

    /**
     * Regenerates one of the access keys for the specified storage account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {string} keyName
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    regenerateKey(resourceGroupName: string, accountName: string, keyName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccountListKeysResult>): void;
    regenerateKey(resourceGroupName: string, accountName: string, keyName: string, callback: ServiceCallback<models.StorageAccountListKeysResult>): void;

    /**
     * List SAS credentials of a storage account.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The parameters to provide to list SAS credentials
     * for the storage account.
     *
     * @param {string} parameters.services The signed services accessible with the
     * account SAS. Possible values include: Blob (b), Queue (q), Table (t), File
     * (f). Possible values include: 'b', 'q', 't', 'f'
     *
     * @param {string} parameters.resourceTypes The signed resource types that are
     * accessible with the account SAS. Service (s): Access to service-level APIs;
     * Container (c): Access to container-level APIs; Object (o): Access to
     * object-level APIs for blobs, queue messages, table entities, and files.
     * Possible values include: 's', 'c', 'o'
     *
     * @param {string} parameters.permissions The signed permissions for the
     * account SAS. Possible values include: Read (r), Write (w), Delete (d), List
     * (l), Add (a), Create (c), Update (u) and Process (p). Possible values
     * include: 'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'
     *
     * @param {string} [parameters.iPAddressOrRange] An IP address or a range of IP
     * addresses from which to accept requests.
     *
     * @param {string} [parameters.protocols] The protocol permitted for a request
     * made with the account SAS. Possible values include: 'https,http', 'https'
     *
     * @param {date} [parameters.sharedAccessStartTime] The time at which the SAS
     * becomes valid.
     *
     * @param {date} parameters.sharedAccessExpiryTime The time at which the shared
     * access signature becomes invalid.
     *
     * @param {string} [parameters.keyToSign] The key to sign the account SAS token
     * with.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listAccountSAS(resourceGroupName: string, accountName: string, parameters: models.AccountSasParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ListAccountSasResponse>): void;
    listAccountSAS(resourceGroupName: string, accountName: string, parameters: models.AccountSasParameters, callback: ServiceCallback<models.ListAccountSasResponse>): void;

    /**
     * List service SAS credentials of a specific resource.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The parameters to provide to list service SAS
     * credentials.
     *
     * @param {string} parameters.canonicalizedResource The canonical path to the
     * signed resource.
     *
     * @param {string} parameters.resource The signed services accessible with the
     * service SAS. Possible values include: Blob (b), Container (c), File (f),
     * Share (s). Possible values include: 'b', 'c', 'f', 's'
     *
     * @param {string} [parameters.permissions] The signed permissions for the
     * service SAS. Possible values include: Read (r), Write (w), Delete (d), List
     * (l), Add (a), Create (c), Update (u) and Process (p). Possible values
     * include: 'r', 'd', 'w', 'l', 'a', 'c', 'u', 'p'
     *
     * @param {string} [parameters.iPAddressOrRange] An IP address or a range of IP
     * addresses from which to accept requests.
     *
     * @param {string} [parameters.protocols] The protocol permitted for a request
     * made with the account SAS. Possible values include: 'https,http', 'https'
     *
     * @param {date} [parameters.sharedAccessStartTime] The time at which the SAS
     * becomes valid.
     *
     * @param {date} [parameters.sharedAccessExpiryTime] The time at which the
     * shared access signature becomes invalid.
     *
     * @param {string} [parameters.identifier] A unique value up to 64 characters
     * in length that correlates to an access policy specified for the container,
     * queue, or table.
     *
     * @param {string} [parameters.partitionKeyStart] The start of partition key.
     *
     * @param {string} [parameters.partitionKeyEnd] The end of partition key.
     *
     * @param {string} [parameters.rowKeyStart] The start of row key.
     *
     * @param {string} [parameters.rowKeyEnd] The end of row key.
     *
     * @param {string} [parameters.keyToSign] The key to sign the account SAS token
     * with.
     *
     * @param {string} [parameters.cacheControl] The response header override for
     * cache control.
     *
     * @param {string} [parameters.contentDisposition] The response header override
     * for content disposition.
     *
     * @param {string} [parameters.contentEncoding] The response header override
     * for content encoding.
     *
     * @param {string} [parameters.contentLanguage] The response header override
     * for content language.
     *
     * @param {string} [parameters.contentType] The response header override for
     * content type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listServiceSAS(resourceGroupName: string, accountName: string, parameters: models.ServiceSasParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ListServiceSasResponse>): void;
    listServiceSAS(resourceGroupName: string, accountName: string, parameters: models.ServiceSasParameters, callback: ServiceCallback<models.ListServiceSasResponse>): void;

    /**
     * Asynchronously creates a new storage account with the specified parameters.
     * If an account is already created and a subsequent create request is issued
     * with different properties, the account properties will be updated. If an
     * account is already created and a subsequent create or update request is
     * issued with the exact same set of properties, the request will succeed.
     *
     * @param {string} resourceGroupName The name of the resource group within the
     * user's subscription. The name is case insensitive.
     *
     * @param {string} accountName The name of the storage account within the
     * specified resource group. Storage account names must be between 3 and 24
     * characters in length and use numbers and lower-case letters only.
     *
     * @param {object} parameters The parameters to provide for the created
     * account.
     *
     * @param {object} parameters.sku Required. Gets or sets the sku name.
     *
     * @param {string} parameters.sku.name Gets or sets the sku name. Required for
     * account creation; optional for update. Note that in older versions, sku name
     * was called accountType. Possible values include: 'Standard_LRS',
     * 'Standard_GRS', 'Standard_RAGRS', 'Standard_ZRS', 'Premium_LRS'
     *
     * @param {string} parameters.kind Required. Indicates the type of storage
     * account. Possible values include: 'Storage', 'BlobStorage'
     *
     * @param {string} parameters.location Required. Gets or sets the location of
     * the resource. This will be one of the supported and registered Azure Geo
     * Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a
     * resource cannot be changed once it is created, but if an identical geo
     * region is specified on update, the request will succeed.
     *
     * @param {object} [parameters.tags] Gets or sets a list of key value pairs
     * that describe the resource. These tags can be used for viewing and grouping
     * this resource (across resource groups). A maximum of 15 tags can be provided
     * for a resource. Each tag must have a key with a length no greater than 128
     * characters and a value with a length no greater than 256 characters.
     *
     * @param {object} [parameters.customDomain] User domain assigned to the
     * storage account. Name is the CNAME source. Only one custom domain is
     * supported per storage account at this time. To clear the existing custom
     * domain, use an empty string for the custom domain name property.
     *
     * @param {string} parameters.customDomain.name Gets or sets the custom domain
     * name assigned to the storage account. Name is the CNAME source.
     *
     * @param {boolean} [parameters.customDomain.useSubDomain] Indicates whether
     * indirect CName validation is enabled. Default value is false. This should
     * only be set on updates.
     *
     * @param {object} [parameters.encryption] Provides the encryption settings on
     * the account. If left unspecified the account encryption settings will remain
     * the same. The default setting is unencrypted.
     *
     * @param {object} [parameters.encryption.services] List of services which
     * support encryption.
     *
     * @param {object} [parameters.encryption.services.blob] The encryption
     * function of the blob storage service.
     *
     * @param {object} [parameters.encryption.services.file] The encryption
     * function of the file storage service.
     *
     * @param {boolean} [parameters.encryption.services.file.enabled] A boolean
     * indicating whether or not the service encrypts the data as it is stored.
     *
     * @param {string} [parameters.accessTier] Required for storage accounts where
     * kind = BlobStorage. The access tier used for billing. Possible values
     * include: 'Hot', 'Cool'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginCreate(resourceGroupName: string, accountName: string, parameters: models.StorageAccountCreateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageAccount>): void;
    beginCreate(resourceGroupName: string, accountName: string, parameters: models.StorageAccountCreateParameters, callback: ServiceCallback<models.StorageAccount>): void;
}

/**
 * @class
 * UsageOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the StorageManagementClient.
 */
export interface UsageOperations {

    /**
     * Gets the current usage count and the limit for the resources under the
     * subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.UsageListResult>): void;
    list(callback: ServiceCallback<models.UsageListResult>): void;
}

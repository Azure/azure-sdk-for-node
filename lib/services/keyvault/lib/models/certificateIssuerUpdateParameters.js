/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The certificate issuer update parameters.
 *
 */
class CertificateIssuerUpdateParameters {
  /**
   * Create a CertificateIssuerUpdateParameters.
   * @property {string} [provider] The issuer provider.
   * @property {object} [credentials] The credentials to be used for the
   * issuer.
   * @property {string} [credentials.accountId] The user name/account
   * name/account id.
   * @property {string} [credentials.password] The password/secret/account key.
   * @property {object} [organizationDetails] Details of the organization as
   * provided to the issuer.
   * @property {string} [organizationDetails.id] Id of the organization.
   * @property {array} [organizationDetails.adminDetails] Details of the
   * organization administrator.
   * @property {object} [attributes] Attributes of the issuer object.
   * @property {boolean} [attributes.enabled] Determines whether the issuer is
   * enabled.
   * @property {date} [attributes.created] Creation time in UTC.
   * @property {date} [attributes.updated] Last updated time in UTC.
   */
  constructor() {
  }

  /**
   * Defines the metadata of CertificateIssuerUpdateParameters
   *
   * @returns {object} metadata of CertificateIssuerUpdateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'CertificateIssuerUpdateParameters',
      type: {
        name: 'Composite',
        className: 'CertificateIssuerUpdateParameters',
        modelProperties: {
          provider: {
            required: false,
            serializedName: 'provider',
            type: {
              name: 'String'
            }
          },
          credentials: {
            required: false,
            serializedName: 'credentials',
            type: {
              name: 'Composite',
              className: 'IssuerCredentials'
            }
          },
          organizationDetails: {
            required: false,
            serializedName: 'org_details',
            type: {
              name: 'Composite',
              className: 'OrganizationDetails'
            }
          },
          attributes: {
            required: false,
            serializedName: 'attributes',
            type: {
              name: 'Composite',
              className: 'IssuerAttributes'
            }
          }
        }
      }
    };
  }
}

module.exports = CertificateIssuerUpdateParameters;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The storage account create parameters.
 *
 */
class StorageAccountCreateParameters {
  /**
   * Create a StorageAccountCreateParameters.
   * @member {string} resourceId Storage account resource id.
   * @member {string} activeKeyName Current active storage account key name.
   * @member {boolean} autoRegenerateKey whether keyvault should manage the
   * storage account for the user.
   * @member {string} [regenerationPeriod] The key regeneration time duration
   * specified in ISO-8601 format.
   * @member {object} [storageAccountAttributes] The attributes of the storage
   * account.
   * @member {boolean} [storageAccountAttributes.enabled] the enabled state of
   * the object.
   * @member {date} [storageAccountAttributes.created] Creation time in UTC.
   * @member {date} [storageAccountAttributes.updated] Last updated time in
   * UTC.
   * @member {string} [storageAccountAttributes.recoveryLevel] Reflects the
   * deletion recovery level currently in effect for storage accounts in the
   * current vault. If it contains 'Purgeable' the storage account can be
   * permanently deleted by a privileged user; otherwise, only the system can
   * purge the storage account, at the end of the retention interval. Possible
   * values include: 'Purgeable', 'Recoverable+Purgeable', 'Recoverable',
   * 'Recoverable+ProtectedSubscription'
   * @member {object} [tags] Application specific metadata in the form of
   * key-value pairs.
   */
  constructor() {
  }

  /**
   * Defines the metadata of StorageAccountCreateParameters
   *
   * @returns {object} metadata of StorageAccountCreateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'StorageAccountCreateParameters',
      type: {
        name: 'Composite',
        className: 'StorageAccountCreateParameters',
        modelProperties: {
          resourceId: {
            required: true,
            serializedName: 'resourceId',
            type: {
              name: 'String'
            }
          },
          activeKeyName: {
            required: true,
            serializedName: 'activeKeyName',
            type: {
              name: 'String'
            }
          },
          autoRegenerateKey: {
            required: true,
            serializedName: 'autoRegenerateKey',
            type: {
              name: 'Boolean'
            }
          },
          regenerationPeriod: {
            required: false,
            serializedName: 'regenerationPeriod',
            type: {
              name: 'String'
            }
          },
          storageAccountAttributes: {
            required: false,
            serializedName: 'attributes',
            type: {
              name: 'Composite',
              className: 'StorageAccountAttributes'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = StorageAccountCreateParameters;

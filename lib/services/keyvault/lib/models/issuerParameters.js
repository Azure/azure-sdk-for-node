/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Parameters for the issuer of the X509 component of a certificate.
 *
 */
class IssuerParameters {
  /**
   * Create a IssuerParameters.
   * @property {string} [name] Name of the referenced issuer object or reserved
   * names; for example, 'Self' or 'Unknown'.
   * @property {string} [certificateType] Type of certificate to be requested
   * from the issuer provider.
   * @property {boolean} [certificateTransparency] Indicates if the
   * certificates generated under this policy should be published to
   * certificate transparency logs.
   * @property {string} [validationMethod] The method the issuer will use to
   * validate certificate creation and renewal requests. Possible values
   * include: 'email', 'dns-txt-token', 'http-token'
   * @property {array} [validationEmails] A list of email addresses where
   * validation emails should be sent for specific DNS names.
   */
  constructor() {
  }

  /**
   * Defines the metadata of IssuerParameters
   *
   * @returns {object} metadata of IssuerParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IssuerParameters',
      type: {
        name: 'Composite',
        className: 'IssuerParameters',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          certificateType: {
            required: false,
            serializedName: 'cty',
            type: {
              name: 'String'
            }
          },
          certificateTransparency: {
            required: false,
            serializedName: 'cert_transparency',
            type: {
              name: 'Boolean'
            }
          },
          validationMethod: {
            required: false,
            serializedName: 'validation_method',
            type: {
              name: 'String'
            }
          },
          validationEmails: {
            required: false,
            serializedName: 'validation_emails',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ValidationEmailElementType',
                  type: {
                    name: 'Composite',
                    className: 'ValidationEmail'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = IssuerParameters;

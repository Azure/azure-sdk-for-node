/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * A DeletedKeyBundle consisting of a WebKey plus its Attributes and deletion
 * info
 *
 * @extends models['KeyBundle']
 */
class DeletedKeyBundle extends models['KeyBundle'] {
  /**
   * Create a DeletedKeyBundle.
   * @member {string} [recoveryId] The url of the recovery object, used to
   * identify and recover the deleted key.
   * @member {date} [scheduledPurgeDate] The time when the key is scheduled to
   * be purged, in UTC
   * @member {date} [deletedDate] The time when the key was deleted, in UTC
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of DeletedKeyBundle
   *
   * @returns {object} metadata of DeletedKeyBundle
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DeletedKeyBundle',
      type: {
        name: 'Composite',
        className: 'DeletedKeyBundle',
        modelProperties: {
          key: {
            required: false,
            serializedName: 'key',
            type: {
              name: 'Composite',
              className: 'JsonWebKey'
            }
          },
          attributes: {
            required: false,
            serializedName: 'attributes',
            type: {
              name: 'Composite',
              className: 'KeyAttributes'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          managed: {
            required: false,
            readOnly: true,
            serializedName: 'managed',
            type: {
              name: 'Boolean'
            }
          },
          recoveryId: {
            required: false,
            serializedName: 'recoveryId',
            type: {
              name: 'String'
            }
          },
          scheduledPurgeDate: {
            required: false,
            readOnly: true,
            serializedName: 'scheduledPurgeDate',
            type: {
              name: 'UnixTime'
            }
          },
          deletedDate: {
            required: false,
            readOnly: true,
            serializedName: 'deletedDate',
            type: {
              name: 'UnixTime'
            }
          }
        }
      }
    };
  }
}

module.exports = DeletedKeyBundle;

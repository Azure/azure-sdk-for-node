/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SignalRManagementClient.
 */
export interface Operations {


    /**
     * Lists all of the available REST API operations of the
     * Microsoft.SignalRService provider.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationList>>;

    /**
     * Lists all of the available REST API operations of the
     * Microsoft.SignalRService provider.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationList>;
    list(callback: ServiceCallback<models.OperationList>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationList>): void;


    /**
     * Lists all of the available REST API operations of the
     * Microsoft.SignalRService provider.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationList>>;

    /**
     * Lists all of the available REST API operations of the
     * Microsoft.SignalRService provider.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.OperationList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationList>): void;
}

/**
 * @class
 * SignalR
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SignalRManagementClient.
 */
export interface SignalR {


    /**
     * Checks that the SignalR name is valid and is not already in use.
     *
     * @param {string} location the region
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.parameters] Parameters supplied to the operation.
     *
     * @param {string} options.parameters.type The resource type. Should be always
     * "Microsoft.SignalRService/SignalR".
     *
     * @param {string} options.parameters.name The SignalR service name to
     * validate. e.g."my-signalR-name-here"
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NameAvailability>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    checkNameAvailabilityWithHttpOperationResponse(location: string, options?: { parameters? : models.NameAvailabilityParameters, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NameAvailability>>;

    /**
     * Checks that the SignalR name is valid and is not already in use.
     *
     * @param {string} location the region
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.parameters] Parameters supplied to the operation.
     *
     * @param {string} options.parameters.type The resource type. Should be always
     * "Microsoft.SignalRService/SignalR".
     *
     * @param {string} options.parameters.name The SignalR service name to
     * validate. e.g."my-signalR-name-here"
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NameAvailability} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NameAvailability} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NameAvailability} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    checkNameAvailability(location: string, options?: { parameters? : models.NameAvailabilityParameters, customHeaders? : { [headerName: string]: string; } }): Promise<models.NameAvailability>;
    checkNameAvailability(location: string, callback: ServiceCallback<models.NameAvailability>): void;
    checkNameAvailability(location: string, options: { parameters? : models.NameAvailabilityParameters, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NameAvailability>): void;


    /**
     * Handles requests to list all resources in a subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SignalRResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySubscriptionWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SignalRResourceList>>;

    /**
     * Handles requests to list all resources in a subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SignalRResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SignalRResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SignalRResourceList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySubscription(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SignalRResourceList>;
    listBySubscription(callback: ServiceCallback<models.SignalRResourceList>): void;
    listBySubscription(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SignalRResourceList>): void;


    /**
     * Handles requests to list all resources in a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SignalRResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SignalRResourceList>>;

    /**
     * Handles requests to list all resources in a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SignalRResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SignalRResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SignalRResourceList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SignalRResourceList>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.SignalRResourceList>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SignalRResourceList>): void;


    /**
     * Get the access keys of the SignalR resource.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SignalRKeys>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listKeysWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SignalRKeys>>;

    /**
     * Get the access keys of the SignalR resource.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SignalRKeys} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SignalRKeys} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SignalRKeys} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listKeys(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SignalRKeys>;
    listKeys(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.SignalRKeys>): void;
    listKeys(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SignalRKeys>): void;


    /**
     * Regenerate SignalR service access key. PrimaryKey and SecondaryKey cannot be
     * regenerated at the same time.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.parameters] Parameter that describes the Regenerate
     * Key Operation.
     *
     * @param {string} [options.parameters.keyType] The keyType to regenerate. Must
     * be either 'primary' or 'secondary'(case-insensitive). Possible values
     * include: 'Primary', 'Secondary'
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SignalRKeys>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    regenerateKeyWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { parameters? : models.RegenerateKeyParameters, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SignalRKeys>>;

    /**
     * Regenerate SignalR service access key. PrimaryKey and SecondaryKey cannot be
     * regenerated at the same time.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.parameters] Parameter that describes the Regenerate
     * Key Operation.
     *
     * @param {string} [options.parameters.keyType] The keyType to regenerate. Must
     * be either 'primary' or 'secondary'(case-insensitive). Possible values
     * include: 'Primary', 'Secondary'
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SignalRKeys} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SignalRKeys} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SignalRKeys} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    regenerateKey(resourceGroupName: string, resourceName: string, options?: { parameters? : models.RegenerateKeyParameters, customHeaders? : { [headerName: string]: string; } }): Promise<models.SignalRKeys>;
    regenerateKey(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.SignalRKeys>): void;
    regenerateKey(resourceGroupName: string, resourceName: string, options: { parameters? : models.RegenerateKeyParameters, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SignalRKeys>): void;


    /**
     * Get the SignalR service and its properties.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SignalRResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SignalRResource>>;

    /**
     * Get the SignalR service and its properties.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SignalRResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SignalRResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SignalRResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SignalRResource>;
    get(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.SignalRResource>): void;
    get(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SignalRResource>): void;


    /**
     * Create a new SignalR service and update an exiting SignalR service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.parameters] Parameters for the create or update
     * operation
     *
     * @param {string} options.parameters.location Azure GEO region: e.g. West US |
     * East US | North Central US | South Central US | West Europe | North Europe |
     * East Asia | Southeast Asia | etc.
     * The geo region of a resource never changes after it is created.
     *
     * @param {object} [options.parameters.tags] A list of key value pairs that
     * describe the resource.
     *
     * @param {object} [options.parameters.sku] The billing information of the
     * resource.(e.g. basic vs. standard)
     *
     * @param {string} options.parameters.sku.name The name of the SKU. This is
     * typically a letter + number code, such as A0 or P3.  Required (if sku is
     * specified)
     *
     * @param {string} [options.parameters.sku.tier] Optional tier of this
     * particular SKU. `Basic` is deprecated, use `Standard` instead. Possible
     * values include: 'Free', 'Basic', 'Standard', 'Premium'
     *
     * @param {string} [options.parameters.sku.size] Optional, string. When the
     * name field is the combination of tier and some other value, this would be
     * the standalone code.
     *
     * @param {string} [options.parameters.sku.family] Optional, string. If the
     * service has different generations of hardware, for the same SKU, then that
     * can be captured here.
     *
     * @param {number} [options.parameters.sku.capacity] Optional, integer. If the
     * SKU supports scale out/in then the capacity integer should be included. If
     * scale out/in is not
     * possible for the resource this may be omitted.
     *
     * @param {object} [options.parameters.properties] Settings used to provision
     * or configure the resource
     *
     * @param {string} [options.parameters.properties.hostNamePrefix] Prefix for
     * the hostName of the SignalR service. Retained for future use.
     * The hostname will be of format: &lt;hostNamePrefix&gt;.service.signalr.net.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SignalRResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { parameters? : models.SignalRCreateParameters, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SignalRResource>>;

    /**
     * Create a new SignalR service and update an exiting SignalR service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.parameters] Parameters for the create or update
     * operation
     *
     * @param {string} options.parameters.location Azure GEO region: e.g. West US |
     * East US | North Central US | South Central US | West Europe | North Europe |
     * East Asia | Southeast Asia | etc.
     * The geo region of a resource never changes after it is created.
     *
     * @param {object} [options.parameters.tags] A list of key value pairs that
     * describe the resource.
     *
     * @param {object} [options.parameters.sku] The billing information of the
     * resource.(e.g. basic vs. standard)
     *
     * @param {string} options.parameters.sku.name The name of the SKU. This is
     * typically a letter + number code, such as A0 or P3.  Required (if sku is
     * specified)
     *
     * @param {string} [options.parameters.sku.tier] Optional tier of this
     * particular SKU. `Basic` is deprecated, use `Standard` instead. Possible
     * values include: 'Free', 'Basic', 'Standard', 'Premium'
     *
     * @param {string} [options.parameters.sku.size] Optional, string. When the
     * name field is the combination of tier and some other value, this would be
     * the standalone code.
     *
     * @param {string} [options.parameters.sku.family] Optional, string. If the
     * service has different generations of hardware, for the same SKU, then that
     * can be captured here.
     *
     * @param {number} [options.parameters.sku.capacity] Optional, integer. If the
     * SKU supports scale out/in then the capacity integer should be included. If
     * scale out/in is not
     * possible for the resource this may be omitted.
     *
     * @param {object} [options.parameters.properties] Settings used to provision
     * or configure the resource
     *
     * @param {string} [options.parameters.properties.hostNamePrefix] Prefix for
     * the hostName of the SignalR service. Retained for future use.
     * The hostname will be of format: &lt;hostNamePrefix&gt;.service.signalr.net.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SignalRResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SignalRResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SignalRResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, options?: { parameters? : models.SignalRCreateParameters, customHeaders? : { [headerName: string]: string; } }): Promise<models.SignalRResource>;
    createOrUpdate(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.SignalRResource>): void;
    createOrUpdate(resourceGroupName: string, resourceName: string, options: { parameters? : models.SignalRCreateParameters, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SignalRResource>): void;


    /**
     * Operation to delete a SignalR service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Operation to delete a SignalR service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, resourceName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Operation to update an exiting SignalR service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.parameters] Parameters for the update operation
     *
     * @param {object} [options.parameters.tags] A list of key value pairs that
     * describe the resource.
     *
     * @param {object} [options.parameters.sku] The billing information of the
     * resource.(e.g. basic vs. standard)
     *
     * @param {string} options.parameters.sku.name The name of the SKU. This is
     * typically a letter + number code, such as A0 or P3.  Required (if sku is
     * specified)
     *
     * @param {string} [options.parameters.sku.tier] Optional tier of this
     * particular SKU. `Basic` is deprecated, use `Standard` instead. Possible
     * values include: 'Free', 'Basic', 'Standard', 'Premium'
     *
     * @param {string} [options.parameters.sku.size] Optional, string. When the
     * name field is the combination of tier and some other value, this would be
     * the standalone code.
     *
     * @param {string} [options.parameters.sku.family] Optional, string. If the
     * service has different generations of hardware, for the same SKU, then that
     * can be captured here.
     *
     * @param {number} [options.parameters.sku.capacity] Optional, integer. If the
     * SKU supports scale out/in then the capacity integer should be included. If
     * scale out/in is not
     * possible for the resource this may be omitted.
     *
     * @param {object} [options.parameters.properties] Settings used to provision
     * or configure the resource
     *
     * @param {string} [options.parameters.properties.hostNamePrefix] Prefix for
     * the hostName of the SignalR service. Retained for future use.
     * The hostname will be of format: &lt;hostNamePrefix&gt;.service.signalr.net.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SignalRResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { parameters? : models.SignalRUpdateParameters, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SignalRResource>>;

    /**
     * Operation to update an exiting SignalR service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.parameters] Parameters for the update operation
     *
     * @param {object} [options.parameters.tags] A list of key value pairs that
     * describe the resource.
     *
     * @param {object} [options.parameters.sku] The billing information of the
     * resource.(e.g. basic vs. standard)
     *
     * @param {string} options.parameters.sku.name The name of the SKU. This is
     * typically a letter + number code, such as A0 or P3.  Required (if sku is
     * specified)
     *
     * @param {string} [options.parameters.sku.tier] Optional tier of this
     * particular SKU. `Basic` is deprecated, use `Standard` instead. Possible
     * values include: 'Free', 'Basic', 'Standard', 'Premium'
     *
     * @param {string} [options.parameters.sku.size] Optional, string. When the
     * name field is the combination of tier and some other value, this would be
     * the standalone code.
     *
     * @param {string} [options.parameters.sku.family] Optional, string. If the
     * service has different generations of hardware, for the same SKU, then that
     * can be captured here.
     *
     * @param {number} [options.parameters.sku.capacity] Optional, integer. If the
     * SKU supports scale out/in then the capacity integer should be included. If
     * scale out/in is not
     * possible for the resource this may be omitted.
     *
     * @param {object} [options.parameters.properties] Settings used to provision
     * or configure the resource
     *
     * @param {string} [options.parameters.properties.hostNamePrefix] Prefix for
     * the hostName of the SignalR service. Retained for future use.
     * The hostname will be of format: &lt;hostNamePrefix&gt;.service.signalr.net.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SignalRResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SignalRResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SignalRResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, resourceName: string, options?: { parameters? : models.SignalRUpdateParameters, customHeaders? : { [headerName: string]: string; } }): Promise<models.SignalRResource>;
    update(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.SignalRResource>): void;
    update(resourceGroupName: string, resourceName: string, options: { parameters? : models.SignalRUpdateParameters, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SignalRResource>): void;


    /**
     * Operation to restart a SignalR service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    restartWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Operation to restart a SignalR service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    restart(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    restart(resourceGroupName: string, resourceName: string, callback: ServiceCallback<void>): void;
    restart(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Regenerate SignalR service access key. PrimaryKey and SecondaryKey cannot be
     * regenerated at the same time.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.parameters] Parameter that describes the Regenerate
     * Key Operation.
     *
     * @param {string} [options.parameters.keyType] The keyType to regenerate. Must
     * be either 'primary' or 'secondary'(case-insensitive). Possible values
     * include: 'Primary', 'Secondary'
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SignalRKeys>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginRegenerateKeyWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { parameters? : models.RegenerateKeyParameters, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SignalRKeys>>;

    /**
     * Regenerate SignalR service access key. PrimaryKey and SecondaryKey cannot be
     * regenerated at the same time.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.parameters] Parameter that describes the Regenerate
     * Key Operation.
     *
     * @param {string} [options.parameters.keyType] The keyType to regenerate. Must
     * be either 'primary' or 'secondary'(case-insensitive). Possible values
     * include: 'Primary', 'Secondary'
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SignalRKeys} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SignalRKeys} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SignalRKeys} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginRegenerateKey(resourceGroupName: string, resourceName: string, options?: { parameters? : models.RegenerateKeyParameters, customHeaders? : { [headerName: string]: string; } }): Promise<models.SignalRKeys>;
    beginRegenerateKey(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.SignalRKeys>): void;
    beginRegenerateKey(resourceGroupName: string, resourceName: string, options: { parameters? : models.RegenerateKeyParameters, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SignalRKeys>): void;


    /**
     * Create a new SignalR service and update an exiting SignalR service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.parameters] Parameters for the create or update
     * operation
     *
     * @param {string} options.parameters.location Azure GEO region: e.g. West US |
     * East US | North Central US | South Central US | West Europe | North Europe |
     * East Asia | Southeast Asia | etc.
     * The geo region of a resource never changes after it is created.
     *
     * @param {object} [options.parameters.tags] A list of key value pairs that
     * describe the resource.
     *
     * @param {object} [options.parameters.sku] The billing information of the
     * resource.(e.g. basic vs. standard)
     *
     * @param {string} options.parameters.sku.name The name of the SKU. This is
     * typically a letter + number code, such as A0 or P3.  Required (if sku is
     * specified)
     *
     * @param {string} [options.parameters.sku.tier] Optional tier of this
     * particular SKU. `Basic` is deprecated, use `Standard` instead. Possible
     * values include: 'Free', 'Basic', 'Standard', 'Premium'
     *
     * @param {string} [options.parameters.sku.size] Optional, string. When the
     * name field is the combination of tier and some other value, this would be
     * the standalone code.
     *
     * @param {string} [options.parameters.sku.family] Optional, string. If the
     * service has different generations of hardware, for the same SKU, then that
     * can be captured here.
     *
     * @param {number} [options.parameters.sku.capacity] Optional, integer. If the
     * SKU supports scale out/in then the capacity integer should be included. If
     * scale out/in is not
     * possible for the resource this may be omitted.
     *
     * @param {object} [options.parameters.properties] Settings used to provision
     * or configure the resource
     *
     * @param {string} [options.parameters.properties.hostNamePrefix] Prefix for
     * the hostName of the SignalR service. Retained for future use.
     * The hostname will be of format: &lt;hostNamePrefix&gt;.service.signalr.net.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SignalRResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { parameters? : models.SignalRCreateParameters, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SignalRResource>>;

    /**
     * Create a new SignalR service and update an exiting SignalR service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.parameters] Parameters for the create or update
     * operation
     *
     * @param {string} options.parameters.location Azure GEO region: e.g. West US |
     * East US | North Central US | South Central US | West Europe | North Europe |
     * East Asia | Southeast Asia | etc.
     * The geo region of a resource never changes after it is created.
     *
     * @param {object} [options.parameters.tags] A list of key value pairs that
     * describe the resource.
     *
     * @param {object} [options.parameters.sku] The billing information of the
     * resource.(e.g. basic vs. standard)
     *
     * @param {string} options.parameters.sku.name The name of the SKU. This is
     * typically a letter + number code, such as A0 or P3.  Required (if sku is
     * specified)
     *
     * @param {string} [options.parameters.sku.tier] Optional tier of this
     * particular SKU. `Basic` is deprecated, use `Standard` instead. Possible
     * values include: 'Free', 'Basic', 'Standard', 'Premium'
     *
     * @param {string} [options.parameters.sku.size] Optional, string. When the
     * name field is the combination of tier and some other value, this would be
     * the standalone code.
     *
     * @param {string} [options.parameters.sku.family] Optional, string. If the
     * service has different generations of hardware, for the same SKU, then that
     * can be captured here.
     *
     * @param {number} [options.parameters.sku.capacity] Optional, integer. If the
     * SKU supports scale out/in then the capacity integer should be included. If
     * scale out/in is not
     * possible for the resource this may be omitted.
     *
     * @param {object} [options.parameters.properties] Settings used to provision
     * or configure the resource
     *
     * @param {string} [options.parameters.properties.hostNamePrefix] Prefix for
     * the hostName of the SignalR service. Retained for future use.
     * The hostname will be of format: &lt;hostNamePrefix&gt;.service.signalr.net.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SignalRResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SignalRResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SignalRResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, options?: { parameters? : models.SignalRCreateParameters, customHeaders? : { [headerName: string]: string; } }): Promise<models.SignalRResource>;
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.SignalRResource>): void;
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, options: { parameters? : models.SignalRCreateParameters, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SignalRResource>): void;


    /**
     * Operation to delete a SignalR service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Operation to delete a SignalR service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, resourceName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Operation to update an exiting SignalR service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.parameters] Parameters for the update operation
     *
     * @param {object} [options.parameters.tags] A list of key value pairs that
     * describe the resource.
     *
     * @param {object} [options.parameters.sku] The billing information of the
     * resource.(e.g. basic vs. standard)
     *
     * @param {string} options.parameters.sku.name The name of the SKU. This is
     * typically a letter + number code, such as A0 or P3.  Required (if sku is
     * specified)
     *
     * @param {string} [options.parameters.sku.tier] Optional tier of this
     * particular SKU. `Basic` is deprecated, use `Standard` instead. Possible
     * values include: 'Free', 'Basic', 'Standard', 'Premium'
     *
     * @param {string} [options.parameters.sku.size] Optional, string. When the
     * name field is the combination of tier and some other value, this would be
     * the standalone code.
     *
     * @param {string} [options.parameters.sku.family] Optional, string. If the
     * service has different generations of hardware, for the same SKU, then that
     * can be captured here.
     *
     * @param {number} [options.parameters.sku.capacity] Optional, integer. If the
     * SKU supports scale out/in then the capacity integer should be included. If
     * scale out/in is not
     * possible for the resource this may be omitted.
     *
     * @param {object} [options.parameters.properties] Settings used to provision
     * or configure the resource
     *
     * @param {string} [options.parameters.properties.hostNamePrefix] Prefix for
     * the hostName of the SignalR service. Retained for future use.
     * The hostname will be of format: &lt;hostNamePrefix&gt;.service.signalr.net.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SignalRResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { parameters? : models.SignalRUpdateParameters, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SignalRResource>>;

    /**
     * Operation to update an exiting SignalR service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.parameters] Parameters for the update operation
     *
     * @param {object} [options.parameters.tags] A list of key value pairs that
     * describe the resource.
     *
     * @param {object} [options.parameters.sku] The billing information of the
     * resource.(e.g. basic vs. standard)
     *
     * @param {string} options.parameters.sku.name The name of the SKU. This is
     * typically a letter + number code, such as A0 or P3.  Required (if sku is
     * specified)
     *
     * @param {string} [options.parameters.sku.tier] Optional tier of this
     * particular SKU. `Basic` is deprecated, use `Standard` instead. Possible
     * values include: 'Free', 'Basic', 'Standard', 'Premium'
     *
     * @param {string} [options.parameters.sku.size] Optional, string. When the
     * name field is the combination of tier and some other value, this would be
     * the standalone code.
     *
     * @param {string} [options.parameters.sku.family] Optional, string. If the
     * service has different generations of hardware, for the same SKU, then that
     * can be captured here.
     *
     * @param {number} [options.parameters.sku.capacity] Optional, integer. If the
     * SKU supports scale out/in then the capacity integer should be included. If
     * scale out/in is not
     * possible for the resource this may be omitted.
     *
     * @param {object} [options.parameters.properties] Settings used to provision
     * or configure the resource
     *
     * @param {string} [options.parameters.properties.hostNamePrefix] Prefix for
     * the hostName of the SignalR service. Retained for future use.
     * The hostname will be of format: &lt;hostNamePrefix&gt;.service.signalr.net.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SignalRResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SignalRResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SignalRResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(resourceGroupName: string, resourceName: string, options?: { parameters? : models.SignalRUpdateParameters, customHeaders? : { [headerName: string]: string; } }): Promise<models.SignalRResource>;
    beginUpdate(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.SignalRResource>): void;
    beginUpdate(resourceGroupName: string, resourceName: string, options: { parameters? : models.SignalRUpdateParameters, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SignalRResource>): void;


    /**
     * Operation to restart a SignalR service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginRestartWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Operation to restart a SignalR service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} resourceName The name of the SignalR resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginRestart(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginRestart(resourceGroupName: string, resourceName: string, callback: ServiceCallback<void>): void;
    beginRestart(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Handles requests to list all resources in a subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SignalRResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySubscriptionNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SignalRResourceList>>;

    /**
     * Handles requests to list all resources in a subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SignalRResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SignalRResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SignalRResourceList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySubscriptionNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SignalRResourceList>;
    listBySubscriptionNext(nextPageLink: string, callback: ServiceCallback<models.SignalRResourceList>): void;
    listBySubscriptionNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SignalRResourceList>): void;


    /**
     * Handles requests to list all resources in a resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SignalRResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SignalRResourceList>>;

    /**
     * Handles requests to list all resources in a resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SignalRResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SignalRResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SignalRResourceList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SignalRResourceList>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.SignalRResourceList>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SignalRResourceList>): void;
}

/**
 * @class
 * Usages
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SignalRManagementClient.
 */
export interface Usages {


    /**
     * List usage quotas for Azure SignalR service by location.
     *
     * @param {string} location the location like "eastus"
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SignalRUsageList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(location: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SignalRUsageList>>;

    /**
     * List usage quotas for Azure SignalR service by location.
     *
     * @param {string} location the location like "eastus"
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SignalRUsageList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SignalRUsageList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SignalRUsageList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(location: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SignalRUsageList>;
    list(location: string, callback: ServiceCallback<models.SignalRUsageList>): void;
    list(location: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SignalRUsageList>): void;


    /**
     * List usage quotas for Azure SignalR service by location.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SignalRUsageList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SignalRUsageList>>;

    /**
     * List usage quotas for Azure SignalR service by location.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SignalRUsageList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SignalRUsageList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SignalRUsageList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SignalRUsageList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.SignalRUsageList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SignalRUsageList>): void;
}

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the OperationDisplay class.
 * @constructor
 * The object that describes a operation.
 *
 * @member {string} [provider] Friendly name of the resource provider
 * @member {string} [resource] Resource type on which the operation is
 * performed.
 * @member {string} [operation] The localized friendly name for the operation.
 * @member {string} [description] The localized friendly description for the
 * operation
 */
export interface OperationDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the Dimension class.
 * @constructor
 * Specifications of the Dimension of metrics.
 *
 * @member {string} [name] The public facing name of the dimension.
 * @member {string} [displayName] Localized friendly display name of the
 * dimension.
 * @member {string} [internalName] Name of the dimension as it appears in MDM.
 * @member {boolean} [toBeExportedForShoebox] A Boolean flag indicating whether
 * this dimension should be included for the shoebox export scenario.
 */
export interface Dimension {
  name?: string;
  displayName?: string;
  internalName?: string;
  toBeExportedForShoebox?: boolean;
}

/**
 * @class
 * Initializes a new instance of the MetricSpecification class.
 * @constructor
 * Specifications of the Metrics for Azure Monitoring.
 *
 * @member {string} [name] Name of the metric.
 * @member {string} [displayName] Localized friendly display name of the
 * metric.
 * @member {string} [displayDescription] Localized friendly description of the
 * metric.
 * @member {string} [unit] The unit that makes sense for the metric.
 * @member {string} [aggregationType] Only provide one value for this field.
 * Valid values: Average, Minimum, Maximum, Total, Count.
 * @member {string} [fillGapWithZero] Optional. If set to true, then zero will
 * be returned for time duration where no metric is emitted/published.
 * Ex. a metric that returns the number of times a particular error code was
 * emitted. The error code may not appear
 * often, instead of the RP publishing 0, Shoebox can auto fill in 0s for time
 * periods where nothing was emitted.
 * @member {string} [category] The name of the metric category that the metric
 * belongs to. A metric can only belong to a single category.
 * @member {array} [dimensions] The dimensions of the metrics.
 */
export interface MetricSpecification {
  name?: string;
  displayName?: string;
  displayDescription?: string;
  unit?: string;
  aggregationType?: string;
  fillGapWithZero?: string;
  category?: string;
  dimensions?: Dimension[];
}

/**
 * @class
 * Initializes a new instance of the ServiceSpecification class.
 * @constructor
 * An object that describes a specification.
 *
 * @member {array} [metricSpecifications] Specifications of the Metrics for
 * Azure Monitoring.
 */
export interface ServiceSpecification {
  metricSpecifications?: MetricSpecification[];
}

/**
 * @class
 * Initializes a new instance of the OperationProperties class.
 * @constructor
 * Extra Operation properties.
 *
 * @member {object} [serviceSpecification] The service specifications.
 * @member {array} [serviceSpecification.metricSpecifications] Specifications
 * of the Metrics for Azure Monitoring.
 */
export interface OperationProperties {
  serviceSpecification?: ServiceSpecification;
}

/**
 * @class
 * Initializes a new instance of the Operation class.
 * @constructor
 * REST API operation supported by SignalR resource provider.
 *
 * @member {string} [name] Name of the operation with format:
 * {provider}/{resource}/{operation}
 * @member {object} [display] The object that describes the operation.
 * @member {string} [display.provider] Friendly name of the resource provider
 * @member {string} [display.resource] Resource type on which the operation is
 * performed.
 * @member {string} [display.operation] The localized friendly name for the
 * operation.
 * @member {string} [display.description] The localized friendly description
 * for the operation
 * @member {string} [origin] Optional. The intended executor of the operation;
 * governs the display of the operation in the RBAC UX and the audit logs UX.
 * @member {object} [properties] Extra properties for the operation.
 * @member {object} [properties.serviceSpecification] The service
 * specifications.
 * @member {array} [properties.serviceSpecification.metricSpecifications]
 * Specifications of the Metrics for Azure Monitoring.
 */
export interface Operation {
  name?: string;
  display?: OperationDisplay;
  origin?: string;
  properties?: OperationProperties;
}

/**
 * @class
 * Initializes a new instance of the NameAvailabilityParameters class.
 * @constructor
 * Data POST-ed to the nameAvailability action
 *
 * @member {string} type The resource type. Should be always
 * "Microsoft.SignalRService/SignalR".
 * @member {string} name The SignalR service name to validate.
 * e.g."my-signalR-name-here"
 */
export interface NameAvailabilityParameters {
  type: string;
  name: string;
}

/**
 * @class
 * Initializes a new instance of the NameAvailability class.
 * @constructor
 * Result of the request to check name availability. It contains a flag and
 * possible reason of failure.
 *
 * @member {boolean} [nameAvailable] Indicates whether the name is available or
 * not.
 * @member {string} [reason] The reason of the availability. Required if name
 * is not available.
 * @member {string} [message] The message of the operation.
 */
export interface NameAvailability {
  nameAvailable?: boolean;
  reason?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the ResourceSku class.
 * @constructor
 * The billing information of the resource.(e.g. basic vs. standard)
 *
 * @member {string} name The name of the SKU. This is typically a letter +
 * number code, such as A0 or P3.  Required (if sku is specified)
 * @member {string} [tier] Optional tier of this particular SKU. `Basic` is
 * deprecated, use `Standard` instead for Basic tier. Possible values include:
 * 'Free', 'Basic', 'Standard', 'Premium'
 * @member {string} [size] Optional, string. When the name field is the
 * combination of tier and some other value, this would be the standalone code.
 * @member {string} [family] Optional, string. If the service has different
 * generations of hardware, for the same SKU, then that can be captured here.
 * @member {number} [capacity] Optional, integer. If the SKU supports scale
 * out/in then the capacity integer should be included. If scale out/in is not
 * possible for the resource this may be omitted.
 */
export interface ResourceSku {
  name: string;
  tier?: string;
  size?: string;
  family?: string;
  capacity?: number;
}

/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * The core properties of ARM resources.
 *
 * @member {string} [id] Fully qualified resource Id for the resource.
 * @member {string} [name] The name of the resource.
 * @member {string} [type] The type of the service - e.g.
 * "Microsoft.SignalRService/SignalR"
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
}

/**
 * @class
 * Initializes a new instance of the TrackedResource class.
 * @constructor
 * The resource model definition for a ARM tracked top level resource.
 *
 * @member {string} [location] The GEO location of the SignalR service. e.g.
 * West US | East US | North Central US | South Central US.
 * @member {object} [tags] Tags of the service which is a list of key value
 * pairs that describe the resource.
 */
export interface TrackedResource extends Resource {
  location?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the SignalRResource class.
 * @constructor
 * A class represent a SignalR service resource.
 *
 * @member {object} [sku] SKU of the service.
 * @member {string} [sku.name] The name of the SKU. This is typically a letter
 * + number code, such as A0 or P3.  Required (if sku is specified)
 * @member {string} [sku.tier] Optional tier of this particular SKU. `Basic` is
 * deprecated, use `Standard` instead for Basic tier. Possible values include:
 * 'Free', 'Basic', 'Standard', 'Premium'
 * @member {string} [sku.size] Optional, string. When the name field is the
 * combination of tier and some other value, this would be the standalone code.
 * @member {string} [sku.family] Optional, string. If the service has different
 * generations of hardware, for the same SKU, then that can be captured here.
 * @member {number} [sku.capacity] Optional, integer. If the SKU supports scale
 * out/in then the capacity integer should be included. If scale out/in is not
 * possible for the resource this may be omitted.
 * @member {string} [hostNamePrefix] Prefix for the hostName of the SignalR
 * service. Retained for future use.
 * The hostname will be of format: &lt;hostNamePrefix&gt;.service.signalr.net.
 * @member {string} [provisioningState] Provisioning state of the resource.
 * Possible values include: 'Unknown', 'Succeeded', 'Failed', 'Canceled',
 * 'Running', 'Creating', 'Updating', 'Deleting', 'Moving'
 * @member {string} [externalIP] The publicly accessible IP of the SignalR
 * service.
 * @member {string} [hostName] FQDN of the SignalR service instance. Format:
 * xxx.service.signalr.net
 * @member {number} [publicPort] The publicly accessibly port of the SignalR
 * service which is designed for browser/client side usage.
 * @member {number} [serverPort] The publicly accessibly port of the SignalR
 * service which is designed for customer server side usage.
 * @member {string} [version] Version of the SignalR resource. Probably you
 * need the same or higher version of client SDKs.
 */
export interface SignalRResource extends TrackedResource {
  sku?: ResourceSku;
  hostNamePrefix?: string;
  readonly provisioningState?: string;
  readonly externalIP?: string;
  readonly hostName?: string;
  readonly publicPort?: number;
  readonly serverPort?: number;
  version?: string;
}

/**
 * @class
 * Initializes a new instance of the SignalRCreateOrUpdateProperties class.
 * @constructor
 * Settings used to provision or configure the resource.
 *
 * @member {string} [hostNamePrefix] Prefix for the hostName of the SignalR
 * service. Retained for future use.
 * The hostname will be of format: &lt;hostNamePrefix&gt;.service.signalr.net.
 */
export interface SignalRCreateOrUpdateProperties {
  hostNamePrefix?: string;
}

/**
 * @class
 * Initializes a new instance of the SignalRKeys class.
 * @constructor
 * A class represents the access keys of SignalR service.
 *
 * @member {string} [primaryKey] The primary access key.
 * @member {string} [secondaryKey] The secondary access key.
 * @member {string} [primaryConnectionString] SignalR connection string
 * constructed via the primaryKey
 * @member {string} [secondaryConnectionString] SignalR connection string
 * constructed via the secondaryKey
 */
export interface SignalRKeys {
  primaryKey?: string;
  secondaryKey?: string;
  primaryConnectionString?: string;
  secondaryConnectionString?: string;
}

/**
 * @class
 * Initializes a new instance of the RegenerateKeyParameters class.
 * @constructor
 * Parameters describes the request to regenerate access keys
 *
 * @member {string} [keyType] The keyType to regenerate. Must be either
 * 'primary' or 'secondary'(case-insensitive). Possible values include:
 * 'Primary', 'Secondary'
 */
export interface RegenerateKeyParameters {
  keyType?: string;
}

/**
 * @class
 * Initializes a new instance of the SignalRUpdateParameters class.
 * @constructor
 * Parameters for SignalR service update operation
 *
 * @member {object} [tags] A list of key value pairs that describe the
 * resource.
 * @member {object} [sku] The billing information of the resource.(e.g. basic
 * vs. standard)
 * @member {string} [sku.name] The name of the SKU. This is typically a letter
 * + number code, such as A0 or P3.  Required (if sku is specified)
 * @member {string} [sku.tier] Optional tier of this particular SKU. `Basic` is
 * deprecated, use `Standard` instead for Basic tier. Possible values include:
 * 'Free', 'Basic', 'Standard', 'Premium'
 * @member {string} [sku.size] Optional, string. When the name field is the
 * combination of tier and some other value, this would be the standalone code.
 * @member {string} [sku.family] Optional, string. If the service has different
 * generations of hardware, for the same SKU, then that can be captured here.
 * @member {number} [sku.capacity] Optional, integer. If the SKU supports scale
 * out/in then the capacity integer should be included. If scale out/in is not
 * possible for the resource this may be omitted.
 * @member {object} [properties] Settings used to provision or configure the
 * resource
 * @member {string} [properties.hostNamePrefix] Prefix for the hostName of the
 * SignalR service. Retained for future use.
 * The hostname will be of format: &lt;hostNamePrefix&gt;.service.signalr.net.
 */
export interface SignalRUpdateParameters {
  tags?: { [propertyName: string]: string };
  sku?: ResourceSku;
  properties?: SignalRCreateOrUpdateProperties;
}

/**
 * @class
 * Initializes a new instance of the SignalRCreateParameters class.
 * @constructor
 * Parameters for SignalR service create/update operation.
 *
 * Keep the same schema as AzSignalR.Models.SignalRResource
 *
 * @member {string} location Azure GEO region: e.g. West US | East US | North
 * Central US | South Central US | West Europe | North Europe | East Asia |
 * Southeast Asia | etc.
 * The geo region of a resource never changes after it is created.
 */
export interface SignalRCreateParameters extends SignalRUpdateParameters {
  location: string;
}

/**
 * @class
 * Initializes a new instance of the SignalRUsageName class.
 * @constructor
 * Localizable String object containing the name and a localized value.
 *
 * @member {string} [value] The identifier of the usage.
 * @member {string} [localizedValue] Localized name of the usage.
 */
export interface SignalRUsageName {
  value?: string;
  localizedValue?: string;
}

/**
 * @class
 * Initializes a new instance of the SignalRUsage class.
 * @constructor
 * Object that describes a specific usage of SignalR resources.
 *
 * @member {string} [id] Fully qualified ARM resource id
 * @member {number} [currentValue] Current value for the usage quota.
 * @member {number} [limit] The maximum permitted value for the usage quota. If
 * there is no limit, this value will be -1.
 * @member {object} [name] Localizable String object containing the name and a
 * localized value.
 * @member {string} [name.value] The identifier of the usage.
 * @member {string} [name.localizedValue] Localized name of the usage.
 * @member {string} [unit] Representing the units of the usage quota. Possible
 * values are: Count, Bytes, Seconds, Percent, CountPerSecond, BytesPerSecond.
 */
export interface SignalRUsage {
  id?: string;
  currentValue?: number;
  limit?: number;
  name?: SignalRUsageName;
  unit?: string;
}


/**
 * @class
 * Initializes a new instance of the OperationList class.
 * @constructor
 * Result of the request to list REST API operations. It contains a list of
 * operations.
 *
 * @member {string} [nextLink] The URL the client should use to fetch the next
 * page (per server side paging).
 * It's null for now, added for future use.
 */
export interface OperationList extends Array<Operation> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SignalRResourceList class.
 * @constructor
 * Object that includes an array of SignalR services and a possible link for
 * next set.
 *
 * @member {string} [nextLink] The URL the client should use to fetch the next
 * page (per server side paging).
 * It's null for now, added for future use.
 */
export interface SignalRResourceList extends Array<SignalRResource> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SignalRUsageList class.
 * @constructor
 * Object that includes an array of SignalR resource usages and a possible link
 * for next set.
 *
 * @member {string} [nextLink] The URL the client should use to fetch the next
 * page (per server side paging).
 * It's null for now, added for future use.
 */
export interface SignalRUsageList extends Array<SignalRUsage> {
  nextLink?: string;
}

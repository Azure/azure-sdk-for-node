/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.15.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the RoleDefinitionProperties class.
 * @constructor
 * Role definition properties.
 * @member {string} [roleName] Gets or sets role name.
 * 
 * @member {string} [description] Gets or sets role definition description.
 * 
 * @member {string} [type] Gets or sets role type.
 * 
 * @member {array} [permissions] Gets or sets role definition permissions.
 * 
 * @member {array} [assignableScopes] Gets or sets role definition assignable
 * scopes.
 * 
 */
function RoleDefinitionProperties() {
}

/**
 * Defines the metadata of RoleDefinitionProperties
 *
 * @returns {object} metadata of RoleDefinitionProperties
 *
 */
RoleDefinitionProperties.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'RoleDefinitionProperties',
    type: {
      name: 'Composite',
      className: 'RoleDefinitionProperties',
      modelProperties: {
        roleName: {
          required: false,
          serializedName: 'roleName',
          type: {
            name: 'String'
          }
        },
        description: {
          required: false,
          serializedName: 'description',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        permissions: {
          required: false,
          serializedName: 'permissions',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'PermissionElementType',
                type: {
                  name: 'Composite',
                  className: 'Permission'
                }
            }
          }
        },
        assignableScopes: {
          required: false,
          serializedName: 'assignableScopes',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        }
      }
    }
  };
};

module.exports = RoleDefinitionProperties;

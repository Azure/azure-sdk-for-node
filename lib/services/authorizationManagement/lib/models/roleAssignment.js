/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.15.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the RoleAssignment class.
 * @constructor
 * Role Assignments
 * @member {string} [id] Gets or sets role assignment id.
 * 
 * @member {string} [name] Gets or sets role assignment name.
 * 
 * @member {string} [type] Gets or sets role assignment type.
 * 
 * @member {object} [properties] Gets or sets role assignment properties.
 * 
 * @member {string} [properties.scope] Gets or sets role assignment scope.
 * 
 * @member {string} [properties.roleDefinitionId] Gets or sets role definition
 * id.
 * 
 * @member {string} [properties.principalId] Gets or sets principal Id.
 * 
 */
function RoleAssignment() {
}

/**
 * Defines the metadata of RoleAssignment
 *
 * @returns {object} metadata of RoleAssignment
 *
 */
RoleAssignment.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'RoleAssignment',
    type: {
      name: 'Composite',
      className: 'RoleAssignment',
      modelProperties: {
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        properties: {
          required: false,
          serializedName: 'properties',
          type: {
            name: 'Composite',
            className: 'RoleAssignmentPropertiesWithScope'
          }
        }
      }
    }
  };
};

module.exports = RoleAssignment;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.15.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the ProviderOperationsMetadata class.
 * @constructor
 * Provider Operations metadata
 * @member {string} [id] Gets or sets the provider id.
 * 
 * @member {string} [name] Gets or sets the provider name
 * 
 * @member {string} [type] Gets or sets the provider type
 * 
 * @member {string} [displayName] Gets or sets the provider display name
 * 
 * @member {array} [resourceTypes] Gets or sets the provider resource types
 * 
 * @member {array} [operations] Gets or sets the provider operations
 * 
 */
function ProviderOperationsMetadata() {
}

/**
 * Defines the metadata of ProviderOperationsMetadata
 *
 * @returns {object} metadata of ProviderOperationsMetadata
 *
 */
ProviderOperationsMetadata.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'ProviderOperationsMetadata',
    type: {
      name: 'Composite',
      className: 'ProviderOperationsMetadata',
      modelProperties: {
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        displayName: {
          required: false,
          serializedName: 'displayName',
          type: {
            name: 'String'
          }
        },
        resourceTypes: {
          required: false,
          serializedName: 'resourceTypes',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'ResourceTypeElementType',
                type: {
                  name: 'Composite',
                  className: 'ResourceType'
                }
            }
          }
        },
        operations: {
          required: false,
          serializedName: 'operations',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'ProviderOperationElementType',
                type: {
                  name: 'Composite',
                  className: 'ProviderOperation'
                }
            }
          }
        }
      }
    }
  };
};

module.exports = ProviderOperationsMetadata;

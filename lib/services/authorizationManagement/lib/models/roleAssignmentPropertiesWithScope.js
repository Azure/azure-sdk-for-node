/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.15.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the RoleAssignmentPropertiesWithScope class.
 * @constructor
 * Role assignment properties with scope.
 * @member {string} [scope] Gets or sets role assignment scope.
 * 
 * @member {string} [roleDefinitionId] Gets or sets role definition id.
 * 
 * @member {string} [principalId] Gets or sets principal Id.
 * 
 */
function RoleAssignmentPropertiesWithScope() {
}

/**
 * Defines the metadata of RoleAssignmentPropertiesWithScope
 *
 * @returns {object} metadata of RoleAssignmentPropertiesWithScope
 *
 */
RoleAssignmentPropertiesWithScope.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'RoleAssignmentPropertiesWithScope',
    type: {
      name: 'Composite',
      className: 'RoleAssignmentPropertiesWithScope',
      modelProperties: {
        scope: {
          required: false,
          serializedName: 'scope',
          type: {
            name: 'String'
          }
        },
        roleDefinitionId: {
          required: false,
          serializedName: 'roleDefinitionId',
          type: {
            name: 'String'
          }
        },
        principalId: {
          required: false,
          serializedName: 'principalId',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = RoleAssignmentPropertiesWithScope;

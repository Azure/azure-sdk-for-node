/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the Diagnostics class.
 * @constructor
 * Error diagnostic information for failed jobs.
 *
 * @member {number} [columnNumber] the column where the error occured.
 *
 * @member {number} [end] the ending index of the error.
 *
 * @member {number} [lineNumber] the line number the error occured on.
 *
 * @member {string} [message] the error message.
 *
 * @member {string} [severity] the severity of the error. Possible values
 * include: 'Warning', 'Error', 'Info', 'SevereWarning', 'Deprecated',
 * 'UserWarning'
 *
 * @member {number} [start] the starting index of the error.
 *
 */
function Diagnostics() {
}

/**
 * Defines the metadata of Diagnostics
 *
 * @returns {object} metadata of Diagnostics
 *
 */
Diagnostics.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'Diagnostics',
    type: {
      name: 'Composite',
      className: 'Diagnostics',
      modelProperties: {
        columnNumber: {
          required: false,
          readOnly: true,
          serializedName: 'columnNumber',
          type: {
            name: 'Number'
          }
        },
        end: {
          required: false,
          readOnly: true,
          serializedName: 'end',
          type: {
            name: 'Number'
          }
        },
        lineNumber: {
          required: false,
          readOnly: true,
          serializedName: 'lineNumber',
          type: {
            name: 'Number'
          }
        },
        message: {
          required: false,
          readOnly: true,
          serializedName: 'message',
          type: {
            name: 'String'
          }
        },
        severity: {
          required: false,
          readOnly: true,
          serializedName: 'severity',
          type: {
            name: 'Enum',
            allowedValues: [ 'Warning', 'Error', 'Info', 'SevereWarning', 'Deprecated', 'UserWarning' ]
          }
        },
        start: {
          required: false,
          readOnly: true,
          serializedName: 'start',
          type: {
            name: 'Number'
          }
        }
      }
    }
  };
};

module.exports = Diagnostics;

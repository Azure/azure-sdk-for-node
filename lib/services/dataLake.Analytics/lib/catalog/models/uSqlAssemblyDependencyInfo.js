/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the USqlAssemblyDependencyInfo class.
 * @constructor
 * A Data Lake Analytics catalog U-SQL dependency information item.
 * @member {object} [entityId] Gets or sets the EntityId of the dependency.
 * 
 * @member {object} [entityId.name] Gets or sets the name of the external
 * table associated with this database, schema and table.
 * 
 * @member {string} [entityId.name.firstPart] Gets or sets the name of the
 * table associated with this database and schema.
 * 
 * @member {string} [entityId.name.secondPart] Gets or sets the name of the
 * table associated with this database and schema.
 * 
 * @member {string} [entityId.name.thirdPart] Gets or sets the name of the
 * table associated with this database and schema.
 * 
 * @member {string} [entityId.name.server] Gets or sets the name of the table
 * associated with this database and schema.
 * 
 * @member {uuid} [entityId.version] Gets or sets the version of the external
 * data source.
 * 
 */
function USqlAssemblyDependencyInfo() {
}

/**
 * Defines the metadata of USqlAssemblyDependencyInfo
 *
 * @returns {object} metadata of USqlAssemblyDependencyInfo
 *
 */
USqlAssemblyDependencyInfo.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'USqlAssemblyDependencyInfo',
    type: {
      name: 'Composite',
      className: 'USqlAssemblyDependencyInfo',
      modelProperties: {
        entityId: {
          required: false,
          serializedName: 'entityId',
          type: {
            name: 'Composite',
            className: 'EntityId'
          }
        }
      }
    }
  };
};

module.exports = USqlAssemblyDependencyInfo;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The parameters to use for creating a Data Lake Analytics account.
 *
 */
class CreateDataLakeAnalyticsAccountParameters {
  /**
   * Create a CreateDataLakeAnalyticsAccountParameters.
   * @member {string} location The resource location.
   * @member {object} [tags] The resource tags.
   * @member {string} defaultDataLakeStoreAccount The default Data Lake Store
   * account associated with this account.
   * @member {array} dataLakeStoreAccounts The list of Data Lake Store accounts
   * associated with this account.
   * @member {array} [storageAccounts] The list of Azure Blob Storage accounts
   * associated with this account.
   * @member {array} [computePolicies] The list of compute policies associated
   * with this account.
   * @member {array} [firewallRules] The list of firewall rules associated with
   * this account.
   * @member {string} [firewallState] The current state of the IP address
   * firewall for this account. Possible values include: 'Enabled', 'Disabled'
   * @member {string} [firewallAllowAzureIps] The current state of allowing or
   * disallowing IPs originating within Azure through the firewall. If the
   * firewall is disabled, this is not enforced. Possible values include:
   * 'Enabled', 'Disabled'
   * @member {string} [newTier] The commitment tier for the next month.
   * Possible values include: 'Consumption', 'Commitment_100AUHours',
   * 'Commitment_500AUHours', 'Commitment_1000AUHours',
   * 'Commitment_5000AUHours', 'Commitment_10000AUHours',
   * 'Commitment_50000AUHours', 'Commitment_100000AUHours',
   * 'Commitment_500000AUHours'
   * @member {number} [maxJobCount] The maximum supported jobs running under
   * the account at the same time. Default value: 3 .
   * @member {number} [maxDegreeOfParallelism] The maximum supported degree of
   * parallelism for this account. Default value: 30 .
   * @member {number} [maxDegreeOfParallelismPerJob] The maximum supported
   * degree of parallelism per job for this account.
   * @member {number} [minPriorityPerJob] The minimum supported priority per
   * job for this account.
   * @member {number} [queryStoreRetention] The number of days that job
   * metadata is retained. Default value: 30 .
   */
  constructor() {
  }

  /**
   * Defines the metadata of CreateDataLakeAnalyticsAccountParameters
   *
   * @returns {object} metadata of CreateDataLakeAnalyticsAccountParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'CreateDataLakeAnalyticsAccountParameters',
      type: {
        name: 'Composite',
        className: 'CreateDataLakeAnalyticsAccountParameters',
        modelProperties: {
          location: {
            required: true,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          defaultDataLakeStoreAccount: {
            required: true,
            serializedName: 'properties.defaultDataLakeStoreAccount',
            type: {
              name: 'String'
            }
          },
          dataLakeStoreAccounts: {
            required: true,
            serializedName: 'properties.dataLakeStoreAccounts',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'AddDataLakeStoreWithAccountParametersElementType',
                  type: {
                    name: 'Composite',
                    className: 'AddDataLakeStoreWithAccountParameters'
                  }
              }
            }
          },
          storageAccounts: {
            required: false,
            serializedName: 'properties.storageAccounts',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'AddStorageAccountWithAccountParametersElementType',
                  type: {
                    name: 'Composite',
                    className: 'AddStorageAccountWithAccountParameters'
                  }
              }
            }
          },
          computePolicies: {
            required: false,
            serializedName: 'properties.computePolicies',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'CreateComputePolicyWithAccountParametersElementType',
                  type: {
                    name: 'Composite',
                    className: 'CreateComputePolicyWithAccountParameters'
                  }
              }
            }
          },
          firewallRules: {
            required: false,
            serializedName: 'properties.firewallRules',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'CreateFirewallRuleWithAccountParametersElementType',
                  type: {
                    name: 'Composite',
                    className: 'CreateFirewallRuleWithAccountParameters'
                  }
              }
            }
          },
          firewallState: {
            required: false,
            serializedName: 'properties.firewallState',
            type: {
              name: 'Enum',
              allowedValues: [ 'Enabled', 'Disabled' ]
            }
          },
          firewallAllowAzureIps: {
            required: false,
            serializedName: 'properties.firewallAllowAzureIps',
            type: {
              name: 'Enum',
              allowedValues: [ 'Enabled', 'Disabled' ]
            }
          },
          newTier: {
            required: false,
            serializedName: 'properties.newTier',
            type: {
              name: 'Enum',
              allowedValues: [ 'Consumption', 'Commitment_100AUHours', 'Commitment_500AUHours', 'Commitment_1000AUHours', 'Commitment_5000AUHours', 'Commitment_10000AUHours', 'Commitment_50000AUHours', 'Commitment_100000AUHours', 'Commitment_500000AUHours' ]
            }
          },
          maxJobCount: {
            required: false,
            serializedName: 'properties.maxJobCount',
            defaultValue: 3,
            constraints: {
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          },
          maxDegreeOfParallelism: {
            required: false,
            serializedName: 'properties.maxDegreeOfParallelism',
            defaultValue: 30,
            constraints: {
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          },
          maxDegreeOfParallelismPerJob: {
            required: false,
            serializedName: 'properties.maxDegreeOfParallelismPerJob',
            constraints: {
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          },
          minPriorityPerJob: {
            required: false,
            serializedName: 'properties.minPriorityPerJob',
            constraints: {
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          },
          queryStoreRetention: {
            required: false,
            serializedName: 'properties.queryStoreRetention',
            defaultValue: 30,
            constraints: {
              InclusiveMaximum: 180,
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = CreateDataLakeAnalyticsAccountParameters;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the DataLakeAnalyticsAccount class.
 * @constructor
 * A Data Lake Analytics account object, containing all information associated
 * with the named Data Lake Analytics account.
 *
 * @member {string} [location] the account regional location.
 * 
 * @member {string} [name] the account name.
 * 
 * @member {string} [type] the namespace and type of the account.
 * 
 * @member {string} [id] the account subscription ID.
 * 
 * @member {object} [tags] the value of custom properties.
 * 
 * @member {object} [properties] the properties defined by Data Lake Analytics
 * all properties are specific to each resource provider.
 * 
 * @member {string} [properties.provisioningState] the provisioning status of
 * the Data Lake Analytics account. Possible values include: 'Failed',
 * 'Creating', 'Running', 'Succeeded', 'Patching', 'Suspending', 'Resuming',
 * 'Deleting', 'Deleted'
 * 
 * @member {string} [properties.state] the state of the Data Lake Analytics
 * account. Possible values include: 'active', 'suspended'
 * 
 * @member {string} [properties.defaultDataLakeStoreAccount] the default data
 * lake storage account associated with this Data Lake Analytics account.
 * 
 * @member {number} [properties.maxDegreeOfParallelism] the maximum supported
 * degree of parallelism for this account.
 * 
 * @member {number} [properties.maxJobCount] the maximum supported jobs
 * running under the account at the same time.
 * 
 * @member {array} [properties.dataLakeStoreAccounts] the list of Data Lake
 * storage accounts associated with this account.
 * 
 * @member {array} [properties.storageAccounts] the list of Azure Blob storage
 * accounts associated with this account.
 * 
 * @member {date} [properties.creationTime] the account creation time.
 * 
 * @member {date} [properties.lastModifiedTime] the account last modified time.
 * 
 * @member {string} [properties.endpoint] the full CName endpoint for this
 * account.
 * 
 */
function DataLakeAnalyticsAccount() {
}

/**
 * Defines the metadata of DataLakeAnalyticsAccount
 *
 * @returns {object} metadata of DataLakeAnalyticsAccount
 *
 */
DataLakeAnalyticsAccount.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'DataLakeAnalyticsAccount',
    type: {
      name: 'Composite',
      className: 'DataLakeAnalyticsAccount',
      modelProperties: {
        location: {
          required: false,
          serializedName: 'location',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          readOnly: true,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        id: {
          required: false,
          readOnly: true,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        tags: {
          required: false,
          serializedName: 'tags',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        properties: {
          required: false,
          serializedName: 'properties',
          type: {
            name: 'Composite',
            className: 'DataLakeAnalyticsAccountProperties'
          }
        }
      }
    }
  };
};

module.exports = DataLakeAnalyticsAccount;

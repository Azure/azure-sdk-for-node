/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Properties specific to the Backend Type.
 *
 */
class BackendProperties {
  /**
   * Create a BackendProperties.
   * @member {object} [serviceFabricCluster] Backend Service Fabric Cluster
   * Properties
   * @member {string} [serviceFabricCluster.clientCertificatethumbprint] The
   * client certificate thumbprint for the management endpoint.
   * @member {number} [serviceFabricCluster.maxPartitionResolutionRetries]
   * Maximum number of retries while attempting resolve the parition.
   * @member {array} [serviceFabricCluster.managementEndpoints] The cluster
   * management endpoint.
   * @member {array} [serviceFabricCluster.serverCertificateThumbprints]
   * Thumbprints of certificates cluster management service uses for tls
   * communication
   * @member {array} [serviceFabricCluster.serverX509Names] Server X509
   * Certificate Names Collection
   */
  constructor() {
  }

  /**
   * Defines the metadata of BackendProperties
   *
   * @returns {object} metadata of BackendProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'BackendProperties',
      type: {
        name: 'Composite',
        className: 'BackendProperties',
        modelProperties: {
          serviceFabricCluster: {
            required: false,
            serializedName: 'serviceFabricCluster',
            type: {
              name: 'Composite',
              className: 'BackendServiceFabricClusterProperties'
            }
          }
        }
      }
    };
  }
}

module.exports = BackendProperties;

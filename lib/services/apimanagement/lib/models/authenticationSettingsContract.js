/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * API Authentication Settings.
 *
 */
class AuthenticationSettingsContract {
  /**
   * Create a AuthenticationSettingsContract.
   * @member {object} [oAuth2] OAuth2 Authentication settings
   * @member {string} [oAuth2.authorizationServerId] OAuth authorization server
   * identifier.
   * @member {string} [oAuth2.scope] operations scope.
   * @member {object} [openid] OpenID Connect Authentication Settings
   * @member {string} [openid.openidProviderId] OAuth authorization server
   * identifier.
   * @member {array} [openid.bearerTokenSendingMethods] How to send token to
   * the server.
   * @member {boolean} [subscriptionKeyRequired] Specifies whether subscription
   * key is required during call to this API, true - API is included into
   * closed products only, false - API is included into open products alone,
   * null - there is a mix of products.
   */
  constructor() {
  }

  /**
   * Defines the metadata of AuthenticationSettingsContract
   *
   * @returns {object} metadata of AuthenticationSettingsContract
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AuthenticationSettingsContract',
      type: {
        name: 'Composite',
        className: 'AuthenticationSettingsContract',
        modelProperties: {
          oAuth2: {
            required: false,
            serializedName: 'oAuth2',
            type: {
              name: 'Composite',
              className: 'OAuth2AuthenticationSettingsContract'
            }
          },
          openid: {
            required: false,
            serializedName: 'openid',
            type: {
              name: 'Composite',
              className: 'OpenIdAuthenticationSettingsContract'
            }
          },
          subscriptionKeyRequired: {
            required: false,
            serializedName: 'subscriptionKeyRequired',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = AuthenticationSettingsContract;

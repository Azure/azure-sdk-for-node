/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Gateway hostname configuration details.
 *
 * @extends models['Resource']
 */
class GatewayHostnameConfigurationContract extends models['Resource'] {
  /**
   * Create a GatewayHostnameConfigurationContract.
   * @property {string} [hostname] Hostname value. Supports valid domain name,
   * partial or full wildcard
   * @property {string} [certificateId] Identifier of Certificate entity that
   * will be used for TLS connection establishment
   * @property {boolean} [negotiateClientCertificate] Determines whether
   * gateway requests client certificate
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of GatewayHostnameConfigurationContract
   *
   * @returns {object} metadata of GatewayHostnameConfigurationContract
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'GatewayHostnameConfigurationContract',
      type: {
        name: 'Composite',
        className: 'GatewayHostnameConfigurationContract',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          hostname: {
            required: false,
            serializedName: 'properties.hostname',
            type: {
              name: 'String'
            }
          },
          certificateId: {
            required: false,
            serializedName: 'properties.certificateId',
            type: {
              name: 'String'
            }
          },
          negotiateClientCertificate: {
            required: false,
            serializedName: 'properties.negotiateClientCertificate',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = GatewayHostnameConfigurationContract;

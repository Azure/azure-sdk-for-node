/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Description of an additional API Management resource location.
 *
 */
class AdditionalLocation {
  /**
   * Create a AdditionalLocation.
   * @member {string} location The location name of the additional region among
   * Azure Data center regions.
   * @member {object} sku SKU properties of the API Management service.
   * @member {string} [sku.name] Name of the Sku. Possible values include:
   * 'Developer', 'Standard', 'Premium'
   * @member {number} [sku.capacity] Capacity of the SKU (number of deployed
   * units of the SKU). The default value is 1.
   * @member {array} [staticIps] Static IP addresses of the location's virtual
   * machines.
   * @member {object} [virtualNetworkConfiguration] Virtual network
   * configuration for the location.
   * @member {string} [virtualNetworkConfiguration.vnetid] The virtual network
   * ID. This is typically a GUID. Expect a null GUID by default.
   * @member {string} [virtualNetworkConfiguration.subnetname] The name of the
   * subnet.
   * @member {string} [virtualNetworkConfiguration.subnetResourceId] The full
   * resource ID of a subnet in a virtual network to deploy the API Management
   * service in.
   */
  constructor() {
  }

  /**
   * Defines the metadata of AdditionalLocation
   *
   * @returns {object} metadata of AdditionalLocation
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AdditionalLocation',
      type: {
        name: 'Composite',
        className: 'AdditionalLocation',
        modelProperties: {
          location: {
            required: true,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          sku: {
            required: true,
            serializedName: 'sku',
            type: {
              name: 'Composite',
              className: 'ApiManagementServiceSkuProperties'
            }
          },
          staticIps: {
            required: false,
            readOnly: true,
            serializedName: 'staticIps',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          virtualNetworkConfiguration: {
            required: false,
            serializedName: 'virtualNetworkConfiguration',
            type: {
              name: 'Composite',
              className: 'VirtualNetworkConfiguration'
            }
          }
        }
      }
    };
  }
}

module.exports = AdditionalLocation;

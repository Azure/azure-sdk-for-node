/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * VpnClientConfiguration for P2S client.
 *
 */
class VpnClientConfiguration {
  /**
   * Create a VpnClientConfiguration.
   * @member {object} [vpnClientAddressPool] The reference of the address space
   * resource which represents Address space for P2S VpnClient.
   * @member {array} [vpnClientAddressPool.addressPrefixes] A list of address
   * blocks reserved for this virtual network in CIDR notation.
   * @member {array} [vpnClientRootCertificates] VpnClientRootCertificate for
   * virtual network gateway.
   * @member {array} [vpnClientRevokedCertificates] VpnClientRevokedCertificate
   * for Virtual network gateway.
   * @member {array} [vpnClientProtocols] VpnClientProtocols for Virtual
   * network gateway.
   * @member {array} [vpnClientIpsecPolicies] VpnClientIpsecPolicies for
   * virtual network gateway P2S client.
   * @member {string} [radiusServerAddress] The radius server address property
   * of the VirtualNetworkGateway resource for vpn client connection.
   * @member {string} [radiusServerSecret] The radius secret property of the
   * VirtualNetworkGateway resource for vpn client connection.
   */
  constructor() {
  }

  /**
   * Defines the metadata of VpnClientConfiguration
   *
   * @returns {object} metadata of VpnClientConfiguration
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VpnClientConfiguration',
      type: {
        name: 'Composite',
        className: 'VpnClientConfiguration',
        modelProperties: {
          vpnClientAddressPool: {
            required: false,
            serializedName: 'vpnClientAddressPool',
            type: {
              name: 'Composite',
              className: 'AddressSpace'
            }
          },
          vpnClientRootCertificates: {
            required: false,
            serializedName: 'vpnClientRootCertificates',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'VpnClientRootCertificateElementType',
                  type: {
                    name: 'Composite',
                    className: 'VpnClientRootCertificate'
                  }
              }
            }
          },
          vpnClientRevokedCertificates: {
            required: false,
            serializedName: 'vpnClientRevokedCertificates',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'VpnClientRevokedCertificateElementType',
                  type: {
                    name: 'Composite',
                    className: 'VpnClientRevokedCertificate'
                  }
              }
            }
          },
          vpnClientProtocols: {
            required: false,
            serializedName: 'vpnClientProtocols',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          vpnClientIpsecPolicies: {
            required: false,
            serializedName: 'vpnClientIpsecPolicies',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'IpsecPolicyElementType',
                  type: {
                    name: 'Composite',
                    className: 'IpsecPolicy'
                  }
              }
            }
          },
          radiusServerAddress: {
            required: false,
            serializedName: 'radiusServerAddress',
            type: {
              name: 'String'
            }
          },
          radiusServerSecret: {
            required: false,
            serializedName: 'radiusServerSecret',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = VpnClientConfiguration;

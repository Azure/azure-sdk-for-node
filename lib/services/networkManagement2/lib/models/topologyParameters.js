/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Parameters that define the representation of topology.
 *
 */
class TopologyParameters {
  /**
   * Create a TopologyParameters.
   * @member {string} [targetResourceGroupName] The name of the target resource
   * group to perform topology on.
   * @member {object} [targetVirtualNetwork] The reference of the Virtual
   * Network resource.
   * @member {string} [targetVirtualNetwork.id] Resource ID.
   * @member {object} [targetSubnet] The reference of the Subnet resource.
   * @member {string} [targetSubnet.id] Resource ID.
   */
  constructor() {
  }

  /**
   * Defines the metadata of TopologyParameters
   *
   * @returns {object} metadata of TopologyParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TopologyParameters',
      type: {
        name: 'Composite',
        className: 'TopologyParameters',
        modelProperties: {
          targetResourceGroupName: {
            required: false,
            serializedName: 'targetResourceGroupName',
            type: {
              name: 'String'
            }
          },
          targetVirtualNetwork: {
            required: false,
            serializedName: 'targetVirtualNetwork',
            type: {
              name: 'Composite',
              className: 'SubResource'
            }
          },
          targetSubnet: {
            required: false,
            serializedName: 'targetSubnet',
            type: {
              name: 'Composite',
              className: 'SubResource'
            }
          }
        }
      }
    };
  }
}

module.exports = TopologyParameters;

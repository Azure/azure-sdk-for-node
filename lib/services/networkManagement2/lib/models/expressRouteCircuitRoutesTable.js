/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitRoutesTable class.
 * @constructor
 * The routes table associated with the ExpressRouteCircuit
 * @member {string} [addressPrefix] Gets AddressPrefix.
 * 
 * @member {string} nextHopType Gets NextHopType. Possible values for this
 * property include: 'VirtualNetworkGateway', 'VnetLocal', 'Internet',
 * 'VirtualAppliance', 'None'.
 * 
 * @member {string} [nextHopIP] Gets NextHopIP.
 * 
 * @member {string} [asPath] Gets AsPath.
 * 
 */
function ExpressRouteCircuitRoutesTable(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.addressPrefix !== undefined) {
      this.addressPrefix = parameters.addressPrefix;
    }
    if (parameters.nextHopType !== undefined) {
      this.nextHopType = parameters.nextHopType;
    }
    if (parameters.nextHopIP !== undefined) {
      this.nextHopIP = parameters.nextHopIP;
    }
    if (parameters.asPath !== undefined) {
      this.asPath = parameters.asPath;
    }
  }    
}


/**
 * Validate the payload against the ExpressRouteCircuitRoutesTable schema
 *
 * @param {JSON} payload
 *
 */
ExpressRouteCircuitRoutesTable.prototype.serialize = function () {
  var payload = {};
  if (this['addressPrefix'] !== null && this['addressPrefix'] !== undefined) {
    if (typeof this['addressPrefix'].valueOf() !== 'string') {
      throw new Error('this[\'addressPrefix\'] must be of type string.');
    }
    payload['addressPrefix'] = this['addressPrefix'];
  }

  if (this['nextHopType'] === null || this['nextHopType'] === undefined || typeof this['nextHopType'].valueOf() !== 'string') {
    throw new Error('this[\'nextHopType\'] cannot be null or undefined and it must be of type string.');
  }
  payload['nextHopType'] = this['nextHopType'];

  if (this['nextHopIP'] !== null && this['nextHopIP'] !== undefined) {
    if (typeof this['nextHopIP'].valueOf() !== 'string') {
      throw new Error('this[\'nextHopIP\'] must be of type string.');
    }
    payload['nextHopIP'] = this['nextHopIP'];
  }

  if (this['asPath'] !== null && this['asPath'] !== undefined) {
    if (typeof this['asPath'].valueOf() !== 'string') {
      throw new Error('this[\'asPath\'] must be of type string.');
    }
    payload['asPath'] = this['asPath'];
  }

  return payload;
};

/**
 * Deserialize the instance to ExpressRouteCircuitRoutesTable schema
 *
 * @param {JSON} instance
 *
 */
ExpressRouteCircuitRoutesTable.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['addressPrefix'] !== undefined) {
      this['addressPrefix'] = instance['addressPrefix'];
    }

    if (instance['nextHopType'] !== undefined) {
      this['nextHopType'] = instance['nextHopType'];
    }

    if (instance['nextHopIP'] !== undefined) {
      this['nextHopIP'] = instance['nextHopIP'];
    }

    if (instance['asPath'] !== undefined) {
      this['asPath'] = instance['asPath'];
    }
  }

  return this;
};

module.exports = ExpressRouteCircuitRoutesTable;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Application Gateway Ssl policy.
 *
 */
class ApplicationGatewaySslPolicy {
  /**
   * Create a ApplicationGatewaySslPolicy.
   * @member {array} [disabledSslProtocols] Ssl protocols to be disabled on
   * application gateway.
   * @member {string} [policyType] Type of Ssl Policy. Possible values include:
   * 'Predefined', 'Custom'
   * @member {string} [policyName] Name of Ssl predefined policy. Possible
   * values include: 'AppGwSslPolicy20150501', 'AppGwSslPolicy20170401',
   * 'AppGwSslPolicy20170401S'
   * @member {array} [cipherSuites] Ssl cipher suites to be enabled in the
   * specified order to application gateway.
   * @member {string} [minProtocolVersion] Minimum version of Ssl protocol to
   * be supported on application gateway. Possible values include: 'TLSv1_0',
   * 'TLSv1_1', 'TLSv1_2'
   */
  constructor() {
  }

  /**
   * Defines the metadata of ApplicationGatewaySslPolicy
   *
   * @returns {object} metadata of ApplicationGatewaySslPolicy
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ApplicationGatewaySslPolicy',
      type: {
        name: 'Composite',
        className: 'ApplicationGatewaySslPolicy',
        modelProperties: {
          disabledSslProtocols: {
            required: false,
            serializedName: 'disabledSslProtocols',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          policyType: {
            required: false,
            serializedName: 'policyType',
            type: {
              name: 'String'
            }
          },
          policyName: {
            required: false,
            serializedName: 'policyName',
            type: {
              name: 'String'
            }
          },
          cipherSuites: {
            required: false,
            serializedName: 'cipherSuites',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          minProtocolVersion: {
            required: false,
            serializedName: 'minProtocolVersion',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ApplicationGatewaySslPolicy;

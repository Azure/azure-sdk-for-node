/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the ResourceNavigationLink class.
 * @constructor
 * ResourceNavigationLink resource
 *
 * @member {string} [linkedResourceType] Resource type of the linked resource
 * 
 * @member {string} [link] Link to the external resource
 * 
 * @member {string} [provisioningState] Provisioning state of the
 * ResourceNavigationLink resource
 * 
 * @member {string} [name] Name of the resource that is unique within a
 * resource group. This name can be used to access the resource
 * 
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated
 * 
 */
function ResourceNavigationLink() {
  ResourceNavigationLink['super_'].call(this);
}

util.inherits(ResourceNavigationLink, models['SubResource']);

/**
 * Defines the metadata of ResourceNavigationLink
 *
 * @returns {object} metadata of ResourceNavigationLink
 *
 */
ResourceNavigationLink.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'ResourceNavigationLink',
    type: {
      name: 'Composite',
      className: 'ResourceNavigationLink',
      modelProperties: {
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        linkedResourceType: {
          required: false,
          serializedName: 'properties.linkedResourceType',
          type: {
            name: 'String'
          }
        },
        link: {
          required: false,
          serializedName: 'properties.link',
          type: {
            name: 'String'
          }
        },
        provisioningState: {
          required: false,
          readOnly: true,
          serializedName: 'properties.provisioningState',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        etag: {
          required: false,
          readOnly: true,
          serializedName: 'etag',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = ResourceNavigationLink;

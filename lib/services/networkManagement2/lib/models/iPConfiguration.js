/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * IP configuration
 *
 * @extends models['SubResource']
 */
class IPConfiguration extends models['SubResource'] {
  /**
   * Create a IPConfiguration.
   * @member {string} [privateIPAddress] The private IP address of the IP
   * configuration.
   * @member {string} [privateIPAllocationMethod] The private IP allocation
   * method. Possible values are 'Static' and 'Dynamic'. Possible values
   * include: 'Static', 'Dynamic'
   * @member {object} [subnet] The reference of the subnet resource.
   * @member {string} [subnet.addressPrefix] The address prefix for the subnet.
   * @member {object} [subnet.networkSecurityGroup] The reference of the
   * NetworkSecurityGroup resource.
   * @member {array} [subnet.networkSecurityGroup.securityRules] A collection
   * of security rules of the network security group.
   * @member {array} [subnet.networkSecurityGroup.defaultSecurityRules] The
   * default security rules of network security group.
   * @member {array} [subnet.networkSecurityGroup.networkInterfaces] A
   * collection of references to network interfaces.
   * @member {array} [subnet.networkSecurityGroup.subnets] A collection of
   * references to subnets.
   * @member {string} [subnet.networkSecurityGroup.resourceGuid] The resource
   * GUID property of the network security group resource.
   * @member {string} [subnet.networkSecurityGroup.provisioningState] The
   * provisioning state of the public IP resource. Possible values are:
   * 'Updating', 'Deleting', and 'Failed'.
   * @member {string} [subnet.networkSecurityGroup.etag] A unique read-only
   * string that changes whenever the resource is updated.
   * @member {object} [subnet.routeTable] The reference of the RouteTable
   * resource.
   * @member {array} [subnet.routeTable.routes] Collection of routes contained
   * within a route table.
   * @member {array} [subnet.routeTable.subnets] A collection of references to
   * subnets.
   * @member {boolean} [subnet.routeTable.disableBgpRoutePropagation] Gets or
   * sets whether to disable the routes learned by BGP on that route table.
   * True means disable.
   * @member {string} [subnet.routeTable.provisioningState] The provisioning
   * state of the resource. Possible values are: 'Updating', 'Deleting', and
   * 'Failed'.
   * @member {string} [subnet.routeTable.etag] Gets a unique read-only string
   * that changes whenever the resource is updated.
   * @member {array} [subnet.serviceEndpoints] An array of service endpoints.
   * @member {array} [subnet.ipConfigurations] Gets an array of references to
   * the network interface IP configurations using subnet.
   * @member {array} [subnet.resourceNavigationLinks] Gets an array of
   * references to the external resources using subnet.
   * @member {string} [subnet.provisioningState] The provisioning state of the
   * resource.
   * @member {string} [subnet.name] The name of the resource that is unique
   * within a resource group. This name can be used to access the resource.
   * @member {string} [subnet.etag] A unique read-only string that changes
   * whenever the resource is updated.
   * @member {object} [publicIPAddress] The reference of the public IP
   * resource.
   * @member {object} [publicIPAddress.sku] The public IP address SKU.
   * @member {string} [publicIPAddress.sku.name] Name of a public IP address
   * SKU. Possible values include: 'Basic', 'Standard'
   * @member {string} [publicIPAddress.publicIPAllocationMethod] The public IP
   * allocation method. Possible values are: 'Static' and 'Dynamic'. Possible
   * values include: 'Static', 'Dynamic'
   * @member {string} [publicIPAddress.publicIPAddressVersion] The public IP
   * address version. Possible values are: 'IPv4' and 'IPv6'. Possible values
   * include: 'IPv4', 'IPv6'
   * @member {object} [publicIPAddress.ipConfiguration] The IP configuration
   * associated with the public IP address.
   * @member {object} [publicIPAddress.dnsSettings] The FQDN of the DNS record
   * associated with the public IP address.
   * @member {string} [publicIPAddress.dnsSettings.domainNameLabel] Gets or
   * sets the Domain name label.The concatenation of the domain name label and
   * the regionalized DNS zone make up the fully qualified domain name
   * associated with the public IP address. If a domain name label is
   * specified, an A DNS record is created for the public IP in the Microsoft
   * Azure DNS system.
   * @member {string} [publicIPAddress.dnsSettings.fqdn] Gets the FQDN, Fully
   * qualified domain name of the A DNS record associated with the public IP.
   * This is the concatenation of the domainNameLabel and the regionalized DNS
   * zone.
   * @member {string} [publicIPAddress.dnsSettings.reverseFqdn] Gets or Sets
   * the Reverse FQDN. A user-visible, fully qualified domain name that
   * resolves to this public IP address. If the reverseFqdn is specified, then
   * a PTR DNS record is created pointing from the IP address in the
   * in-addr.arpa domain to the reverse FQDN.
   * @member {array} [publicIPAddress.ipTags] The list of tags associated with
   * the public IP address.
   * @member {string} [publicIPAddress.ipAddress] The IP address associated
   * with the public IP address resource.
   * @member {number} [publicIPAddress.idleTimeoutInMinutes] The idle timeout
   * of the public IP address.
   * @member {string} [publicIPAddress.resourceGuid] The resource GUID property
   * of the public IP resource.
   * @member {string} [publicIPAddress.provisioningState] The provisioning
   * state of the PublicIP resource. Possible values are: 'Updating',
   * 'Deleting', and 'Failed'.
   * @member {string} [publicIPAddress.etag] A unique read-only string that
   * changes whenever the resource is updated.
   * @member {array} [publicIPAddress.zones] A list of availability zones
   * denoting the IP allocated for the resource needs to come from.
   * @member {string} [provisioningState] Gets the provisioning state of the
   * public IP resource. Possible values are: 'Updating', 'Deleting', and
   * 'Failed'.
   * @member {string} [name] The name of the resource that is unique within a
   * resource group. This name can be used to access the resource.
   * @member {string} [etag] A unique read-only string that changes whenever
   * the resource is updated.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of IPConfiguration
   *
   * @returns {object} metadata of IPConfiguration
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IPConfiguration',
      type: {
        name: 'Composite',
        className: 'IPConfiguration',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          privateIPAddress: {
            required: false,
            serializedName: 'properties.privateIPAddress',
            type: {
              name: 'String'
            }
          },
          privateIPAllocationMethod: {
            required: false,
            serializedName: 'properties.privateIPAllocationMethod',
            type: {
              name: 'String'
            }
          },
          subnet: {
            required: false,
            serializedName: 'properties.subnet',
            type: {
              name: 'Composite',
              className: 'Subnet'
            }
          },
          publicIPAddress: {
            required: false,
            serializedName: 'properties.publicIPAddress',
            type: {
              name: 'Composite',
              className: 'PublicIPAddress'
            }
          },
          provisioningState: {
            required: false,
            serializedName: 'properties.provisioningState',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          etag: {
            required: false,
            serializedName: 'etag',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = IPConfiguration;

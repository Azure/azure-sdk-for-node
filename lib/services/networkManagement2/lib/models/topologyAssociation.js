/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Resources that have an association with the parent resource.
 *
 */
class TopologyAssociation {
  /**
   * Create a TopologyAssociation.
   * @member {string} [name] The name of the resource that is associated with
   * the parent resource.
   * @member {string} [resourceId] The ID of the resource that is associated
   * with the parent resource.
   * @member {string} [associationType] The association type of the child
   * resource to the parent resource. Possible values include: 'Associated',
   * 'Contains'
   */
  constructor() {
  }

  /**
   * Defines the metadata of TopologyAssociation
   *
   * @returns {object} metadata of TopologyAssociation
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TopologyAssociation',
      type: {
        name: 'Composite',
        className: 'TopologyAssociation',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          resourceId: {
            required: false,
            serializedName: 'resourceId',
            type: {
              name: 'String'
            }
          },
          associationType: {
            required: false,
            serializedName: 'associationType',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = TopologyAssociation;

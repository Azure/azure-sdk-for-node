/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the VirtualNetworkGatewayConnection class.
 * @constructor
 * A common class for general resource information
 *
 * @member {string} [authorizationKey] The authorizationKey.
 * 
 * @member {object} [virtualNetworkGateway1]
 * 
 * @member {array} [virtualNetworkGateway1.ipConfigurations] IpConfigurations
 * for Virtual network gateway.
 * 
 * @member {string} [virtualNetworkGateway1.gatewayType] The type of this
 * virtual network gateway. Possible values include: 'Vpn', 'ExpressRoute'
 * 
 * @member {string} [virtualNetworkGateway1.vpnType] The type of this virtual
 * network gateway. Possible values include: 'PolicyBased', 'RouteBased'
 * 
 * @member {boolean} [virtualNetworkGateway1.enableBgp] EnableBgp Flag
 * 
 * @member {boolean} [virtualNetworkGateway1.activeActive] ActiveActive flag
 * 
 * @member {object} [virtualNetworkGateway1.gatewayDefaultSite] Gets or sets
 * the reference of the LocalNetworkGateway resource which represents Local
 * network site having default routes. Assign Null value in case of removing
 * existing default site setting.
 * 
 * @member {string} [virtualNetworkGateway1.gatewayDefaultSite.id] Resource Id
 * 
 * @member {object} [virtualNetworkGateway1.sku] Gets or sets the reference of
 * the VirtualNetworkGatewaySku resource which represents the sku selected
 * for Virtual network gateway.
 * 
 * @member {string} [virtualNetworkGateway1.sku.name] Gateway sku name
 * -Basic/HighPerformance/Standard/UltraPerformance. Possible values include:
 * 'Basic', 'HighPerformance', 'Standard', 'UltraPerformance'
 * 
 * @member {string} [virtualNetworkGateway1.sku.tier] Gateway sku tier
 * -Basic/HighPerformance/Standard/UltraPerformance. Possible values include:
 * 'Basic', 'HighPerformance', 'Standard', 'UltraPerformance'
 * 
 * @member {number} [virtualNetworkGateway1.sku.capacity] The capacity
 * 
 * @member {object} [virtualNetworkGateway1.vpnClientConfiguration] Gets or
 * sets the reference of the VpnClientConfiguration resource which represents
 * the P2S VpnClient configurations.
 * 
 * @member {object}
 * [virtualNetworkGateway1.vpnClientConfiguration.vpnClientAddressPool] Gets
 * or sets the reference of the Address space resource which represents
 * Address space for P2S VpnClient.
 * 
 * @member {array}
 * [virtualNetworkGateway1.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes]
 * Gets or sets list of address blocks reserved for this virtual network in
 * CIDR notation
 * 
 * @member {array}
 * [virtualNetworkGateway1.vpnClientConfiguration.vpnClientRootCertificates]
 * VpnClientRootCertificate for Virtual network gateway.
 * 
 * @member {array}
 * [virtualNetworkGateway1.vpnClientConfiguration.vpnClientRevokedCertificates]
 * VpnClientRevokedCertificate for Virtual network gateway.
 * 
 * @member {object} [virtualNetworkGateway1.bgpSettings] Virtual network
 * gateway's BGP speaker settings
 * 
 * @member {number} [virtualNetworkGateway1.bgpSettings.asn] Gets or sets this
 * BGP speaker's ASN
 * 
 * @member {string} [virtualNetworkGateway1.bgpSettings.bgpPeeringAddress]
 * Gets or sets the BGP peering address and BGP identifier of this BGP speaker
 * 
 * @member {number} [virtualNetworkGateway1.bgpSettings.peerWeight] Gets or
 * sets the weight added to routes learned from this BGP speaker
 * 
 * @member {string} [virtualNetworkGateway1.resourceGuid] Gets or sets
 * resource guid property of the VirtualNetworkGateway resource
 * 
 * @member {string} [virtualNetworkGateway1.provisioningState] Gets
 * provisioning state of the VirtualNetworkGateway resource
 * Updating/Deleting/Failed
 * 
 * @member {string} [virtualNetworkGateway1.etag] Gets a unique read-only
 * string that changes whenever the resource is updated
 * 
 * @member {object} [virtualNetworkGateway2]
 * 
 * @member {array} [virtualNetworkGateway2.ipConfigurations] IpConfigurations
 * for Virtual network gateway.
 * 
 * @member {string} [virtualNetworkGateway2.gatewayType] The type of this
 * virtual network gateway. Possible values include: 'Vpn', 'ExpressRoute'
 * 
 * @member {string} [virtualNetworkGateway2.vpnType] The type of this virtual
 * network gateway. Possible values include: 'PolicyBased', 'RouteBased'
 * 
 * @member {boolean} [virtualNetworkGateway2.enableBgp] EnableBgp Flag
 * 
 * @member {boolean} [virtualNetworkGateway2.activeActive] ActiveActive flag
 * 
 * @member {object} [virtualNetworkGateway2.gatewayDefaultSite] Gets or sets
 * the reference of the LocalNetworkGateway resource which represents Local
 * network site having default routes. Assign Null value in case of removing
 * existing default site setting.
 * 
 * @member {string} [virtualNetworkGateway2.gatewayDefaultSite.id] Resource Id
 * 
 * @member {object} [virtualNetworkGateway2.sku] Gets or sets the reference of
 * the VirtualNetworkGatewaySku resource which represents the sku selected
 * for Virtual network gateway.
 * 
 * @member {string} [virtualNetworkGateway2.sku.name] Gateway sku name
 * -Basic/HighPerformance/Standard/UltraPerformance. Possible values include:
 * 'Basic', 'HighPerformance', 'Standard', 'UltraPerformance'
 * 
 * @member {string} [virtualNetworkGateway2.sku.tier] Gateway sku tier
 * -Basic/HighPerformance/Standard/UltraPerformance. Possible values include:
 * 'Basic', 'HighPerformance', 'Standard', 'UltraPerformance'
 * 
 * @member {number} [virtualNetworkGateway2.sku.capacity] The capacity
 * 
 * @member {object} [virtualNetworkGateway2.vpnClientConfiguration] Gets or
 * sets the reference of the VpnClientConfiguration resource which represents
 * the P2S VpnClient configurations.
 * 
 * @member {object}
 * [virtualNetworkGateway2.vpnClientConfiguration.vpnClientAddressPool] Gets
 * or sets the reference of the Address space resource which represents
 * Address space for P2S VpnClient.
 * 
 * @member {array}
 * [virtualNetworkGateway2.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes]
 * Gets or sets list of address blocks reserved for this virtual network in
 * CIDR notation
 * 
 * @member {array}
 * [virtualNetworkGateway2.vpnClientConfiguration.vpnClientRootCertificates]
 * VpnClientRootCertificate for Virtual network gateway.
 * 
 * @member {array}
 * [virtualNetworkGateway2.vpnClientConfiguration.vpnClientRevokedCertificates]
 * VpnClientRevokedCertificate for Virtual network gateway.
 * 
 * @member {object} [virtualNetworkGateway2.bgpSettings] Virtual network
 * gateway's BGP speaker settings
 * 
 * @member {number} [virtualNetworkGateway2.bgpSettings.asn] Gets or sets this
 * BGP speaker's ASN
 * 
 * @member {string} [virtualNetworkGateway2.bgpSettings.bgpPeeringAddress]
 * Gets or sets the BGP peering address and BGP identifier of this BGP speaker
 * 
 * @member {number} [virtualNetworkGateway2.bgpSettings.peerWeight] Gets or
 * sets the weight added to routes learned from this BGP speaker
 * 
 * @member {string} [virtualNetworkGateway2.resourceGuid] Gets or sets
 * resource guid property of the VirtualNetworkGateway resource
 * 
 * @member {string} [virtualNetworkGateway2.provisioningState] Gets
 * provisioning state of the VirtualNetworkGateway resource
 * Updating/Deleting/Failed
 * 
 * @member {string} [virtualNetworkGateway2.etag] Gets a unique read-only
 * string that changes whenever the resource is updated
 * 
 * @member {object} [localNetworkGateway2]
 * 
 * @member {object} [localNetworkGateway2.localNetworkAddressSpace] Local
 * network site Address space
 * 
 * @member {array}
 * [localNetworkGateway2.localNetworkAddressSpace.addressPrefixes] Gets or
 * sets list of address blocks reserved for this virtual network in CIDR
 * notation
 * 
 * @member {string} [localNetworkGateway2.gatewayIpAddress] IP address of
 * local network gateway.
 * 
 * @member {object} [localNetworkGateway2.bgpSettings] Local network gateway's
 * BGP speaker settings
 * 
 * @member {number} [localNetworkGateway2.bgpSettings.asn] Gets or sets this
 * BGP speaker's ASN
 * 
 * @member {string} [localNetworkGateway2.bgpSettings.bgpPeeringAddress] Gets
 * or sets the BGP peering address and BGP identifier of this BGP speaker
 * 
 * @member {number} [localNetworkGateway2.bgpSettings.peerWeight] Gets or sets
 * the weight added to routes learned from this BGP speaker
 * 
 * @member {string} [localNetworkGateway2.resourceGuid] Gets or sets resource
 * guid property of the LocalNetworkGateway resource
 * 
 * @member {string} [localNetworkGateway2.provisioningState] Gets provisioning
 * state of the LocalNetworkGateway resource Updating/Deleting/Failed
 * 
 * @member {string} [localNetworkGateway2.etag] Gets a unique read-only string
 * that changes whenever the resource is updated
 * 
 * @member {string} [connectionType] Gateway connection type
 * -Ipsec/Dedicated/VpnClient/Vnet2Vnet. Possible values include: 'IPsec',
 * 'Vnet2Vnet', 'ExpressRoute', 'VPNClient'
 * 
 * @member {number} [routingWeight] The Routing weight.
 * 
 * @member {string} [sharedKey] The Ipsec share key.
 * 
 * @member {string} [connectionStatus] Virtual network Gateway connection
 * status. Possible values include: 'Unknown', 'Connecting', 'Connected',
 * 'NotConnected'
 * 
 * @member {number} [egressBytesTransferred] The Egress Bytes Transferred in
 * this connection
 * 
 * @member {number} [ingressBytesTransferred] The Ingress Bytes Transferred in
 * this connection
 * 
 * @member {object} [peer] The reference to peerings resource.
 * 
 * @member {string} [peer.id] Resource Id
 * 
 * @member {boolean} [enableBgp] EnableBgp Flag
 * 
 * @member {string} [resourceGuid] Gets or sets resource guid property of the
 * VirtualNetworkGatewayConnection resource
 * 
 * @member {string} [provisioningState] Gets provisioning state of the
 * VirtualNetworkGatewayConnection resource Updating/Deleting/Failed
 * 
 * @member {string} [etag] Gets a unique read-only string that changes
 * whenever the resource is updated
 * 
 */
function VirtualNetworkGatewayConnection() {
  VirtualNetworkGatewayConnection['super_'].call(this);
}

util.inherits(VirtualNetworkGatewayConnection, models['Resource']);

/**
 * Defines the metadata of VirtualNetworkGatewayConnection
 *
 * @returns {object} metadata of VirtualNetworkGatewayConnection
 *
 */
VirtualNetworkGatewayConnection.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'VirtualNetworkGatewayConnection',
    type: {
      name: 'Composite',
      className: 'VirtualNetworkGatewayConnection',
      modelProperties: {
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          readOnly: true,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          readOnly: true,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        location: {
          required: false,
          serializedName: 'location',
          type: {
            name: 'String'
          }
        },
        tags: {
          required: false,
          serializedName: 'tags',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        authorizationKey: {
          required: false,
          serializedName: 'properties.authorizationKey',
          type: {
            name: 'String'
          }
        },
        virtualNetworkGateway1: {
          required: false,
          serializedName: 'properties.virtualNetworkGateway1',
          type: {
            name: 'Composite',
            className: 'VirtualNetworkGateway'
          }
        },
        virtualNetworkGateway2: {
          required: false,
          serializedName: 'properties.virtualNetworkGateway2',
          type: {
            name: 'Composite',
            className: 'VirtualNetworkGateway'
          }
        },
        localNetworkGateway2: {
          required: false,
          serializedName: 'properties.localNetworkGateway2',
          type: {
            name: 'Composite',
            className: 'LocalNetworkGateway'
          }
        },
        connectionType: {
          required: false,
          serializedName: 'properties.connectionType',
          type: {
            name: 'String'
          }
        },
        routingWeight: {
          required: false,
          serializedName: 'properties.routingWeight',
          type: {
            name: 'Number'
          }
        },
        sharedKey: {
          required: false,
          serializedName: 'properties.sharedKey',
          type: {
            name: 'String'
          }
        },
        connectionStatus: {
          required: false,
          serializedName: 'properties.connectionStatus',
          type: {
            name: 'String'
          }
        },
        egressBytesTransferred: {
          required: false,
          serializedName: 'properties.egressBytesTransferred',
          type: {
            name: 'Number'
          }
        },
        ingressBytesTransferred: {
          required: false,
          serializedName: 'properties.ingressBytesTransferred',
          type: {
            name: 'Number'
          }
        },
        peer: {
          required: false,
          serializedName: 'properties.peer',
          type: {
            name: 'Composite',
            className: 'SubResource'
          }
        },
        enableBgp: {
          required: false,
          serializedName: 'properties.enableBgp',
          type: {
            name: 'Boolean'
          }
        },
        resourceGuid: {
          required: false,
          serializedName: 'properties.resourceGuid',
          type: {
            name: 'String'
          }
        },
        provisioningState: {
          required: false,
          serializedName: 'properties.provisioningState',
          type: {
            name: 'String'
          }
        },
        etag: {
          required: false,
          serializedName: 'etag',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = VirtualNetworkGatewayConnection;

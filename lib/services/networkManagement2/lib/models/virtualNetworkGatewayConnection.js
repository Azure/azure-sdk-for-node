/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * A common class for general resource information
 *
 * @extends models['Resource']
 */
class VirtualNetworkGatewayConnection extends models['Resource'] {
  /**
   * Create a VirtualNetworkGatewayConnection.
   * @member {string} [authorizationKey] The authorizationKey.
   * @member {object} virtualNetworkGateway1 The reference to virtual network
   * gateway resource.
   * @member {array} [virtualNetworkGateway1.ipConfigurations] IP
   * configurations for virtual network gateway.
   * @member {string} [virtualNetworkGateway1.gatewayType] The type of this
   * virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
   * Possible values include: 'Vpn', 'ExpressRoute'
   * @member {string} [virtualNetworkGateway1.vpnType] The type of this virtual
   * network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
   * Possible values include: 'PolicyBased', 'RouteBased'
   * @member {boolean} [virtualNetworkGateway1.enableBgp] Whether BGP is
   * enabled for this virtual network gateway or not.
   * @member {boolean} [virtualNetworkGateway1.activeActive] ActiveActive flag
   * @member {object} [virtualNetworkGateway1.gatewayDefaultSite] The reference
   * of the LocalNetworkGateway resource which represents local network site
   * having default routes. Assign Null value in case of removing existing
   * default site setting.
   * @member {string} [virtualNetworkGateway1.gatewayDefaultSite.id] Resource
   * ID.
   * @member {object} [virtualNetworkGateway1.sku] The reference of the
   * VirtualNetworkGatewaySku resource which represents the SKU selected for
   * Virtual network gateway.
   * @member {string} [virtualNetworkGateway1.sku.name] Gateway SKU name.
   * Possible values include: 'Basic', 'HighPerformance', 'Standard',
   * 'UltraPerformance', 'VpnGw1', 'VpnGw2', 'VpnGw3'
   * @member {string} [virtualNetworkGateway1.sku.tier] Gateway SKU tier.
   * Possible values include: 'Basic', 'HighPerformance', 'Standard',
   * 'UltraPerformance', 'VpnGw1', 'VpnGw2', 'VpnGw3'
   * @member {number} [virtualNetworkGateway1.sku.capacity] The capacity.
   * @member {object} [virtualNetworkGateway1.vpnClientConfiguration] The
   * reference of the VpnClientConfiguration resource which represents the P2S
   * VpnClient configurations.
   * @member {object}
   * [virtualNetworkGateway1.vpnClientConfiguration.vpnClientAddressPool] The
   * reference of the address space resource which represents Address space for
   * P2S VpnClient.
   * @member {array}
   * [virtualNetworkGateway1.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes]
   * A list of address blocks reserved for this virtual network in CIDR
   * notation.
   * @member {array}
   * [virtualNetworkGateway1.vpnClientConfiguration.vpnClientRootCertificates]
   * VpnClientRootCertificate for virtual network gateway.
   * @member {array}
   * [virtualNetworkGateway1.vpnClientConfiguration.vpnClientRevokedCertificates]
   * VpnClientRevokedCertificate for Virtual network gateway.
   * @member {array}
   * [virtualNetworkGateway1.vpnClientConfiguration.vpnClientProtocols]
   * VpnClientProtocols for Virtual network gateway.
   * @member {array}
   * [virtualNetworkGateway1.vpnClientConfiguration.vpnClientIpsecPolicies]
   * VpnClientIpsecPolicies for virtual network gateway P2S client.
   * @member {string}
   * [virtualNetworkGateway1.vpnClientConfiguration.radiusServerAddress] The
   * radius server address property of the VirtualNetworkGateway resource for
   * vpn client connection.
   * @member {string}
   * [virtualNetworkGateway1.vpnClientConfiguration.radiusServerSecret] The
   * radius secret property of the VirtualNetworkGateway resource for vpn
   * client connection.
   * @member {object} [virtualNetworkGateway1.bgpSettings] Virtual network
   * gateway's BGP speaker settings.
   * @member {number} [virtualNetworkGateway1.bgpSettings.asn] The BGP
   * speaker's ASN.
   * @member {string} [virtualNetworkGateway1.bgpSettings.bgpPeeringAddress]
   * The BGP peering address and BGP identifier of this BGP speaker.
   * @member {number} [virtualNetworkGateway1.bgpSettings.peerWeight] The
   * weight added to routes learned from this BGP speaker.
   * @member {string} [virtualNetworkGateway1.resourceGuid] The resource GUID
   * property of the VirtualNetworkGateway resource.
   * @member {string} [virtualNetworkGateway1.provisioningState] The
   * provisioning state of the VirtualNetworkGateway resource. Possible values
   * are: 'Updating', 'Deleting', and 'Failed'.
   * @member {string} [virtualNetworkGateway1.etag] Gets a unique read-only
   * string that changes whenever the resource is updated.
   * @member {object} [virtualNetworkGateway2] The reference to virtual network
   * gateway resource.
   * @member {array} [virtualNetworkGateway2.ipConfigurations] IP
   * configurations for virtual network gateway.
   * @member {string} [virtualNetworkGateway2.gatewayType] The type of this
   * virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
   * Possible values include: 'Vpn', 'ExpressRoute'
   * @member {string} [virtualNetworkGateway2.vpnType] The type of this virtual
   * network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
   * Possible values include: 'PolicyBased', 'RouteBased'
   * @member {boolean} [virtualNetworkGateway2.enableBgp] Whether BGP is
   * enabled for this virtual network gateway or not.
   * @member {boolean} [virtualNetworkGateway2.activeActive] ActiveActive flag
   * @member {object} [virtualNetworkGateway2.gatewayDefaultSite] The reference
   * of the LocalNetworkGateway resource which represents local network site
   * having default routes. Assign Null value in case of removing existing
   * default site setting.
   * @member {string} [virtualNetworkGateway2.gatewayDefaultSite.id] Resource
   * ID.
   * @member {object} [virtualNetworkGateway2.sku] The reference of the
   * VirtualNetworkGatewaySku resource which represents the SKU selected for
   * Virtual network gateway.
   * @member {string} [virtualNetworkGateway2.sku.name] Gateway SKU name.
   * Possible values include: 'Basic', 'HighPerformance', 'Standard',
   * 'UltraPerformance', 'VpnGw1', 'VpnGw2', 'VpnGw3'
   * @member {string} [virtualNetworkGateway2.sku.tier] Gateway SKU tier.
   * Possible values include: 'Basic', 'HighPerformance', 'Standard',
   * 'UltraPerformance', 'VpnGw1', 'VpnGw2', 'VpnGw3'
   * @member {number} [virtualNetworkGateway2.sku.capacity] The capacity.
   * @member {object} [virtualNetworkGateway2.vpnClientConfiguration] The
   * reference of the VpnClientConfiguration resource which represents the P2S
   * VpnClient configurations.
   * @member {object}
   * [virtualNetworkGateway2.vpnClientConfiguration.vpnClientAddressPool] The
   * reference of the address space resource which represents Address space for
   * P2S VpnClient.
   * @member {array}
   * [virtualNetworkGateway2.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes]
   * A list of address blocks reserved for this virtual network in CIDR
   * notation.
   * @member {array}
   * [virtualNetworkGateway2.vpnClientConfiguration.vpnClientRootCertificates]
   * VpnClientRootCertificate for virtual network gateway.
   * @member {array}
   * [virtualNetworkGateway2.vpnClientConfiguration.vpnClientRevokedCertificates]
   * VpnClientRevokedCertificate for Virtual network gateway.
   * @member {array}
   * [virtualNetworkGateway2.vpnClientConfiguration.vpnClientProtocols]
   * VpnClientProtocols for Virtual network gateway.
   * @member {array}
   * [virtualNetworkGateway2.vpnClientConfiguration.vpnClientIpsecPolicies]
   * VpnClientIpsecPolicies for virtual network gateway P2S client.
   * @member {string}
   * [virtualNetworkGateway2.vpnClientConfiguration.radiusServerAddress] The
   * radius server address property of the VirtualNetworkGateway resource for
   * vpn client connection.
   * @member {string}
   * [virtualNetworkGateway2.vpnClientConfiguration.radiusServerSecret] The
   * radius secret property of the VirtualNetworkGateway resource for vpn
   * client connection.
   * @member {object} [virtualNetworkGateway2.bgpSettings] Virtual network
   * gateway's BGP speaker settings.
   * @member {number} [virtualNetworkGateway2.bgpSettings.asn] The BGP
   * speaker's ASN.
   * @member {string} [virtualNetworkGateway2.bgpSettings.bgpPeeringAddress]
   * The BGP peering address and BGP identifier of this BGP speaker.
   * @member {number} [virtualNetworkGateway2.bgpSettings.peerWeight] The
   * weight added to routes learned from this BGP speaker.
   * @member {string} [virtualNetworkGateway2.resourceGuid] The resource GUID
   * property of the VirtualNetworkGateway resource.
   * @member {string} [virtualNetworkGateway2.provisioningState] The
   * provisioning state of the VirtualNetworkGateway resource. Possible values
   * are: 'Updating', 'Deleting', and 'Failed'.
   * @member {string} [virtualNetworkGateway2.etag] Gets a unique read-only
   * string that changes whenever the resource is updated.
   * @member {object} [localNetworkGateway2] The reference to local network
   * gateway resource.
   * @member {object} [localNetworkGateway2.localNetworkAddressSpace] Local
   * network site address space.
   * @member {array}
   * [localNetworkGateway2.localNetworkAddressSpace.addressPrefixes] A list of
   * address blocks reserved for this virtual network in CIDR notation.
   * @member {string} [localNetworkGateway2.gatewayIpAddress] IP address of
   * local network gateway.
   * @member {object} [localNetworkGateway2.bgpSettings] Local network
   * gateway's BGP speaker settings.
   * @member {number} [localNetworkGateway2.bgpSettings.asn] The BGP speaker's
   * ASN.
   * @member {string} [localNetworkGateway2.bgpSettings.bgpPeeringAddress] The
   * BGP peering address and BGP identifier of this BGP speaker.
   * @member {number} [localNetworkGateway2.bgpSettings.peerWeight] The weight
   * added to routes learned from this BGP speaker.
   * @member {string} [localNetworkGateway2.resourceGuid] The resource GUID
   * property of the LocalNetworkGateway resource.
   * @member {string} [localNetworkGateway2.provisioningState] The provisioning
   * state of the LocalNetworkGateway resource. Possible values are:
   * 'Updating', 'Deleting', and 'Failed'.
   * @member {string} [localNetworkGateway2.etag] A unique read-only string
   * that changes whenever the resource is updated.
   * @member {string} connectionType Gateway connection type. Possible values
   * are: 'Ipsec','Vnet2Vnet','ExpressRoute', and 'VPNClient. Possible values
   * include: 'IPsec', 'Vnet2Vnet', 'ExpressRoute', 'VPNClient'
   * @member {number} [routingWeight] The routing weight.
   * @member {string} [sharedKey] The IPSec shared key.
   * @member {string} [connectionStatus] Virtual network Gateway connection
   * status. Possible values are 'Unknown', 'Connecting', 'Connected' and
   * 'NotConnected'. Possible values include: 'Unknown', 'Connecting',
   * 'Connected', 'NotConnected'
   * @member {array} [tunnelConnectionStatus] Collection of all tunnels'
   * connection health status.
   * @member {number} [egressBytesTransferred] The egress bytes transferred in
   * this connection.
   * @member {number} [ingressBytesTransferred] The ingress bytes transferred
   * in this connection.
   * @member {object} [peer] The reference to peerings resource.
   * @member {string} [peer.id] Resource ID.
   * @member {boolean} [enableBgp] EnableBgp flag
   * @member {boolean} [usePolicyBasedTrafficSelectors] Enable policy-based
   * traffic selectors.
   * @member {array} [ipsecPolicies] The IPSec Policies to be considered by
   * this connection.
   * @member {string} [resourceGuid] The resource GUID property of the
   * VirtualNetworkGatewayConnection resource.
   * @member {string} [provisioningState] The provisioning state of the
   * VirtualNetworkGatewayConnection resource. Possible values are: 'Updating',
   * 'Deleting', and 'Failed'.
   * @member {string} [etag] Gets a unique read-only string that changes
   * whenever the resource is updated.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of VirtualNetworkGatewayConnection
   *
   * @returns {object} metadata of VirtualNetworkGatewayConnection
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VirtualNetworkGatewayConnection',
      type: {
        name: 'Composite',
        className: 'VirtualNetworkGatewayConnection',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          authorizationKey: {
            required: false,
            serializedName: 'properties.authorizationKey',
            type: {
              name: 'String'
            }
          },
          virtualNetworkGateway1: {
            required: true,
            serializedName: 'properties.virtualNetworkGateway1',
            type: {
              name: 'Composite',
              className: 'VirtualNetworkGateway'
            }
          },
          virtualNetworkGateway2: {
            required: false,
            serializedName: 'properties.virtualNetworkGateway2',
            type: {
              name: 'Composite',
              className: 'VirtualNetworkGateway'
            }
          },
          localNetworkGateway2: {
            required: false,
            serializedName: 'properties.localNetworkGateway2',
            type: {
              name: 'Composite',
              className: 'LocalNetworkGateway'
            }
          },
          connectionType: {
            required: true,
            serializedName: 'properties.connectionType',
            type: {
              name: 'String'
            }
          },
          routingWeight: {
            required: false,
            serializedName: 'properties.routingWeight',
            type: {
              name: 'Number'
            }
          },
          sharedKey: {
            required: false,
            serializedName: 'properties.sharedKey',
            type: {
              name: 'String'
            }
          },
          connectionStatus: {
            required: false,
            readOnly: true,
            serializedName: 'properties.connectionStatus',
            type: {
              name: 'String'
            }
          },
          tunnelConnectionStatus: {
            required: false,
            readOnly: true,
            serializedName: 'properties.tunnelConnectionStatus',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'TunnelConnectionHealthElementType',
                  type: {
                    name: 'Composite',
                    className: 'TunnelConnectionHealth'
                  }
              }
            }
          },
          egressBytesTransferred: {
            required: false,
            readOnly: true,
            serializedName: 'properties.egressBytesTransferred',
            type: {
              name: 'Number'
            }
          },
          ingressBytesTransferred: {
            required: false,
            readOnly: true,
            serializedName: 'properties.ingressBytesTransferred',
            type: {
              name: 'Number'
            }
          },
          peer: {
            required: false,
            serializedName: 'properties.peer',
            type: {
              name: 'Composite',
              className: 'SubResource'
            }
          },
          enableBgp: {
            required: false,
            serializedName: 'properties.enableBgp',
            type: {
              name: 'Boolean'
            }
          },
          usePolicyBasedTrafficSelectors: {
            required: false,
            serializedName: 'properties.usePolicyBasedTrafficSelectors',
            type: {
              name: 'Boolean'
            }
          },
          ipsecPolicies: {
            required: false,
            serializedName: 'properties.ipsecPolicies',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'IpsecPolicyElementType',
                  type: {
                    name: 'Composite',
                    className: 'IpsecPolicy'
                  }
              }
            }
          },
          resourceGuid: {
            required: false,
            serializedName: 'properties.resourceGuid',
            type: {
              name: 'String'
            }
          },
          provisioningState: {
            required: false,
            readOnly: true,
            serializedName: 'properties.provisioningState',
            type: {
              name: 'String'
            }
          },
          etag: {
            required: false,
            serializedName: 'etag',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = VirtualNetworkGatewayConnection;

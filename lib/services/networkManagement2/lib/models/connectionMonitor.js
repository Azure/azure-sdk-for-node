/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Parameters that define the operation to create a connection monitor.
 *
 */
class ConnectionMonitor {
  /**
   * Create a ConnectionMonitor.
   * @property {string} [location] Connection monitor location.
   * @property {object} [tags] Connection monitor tags.
   * @property {object} source
   * @property {string} [source.resourceId] The ID of the resource used as the
   * source by connection monitor.
   * @property {number} [source.port] The source port used by connection
   * monitor.
   * @property {object} destination
   * @property {string} [destination.resourceId] The ID of the resource used as
   * the destination by connection monitor.
   * @property {string} [destination.address] Address of the connection monitor
   * destination (IP or domain name).
   * @property {number} [destination.port] The destination port used by
   * connection monitor.
   * @property {boolean} [autoStart] Determines if the connection monitor will
   * start automatically once created. Default value: true .
   * @property {number} [monitoringIntervalInSeconds] Monitoring interval in
   * seconds. Default value: 60 .
   */
  constructor() {
  }

  /**
   * Defines the metadata of ConnectionMonitor
   *
   * @returns {object} metadata of ConnectionMonitor
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ConnectionMonitor',
      type: {
        name: 'Composite',
        className: 'ConnectionMonitor',
        modelProperties: {
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          source: {
            required: true,
            serializedName: 'properties.source',
            type: {
              name: 'Composite',
              className: 'ConnectionMonitorSource'
            }
          },
          destination: {
            required: true,
            serializedName: 'properties.destination',
            type: {
              name: 'Composite',
              className: 'ConnectionMonitorDestination'
            }
          },
          autoStart: {
            required: false,
            serializedName: 'properties.autoStart',
            defaultValue: true,
            type: {
              name: 'Boolean'
            }
          },
          monitoringIntervalInSeconds: {
            required: false,
            serializedName: 'properties.monitoringIntervalInSeconds',
            defaultValue: 60,
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = ConnectionMonitor;

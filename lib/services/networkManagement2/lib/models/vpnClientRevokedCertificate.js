/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * VPN client revoked certificate of virtual network gateway.
 *
 * @extends models['SubResource']
 */
class VpnClientRevokedCertificate extends models['SubResource'] {
  /**
   * Create a VpnClientRevokedCertificate.
   * @member {string} [thumbprint] The revoked VPN client certificate
   * thumbprint.
   * @member {string} [provisioningState] The provisioning state of the VPN
   * client revoked certificate resource. Possible values are: 'Updating',
   * 'Deleting', and 'Failed'.
   * @member {string} [name] The name of the resource that is unique within a
   * resource group. This name can be used to access the resource.
   * @member {string} [etag] A unique read-only string that changes whenever
   * the resource is updated.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of VpnClientRevokedCertificate
   *
   * @returns {object} metadata of VpnClientRevokedCertificate
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VpnClientRevokedCertificate',
      type: {
        name: 'Composite',
        className: 'VpnClientRevokedCertificate',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          thumbprint: {
            required: false,
            serializedName: 'properties.thumbprint',
            type: {
              name: 'String'
            }
          },
          provisioningState: {
            required: false,
            readOnly: true,
            serializedName: 'properties.provisioningState',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          etag: {
            required: false,
            serializedName: 'etag',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = VpnClientRevokedCertificate;

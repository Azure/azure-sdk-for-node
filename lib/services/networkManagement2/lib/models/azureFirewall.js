/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Azure Firewall resource
 *
 * @extends models['Resource']
 */
class AzureFirewall extends models['Resource'] {
  /**
   * Create a AzureFirewall.
   * @property {array} [applicationRuleCollections] Collection of application
   * rule collections used by Azure Firewall.
   * @property {array} [natRuleCollections] Collection of NAT rule collections
   * used by Azure Firewall.
   * @property {array} [networkRuleCollections] Collection of network rule
   * collections used by Azure Firewall.
   * @property {array} [ipConfigurations] IP configuration of the Azure
   * Firewall resource.
   * @property {string} [provisioningState] The provisioning state of the
   * resource. Possible values include: 'Succeeded', 'Updating', 'Deleting',
   * 'Failed'
   * @property {string} [etag] Gets a unique read-only string that changes
   * whenever the resource is updated.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of AzureFirewall
   *
   * @returns {object} metadata of AzureFirewall
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AzureFirewall',
      type: {
        name: 'Composite',
        className: 'AzureFirewall',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          applicationRuleCollections: {
            required: false,
            serializedName: 'properties.applicationRuleCollections',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'AzureFirewallApplicationRuleCollectionElementType',
                  type: {
                    name: 'Composite',
                    className: 'AzureFirewallApplicationRuleCollection'
                  }
              }
            }
          },
          natRuleCollections: {
            required: false,
            serializedName: 'properties.natRuleCollections',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'AzureFirewallNatRuleCollectionElementType',
                  type: {
                    name: 'Composite',
                    className: 'AzureFirewallNatRuleCollection'
                  }
              }
            }
          },
          networkRuleCollections: {
            required: false,
            serializedName: 'properties.networkRuleCollections',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'AzureFirewallNetworkRuleCollectionElementType',
                  type: {
                    name: 'Composite',
                    className: 'AzureFirewallNetworkRuleCollection'
                  }
              }
            }
          },
          ipConfigurations: {
            required: false,
            serializedName: 'properties.ipConfigurations',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'AzureFirewallIPConfigurationElementType',
                  type: {
                    name: 'Composite',
                    className: 'AzureFirewallIPConfiguration'
                  }
              }
            }
          },
          provisioningState: {
            required: false,
            serializedName: 'properties.provisioningState',
            type: {
              name: 'String'
            }
          },
          etag: {
            required: false,
            readOnly: true,
            serializedName: 'etag',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = AzureFirewall;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the SubResource class.
 * @constructor
 * Reference to another subresource.
 *
 * @member {string} [id] Resource ID.
 */
export interface SubResource extends BaseResource {
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the BackendAddressPool class.
 * @constructor
 * Pool of backend IP addresses.
 *
 * @member {array} [backendIPConfigurations] Gets collection of references to
 * IP addresses defined in network interfaces.
 * @member {array} [loadBalancingRules] Gets load balancing rules that use this
 * backend address pool.
 * @member {object} [outboundRule] Gets outbound rules that use this backend
 * address pool.
 * @member {string} [outboundRule.id] Resource ID.
 * @member {string} [provisioningState] Get provisioning state of the public IP
 * resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [name] Gets name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface BackendAddressPool extends SubResource {
  readonly backendIPConfigurations?: NetworkInterfaceIPConfiguration[];
  readonly loadBalancingRules?: SubResource[];
  readonly outboundRule?: SubResource;
  provisioningState?: string;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the InboundNatRule class.
 * @constructor
 * Inbound NAT rule of the load balancer.
 *
 * @member {object} [frontendIPConfiguration] A reference to frontend IP
 * addresses.
 * @member {string} [frontendIPConfiguration.id] Resource ID.
 * @member {object} [backendIPConfiguration] A reference to a private IP
 * address defined on a network interface of a VM. Traffic sent to the frontend
 * port of each of the frontend IP configurations is forwarded to the backend
 * IP.
 * @member {array}
 * [backendIPConfiguration.applicationGatewayBackendAddressPools] The reference
 * of ApplicationGatewayBackendAddressPool resource.
 * @member {array} [backendIPConfiguration.loadBalancerBackendAddressPools] The
 * reference of LoadBalancerBackendAddressPool resource.
 * @member {array} [backendIPConfiguration.loadBalancerInboundNatRules] A list
 * of references of LoadBalancerInboundNatRules.
 * @member {string} [backendIPConfiguration.privateIPAddress] Private IP
 * address of the IP configuration.
 * @member {string} [backendIPConfiguration.privateIPAllocationMethod] Defines
 * how a private IP address is assigned. Possible values are: 'Static' and
 * 'Dynamic'. Possible values include: 'Static', 'Dynamic'
 * @member {string} [backendIPConfiguration.privateIPAddressVersion] Available
 * from Api-Version 2016-03-30 onwards, it represents whether the specific
 * ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values
 * are: 'IPv4' and 'IPv6'. Possible values include: 'IPv4', 'IPv6'
 * @member {object} [backendIPConfiguration.subnet] Subnet bound to the IP
 * configuration.
 * @member {string} [backendIPConfiguration.subnet.addressPrefix] The address
 * prefix for the subnet.
 * @member {array} [backendIPConfiguration.subnet.addressPrefixes] List of
 * address prefixes for the subnet.
 * @member {object} [backendIPConfiguration.subnet.networkSecurityGroup] The
 * reference of the NetworkSecurityGroup resource.
 * @member {array}
 * [backendIPConfiguration.subnet.networkSecurityGroup.securityRules] A
 * collection of security rules of the network security group.
 * @member {array}
 * [backendIPConfiguration.subnet.networkSecurityGroup.defaultSecurityRules]
 * The default security rules of network security group.
 * @member {array}
 * [backendIPConfiguration.subnet.networkSecurityGroup.networkInterfaces] A
 * collection of references to network interfaces.
 * @member {array} [backendIPConfiguration.subnet.networkSecurityGroup.subnets]
 * A collection of references to subnets.
 * @member {string}
 * [backendIPConfiguration.subnet.networkSecurityGroup.resourceGuid] The
 * resource GUID property of the network security group resource.
 * @member {string}
 * [backendIPConfiguration.subnet.networkSecurityGroup.provisioningState] The
 * provisioning state of the public IP resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [backendIPConfiguration.subnet.networkSecurityGroup.etag] A
 * unique read-only string that changes whenever the resource is updated.
 * @member {object} [backendIPConfiguration.subnet.routeTable] The reference of
 * the RouteTable resource.
 * @member {array} [backendIPConfiguration.subnet.routeTable.routes] Collection
 * of routes contained within a route table.
 * @member {array} [backendIPConfiguration.subnet.routeTable.subnets] A
 * collection of references to subnets.
 * @member {boolean}
 * [backendIPConfiguration.subnet.routeTable.disableBgpRoutePropagation] Gets
 * or sets whether to disable the routes learned by BGP on that route table.
 * True means disable.
 * @member {string}
 * [backendIPConfiguration.subnet.routeTable.provisioningState] The
 * provisioning state of the resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string} [backendIPConfiguration.subnet.routeTable.etag] Gets a
 * unique read-only string that changes whenever the resource is updated.
 * @member {array} [backendIPConfiguration.subnet.serviceEndpoints] An array of
 * service endpoints.
 * @member {array} [backendIPConfiguration.subnet.serviceEndpointPolicies] An
 * array of service endpoint policies.
 * @member {array} [backendIPConfiguration.subnet.ipConfigurations] Gets an
 * array of references to the network interface IP configurations using subnet.
 * @member {array} [backendIPConfiguration.subnet.resourceNavigationLinks] Gets
 * an array of references to the external resources using subnet.
 * @member {string} [backendIPConfiguration.subnet.provisioningState] The
 * provisioning state of the resource.
 * @member {string} [backendIPConfiguration.subnet.name] The name of the
 * resource that is unique within a resource group. This name can be used to
 * access the resource.
 * @member {string} [backendIPConfiguration.subnet.etag] A unique read-only
 * string that changes whenever the resource is updated.
 * @member {boolean} [backendIPConfiguration.primary] Gets whether this is a
 * primary customer address on the network interface.
 * @member {object} [backendIPConfiguration.publicIPAddress] Public IP address
 * bound to the IP configuration.
 * @member {object} [backendIPConfiguration.publicIPAddress.sku] The public IP
 * address SKU.
 * @member {string} [backendIPConfiguration.publicIPAddress.sku.name] Name of a
 * public IP address SKU. Possible values include: 'Basic', 'Standard'
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.publicIPAllocationMethod] The public
 * IP allocation method. Possible values are: 'Static' and 'Dynamic'. Possible
 * values include: 'Static', 'Dynamic'
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.publicIPAddressVersion] The public
 * IP address version. Possible values are: 'IPv4' and 'IPv6'. Possible values
 * include: 'IPv4', 'IPv6'
 * @member {object} [backendIPConfiguration.publicIPAddress.ipConfiguration]
 * The IP configuration associated with the public IP address.
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.privateIPAddress]
 * The private IP address of the IP configuration.
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.privateIPAllocationMethod]
 * The private IP allocation method. Possible values are 'Static' and
 * 'Dynamic'. Possible values include: 'Static', 'Dynamic'
 * @member {object}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet] The
 * reference of the subnet resource.
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.addressPrefix]
 * The address prefix for the subnet.
 * @member {array}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.addressPrefixes]
 * List of  address prefixes for the subnet.
 * @member {object}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup]
 * The reference of the NetworkSecurityGroup resource.
 * @member {array}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.securityRules]
 * A collection of security rules of the network security group.
 * @member {array}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.defaultSecurityRules]
 * The default security rules of network security group.
 * @member {array}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.networkInterfaces]
 * A collection of references to network interfaces.
 * @member {array}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.subnets]
 * A collection of references to subnets.
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.resourceGuid]
 * The resource GUID property of the network security group resource.
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.provisioningState]
 * The provisioning state of the public IP resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.etag]
 * A unique read-only string that changes whenever the resource is updated.
 * @member {object}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable]
 * The reference of the RouteTable resource.
 * @member {array}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable.routes]
 * Collection of routes contained within a route table.
 * @member {array}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable.subnets]
 * A collection of references to subnets.
 * @member {boolean}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable.disableBgpRoutePropagation]
 * Gets or sets whether to disable the routes learned by BGP on that route
 * table. True means disable.
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable.provisioningState]
 * The provisioning state of the resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable.etag]
 * Gets a unique read-only string that changes whenever the resource is
 * updated.
 * @member {array}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.serviceEndpoints]
 * An array of service endpoints.
 * @member {array}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.serviceEndpointPolicies]
 * An array of service endpoint policies.
 * @member {array}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.ipConfigurations]
 * Gets an array of references to the network interface IP configurations using
 * subnet.
 * @member {array}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.resourceNavigationLinks]
 * Gets an array of references to the external resources using subnet.
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.provisioningState]
 * The provisioning state of the resource.
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.name] The
 * name of the resource that is unique within a resource group. This name can
 * be used to access the resource.
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.subnet.etag] A
 * unique read-only string that changes whenever the resource is updated.
 * @member {object}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.publicIPAddress] The
 * reference of the public IP resource.
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.provisioningState]
 * Gets the provisioning state of the public IP resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.name] The name of
 * the resource that is unique within a resource group. This name can be used
 * to access the resource.
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.ipConfiguration.etag] A unique
 * read-only string that changes whenever the resource is updated.
 * @member {object} [backendIPConfiguration.publicIPAddress.dnsSettings] The
 * FQDN of the DNS record associated with the public IP address.
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.dnsSettings.domainNameLabel] Gets or
 * sets the Domain name label.The concatenation of the domain name label and
 * the regionalized DNS zone make up the fully qualified domain name associated
 * with the public IP address. If a domain name label is specified, an A DNS
 * record is created for the public IP in the Microsoft Azure DNS system.
 * @member {string} [backendIPConfiguration.publicIPAddress.dnsSettings.fqdn]
 * Gets the FQDN, Fully qualified domain name of the A DNS record associated
 * with the public IP. This is the concatenation of the domainNameLabel and the
 * regionalized DNS zone.
 * @member {string}
 * [backendIPConfiguration.publicIPAddress.dnsSettings.reverseFqdn] Gets or
 * Sets the Reverse FQDN. A user-visible, fully qualified domain name that
 * resolves to this public IP address. If the reverseFqdn is specified, then a
 * PTR DNS record is created pointing from the IP address in the in-addr.arpa
 * domain to the reverse FQDN.
 * @member {array} [backendIPConfiguration.publicIPAddress.ipTags] The list of
 * tags associated with the public IP address.
 * @member {string} [backendIPConfiguration.publicIPAddress.ipAddress] The IP
 * address associated with the public IP address resource.
 * @member {object} [backendIPConfiguration.publicIPAddress.publicIPPrefix] The
 * Public IP Prefix this Public IP Address should be allocated from.
 * @member {string} [backendIPConfiguration.publicIPAddress.publicIPPrefix.id]
 * Resource ID.
 * @member {number}
 * [backendIPConfiguration.publicIPAddress.idleTimeoutInMinutes] The idle
 * timeout of the public IP address.
 * @member {string} [backendIPConfiguration.publicIPAddress.resourceGuid] The
 * resource GUID property of the public IP resource.
 * @member {string} [backendIPConfiguration.publicIPAddress.provisioningState]
 * The provisioning state of the PublicIP resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [backendIPConfiguration.publicIPAddress.etag] A unique
 * read-only string that changes whenever the resource is updated.
 * @member {array} [backendIPConfiguration.publicIPAddress.zones] A list of
 * availability zones denoting the IP allocated for the resource needs to come
 * from.
 * @member {array} [backendIPConfiguration.applicationSecurityGroups]
 * Application security groups in which the IP configuration is included.
 * @member {string} [backendIPConfiguration.provisioningState] The provisioning
 * state of the network interface IP configuration. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [backendIPConfiguration.name] The name of the resource that
 * is unique within a resource group. This name can be used to access the
 * resource.
 * @member {string} [backendIPConfiguration.etag] A unique read-only string
 * that changes whenever the resource is updated.
 * @member {string} [protocol] Possible values include: 'Udp', 'Tcp', 'All'
 * @member {number} [frontendPort] The port for the external endpoint. Port
 * numbers for each rule must be unique within the Load Balancer. Acceptable
 * values range from 1 to 65534.
 * @member {number} [backendPort] The port used for the internal endpoint.
 * Acceptable values range from 1 to 65535.
 * @member {number} [idleTimeoutInMinutes] The timeout for the TCP idle
 * connection. The value can be set between 4 and 30 minutes. The default value
 * is 4 minutes. This element is only used when the protocol is set to TCP.
 * @member {boolean} [enableFloatingIP] Configures a virtual machine's endpoint
 * for the floating IP capability required to configure a SQL AlwaysOn
 * Availability Group. This setting is required when using the SQL AlwaysOn
 * Availability Groups in SQL server. This setting can't be changed after you
 * create the endpoint.
 * @member {boolean} [enableTcpReset] Receive bidirectional TCP Reset on TCP
 * flow idle timeout or unexpected connection termination. This element is only
 * used when the protocol is set to TCP.
 * @member {string} [provisioningState] Gets the provisioning state of the
 * public IP resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [name] Gets name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface InboundNatRule extends SubResource {
  frontendIPConfiguration?: SubResource;
  readonly backendIPConfiguration?: NetworkInterfaceIPConfiguration;
  protocol?: string;
  frontendPort?: number;
  backendPort?: number;
  idleTimeoutInMinutes?: number;
  enableFloatingIP?: boolean;
  enableTcpReset?: boolean;
  provisioningState?: string;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * Common resource representation.
 *
 * @member {string} [id] Resource ID.
 * @member {string} [name] Resource name.
 * @member {string} [type] Resource type.
 * @member {string} [location] Resource location.
 * @member {object} [tags] Resource tags.
 */
export interface Resource extends BaseResource {
  id?: string;
  readonly name?: string;
  readonly type?: string;
  location?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the ApplicationSecurityGroup class.
 * @constructor
 * An application security group in a resource group.
 *
 * @member {string} [resourceGuid] The resource GUID property of the
 * application security group resource. It uniquely identifies a resource, even
 * if the user changes its name or migrate the resource across subscriptions or
 * resource groups.
 * @member {string} [provisioningState] The provisioning state of the
 * application security group resource. Possible values are: 'Succeeded',
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface ApplicationSecurityGroup extends Resource {
  readonly resourceGuid?: string;
  readonly provisioningState?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the SecurityRule class.
 * @constructor
 * Network security rule.
 *
 * @member {string} [description] A description for this rule. Restricted to
 * 140 chars.
 * @member {string} protocol Network protocol this rule applies to. Possible
 * values are 'Tcp', 'Udp', and '*'. Possible values include: 'Tcp', 'Udp', '*'
 * @member {string} [sourcePortRange] The source port or range. Integer or
 * range between 0 and 65535. Asterix '*' can also be used to match all ports.
 * @member {string} [destinationPortRange] The destination port or range.
 * Integer or range between 0 and 65535. Asterix '*' can also be used to match
 * all ports.
 * @member {string} [sourceAddressPrefix] The CIDR or source IP range. Asterix
 * '*' can also be used to match all source IPs. Default tags such as
 * 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If
 * this is an ingress rule, specifies where network traffic originates from.
 * @member {array} [sourceAddressPrefixes] The CIDR or source IP ranges.
 * @member {array} [sourceApplicationSecurityGroups] The application security
 * group specified as source.
 * @member {string} [destinationAddressPrefix] The destination address prefix.
 * CIDR or destination IP range. Asterix '*' can also be used to match all
 * source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and
 * 'Internet' can also be used.
 * @member {array} [destinationAddressPrefixes] The destination address
 * prefixes. CIDR or destination IP ranges.
 * @member {array} [destinationApplicationSecurityGroups] The application
 * security group specified as destination.
 * @member {array} [sourcePortRanges] The source port ranges.
 * @member {array} [destinationPortRanges] The destination port ranges.
 * @member {string} access The network traffic is allowed or denied. Possible
 * values are: 'Allow' and 'Deny'. Possible values include: 'Allow', 'Deny'
 * @member {number} [priority] The priority of the rule. The value can be
 * between 100 and 4096. The priority number must be unique for each rule in
 * the collection. The lower the priority number, the higher the priority of
 * the rule.
 * @member {string} direction The direction of the rule. The direction
 * specifies if rule will be evaluated on incoming or outcoming traffic.
 * Possible values are: 'Inbound' and 'Outbound'. Possible values include:
 * 'Inbound', 'Outbound'
 * @member {string} [provisioningState] The provisioning state of the public IP
 * resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface SecurityRule extends SubResource {
  description?: string;
  protocol: string;
  sourcePortRange?: string;
  destinationPortRange?: string;
  sourceAddressPrefix?: string;
  sourceAddressPrefixes?: string[];
  sourceApplicationSecurityGroups?: ApplicationSecurityGroup[];
  destinationAddressPrefix?: string;
  destinationAddressPrefixes?: string[];
  destinationApplicationSecurityGroups?: ApplicationSecurityGroup[];
  sourcePortRanges?: string[];
  destinationPortRanges?: string[];
  access: string;
  priority?: number;
  direction: string;
  provisioningState?: string;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the NetworkInterfaceDnsSettings class.
 * @constructor
 * DNS settings of a network interface.
 *
 * @member {array} [dnsServers] List of DNS servers IP addresses. Use
 * 'AzureProvidedDNS' to switch to azure provided DNS resolution.
 * 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the
 * only value in dnsServers collection.
 * @member {array} [appliedDnsServers] If the VM that uses this NIC is part of
 * an Availability Set, then this list will have the union of all DNS servers
 * from all NICs that are part of the Availability Set. This property is what
 * is configured on each of those VMs.
 * @member {string} [internalDnsNameLabel] Relative DNS name for this NIC used
 * for internal communications between VMs in the same virtual network.
 * @member {string} [internalFqdn] Fully qualified DNS name supporting internal
 * communications between VMs in the same virtual network.
 * @member {string} [internalDomainNameSuffix] Even if internalDnsNameLabel is
 * not specified, a DNS entry is created for the primary NIC of the VM. This
 * DNS name can be constructed by concatenating the VM name with the value of
 * internalDomainNameSuffix.
 */
export interface NetworkInterfaceDnsSettings {
  dnsServers?: string[];
  appliedDnsServers?: string[];
  internalDnsNameLabel?: string;
  internalFqdn?: string;
  internalDomainNameSuffix?: string;
}

/**
 * @class
 * Initializes a new instance of the NetworkInterface class.
 * @constructor
 * A network interface in a resource group.
 *
 * @member {object} [virtualMachine] The reference of a virtual machine.
 * @member {string} [virtualMachine.id] Resource ID.
 * @member {object} [networkSecurityGroup] The reference of the
 * NetworkSecurityGroup resource.
 * @member {array} [networkSecurityGroup.securityRules] A collection of
 * security rules of the network security group.
 * @member {array} [networkSecurityGroup.defaultSecurityRules] The default
 * security rules of network security group.
 * @member {array} [networkSecurityGroup.networkInterfaces] A collection of
 * references to network interfaces.
 * @member {array} [networkSecurityGroup.subnets] A collection of references to
 * subnets.
 * @member {string} [networkSecurityGroup.resourceGuid] The resource GUID
 * property of the network security group resource.
 * @member {string} [networkSecurityGroup.provisioningState] The provisioning
 * state of the public IP resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string} [networkSecurityGroup.etag] A unique read-only string that
 * changes whenever the resource is updated.
 * @member {array} [ipConfigurations] A list of IPConfigurations of the network
 * interface.
 * @member {object} [dnsSettings] The DNS settings in network interface.
 * @member {array} [dnsSettings.dnsServers] List of DNS servers IP addresses.
 * Use 'AzureProvidedDNS' to switch to azure provided DNS resolution.
 * 'AzureProvidedDNS' value cannot be combined with other IPs, it must be the
 * only value in dnsServers collection.
 * @member {array} [dnsSettings.appliedDnsServers] If the VM that uses this NIC
 * is part of an Availability Set, then this list will have the union of all
 * DNS servers from all NICs that are part of the Availability Set. This
 * property is what is configured on each of those VMs.
 * @member {string} [dnsSettings.internalDnsNameLabel] Relative DNS name for
 * this NIC used for internal communications between VMs in the same virtual
 * network.
 * @member {string} [dnsSettings.internalFqdn] Fully qualified DNS name
 * supporting internal communications between VMs in the same virtual network.
 * @member {string} [dnsSettings.internalDomainNameSuffix] Even if
 * internalDnsNameLabel is not specified, a DNS entry is created for the
 * primary NIC of the VM. This DNS name can be constructed by concatenating the
 * VM name with the value of internalDomainNameSuffix.
 * @member {string} [macAddress] The MAC address of the network interface.
 * @member {boolean} [primary] Gets whether this is a primary network interface
 * on a virtual machine.
 * @member {boolean} [enableAcceleratedNetworking] If the network interface is
 * accelerated networking enabled.
 * @member {boolean} [enableIPForwarding] Indicates whether IP forwarding is
 * enabled on this network interface.
 * @member {string} [resourceGuid] The resource GUID property of the network
 * interface resource.
 * @member {string} [provisioningState] The provisioning state of the public IP
 * resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface NetworkInterface extends Resource {
  virtualMachine?: SubResource;
  networkSecurityGroup?: NetworkSecurityGroup;
  ipConfigurations?: NetworkInterfaceIPConfiguration[];
  dnsSettings?: NetworkInterfaceDnsSettings;
  macAddress?: string;
  primary?: boolean;
  enableAcceleratedNetworking?: boolean;
  enableIPForwarding?: boolean;
  resourceGuid?: string;
  provisioningState?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the NetworkSecurityGroup class.
 * @constructor
 * NetworkSecurityGroup resource.
 *
 * @member {array} [securityRules] A collection of security rules of the
 * network security group.
 * @member {array} [defaultSecurityRules] The default security rules of network
 * security group.
 * @member {array} [networkInterfaces] A collection of references to network
 * interfaces.
 * @member {array} [subnets] A collection of references to subnets.
 * @member {string} [resourceGuid] The resource GUID property of the network
 * security group resource.
 * @member {string} [provisioningState] The provisioning state of the public IP
 * resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface NetworkSecurityGroup extends Resource {
  securityRules?: SecurityRule[];
  defaultSecurityRules?: SecurityRule[];
  readonly networkInterfaces?: NetworkInterface[];
  readonly subnets?: Subnet[];
  resourceGuid?: string;
  provisioningState?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the Route class.
 * @constructor
 * Route resource
 *
 * @member {string} [addressPrefix] The destination CIDR to which the route
 * applies.
 * @member {string} nextHopType The type of Azure hop the packet should be sent
 * to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal', 'Internet',
 * 'VirtualAppliance', and 'None'. Possible values include:
 * 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', 'None'
 * @member {string} [nextHopIpAddress] The IP address packets should be
 * forwarded to. Next hop values are only allowed in routes where the next hop
 * type is VirtualAppliance.
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface Route extends SubResource {
  addressPrefix?: string;
  nextHopType: string;
  nextHopIpAddress?: string;
  provisioningState?: string;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the RouteTable class.
 * @constructor
 * Route table resource.
 *
 * @member {array} [routes] Collection of routes contained within a route
 * table.
 * @member {array} [subnets] A collection of references to subnets.
 * @member {boolean} [disableBgpRoutePropagation] Gets or sets whether to
 * disable the routes learned by BGP on that route table. True means disable.
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface RouteTable extends Resource {
  routes?: Route[];
  readonly subnets?: Subnet[];
  disableBgpRoutePropagation?: boolean;
  provisioningState?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceEndpointPropertiesFormat class.
 * @constructor
 * The service endpoint properties.
 *
 * @member {string} [service] The type of the endpoint service.
 * @member {array} [locations] A list of locations.
 * @member {string} [provisioningState] The provisioning state of the resource.
 */
export interface ServiceEndpointPropertiesFormat {
  service?: string;
  locations?: string[];
  provisioningState?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceEndpointPolicyDefinition class.
 * @constructor
 * Service Endpoint policy definitions.
 *
 * @member {string} [description] A description for this rule. Restricted to
 * 140 chars.
 * @member {string} [service] service endpoint name.
 * @member {array} [serviceResources] A list of service resources.
 * @member {string} [provisioningState] The provisioning state of the service
 * end point policy definition. Possible values are: 'Updating', 'Deleting',
 * and 'Failed'.
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface ServiceEndpointPolicyDefinition extends SubResource {
  description?: string;
  service?: string;
  serviceResources?: string[];
  provisioningState?: string;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceEndpointPolicy class.
 * @constructor
 * Service End point policy resource.
 *
 * @member {array} [serviceEndpointPolicyDefinitions] A collection of service
 * endpoint policy definitions of the service endpoint policy.
 * @member {string} [resourceGuid] The resource GUID property of the service
 * endpoint policy resource.
 * @member {string} [provisioningState] The provisioning state of the service
 * endpoint policy. Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface ServiceEndpointPolicy extends Resource {
  serviceEndpointPolicyDefinitions?: ServiceEndpointPolicyDefinition[];
  resourceGuid?: string;
  provisioningState?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the PublicIPAddressSku class.
 * @constructor
 * SKU of a public IP address
 *
 * @member {string} [name] Name of a public IP address SKU. Possible values
 * include: 'Basic', 'Standard'
 */
export interface PublicIPAddressSku {
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the PublicIPAddressDnsSettings class.
 * @constructor
 * Contains FQDN of the DNS record associated with the public IP address
 *
 * @member {string} [domainNameLabel] Gets or sets the Domain name label.The
 * concatenation of the domain name label and the regionalized DNS zone make up
 * the fully qualified domain name associated with the public IP address. If a
 * domain name label is specified, an A DNS record is created for the public IP
 * in the Microsoft Azure DNS system.
 * @member {string} [fqdn] Gets the FQDN, Fully qualified domain name of the A
 * DNS record associated with the public IP. This is the concatenation of the
 * domainNameLabel and the regionalized DNS zone.
 * @member {string} [reverseFqdn] Gets or Sets the Reverse FQDN. A
 * user-visible, fully qualified domain name that resolves to this public IP
 * address. If the reverseFqdn is specified, then a PTR DNS record is created
 * pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
 */
export interface PublicIPAddressDnsSettings {
  domainNameLabel?: string;
  fqdn?: string;
  reverseFqdn?: string;
}

/**
 * @class
 * Initializes a new instance of the IpTag class.
 * @constructor
 * Contains the IpTag associated with the object
 *
 * @member {string} [ipTagType] Gets or sets the ipTag type: Example
 * FirstPartyUsage.
 * @member {string} [tag] Gets or sets value of the IpTag associated with the
 * public IP. Example SQL, Storage etc
 */
export interface IpTag {
  ipTagType?: string;
  tag?: string;
}

/**
 * @class
 * Initializes a new instance of the PublicIPAddress class.
 * @constructor
 * Public IP address resource.
 *
 * @member {object} [sku] The public IP address SKU.
 * @member {string} [sku.name] Name of a public IP address SKU. Possible values
 * include: 'Basic', 'Standard'
 * @member {string} [publicIPAllocationMethod] The public IP allocation method.
 * Possible values are: 'Static' and 'Dynamic'. Possible values include:
 * 'Static', 'Dynamic'
 * @member {string} [publicIPAddressVersion] The public IP address version.
 * Possible values are: 'IPv4' and 'IPv6'. Possible values include: 'IPv4',
 * 'IPv6'
 * @member {object} [ipConfiguration] The IP configuration associated with the
 * public IP address.
 * @member {string} [ipConfiguration.privateIPAddress] The private IP address
 * of the IP configuration.
 * @member {string} [ipConfiguration.privateIPAllocationMethod] The private IP
 * allocation method. Possible values are 'Static' and 'Dynamic'. Possible
 * values include: 'Static', 'Dynamic'
 * @member {object} [ipConfiguration.subnet] The reference of the subnet
 * resource.
 * @member {string} [ipConfiguration.subnet.addressPrefix] The address prefix
 * for the subnet.
 * @member {array} [ipConfiguration.subnet.addressPrefixes] List of  address
 * prefixes for the subnet.
 * @member {object} [ipConfiguration.subnet.networkSecurityGroup] The reference
 * of the NetworkSecurityGroup resource.
 * @member {array} [ipConfiguration.subnet.networkSecurityGroup.securityRules]
 * A collection of security rules of the network security group.
 * @member {array}
 * [ipConfiguration.subnet.networkSecurityGroup.defaultSecurityRules] The
 * default security rules of network security group.
 * @member {array}
 * [ipConfiguration.subnet.networkSecurityGroup.networkInterfaces] A collection
 * of references to network interfaces.
 * @member {array} [ipConfiguration.subnet.networkSecurityGroup.subnets] A
 * collection of references to subnets.
 * @member {string} [ipConfiguration.subnet.networkSecurityGroup.resourceGuid]
 * The resource GUID property of the network security group resource.
 * @member {string}
 * [ipConfiguration.subnet.networkSecurityGroup.provisioningState] The
 * provisioning state of the public IP resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [ipConfiguration.subnet.networkSecurityGroup.etag] A unique
 * read-only string that changes whenever the resource is updated.
 * @member {object} [ipConfiguration.subnet.routeTable] The reference of the
 * RouteTable resource.
 * @member {array} [ipConfiguration.subnet.routeTable.routes] Collection of
 * routes contained within a route table.
 * @member {array} [ipConfiguration.subnet.routeTable.subnets] A collection of
 * references to subnets.
 * @member {boolean}
 * [ipConfiguration.subnet.routeTable.disableBgpRoutePropagation] Gets or sets
 * whether to disable the routes learned by BGP on that route table. True means
 * disable.
 * @member {string} [ipConfiguration.subnet.routeTable.provisioningState] The
 * provisioning state of the resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string} [ipConfiguration.subnet.routeTable.etag] Gets a unique
 * read-only string that changes whenever the resource is updated.
 * @member {array} [ipConfiguration.subnet.serviceEndpoints] An array of
 * service endpoints.
 * @member {array} [ipConfiguration.subnet.serviceEndpointPolicies] An array of
 * service endpoint policies.
 * @member {array} [ipConfiguration.subnet.ipConfigurations] Gets an array of
 * references to the network interface IP configurations using subnet.
 * @member {array} [ipConfiguration.subnet.resourceNavigationLinks] Gets an
 * array of references to the external resources using subnet.
 * @member {string} [ipConfiguration.subnet.provisioningState] The provisioning
 * state of the resource.
 * @member {string} [ipConfiguration.subnet.name] The name of the resource that
 * is unique within a resource group. This name can be used to access the
 * resource.
 * @member {string} [ipConfiguration.subnet.etag] A unique read-only string
 * that changes whenever the resource is updated.
 * @member {object} [ipConfiguration.publicIPAddress] The reference of the
 * public IP resource.
 * @member {string} [ipConfiguration.provisioningState] Gets the provisioning
 * state of the public IP resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string} [ipConfiguration.name] The name of the resource that is
 * unique within a resource group. This name can be used to access the
 * resource.
 * @member {string} [ipConfiguration.etag] A unique read-only string that
 * changes whenever the resource is updated.
 * @member {object} [dnsSettings] The FQDN of the DNS record associated with
 * the public IP address.
 * @member {string} [dnsSettings.domainNameLabel] Gets or sets the Domain name
 * label.The concatenation of the domain name label and the regionalized DNS
 * zone make up the fully qualified domain name associated with the public IP
 * address. If a domain name label is specified, an A DNS record is created for
 * the public IP in the Microsoft Azure DNS system.
 * @member {string} [dnsSettings.fqdn] Gets the FQDN, Fully qualified domain
 * name of the A DNS record associated with the public IP. This is the
 * concatenation of the domainNameLabel and the regionalized DNS zone.
 * @member {string} [dnsSettings.reverseFqdn] Gets or Sets the Reverse FQDN. A
 * user-visible, fully qualified domain name that resolves to this public IP
 * address. If the reverseFqdn is specified, then a PTR DNS record is created
 * pointing from the IP address in the in-addr.arpa domain to the reverse FQDN.
 * @member {array} [ipTags] The list of tags associated with the public IP
 * address.
 * @member {string} [ipAddress] The IP address associated with the public IP
 * address resource.
 * @member {object} [publicIPPrefix] The Public IP Prefix this Public IP
 * Address should be allocated from.
 * @member {string} [publicIPPrefix.id] Resource ID.
 * @member {number} [idleTimeoutInMinutes] The idle timeout of the public IP
 * address.
 * @member {string} [resourceGuid] The resource GUID property of the public IP
 * resource.
 * @member {string} [provisioningState] The provisioning state of the PublicIP
 * resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {array} [zones] A list of availability zones denoting the IP
 * allocated for the resource needs to come from.
 */
export interface PublicIPAddress extends Resource {
  sku?: PublicIPAddressSku;
  publicIPAllocationMethod?: string;
  publicIPAddressVersion?: string;
  readonly ipConfiguration?: IPConfiguration;
  dnsSettings?: PublicIPAddressDnsSettings;
  ipTags?: IpTag[];
  ipAddress?: string;
  publicIPPrefix?: SubResource;
  idleTimeoutInMinutes?: number;
  resourceGuid?: string;
  provisioningState?: string;
  etag?: string;
  zones?: string[];
}

/**
 * @class
 * Initializes a new instance of the IPConfiguration class.
 * @constructor
 * IP configuration
 *
 * @member {string} [privateIPAddress] The private IP address of the IP
 * configuration.
 * @member {string} [privateIPAllocationMethod] The private IP allocation
 * method. Possible values are 'Static' and 'Dynamic'. Possible values include:
 * 'Static', 'Dynamic'
 * @member {object} [subnet] The reference of the subnet resource.
 * @member {string} [subnet.addressPrefix] The address prefix for the subnet.
 * @member {array} [subnet.addressPrefixes] List of  address prefixes for the
 * subnet.
 * @member {object} [subnet.networkSecurityGroup] The reference of the
 * NetworkSecurityGroup resource.
 * @member {array} [subnet.networkSecurityGroup.securityRules] A collection of
 * security rules of the network security group.
 * @member {array} [subnet.networkSecurityGroup.defaultSecurityRules] The
 * default security rules of network security group.
 * @member {array} [subnet.networkSecurityGroup.networkInterfaces] A collection
 * of references to network interfaces.
 * @member {array} [subnet.networkSecurityGroup.subnets] A collection of
 * references to subnets.
 * @member {string} [subnet.networkSecurityGroup.resourceGuid] The resource
 * GUID property of the network security group resource.
 * @member {string} [subnet.networkSecurityGroup.provisioningState] The
 * provisioning state of the public IP resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [subnet.networkSecurityGroup.etag] A unique read-only
 * string that changes whenever the resource is updated.
 * @member {object} [subnet.routeTable] The reference of the RouteTable
 * resource.
 * @member {array} [subnet.routeTable.routes] Collection of routes contained
 * within a route table.
 * @member {array} [subnet.routeTable.subnets] A collection of references to
 * subnets.
 * @member {boolean} [subnet.routeTable.disableBgpRoutePropagation] Gets or
 * sets whether to disable the routes learned by BGP on that route table. True
 * means disable.
 * @member {string} [subnet.routeTable.provisioningState] The provisioning
 * state of the resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [subnet.routeTable.etag] Gets a unique read-only string
 * that changes whenever the resource is updated.
 * @member {array} [subnet.serviceEndpoints] An array of service endpoints.
 * @member {array} [subnet.serviceEndpointPolicies] An array of service
 * endpoint policies.
 * @member {array} [subnet.ipConfigurations] Gets an array of references to the
 * network interface IP configurations using subnet.
 * @member {array} [subnet.resourceNavigationLinks] Gets an array of references
 * to the external resources using subnet.
 * @member {string} [subnet.provisioningState] The provisioning state of the
 * resource.
 * @member {string} [subnet.name] The name of the resource that is unique
 * within a resource group. This name can be used to access the resource.
 * @member {string} [subnet.etag] A unique read-only string that changes
 * whenever the resource is updated.
 * @member {object} [publicIPAddress] The reference of the public IP resource.
 * @member {object} [publicIPAddress.sku] The public IP address SKU.
 * @member {string} [publicIPAddress.sku.name] Name of a public IP address SKU.
 * Possible values include: 'Basic', 'Standard'
 * @member {string} [publicIPAddress.publicIPAllocationMethod] The public IP
 * allocation method. Possible values are: 'Static' and 'Dynamic'. Possible
 * values include: 'Static', 'Dynamic'
 * @member {string} [publicIPAddress.publicIPAddressVersion] The public IP
 * address version. Possible values are: 'IPv4' and 'IPv6'. Possible values
 * include: 'IPv4', 'IPv6'
 * @member {object} [publicIPAddress.ipConfiguration] The IP configuration
 * associated with the public IP address.
 * @member {object} [publicIPAddress.dnsSettings] The FQDN of the DNS record
 * associated with the public IP address.
 * @member {string} [publicIPAddress.dnsSettings.domainNameLabel] Gets or sets
 * the Domain name label.The concatenation of the domain name label and the
 * regionalized DNS zone make up the fully qualified domain name associated
 * with the public IP address. If a domain name label is specified, an A DNS
 * record is created for the public IP in the Microsoft Azure DNS system.
 * @member {string} [publicIPAddress.dnsSettings.fqdn] Gets the FQDN, Fully
 * qualified domain name of the A DNS record associated with the public IP.
 * This is the concatenation of the domainNameLabel and the regionalized DNS
 * zone.
 * @member {string} [publicIPAddress.dnsSettings.reverseFqdn] Gets or Sets the
 * Reverse FQDN. A user-visible, fully qualified domain name that resolves to
 * this public IP address. If the reverseFqdn is specified, then a PTR DNS
 * record is created pointing from the IP address in the in-addr.arpa domain to
 * the reverse FQDN.
 * @member {array} [publicIPAddress.ipTags] The list of tags associated with
 * the public IP address.
 * @member {string} [publicIPAddress.ipAddress] The IP address associated with
 * the public IP address resource.
 * @member {object} [publicIPAddress.publicIPPrefix] The Public IP Prefix this
 * Public IP Address should be allocated from.
 * @member {string} [publicIPAddress.publicIPPrefix.id] Resource ID.
 * @member {number} [publicIPAddress.idleTimeoutInMinutes] The idle timeout of
 * the public IP address.
 * @member {string} [publicIPAddress.resourceGuid] The resource GUID property
 * of the public IP resource.
 * @member {string} [publicIPAddress.provisioningState] The provisioning state
 * of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [publicIPAddress.etag] A unique read-only string that
 * changes whenever the resource is updated.
 * @member {array} [publicIPAddress.zones] A list of availability zones
 * denoting the IP allocated for the resource needs to come from.
 * @member {string} [provisioningState] Gets the provisioning state of the
 * public IP resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface IPConfiguration extends SubResource {
  privateIPAddress?: string;
  privateIPAllocationMethod?: string;
  subnet?: Subnet;
  publicIPAddress?: PublicIPAddress;
  provisioningState?: string;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the ResourceNavigationLink class.
 * @constructor
 * ResourceNavigationLink resource.
 *
 * @member {string} [linkedResourceType] Resource type of the linked resource.
 * @member {string} [link] Link to the external resource
 * @member {string} [provisioningState] Provisioning state of the
 * ResourceNavigationLink resource.
 * @member {string} [name] Name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface ResourceNavigationLink extends SubResource {
  linkedResourceType?: string;
  link?: string;
  readonly provisioningState?: string;
  name?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the Subnet class.
 * @constructor
 * Subnet in a virtual network resource.
 *
 * @member {string} [addressPrefix] The address prefix for the subnet.
 * @member {array} [addressPrefixes] List of  address prefixes for the subnet.
 * @member {object} [networkSecurityGroup] The reference of the
 * NetworkSecurityGroup resource.
 * @member {array} [networkSecurityGroup.securityRules] A collection of
 * security rules of the network security group.
 * @member {array} [networkSecurityGroup.defaultSecurityRules] The default
 * security rules of network security group.
 * @member {array} [networkSecurityGroup.networkInterfaces] A collection of
 * references to network interfaces.
 * @member {array} [networkSecurityGroup.subnets] A collection of references to
 * subnets.
 * @member {string} [networkSecurityGroup.resourceGuid] The resource GUID
 * property of the network security group resource.
 * @member {string} [networkSecurityGroup.provisioningState] The provisioning
 * state of the public IP resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string} [networkSecurityGroup.etag] A unique read-only string that
 * changes whenever the resource is updated.
 * @member {object} [routeTable] The reference of the RouteTable resource.
 * @member {array} [routeTable.routes] Collection of routes contained within a
 * route table.
 * @member {array} [routeTable.subnets] A collection of references to subnets.
 * @member {boolean} [routeTable.disableBgpRoutePropagation] Gets or sets
 * whether to disable the routes learned by BGP on that route table. True means
 * disable.
 * @member {string} [routeTable.provisioningState] The provisioning state of
 * the resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [routeTable.etag] Gets a unique read-only string that
 * changes whenever the resource is updated.
 * @member {array} [serviceEndpoints] An array of service endpoints.
 * @member {array} [serviceEndpointPolicies] An array of service endpoint
 * policies.
 * @member {array} [ipConfigurations] Gets an array of references to the
 * network interface IP configurations using subnet.
 * @member {array} [resourceNavigationLinks] Gets an array of references to the
 * external resources using subnet.
 * @member {string} [provisioningState] The provisioning state of the resource.
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface Subnet extends SubResource {
  addressPrefix?: string;
  addressPrefixes?: string[];
  networkSecurityGroup?: NetworkSecurityGroup;
  routeTable?: RouteTable;
  serviceEndpoints?: ServiceEndpointPropertiesFormat[];
  serviceEndpointPolicies?: ServiceEndpointPolicy[];
  readonly ipConfigurations?: IPConfiguration[];
  resourceNavigationLinks?: ResourceNavigationLink[];
  provisioningState?: string;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the NetworkInterfaceIPConfiguration class.
 * @constructor
 * IPConfiguration in a network interface.
 *
 * @member {array} [applicationGatewayBackendAddressPools] The reference of
 * ApplicationGatewayBackendAddressPool resource.
 * @member {array} [loadBalancerBackendAddressPools] The reference of
 * LoadBalancerBackendAddressPool resource.
 * @member {array} [loadBalancerInboundNatRules] A list of references of
 * LoadBalancerInboundNatRules.
 * @member {string} [privateIPAddress] Private IP address of the IP
 * configuration.
 * @member {string} [privateIPAllocationMethod] Defines how a private IP
 * address is assigned. Possible values are: 'Static' and 'Dynamic'. Possible
 * values include: 'Static', 'Dynamic'
 * @member {string} [privateIPAddressVersion] Available from Api-Version
 * 2016-03-30 onwards, it represents whether the specific ipconfiguration is
 * IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and
 * 'IPv6'. Possible values include: 'IPv4', 'IPv6'
 * @member {object} [subnet] Subnet bound to the IP configuration.
 * @member {string} [subnet.addressPrefix] The address prefix for the subnet.
 * @member {array} [subnet.addressPrefixes] List of  address prefixes for the
 * subnet.
 * @member {object} [subnet.networkSecurityGroup] The reference of the
 * NetworkSecurityGroup resource.
 * @member {array} [subnet.networkSecurityGroup.securityRules] A collection of
 * security rules of the network security group.
 * @member {array} [subnet.networkSecurityGroup.defaultSecurityRules] The
 * default security rules of network security group.
 * @member {array} [subnet.networkSecurityGroup.networkInterfaces] A collection
 * of references to network interfaces.
 * @member {array} [subnet.networkSecurityGroup.subnets] A collection of
 * references to subnets.
 * @member {string} [subnet.networkSecurityGroup.resourceGuid] The resource
 * GUID property of the network security group resource.
 * @member {string} [subnet.networkSecurityGroup.provisioningState] The
 * provisioning state of the public IP resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [subnet.networkSecurityGroup.etag] A unique read-only
 * string that changes whenever the resource is updated.
 * @member {object} [subnet.routeTable] The reference of the RouteTable
 * resource.
 * @member {array} [subnet.routeTable.routes] Collection of routes contained
 * within a route table.
 * @member {array} [subnet.routeTable.subnets] A collection of references to
 * subnets.
 * @member {boolean} [subnet.routeTable.disableBgpRoutePropagation] Gets or
 * sets whether to disable the routes learned by BGP on that route table. True
 * means disable.
 * @member {string} [subnet.routeTable.provisioningState] The provisioning
 * state of the resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [subnet.routeTable.etag] Gets a unique read-only string
 * that changes whenever the resource is updated.
 * @member {array} [subnet.serviceEndpoints] An array of service endpoints.
 * @member {array} [subnet.serviceEndpointPolicies] An array of service
 * endpoint policies.
 * @member {array} [subnet.ipConfigurations] Gets an array of references to the
 * network interface IP configurations using subnet.
 * @member {array} [subnet.resourceNavigationLinks] Gets an array of references
 * to the external resources using subnet.
 * @member {string} [subnet.provisioningState] The provisioning state of the
 * resource.
 * @member {string} [subnet.name] The name of the resource that is unique
 * within a resource group. This name can be used to access the resource.
 * @member {string} [subnet.etag] A unique read-only string that changes
 * whenever the resource is updated.
 * @member {boolean} [primary] Gets whether this is a primary customer address
 * on the network interface.
 * @member {object} [publicIPAddress] Public IP address bound to the IP
 * configuration.
 * @member {object} [publicIPAddress.sku] The public IP address SKU.
 * @member {string} [publicIPAddress.sku.name] Name of a public IP address SKU.
 * Possible values include: 'Basic', 'Standard'
 * @member {string} [publicIPAddress.publicIPAllocationMethod] The public IP
 * allocation method. Possible values are: 'Static' and 'Dynamic'. Possible
 * values include: 'Static', 'Dynamic'
 * @member {string} [publicIPAddress.publicIPAddressVersion] The public IP
 * address version. Possible values are: 'IPv4' and 'IPv6'. Possible values
 * include: 'IPv4', 'IPv6'
 * @member {object} [publicIPAddress.ipConfiguration] The IP configuration
 * associated with the public IP address.
 * @member {string} [publicIPAddress.ipConfiguration.privateIPAddress] The
 * private IP address of the IP configuration.
 * @member {string} [publicIPAddress.ipConfiguration.privateIPAllocationMethod]
 * The private IP allocation method. Possible values are 'Static' and
 * 'Dynamic'. Possible values include: 'Static', 'Dynamic'
 * @member {object} [publicIPAddress.ipConfiguration.subnet] The reference of
 * the subnet resource.
 * @member {string} [publicIPAddress.ipConfiguration.subnet.addressPrefix] The
 * address prefix for the subnet.
 * @member {array} [publicIPAddress.ipConfiguration.subnet.addressPrefixes]
 * List of  address prefixes for the subnet.
 * @member {object}
 * [publicIPAddress.ipConfiguration.subnet.networkSecurityGroup] The reference
 * of the NetworkSecurityGroup resource.
 * @member {array}
 * [publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.securityRules]
 * A collection of security rules of the network security group.
 * @member {array}
 * [publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.defaultSecurityRules]
 * The default security rules of network security group.
 * @member {array}
 * [publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.networkInterfaces]
 * A collection of references to network interfaces.
 * @member {array}
 * [publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.subnets] A
 * collection of references to subnets.
 * @member {string}
 * [publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.resourceGuid]
 * The resource GUID property of the network security group resource.
 * @member {string}
 * [publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.provisioningState]
 * The provisioning state of the public IP resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string}
 * [publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.etag] A unique
 * read-only string that changes whenever the resource is updated.
 * @member {object} [publicIPAddress.ipConfiguration.subnet.routeTable] The
 * reference of the RouteTable resource.
 * @member {array} [publicIPAddress.ipConfiguration.subnet.routeTable.routes]
 * Collection of routes contained within a route table.
 * @member {array} [publicIPAddress.ipConfiguration.subnet.routeTable.subnets]
 * A collection of references to subnets.
 * @member {boolean}
 * [publicIPAddress.ipConfiguration.subnet.routeTable.disableBgpRoutePropagation]
 * Gets or sets whether to disable the routes learned by BGP on that route
 * table. True means disable.
 * @member {string}
 * [publicIPAddress.ipConfiguration.subnet.routeTable.provisioningState] The
 * provisioning state of the resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string} [publicIPAddress.ipConfiguration.subnet.routeTable.etag]
 * Gets a unique read-only string that changes whenever the resource is
 * updated.
 * @member {array} [publicIPAddress.ipConfiguration.subnet.serviceEndpoints] An
 * array of service endpoints.
 * @member {array}
 * [publicIPAddress.ipConfiguration.subnet.serviceEndpointPolicies] An array of
 * service endpoint policies.
 * @member {array} [publicIPAddress.ipConfiguration.subnet.ipConfigurations]
 * Gets an array of references to the network interface IP configurations using
 * subnet.
 * @member {array}
 * [publicIPAddress.ipConfiguration.subnet.resourceNavigationLinks] Gets an
 * array of references to the external resources using subnet.
 * @member {string} [publicIPAddress.ipConfiguration.subnet.provisioningState]
 * The provisioning state of the resource.
 * @member {string} [publicIPAddress.ipConfiguration.subnet.name] The name of
 * the resource that is unique within a resource group. This name can be used
 * to access the resource.
 * @member {string} [publicIPAddress.ipConfiguration.subnet.etag] A unique
 * read-only string that changes whenever the resource is updated.
 * @member {object} [publicIPAddress.ipConfiguration.publicIPAddress] The
 * reference of the public IP resource.
 * @member {string} [publicIPAddress.ipConfiguration.provisioningState] Gets
 * the provisioning state of the public IP resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [publicIPAddress.ipConfiguration.name] The name of the
 * resource that is unique within a resource group. This name can be used to
 * access the resource.
 * @member {string} [publicIPAddress.ipConfiguration.etag] A unique read-only
 * string that changes whenever the resource is updated.
 * @member {object} [publicIPAddress.dnsSettings] The FQDN of the DNS record
 * associated with the public IP address.
 * @member {string} [publicIPAddress.dnsSettings.domainNameLabel] Gets or sets
 * the Domain name label.The concatenation of the domain name label and the
 * regionalized DNS zone make up the fully qualified domain name associated
 * with the public IP address. If a domain name label is specified, an A DNS
 * record is created for the public IP in the Microsoft Azure DNS system.
 * @member {string} [publicIPAddress.dnsSettings.fqdn] Gets the FQDN, Fully
 * qualified domain name of the A DNS record associated with the public IP.
 * This is the concatenation of the domainNameLabel and the regionalized DNS
 * zone.
 * @member {string} [publicIPAddress.dnsSettings.reverseFqdn] Gets or Sets the
 * Reverse FQDN. A user-visible, fully qualified domain name that resolves to
 * this public IP address. If the reverseFqdn is specified, then a PTR DNS
 * record is created pointing from the IP address in the in-addr.arpa domain to
 * the reverse FQDN.
 * @member {array} [publicIPAddress.ipTags] The list of tags associated with
 * the public IP address.
 * @member {string} [publicIPAddress.ipAddress] The IP address associated with
 * the public IP address resource.
 * @member {object} [publicIPAddress.publicIPPrefix] The Public IP Prefix this
 * Public IP Address should be allocated from.
 * @member {string} [publicIPAddress.publicIPPrefix.id] Resource ID.
 * @member {number} [publicIPAddress.idleTimeoutInMinutes] The idle timeout of
 * the public IP address.
 * @member {string} [publicIPAddress.resourceGuid] The resource GUID property
 * of the public IP resource.
 * @member {string} [publicIPAddress.provisioningState] The provisioning state
 * of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [publicIPAddress.etag] A unique read-only string that
 * changes whenever the resource is updated.
 * @member {array} [publicIPAddress.zones] A list of availability zones
 * denoting the IP allocated for the resource needs to come from.
 * @member {array} [applicationSecurityGroups] Application security groups in
 * which the IP configuration is included.
 * @member {string} [provisioningState] The provisioning state of the network
 * interface IP configuration. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface NetworkInterfaceIPConfiguration extends SubResource {
  applicationGatewayBackendAddressPools?: ApplicationGatewayBackendAddressPool[];
  loadBalancerBackendAddressPools?: BackendAddressPool[];
  loadBalancerInboundNatRules?: InboundNatRule[];
  privateIPAddress?: string;
  privateIPAllocationMethod?: string;
  privateIPAddressVersion?: string;
  subnet?: Subnet;
  primary?: boolean;
  publicIPAddress?: PublicIPAddress;
  applicationSecurityGroups?: ApplicationSecurityGroup[];
  provisioningState?: string;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayBackendAddress class.
 * @constructor
 * Backend address of an application gateway.
 *
 * @member {string} [fqdn] Fully qualified domain name (FQDN).
 * @member {string} [ipAddress] IP address
 */
export interface ApplicationGatewayBackendAddress {
  fqdn?: string;
  ipAddress?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayBackendAddressPool class.
 * @constructor
 * Backend Address Pool of an application gateway.
 *
 * @member {array} [backendIPConfigurations] Collection of references to IPs
 * defined in network interfaces.
 * @member {array} [backendAddresses] Backend addresses
 * @member {string} [provisioningState] Provisioning state of the backend
 * address pool resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [name] Name of the backend address pool that is unique
 * within an Application Gateway.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {string} [type] Type of the resource.
 */
export interface ApplicationGatewayBackendAddressPool extends SubResource {
  backendIPConfigurations?: NetworkInterfaceIPConfiguration[];
  backendAddresses?: ApplicationGatewayBackendAddress[];
  provisioningState?: string;
  name?: string;
  etag?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayConnectionDraining class.
 * @constructor
 * Connection draining allows open connections to a backend server to be active
 * for a specified time after the backend server got removed from the
 * configuration.
 *
 * @member {boolean} enabled Whether connection draining is enabled or not.
 * @member {number} drainTimeoutInSec The number of seconds connection draining
 * is active. Acceptable values are from 1 second to 3600 seconds.
 */
export interface ApplicationGatewayConnectionDraining {
  enabled: boolean;
  drainTimeoutInSec: number;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayBackendHttpSettings class.
 * @constructor
 * Backend address pool settings of an application gateway.
 *
 * @member {number} [port] The destination port on the backend.
 * @member {string} [protocol] The protocol used to communicate with the
 * backend. Possible values are 'Http' and 'Https'. Possible values include:
 * 'Http', 'Https'
 * @member {string} [cookieBasedAffinity] Cookie based affinity. Possible
 * values include: 'Enabled', 'Disabled'
 * @member {number} [requestTimeout] Request timeout in seconds. Application
 * Gateway will fail the request if response is not received within
 * RequestTimeout. Acceptable values are from 1 second to 86400 seconds.
 * @member {object} [probe] Probe resource of an application gateway.
 * @member {string} [probe.id] Resource ID.
 * @member {array} [authenticationCertificates] Array of references to
 * application gateway authentication certificates.
 * @member {object} [connectionDraining] Connection draining of the backend
 * http settings resource.
 * @member {boolean} [connectionDraining.enabled] Whether connection draining
 * is enabled or not.
 * @member {number} [connectionDraining.drainTimeoutInSec] The number of
 * seconds connection draining is active. Acceptable values are from 1 second
 * to 3600 seconds.
 * @member {string} [hostName] Host header to be sent to the backend servers.
 * @member {boolean} [pickHostNameFromBackendAddress] Whether to pick host
 * header should be picked from the host name of the backend server. Default
 * value is false.
 * @member {string} [affinityCookieName] Cookie name to use for the affinity
 * cookie.
 * @member {boolean} [probeEnabled] Whether the probe is enabled. Default value
 * is false.
 * @member {string} [path] Path which should be used as a prefix for all HTTP
 * requests. Null means no path will be prefixed. Default value is null.
 * @member {string} [provisioningState] Provisioning state of the backend http
 * settings resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [name] Name of the backend http settings that is unique
 * within an Application Gateway.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {string} [type] Type of the resource.
 */
export interface ApplicationGatewayBackendHttpSettings extends SubResource {
  port?: number;
  protocol?: string;
  cookieBasedAffinity?: string;
  requestTimeout?: number;
  probe?: SubResource;
  authenticationCertificates?: SubResource[];
  connectionDraining?: ApplicationGatewayConnectionDraining;
  hostName?: string;
  pickHostNameFromBackendAddress?: boolean;
  affinityCookieName?: string;
  probeEnabled?: boolean;
  path?: string;
  provisioningState?: string;
  name?: string;
  etag?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayBackendHealthServer class.
 * @constructor
 * Application gateway backendhealth http settings.
 *
 * @member {string} [address] IP address or FQDN of backend server.
 * @member {object} [ipConfiguration] Reference of IP configuration of backend
 * server.
 * @member {array} [ipConfiguration.applicationGatewayBackendAddressPools] The
 * reference of ApplicationGatewayBackendAddressPool resource.
 * @member {array} [ipConfiguration.loadBalancerBackendAddressPools] The
 * reference of LoadBalancerBackendAddressPool resource.
 * @member {array} [ipConfiguration.loadBalancerInboundNatRules] A list of
 * references of LoadBalancerInboundNatRules.
 * @member {string} [ipConfiguration.privateIPAddress] Private IP address of
 * the IP configuration.
 * @member {string} [ipConfiguration.privateIPAllocationMethod] Defines how a
 * private IP address is assigned. Possible values are: 'Static' and 'Dynamic'.
 * Possible values include: 'Static', 'Dynamic'
 * @member {string} [ipConfiguration.privateIPAddressVersion] Available from
 * Api-Version 2016-03-30 onwards, it represents whether the specific
 * ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values
 * are: 'IPv4' and 'IPv6'. Possible values include: 'IPv4', 'IPv6'
 * @member {object} [ipConfiguration.subnet] Subnet bound to the IP
 * configuration.
 * @member {string} [ipConfiguration.subnet.addressPrefix] The address prefix
 * for the subnet.
 * @member {array} [ipConfiguration.subnet.addressPrefixes] List of  address
 * prefixes for the subnet.
 * @member {object} [ipConfiguration.subnet.networkSecurityGroup] The reference
 * of the NetworkSecurityGroup resource.
 * @member {array} [ipConfiguration.subnet.networkSecurityGroup.securityRules]
 * A collection of security rules of the network security group.
 * @member {array}
 * [ipConfiguration.subnet.networkSecurityGroup.defaultSecurityRules] The
 * default security rules of network security group.
 * @member {array}
 * [ipConfiguration.subnet.networkSecurityGroup.networkInterfaces] A collection
 * of references to network interfaces.
 * @member {array} [ipConfiguration.subnet.networkSecurityGroup.subnets] A
 * collection of references to subnets.
 * @member {string} [ipConfiguration.subnet.networkSecurityGroup.resourceGuid]
 * The resource GUID property of the network security group resource.
 * @member {string}
 * [ipConfiguration.subnet.networkSecurityGroup.provisioningState] The
 * provisioning state of the public IP resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [ipConfiguration.subnet.networkSecurityGroup.etag] A unique
 * read-only string that changes whenever the resource is updated.
 * @member {object} [ipConfiguration.subnet.routeTable] The reference of the
 * RouteTable resource.
 * @member {array} [ipConfiguration.subnet.routeTable.routes] Collection of
 * routes contained within a route table.
 * @member {array} [ipConfiguration.subnet.routeTable.subnets] A collection of
 * references to subnets.
 * @member {boolean}
 * [ipConfiguration.subnet.routeTable.disableBgpRoutePropagation] Gets or sets
 * whether to disable the routes learned by BGP on that route table. True means
 * disable.
 * @member {string} [ipConfiguration.subnet.routeTable.provisioningState] The
 * provisioning state of the resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string} [ipConfiguration.subnet.routeTable.etag] Gets a unique
 * read-only string that changes whenever the resource is updated.
 * @member {array} [ipConfiguration.subnet.serviceEndpoints] An array of
 * service endpoints.
 * @member {array} [ipConfiguration.subnet.serviceEndpointPolicies] An array of
 * service endpoint policies.
 * @member {array} [ipConfiguration.subnet.ipConfigurations] Gets an array of
 * references to the network interface IP configurations using subnet.
 * @member {array} [ipConfiguration.subnet.resourceNavigationLinks] Gets an
 * array of references to the external resources using subnet.
 * @member {string} [ipConfiguration.subnet.provisioningState] The provisioning
 * state of the resource.
 * @member {string} [ipConfiguration.subnet.name] The name of the resource that
 * is unique within a resource group. This name can be used to access the
 * resource.
 * @member {string} [ipConfiguration.subnet.etag] A unique read-only string
 * that changes whenever the resource is updated.
 * @member {boolean} [ipConfiguration.primary] Gets whether this is a primary
 * customer address on the network interface.
 * @member {object} [ipConfiguration.publicIPAddress] Public IP address bound
 * to the IP configuration.
 * @member {object} [ipConfiguration.publicIPAddress.sku] The public IP address
 * SKU.
 * @member {string} [ipConfiguration.publicIPAddress.sku.name] Name of a public
 * IP address SKU. Possible values include: 'Basic', 'Standard'
 * @member {string} [ipConfiguration.publicIPAddress.publicIPAllocationMethod]
 * The public IP allocation method. Possible values are: 'Static' and
 * 'Dynamic'. Possible values include: 'Static', 'Dynamic'
 * @member {string} [ipConfiguration.publicIPAddress.publicIPAddressVersion]
 * The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
 * Possible values include: 'IPv4', 'IPv6'
 * @member {object} [ipConfiguration.publicIPAddress.ipConfiguration] The IP
 * configuration associated with the public IP address.
 * @member {string}
 * [ipConfiguration.publicIPAddress.ipConfiguration.privateIPAddress] The
 * private IP address of the IP configuration.
 * @member {string}
 * [ipConfiguration.publicIPAddress.ipConfiguration.privateIPAllocationMethod]
 * The private IP allocation method. Possible values are 'Static' and
 * 'Dynamic'. Possible values include: 'Static', 'Dynamic'
 * @member {object} [ipConfiguration.publicIPAddress.ipConfiguration.subnet]
 * The reference of the subnet resource.
 * @member {string}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.addressPrefix] The
 * address prefix for the subnet.
 * @member {array}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.addressPrefixes]
 * List of  address prefixes for the subnet.
 * @member {object}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup]
 * The reference of the NetworkSecurityGroup resource.
 * @member {array}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.securityRules]
 * A collection of security rules of the network security group.
 * @member {array}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.defaultSecurityRules]
 * The default security rules of network security group.
 * @member {array}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.networkInterfaces]
 * A collection of references to network interfaces.
 * @member {array}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.subnets]
 * A collection of references to subnets.
 * @member {string}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.resourceGuid]
 * The resource GUID property of the network security group resource.
 * @member {string}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.provisioningState]
 * The provisioning state of the public IP resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.etag]
 * A unique read-only string that changes whenever the resource is updated.
 * @member {object}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable] The
 * reference of the RouteTable resource.
 * @member {array}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable.routes]
 * Collection of routes contained within a route table.
 * @member {array}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable.subnets]
 * A collection of references to subnets.
 * @member {boolean}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable.disableBgpRoutePropagation]
 * Gets or sets whether to disable the routes learned by BGP on that route
 * table. True means disable.
 * @member {string}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable.provisioningState]
 * The provisioning state of the resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable.etag]
 * Gets a unique read-only string that changes whenever the resource is
 * updated.
 * @member {array}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.serviceEndpoints] An
 * array of service endpoints.
 * @member {array}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.serviceEndpointPolicies]
 * An array of service endpoint policies.
 * @member {array}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.ipConfigurations]
 * Gets an array of references to the network interface IP configurations using
 * subnet.
 * @member {array}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.resourceNavigationLinks]
 * Gets an array of references to the external resources using subnet.
 * @member {string}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.provisioningState]
 * The provisioning state of the resource.
 * @member {string}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.name] The name of
 * the resource that is unique within a resource group. This name can be used
 * to access the resource.
 * @member {string}
 * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.etag] A unique
 * read-only string that changes whenever the resource is updated.
 * @member {object}
 * [ipConfiguration.publicIPAddress.ipConfiguration.publicIPAddress] The
 * reference of the public IP resource.
 * @member {string}
 * [ipConfiguration.publicIPAddress.ipConfiguration.provisioningState] Gets the
 * provisioning state of the public IP resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [ipConfiguration.publicIPAddress.ipConfiguration.name] The
 * name of the resource that is unique within a resource group. This name can
 * be used to access the resource.
 * @member {string} [ipConfiguration.publicIPAddress.ipConfiguration.etag] A
 * unique read-only string that changes whenever the resource is updated.
 * @member {object} [ipConfiguration.publicIPAddress.dnsSettings] The FQDN of
 * the DNS record associated with the public IP address.
 * @member {string}
 * [ipConfiguration.publicIPAddress.dnsSettings.domainNameLabel] Gets or sets
 * the Domain name label.The concatenation of the domain name label and the
 * regionalized DNS zone make up the fully qualified domain name associated
 * with the public IP address. If a domain name label is specified, an A DNS
 * record is created for the public IP in the Microsoft Azure DNS system.
 * @member {string} [ipConfiguration.publicIPAddress.dnsSettings.fqdn] Gets the
 * FQDN, Fully qualified domain name of the A DNS record associated with the
 * public IP. This is the concatenation of the domainNameLabel and the
 * regionalized DNS zone.
 * @member {string} [ipConfiguration.publicIPAddress.dnsSettings.reverseFqdn]
 * Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name
 * that resolves to this public IP address. If the reverseFqdn is specified,
 * then a PTR DNS record is created pointing from the IP address in the
 * in-addr.arpa domain to the reverse FQDN.
 * @member {array} [ipConfiguration.publicIPAddress.ipTags] The list of tags
 * associated with the public IP address.
 * @member {string} [ipConfiguration.publicIPAddress.ipAddress] The IP address
 * associated with the public IP address resource.
 * @member {object} [ipConfiguration.publicIPAddress.publicIPPrefix] The Public
 * IP Prefix this Public IP Address should be allocated from.
 * @member {string} [ipConfiguration.publicIPAddress.publicIPPrefix.id]
 * Resource ID.
 * @member {number} [ipConfiguration.publicIPAddress.idleTimeoutInMinutes] The
 * idle timeout of the public IP address.
 * @member {string} [ipConfiguration.publicIPAddress.resourceGuid] The resource
 * GUID property of the public IP resource.
 * @member {string} [ipConfiguration.publicIPAddress.provisioningState] The
 * provisioning state of the PublicIP resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [ipConfiguration.publicIPAddress.etag] A unique read-only
 * string that changes whenever the resource is updated.
 * @member {array} [ipConfiguration.publicIPAddress.zones] A list of
 * availability zones denoting the IP allocated for the resource needs to come
 * from.
 * @member {array} [ipConfiguration.applicationSecurityGroups] Application
 * security groups in which the IP configuration is included.
 * @member {string} [ipConfiguration.provisioningState] The provisioning state
 * of the network interface IP configuration. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string} [ipConfiguration.name] The name of the resource that is
 * unique within a resource group. This name can be used to access the
 * resource.
 * @member {string} [ipConfiguration.etag] A unique read-only string that
 * changes whenever the resource is updated.
 * @member {string} [health] Health of backend server. Possible values include:
 * 'Unknown', 'Up', 'Down', 'Partial', 'Draining'
 */
export interface ApplicationGatewayBackendHealthServer {
  address?: string;
  ipConfiguration?: NetworkInterfaceIPConfiguration;
  health?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayBackendHealthHttpSettings class.
 * @constructor
 * Application gateway BackendHealthHttp settings.
 *
 * @member {object} [backendHttpSettings] Reference of an
 * ApplicationGatewayBackendHttpSettings resource.
 * @member {number} [backendHttpSettings.port] The destination port on the
 * backend.
 * @member {string} [backendHttpSettings.protocol] The protocol used to
 * communicate with the backend. Possible values are 'Http' and 'Https'.
 * Possible values include: 'Http', 'Https'
 * @member {string} [backendHttpSettings.cookieBasedAffinity] Cookie based
 * affinity. Possible values include: 'Enabled', 'Disabled'
 * @member {number} [backendHttpSettings.requestTimeout] Request timeout in
 * seconds. Application Gateway will fail the request if response is not
 * received within RequestTimeout. Acceptable values are from 1 second to 86400
 * seconds.
 * @member {object} [backendHttpSettings.probe] Probe resource of an
 * application gateway.
 * @member {string} [backendHttpSettings.probe.id] Resource ID.
 * @member {array} [backendHttpSettings.authenticationCertificates] Array of
 * references to application gateway authentication certificates.
 * @member {object} [backendHttpSettings.connectionDraining] Connection
 * draining of the backend http settings resource.
 * @member {boolean} [backendHttpSettings.connectionDraining.enabled] Whether
 * connection draining is enabled or not.
 * @member {number} [backendHttpSettings.connectionDraining.drainTimeoutInSec]
 * The number of seconds connection draining is active. Acceptable values are
 * from 1 second to 3600 seconds.
 * @member {string} [backendHttpSettings.hostName] Host header to be sent to
 * the backend servers.
 * @member {boolean} [backendHttpSettings.pickHostNameFromBackendAddress]
 * Whether to pick host header should be picked from the host name of the
 * backend server. Default value is false.
 * @member {string} [backendHttpSettings.affinityCookieName] Cookie name to use
 * for the affinity cookie.
 * @member {boolean} [backendHttpSettings.probeEnabled] Whether the probe is
 * enabled. Default value is false.
 * @member {string} [backendHttpSettings.path] Path which should be used as a
 * prefix for all HTTP requests. Null means no path will be prefixed. Default
 * value is null.
 * @member {string} [backendHttpSettings.provisioningState] Provisioning state
 * of the backend http settings resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string} [backendHttpSettings.name] Name of the backend http
 * settings that is unique within an Application Gateway.
 * @member {string} [backendHttpSettings.etag] A unique read-only string that
 * changes whenever the resource is updated.
 * @member {string} [backendHttpSettings.type] Type of the resource.
 * @member {array} [servers] List of ApplicationGatewayBackendHealthServer
 * resources.
 */
export interface ApplicationGatewayBackendHealthHttpSettings {
  backendHttpSettings?: ApplicationGatewayBackendHttpSettings;
  servers?: ApplicationGatewayBackendHealthServer[];
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayBackendHealthPool class.
 * @constructor
 * Application gateway BackendHealth pool.
 *
 * @member {object} [backendAddressPool] Reference of an
 * ApplicationGatewayBackendAddressPool resource.
 * @member {array} [backendAddressPool.backendIPConfigurations] Collection of
 * references to IPs defined in network interfaces.
 * @member {array} [backendAddressPool.backendAddresses] Backend addresses
 * @member {string} [backendAddressPool.provisioningState] Provisioning state
 * of the backend address pool resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string} [backendAddressPool.name] Name of the backend address pool
 * that is unique within an Application Gateway.
 * @member {string} [backendAddressPool.etag] A unique read-only string that
 * changes whenever the resource is updated.
 * @member {string} [backendAddressPool.type] Type of the resource.
 * @member {array} [backendHttpSettingsCollection] List of
 * ApplicationGatewayBackendHealthHttpSettings resources.
 */
export interface ApplicationGatewayBackendHealthPool {
  backendAddressPool?: ApplicationGatewayBackendAddressPool;
  backendHttpSettingsCollection?: ApplicationGatewayBackendHealthHttpSettings[];
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayBackendHealth class.
 * @constructor
 * List of ApplicationGatewayBackendHealthPool resources.
 *
 * @member {array} [backendAddressPools]
 */
export interface ApplicationGatewayBackendHealth {
  backendAddressPools?: ApplicationGatewayBackendHealthPool[];
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewaySku class.
 * @constructor
 * SKU of an application gateway
 *
 * @member {string} [name] Name of an application gateway SKU. Possible values
 * include: 'Standard_Small', 'Standard_Medium', 'Standard_Large',
 * 'WAF_Medium', 'WAF_Large', 'Standard_v2', 'WAF_v2'
 * @member {string} [tier] Tier of an application gateway. Possible values
 * include: 'Standard', 'WAF', 'Standard_v2', 'WAF_v2'
 * @member {number} [capacity] Capacity (instance count) of an application
 * gateway.
 */
export interface ApplicationGatewaySku {
  name?: string;
  tier?: string;
  capacity?: number;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewaySslPolicy class.
 * @constructor
 * Application Gateway Ssl policy.
 *
 * @member {array} [disabledSslProtocols] Ssl protocols to be disabled on
 * application gateway.
 * @member {string} [policyType] Type of Ssl Policy. Possible values include:
 * 'Predefined', 'Custom'
 * @member {string} [policyName] Name of Ssl predefined policy. Possible values
 * include: 'AppGwSslPolicy20150501', 'AppGwSslPolicy20170401',
 * 'AppGwSslPolicy20170401S'
 * @member {array} [cipherSuites] Ssl cipher suites to be enabled in the
 * specified order to application gateway.
 * @member {string} [minProtocolVersion] Minimum version of Ssl protocol to be
 * supported on application gateway. Possible values include: 'TLSv1_0',
 * 'TLSv1_1', 'TLSv1_2'
 */
export interface ApplicationGatewaySslPolicy {
  disabledSslProtocols?: string[];
  policyType?: string;
  policyName?: string;
  cipherSuites?: string[];
  minProtocolVersion?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayIPConfiguration class.
 * @constructor
 * IP configuration of an application gateway. Currently 1 public and 1 private
 * IP configuration is allowed.
 *
 * @member {object} [subnet] Reference of the subnet resource. A subnet from
 * where application gateway gets its private address.
 * @member {string} [subnet.id] Resource ID.
 * @member {string} [provisioningState] Provisioning state of the application
 * gateway subnet resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [name] Name of the IP configuration that is unique within
 * an Application Gateway.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {string} [type] Type of the resource.
 */
export interface ApplicationGatewayIPConfiguration extends SubResource {
  subnet?: SubResource;
  provisioningState?: string;
  name?: string;
  etag?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayAuthenticationCertificate class.
 * @constructor
 * Authentication certificates of an application gateway.
 *
 * @member {string} [data] Certificate public data.
 * @member {string} [provisioningState] Provisioning state of the
 * authentication certificate resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string} [name] Name of the authentication certificate that is
 * unique within an Application Gateway.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {string} [type] Type of the resource.
 */
export interface ApplicationGatewayAuthenticationCertificate extends SubResource {
  data?: string;
  provisioningState?: string;
  name?: string;
  etag?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewaySslCertificate class.
 * @constructor
 * SSL certificates of an application gateway.
 *
 * @member {string} [data] Base-64 encoded pfx certificate. Only applicable in
 * PUT Request.
 * @member {string} [password] Password for the pfx file specified in data.
 * Only applicable in PUT request.
 * @member {string} [publicCertData] Base-64 encoded Public cert data
 * corresponding to pfx specified in data. Only applicable in GET request.
 * @member {string} [provisioningState] Provisioning state of the SSL
 * certificate resource Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [name] Name of the SSL certificate that is unique within an
 * Application Gateway.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {string} [type] Type of the resource.
 */
export interface ApplicationGatewaySslCertificate extends SubResource {
  data?: string;
  password?: string;
  publicCertData?: string;
  provisioningState?: string;
  name?: string;
  etag?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayFrontendIPConfiguration class.
 * @constructor
 * Frontend IP configuration of an application gateway.
 *
 * @member {string} [privateIPAddress] PrivateIPAddress of the network
 * interface IP Configuration.
 * @member {string} [privateIPAllocationMethod] PrivateIP allocation method.
 * Possible values include: 'Static', 'Dynamic'
 * @member {object} [subnet] Reference of the subnet resource.
 * @member {string} [subnet.id] Resource ID.
 * @member {object} [publicIPAddress] Reference of the PublicIP resource.
 * @member {string} [publicIPAddress.id] Resource ID.
 * @member {string} [provisioningState] Provisioning state of the public IP
 * resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [name] Name of the frontend IP configuration that is unique
 * within an Application Gateway.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {string} [type] Type of the resource.
 */
export interface ApplicationGatewayFrontendIPConfiguration extends SubResource {
  privateIPAddress?: string;
  privateIPAllocationMethod?: string;
  subnet?: SubResource;
  publicIPAddress?: SubResource;
  provisioningState?: string;
  name?: string;
  etag?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayFrontendPort class.
 * @constructor
 * Frontend port of an application gateway.
 *
 * @member {number} [port] Frontend port
 * @member {string} [provisioningState] Provisioning state of the frontend port
 * resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [name] Name of the frontend port that is unique within an
 * Application Gateway
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {string} [type] Type of the resource.
 */
export interface ApplicationGatewayFrontendPort extends SubResource {
  port?: number;
  provisioningState?: string;
  name?: string;
  etag?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayHttpListener class.
 * @constructor
 * Http listener of an application gateway.
 *
 * @member {object} [frontendIPConfiguration] Frontend IP configuration
 * resource of an application gateway.
 * @member {string} [frontendIPConfiguration.id] Resource ID.
 * @member {object} [frontendPort] Frontend port resource of an application
 * gateway.
 * @member {string} [frontendPort.id] Resource ID.
 * @member {string} [protocol] Protocol of the HTTP listener. Possible values
 * are 'Http' and 'Https'. Possible values include: 'Http', 'Https'
 * @member {string} [hostName] Host name of HTTP listener.
 * @member {object} [sslCertificate] SSL certificate resource of an application
 * gateway.
 * @member {string} [sslCertificate.id] Resource ID.
 * @member {boolean} [requireServerNameIndication] Applicable only if protocol
 * is https. Enables SNI for multi-hosting.
 * @member {string} [provisioningState] Provisioning state of the HTTP listener
 * resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [name] Name of the HTTP listener that is unique within an
 * Application Gateway.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {string} [type] Type of the resource.
 */
export interface ApplicationGatewayHttpListener extends SubResource {
  frontendIPConfiguration?: SubResource;
  frontendPort?: SubResource;
  protocol?: string;
  hostName?: string;
  sslCertificate?: SubResource;
  requireServerNameIndication?: boolean;
  provisioningState?: string;
  name?: string;
  etag?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayPathRule class.
 * @constructor
 * Path rule of URL path map of an application gateway.
 *
 * @member {array} [paths] Path rules of URL path map.
 * @member {object} [backendAddressPool] Backend address pool resource of URL
 * path map path rule.
 * @member {string} [backendAddressPool.id] Resource ID.
 * @member {object} [backendHttpSettings] Backend http settings resource of URL
 * path map path rule.
 * @member {string} [backendHttpSettings.id] Resource ID.
 * @member {object} [redirectConfiguration] Redirect configuration resource of
 * URL path map path rule.
 * @member {string} [redirectConfiguration.id] Resource ID.
 * @member {string} [provisioningState] Path rule of URL path map resource.
 * Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [name] Name of the path rule that is unique within an
 * Application Gateway.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {string} [type] Type of the resource.
 */
export interface ApplicationGatewayPathRule extends SubResource {
  paths?: string[];
  backendAddressPool?: SubResource;
  backendHttpSettings?: SubResource;
  redirectConfiguration?: SubResource;
  provisioningState?: string;
  name?: string;
  etag?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayProbeHealthResponseMatch class.
 * @constructor
 * Application gateway probe health response match
 *
 * @member {string} [body] Body that must be contained in the health response.
 * Default value is empty.
 * @member {array} [statusCodes] Allowed ranges of healthy status codes.
 * Default range of healthy status codes is 200-399.
 */
export interface ApplicationGatewayProbeHealthResponseMatch {
  body?: string;
  statusCodes?: string[];
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayProbe class.
 * @constructor
 * Probe of the application gateway.
 *
 * @member {string} [protocol] The protocol used for the probe. Possible values
 * are 'Http' and 'Https'. Possible values include: 'Http', 'Https'
 * @member {string} [host] Host name to send the probe to.
 * @member {string} [path] Relative path of probe. Valid path starts from '/'.
 * Probe is sent to <Protocol>://<host>:<port><path>
 * @member {number} [interval] The probing interval in seconds. This is the
 * time interval between two consecutive probes. Acceptable values are from 1
 * second to 86400 seconds.
 * @member {number} [timeout] the probe timeout in seconds. Probe marked as
 * failed if valid response is not received with this timeout period.
 * Acceptable values are from 1 second to 86400 seconds.
 * @member {number} [unhealthyThreshold] The probe retry count. Backend server
 * is marked down after consecutive probe failure count reaches
 * UnhealthyThreshold. Acceptable values are from 1 second to 20.
 * @member {boolean} [pickHostNameFromBackendHttpSettings] Whether the host
 * header should be picked from the backend http settings. Default value is
 * false.
 * @member {number} [minServers] Minimum number of servers that are always
 * marked healthy. Default value is 0.
 * @member {object} [match] Criterion for classifying a healthy probe response.
 * @member {string} [match.body] Body that must be contained in the health
 * response. Default value is empty.
 * @member {array} [match.statusCodes] Allowed ranges of healthy status codes.
 * Default range of healthy status codes is 200-399.
 * @member {string} [provisioningState] Provisioning state of the backend http
 * settings resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [name] Name of the probe that is unique within an
 * Application Gateway.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {string} [type] Type of the resource.
 */
export interface ApplicationGatewayProbe extends SubResource {
  protocol?: string;
  host?: string;
  path?: string;
  interval?: number;
  timeout?: number;
  unhealthyThreshold?: number;
  pickHostNameFromBackendHttpSettings?: boolean;
  minServers?: number;
  match?: ApplicationGatewayProbeHealthResponseMatch;
  provisioningState?: string;
  name?: string;
  etag?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayRequestRoutingRule class.
 * @constructor
 * Request routing rule of an application gateway.
 *
 * @member {string} [ruleType] Rule type. Possible values include: 'Basic',
 * 'PathBasedRouting'
 * @member {object} [backendAddressPool] Backend address pool resource of the
 * application gateway.
 * @member {string} [backendAddressPool.id] Resource ID.
 * @member {object} [backendHttpSettings] Backend http settings resource of the
 * application gateway.
 * @member {string} [backendHttpSettings.id] Resource ID.
 * @member {object} [httpListener] Http listener resource of the application
 * gateway.
 * @member {string} [httpListener.id] Resource ID.
 * @member {object} [urlPathMap] URL path map resource of the application
 * gateway.
 * @member {string} [urlPathMap.id] Resource ID.
 * @member {object} [redirectConfiguration] Redirect configuration resource of
 * the application gateway.
 * @member {string} [redirectConfiguration.id] Resource ID.
 * @member {string} [provisioningState] Provisioning state of the request
 * routing rule resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [name] Name of the request routing rule that is unique
 * within an Application Gateway.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {string} [type] Type of the resource.
 */
export interface ApplicationGatewayRequestRoutingRule extends SubResource {
  ruleType?: string;
  backendAddressPool?: SubResource;
  backendHttpSettings?: SubResource;
  httpListener?: SubResource;
  urlPathMap?: SubResource;
  redirectConfiguration?: SubResource;
  provisioningState?: string;
  name?: string;
  etag?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayRedirectConfiguration class.
 * @constructor
 * Redirect configuration of an application gateway.
 *
 * @member {string} [redirectType] Supported http redirection types -
 * Permanent, Temporary, Found, SeeOther. Possible values include: 'Permanent',
 * 'Found', 'SeeOther', 'Temporary'
 * @member {object} [targetListener] Reference to a listener to redirect the
 * request to.
 * @member {string} [targetListener.id] Resource ID.
 * @member {string} [targetUrl] Url to redirect the request to.
 * @member {boolean} [includePath] Include path in the redirected url.
 * @member {boolean} [includeQueryString] Include query string in the
 * redirected url.
 * @member {array} [requestRoutingRules] Request routing specifying redirect
 * configuration.
 * @member {array} [urlPathMaps] Url path maps specifying default redirect
 * configuration.
 * @member {array} [pathRules] Path rules specifying redirect configuration.
 * @member {string} [name] Name of the redirect configuration that is unique
 * within an Application Gateway.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {string} [type] Type of the resource.
 */
export interface ApplicationGatewayRedirectConfiguration extends SubResource {
  redirectType?: string;
  targetListener?: SubResource;
  targetUrl?: string;
  includePath?: boolean;
  includeQueryString?: boolean;
  requestRoutingRules?: SubResource[];
  urlPathMaps?: SubResource[];
  pathRules?: SubResource[];
  name?: string;
  etag?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayUrlPathMap class.
 * @constructor
 * UrlPathMaps give a url path to the backend mapping information for
 * PathBasedRouting.
 *
 * @member {object} [defaultBackendAddressPool] Default backend address pool
 * resource of URL path map.
 * @member {string} [defaultBackendAddressPool.id] Resource ID.
 * @member {object} [defaultBackendHttpSettings] Default backend http settings
 * resource of URL path map.
 * @member {string} [defaultBackendHttpSettings.id] Resource ID.
 * @member {object} [defaultRedirectConfiguration] Default redirect
 * configuration resource of URL path map.
 * @member {string} [defaultRedirectConfiguration.id] Resource ID.
 * @member {array} [pathRules] Path rule of URL path map resource.
 * @member {string} [provisioningState] Provisioning state of the backend http
 * settings resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [name] Name of the URL path map that is unique within an
 * Application Gateway.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {string} [type] Type of the resource.
 */
export interface ApplicationGatewayUrlPathMap extends SubResource {
  defaultBackendAddressPool?: SubResource;
  defaultBackendHttpSettings?: SubResource;
  defaultRedirectConfiguration?: SubResource;
  pathRules?: ApplicationGatewayPathRule[];
  provisioningState?: string;
  name?: string;
  etag?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayFirewallDisabledRuleGroup class.
 * @constructor
 * Allows to disable rules within a rule group or an entire rule group.
 *
 * @member {string} ruleGroupName The name of the rule group that will be
 * disabled.
 * @member {array} [rules] The list of rules that will be disabled. If null,
 * all rules of the rule group will be disabled.
 */
export interface ApplicationGatewayFirewallDisabledRuleGroup {
  ruleGroupName: string;
  rules?: number[];
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayWebApplicationFirewallConfiguration class.
 * @constructor
 * Application gateway web application firewall configuration.
 *
 * @member {boolean} enabled Whether the web application firewall is enabled or
 * not.
 * @member {string} firewallMode Web application firewall mode. Possible values
 * include: 'Detection', 'Prevention'
 * @member {string} ruleSetType The type of the web application firewall rule
 * set. Possible values are: 'OWASP'.
 * @member {string} ruleSetVersion The version of the rule set type.
 * @member {array} [disabledRuleGroups] The disabled rule groups.
 * @member {boolean} [requestBodyCheck] Whether allow WAF to check request
 * Body.
 * @member {number} [maxRequestBodySize] Maxium request body size for WAF.
 */
export interface ApplicationGatewayWebApplicationFirewallConfiguration {
  enabled: boolean;
  firewallMode: string;
  ruleSetType: string;
  ruleSetVersion: string;
  disabledRuleGroups?: ApplicationGatewayFirewallDisabledRuleGroup[];
  requestBodyCheck?: boolean;
  maxRequestBodySize?: number;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayAutoscaleBounds class.
 * @constructor
 * Application Gateway autoscale bounds on number of Application Gateway
 * instance.
 *
 * @member {number} min Lower bound on number of Application Gateway instances.
 * @member {number} max Upper bound on number of Application Gateway instances.
 */
export interface ApplicationGatewayAutoscaleBounds {
  min: number;
  max: number;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayAutoscaleConfiguration class.
 * @constructor
 * Application Gateway autoscale configuration.
 *
 * @member {object} bounds Autoscale bounds
 * @member {number} [bounds.min] Lower bound on number of Application Gateway
 * instances.
 * @member {number} [bounds.max] Upper bound on number of Application Gateway
 * instances.
 */
export interface ApplicationGatewayAutoscaleConfiguration {
  bounds: ApplicationGatewayAutoscaleBounds;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGateway class.
 * @constructor
 * Application gateway resource
 *
 * @member {object} [sku] SKU of the application gateway resource.
 * @member {string} [sku.name] Name of an application gateway SKU. Possible
 * values include: 'Standard_Small', 'Standard_Medium', 'Standard_Large',
 * 'WAF_Medium', 'WAF_Large', 'Standard_v2', 'WAF_v2'
 * @member {string} [sku.tier] Tier of an application gateway. Possible values
 * include: 'Standard', 'WAF', 'Standard_v2', 'WAF_v2'
 * @member {number} [sku.capacity] Capacity (instance count) of an application
 * gateway.
 * @member {object} [sslPolicy] SSL policy of the application gateway resource.
 * @member {array} [sslPolicy.disabledSslProtocols] Ssl protocols to be
 * disabled on application gateway.
 * @member {string} [sslPolicy.policyType] Type of Ssl Policy. Possible values
 * include: 'Predefined', 'Custom'
 * @member {string} [sslPolicy.policyName] Name of Ssl predefined policy.
 * Possible values include: 'AppGwSslPolicy20150501', 'AppGwSslPolicy20170401',
 * 'AppGwSslPolicy20170401S'
 * @member {array} [sslPolicy.cipherSuites] Ssl cipher suites to be enabled in
 * the specified order to application gateway.
 * @member {string} [sslPolicy.minProtocolVersion] Minimum version of Ssl
 * protocol to be supported on application gateway. Possible values include:
 * 'TLSv1_0', 'TLSv1_1', 'TLSv1_2'
 * @member {string} [operationalState] Operational state of the application
 * gateway resource. Possible values include: 'Stopped', 'Starting', 'Running',
 * 'Stopping'
 * @member {array} [gatewayIPConfigurations] Subnets of application the gateway
 * resource.
 * @member {array} [authenticationCertificates] Authentication certificates of
 * the application gateway resource.
 * @member {array} [sslCertificates] SSL certificates of the application
 * gateway resource.
 * @member {array} [frontendIPConfigurations] Frontend IP addresses of the
 * application gateway resource.
 * @member {array} [frontendPorts] Frontend ports of the application gateway
 * resource.
 * @member {array} [probes] Probes of the application gateway resource.
 * @member {array} [backendAddressPools] Backend address pool of the
 * application gateway resource.
 * @member {array} [backendHttpSettingsCollection] Backend http settings of the
 * application gateway resource.
 * @member {array} [httpListeners] Http listeners of the application gateway
 * resource.
 * @member {array} [urlPathMaps] URL path map of the application gateway
 * resource.
 * @member {array} [requestRoutingRules] Request routing rules of the
 * application gateway resource.
 * @member {array} [redirectConfigurations] Redirect configurations of the
 * application gateway resource.
 * @member {object} [webApplicationFirewallConfiguration] Web application
 * firewall configuration.
 * @member {boolean} [webApplicationFirewallConfiguration.enabled] Whether the
 * web application firewall is enabled or not.
 * @member {string} [webApplicationFirewallConfiguration.firewallMode] Web
 * application firewall mode. Possible values include: 'Detection',
 * 'Prevention'
 * @member {string} [webApplicationFirewallConfiguration.ruleSetType] The type
 * of the web application firewall rule set. Possible values are: 'OWASP'.
 * @member {string} [webApplicationFirewallConfiguration.ruleSetVersion] The
 * version of the rule set type.
 * @member {array} [webApplicationFirewallConfiguration.disabledRuleGroups] The
 * disabled rule groups.
 * @member {boolean} [webApplicationFirewallConfiguration.requestBodyCheck]
 * Whether allow WAF to check request Body.
 * @member {number} [webApplicationFirewallConfiguration.maxRequestBodySize]
 * Maxium request body size for WAF.
 * @member {boolean} [enableHttp2] Whether HTTP2 is enabled on the application
 * gateway resource.
 * @member {boolean} [enableFips] Whether FIPS is enabled on the application
 * gateway resource.
 * @member {object} [autoscaleConfiguration] Autoscale Configuration.
 * @member {object} [autoscaleConfiguration.bounds] Autoscale bounds
 * @member {number} [autoscaleConfiguration.bounds.min] Lower bound on number
 * of Application Gateway instances.
 * @member {number} [autoscaleConfiguration.bounds.max] Upper bound on number
 * of Application Gateway instances.
 * @member {string} [resourceGuid] Resource GUID property of the application
 * gateway resource.
 * @member {string} [provisioningState] Provisioning state of the application
 * gateway resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {array} [zones] A list of availability zones denoting where the
 * resource needs to come from.
 */
export interface ApplicationGateway extends Resource {
  sku?: ApplicationGatewaySku;
  sslPolicy?: ApplicationGatewaySslPolicy;
  readonly operationalState?: string;
  gatewayIPConfigurations?: ApplicationGatewayIPConfiguration[];
  authenticationCertificates?: ApplicationGatewayAuthenticationCertificate[];
  sslCertificates?: ApplicationGatewaySslCertificate[];
  frontendIPConfigurations?: ApplicationGatewayFrontendIPConfiguration[];
  frontendPorts?: ApplicationGatewayFrontendPort[];
  probes?: ApplicationGatewayProbe[];
  backendAddressPools?: ApplicationGatewayBackendAddressPool[];
  backendHttpSettingsCollection?: ApplicationGatewayBackendHttpSettings[];
  httpListeners?: ApplicationGatewayHttpListener[];
  urlPathMaps?: ApplicationGatewayUrlPathMap[];
  requestRoutingRules?: ApplicationGatewayRequestRoutingRule[];
  redirectConfigurations?: ApplicationGatewayRedirectConfiguration[];
  webApplicationFirewallConfiguration?: ApplicationGatewayWebApplicationFirewallConfiguration;
  enableHttp2?: boolean;
  enableFips?: boolean;
  autoscaleConfiguration?: ApplicationGatewayAutoscaleConfiguration;
  resourceGuid?: string;
  provisioningState?: string;
  etag?: string;
  zones?: string[];
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayFirewallRule class.
 * @constructor
 * A web application firewall rule.
 *
 * @member {number} ruleId The identifier of the web application firewall rule.
 * @member {string} [description] The description of the web application
 * firewall rule.
 */
export interface ApplicationGatewayFirewallRule {
  ruleId: number;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayFirewallRuleGroup class.
 * @constructor
 * A web application firewall rule group.
 *
 * @member {string} ruleGroupName The name of the web application firewall rule
 * group.
 * @member {string} [description] The description of the web application
 * firewall rule group.
 * @member {array} rules The rules of the web application firewall rule group.
 */
export interface ApplicationGatewayFirewallRuleGroup {
  ruleGroupName: string;
  description?: string;
  rules: ApplicationGatewayFirewallRule[];
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayFirewallRuleSet class.
 * @constructor
 * A web application firewall rule set.
 *
 * @member {string} [provisioningState] The provisioning state of the web
 * application firewall rule set.
 * @member {string} ruleSetType The type of the web application firewall rule
 * set.
 * @member {string} ruleSetVersion The version of the web application firewall
 * rule set type.
 * @member {array} ruleGroups The rule groups of the web application firewall
 * rule set.
 */
export interface ApplicationGatewayFirewallRuleSet extends Resource {
  provisioningState?: string;
  ruleSetType: string;
  ruleSetVersion: string;
  ruleGroups: ApplicationGatewayFirewallRuleGroup[];
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayAvailableWafRuleSetsResult class.
 * @constructor
 * Response for ApplicationGatewayAvailableWafRuleSets API service call.
 *
 * @member {array} [value] The list of application gateway rule sets.
 */
export interface ApplicationGatewayAvailableWafRuleSetsResult {
  value?: ApplicationGatewayFirewallRuleSet[];
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayAvailableSslOptions class.
 * @constructor
 * Response for ApplicationGatewayAvailableSslOptions API service call.
 *
 * @member {array} [predefinedPolicies] List of available Ssl predefined
 * policy.
 * @member {string} [defaultPolicy] Name of the Ssl predefined policy applied
 * by default to application gateway. Possible values include:
 * 'AppGwSslPolicy20150501', 'AppGwSslPolicy20170401',
 * 'AppGwSslPolicy20170401S'
 * @member {array} [availableCipherSuites] List of available Ssl cipher suites.
 * @member {array} [availableProtocols] List of available Ssl protocols.
 */
export interface ApplicationGatewayAvailableSslOptions extends Resource {
  predefinedPolicies?: SubResource[];
  defaultPolicy?: string;
  availableCipherSuites?: string[];
  availableProtocols?: string[];
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewaySslPredefinedPolicy class.
 * @constructor
 * An Ssl predefined policy
 *
 * @member {string} [name] Name of the Ssl predefined policy.
 * @member {array} [cipherSuites] Ssl cipher suites to be enabled in the
 * specified order for application gateway.
 * @member {string} [minProtocolVersion] Minimum version of Ssl protocol to be
 * supported on application gateway. Possible values include: 'TLSv1_0',
 * 'TLSv1_1', 'TLSv1_2'
 */
export interface ApplicationGatewaySslPredefinedPolicy extends SubResource {
  name?: string;
  cipherSuites?: string[];
  minProtocolVersion?: string;
}

/**
 * @class
 * Initializes a new instance of the TagsObject class.
 * @constructor
 * Tags object for patch operations.
 *
 * @member {object} [tags] Resource tags.
 */
export interface TagsObject {
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the AzureFirewallIPConfiguration class.
 * @constructor
 * IP configuration of an Azure Firewall.
 *
 * @member {string} [privateIPAddress] The Firewall Internal Load Balancer IP
 * to be used as the next hop in User Defined Routes.
 * @member {object} [subnet] Reference of the subnet resource. This resource
 * must be named 'AzureFirewallSubnet'.
 * @member {string} [subnet.id] Resource ID.
 * @member {object} [internalPublicIpAddress] Reference of the PublicIP
 * resource. This field is a mandatory input.
 * @member {string} [internalPublicIpAddress.id] Resource ID.
 * @member {object} [publicIPAddress] Reference of the PublicIP resource. This
 * field is populated in the output.
 * @member {string} [publicIPAddress.id] Resource ID.
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
 * @member {string} [name] Name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface AzureFirewallIPConfiguration extends SubResource {
  privateIPAddress?: string;
  subnet?: SubResource;
  internalPublicIpAddress?: SubResource;
  publicIPAddress?: SubResource;
  provisioningState?: string;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the AzureFirewallRCAction class.
 * @constructor
 * Properties of the AzureFirewallRCAction.
 *
 * @member {string} [type] The type of action. Possible values include:
 * 'Allow', 'Deny'
 */
export interface AzureFirewallRCAction {
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the AzureFirewallApplicationRuleProtocol class.
 * @constructor
 * Properties of the application rule protocol.
 *
 * @member {string} [protocolType] Protocol type. Possible values include:
 * 'Http', 'Https'
 * @member {number} [port] Port number for the protocol, cannot be greater than
 * 64000. This field is optional.
 */
export interface AzureFirewallApplicationRuleProtocol {
  protocolType?: string;
  port?: number;
}

/**
 * @class
 * Initializes a new instance of the AzureFirewallApplicationRule class.
 * @constructor
 * Properties of an application rule.
 *
 * @member {string} [name] Name of the application rule.
 * @member {string} [description] Description of the rule.
 * @member {array} [sourceAddresses] List of source IP addresses for this rule.
 * @member {array} [protocols] Array of ApplicationRuleProtocols.
 * @member {array} [targetUrls] List of URLs for this rule.
 */
export interface AzureFirewallApplicationRule {
  name?: string;
  description?: string;
  sourceAddresses?: string[];
  protocols?: AzureFirewallApplicationRuleProtocol[];
  targetUrls?: string[];
}

/**
 * @class
 * Initializes a new instance of the AzureFirewallApplicationRuleCollection class.
 * @constructor
 * Application rule collection resource
 *
 * @member {number} [priority] Priority of the application rule collection
 * resource.
 * @member {object} [action] The action type of a rule collection
 * @member {string} [action.type] The type of action. Possible values include:
 * 'Allow', 'Deny'
 * @member {array} [rules] Collection of rules used by a application rule
 * collection.
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
 * @member {string} [name] Gets name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface AzureFirewallApplicationRuleCollection extends SubResource {
  priority?: number;
  action?: AzureFirewallRCAction;
  rules?: AzureFirewallApplicationRule[];
  provisioningState?: string;
  name?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the AzureFirewallNetworkRule class.
 * @constructor
 * Properties of the network rule.
 *
 * @member {string} [name] Name of the network rule.
 * @member {string} [description] Description of the rule.
 * @member {array} [protocols] Array of AzureFirewallNetworkRuleProtocols.
 * @member {array} [sourceAddresses] List of source IP addresses for this rule.
 * @member {array} [destinationAddresses] List of destination IP addresses.
 * @member {array} [destinationPorts] List of destination ports.
 */
export interface AzureFirewallNetworkRule {
  name?: string;
  description?: string;
  protocols?: string[];
  sourceAddresses?: string[];
  destinationAddresses?: string[];
  destinationPorts?: string[];
}

/**
 * @class
 * Initializes a new instance of the AzureFirewallNetworkRuleCollection class.
 * @constructor
 * Network rule collection resource
 *
 * @member {number} [priority] Priority of the network rule collection
 * resource.
 * @member {object} [action] The action type of a rule collection
 * @member {string} [action.type] The type of action. Possible values include:
 * 'Allow', 'Deny'
 * @member {array} [rules] Collection of rules used by a network rule
 * collection.
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
 * @member {string} [name] Gets name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface AzureFirewallNetworkRuleCollection extends SubResource {
  priority?: number;
  action?: AzureFirewallRCAction;
  rules?: AzureFirewallNetworkRule[];
  provisioningState?: string;
  name?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the AzureFirewall class.
 * @constructor
 * Azure Firewall resource
 *
 * @member {array} [applicationRuleCollections] Collection of application rule
 * collections used by a Azure Firewall.
 * @member {array} [networkRuleCollections] Collection of network rule
 * collections used by a Azure Firewall.
 * @member {array} [ipConfigurations] IP configuration of the Azure Firewall
 * resource.
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface AzureFirewall extends Resource {
  applicationRuleCollections?: AzureFirewallApplicationRuleCollection[];
  networkRuleCollections?: AzureFirewallNetworkRuleCollection[];
  ipConfigurations?: AzureFirewallIPConfiguration[];
  provisioningState?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the DnsNameAvailabilityResult class.
 * @constructor
 * Response for the CheckDnsNameAvailability API service call.
 *
 * @member {boolean} [available] Domain availability (True/False).
 */
export interface DnsNameAvailabilityResult {
  available?: boolean;
}

/**
 * @class
 * Initializes a new instance of the DdosProtectionPlan class.
 * @constructor
 * A DDoS protection plan in a resource group.
 *
 * @member {string} [id] Resource ID.
 * @member {string} [name] Resource name.
 * @member {string} [type] Resource type.
 * @member {string} [location] Resource location.
 * @member {object} [tags] Resource tags.
 * @member {string} [resourceGuid] The resource GUID property of the DDoS
 * protection plan resource. It uniquely identifies the resource, even if the
 * user changes its name or migrate the resource across subscriptions or
 * resource groups.
 * @member {string} [provisioningState] The provisioning state of the DDoS
 * protection plan resource. Possible values are: 'Succeeded', 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {array} [virtualNetworks] The list of virtual networks associated
 * with the DDoS protection plan resource. This list is read-only.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface DdosProtectionPlan extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
  location?: string;
  tags?: { [propertyName: string]: string };
  readonly resourceGuid?: string;
  readonly provisioningState?: string;
  readonly virtualNetworks?: SubResource[];
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the EndpointServiceResult class.
 * @constructor
 * Endpoint service.
 *
 * @member {string} [name] Name of the endpoint service.
 * @member {string} [type] Type of the endpoint service.
 */
export interface EndpointServiceResult extends SubResource {
  readonly name?: string;
  readonly type?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitAuthorization class.
 * @constructor
 * Authorization in an ExpressRouteCircuit resource.
 *
 * @member {string} [authorizationKey] The authorization key.
 * @member {string} [authorizationUseStatus] AuthorizationUseStatus. Possible
 * values are: 'Available' and 'InUse'. Possible values include: 'Available',
 * 'InUse'
 * @member {string} [provisioningState] Gets the provisioning state of the
 * public IP resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [name] Gets name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface ExpressRouteCircuitAuthorization extends SubResource {
  authorizationKey?: string;
  authorizationUseStatus?: string;
  provisioningState?: string;
  name?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitPeeringConfig class.
 * @constructor
 * Specifies the peering configuration.
 *
 * @member {array} [advertisedPublicPrefixes] The reference of
 * AdvertisedPublicPrefixes.
 * @member {array} [advertisedCommunities] The communities of bgp peering.
 * Spepcified for microsoft peering
 * @member {string} [advertisedPublicPrefixesState] AdvertisedPublicPrefixState
 * of the Peering resource. Possible values are 'NotConfigured', 'Configuring',
 * 'Configured', and 'ValidationNeeded'. Possible values include:
 * 'NotConfigured', 'Configuring', 'Configured', 'ValidationNeeded'
 * @member {number} [legacyMode] The legacy mode of the peering.
 * @member {number} [customerASN] The CustomerASN of the peering.
 * @member {string} [routingRegistryName] The RoutingRegistryName of the
 * configuration.
 */
export interface ExpressRouteCircuitPeeringConfig {
  advertisedPublicPrefixes?: string[];
  advertisedCommunities?: string[];
  advertisedPublicPrefixesState?: string;
  legacyMode?: number;
  customerASN?: number;
  routingRegistryName?: string;
}

/**
 * @class
 * Initializes a new instance of the RouteFilterRule class.
 * @constructor
 * Route Filter Rule Resource
 *
 * @member {string} access The access type of the rule. Valid values are:
 * 'Allow', 'Deny'. Possible values include: 'Allow', 'Deny'
 * @member {array} communities The collection for bgp community values to
 * filter on. e.g. ['12076:5010','12076:5020']
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [location] Resource location.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface RouteFilterRule extends SubResource {
  access: string;
  communities: string[];
  readonly provisioningState?: string;
  name?: string;
  location?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitStats class.
 * @constructor
 * Contains stats associated with the peering.
 *
 * @member {number} [primarybytesIn] Gets BytesIn of the peering.
 * @member {number} [primarybytesOut] Gets BytesOut of the peering.
 * @member {number} [secondarybytesIn] Gets BytesIn of the peering.
 * @member {number} [secondarybytesOut] Gets BytesOut of the peering.
 */
export interface ExpressRouteCircuitStats {
  primarybytesIn?: number;
  primarybytesOut?: number;
  secondarybytesIn?: number;
  secondarybytesOut?: number;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitConnection class.
 * @constructor
 * Express Route Circuit Connection in an ExpressRouteCircuitPeering resource.
 *
 * @member {object} [expressRouteCircuitPeering] Reference to Express Route
 * Circuit Private Peering Resource of the circuit initiating connection.
 * @member {string} [expressRouteCircuitPeering.id] Resource ID.
 * @member {object} [peerExpressRouteCircuitPeering] Reference to Express Route
 * Circuit Private Peering Resource of the peered circuit.
 * @member {string} [peerExpressRouteCircuitPeering.id] Resource ID.
 * @member {string} [addressPrefix] /29 IP address space to carve out Customer
 * addresses for tunnels.
 * @member {string} [authorizationKey] The authorization key.
 * @member {string} [circuitConnectionStatus] Express Route Circuit Connection
 * State. Possible values are: 'Connected' and 'Disconnected'. Possible values
 * include: 'Connected', 'Connecting', 'Disconnected'
 * @member {string} [provisioningState] Provisioning state of the circuit
 * connection resource. Possible values are: 'Succeded', 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string} [name] Gets name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface ExpressRouteCircuitConnection extends SubResource {
  expressRouteCircuitPeering?: SubResource;
  peerExpressRouteCircuitPeering?: SubResource;
  addressPrefix?: string;
  authorizationKey?: string;
  readonly circuitConnectionStatus?: string;
  readonly provisioningState?: string;
  name?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitPeering class.
 * @constructor
 * Peering in an ExpressRouteCircuit resource.
 *
 * @member {string} [peeringType] The peering type. Possible values include:
 * 'AzurePublicPeering', 'AzurePrivatePeering', 'MicrosoftPeering'
 * @member {string} [state] The peering state. Possible values include:
 * 'Disabled', 'Enabled'
 * @member {number} [azureASN] The Azure ASN.
 * @member {number} [peerASN] The peer ASN.
 * @member {string} [primaryPeerAddressPrefix] The primary address prefix.
 * @member {string} [secondaryPeerAddressPrefix] The secondary address prefix.
 * @member {string} [primaryAzurePort] The primary port.
 * @member {string} [secondaryAzurePort] The secondary port.
 * @member {string} [sharedKey] The shared key.
 * @member {number} [vlanId] The VLAN ID.
 * @member {object} [microsoftPeeringConfig] The Microsoft peering
 * configuration.
 * @member {array} [microsoftPeeringConfig.advertisedPublicPrefixes] The
 * reference of AdvertisedPublicPrefixes.
 * @member {array} [microsoftPeeringConfig.advertisedCommunities] The
 * communities of bgp peering. Spepcified for microsoft peering
 * @member {string} [microsoftPeeringConfig.advertisedPublicPrefixesState]
 * AdvertisedPublicPrefixState of the Peering resource. Possible values are
 * 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
 * Possible values include: 'NotConfigured', 'Configuring', 'Configured',
 * 'ValidationNeeded'
 * @member {number} [microsoftPeeringConfig.legacyMode] The legacy mode of the
 * peering.
 * @member {number} [microsoftPeeringConfig.customerASN] The CustomerASN of the
 * peering.
 * @member {string} [microsoftPeeringConfig.routingRegistryName] The
 * RoutingRegistryName of the configuration.
 * @member {object} [stats] Gets peering stats.
 * @member {number} [stats.primarybytesIn] Gets BytesIn of the peering.
 * @member {number} [stats.primarybytesOut] Gets BytesOut of the peering.
 * @member {number} [stats.secondarybytesIn] Gets BytesIn of the peering.
 * @member {number} [stats.secondarybytesOut] Gets BytesOut of the peering.
 * @member {string} [provisioningState] Gets the provisioning state of the
 * public IP resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [gatewayManagerEtag] The GatewayManager Etag.
 * @member {string} [lastModifiedBy] Gets whether the provider or the customer
 * last modified the peering.
 * @member {object} [routeFilter] The reference of the RouteFilter resource.
 * @member {array} [routeFilter.rules] Collection of RouteFilterRules contained
 * within a route filter.
 * @member {array} [routeFilter.peerings] A collection of references to express
 * route circuit peerings.
 * @member {string} [routeFilter.provisioningState] The provisioning state of
 * the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and
 * 'Failed'.
 * @member {string} [routeFilter.etag] Gets a unique read-only string that
 * changes whenever the resource is updated.
 * @member {object} [ipv6PeeringConfig] The IPv6 peering configuration.
 * @member {string} [ipv6PeeringConfig.primaryPeerAddressPrefix] The primary
 * address prefix.
 * @member {string} [ipv6PeeringConfig.secondaryPeerAddressPrefix] The
 * secondary address prefix.
 * @member {object} [ipv6PeeringConfig.microsoftPeeringConfig] The Microsoft
 * peering configuration.
 * @member {array}
 * [ipv6PeeringConfig.microsoftPeeringConfig.advertisedPublicPrefixes] The
 * reference of AdvertisedPublicPrefixes.
 * @member {array}
 * [ipv6PeeringConfig.microsoftPeeringConfig.advertisedCommunities] The
 * communities of bgp peering. Spepcified for microsoft peering
 * @member {string}
 * [ipv6PeeringConfig.microsoftPeeringConfig.advertisedPublicPrefixesState]
 * AdvertisedPublicPrefixState of the Peering resource. Possible values are
 * 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
 * Possible values include: 'NotConfigured', 'Configuring', 'Configured',
 * 'ValidationNeeded'
 * @member {number} [ipv6PeeringConfig.microsoftPeeringConfig.legacyMode] The
 * legacy mode of the peering.
 * @member {number} [ipv6PeeringConfig.microsoftPeeringConfig.customerASN] The
 * CustomerASN of the peering.
 * @member {string}
 * [ipv6PeeringConfig.microsoftPeeringConfig.routingRegistryName] The
 * RoutingRegistryName of the configuration.
 * @member {object} [ipv6PeeringConfig.routeFilter] The reference of the
 * RouteFilter resource.
 * @member {array} [ipv6PeeringConfig.routeFilter.rules] Collection of
 * RouteFilterRules contained within a route filter.
 * @member {array} [ipv6PeeringConfig.routeFilter.peerings] A collection of
 * references to express route circuit peerings.
 * @member {string} [ipv6PeeringConfig.routeFilter.provisioningState] The
 * provisioning state of the resource. Possible values are: 'Updating',
 * 'Deleting', 'Succeeded' and 'Failed'.
 * @member {string} [ipv6PeeringConfig.routeFilter.etag] Gets a unique
 * read-only string that changes whenever the resource is updated.
 * @member {string} [ipv6PeeringConfig.state] The state of peering. Possible
 * values are: 'Disabled' and 'Enabled'. Possible values include: 'Disabled',
 * 'Enabled'
 * @member {array} [connections] The list of circuit connections associated
 * with Azure Private Peering for this circuit.
 * @member {string} [name] Gets name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface ExpressRouteCircuitPeering extends SubResource {
  peeringType?: string;
  state?: string;
  azureASN?: number;
  peerASN?: number;
  primaryPeerAddressPrefix?: string;
  secondaryPeerAddressPrefix?: string;
  primaryAzurePort?: string;
  secondaryAzurePort?: string;
  sharedKey?: string;
  vlanId?: number;
  microsoftPeeringConfig?: ExpressRouteCircuitPeeringConfig;
  stats?: ExpressRouteCircuitStats;
  provisioningState?: string;
  gatewayManagerEtag?: string;
  lastModifiedBy?: string;
  routeFilter?: RouteFilter;
  ipv6PeeringConfig?: Ipv6ExpressRouteCircuitPeeringConfig;
  connections?: ExpressRouteCircuitConnection[];
  name?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the RouteFilter class.
 * @constructor
 * Route Filter Resource.
 *
 * @member {array} [rules] Collection of RouteFilterRules contained within a
 * route filter.
 * @member {array} [peerings] A collection of references to express route
 * circuit peerings.
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface RouteFilter extends Resource {
  rules?: RouteFilterRule[];
  peerings?: ExpressRouteCircuitPeering[];
  readonly provisioningState?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the Ipv6ExpressRouteCircuitPeeringConfig class.
 * @constructor
 * Contains IPv6 peering config.
 *
 * @member {string} [primaryPeerAddressPrefix] The primary address prefix.
 * @member {string} [secondaryPeerAddressPrefix] The secondary address prefix.
 * @member {object} [microsoftPeeringConfig] The Microsoft peering
 * configuration.
 * @member {array} [microsoftPeeringConfig.advertisedPublicPrefixes] The
 * reference of AdvertisedPublicPrefixes.
 * @member {array} [microsoftPeeringConfig.advertisedCommunities] The
 * communities of bgp peering. Spepcified for microsoft peering
 * @member {string} [microsoftPeeringConfig.advertisedPublicPrefixesState]
 * AdvertisedPublicPrefixState of the Peering resource. Possible values are
 * 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
 * Possible values include: 'NotConfigured', 'Configuring', 'Configured',
 * 'ValidationNeeded'
 * @member {number} [microsoftPeeringConfig.legacyMode] The legacy mode of the
 * peering.
 * @member {number} [microsoftPeeringConfig.customerASN] The CustomerASN of the
 * peering.
 * @member {string} [microsoftPeeringConfig.routingRegistryName] The
 * RoutingRegistryName of the configuration.
 * @member {object} [routeFilter] The reference of the RouteFilter resource.
 * @member {array} [routeFilter.rules] Collection of RouteFilterRules contained
 * within a route filter.
 * @member {array} [routeFilter.peerings] A collection of references to express
 * route circuit peerings.
 * @member {string} [routeFilter.provisioningState] The provisioning state of
 * the resource. Possible values are: 'Updating', 'Deleting', 'Succeeded' and
 * 'Failed'.
 * @member {string} [routeFilter.etag] Gets a unique read-only string that
 * changes whenever the resource is updated.
 * @member {string} [state] The state of peering. Possible values are:
 * 'Disabled' and 'Enabled'. Possible values include: 'Disabled', 'Enabled'
 */
export interface Ipv6ExpressRouteCircuitPeeringConfig {
  primaryPeerAddressPrefix?: string;
  secondaryPeerAddressPrefix?: string;
  microsoftPeeringConfig?: ExpressRouteCircuitPeeringConfig;
  routeFilter?: RouteFilter;
  state?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitSku class.
 * @constructor
 * Contains SKU in an ExpressRouteCircuit.
 *
 * @member {string} [name] The name of the SKU.
 * @member {string} [tier] The tier of the SKU. Possible values are 'Standard'
 * and 'Premium'. Possible values include: 'Standard', 'Premium'
 * @member {string} [family] The family of the SKU. Possible values are:
 * 'UnlimitedData' and 'MeteredData'. Possible values include: 'UnlimitedData',
 * 'MeteredData'
 */
export interface ExpressRouteCircuitSku {
  name?: string;
  tier?: string;
  family?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitServiceProviderProperties class.
 * @constructor
 * Contains ServiceProviderProperties in an ExpressRouteCircuit.
 *
 * @member {string} [serviceProviderName] The serviceProviderName.
 * @member {string} [peeringLocation] The peering location.
 * @member {number} [bandwidthInMbps] The BandwidthInMbps.
 */
export interface ExpressRouteCircuitServiceProviderProperties {
  serviceProviderName?: string;
  peeringLocation?: string;
  bandwidthInMbps?: number;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuit class.
 * @constructor
 * ExpressRouteCircuit resource
 *
 * @member {object} [sku] The SKU.
 * @member {string} [sku.name] The name of the SKU.
 * @member {string} [sku.tier] The tier of the SKU. Possible values are
 * 'Standard' and 'Premium'. Possible values include: 'Standard', 'Premium'
 * @member {string} [sku.family] The family of the SKU. Possible values are:
 * 'UnlimitedData' and 'MeteredData'. Possible values include: 'UnlimitedData',
 * 'MeteredData'
 * @member {boolean} [allowClassicOperations] Allow classic operations
 * @member {string} [circuitProvisioningState] The CircuitProvisioningState
 * state of the resource.
 * @member {string} [serviceProviderProvisioningState] The
 * ServiceProviderProvisioningState state of the resource. Possible values are
 * 'NotProvisioned', 'Provisioning', 'Provisioned', and 'Deprovisioning'.
 * Possible values include: 'NotProvisioned', 'Provisioning', 'Provisioned',
 * 'Deprovisioning'
 * @member {array} [authorizations] The list of authorizations.
 * @member {array} [peerings] The list of peerings.
 * @member {string} [serviceKey] The ServiceKey.
 * @member {string} [serviceProviderNotes] The ServiceProviderNotes.
 * @member {object} [serviceProviderProperties] The ServiceProviderProperties.
 * @member {string} [serviceProviderProperties.serviceProviderName] The
 * serviceProviderName.
 * @member {string} [serviceProviderProperties.peeringLocation] The peering
 * location.
 * @member {number} [serviceProviderProperties.bandwidthInMbps] The
 * BandwidthInMbps.
 * @member {string} [provisioningState] Gets the provisioning state of the
 * public IP resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [gatewayManagerEtag] The GatewayManager Etag.
 * @member {boolean} [allowGlobalReach] Flag to enable Global Reach on the
 * circuit.
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface ExpressRouteCircuit extends Resource {
  sku?: ExpressRouteCircuitSku;
  allowClassicOperations?: boolean;
  circuitProvisioningState?: string;
  serviceProviderProvisioningState?: string;
  authorizations?: ExpressRouteCircuitAuthorization[];
  peerings?: ExpressRouteCircuitPeering[];
  serviceKey?: string;
  serviceProviderNotes?: string;
  serviceProviderProperties?: ExpressRouteCircuitServiceProviderProperties;
  provisioningState?: string;
  gatewayManagerEtag?: string;
  allowGlobalReach?: boolean;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitArpTable class.
 * @constructor
 * The ARP table associated with the ExpressRouteCircuit.
 *
 * @member {number} [age] Entry age in minutes
 * @member {string} [interfaceProperty] Interface address
 * @member {string} [ipAddress] The IP address.
 * @member {string} [macAddress] The MAC address.
 */
export interface ExpressRouteCircuitArpTable {
  age?: number;
  interfaceProperty?: string;
  ipAddress?: string;
  macAddress?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitsArpTableListResult class.
 * @constructor
 * Response for ListArpTable associated with the Express Route Circuits API.
 *
 * @member {array} [value] Gets list of the ARP table.
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface ExpressRouteCircuitsArpTableListResult {
  value?: ExpressRouteCircuitArpTable[];
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitRoutesTable class.
 * @constructor
 * The routes table associated with the ExpressRouteCircuit
 *
 * @member {string} [network] IP address of a network entity
 * @member {string} [nextHop] NextHop address
 * @member {string} [locPrf] Local preference value as set with the set
 * local-preference route-map configuration command
 * @member {number} [weight] Route Weight.
 * @member {string} [path] Autonomous system paths to the destination network.
 */
export interface ExpressRouteCircuitRoutesTable {
  network?: string;
  nextHop?: string;
  locPrf?: string;
  weight?: number;
  path?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitsRoutesTableListResult class.
 * @constructor
 * Response for ListRoutesTable associated with the Express Route Circuits API.
 *
 * @member {array} [value] The list of routes table.
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface ExpressRouteCircuitsRoutesTableListResult {
  value?: ExpressRouteCircuitRoutesTable[];
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitRoutesTableSummary class.
 * @constructor
 * The routes table associated with the ExpressRouteCircuit.
 *
 * @member {string} [neighbor] IP address of the neighbor.
 * @member {number} [v] BGP version number spoken to the neighbor.
 * @member {number} [as] Autonomous system number.
 * @member {string} [upDown] The length of time that the BGP session has been
 * in the Established state, or the current status if not in the Established
 * state.
 * @member {string} [statePfxRcd] Current state of the BGP session, and the
 * number of prefixes that have been received from a neighbor or peer group.
 */
export interface ExpressRouteCircuitRoutesTableSummary {
  neighbor?: string;
  v?: number;
  as?: number;
  upDown?: string;
  statePfxRcd?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitsRoutesTableSummaryListResult class.
 * @constructor
 * Response for ListRoutesTable associated with the Express Route Circuits API.
 *
 * @member {array} [value] A list of the routes table.
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface ExpressRouteCircuitsRoutesTableSummaryListResult {
  value?: ExpressRouteCircuitRoutesTableSummary[];
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteServiceProviderBandwidthsOffered class.
 * @constructor
 * Contains bandwidths offered in ExpressRouteServiceProvider resources.
 *
 * @member {string} [offerName] The OfferName.
 * @member {number} [valueInMbps] The ValueInMbps.
 */
export interface ExpressRouteServiceProviderBandwidthsOffered {
  offerName?: string;
  valueInMbps?: number;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteServiceProvider class.
 * @constructor
 * A ExpressRouteResourceProvider object.
 *
 * @member {array} [peeringLocations] Get a list of peering locations.
 * @member {array} [bandwidthsOffered] Gets bandwidths offered.
 * @member {string} [provisioningState] Gets the provisioning state of the
 * resource.
 */
export interface ExpressRouteServiceProvider extends Resource {
  peeringLocations?: string[];
  bandwidthsOffered?: ExpressRouteServiceProviderBandwidthsOffered[];
  provisioningState?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCrossConnectionRoutesTableSummary class.
 * @constructor
 * The routes table associated with the ExpressRouteCircuit.
 *
 * @member {string} [neighbor] IP address of Neighbor router
 * @member {number} [asn] Autonomous system number.
 * @member {string} [upDown] The length of time that the BGP session has been
 * in the Established state, or the current status if not in the Established
 * state.
 * @member {string} [stateOrPrefixesReceived] Current state of the BGP session,
 * and the number of prefixes that have been received from a neighbor or peer
 * group.
 */
export interface ExpressRouteCrossConnectionRoutesTableSummary {
  neighbor?: string;
  asn?: number;
  upDown?: string;
  stateOrPrefixesReceived?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCrossConnectionsRoutesTableSummaryListResult class.
 * @constructor
 * Response for ListRoutesTable associated with the Express Route Cross
 * Connections.
 *
 * @member {array} [value] A list of the routes table.
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface ExpressRouteCrossConnectionsRoutesTableSummaryListResult {
  value?: ExpressRouteCrossConnectionRoutesTableSummary[];
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitReference class.
 * @constructor
 * @member {string} [id] Corresponding Express Route Circuit Id.
 */
export interface ExpressRouteCircuitReference {
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCrossConnectionPeering class.
 * @constructor
 * Peering in an ExpressRoute Cross Connection resource.
 *
 * @member {string} [peeringType] The peering type. Possible values include:
 * 'AzurePublicPeering', 'AzurePrivatePeering', 'MicrosoftPeering'
 * @member {string} [state] The peering state. Possible values include:
 * 'Disabled', 'Enabled'
 * @member {number} [azureASN] The Azure ASN.
 * @member {number} [peerASN] The peer ASN.
 * @member {string} [primaryPeerAddressPrefix] The primary address prefix.
 * @member {string} [secondaryPeerAddressPrefix] The secondary address prefix.
 * @member {string} [primaryAzurePort] The primary port.
 * @member {string} [secondaryAzurePort] The secondary port.
 * @member {string} [sharedKey] The shared key.
 * @member {number} [vlanId] The VLAN ID.
 * @member {object} [microsoftPeeringConfig] The Microsoft peering
 * configuration.
 * @member {array} [microsoftPeeringConfig.advertisedPublicPrefixes] The
 * reference of AdvertisedPublicPrefixes.
 * @member {array} [microsoftPeeringConfig.advertisedCommunities] The
 * communities of bgp peering. Spepcified for microsoft peering
 * @member {string} [microsoftPeeringConfig.advertisedPublicPrefixesState]
 * AdvertisedPublicPrefixState of the Peering resource. Possible values are
 * 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
 * Possible values include: 'NotConfigured', 'Configuring', 'Configured',
 * 'ValidationNeeded'
 * @member {number} [microsoftPeeringConfig.legacyMode] The legacy mode of the
 * peering.
 * @member {number} [microsoftPeeringConfig.customerASN] The CustomerASN of the
 * peering.
 * @member {string} [microsoftPeeringConfig.routingRegistryName] The
 * RoutingRegistryName of the configuration.
 * @member {string} [provisioningState] Gets the provisioning state of the
 * public IP resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [gatewayManagerEtag] The GatewayManager Etag.
 * @member {string} [lastModifiedBy] Gets whether the provider or the customer
 * last modified the peering.
 * @member {object} [ipv6PeeringConfig] The IPv6 peering configuration.
 * @member {string} [ipv6PeeringConfig.primaryPeerAddressPrefix] The primary
 * address prefix.
 * @member {string} [ipv6PeeringConfig.secondaryPeerAddressPrefix] The
 * secondary address prefix.
 * @member {object} [ipv6PeeringConfig.microsoftPeeringConfig] The Microsoft
 * peering configuration.
 * @member {array}
 * [ipv6PeeringConfig.microsoftPeeringConfig.advertisedPublicPrefixes] The
 * reference of AdvertisedPublicPrefixes.
 * @member {array}
 * [ipv6PeeringConfig.microsoftPeeringConfig.advertisedCommunities] The
 * communities of bgp peering. Spepcified for microsoft peering
 * @member {string}
 * [ipv6PeeringConfig.microsoftPeeringConfig.advertisedPublicPrefixesState]
 * AdvertisedPublicPrefixState of the Peering resource. Possible values are
 * 'NotConfigured', 'Configuring', 'Configured', and 'ValidationNeeded'.
 * Possible values include: 'NotConfigured', 'Configuring', 'Configured',
 * 'ValidationNeeded'
 * @member {number} [ipv6PeeringConfig.microsoftPeeringConfig.legacyMode] The
 * legacy mode of the peering.
 * @member {number} [ipv6PeeringConfig.microsoftPeeringConfig.customerASN] The
 * CustomerASN of the peering.
 * @member {string}
 * [ipv6PeeringConfig.microsoftPeeringConfig.routingRegistryName] The
 * RoutingRegistryName of the configuration.
 * @member {object} [ipv6PeeringConfig.routeFilter] The reference of the
 * RouteFilter resource.
 * @member {array} [ipv6PeeringConfig.routeFilter.rules] Collection of
 * RouteFilterRules contained within a route filter.
 * @member {array} [ipv6PeeringConfig.routeFilter.peerings] A collection of
 * references to express route circuit peerings.
 * @member {string} [ipv6PeeringConfig.routeFilter.provisioningState] The
 * provisioning state of the resource. Possible values are: 'Updating',
 * 'Deleting', 'Succeeded' and 'Failed'.
 * @member {string} [ipv6PeeringConfig.routeFilter.etag] Gets a unique
 * read-only string that changes whenever the resource is updated.
 * @member {string} [ipv6PeeringConfig.state] The state of peering. Possible
 * values are: 'Disabled' and 'Enabled'. Possible values include: 'Disabled',
 * 'Enabled'
 * @member {string} [name] Gets name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface ExpressRouteCrossConnectionPeering extends SubResource {
  peeringType?: string;
  state?: string;
  readonly azureASN?: number;
  peerASN?: number;
  primaryPeerAddressPrefix?: string;
  secondaryPeerAddressPrefix?: string;
  readonly primaryAzurePort?: string;
  readonly secondaryAzurePort?: string;
  sharedKey?: string;
  vlanId?: number;
  microsoftPeeringConfig?: ExpressRouteCircuitPeeringConfig;
  readonly provisioningState?: string;
  gatewayManagerEtag?: string;
  lastModifiedBy?: string;
  ipv6PeeringConfig?: Ipv6ExpressRouteCircuitPeeringConfig;
  name?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCrossConnection class.
 * @constructor
 * ExpressRouteCrossConnection resource
 *
 * @member {string} [primaryAzurePort] The name of the primary  port.
 * @member {string} [secondaryAzurePort] The name of the secondary  port.
 * @member {number} [sTag] The identifier of the circuit traffic.
 * @member {string} [peeringLocation] The peering location of the ExpressRoute
 * circuit.
 * @member {number} [bandwidthInMbps] The circuit bandwidth In Mbps.
 * @member {object} [expressRouteCircuit] The ExpressRouteCircuit
 * @member {string} [expressRouteCircuit.id] Corresponding Express Route
 * Circuit Id.
 * @member {string} [serviceProviderProvisioningState] The provisioning state
 * of the circuit in the connectivity provider system. Possible values are
 * 'NotProvisioned', 'Provisioning', 'Provisioned'. Possible values include:
 * 'NotProvisioned', 'Provisioning', 'Provisioned', 'Deprovisioning'
 * @member {string} [serviceProviderNotes] Additional read only notes set by
 * the connectivity provider.
 * @member {string} [provisioningState] Gets the provisioning state of the
 * public IP resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {array} [peerings] The list of peerings.
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface ExpressRouteCrossConnection extends Resource {
  readonly primaryAzurePort?: string;
  readonly secondaryAzurePort?: string;
  readonly sTag?: number;
  peeringLocation?: string;
  bandwidthInMbps?: number;
  expressRouteCircuit?: ExpressRouteCircuitReference;
  serviceProviderProvisioningState?: string;
  serviceProviderNotes?: string;
  readonly provisioningState?: string;
  peerings?: ExpressRouteCrossConnectionPeering[];
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the LoadBalancerSku class.
 * @constructor
 * SKU of a load balancer
 *
 * @member {string} [name] Name of a load balancer SKU. Possible values
 * include: 'Basic', 'Standard'
 */
export interface LoadBalancerSku {
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the FrontendIPConfiguration class.
 * @constructor
 * Frontend IP address of the load balancer.
 *
 * @member {array} [inboundNatRules] Read only. Inbound rules URIs that use
 * this frontend IP.
 * @member {array} [inboundNatPools] Read only. Inbound pools URIs that use
 * this frontend IP.
 * @member {array} [outboundRules] Read only. Outbound rules URIs that use this
 * frontend IP.
 * @member {array} [loadBalancingRules] Gets load balancing rules URIs that use
 * this frontend IP.
 * @member {string} [privateIPAddress] The private IP address of the IP
 * configuration.
 * @member {string} [privateIPAllocationMethod] The Private IP allocation
 * method. Possible values are: 'Static' and 'Dynamic'. Possible values
 * include: 'Static', 'Dynamic'
 * @member {object} [subnet] The reference of the subnet resource.
 * @member {string} [subnet.addressPrefix] The address prefix for the subnet.
 * @member {array} [subnet.addressPrefixes] List of  address prefixes for the
 * subnet.
 * @member {object} [subnet.networkSecurityGroup] The reference of the
 * NetworkSecurityGroup resource.
 * @member {array} [subnet.networkSecurityGroup.securityRules] A collection of
 * security rules of the network security group.
 * @member {array} [subnet.networkSecurityGroup.defaultSecurityRules] The
 * default security rules of network security group.
 * @member {array} [subnet.networkSecurityGroup.networkInterfaces] A collection
 * of references to network interfaces.
 * @member {array} [subnet.networkSecurityGroup.subnets] A collection of
 * references to subnets.
 * @member {string} [subnet.networkSecurityGroup.resourceGuid] The resource
 * GUID property of the network security group resource.
 * @member {string} [subnet.networkSecurityGroup.provisioningState] The
 * provisioning state of the public IP resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [subnet.networkSecurityGroup.etag] A unique read-only
 * string that changes whenever the resource is updated.
 * @member {object} [subnet.routeTable] The reference of the RouteTable
 * resource.
 * @member {array} [subnet.routeTable.routes] Collection of routes contained
 * within a route table.
 * @member {array} [subnet.routeTable.subnets] A collection of references to
 * subnets.
 * @member {boolean} [subnet.routeTable.disableBgpRoutePropagation] Gets or
 * sets whether to disable the routes learned by BGP on that route table. True
 * means disable.
 * @member {string} [subnet.routeTable.provisioningState] The provisioning
 * state of the resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [subnet.routeTable.etag] Gets a unique read-only string
 * that changes whenever the resource is updated.
 * @member {array} [subnet.serviceEndpoints] An array of service endpoints.
 * @member {array} [subnet.serviceEndpointPolicies] An array of service
 * endpoint policies.
 * @member {array} [subnet.ipConfigurations] Gets an array of references to the
 * network interface IP configurations using subnet.
 * @member {array} [subnet.resourceNavigationLinks] Gets an array of references
 * to the external resources using subnet.
 * @member {string} [subnet.provisioningState] The provisioning state of the
 * resource.
 * @member {string} [subnet.name] The name of the resource that is unique
 * within a resource group. This name can be used to access the resource.
 * @member {string} [subnet.etag] A unique read-only string that changes
 * whenever the resource is updated.
 * @member {object} [publicIPAddress] The reference of the Public IP resource.
 * @member {object} [publicIPAddress.sku] The public IP address SKU.
 * @member {string} [publicIPAddress.sku.name] Name of a public IP address SKU.
 * Possible values include: 'Basic', 'Standard'
 * @member {string} [publicIPAddress.publicIPAllocationMethod] The public IP
 * allocation method. Possible values are: 'Static' and 'Dynamic'. Possible
 * values include: 'Static', 'Dynamic'
 * @member {string} [publicIPAddress.publicIPAddressVersion] The public IP
 * address version. Possible values are: 'IPv4' and 'IPv6'. Possible values
 * include: 'IPv4', 'IPv6'
 * @member {object} [publicIPAddress.ipConfiguration] The IP configuration
 * associated with the public IP address.
 * @member {string} [publicIPAddress.ipConfiguration.privateIPAddress] The
 * private IP address of the IP configuration.
 * @member {string} [publicIPAddress.ipConfiguration.privateIPAllocationMethod]
 * The private IP allocation method. Possible values are 'Static' and
 * 'Dynamic'. Possible values include: 'Static', 'Dynamic'
 * @member {object} [publicIPAddress.ipConfiguration.subnet] The reference of
 * the subnet resource.
 * @member {string} [publicIPAddress.ipConfiguration.subnet.addressPrefix] The
 * address prefix for the subnet.
 * @member {array} [publicIPAddress.ipConfiguration.subnet.addressPrefixes]
 * List of  address prefixes for the subnet.
 * @member {object}
 * [publicIPAddress.ipConfiguration.subnet.networkSecurityGroup] The reference
 * of the NetworkSecurityGroup resource.
 * @member {array}
 * [publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.securityRules]
 * A collection of security rules of the network security group.
 * @member {array}
 * [publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.defaultSecurityRules]
 * The default security rules of network security group.
 * @member {array}
 * [publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.networkInterfaces]
 * A collection of references to network interfaces.
 * @member {array}
 * [publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.subnets] A
 * collection of references to subnets.
 * @member {string}
 * [publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.resourceGuid]
 * The resource GUID property of the network security group resource.
 * @member {string}
 * [publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.provisioningState]
 * The provisioning state of the public IP resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string}
 * [publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.etag] A unique
 * read-only string that changes whenever the resource is updated.
 * @member {object} [publicIPAddress.ipConfiguration.subnet.routeTable] The
 * reference of the RouteTable resource.
 * @member {array} [publicIPAddress.ipConfiguration.subnet.routeTable.routes]
 * Collection of routes contained within a route table.
 * @member {array} [publicIPAddress.ipConfiguration.subnet.routeTable.subnets]
 * A collection of references to subnets.
 * @member {boolean}
 * [publicIPAddress.ipConfiguration.subnet.routeTable.disableBgpRoutePropagation]
 * Gets or sets whether to disable the routes learned by BGP on that route
 * table. True means disable.
 * @member {string}
 * [publicIPAddress.ipConfiguration.subnet.routeTable.provisioningState] The
 * provisioning state of the resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string} [publicIPAddress.ipConfiguration.subnet.routeTable.etag]
 * Gets a unique read-only string that changes whenever the resource is
 * updated.
 * @member {array} [publicIPAddress.ipConfiguration.subnet.serviceEndpoints] An
 * array of service endpoints.
 * @member {array}
 * [publicIPAddress.ipConfiguration.subnet.serviceEndpointPolicies] An array of
 * service endpoint policies.
 * @member {array} [publicIPAddress.ipConfiguration.subnet.ipConfigurations]
 * Gets an array of references to the network interface IP configurations using
 * subnet.
 * @member {array}
 * [publicIPAddress.ipConfiguration.subnet.resourceNavigationLinks] Gets an
 * array of references to the external resources using subnet.
 * @member {string} [publicIPAddress.ipConfiguration.subnet.provisioningState]
 * The provisioning state of the resource.
 * @member {string} [publicIPAddress.ipConfiguration.subnet.name] The name of
 * the resource that is unique within a resource group. This name can be used
 * to access the resource.
 * @member {string} [publicIPAddress.ipConfiguration.subnet.etag] A unique
 * read-only string that changes whenever the resource is updated.
 * @member {object} [publicIPAddress.ipConfiguration.publicIPAddress] The
 * reference of the public IP resource.
 * @member {string} [publicIPAddress.ipConfiguration.provisioningState] Gets
 * the provisioning state of the public IP resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [publicIPAddress.ipConfiguration.name] The name of the
 * resource that is unique within a resource group. This name can be used to
 * access the resource.
 * @member {string} [publicIPAddress.ipConfiguration.etag] A unique read-only
 * string that changes whenever the resource is updated.
 * @member {object} [publicIPAddress.dnsSettings] The FQDN of the DNS record
 * associated with the public IP address.
 * @member {string} [publicIPAddress.dnsSettings.domainNameLabel] Gets or sets
 * the Domain name label.The concatenation of the domain name label and the
 * regionalized DNS zone make up the fully qualified domain name associated
 * with the public IP address. If a domain name label is specified, an A DNS
 * record is created for the public IP in the Microsoft Azure DNS system.
 * @member {string} [publicIPAddress.dnsSettings.fqdn] Gets the FQDN, Fully
 * qualified domain name of the A DNS record associated with the public IP.
 * This is the concatenation of the domainNameLabel and the regionalized DNS
 * zone.
 * @member {string} [publicIPAddress.dnsSettings.reverseFqdn] Gets or Sets the
 * Reverse FQDN. A user-visible, fully qualified domain name that resolves to
 * this public IP address. If the reverseFqdn is specified, then a PTR DNS
 * record is created pointing from the IP address in the in-addr.arpa domain to
 * the reverse FQDN.
 * @member {array} [publicIPAddress.ipTags] The list of tags associated with
 * the public IP address.
 * @member {string} [publicIPAddress.ipAddress] The IP address associated with
 * the public IP address resource.
 * @member {object} [publicIPAddress.publicIPPrefix] The Public IP Prefix this
 * Public IP Address should be allocated from.
 * @member {string} [publicIPAddress.publicIPPrefix.id] Resource ID.
 * @member {number} [publicIPAddress.idleTimeoutInMinutes] The idle timeout of
 * the public IP address.
 * @member {string} [publicIPAddress.resourceGuid] The resource GUID property
 * of the public IP resource.
 * @member {string} [publicIPAddress.provisioningState] The provisioning state
 * of the PublicIP resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [publicIPAddress.etag] A unique read-only string that
 * changes whenever the resource is updated.
 * @member {array} [publicIPAddress.zones] A list of availability zones
 * denoting the IP allocated for the resource needs to come from.
 * @member {object} [publicIPPrefix] The reference of the Public IP Prefix
 * resource.
 * @member {string} [publicIPPrefix.id] Resource ID.
 * @member {string} [provisioningState] Gets the provisioning state of the
 * public IP resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {array} [zones] A list of availability zones denoting the IP
 * allocated for the resource needs to come from.
 */
export interface FrontendIPConfiguration extends SubResource {
  readonly inboundNatRules?: SubResource[];
  readonly inboundNatPools?: SubResource[];
  readonly outboundRules?: SubResource[];
  readonly loadBalancingRules?: SubResource[];
  privateIPAddress?: string;
  privateIPAllocationMethod?: string;
  subnet?: Subnet;
  publicIPAddress?: PublicIPAddress;
  publicIPPrefix?: SubResource;
  provisioningState?: string;
  name?: string;
  etag?: string;
  zones?: string[];
}

/**
 * @class
 * Initializes a new instance of the LoadBalancingRule class.
 * @constructor
 * A load balancing rule for a load balancer.
 *
 * @member {object} [frontendIPConfiguration] A reference to frontend IP
 * addresses.
 * @member {string} [frontendIPConfiguration.id] Resource ID.
 * @member {object} [backendAddressPool] A reference to a pool of DIPs. Inbound
 * traffic is randomly load balanced across IPs in the backend IPs.
 * @member {string} [backendAddressPool.id] Resource ID.
 * @member {object} [probe] The reference of the load balancer probe used by
 * the load balancing rule.
 * @member {string} [probe.id] Resource ID.
 * @member {string} protocol Possible values include: 'Udp', 'Tcp', 'All'
 * @member {string} [loadDistribution] The load distribution policy for this
 * rule. Possible values are 'Default', 'SourceIP', and 'SourceIPProtocol'.
 * Possible values include: 'Default', 'SourceIP', 'SourceIPProtocol'
 * @member {number} frontendPort The port for the external endpoint. Port
 * numbers for each rule must be unique within the Load Balancer. Acceptable
 * values are between 0 and 65534. Note that value 0 enables "Any Port"
 * @member {number} [backendPort] The port used for internal connections on the
 * endpoint. Acceptable values are between 0 and 65535. Note that value 0
 * enables "Any Port"
 * @member {number} [idleTimeoutInMinutes] The timeout for the TCP idle
 * connection. The value can be set between 4 and 30 minutes. The default value
 * is 4 minutes. This element is only used when the protocol is set to TCP.
 * @member {boolean} [enableFloatingIP] Configures a virtual machine's endpoint
 * for the floating IP capability required to configure a SQL AlwaysOn
 * Availability Group. This setting is required when using the SQL AlwaysOn
 * Availability Groups in SQL server. This setting can't be changed after you
 * create the endpoint.
 * @member {boolean} [enableTcpReset] Receive bidirectional TCP Reset on TCP
 * flow idle timeout or unexpected connection termination. This element is only
 * used when the protocol is set to TCP.
 * @member {boolean} [disableOutboundSnat] Configures SNAT for the VMs in the
 * backend pool to use the publicIP address specified in the frontend of the
 * load balancing rule.
 * @member {string} [provisioningState] Gets the provisioning state of the
 * PublicIP resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface LoadBalancingRule extends SubResource {
  frontendIPConfiguration?: SubResource;
  backendAddressPool?: SubResource;
  probe?: SubResource;
  protocol: string;
  loadDistribution?: string;
  frontendPort: number;
  backendPort?: number;
  idleTimeoutInMinutes?: number;
  enableFloatingIP?: boolean;
  enableTcpReset?: boolean;
  disableOutboundSnat?: boolean;
  provisioningState?: string;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the Probe class.
 * @constructor
 * A load balancer probe.
 *
 * @member {array} [loadBalancingRules] The load balancer rules that use this
 * probe.
 * @member {string} protocol The protocol of the end point. Possible values
 * are: 'Http', 'Tcp', or 'Https'. If 'Tcp' is specified, a received ACK is
 * required for the probe to be successful. If 'Http' or 'Https' is specified,
 * a 200 OK response from the specifies URI is required for the probe to be
 * successful. Possible values include: 'Http', 'Tcp', 'Https'
 * @member {number} port The port for communicating the probe. Possible values
 * range from 1 to 65535, inclusive.
 * @member {number} [intervalInSeconds] The interval, in seconds, for how
 * frequently to probe the endpoint for health status. Typically, the interval
 * is slightly less than half the allocated timeout period (in seconds) which
 * allows two full probes before taking the instance out of rotation. The
 * default value is 15, the minimum value is 5.
 * @member {number} [numberOfProbes] The number of probes where if no response,
 * will result in stopping further traffic from being delivered to the
 * endpoint. This values allows endpoints to be taken out of rotation faster or
 * slower than the typical times used in Azure.
 * @member {string} [requestPath] The URI used for requesting health status
 * from the VM. Path is required if a protocol is set to http. Otherwise, it is
 * not allowed. There is no default value.
 * @member {string} [provisioningState] Gets the provisioning state of the
 * public IP resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [name] Gets name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface Probe extends SubResource {
  readonly loadBalancingRules?: SubResource[];
  protocol: string;
  port: number;
  intervalInSeconds?: number;
  numberOfProbes?: number;
  requestPath?: string;
  provisioningState?: string;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the InboundNatPool class.
 * @constructor
 * Inbound NAT pool of the load balancer.
 *
 * @member {object} [frontendIPConfiguration] A reference to frontend IP
 * addresses.
 * @member {string} [frontendIPConfiguration.id] Resource ID.
 * @member {string} protocol Possible values include: 'Udp', 'Tcp', 'All'
 * @member {number} frontendPortRangeStart The first port number in the range
 * of external ports that will be used to provide Inbound Nat to NICs
 * associated with a load balancer. Acceptable values range between 1 and
 * 65534.
 * @member {number} frontendPortRangeEnd The last port number in the range of
 * external ports that will be used to provide Inbound Nat to NICs associated
 * with a load balancer. Acceptable values range between 1 and 65535.
 * @member {number} backendPort The port used for internal connections on the
 * endpoint. Acceptable values are between 1 and 65535.
 * @member {number} [idleTimeoutInMinutes] The timeout for the TCP idle
 * connection. The value can be set between 4 and 30 minutes. The default value
 * is 4 minutes. This element is only used when the protocol is set to TCP.
 * @member {boolean} [enableFloatingIP] Configures a virtual machine's endpoint
 * for the floating IP capability required to configure a SQL AlwaysOn
 * Availability Group. This setting is required when using the SQL AlwaysOn
 * Availability Groups in SQL server. This setting can't be changed after you
 * create the endpoint.
 * @member {boolean} [enableTcpReset] Receive bidirectional TCP Reset on TCP
 * flow idle timeout or unexpected connection termination. This element is only
 * used when the protocol is set to TCP.
 * @member {string} [provisioningState] Gets the provisioning state of the
 * PublicIP resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface InboundNatPool extends SubResource {
  frontendIPConfiguration?: SubResource;
  protocol: string;
  frontendPortRangeStart: number;
  frontendPortRangeEnd: number;
  backendPort: number;
  idleTimeoutInMinutes?: number;
  enableFloatingIP?: boolean;
  enableTcpReset?: boolean;
  provisioningState?: string;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the OutboundRule class.
 * @constructor
 * Outbound pool of the load balancer.
 *
 * @member {number} [allocatedOutboundPorts] The number of outbound ports to be
 * used for NAT.
 * @member {array} [frontendIPConfigurations] The Frontend IP addresses of the
 * load balancer.
 * @member {object} backendAddressPool A reference to a pool of DIPs. Outbound
 * traffic is randomly load balanced across IPs in the backend IPs.
 * @member {string} [backendAddressPool.id] Resource ID.
 * @member {string} [provisioningState] Gets the provisioning state of the
 * PublicIP resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [protocol] Protocol - TCP, UDP or All. Possible values
 * include: 'Tcp', 'Udp', 'All'
 * @member {boolean} [enableTcpReset] Receive bidirectional TCP Reset on TCP
 * flow idle timeout or unexpected connection termination. This element is only
 * used when the protocol is set to TCP.
 * @member {number} [idleTimeoutInMinutes] The timeout for the TCP idle
 * connection
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface OutboundRule extends SubResource {
  allocatedOutboundPorts?: number;
  frontendIPConfigurations?: SubResource[];
  backendAddressPool: SubResource;
  provisioningState?: string;
  protocol?: string;
  enableTcpReset?: boolean;
  idleTimeoutInMinutes?: number;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the LoadBalancer class.
 * @constructor
 * LoadBalancer resource
 *
 * @member {object} [sku] The load balancer SKU.
 * @member {string} [sku.name] Name of a load balancer SKU. Possible values
 * include: 'Basic', 'Standard'
 * @member {array} [frontendIPConfigurations] Object representing the frontend
 * IPs to be used for the load balancer
 * @member {array} [backendAddressPools] Collection of backend address pools
 * used by a load balancer
 * @member {array} [loadBalancingRules] Object collection representing the load
 * balancing rules Gets the provisioning
 * @member {array} [probes] Collection of probe objects used in the load
 * balancer
 * @member {array} [inboundNatRules] Collection of inbound NAT Rules used by a
 * load balancer. Defining inbound NAT rules on your load balancer is mutually
 * exclusive with defining an inbound NAT pool. Inbound NAT pools are
 * referenced from virtual machine scale sets. NICs that are associated with
 * individual virtual machines cannot reference an Inbound NAT pool. They have
 * to reference individual inbound NAT rules.
 * @member {array} [inboundNatPools] Defines an external port range for inbound
 * NAT to a single backend port on NICs associated with a load balancer.
 * Inbound NAT rules are created automatically for each NIC associated with the
 * Load Balancer using an external port from this range. Defining an Inbound
 * NAT pool on your Load Balancer is mutually exclusive with defining inbound
 * Nat rules. Inbound NAT pools are referenced from virtual machine scale sets.
 * NICs that are associated with individual virtual machines cannot reference
 * an inbound NAT pool. They have to reference individual inbound NAT rules.
 * @member {array} [outboundRules] The outbound rules.
 * @member {string} [resourceGuid] The resource GUID property of the load
 * balancer resource.
 * @member {string} [provisioningState] Gets the provisioning state of the
 * PublicIP resource. Possible values are: 'Updating', 'Deleting', and
 * 'Failed'.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface LoadBalancer extends Resource {
  sku?: LoadBalancerSku;
  frontendIPConfigurations?: FrontendIPConfiguration[];
  backendAddressPools?: BackendAddressPool[];
  loadBalancingRules?: LoadBalancingRule[];
  probes?: Probe[];
  inboundNatRules?: InboundNatRule[];
  inboundNatPools?: InboundNatPool[];
  outboundRules?: OutboundRule[];
  resourceGuid?: string;
  provisioningState?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorDetails class.
 * @constructor
 * @member {string} [code]
 * @member {string} [target]
 * @member {string} [message]
 */
export interface ErrorDetails {
  code?: string;
  target?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorModel class.
 * @constructor
 * @member {string} [code]
 * @member {string} [message]
 * @member {string} [target]
 * @member {array} [details]
 * @member {string} [innerError]
 */
export interface ErrorModel {
  code?: string;
  message?: string;
  target?: string;
  details?: ErrorDetails[];
  innerError?: string;
}

/**
 * @class
 * Initializes a new instance of the AzureAsyncOperationResult class.
 * @constructor
 * The response body contains the status of the specified asynchronous
 * operation, indicating whether it has succeeded, is in progress, or has
 * failed. Note that this status is distinct from the HTTP status code returned
 * for the Get Operation Status operation itself. If the asynchronous operation
 * succeeded, the response body includes the HTTP status code for the
 * successful request. If the asynchronous operation failed, the response body
 * includes the HTTP status code for the failed request and error information
 * regarding the failure.
 *
 * @member {string} [status] Status of the Azure async operation. Possible
 * values are: 'InProgress', 'Succeeded', and 'Failed'. Possible values
 * include: 'InProgress', 'Succeeded', 'Failed'
 * @member {object} [error]
 * @member {string} [error.code]
 * @member {string} [error.message]
 * @member {string} [error.target]
 * @member {array} [error.details]
 * @member {string} [error.innerError]
 */
export interface AzureAsyncOperationResult {
  status?: string;
  error?: ErrorModel;
}

/**
 * @class
 * Initializes a new instance of the EffectiveNetworkSecurityGroupAssociation class.
 * @constructor
 * The effective network security group association.
 *
 * @member {object} [subnet] The ID of the subnet if assigned.
 * @member {string} [subnet.id] Resource ID.
 * @member {object} [networkInterface] The ID of the network interface if
 * assigned.
 * @member {string} [networkInterface.id] Resource ID.
 */
export interface EffectiveNetworkSecurityGroupAssociation {
  subnet?: SubResource;
  networkInterface?: SubResource;
}

/**
 * @class
 * Initializes a new instance of the EffectiveNetworkSecurityRule class.
 * @constructor
 * Effective network security rules.
 *
 * @member {string} [name] The name of the security rule specified by the user
 * (if created by the user).
 * @member {string} [protocol] The network protocol this rule applies to.
 * Possible values are: 'Tcp', 'Udp', and 'All'. Possible values include:
 * 'Tcp', 'Udp', 'All'
 * @member {string} [sourcePortRange] The source port or range.
 * @member {string} [destinationPortRange] The destination port or range.
 * @member {array} [sourcePortRanges] The source port ranges. Expected values
 * include a single integer between 0 and 65535, a range using '-' as seperator
 * (e.g. 100-400), or an asterix (*)
 * @member {array} [destinationPortRanges] The destination port ranges.
 * Expected values include a single integer between 0 and 65535, a range using
 * '-' as seperator (e.g. 100-400), or an asterix (*)
 * @member {string} [sourceAddressPrefix] The source address prefix.
 * @member {string} [destinationAddressPrefix] The destination address prefix.
 * @member {array} [sourceAddressPrefixes] The source address prefixes.
 * Expected values include CIDR IP ranges, Default Tags (VirtualNetwork,
 * AureLoadBalancer, Internet), System Tags, and the asterix (*).
 * @member {array} [destinationAddressPrefixes] The destination address
 * prefixes. Expected values include CIDR IP ranges, Default Tags
 * (VirtualNetwork, AureLoadBalancer, Internet), System Tags, and the asterix
 * (*).
 * @member {array} [expandedSourceAddressPrefix] The expanded source address
 * prefix.
 * @member {array} [expandedDestinationAddressPrefix] Expanded destination
 * address prefix.
 * @member {string} [access] Whether network traffic is allowed or denied.
 * Possible values are: 'Allow' and 'Deny'. Possible values include: 'Allow',
 * 'Deny'
 * @member {number} [priority] The priority of the rule.
 * @member {string} [direction] The direction of the rule. Possible values are:
 * 'Inbound and Outbound'. Possible values include: 'Inbound', 'Outbound'
 */
export interface EffectiveNetworkSecurityRule {
  name?: string;
  protocol?: string;
  sourcePortRange?: string;
  destinationPortRange?: string;
  sourcePortRanges?: string[];
  destinationPortRanges?: string[];
  sourceAddressPrefix?: string;
  destinationAddressPrefix?: string;
  sourceAddressPrefixes?: string[];
  destinationAddressPrefixes?: string[];
  expandedSourceAddressPrefix?: string[];
  expandedDestinationAddressPrefix?: string[];
  access?: string;
  priority?: number;
  direction?: string;
}

/**
 * @class
 * Initializes a new instance of the EffectiveNetworkSecurityGroup class.
 * @constructor
 * Effective network security group.
 *
 * @member {object} [networkSecurityGroup] The ID of network security group
 * that is applied.
 * @member {string} [networkSecurityGroup.id] Resource ID.
 * @member {object} [association] Associated resources.
 * @member {object} [association.subnet] The ID of the subnet if assigned.
 * @member {string} [association.subnet.id] Resource ID.
 * @member {object} [association.networkInterface] The ID of the network
 * interface if assigned.
 * @member {string} [association.networkInterface.id] Resource ID.
 * @member {array} [effectiveSecurityRules] A collection of effective security
 * rules.
 * @member {object} [tagMap] Mapping of tags to list of IP Addresses included
 * within the tag.
 */
export interface EffectiveNetworkSecurityGroup {
  networkSecurityGroup?: SubResource;
  association?: EffectiveNetworkSecurityGroupAssociation;
  effectiveSecurityRules?: EffectiveNetworkSecurityRule[];
  tagMap?: { [propertyName: string]: string[] };
}

/**
 * @class
 * Initializes a new instance of the EffectiveNetworkSecurityGroupListResult class.
 * @constructor
 * Response for list effective network security groups API service call.
 *
 * @member {array} [value] A list of effective network security groups.
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface EffectiveNetworkSecurityGroupListResult {
  value?: EffectiveNetworkSecurityGroup[];
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the EffectiveRoute class.
 * @constructor
 * Effective Route
 *
 * @member {string} [name] The name of the user defined route. This is
 * optional.
 * @member {string} [source] Who created the route. Possible values are:
 * 'Unknown', 'User', 'VirtualNetworkGateway', and 'Default'. Possible values
 * include: 'Unknown', 'User', 'VirtualNetworkGateway', 'Default'
 * @member {string} [state] The value of effective route. Possible values are:
 * 'Active' and 'Invalid'. Possible values include: 'Active', 'Invalid'
 * @member {array} [addressPrefix] The address prefixes of the effective routes
 * in CIDR notation.
 * @member {array} [nextHopIpAddress] The IP address of the next hop of the
 * effective route.
 * @member {string} [nextHopType] The type of Azure hop the packet should be
 * sent to. Possible values are: 'VirtualNetworkGateway', 'VnetLocal',
 * 'Internet', 'VirtualAppliance', and 'None'. Possible values include:
 * 'VirtualNetworkGateway', 'VnetLocal', 'Internet', 'VirtualAppliance', 'None'
 */
export interface EffectiveRoute {
  name?: string;
  source?: string;
  state?: string;
  addressPrefix?: string[];
  nextHopIpAddress?: string[];
  nextHopType?: string;
}

/**
 * @class
 * Initializes a new instance of the EffectiveRouteListResult class.
 * @constructor
 * Response for list effective route API service call.
 *
 * @member {array} [value] A list of effective routes.
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface EffectiveRouteListResult {
  value?: EffectiveRoute[];
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorResponse class.
 * @constructor
 * The error object.
 *
 * @member {object} [error] Error.
 * @member {string} [error.code]
 * @member {string} [error.target]
 * @member {string} [error.message]
 */
export interface ErrorResponse {
  error?: ErrorDetails;
}

/**
 * @class
 * Initializes a new instance of the NetworkWatcher class.
 * @constructor
 * Network watcher in a resource group.
 *
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
 */
export interface NetworkWatcher extends Resource {
  etag?: string;
  readonly provisioningState?: string;
}

/**
 * @class
 * Initializes a new instance of the TopologyParameters class.
 * @constructor
 * Parameters that define the representation of topology.
 *
 * @member {string} [targetResourceGroupName] The name of the target resource
 * group to perform topology on.
 * @member {object} [targetVirtualNetwork] The reference of the Virtual Network
 * resource.
 * @member {string} [targetVirtualNetwork.id] Resource ID.
 * @member {object} [targetSubnet] The reference of the Subnet resource.
 * @member {string} [targetSubnet.id] Resource ID.
 */
export interface TopologyParameters {
  targetResourceGroupName?: string;
  targetVirtualNetwork?: SubResource;
  targetSubnet?: SubResource;
}

/**
 * @class
 * Initializes a new instance of the TopologyAssociation class.
 * @constructor
 * Resources that have an association with the parent resource.
 *
 * @member {string} [name] The name of the resource that is associated with the
 * parent resource.
 * @member {string} [resourceId] The ID of the resource that is associated with
 * the parent resource.
 * @member {string} [associationType] The association type of the child
 * resource to the parent resource. Possible values include: 'Associated',
 * 'Contains'
 */
export interface TopologyAssociation {
  name?: string;
  resourceId?: string;
  associationType?: string;
}

/**
 * @class
 * Initializes a new instance of the TopologyResource class.
 * @constructor
 * The network resource topology information for the given resource group.
 *
 * @member {string} [name] Name of the resource.
 * @member {string} [id] ID of the resource.
 * @member {string} [location] Resource location.
 * @member {array} [associations] Holds the associations the resource has with
 * other resources in the resource group.
 */
export interface TopologyResource {
  name?: string;
  id?: string;
  location?: string;
  associations?: TopologyAssociation[];
}

/**
 * @class
 * Initializes a new instance of the Topology class.
 * @constructor
 * Topology of the specified resource group.
 *
 * @member {string} [id] GUID representing the operation id.
 * @member {date} [createdDateTime] The datetime when the topology was
 * initially created for the resource group.
 * @member {date} [lastModified] The datetime when the topology was last
 * modified.
 * @member {array} [resources]
 */
export interface Topology {
  readonly id?: string;
  readonly createdDateTime?: Date;
  readonly lastModified?: Date;
  resources?: TopologyResource[];
}

/**
 * @class
 * Initializes a new instance of the VerificationIPFlowParameters class.
 * @constructor
 * Parameters that define the IP flow to be verified.
 *
 * @member {string} targetResourceId The ID of the target resource to perform
 * next-hop on.
 * @member {string} direction The direction of the packet represented as a
 * 5-tuple. Possible values include: 'Inbound', 'Outbound'
 * @member {string} protocol Protocol to be verified on. Possible values
 * include: 'TCP', 'UDP'
 * @member {string} localPort The local port. Acceptable values are a single
 * integer in the range (0-65535). Support for * for the source port, which
 * depends on the direction.
 * @member {string} remotePort The remote port. Acceptable values are a single
 * integer in the range (0-65535). Support for * for the source port, which
 * depends on the direction.
 * @member {string} localIPAddress The local IP address. Acceptable values are
 * valid IPv4 addresses.
 * @member {string} remoteIPAddress The remote IP address. Acceptable values
 * are valid IPv4 addresses.
 * @member {string} [targetNicResourceId] The NIC ID. (If VM has multiple NICs
 * and IP forwarding is enabled on any of them, then this parameter must be
 * specified. Otherwise optional).
 */
export interface VerificationIPFlowParameters {
  targetResourceId: string;
  direction: string;
  protocol: string;
  localPort: string;
  remotePort: string;
  localIPAddress: string;
  remoteIPAddress: string;
  targetNicResourceId?: string;
}

/**
 * @class
 * Initializes a new instance of the VerificationIPFlowResult class.
 * @constructor
 * Results of IP flow verification on the target resource.
 *
 * @member {string} [access] Indicates whether the traffic is allowed or
 * denied. Possible values include: 'Allow', 'Deny'
 * @member {string} [ruleName] Name of the rule. If input is not matched
 * against any security rule, it is not displayed.
 */
export interface VerificationIPFlowResult {
  access?: string;
  ruleName?: string;
}

/**
 * @class
 * Initializes a new instance of the NextHopParameters class.
 * @constructor
 * Parameters that define the source and destination endpoint.
 *
 * @member {string} targetResourceId The resource identifier of the target
 * resource against which the action is to be performed.
 * @member {string} sourceIPAddress The source IP address.
 * @member {string} destinationIPAddress The destination IP address.
 * @member {string} [targetNicResourceId] The NIC ID. (If VM has multiple NICs
 * and IP forwarding is enabled on any of the nics, then this parameter must be
 * specified. Otherwise optional).
 */
export interface NextHopParameters {
  targetResourceId: string;
  sourceIPAddress: string;
  destinationIPAddress: string;
  targetNicResourceId?: string;
}

/**
 * @class
 * Initializes a new instance of the NextHopResult class.
 * @constructor
 * The information about next hop from the specified VM.
 *
 * @member {string} [nextHopType] Next hop type. Possible values include:
 * 'Internet', 'VirtualAppliance', 'VirtualNetworkGateway', 'VnetLocal',
 * 'HyperNetGateway', 'None'
 * @member {string} [nextHopIpAddress] Next hop IP Address
 * @member {string} [routeTableId] The resource identifier for the route table
 * associated with the route being returned. If the route being returned does
 * not correspond to any user created routes then this field will be the string
 * 'System Route'.
 */
export interface NextHopResult {
  nextHopType?: string;
  nextHopIpAddress?: string;
  routeTableId?: string;
}

/**
 * @class
 * Initializes a new instance of the SecurityGroupViewParameters class.
 * @constructor
 * Parameters that define the VM to check security groups for.
 *
 * @member {string} targetResourceId ID of the target VM.
 */
export interface SecurityGroupViewParameters {
  targetResourceId: string;
}

/**
 * @class
 * Initializes a new instance of the NetworkInterfaceAssociation class.
 * @constructor
 * Network interface and its custom security rules.
 *
 * @member {string} [id] Network interface ID.
 * @member {array} [securityRules] Collection of custom security rules.
 */
export interface NetworkInterfaceAssociation {
  readonly id?: string;
  securityRules?: SecurityRule[];
}

/**
 * @class
 * Initializes a new instance of the SubnetAssociation class.
 * @constructor
 * Network interface and its custom security rules.
 *
 * @member {string} [id] Subnet ID.
 * @member {array} [securityRules] Collection of custom security rules.
 */
export interface SubnetAssociation {
  readonly id?: string;
  securityRules?: SecurityRule[];
}

/**
 * @class
 * Initializes a new instance of the SecurityRuleAssociations class.
 * @constructor
 * All security rules associated with the network interface.
 *
 * @member {object} [networkInterfaceAssociation]
 * @member {string} [networkInterfaceAssociation.id] Network interface ID.
 * @member {array} [networkInterfaceAssociation.securityRules] Collection of
 * custom security rules.
 * @member {object} [subnetAssociation]
 * @member {string} [subnetAssociation.id] Subnet ID.
 * @member {array} [subnetAssociation.securityRules] Collection of custom
 * security rules.
 * @member {array} [defaultSecurityRules] Collection of default security rules
 * of the network security group.
 * @member {array} [effectiveSecurityRules] Collection of effective security
 * rules.
 */
export interface SecurityRuleAssociations {
  networkInterfaceAssociation?: NetworkInterfaceAssociation;
  subnetAssociation?: SubnetAssociation;
  defaultSecurityRules?: SecurityRule[];
  effectiveSecurityRules?: EffectiveNetworkSecurityRule[];
}

/**
 * @class
 * Initializes a new instance of the SecurityGroupNetworkInterface class.
 * @constructor
 * Network interface and all its associated security rules.
 *
 * @member {string} [id] ID of the network interface.
 * @member {object} [securityRuleAssociations]
 * @member {object} [securityRuleAssociations.networkInterfaceAssociation]
 * @member {string} [securityRuleAssociations.networkInterfaceAssociation.id]
 * Network interface ID.
 * @member {array}
 * [securityRuleAssociations.networkInterfaceAssociation.securityRules]
 * Collection of custom security rules.
 * @member {object} [securityRuleAssociations.subnetAssociation]
 * @member {string} [securityRuleAssociations.subnetAssociation.id] Subnet ID.
 * @member {array} [securityRuleAssociations.subnetAssociation.securityRules]
 * Collection of custom security rules.
 * @member {array} [securityRuleAssociations.defaultSecurityRules] Collection
 * of default security rules of the network security group.
 * @member {array} [securityRuleAssociations.effectiveSecurityRules] Collection
 * of effective security rules.
 */
export interface SecurityGroupNetworkInterface {
  id?: string;
  securityRuleAssociations?: SecurityRuleAssociations;
}

/**
 * @class
 * Initializes a new instance of the SecurityGroupViewResult class.
 * @constructor
 * The information about security rules applied to the specified VM.
 *
 * @member {array} [networkInterfaces] List of network interfaces on the
 * specified VM.
 */
export interface SecurityGroupViewResult {
  networkInterfaces?: SecurityGroupNetworkInterface[];
}

/**
 * @class
 * Initializes a new instance of the PacketCaptureStorageLocation class.
 * @constructor
 * Describes the storage location for a packet capture session.
 *
 * @member {string} [storageId] The ID of the storage account to save the
 * packet capture session. Required if no local file path is provided.
 * @member {string} [storagePath] The URI of the storage path to save the
 * packet capture. Must be a well-formed URI describing the location to save
 * the packet capture.
 * @member {string} [filePath] A valid local path on the targeting VM. Must
 * include the name of the capture file (*.cap). For linux virtual machine it
 * must start with /var/captures. Required if no storage ID is provided,
 * otherwise optional.
 */
export interface PacketCaptureStorageLocation {
  storageId?: string;
  storagePath?: string;
  filePath?: string;
}

/**
 * @class
 * Initializes a new instance of the PacketCaptureFilter class.
 * @constructor
 * Filter that is applied to packet capture request. Multiple filters can be
 * applied.
 *
 * @member {string} [protocol] Protocol to be filtered on. Possible values
 * include: 'TCP', 'UDP', 'Any'. Default value: 'Any' .
 * @member {string} [localIPAddress] Local IP Address to be filtered on.
 * Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for
 * range. "127.0.0.1;127.0.0.5"? for multiple entries. Multiple ranges not
 * currently supported. Mixing ranges with multiple entries not currently
 * supported. Default = null.
 * @member {string} [remoteIPAddress] Local IP Address to be filtered on.
 * Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for
 * range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not
 * currently supported. Mixing ranges with multiple entries not currently
 * supported. Default = null.
 * @member {string} [localPort] Local port to be filtered on. Notation: "80"
 * for single port entry."80-85" for range. "80;443;" for multiple entries.
 * Multiple ranges not currently supported. Mixing ranges with multiple entries
 * not currently supported. Default = null.
 * @member {string} [remotePort] Remote port to be filtered on. Notation: "80"
 * for single port entry."80-85" for range. "80;443;" for multiple entries.
 * Multiple ranges not currently supported. Mixing ranges with multiple entries
 * not currently supported. Default = null.
 */
export interface PacketCaptureFilter {
  protocol?: string;
  localIPAddress?: string;
  remoteIPAddress?: string;
  localPort?: string;
  remotePort?: string;
}

/**
 * @class
 * Initializes a new instance of the PacketCaptureParameters class.
 * @constructor
 * Parameters that define the create packet capture operation.
 *
 * @member {string} target The ID of the targeted resource, only VM is
 * currently supported.
 * @member {number} [bytesToCapturePerPacket] Number of bytes captured per
 * packet, the remaining bytes are truncated. Default value: 0 .
 * @member {number} [totalBytesPerSession] Maximum size of the capture output.
 * Default value: 1073741824 .
 * @member {number} [timeLimitInSeconds] Maximum duration of the capture
 * session in seconds. Default value: 18000 .
 * @member {object} storageLocation
 * @member {string} [storageLocation.storageId] The ID of the storage account
 * to save the packet capture session. Required if no local file path is
 * provided.
 * @member {string} [storageLocation.storagePath] The URI of the storage path
 * to save the packet capture. Must be a well-formed URI describing the
 * location to save the packet capture.
 * @member {string} [storageLocation.filePath] A valid local path on the
 * targeting VM. Must include the name of the capture file (*.cap). For linux
 * virtual machine it must start with /var/captures. Required if no storage ID
 * is provided, otherwise optional.
 * @member {array} [filters]
 */
export interface PacketCaptureParameters {
  target: string;
  bytesToCapturePerPacket?: number;
  totalBytesPerSession?: number;
  timeLimitInSeconds?: number;
  storageLocation: PacketCaptureStorageLocation;
  filters?: PacketCaptureFilter[];
}

/**
 * @class
 * Initializes a new instance of the PacketCapture class.
 * @constructor
 * Parameters that define the create packet capture operation.
 *
 * @member {string} target The ID of the targeted resource, only VM is
 * currently supported.
 * @member {number} [bytesToCapturePerPacket] Number of bytes captured per
 * packet, the remaining bytes are truncated. Default value: 0 .
 * @member {number} [totalBytesPerSession] Maximum size of the capture output.
 * Default value: 1073741824 .
 * @member {number} [timeLimitInSeconds] Maximum duration of the capture
 * session in seconds. Default value: 18000 .
 * @member {object} storageLocation
 * @member {string} [storageLocation.storageId] The ID of the storage account
 * to save the packet capture session. Required if no local file path is
 * provided.
 * @member {string} [storageLocation.storagePath] The URI of the storage path
 * to save the packet capture. Must be a well-formed URI describing the
 * location to save the packet capture.
 * @member {string} [storageLocation.filePath] A valid local path on the
 * targeting VM. Must include the name of the capture file (*.cap). For linux
 * virtual machine it must start with /var/captures. Required if no storage ID
 * is provided, otherwise optional.
 * @member {array} [filters]
 */
export interface PacketCapture {
  target: string;
  bytesToCapturePerPacket?: number;
  totalBytesPerSession?: number;
  timeLimitInSeconds?: number;
  storageLocation: PacketCaptureStorageLocation;
  filters?: PacketCaptureFilter[];
}

/**
 * @class
 * Initializes a new instance of the PacketCaptureResult class.
 * @constructor
 * Information about packet capture session.
 *
 * @member {string} [name] Name of the packet capture session.
 * @member {string} [id] ID of the packet capture operation.
 * @member {string} [etag] Default value: 'A unique read-only string that
 * changes whenever the resource is updated.' .
 * @member {string} target The ID of the targeted resource, only VM is
 * currently supported.
 * @member {number} [bytesToCapturePerPacket] Number of bytes captured per
 * packet, the remaining bytes are truncated. Default value: 0 .
 * @member {number} [totalBytesPerSession] Maximum size of the capture output.
 * Default value: 1073741824 .
 * @member {number} [timeLimitInSeconds] Maximum duration of the capture
 * session in seconds. Default value: 18000 .
 * @member {object} storageLocation
 * @member {string} [storageLocation.storageId] The ID of the storage account
 * to save the packet capture session. Required if no local file path is
 * provided.
 * @member {string} [storageLocation.storagePath] The URI of the storage path
 * to save the packet capture. Must be a well-formed URI describing the
 * location to save the packet capture.
 * @member {string} [storageLocation.filePath] A valid local path on the
 * targeting VM. Must include the name of the capture file (*.cap). For linux
 * virtual machine it must start with /var/captures. Required if no storage ID
 * is provided, otherwise optional.
 * @member {array} [filters]
 * @member {string} [provisioningState] The provisioning state of the packet
 * capture session. Possible values include: 'Succeeded', 'Updating',
 * 'Deleting', 'Failed'
 */
export interface PacketCaptureResult {
  readonly name?: string;
  readonly id?: string;
  etag?: string;
  target: string;
  bytesToCapturePerPacket?: number;
  totalBytesPerSession?: number;
  timeLimitInSeconds?: number;
  storageLocation: PacketCaptureStorageLocation;
  filters?: PacketCaptureFilter[];
  provisioningState?: string;
}

/**
 * @class
 * Initializes a new instance of the PacketCaptureQueryStatusResult class.
 * @constructor
 * Status of packet capture session.
 *
 * @member {string} [name] The name of the packet capture resource.
 * @member {string} [id] The ID of the packet capture resource.
 * @member {date} [captureStartTime] The start time of the packet capture
 * session.
 * @member {string} [packetCaptureStatus] The status of the packet capture
 * session. Possible values include: 'NotStarted', 'Running', 'Stopped',
 * 'Error', 'Unknown'
 * @member {string} [stopReason] The reason the current packet capture session
 * was stopped.
 * @member {array} [packetCaptureError] List of errors of packet capture
 * session.
 */
export interface PacketCaptureQueryStatusResult {
  name?: string;
  id?: string;
  captureStartTime?: Date;
  packetCaptureStatus?: string;
  stopReason?: string;
  packetCaptureError?: string[];
}

/**
 * @class
 * Initializes a new instance of the TroubleshootingParameters class.
 * @constructor
 * Parameters that define the resource to troubleshoot.
 *
 * @member {string} targetResourceId The target resource to troubleshoot.
 * @member {string} storageId The ID for the storage account to save the
 * troubleshoot result.
 * @member {string} storagePath The path to the blob to save the troubleshoot
 * result in.
 */
export interface TroubleshootingParameters {
  targetResourceId: string;
  storageId: string;
  storagePath: string;
}

/**
 * @class
 * Initializes a new instance of the QueryTroubleshootingParameters class.
 * @constructor
 * Parameters that define the resource to query the troubleshooting result.
 *
 * @member {string} targetResourceId The target resource ID to query the
 * troubleshooting result.
 */
export interface QueryTroubleshootingParameters {
  targetResourceId: string;
}

/**
 * @class
 * Initializes a new instance of the TroubleshootingRecommendedActions class.
 * @constructor
 * Recommended actions based on discovered issues.
 *
 * @member {string} [actionId] ID of the recommended action.
 * @member {string} [actionText] Description of recommended actions.
 * @member {string} [actionUri] The uri linking to a documentation for the
 * recommended troubleshooting actions.
 * @member {string} [actionUriText] The information from the URI for the
 * recommended troubleshooting actions.
 */
export interface TroubleshootingRecommendedActions {
  actionId?: string;
  actionText?: string;
  actionUri?: string;
  actionUriText?: string;
}

/**
 * @class
 * Initializes a new instance of the TroubleshootingDetails class.
 * @constructor
 * Information gained from troubleshooting of specified resource.
 *
 * @member {string} [id] The id of the get troubleshoot operation.
 * @member {string} [reasonType] Reason type of failure.
 * @member {string} [summary] A summary of troubleshooting.
 * @member {string} [detail] Details on troubleshooting results.
 * @member {array} [recommendedActions] List of recommended actions.
 */
export interface TroubleshootingDetails {
  id?: string;
  reasonType?: string;
  summary?: string;
  detail?: string;
  recommendedActions?: TroubleshootingRecommendedActions[];
}

/**
 * @class
 * Initializes a new instance of the TroubleshootingResult class.
 * @constructor
 * Troubleshooting information gained from specified resource.
 *
 * @member {date} [startTime] The start time of the troubleshooting.
 * @member {date} [endTime] The end time of the troubleshooting.
 * @member {string} [code] The result code of the troubleshooting.
 * @member {array} [results] Information from troubleshooting.
 */
export interface TroubleshootingResult {
  startTime?: Date;
  endTime?: Date;
  code?: string;
  results?: TroubleshootingDetails[];
}

/**
 * @class
 * Initializes a new instance of the RetentionPolicyParameters class.
 * @constructor
 * Parameters that define the retention policy for flow log.
 *
 * @member {number} [days] Number of days to retain flow log records. Default
 * value: 0 .
 * @member {boolean} [enabled] Flag to enable/disable retention. Default value:
 * false .
 */
export interface RetentionPolicyParameters {
  days?: number;
  enabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the FlowLogStatusParameters class.
 * @constructor
 * Parameters that define a resource to query flow log and traffic analytics
 * (optional) status.
 *
 * @member {string} targetResourceId The target resource where getting the flow
 * log and traffic analytics (optional) status.
 */
export interface FlowLogStatusParameters {
  targetResourceId: string;
}

/**
 * @class
 * Initializes a new instance of the TrafficAnalyticsConfigurationProperties class.
 * @constructor
 * Parameters that define the configuration of traffic analytics.
 *
 * @member {boolean} enabled Flag to enable/disable traffic analytics.
 * @member {string} workspaceId The resource guid of the attached workspace
 * @member {string} workspaceRegion The location of the attached workspace
 * @member {string} workspaceResourceId Resource Id of the attached workspace
 */
export interface TrafficAnalyticsConfigurationProperties {
  enabled: boolean;
  workspaceId: string;
  workspaceRegion: string;
  workspaceResourceId: string;
}

/**
 * @class
 * Initializes a new instance of the TrafficAnalyticsProperties class.
 * @constructor
 * Parameters that define the configuration of traffic analytics.
 *
 * @member {object} networkWatcherFlowAnalyticsConfiguration
 * @member {boolean} [networkWatcherFlowAnalyticsConfiguration.enabled] Flag to
 * enable/disable traffic analytics.
 * @member {string} [networkWatcherFlowAnalyticsConfiguration.workspaceId] The
 * resource guid of the attached workspace
 * @member {string} [networkWatcherFlowAnalyticsConfiguration.workspaceRegion]
 * The location of the attached workspace
 * @member {string}
 * [networkWatcherFlowAnalyticsConfiguration.workspaceResourceId] Resource Id
 * of the attached workspace
 */
export interface TrafficAnalyticsProperties {
  networkWatcherFlowAnalyticsConfiguration: TrafficAnalyticsConfigurationProperties;
}

/**
 * @class
 * Initializes a new instance of the FlowLogInformation class.
 * @constructor
 * Information on the configuration of flow log and traffic analytics
 * (optional) .
 *
 * @member {string} targetResourceId The ID of the resource to configure for
 * flow log and traffic analytics (optional) .
 * @member {string} storageId ID of the storage account which is used to store
 * the flow log.
 * @member {boolean} enabled Flag to enable/disable flow logging.
 * @member {object} [retentionPolicy]
 * @member {number} [retentionPolicy.days] Number of days to retain flow log
 * records.
 * @member {boolean} [retentionPolicy.enabled] Flag to enable/disable
 * retention.
 * @member {object} [flowAnalyticsConfiguration]
 * @member {object}
 * [flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration]
 * @member {boolean}
 * [flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled]
 * Flag to enable/disable traffic analytics.
 * @member {string}
 * [flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceId]
 * The resource guid of the attached workspace
 * @member {string}
 * [flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceRegion]
 * The location of the attached workspace
 * @member {string}
 * [flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.workspaceResourceId]
 * Resource Id of the attached workspace
 */
export interface FlowLogInformation {
  targetResourceId: string;
  storageId: string;
  enabled: boolean;
  retentionPolicy?: RetentionPolicyParameters;
  flowAnalyticsConfiguration?: TrafficAnalyticsProperties;
}

/**
 * @class
 * Initializes a new instance of the ConnectivitySource class.
 * @constructor
 * Parameters that define the source of the connection.
 *
 * @member {string} resourceId The ID of the resource from which a connectivity
 * check will be initiated.
 * @member {number} [port] The source port from which a connectivity check will
 * be performed.
 */
export interface ConnectivitySource {
  resourceId: string;
  port?: number;
}

/**
 * @class
 * Initializes a new instance of the ConnectivityDestination class.
 * @constructor
 * Parameters that define destination of connection.
 *
 * @member {string} [resourceId] The ID of the resource to which a connection
 * attempt will be made.
 * @member {string} [address] The IP address or URI the resource to which a
 * connection attempt will be made.
 * @member {number} [port] Port on which check connectivity will be performed.
 */
export interface ConnectivityDestination {
  resourceId?: string;
  address?: string;
  port?: number;
}

/**
 * @class
 * Initializes a new instance of the HTTPHeader class.
 * @constructor
 * Describes the HTTP header.
 *
 * @member {string} [name] The name in HTTP header.
 * @member {string} [value] The value in HTTP header.
 */
export interface HTTPHeader {
  name?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the HTTPConfiguration class.
 * @constructor
 * HTTP configuration of the connectivity check.
 *
 * @member {string} [method] HTTP method. Possible values include: 'Get'
 * @member {array} [headers] List of HTTP headers.
 * @member {array} [validStatusCodes] Valid status codes.
 */
export interface HTTPConfiguration {
  method?: string;
  headers?: HTTPHeader[];
  validStatusCodes?: number[];
}

/**
 * @class
 * Initializes a new instance of the ProtocolConfiguration class.
 * @constructor
 * Configuration of the protocol.
 *
 * @member {object} [hTTPConfiguration]
 * @member {string} [hTTPConfiguration.method] HTTP method. Possible values
 * include: 'Get'
 * @member {array} [hTTPConfiguration.headers] List of HTTP headers.
 * @member {array} [hTTPConfiguration.validStatusCodes] Valid status codes.
 */
export interface ProtocolConfiguration {
  hTTPConfiguration?: HTTPConfiguration;
}

/**
 * @class
 * Initializes a new instance of the ConnectivityParameters class.
 * @constructor
 * Parameters that determine how the connectivity check will be performed.
 *
 * @member {object} source
 * @member {string} [source.resourceId] The ID of the resource from which a
 * connectivity check will be initiated.
 * @member {number} [source.port] The source port from which a connectivity
 * check will be performed.
 * @member {object} destination
 * @member {string} [destination.resourceId] The ID of the resource to which a
 * connection attempt will be made.
 * @member {string} [destination.address] The IP address or URI the resource to
 * which a connection attempt will be made.
 * @member {number} [destination.port] Port on which check connectivity will be
 * performed.
 * @member {string} [protocol] Network protocol. Possible values include:
 * 'Tcp', 'Http', 'Https', 'Icmp'
 * @member {object} [protocolConfiguration]
 * @member {object} [protocolConfiguration.hTTPConfiguration]
 * @member {string} [protocolConfiguration.hTTPConfiguration.method] HTTP
 * method. Possible values include: 'Get'
 * @member {array} [protocolConfiguration.hTTPConfiguration.headers] List of
 * HTTP headers.
 * @member {array} [protocolConfiguration.hTTPConfiguration.validStatusCodes]
 * Valid status codes.
 */
export interface ConnectivityParameters {
  source: ConnectivitySource;
  destination: ConnectivityDestination;
  protocol?: string;
  protocolConfiguration?: ProtocolConfiguration;
}

/**
 * @class
 * Initializes a new instance of the ConnectivityIssue class.
 * @constructor
 * Information about an issue encountered in the process of checking for
 * connectivity.
 *
 * @member {string} [origin] The origin of the issue. Possible values include:
 * 'Local', 'Inbound', 'Outbound'
 * @member {string} [severity] The severity of the issue. Possible values
 * include: 'Error', 'Warning'
 * @member {string} [type] The type of issue. Possible values include:
 * 'Unknown', 'AgentStopped', 'GuestFirewall', 'DnsResolution', 'SocketBind',
 * 'NetworkSecurityRule', 'UserDefinedRoute', 'PortThrottled', 'Platform'
 * @member {array} [context] Provides additional context on the issue.
 */
export interface ConnectivityIssue {
  readonly origin?: string;
  readonly severity?: string;
  readonly type?: string;
  readonly context?: { [propertyName: string]: string }[];
}

/**
 * @class
 * Initializes a new instance of the ConnectivityHop class.
 * @constructor
 * Information about a hop between the source and the destination.
 *
 * @member {string} [type] The type of the hop.
 * @member {string} [id] The ID of the hop.
 * @member {string} [address] The IP address of the hop.
 * @member {string} [resourceId] The ID of the resource corresponding to this
 * hop.
 * @member {array} [nextHopIds] List of next hop identifiers.
 * @member {array} [issues] List of issues.
 */
export interface ConnectivityHop {
  readonly type?: string;
  readonly id?: string;
  readonly address?: string;
  readonly resourceId?: string;
  readonly nextHopIds?: string[];
  readonly issues?: ConnectivityIssue[];
}

/**
 * @class
 * Initializes a new instance of the ConnectivityInformation class.
 * @constructor
 * Information on the connectivity status.
 *
 * @member {array} [hops] List of hops between the source and the destination.
 * @member {string} [connectionStatus] The connection status. Possible values
 * include: 'Unknown', 'Connected', 'Disconnected', 'Degraded'
 * @member {number} [avgLatencyInMs] Average latency in milliseconds.
 * @member {number} [minLatencyInMs] Minimum latency in milliseconds.
 * @member {number} [maxLatencyInMs] Maximum latency in milliseconds.
 * @member {number} [probesSent] Total number of probes sent.
 * @member {number} [probesFailed] Number of failed probes.
 */
export interface ConnectivityInformation {
  readonly hops?: ConnectivityHop[];
  readonly connectionStatus?: string;
  readonly avgLatencyInMs?: number;
  readonly minLatencyInMs?: number;
  readonly maxLatencyInMs?: number;
  readonly probesSent?: number;
  readonly probesFailed?: number;
}

/**
 * @class
 * Initializes a new instance of the AzureReachabilityReportLocation class.
 * @constructor
 * Parameters that define a geographic location.
 *
 * @member {string} country The name of the country.
 * @member {string} [state] The name of the state.
 * @member {string} [city] The name of the city or town.
 */
export interface AzureReachabilityReportLocation {
  country: string;
  state?: string;
  city?: string;
}

/**
 * @class
 * Initializes a new instance of the AzureReachabilityReportParameters class.
 * @constructor
 * Geographic and time constraints for Azure reachability report.
 *
 * @member {object} providerLocation
 * @member {string} [providerLocation.country] The name of the country.
 * @member {string} [providerLocation.state] The name of the state.
 * @member {string} [providerLocation.city] The name of the city or town.
 * @member {array} [providers] List of Internet service providers.
 * @member {array} [azureLocations] Optional Azure regions to scope the query
 * to.
 * @member {date} startTime The start time for the Azure reachability report.
 * @member {date} endTime The end time for the Azure reachability report.
 */
export interface AzureReachabilityReportParameters {
  providerLocation: AzureReachabilityReportLocation;
  providers?: string[];
  azureLocations?: string[];
  startTime: Date;
  endTime: Date;
}

/**
 * @class
 * Initializes a new instance of the AzureReachabilityReportLatencyInfo class.
 * @constructor
 * Details on latency for a time series.
 *
 * @member {date} [timeStamp] The time stamp.
 * @member {number} [score] The relative latency score between 1 and 100,
 * higher values indicating a faster connection.
 */
export interface AzureReachabilityReportLatencyInfo {
  timeStamp?: Date;
  score?: number;
}

/**
 * @class
 * Initializes a new instance of the AzureReachabilityReportItem class.
 * @constructor
 * Azure reachability report details for a given provider location.
 *
 * @member {string} [provider] The Internet service provider.
 * @member {string} [azureLocation] The Azure region.
 * @member {array} [latencies] List of latency details for each of the time
 * series.
 */
export interface AzureReachabilityReportItem {
  provider?: string;
  azureLocation?: string;
  latencies?: AzureReachabilityReportLatencyInfo[];
}

/**
 * @class
 * Initializes a new instance of the AzureReachabilityReport class.
 * @constructor
 * Azure reachability report details.
 *
 * @member {string} aggregationLevel The aggregation level of Azure
 * reachability report. Can be Country, State or City.
 * @member {object} providerLocation
 * @member {string} [providerLocation.country] The name of the country.
 * @member {string} [providerLocation.state] The name of the state.
 * @member {string} [providerLocation.city] The name of the city or town.
 * @member {array} reachabilityReport List of Azure reachability report items.
 */
export interface AzureReachabilityReport {
  aggregationLevel: string;
  providerLocation: AzureReachabilityReportLocation;
  reachabilityReport: AzureReachabilityReportItem[];
}

/**
 * @class
 * Initializes a new instance of the AvailableProvidersListParameters class.
 * @constructor
 * Constraints that determine the list of available Internet service providers.
 *
 * @member {array} [azureLocations] A list of Azure regions.
 * @member {string} [country] The country for available providers list.
 * @member {string} [state] The state for available providers list.
 * @member {string} [city] The city or town for available providers list.
 */
export interface AvailableProvidersListParameters {
  azureLocations?: string[];
  country?: string;
  state?: string;
  city?: string;
}

/**
 * @class
 * Initializes a new instance of the AvailableProvidersListCity class.
 * @constructor
 * City or town details.
 *
 * @member {string} [cityName] The city or town name.
 * @member {array} [providers] A list of Internet service providers.
 */
export interface AvailableProvidersListCity {
  cityName?: string;
  providers?: string[];
}

/**
 * @class
 * Initializes a new instance of the AvailableProvidersListState class.
 * @constructor
 * State details.
 *
 * @member {string} [stateName] The state name.
 * @member {array} [providers] A list of Internet service providers.
 * @member {array} [cities] List of available cities or towns in the state.
 */
export interface AvailableProvidersListState {
  stateName?: string;
  providers?: string[];
  cities?: AvailableProvidersListCity[];
}

/**
 * @class
 * Initializes a new instance of the AvailableProvidersListCountry class.
 * @constructor
 * Country details.
 *
 * @member {string} [countryName] The country name.
 * @member {array} [providers] A list of Internet service providers.
 * @member {array} [states] List of available states in the country.
 */
export interface AvailableProvidersListCountry {
  countryName?: string;
  providers?: string[];
  states?: AvailableProvidersListState[];
}

/**
 * @class
 * Initializes a new instance of the AvailableProvidersList class.
 * @constructor
 * List of available countries with details.
 *
 * @member {array} countries List of available countries.
 */
export interface AvailableProvidersList {
  countries: AvailableProvidersListCountry[];
}

/**
 * @class
 * Initializes a new instance of the ConnectionMonitorSource class.
 * @constructor
 * Describes the source of connection monitor.
 *
 * @member {string} resourceId The ID of the resource used as the source by
 * connection monitor.
 * @member {number} [port] The source port used by connection monitor.
 */
export interface ConnectionMonitorSource {
  resourceId: string;
  port?: number;
}

/**
 * @class
 * Initializes a new instance of the ConnectionMonitorDestination class.
 * @constructor
 * Describes the destination of connection monitor.
 *
 * @member {string} [resourceId] The ID of the resource used as the destination
 * by connection monitor.
 * @member {string} [address] Address of the connection monitor destination (IP
 * or domain name).
 * @member {number} [port] The destination port used by connection monitor.
 */
export interface ConnectionMonitorDestination {
  resourceId?: string;
  address?: string;
  port?: number;
}

/**
 * @class
 * Initializes a new instance of the ConnectionMonitorParameters class.
 * @constructor
 * Parameters that define the operation to create a connection monitor.
 *
 * @member {object} source
 * @member {string} [source.resourceId] The ID of the resource used as the
 * source by connection monitor.
 * @member {number} [source.port] The source port used by connection monitor.
 * @member {object} destination
 * @member {string} [destination.resourceId] The ID of the resource used as the
 * destination by connection monitor.
 * @member {string} [destination.address] Address of the connection monitor
 * destination (IP or domain name).
 * @member {number} [destination.port] The destination port used by connection
 * monitor.
 * @member {boolean} [autoStart] Determines if the connection monitor will
 * start automatically once created. Default value: true .
 * @member {number} [monitoringIntervalInSeconds] Monitoring interval in
 * seconds. Default value: 60 .
 */
export interface ConnectionMonitorParameters {
  source: ConnectionMonitorSource;
  destination: ConnectionMonitorDestination;
  autoStart?: boolean;
  monitoringIntervalInSeconds?: number;
}

/**
 * @class
 * Initializes a new instance of the ConnectionMonitor class.
 * @constructor
 * Parameters that define the operation to create a connection monitor.
 *
 * @member {string} [location] Connection monitor location.
 * @member {object} [tags] Connection monitor tags.
 * @member {object} source
 * @member {string} [source.resourceId] The ID of the resource used as the
 * source by connection monitor.
 * @member {number} [source.port] The source port used by connection monitor.
 * @member {object} destination
 * @member {string} [destination.resourceId] The ID of the resource used as the
 * destination by connection monitor.
 * @member {string} [destination.address] Address of the connection monitor
 * destination (IP or domain name).
 * @member {number} [destination.port] The destination port used by connection
 * monitor.
 * @member {boolean} [autoStart] Determines if the connection monitor will
 * start automatically once created. Default value: true .
 * @member {number} [monitoringIntervalInSeconds] Monitoring interval in
 * seconds. Default value: 60 .
 */
export interface ConnectionMonitor {
  location?: string;
  tags?: { [propertyName: string]: string };
  source: ConnectionMonitorSource;
  destination: ConnectionMonitorDestination;
  autoStart?: boolean;
  monitoringIntervalInSeconds?: number;
}

/**
 * @class
 * Initializes a new instance of the ConnectionMonitorResult class.
 * @constructor
 * Information about the connection monitor.
 *
 * @member {string} [name] Name of the connection monitor.
 * @member {string} [id] ID of the connection monitor.
 * @member {string} [etag] Default value: 'A unique read-only string that
 * changes whenever the resource is updated.' .
 * @member {string} [type] Connection monitor type.
 * @member {string} [location] Connection monitor location.
 * @member {object} [tags] Connection monitor tags.
 * @member {object} source
 * @member {string} [source.resourceId] The ID of the resource used as the
 * source by connection monitor.
 * @member {number} [source.port] The source port used by connection monitor.
 * @member {object} destination
 * @member {string} [destination.resourceId] The ID of the resource used as the
 * destination by connection monitor.
 * @member {string} [destination.address] Address of the connection monitor
 * destination (IP or domain name).
 * @member {number} [destination.port] The destination port used by connection
 * monitor.
 * @member {boolean} [autoStart] Determines if the connection monitor will
 * start automatically once created. Default value: true .
 * @member {number} [monitoringIntervalInSeconds] Monitoring interval in
 * seconds. Default value: 60 .
 * @member {string} [provisioningState] The provisioning state of the
 * connection monitor. Possible values include: 'Succeeded', 'Updating',
 * 'Deleting', 'Failed'
 * @member {date} [startTime] The date and time when the connection monitor was
 * started.
 * @member {string} [monitoringStatus] The monitoring status of the connection
 * monitor.
 */
export interface ConnectionMonitorResult extends BaseResource {
  readonly name?: string;
  readonly id?: string;
  etag?: string;
  readonly type?: string;
  location?: string;
  tags?: { [propertyName: string]: string };
  source: ConnectionMonitorSource;
  destination: ConnectionMonitorDestination;
  autoStart?: boolean;
  monitoringIntervalInSeconds?: number;
  provisioningState?: string;
  startTime?: Date;
  monitoringStatus?: string;
}

/**
 * @class
 * Initializes a new instance of the ConnectionStateSnapshot class.
 * @constructor
 * Connection state snapshot.
 *
 * @member {string} [connectionState] The connection state. Possible values
 * include: 'Reachable', 'Unreachable', 'Unknown'
 * @member {date} [startTime] The start time of the connection snapshot.
 * @member {date} [endTime] The end time of the connection snapshot.
 * @member {string} [evaluationState] Connectivity analysis evaluation state.
 * Possible values include: 'NotStarted', 'InProgress', 'Completed'
 * @member {number} [avgLatencyInMs] Average latency in ms.
 * @member {number} [minLatencyInMs] Minimum latency in ms.
 * @member {number} [maxLatencyInMs] Maximum latency in ms.
 * @member {number} [probesSent] The number of sent probes.
 * @member {number} [probesFailed] The number of failed probes.
 * @member {array} [hops] List of hops between the source and the destination.
 */
export interface ConnectionStateSnapshot {
  connectionState?: string;
  startTime?: Date;
  endTime?: Date;
  evaluationState?: string;
  avgLatencyInMs?: number;
  minLatencyInMs?: number;
  maxLatencyInMs?: number;
  probesSent?: number;
  probesFailed?: number;
  readonly hops?: ConnectivityHop[];
}

/**
 * @class
 * Initializes a new instance of the ConnectionMonitorQueryResult class.
 * @constructor
 * List of connection states snaphots.
 *
 * @member {string} [sourceStatus] Status of connection monitor source.
 * Possible values include: 'Uknown', 'Active', 'Inactive'
 * @member {array} [states] Information about connection states.
 */
export interface ConnectionMonitorQueryResult {
  sourceStatus?: string;
  states?: ConnectionStateSnapshot[];
}

/**
 * @class
 * Initializes a new instance of the TrafficQuery class.
 * @constructor
 * Parameters to compare with network configuration.
 *
 * @member {string} direction The direction of the traffic. Accepted values are
 * 'Inbound' and 'Outbound'. Possible values include: 'Inbound', 'Outbound'
 * @member {string} protocol Protocol to be verified on. Accepted values are
 * '*', TCP, UDP.
 * @member {string} source Traffic source. Accepted values are '*', IP
 * Address/CIDR, Service Tag.
 * @member {string} destination Traffic destination. Accepted values are: '*',
 * IP Address/CIDR, Service Tag.
 * @member {string} destinationPort Traffice destination port. Accepted values
 * are '*', port (for example, 3389) and port range (for example, 80-100).
 */
export interface TrafficQuery {
  direction: string;
  protocol: string;
  source: string;
  destination: string;
  destinationPort: string;
}

/**
 * @class
 * Initializes a new instance of the NetworkConfigurationDiagnosticParameters class.
 * @constructor
 * Parameters to get network configuration diagnostic.
 *
 * @member {string} targetResourceId The ID of the target resource to perform
 * network configuration diagnostic. Valid options are VM, NetworkInterface,
 * VMSS/NetworkInterface and Application Gateway.
 * @member {array} queries List of traffic queries.
 */
export interface NetworkConfigurationDiagnosticParameters {
  targetResourceId: string;
  queries: TrafficQuery[];
}

/**
 * @class
 * Initializes a new instance of the MatchedRule class.
 * @constructor
 * Matched rule.
 *
 * @member {string} [ruleName] Name of the matched network security rule.
 * @member {string} [action] The network traffic is allowed or denied. Possible
 * values are 'Allow' and 'Deny'.
 */
export interface MatchedRule {
  ruleName?: string;
  action?: string;
}

/**
 * @class
 * Initializes a new instance of the NetworkSecurityRulesEvaluationResult class.
 * @constructor
 * Network security rules evaluation result.
 *
 * @member {string} [name] Name of the network security rule.
 * @member {boolean} [protocolMatched] Value indicating whether protocol is
 * matched.
 * @member {boolean} [sourceMatched] Value indicating whether source is
 * matched.
 * @member {boolean} [sourcePortMatched] Value indicating whether source port
 * is matched.
 * @member {boolean} [destinationMatched] Value indicating whether destination
 * is matched.
 * @member {boolean} [destinationPortMatched] Value indicating whether
 * destination port is matched.
 */
export interface NetworkSecurityRulesEvaluationResult {
  name?: string;
  protocolMatched?: boolean;
  sourceMatched?: boolean;
  sourcePortMatched?: boolean;
  destinationMatched?: boolean;
  destinationPortMatched?: boolean;
}

/**
 * @class
 * Initializes a new instance of the EvaluatedNetworkSecurityGroup class.
 * @constructor
 * Results of network security group evaluation.
 *
 * @member {string} [networkSecurityGroupId] Network security group ID.
 * @member {object} [matchedRule]
 * @member {string} [matchedRule.ruleName] Name of the matched network security
 * rule.
 * @member {string} [matchedRule.action] The network traffic is allowed or
 * denied. Possible values are 'Allow' and 'Deny'.
 * @member {array} [rulesEvaluationResult] List of network security rules
 * evaluation results.
 */
export interface EvaluatedNetworkSecurityGroup {
  networkSecurityGroupId?: string;
  matchedRule?: MatchedRule;
  readonly rulesEvaluationResult?: NetworkSecurityRulesEvaluationResult[];
}

/**
 * @class
 * Initializes a new instance of the NetworkSecurityGroupResult class.
 * @constructor
 * Network configuration diagnostic result corresponded provided traffic query.
 *
 * @member {string} [securityRuleAccessResult] The network traffic is allowed
 * or denied. Possible values are 'Allow' and 'Deny'. Possible values include:
 * 'Allow', 'Deny'
 * @member {array} [evaluatedNetworkSecurityGroups] List of results network
 * security groups diagnostic.
 */
export interface NetworkSecurityGroupResult {
  securityRuleAccessResult?: string;
  readonly evaluatedNetworkSecurityGroups?: EvaluatedNetworkSecurityGroup[];
}

/**
 * @class
 * Initializes a new instance of the NetworkConfigurationDiagnosticResult class.
 * @constructor
 * Network configuration diagnostic result corresponded to provided traffic
 * query.
 *
 * @member {object} [trafficQuery]
 * @member {string} [trafficQuery.direction] The direction of the traffic.
 * Accepted values are 'Inbound' and 'Outbound'. Possible values include:
 * 'Inbound', 'Outbound'
 * @member {string} [trafficQuery.protocol] Protocol to be verified on.
 * Accepted values are '*', TCP, UDP.
 * @member {string} [trafficQuery.source] Traffic source. Accepted values are
 * '*', IP Address/CIDR, Service Tag.
 * @member {string} [trafficQuery.destination] Traffic destination. Accepted
 * values are: '*', IP Address/CIDR, Service Tag.
 * @member {string} [trafficQuery.destinationPort] Traffice destination port.
 * Accepted values are '*', port (for example, 3389) and port range (for
 * example, 80-100).
 * @member {object} [networkSecurityGroupResult]
 * @member {string} [networkSecurityGroupResult.securityRuleAccessResult] The
 * network traffic is allowed or denied. Possible values are 'Allow' and
 * 'Deny'. Possible values include: 'Allow', 'Deny'
 * @member {array} [networkSecurityGroupResult.evaluatedNetworkSecurityGroups]
 * List of results network security groups diagnostic.
 */
export interface NetworkConfigurationDiagnosticResult {
  trafficQuery?: TrafficQuery;
  networkSecurityGroupResult?: NetworkSecurityGroupResult;
}

/**
 * @class
 * Initializes a new instance of the NetworkConfigurationDiagnosticResponse class.
 * @constructor
 * Results of network configuration diagnostic on the target resource.
 *
 * @member {array} [results] List of network configuration diagnostic results.
 */
export interface NetworkConfigurationDiagnosticResponse {
  readonly results?: NetworkConfigurationDiagnosticResult[];
}

/**
 * @class
 * Initializes a new instance of the OperationDisplay class.
 * @constructor
 * Display metadata associated with the operation.
 *
 * @member {string} [provider] Service provider: Microsoft Network.
 * @member {string} [resource] Resource on which the operation is performed.
 * @member {string} [operation] Type of the operation: get, read, delete, etc.
 * @member {string} [description] Description of the operation.
 */
export interface OperationDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the Availability class.
 * @constructor
 * Availability of the metric.
 *
 * @member {string} [timeGrain] The time grain of the availability.
 * @member {string} [retention] The retention of the availability.
 * @member {string} [blobDuration] Duration of the availability blob.
 */
export interface Availability {
  timeGrain?: string;
  retention?: string;
  blobDuration?: string;
}

/**
 * @class
 * Initializes a new instance of the Dimension class.
 * @constructor
 * Dimension of the metric.
 *
 * @member {string} [name] The name of the dimension.
 * @member {string} [displayName] The display name of the dimension.
 * @member {string} [internalName] The internal name of the dimension.
 */
export interface Dimension {
  name?: string;
  displayName?: string;
  internalName?: string;
}

/**
 * @class
 * Initializes a new instance of the MetricSpecification class.
 * @constructor
 * Description of metrics specification.
 *
 * @member {string} [name] The name of the metric.
 * @member {string} [displayName] The display name of the metric.
 * @member {string} [displayDescription] The description of the metric.
 * @member {string} [unit] Units the metric to be displayed in.
 * @member {string} [aggregationType] The aggregation type.
 * @member {array} [availabilities] List of availability.
 * @member {boolean} [enableRegionalMdmAccount] Whether regional MDM account
 * enabled.
 * @member {boolean} [fillGapWithZero] Whether gaps would be filled with zeros.
 * @member {string} [metricFilterPattern] Pattern for the filter of the metric.
 * @member {array} [dimensions] List of dimensions.
 * @member {boolean} [isInternal] Whether the metric is internal.
 * @member {string} [sourceMdmAccount] The source MDM account.
 * @member {string} [sourceMdmNamespace] The source MDM namespace.
 * @member {string} [resourceIdDimensionNameOverride] The resource Id dimension
 * name override.
 */
export interface MetricSpecification {
  name?: string;
  displayName?: string;
  displayDescription?: string;
  unit?: string;
  aggregationType?: string;
  availabilities?: Availability[];
  enableRegionalMdmAccount?: boolean;
  fillGapWithZero?: boolean;
  metricFilterPattern?: string;
  dimensions?: Dimension[];
  isInternal?: boolean;
  sourceMdmAccount?: string;
  sourceMdmNamespace?: string;
  resourceIdDimensionNameOverride?: string;
}

/**
 * @class
 * Initializes a new instance of the LogSpecification class.
 * @constructor
 * Description of logging specification.
 *
 * @member {string} [name] The name of the specification.
 * @member {string} [displayName] The display name of the specification.
 * @member {string} [blobDuration] Duration of the blob.
 */
export interface LogSpecification {
  name?: string;
  displayName?: string;
  blobDuration?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationPropertiesFormatServiceSpecification class.
 * @constructor
 * Specification of the service.
 *
 * @member {array} [metricSpecifications] Operation service specification.
 * @member {array} [logSpecifications] Operation log specification.
 */
export interface OperationPropertiesFormatServiceSpecification {
  metricSpecifications?: MetricSpecification[];
  logSpecifications?: LogSpecification[];
}

/**
 * @class
 * Initializes a new instance of the Operation class.
 * @constructor
 * Network REST API operation definition.
 *
 * @member {string} [name] Operation name: {provider}/{resource}/{operation}
 * @member {object} [display] Display metadata associated with the operation.
 * @member {string} [display.provider] Service provider: Microsoft Network.
 * @member {string} [display.resource] Resource on which the operation is
 * performed.
 * @member {string} [display.operation] Type of the operation: get, read,
 * delete, etc.
 * @member {string} [display.description] Description of the operation.
 * @member {string} [origin] Origin of the operation.
 * @member {object} [serviceSpecification] Specification of the service.
 * @member {array} [serviceSpecification.metricSpecifications] Operation
 * service specification.
 * @member {array} [serviceSpecification.logSpecifications] Operation log
 * specification.
 */
export interface Operation {
  name?: string;
  display?: OperationDisplay;
  origin?: string;
  serviceSpecification?: OperationPropertiesFormatServiceSpecification;
}

/**
 * @class
 * Initializes a new instance of the PublicIPPrefixSku class.
 * @constructor
 * SKU of a public IP prefix
 *
 * @member {string} [name] Name of a public IP prefix SKU. Possible values
 * include: 'Standard'
 */
export interface PublicIPPrefixSku {
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the ReferencedPublicIpAddress class.
 * @constructor
 * @member {string} [id] The PublicIPAddress Reference
 */
export interface ReferencedPublicIpAddress {
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the PublicIPPrefix class.
 * @constructor
 * Public IP prefix resource.
 *
 * @member {object} [sku] The public IP prefix SKU.
 * @member {string} [sku.name] Name of a public IP prefix SKU. Possible values
 * include: 'Standard'
 * @member {string} [publicIPAddressVersion] The public IP address version.
 * Possible values are: 'IPv4' and 'IPv6'. Possible values include: 'IPv4',
 * 'IPv6'
 * @member {array} [ipTags] The list of tags associated with the public IP
 * prefix.
 * @member {number} [prefixLength] The Length of the Public IP Prefix.
 * @member {string} [ipPrefix] The allocated Prefix
 * @member {array} [publicIPAddresses] The list of all referenced
 * PublicIPAddresses
 * @member {string} [resourceGuid] The resource GUID property of the public IP
 * prefix resource.
 * @member {string} [provisioningState] The provisioning state of the Public IP
 * prefix resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {array} [zones] A list of availability zones denoting the IP
 * allocated for the resource needs to come from.
 */
export interface PublicIPPrefix extends Resource {
  sku?: PublicIPPrefixSku;
  publicIPAddressVersion?: string;
  ipTags?: IpTag[];
  prefixLength?: number;
  ipPrefix?: string;
  publicIPAddresses?: ReferencedPublicIpAddress[];
  resourceGuid?: string;
  provisioningState?: string;
  etag?: string;
  zones?: string[];
}

/**
 * @class
 * Initializes a new instance of the PatchRouteFilterRule class.
 * @constructor
 * Route Filter Rule Resource
 *
 * @member {string} access The access type of the rule. Valid values are:
 * 'Allow', 'Deny'. Possible values include: 'Allow', 'Deny'
 * @member {array} communities The collection for bgp community values to
 * filter on. e.g. ['12076:5010','12076:5020']
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface PatchRouteFilterRule extends SubResource {
  access: string;
  communities: string[];
  readonly provisioningState?: string;
  readonly name?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the PatchRouteFilter class.
 * @constructor
 * Route Filter Resource.
 *
 * @member {array} [rules] Collection of RouteFilterRules contained within a
 * route filter.
 * @member {array} [peerings] A collection of references to express route
 * circuit peerings.
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values are: 'Updating', 'Deleting', 'Succeeded' and 'Failed'.
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 * @member {string} [type] Resource type.
 * @member {object} [tags] Resource tags.
 */
export interface PatchRouteFilter extends SubResource {
  rules?: RouteFilterRule[];
  peerings?: ExpressRouteCircuitPeering[];
  readonly provisioningState?: string;
  readonly name?: string;
  readonly etag?: string;
  readonly type?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the BGPCommunity class.
 * @constructor
 * Contains bgp community information offered in Service Community resources.
 *
 * @member {string} [serviceSupportedRegion] The region which the service
 * support. e.g. For O365, region is Global.
 * @member {string} [communityName] The name of the bgp community. e.g. Skype.
 * @member {string} [communityValue] The value of the bgp community. For more
 * information:
 * https://docs.microsoft.com/en-us/azure/expressroute/expressroute-routing.
 * @member {array} [communityPrefixes] The prefixes that the bgp community
 * contains.
 * @member {boolean} [isAuthorizedToUse] Customer is authorized to use bgp
 * community or not.
 * @member {string} [serviceGroup] The service group of the bgp community
 * contains.
 */
export interface BGPCommunity {
  serviceSupportedRegion?: string;
  communityName?: string;
  communityValue?: string;
  communityPrefixes?: string[];
  isAuthorizedToUse?: boolean;
  serviceGroup?: string;
}

/**
 * @class
 * Initializes a new instance of the BgpServiceCommunity class.
 * @constructor
 * Service Community Properties.
 *
 * @member {string} [serviceName] The name of the bgp community. e.g. Skype.
 * @member {array} [bgpCommunities] Get a list of bgp communities.
 */
export interface BgpServiceCommunity extends Resource {
  serviceName?: string;
  bgpCommunities?: BGPCommunity[];
}

/**
 * @class
 * Initializes a new instance of the UsageName class.
 * @constructor
 * The usage names.
 *
 * @member {string} [value] A string describing the resource name.
 * @member {string} [localizedValue] A localized string describing the resource
 * name.
 */
export interface UsageName {
  value?: string;
  localizedValue?: string;
}

/**
 * @class
 * Initializes a new instance of the Usage class.
 * @constructor
 * Describes network resource usage.
 *
 * @member {string} [id] Resource identifier.
 * @member {number} currentValue The current value of the usage.
 * @member {number} limit The limit of usage.
 * @member {object} name The name of the type of usage.
 * @member {string} [name.value] A string describing the resource name.
 * @member {string} [name.localizedValue] A localized string describing the
 * resource name.
 */
export interface Usage {
  readonly id?: string;
  currentValue: number;
  limit: number;
  name: UsageName;
}

/**
 * @class
 * Initializes a new instance of the AddressSpace class.
 * @constructor
 * AddressSpace contains an array of IP address ranges that can be used by
 * subnets of the virtual network.
 *
 * @member {array} [addressPrefixes] A list of address blocks reserved for this
 * virtual network in CIDR notation.
 */
export interface AddressSpace {
  addressPrefixes?: string[];
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkPeering class.
 * @constructor
 * Peerings in a virtual network resource.
 *
 * @member {boolean} [allowVirtualNetworkAccess] Whether the VMs in the linked
 * virtual network space would be able to access all the VMs in local Virtual
 * network space.
 * @member {boolean} [allowForwardedTraffic] Whether the forwarded traffic from
 * the VMs in the remote virtual network will be allowed/disallowed.
 * @member {boolean} [allowGatewayTransit] If gateway links can be used in
 * remote virtual networking to link to this virtual network.
 * @member {boolean} [useRemoteGateways] If remote gateways can be used on this
 * virtual network. If the flag is set to true, and allowGatewayTransit on
 * remote peering is also true, virtual network will use gateways of remote
 * virtual network for transit. Only one peering can have this flag set to
 * true. This flag cannot be set if virtual network already has a gateway.
 * @member {object} [remoteVirtualNetwork] The reference of the remote virtual
 * network. The remote virtual network can be in the same or different region
 * (preview). See here to register for the preview and learn more
 * (https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).
 * @member {string} [remoteVirtualNetwork.id] Resource ID.
 * @member {object} [remoteAddressSpace] The reference of the remote virtual
 * network address space.
 * @member {array} [remoteAddressSpace.addressPrefixes] A list of address
 * blocks reserved for this virtual network in CIDR notation.
 * @member {string} [peeringState] The status of the virtual network peering.
 * Possible values are 'Initiated', 'Connected', and 'Disconnected'. Possible
 * values include: 'Initiated', 'Connected', 'Disconnected'
 * @member {string} [provisioningState] The provisioning state of the resource.
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface VirtualNetworkPeering extends SubResource {
  allowVirtualNetworkAccess?: boolean;
  allowForwardedTraffic?: boolean;
  allowGatewayTransit?: boolean;
  useRemoteGateways?: boolean;
  remoteVirtualNetwork?: SubResource;
  remoteAddressSpace?: AddressSpace;
  peeringState?: string;
  provisioningState?: string;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the DhcpOptions class.
 * @constructor
 * DhcpOptions contains an array of DNS servers available to VMs deployed in
 * the virtual network. Standard DHCP option for a subnet overrides VNET DHCP
 * options.
 *
 * @member {array} [dnsServers] The list of DNS servers IP addresses.
 */
export interface DhcpOptions {
  dnsServers?: string[];
}

/**
 * @class
 * Initializes a new instance of the VirtualNetwork class.
 * @constructor
 * Virtual Network resource.
 *
 * @member {object} [addressSpace] The AddressSpace that contains an array of
 * IP address ranges that can be used by subnets.
 * @member {array} [addressSpace.addressPrefixes] A list of address blocks
 * reserved for this virtual network in CIDR notation.
 * @member {object} [dhcpOptions] The dhcpOptions that contains an array of DNS
 * servers available to VMs deployed in the virtual network.
 * @member {array} [dhcpOptions.dnsServers] The list of DNS servers IP
 * addresses.
 * @member {array} [subnets] A list of subnets in a Virtual Network.
 * @member {array} [virtualNetworkPeerings] A list of peerings in a Virtual
 * Network.
 * @member {string} [resourceGuid] The resourceGuid property of the Virtual
 * Network resource.
 * @member {string} [provisioningState] The provisioning state of the PublicIP
 * resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {boolean} [enableDdosProtection] Indicates if DDoS protection is
 * enabled for all the protected resources in the virtual network. It requires
 * a DDoS protection plan associated with the resource. Default value: false .
 * @member {boolean} [enableVmProtection] Indicates if VM protection is enabled
 * for all the subnets in the virtual network. Default value: false .
 * @member {object} [ddosProtectionPlan] The DDoS protection plan associated
 * with the virtual network.
 * @member {string} [ddosProtectionPlan.id] Resource ID.
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface VirtualNetwork extends Resource {
  addressSpace?: AddressSpace;
  dhcpOptions?: DhcpOptions;
  subnets?: Subnet[];
  virtualNetworkPeerings?: VirtualNetworkPeering[];
  resourceGuid?: string;
  provisioningState?: string;
  enableDdosProtection?: boolean;
  enableVmProtection?: boolean;
  ddosProtectionPlan?: SubResource;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the IPAddressAvailabilityResult class.
 * @constructor
 * Response for CheckIPAddressAvailability API service call
 *
 * @member {boolean} [available] Private IP address availability.
 * @member {array} [availableIPAddresses] Contains other available private IP
 * addresses if the asked for address is taken.
 */
export interface IPAddressAvailabilityResult {
  available?: boolean;
  availableIPAddresses?: string[];
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkUsageName class.
 * @constructor
 * Usage strings container.
 *
 * @member {string} [localizedValue] Localized subnet size and usage string.
 * @member {string} [value] Subnet size and usage string.
 */
export interface VirtualNetworkUsageName {
  readonly localizedValue?: string;
  readonly value?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkUsage class.
 * @constructor
 * Usage details for subnet.
 *
 * @member {number} [currentValue] Indicates number of IPs used from the
 * Subnet.
 * @member {string} [id] Subnet identifier.
 * @member {number} [limit] Indicates the size of the subnet.
 * @member {object} [name] The name containing common and localized value for
 * usage.
 * @member {string} [name.localizedValue] Localized subnet size and usage
 * string.
 * @member {string} [name.value] Subnet size and usage string.
 * @member {string} [unit] Usage units. Returns 'Count'
 */
export interface VirtualNetworkUsage {
  readonly currentValue?: number;
  readonly id?: string;
  readonly limit?: number;
  readonly name?: VirtualNetworkUsageName;
  readonly unit?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkGatewayIPConfiguration class.
 * @constructor
 * IP configuration for virtual network gateway
 *
 * @member {string} [privateIPAllocationMethod] The private IP allocation
 * method. Possible values are: 'Static' and 'Dynamic'. Possible values
 * include: 'Static', 'Dynamic'
 * @member {object} [subnet] The reference of the subnet resource.
 * @member {string} [subnet.id] Resource ID.
 * @member {object} [publicIPAddress] The reference of the public IP resource.
 * @member {string} [publicIPAddress.id] Resource ID.
 * @member {string} [provisioningState] The provisioning state of the public IP
 * resource. Possible values are: 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface VirtualNetworkGatewayIPConfiguration extends SubResource {
  privateIPAllocationMethod?: string;
  subnet?: SubResource;
  publicIPAddress?: SubResource;
  readonly provisioningState?: string;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkGatewaySku class.
 * @constructor
 * VirtualNetworkGatewaySku details
 *
 * @member {string} [name] Gateway SKU name. Possible values include: 'Basic',
 * 'HighPerformance', 'Standard', 'UltraPerformance', 'VpnGw1', 'VpnGw2',
 * 'VpnGw3', 'VpnGw1AZ', 'VpnGw2AZ', 'VpnGw3AZ', 'ErGw1AZ', 'ErGw2AZ',
 * 'ErGw3AZ'
 * @member {string} [tier] Gateway SKU tier. Possible values include: 'Basic',
 * 'HighPerformance', 'Standard', 'UltraPerformance', 'VpnGw1', 'VpnGw2',
 * 'VpnGw3', 'VpnGw1AZ', 'VpnGw2AZ', 'VpnGw3AZ', 'ErGw1AZ', 'ErGw2AZ',
 * 'ErGw3AZ'
 * @member {number} [capacity] The capacity.
 */
export interface VirtualNetworkGatewaySku {
  name?: string;
  tier?: string;
  capacity?: number;
}

/**
 * @class
 * Initializes a new instance of the VpnClientRootCertificate class.
 * @constructor
 * VPN client root certificate of virtual network gateway
 *
 * @member {string} publicCertData The certificate public data.
 * @member {string} [provisioningState] The provisioning state of the VPN
 * client root certificate resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface VpnClientRootCertificate extends SubResource {
  publicCertData: string;
  readonly provisioningState?: string;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the VpnClientRevokedCertificate class.
 * @constructor
 * VPN client revoked certificate of virtual network gateway.
 *
 * @member {string} [thumbprint] The revoked VPN client certificate thumbprint.
 * @member {string} [provisioningState] The provisioning state of the VPN
 * client revoked certificate resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string} [name] The name of the resource that is unique within a
 * resource group. This name can be used to access the resource.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface VpnClientRevokedCertificate extends SubResource {
  thumbprint?: string;
  readonly provisioningState?: string;
  name?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the IpsecPolicy class.
 * @constructor
 * An IPSec Policy configuration for a virtual network gateway connection
 *
 * @member {number} saLifeTimeSeconds The IPSec Security Association (also
 * called Quick Mode or Phase 2 SA) lifetime in seconds for a site to site VPN
 * tunnel.
 * @member {number} saDataSizeKilobytes The IPSec Security Association (also
 * called Quick Mode or Phase 2 SA) payload size in KB for a site to site VPN
 * tunnel.
 * @member {string} ipsecEncryption The IPSec encryption algorithm (IKE phase
 * 1). Possible values include: 'None', 'DES', 'DES3', 'AES128', 'AES192',
 * 'AES256', 'GCMAES128', 'GCMAES192', 'GCMAES256'
 * @member {string} ipsecIntegrity The IPSec integrity algorithm (IKE phase 1).
 * Possible values include: 'MD5', 'SHA1', 'SHA256', 'GCMAES128', 'GCMAES192',
 * 'GCMAES256'
 * @member {string} ikeEncryption The IKE encryption algorithm (IKE phase 2).
 * Possible values include: 'DES', 'DES3', 'AES128', 'AES192', 'AES256',
 * 'GCMAES256', 'GCMAES128'
 * @member {string} ikeIntegrity The IKE integrity algorithm (IKE phase 2).
 * Possible values include: 'MD5', 'SHA1', 'SHA256', 'SHA384', 'GCMAES256',
 * 'GCMAES128'
 * @member {string} dhGroup The DH Groups used in IKE Phase 1 for initial SA.
 * Possible values include: 'None', 'DHGroup1', 'DHGroup2', 'DHGroup14',
 * 'DHGroup2048', 'ECP256', 'ECP384', 'DHGroup24'
 * @member {string} pfsGroup The Pfs Groups used in IKE Phase 2 for new child
 * SA. Possible values include: 'None', 'PFS1', 'PFS2', 'PFS2048', 'ECP256',
 * 'ECP384', 'PFS24', 'PFS14', 'PFSMM'
 */
export interface IpsecPolicy {
  saLifeTimeSeconds: number;
  saDataSizeKilobytes: number;
  ipsecEncryption: string;
  ipsecIntegrity: string;
  ikeEncryption: string;
  ikeIntegrity: string;
  dhGroup: string;
  pfsGroup: string;
}

/**
 * @class
 * Initializes a new instance of the VpnClientConfiguration class.
 * @constructor
 * VpnClientConfiguration for P2S client.
 *
 * @member {object} [vpnClientAddressPool] The reference of the address space
 * resource which represents Address space for P2S VpnClient.
 * @member {array} [vpnClientAddressPool.addressPrefixes] A list of address
 * blocks reserved for this virtual network in CIDR notation.
 * @member {array} [vpnClientRootCertificates] VpnClientRootCertificate for
 * virtual network gateway.
 * @member {array} [vpnClientRevokedCertificates] VpnClientRevokedCertificate
 * for Virtual network gateway.
 * @member {array} [vpnClientProtocols] VpnClientProtocols for Virtual network
 * gateway.
 * @member {array} [vpnClientIpsecPolicies] VpnClientIpsecPolicies for virtual
 * network gateway P2S client.
 * @member {string} [radiusServerAddress] The radius server address property of
 * the VirtualNetworkGateway resource for vpn client connection.
 * @member {string} [radiusServerSecret] The radius secret property of the
 * VirtualNetworkGateway resource for vpn client connection.
 */
export interface VpnClientConfiguration {
  vpnClientAddressPool?: AddressSpace;
  vpnClientRootCertificates?: VpnClientRootCertificate[];
  vpnClientRevokedCertificates?: VpnClientRevokedCertificate[];
  vpnClientProtocols?: string[];
  vpnClientIpsecPolicies?: IpsecPolicy[];
  radiusServerAddress?: string;
  radiusServerSecret?: string;
}

/**
 * @class
 * Initializes a new instance of the BgpSettings class.
 * @constructor
 * BGP settings details
 *
 * @member {number} [asn] The BGP speaker's ASN.
 * @member {string} [bgpPeeringAddress] The BGP peering address and BGP
 * identifier of this BGP speaker.
 * @member {number} [peerWeight] The weight added to routes learned from this
 * BGP speaker.
 */
export interface BgpSettings {
  asn?: number;
  bgpPeeringAddress?: string;
  peerWeight?: number;
}

/**
 * @class
 * Initializes a new instance of the BgpPeerStatus class.
 * @constructor
 * BGP peer status details
 *
 * @member {string} [localAddress] The virtual network gateway's local address
 * @member {string} [neighbor] The remote BGP peer
 * @member {number} [asn] The autonomous system number of the remote BGP peer
 * @member {string} [state] The BGP peer state. Possible values include:
 * 'Unknown', 'Stopped', 'Idle', 'Connecting', 'Connected'
 * @member {string} [connectedDuration] For how long the peering has been up
 * @member {number} [routesReceived] The number of routes learned from this
 * peer
 * @member {number} [messagesSent] The number of BGP messages sent
 * @member {number} [messagesReceived] The number of BGP messages received
 */
export interface BgpPeerStatus {
  readonly localAddress?: string;
  readonly neighbor?: string;
  readonly asn?: number;
  readonly state?: string;
  readonly connectedDuration?: string;
  readonly routesReceived?: number;
  readonly messagesSent?: number;
  readonly messagesReceived?: number;
}

/**
 * @class
 * Initializes a new instance of the GatewayRoute class.
 * @constructor
 * Gateway routing details
 *
 * @member {string} [localAddress] The gateway's local address
 * @member {string} [network] The route's network prefix
 * @member {string} [nextHop] The route's next hop
 * @member {string} [sourcePeer] The peer this route was learned from
 * @member {string} [origin] The source this route was learned from
 * @member {string} [asPath] The route's AS path sequence
 * @member {number} [weight] The route's weight
 */
export interface GatewayRoute {
  readonly localAddress?: string;
  readonly network?: string;
  readonly nextHop?: string;
  readonly sourcePeer?: string;
  readonly origin?: string;
  readonly asPath?: string;
  readonly weight?: number;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkGateway class.
 * @constructor
 * A common class for general resource information
 *
 * @member {array} [ipConfigurations] IP configurations for virtual network
 * gateway.
 * @member {string} [gatewayType] The type of this virtual network gateway.
 * Possible values are: 'Vpn' and 'ExpressRoute'. Possible values include:
 * 'Vpn', 'ExpressRoute'
 * @member {string} [vpnType] The type of this virtual network gateway.
 * Possible values are: 'PolicyBased' and 'RouteBased'. Possible values
 * include: 'PolicyBased', 'RouteBased'
 * @member {boolean} [enableBgp] Whether BGP is enabled for this virtual
 * network gateway or not.
 * @member {boolean} [activeActive] ActiveActive flag
 * @member {object} [gatewayDefaultSite] The reference of the
 * LocalNetworkGateway resource which represents local network site having
 * default routes. Assign Null value in case of removing existing default site
 * setting.
 * @member {string} [gatewayDefaultSite.id] Resource ID.
 * @member {object} [sku] The reference of the VirtualNetworkGatewaySku
 * resource which represents the SKU selected for Virtual network gateway.
 * @member {string} [sku.name] Gateway SKU name. Possible values include:
 * 'Basic', 'HighPerformance', 'Standard', 'UltraPerformance', 'VpnGw1',
 * 'VpnGw2', 'VpnGw3', 'VpnGw1AZ', 'VpnGw2AZ', 'VpnGw3AZ', 'ErGw1AZ',
 * 'ErGw2AZ', 'ErGw3AZ'
 * @member {string} [sku.tier] Gateway SKU tier. Possible values include:
 * 'Basic', 'HighPerformance', 'Standard', 'UltraPerformance', 'VpnGw1',
 * 'VpnGw2', 'VpnGw3', 'VpnGw1AZ', 'VpnGw2AZ', 'VpnGw3AZ', 'ErGw1AZ',
 * 'ErGw2AZ', 'ErGw3AZ'
 * @member {number} [sku.capacity] The capacity.
 * @member {object} [vpnClientConfiguration] The reference of the
 * VpnClientConfiguration resource which represents the P2S VpnClient
 * configurations.
 * @member {object} [vpnClientConfiguration.vpnClientAddressPool] The reference
 * of the address space resource which represents Address space for P2S
 * VpnClient.
 * @member {array}
 * [vpnClientConfiguration.vpnClientAddressPool.addressPrefixes] A list of
 * address blocks reserved for this virtual network in CIDR notation.
 * @member {array} [vpnClientConfiguration.vpnClientRootCertificates]
 * VpnClientRootCertificate for virtual network gateway.
 * @member {array} [vpnClientConfiguration.vpnClientRevokedCertificates]
 * VpnClientRevokedCertificate for Virtual network gateway.
 * @member {array} [vpnClientConfiguration.vpnClientProtocols]
 * VpnClientProtocols for Virtual network gateway.
 * @member {array} [vpnClientConfiguration.vpnClientIpsecPolicies]
 * VpnClientIpsecPolicies for virtual network gateway P2S client.
 * @member {string} [vpnClientConfiguration.radiusServerAddress] The radius
 * server address property of the VirtualNetworkGateway resource for vpn client
 * connection.
 * @member {string} [vpnClientConfiguration.radiusServerSecret] The radius
 * secret property of the VirtualNetworkGateway resource for vpn client
 * connection.
 * @member {object} [bgpSettings] Virtual network gateway's BGP speaker
 * settings.
 * @member {number} [bgpSettings.asn] The BGP speaker's ASN.
 * @member {string} [bgpSettings.bgpPeeringAddress] The BGP peering address and
 * BGP identifier of this BGP speaker.
 * @member {number} [bgpSettings.peerWeight] The weight added to routes learned
 * from this BGP speaker.
 * @member {string} [resourceGuid] The resource GUID property of the
 * VirtualNetworkGateway resource.
 * @member {string} [provisioningState] The provisioning state of the
 * VirtualNetworkGateway resource. Possible values are: 'Updating', 'Deleting',
 * and 'Failed'.
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface VirtualNetworkGateway extends Resource {
  ipConfigurations?: VirtualNetworkGatewayIPConfiguration[];
  gatewayType?: string;
  vpnType?: string;
  enableBgp?: boolean;
  activeActive?: boolean;
  gatewayDefaultSite?: SubResource;
  sku?: VirtualNetworkGatewaySku;
  vpnClientConfiguration?: VpnClientConfiguration;
  bgpSettings?: BgpSettings;
  resourceGuid?: string;
  readonly provisioningState?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the VpnClientParameters class.
 * @constructor
 * Vpn Client Parameters for package generation
 *
 * @member {string} [processorArchitecture] VPN client Processor Architecture.
 * Possible values are: 'AMD64' and 'X86'. Possible values include: 'Amd64',
 * 'X86'
 * @member {string} [authenticationMethod] VPN client Authentication Method.
 * Possible values are: 'EAPTLS' and 'EAPMSCHAPv2'. Possible values include:
 * 'EAPTLS', 'EAPMSCHAPv2'
 * @member {string} [radiusServerAuthCertificate] The public certificate data
 * for the radius server authentication certificate as a Base-64 encoded
 * string. Required only if external radius authentication has been configured
 * with EAPTLS authentication.
 * @member {array} [clientRootCertificates] A list of client root certificates
 * public certificate data encoded as Base-64 strings. Optional parameter for
 * external radius based authentication with EAPTLS.
 */
export interface VpnClientParameters {
  processorArchitecture?: string;
  authenticationMethod?: string;
  radiusServerAuthCertificate?: string;
  clientRootCertificates?: string[];
}

/**
 * @class
 * Initializes a new instance of the BgpPeerStatusListResult class.
 * @constructor
 * Response for list BGP peer status API service call
 *
 * @member {array} [value] List of BGP peers
 */
export interface BgpPeerStatusListResult {
  value?: BgpPeerStatus[];
}

/**
 * @class
 * Initializes a new instance of the GatewayRouteListResult class.
 * @constructor
 * List of virtual network gateway routes
 *
 * @member {array} [value] List of gateway routes
 */
export interface GatewayRouteListResult {
  value?: GatewayRoute[];
}

/**
 * @class
 * Initializes a new instance of the TunnelConnectionHealth class.
 * @constructor
 * VirtualNetworkGatewayConnection properties
 *
 * @member {string} [tunnel] Tunnel name.
 * @member {string} [connectionStatus] Virtual network Gateway connection
 * status. Possible values include: 'Unknown', 'Connecting', 'Connected',
 * 'NotConnected'
 * @member {number} [ingressBytesTransferred] The Ingress Bytes Transferred in
 * this connection
 * @member {number} [egressBytesTransferred] The Egress Bytes Transferred in
 * this connection
 * @member {string} [lastConnectionEstablishedUtcTime] The time at which
 * connection was established in Utc format.
 */
export interface TunnelConnectionHealth {
  readonly tunnel?: string;
  readonly connectionStatus?: string;
  readonly ingressBytesTransferred?: number;
  readonly egressBytesTransferred?: number;
  readonly lastConnectionEstablishedUtcTime?: string;
}

/**
 * @class
 * Initializes a new instance of the LocalNetworkGateway class.
 * @constructor
 * A common class for general resource information
 *
 * @member {object} [localNetworkAddressSpace] Local network site address
 * space.
 * @member {array} [localNetworkAddressSpace.addressPrefixes] A list of address
 * blocks reserved for this virtual network in CIDR notation.
 * @member {string} [gatewayIpAddress] IP address of local network gateway.
 * @member {object} [bgpSettings] Local network gateway's BGP speaker settings.
 * @member {number} [bgpSettings.asn] The BGP speaker's ASN.
 * @member {string} [bgpSettings.bgpPeeringAddress] The BGP peering address and
 * BGP identifier of this BGP speaker.
 * @member {number} [bgpSettings.peerWeight] The weight added to routes learned
 * from this BGP speaker.
 * @member {string} [resourceGuid] The resource GUID property of the
 * LocalNetworkGateway resource.
 * @member {string} [provisioningState] The provisioning state of the
 * LocalNetworkGateway resource. Possible values are: 'Updating', 'Deleting',
 * and 'Failed'.
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated.
 */
export interface LocalNetworkGateway extends Resource {
  localNetworkAddressSpace?: AddressSpace;
  gatewayIpAddress?: string;
  bgpSettings?: BgpSettings;
  resourceGuid?: string;
  readonly provisioningState?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkGatewayConnection class.
 * @constructor
 * A common class for general resource information
 *
 * @member {string} [authorizationKey] The authorizationKey.
 * @member {object} virtualNetworkGateway1 The reference to virtual network
 * gateway resource.
 * @member {array} [virtualNetworkGateway1.ipConfigurations] IP configurations
 * for virtual network gateway.
 * @member {string} [virtualNetworkGateway1.gatewayType] The type of this
 * virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
 * Possible values include: 'Vpn', 'ExpressRoute'
 * @member {string} [virtualNetworkGateway1.vpnType] The type of this virtual
 * network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
 * Possible values include: 'PolicyBased', 'RouteBased'
 * @member {boolean} [virtualNetworkGateway1.enableBgp] Whether BGP is enabled
 * for this virtual network gateway or not.
 * @member {boolean} [virtualNetworkGateway1.activeActive] ActiveActive flag
 * @member {object} [virtualNetworkGateway1.gatewayDefaultSite] The reference
 * of the LocalNetworkGateway resource which represents local network site
 * having default routes. Assign Null value in case of removing existing
 * default site setting.
 * @member {string} [virtualNetworkGateway1.gatewayDefaultSite.id] Resource ID.
 * @member {object} [virtualNetworkGateway1.sku] The reference of the
 * VirtualNetworkGatewaySku resource which represents the SKU selected for
 * Virtual network gateway.
 * @member {string} [virtualNetworkGateway1.sku.name] Gateway SKU name.
 * Possible values include: 'Basic', 'HighPerformance', 'Standard',
 * 'UltraPerformance', 'VpnGw1', 'VpnGw2', 'VpnGw3', 'VpnGw1AZ', 'VpnGw2AZ',
 * 'VpnGw3AZ', 'ErGw1AZ', 'ErGw2AZ', 'ErGw3AZ'
 * @member {string} [virtualNetworkGateway1.sku.tier] Gateway SKU tier.
 * Possible values include: 'Basic', 'HighPerformance', 'Standard',
 * 'UltraPerformance', 'VpnGw1', 'VpnGw2', 'VpnGw3', 'VpnGw1AZ', 'VpnGw2AZ',
 * 'VpnGw3AZ', 'ErGw1AZ', 'ErGw2AZ', 'ErGw3AZ'
 * @member {number} [virtualNetworkGateway1.sku.capacity] The capacity.
 * @member {object} [virtualNetworkGateway1.vpnClientConfiguration] The
 * reference of the VpnClientConfiguration resource which represents the P2S
 * VpnClient configurations.
 * @member {object}
 * [virtualNetworkGateway1.vpnClientConfiguration.vpnClientAddressPool] The
 * reference of the address space resource which represents Address space for
 * P2S VpnClient.
 * @member {array}
 * [virtualNetworkGateway1.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes]
 * A list of address blocks reserved for this virtual network in CIDR notation.
 * @member {array}
 * [virtualNetworkGateway1.vpnClientConfiguration.vpnClientRootCertificates]
 * VpnClientRootCertificate for virtual network gateway.
 * @member {array}
 * [virtualNetworkGateway1.vpnClientConfiguration.vpnClientRevokedCertificates]
 * VpnClientRevokedCertificate for Virtual network gateway.
 * @member {array}
 * [virtualNetworkGateway1.vpnClientConfiguration.vpnClientProtocols]
 * VpnClientProtocols for Virtual network gateway.
 * @member {array}
 * [virtualNetworkGateway1.vpnClientConfiguration.vpnClientIpsecPolicies]
 * VpnClientIpsecPolicies for virtual network gateway P2S client.
 * @member {string}
 * [virtualNetworkGateway1.vpnClientConfiguration.radiusServerAddress] The
 * radius server address property of the VirtualNetworkGateway resource for vpn
 * client connection.
 * @member {string}
 * [virtualNetworkGateway1.vpnClientConfiguration.radiusServerSecret] The
 * radius secret property of the VirtualNetworkGateway resource for vpn client
 * connection.
 * @member {object} [virtualNetworkGateway1.bgpSettings] Virtual network
 * gateway's BGP speaker settings.
 * @member {number} [virtualNetworkGateway1.bgpSettings.asn] The BGP speaker's
 * ASN.
 * @member {string} [virtualNetworkGateway1.bgpSettings.bgpPeeringAddress] The
 * BGP peering address and BGP identifier of this BGP speaker.
 * @member {number} [virtualNetworkGateway1.bgpSettings.peerWeight] The weight
 * added to routes learned from this BGP speaker.
 * @member {string} [virtualNetworkGateway1.resourceGuid] The resource GUID
 * property of the VirtualNetworkGateway resource.
 * @member {string} [virtualNetworkGateway1.provisioningState] The provisioning
 * state of the VirtualNetworkGateway resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [virtualNetworkGateway1.etag] Gets a unique read-only
 * string that changes whenever the resource is updated.
 * @member {object} [virtualNetworkGateway2] The reference to virtual network
 * gateway resource.
 * @member {array} [virtualNetworkGateway2.ipConfigurations] IP configurations
 * for virtual network gateway.
 * @member {string} [virtualNetworkGateway2.gatewayType] The type of this
 * virtual network gateway. Possible values are: 'Vpn' and 'ExpressRoute'.
 * Possible values include: 'Vpn', 'ExpressRoute'
 * @member {string} [virtualNetworkGateway2.vpnType] The type of this virtual
 * network gateway. Possible values are: 'PolicyBased' and 'RouteBased'.
 * Possible values include: 'PolicyBased', 'RouteBased'
 * @member {boolean} [virtualNetworkGateway2.enableBgp] Whether BGP is enabled
 * for this virtual network gateway or not.
 * @member {boolean} [virtualNetworkGateway2.activeActive] ActiveActive flag
 * @member {object} [virtualNetworkGateway2.gatewayDefaultSite] The reference
 * of the LocalNetworkGateway resource which represents local network site
 * having default routes. Assign Null value in case of removing existing
 * default site setting.
 * @member {string} [virtualNetworkGateway2.gatewayDefaultSite.id] Resource ID.
 * @member {object} [virtualNetworkGateway2.sku] The reference of the
 * VirtualNetworkGatewaySku resource which represents the SKU selected for
 * Virtual network gateway.
 * @member {string} [virtualNetworkGateway2.sku.name] Gateway SKU name.
 * Possible values include: 'Basic', 'HighPerformance', 'Standard',
 * 'UltraPerformance', 'VpnGw1', 'VpnGw2', 'VpnGw3', 'VpnGw1AZ', 'VpnGw2AZ',
 * 'VpnGw3AZ', 'ErGw1AZ', 'ErGw2AZ', 'ErGw3AZ'
 * @member {string} [virtualNetworkGateway2.sku.tier] Gateway SKU tier.
 * Possible values include: 'Basic', 'HighPerformance', 'Standard',
 * 'UltraPerformance', 'VpnGw1', 'VpnGw2', 'VpnGw3', 'VpnGw1AZ', 'VpnGw2AZ',
 * 'VpnGw3AZ', 'ErGw1AZ', 'ErGw2AZ', 'ErGw3AZ'
 * @member {number} [virtualNetworkGateway2.sku.capacity] The capacity.
 * @member {object} [virtualNetworkGateway2.vpnClientConfiguration] The
 * reference of the VpnClientConfiguration resource which represents the P2S
 * VpnClient configurations.
 * @member {object}
 * [virtualNetworkGateway2.vpnClientConfiguration.vpnClientAddressPool] The
 * reference of the address space resource which represents Address space for
 * P2S VpnClient.
 * @member {array}
 * [virtualNetworkGateway2.vpnClientConfiguration.vpnClientAddressPool.addressPrefixes]
 * A list of address blocks reserved for this virtual network in CIDR notation.
 * @member {array}
 * [virtualNetworkGateway2.vpnClientConfiguration.vpnClientRootCertificates]
 * VpnClientRootCertificate for virtual network gateway.
 * @member {array}
 * [virtualNetworkGateway2.vpnClientConfiguration.vpnClientRevokedCertificates]
 * VpnClientRevokedCertificate for Virtual network gateway.
 * @member {array}
 * [virtualNetworkGateway2.vpnClientConfiguration.vpnClientProtocols]
 * VpnClientProtocols for Virtual network gateway.
 * @member {array}
 * [virtualNetworkGateway2.vpnClientConfiguration.vpnClientIpsecPolicies]
 * VpnClientIpsecPolicies for virtual network gateway P2S client.
 * @member {string}
 * [virtualNetworkGateway2.vpnClientConfiguration.radiusServerAddress] The
 * radius server address property of the VirtualNetworkGateway resource for vpn
 * client connection.
 * @member {string}
 * [virtualNetworkGateway2.vpnClientConfiguration.radiusServerSecret] The
 * radius secret property of the VirtualNetworkGateway resource for vpn client
 * connection.
 * @member {object} [virtualNetworkGateway2.bgpSettings] Virtual network
 * gateway's BGP speaker settings.
 * @member {number} [virtualNetworkGateway2.bgpSettings.asn] The BGP speaker's
 * ASN.
 * @member {string} [virtualNetworkGateway2.bgpSettings.bgpPeeringAddress] The
 * BGP peering address and BGP identifier of this BGP speaker.
 * @member {number} [virtualNetworkGateway2.bgpSettings.peerWeight] The weight
 * added to routes learned from this BGP speaker.
 * @member {string} [virtualNetworkGateway2.resourceGuid] The resource GUID
 * property of the VirtualNetworkGateway resource.
 * @member {string} [virtualNetworkGateway2.provisioningState] The provisioning
 * state of the VirtualNetworkGateway resource. Possible values are:
 * 'Updating', 'Deleting', and 'Failed'.
 * @member {string} [virtualNetworkGateway2.etag] Gets a unique read-only
 * string that changes whenever the resource is updated.
 * @member {object} [localNetworkGateway2] The reference to local network
 * gateway resource.
 * @member {object} [localNetworkGateway2.localNetworkAddressSpace] Local
 * network site address space.
 * @member {array}
 * [localNetworkGateway2.localNetworkAddressSpace.addressPrefixes] A list of
 * address blocks reserved for this virtual network in CIDR notation.
 * @member {string} [localNetworkGateway2.gatewayIpAddress] IP address of local
 * network gateway.
 * @member {object} [localNetworkGateway2.bgpSettings] Local network gateway's
 * BGP speaker settings.
 * @member {number} [localNetworkGateway2.bgpSettings.asn] The BGP speaker's
 * ASN.
 * @member {string} [localNetworkGateway2.bgpSettings.bgpPeeringAddress] The
 * BGP peering address and BGP identifier of this BGP speaker.
 * @member {number} [localNetworkGateway2.bgpSettings.peerWeight] The weight
 * added to routes learned from this BGP speaker.
 * @member {string} [localNetworkGateway2.resourceGuid] The resource GUID
 * property of the LocalNetworkGateway resource.
 * @member {string} [localNetworkGateway2.provisioningState] The provisioning
 * state of the LocalNetworkGateway resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {string} [localNetworkGateway2.etag] A unique read-only string that
 * changes whenever the resource is updated.
 * @member {string} connectionType Gateway connection type. Possible values
 * are: 'Ipsec','Vnet2Vnet','ExpressRoute', and 'VPNClient. Possible values
 * include: 'IPsec', 'Vnet2Vnet', 'ExpressRoute', 'VPNClient'
 * @member {number} [routingWeight] The routing weight.
 * @member {string} [sharedKey] The IPSec shared key.
 * @member {string} [connectionStatus] Virtual network Gateway connection
 * status. Possible values are 'Unknown', 'Connecting', 'Connected' and
 * 'NotConnected'. Possible values include: 'Unknown', 'Connecting',
 * 'Connected', 'NotConnected'
 * @member {array} [tunnelConnectionStatus] Collection of all tunnels'
 * connection health status.
 * @member {number} [egressBytesTransferred] The egress bytes transferred in
 * this connection.
 * @member {number} [ingressBytesTransferred] The ingress bytes transferred in
 * this connection.
 * @member {object} [peer] The reference to peerings resource.
 * @member {string} [peer.id] Resource ID.
 * @member {boolean} [enableBgp] EnableBgp flag
 * @member {boolean} [usePolicyBasedTrafficSelectors] Enable policy-based
 * traffic selectors.
 * @member {array} [ipsecPolicies] The IPSec Policies to be considered by this
 * connection.
 * @member {string} [resourceGuid] The resource GUID property of the
 * VirtualNetworkGatewayConnection resource.
 * @member {string} [provisioningState] The provisioning state of the
 * VirtualNetworkGatewayConnection resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {boolean} [expressRouteGatewayBypass] Bypass ExpressRoute Gateway
 * for data forwarding
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface VirtualNetworkGatewayConnection extends Resource {
  authorizationKey?: string;
  virtualNetworkGateway1: VirtualNetworkGateway;
  virtualNetworkGateway2?: VirtualNetworkGateway;
  localNetworkGateway2?: LocalNetworkGateway;
  connectionType: string;
  routingWeight?: number;
  sharedKey?: string;
  readonly connectionStatus?: string;
  readonly tunnelConnectionStatus?: TunnelConnectionHealth[];
  readonly egressBytesTransferred?: number;
  readonly ingressBytesTransferred?: number;
  peer?: SubResource;
  enableBgp?: boolean;
  usePolicyBasedTrafficSelectors?: boolean;
  ipsecPolicies?: IpsecPolicy[];
  resourceGuid?: string;
  readonly provisioningState?: string;
  expressRouteGatewayBypass?: boolean;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the ConnectionResetSharedKey class.
 * @constructor
 * The virtual network connection reset shared key
 *
 * @member {number} keyLength The virtual network connection reset shared key
 * length, should between 1 and 128.
 */
export interface ConnectionResetSharedKey {
  keyLength: number;
}

/**
 * @class
 * Initializes a new instance of the ConnectionSharedKey class.
 * @constructor
 * Response for GetConnectionSharedKey API service call
 *
 * @member {string} value The virtual network connection shared key value.
 */
export interface ConnectionSharedKey extends SubResource {
  value: string;
}

/**
 * @class
 * Initializes a new instance of the VpnClientIPsecParameters class.
 * @constructor
 * An IPSec parameters for a virtual network gateway P2S connection.
 *
 * @member {number} saLifeTimeSeconds The IPSec Security Association (also
 * called Quick Mode or Phase 2 SA) lifetime in seconds for P2S client.
 * @member {number} saDataSizeKilobytes The IPSec Security Association (also
 * called Quick Mode or Phase 2 SA) payload size in KB for P2S client..
 * @member {string} ipsecEncryption The IPSec encryption algorithm (IKE phase
 * 1). Possible values include: 'None', 'DES', 'DES3', 'AES128', 'AES192',
 * 'AES256', 'GCMAES128', 'GCMAES192', 'GCMAES256'
 * @member {string} ipsecIntegrity The IPSec integrity algorithm (IKE phase 1).
 * Possible values include: 'MD5', 'SHA1', 'SHA256', 'GCMAES128', 'GCMAES192',
 * 'GCMAES256'
 * @member {string} ikeEncryption The IKE encryption algorithm (IKE phase 2).
 * Possible values include: 'DES', 'DES3', 'AES128', 'AES192', 'AES256',
 * 'GCMAES256', 'GCMAES128'
 * @member {string} ikeIntegrity The IKE integrity algorithm (IKE phase 2).
 * Possible values include: 'MD5', 'SHA1', 'SHA256', 'SHA384', 'GCMAES256',
 * 'GCMAES128'
 * @member {string} dhGroup The DH Groups used in IKE Phase 1 for initial SA.
 * Possible values include: 'None', 'DHGroup1', 'DHGroup2', 'DHGroup14',
 * 'DHGroup2048', 'ECP256', 'ECP384', 'DHGroup24'
 * @member {string} pfsGroup The Pfs Groups used in IKE Phase 2 for new child
 * SA. Possible values include: 'None', 'PFS1', 'PFS2', 'PFS2048', 'ECP256',
 * 'ECP384', 'PFS24', 'PFS14', 'PFSMM'
 */
export interface VpnClientIPsecParameters {
  saLifeTimeSeconds: number;
  saDataSizeKilobytes: number;
  ipsecEncryption: string;
  ipsecIntegrity: string;
  ikeEncryption: string;
  ikeIntegrity: string;
  dhGroup: string;
  pfsGroup: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkConnectionGatewayReference class.
 * @constructor
 * A reference to VirtualNetworkGateway or LocalNetworkGateway resource.
 *
 * @member {string} id The ID of VirtualNetworkGateway or LocalNetworkGateway
 * resource.
 */
export interface VirtualNetworkConnectionGatewayReference {
  id: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkGatewayConnectionListEntity class.
 * @constructor
 * A common class for general resource information
 *
 * @member {string} [authorizationKey] The authorizationKey.
 * @member {object} virtualNetworkGateway1 The reference to virtual network
 * gateway resource.
 * @member {string} [virtualNetworkGateway1.id] The ID of VirtualNetworkGateway
 * or LocalNetworkGateway resource.
 * @member {object} [virtualNetworkGateway2] The reference to virtual network
 * gateway resource.
 * @member {string} [virtualNetworkGateway2.id] The ID of VirtualNetworkGateway
 * or LocalNetworkGateway resource.
 * @member {object} [localNetworkGateway2] The reference to local network
 * gateway resource.
 * @member {string} [localNetworkGateway2.id] The ID of VirtualNetworkGateway
 * or LocalNetworkGateway resource.
 * @member {string} connectionType Gateway connection type. Possible values
 * are: 'Ipsec','Vnet2Vnet','ExpressRoute', and 'VPNClient. Possible values
 * include: 'IPsec', 'Vnet2Vnet', 'ExpressRoute', 'VPNClient'
 * @member {number} [routingWeight] The routing weight.
 * @member {string} [sharedKey] The IPSec shared key.
 * @member {string} [connectionStatus] Virtual network Gateway connection
 * status. Possible values are 'Unknown', 'Connecting', 'Connected' and
 * 'NotConnected'. Possible values include: 'Unknown', 'Connecting',
 * 'Connected', 'NotConnected'
 * @member {array} [tunnelConnectionStatus] Collection of all tunnels'
 * connection health status.
 * @member {number} [egressBytesTransferred] The egress bytes transferred in
 * this connection.
 * @member {number} [ingressBytesTransferred] The ingress bytes transferred in
 * this connection.
 * @member {object} [peer] The reference to peerings resource.
 * @member {string} [peer.id] Resource ID.
 * @member {boolean} [enableBgp] EnableBgp flag
 * @member {boolean} [usePolicyBasedTrafficSelectors] Enable policy-based
 * traffic selectors.
 * @member {array} [ipsecPolicies] The IPSec Policies to be considered by this
 * connection.
 * @member {string} [resourceGuid] The resource GUID property of the
 * VirtualNetworkGatewayConnection resource.
 * @member {string} [provisioningState] The provisioning state of the
 * VirtualNetworkGatewayConnection resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 * @member {boolean} [expressRouteGatewayBypass] Bypass ExpressRoute Gateway
 * for data forwarding
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface VirtualNetworkGatewayConnectionListEntity extends Resource {
  authorizationKey?: string;
  virtualNetworkGateway1: VirtualNetworkConnectionGatewayReference;
  virtualNetworkGateway2?: VirtualNetworkConnectionGatewayReference;
  localNetworkGateway2?: VirtualNetworkConnectionGatewayReference;
  connectionType: string;
  routingWeight?: number;
  sharedKey?: string;
  readonly connectionStatus?: string;
  readonly tunnelConnectionStatus?: TunnelConnectionHealth[];
  readonly egressBytesTransferred?: number;
  readonly ingressBytesTransferred?: number;
  peer?: SubResource;
  enableBgp?: boolean;
  usePolicyBasedTrafficSelectors?: boolean;
  ipsecPolicies?: IpsecPolicy[];
  resourceGuid?: string;
  readonly provisioningState?: string;
  expressRouteGatewayBypass?: boolean;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the VpnDeviceScriptParameters class.
 * @constructor
 * Vpn device configuration script generation parameters
 *
 * @member {string} [vendor] The vendor for the vpn device.
 * @member {string} [deviceFamily] The device family for the vpn device.
 * @member {string} [firmwareVersion] The firmware version for the vpn device.
 */
export interface VpnDeviceScriptParameters {
  vendor?: string;
  deviceFamily?: string;
  firmwareVersion?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualWAN class.
 * @constructor
 * VirtualWAN Resource.
 *
 * @member {boolean} [disableVpnEncryption] Vpn encryption to be disabled or
 * not.
 * @member {array} [virtualHubs] List of VirtualHubs in the VirtualWAN.
 * @member {array} [vpnSites]
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface VirtualWAN extends Resource {
  disableVpnEncryption?: boolean;
  readonly virtualHubs?: SubResource[];
  readonly vpnSites?: SubResource[];
  provisioningState?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the DeviceProperties class.
 * @constructor
 * List of properties of the device.
 *
 * @member {string} [deviceVendor] Name of the device Vendor.
 * @member {string} [deviceModel] Model of the device.
 * @member {number} [linkSpeedInMbps] Link speed.
 */
export interface DeviceProperties {
  deviceVendor?: string;
  deviceModel?: string;
  linkSpeedInMbps?: number;
}

/**
 * @class
 * Initializes a new instance of the VpnSite class.
 * @constructor
 * VpnSite Resource.
 *
 * @member {object} [virtualWAN] The VirtualWAN to which the vpnSite belongs
 * @member {string} [virtualWAN.id] Resource ID.
 * @member {object} [deviceProperties] The device properties
 * @member {string} [deviceProperties.deviceVendor] Name of the device Vendor.
 * @member {string} [deviceProperties.deviceModel] Model of the device.
 * @member {number} [deviceProperties.linkSpeedInMbps] Link speed.
 * @member {string} [ipAddress] The ip-address for the vpn-site.
 * @member {string} [siteKey] The key for vpn-site that can be used for
 * connections.
 * @member {object} [addressSpace] The AddressSpace that contains an array of
 * IP address ranges.
 * @member {array} [addressSpace.addressPrefixes] A list of address blocks
 * reserved for this virtual network in CIDR notation.
 * @member {object} [bgpProperties] The set of bgp properties.
 * @member {number} [bgpProperties.asn] The BGP speaker's ASN.
 * @member {string} [bgpProperties.bgpPeeringAddress] The BGP peering address
 * and BGP identifier of this BGP speaker.
 * @member {number} [bgpProperties.peerWeight] The weight added to routes
 * learned from this BGP speaker.
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface VpnSite extends Resource {
  virtualWAN?: SubResource;
  deviceProperties?: DeviceProperties;
  ipAddress?: string;
  siteKey?: string;
  addressSpace?: AddressSpace;
  bgpProperties?: BgpSettings;
  provisioningState?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the GetVpnSitesConfigurationRequest class.
 * @constructor
 * List of Vpn-Sites
 *
 * @member {array} [vpnSites] List of resource-ids of the vpn-sites for which
 * config is to be downloaded.
 * @member {string} [outputBlobSasUrl] The sas-url to download the
 * configurations for vpn-sites
 */
export interface GetVpnSitesConfigurationRequest {
  vpnSites?: SubResource[];
  outputBlobSasUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the HubVirtualNetworkConnection class.
 * @constructor
 * HubVirtualNetworkConnection Resource.
 *
 * @member {object} [remoteVirtualNetwork] Reference to the remote virtual
 * network.
 * @member {string} [remoteVirtualNetwork.id] Resource ID.
 * @member {boolean} [allowHubToRemoteVnetTransit] VirtualHub to RemoteVnet
 * transit to enabled or not.
 * @member {boolean} [allowRemoteVnetToUseHubVnetGateways] Allow RemoteVnet to
 * use Virtual Hub's gateways.
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface HubVirtualNetworkConnection extends Resource {
  remoteVirtualNetwork?: SubResource;
  allowHubToRemoteVnetTransit?: boolean;
  allowRemoteVnetToUseHubVnetGateways?: boolean;
  provisioningState?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualHub class.
 * @constructor
 * VirtualHub Resource.
 *
 * @member {object} [virtualWan] The VirtualWAN to which the VirtualHub belongs
 * @member {string} [virtualWan.id] Resource ID.
 * @member {array} [hubVirtualNetworkConnections] list of all vnet connections
 * with this VirtualHub.
 * @member {string} [addressPrefix] Address-prefix for this VirtualHub.
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface VirtualHub extends Resource {
  virtualWan?: SubResource;
  hubVirtualNetworkConnections?: HubVirtualNetworkConnection[];
  addressPrefix?: string;
  provisioningState?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the VpnConnection class.
 * @constructor
 * VpnConnection Resource.
 *
 * @member {object} [remoteVpnSite] Id of the connected vpn site.
 * @member {string} [remoteVpnSite.id] Resource ID.
 * @member {number} [routingWeight] routing weight for vpn connection.
 * @member {string} [connectionStatus] The connection status. Possible values
 * include: 'Unknown', 'Connecting', 'Connected', 'NotConnected'
 * @member {number} [ingressBytesTransferred] Ingress bytes transferred.
 * @member {number} [egressBytesTransferred] Egress bytes transferred.
 * @member {number} [connectionBandwidthInMbps] Expected bandwidth in MBPS.
 * @member {string} [sharedKey] SharedKey for the vpn connection.
 * @member {boolean} [enableBgp] EnableBgp flag
 * @member {array} [ipsecPolicies] The IPSec Policies to be considered by this
 * connection.
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface VpnConnection extends Resource {
  remoteVpnSite?: SubResource;
  routingWeight?: number;
  connectionStatus?: string;
  readonly ingressBytesTransferred?: number;
  readonly egressBytesTransferred?: number;
  readonly connectionBandwidthInMbps?: number;
  sharedKey?: string;
  enableBgp?: boolean;
  ipsecPolicies?: IpsecPolicy[];
  provisioningState?: string;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the Policies class.
 * @constructor
 * Policies for vpn gateway.
 *
 * @member {boolean} [allowBranchToBranchTraffic] True if branch to branch
 * traffic is allowed.
 * @member {boolean} [allowVnetToVnetTraffic] True if Vnet to Vnet traffic is
 * allowed.
 */
export interface Policies {
  allowBranchToBranchTraffic?: boolean;
  allowVnetToVnetTraffic?: boolean;
}

/**
 * @class
 * Initializes a new instance of the VpnGateway class.
 * @constructor
 * VpnGateway Resource.
 *
 * @member {object} [virtualHub] The VirtualHub to which the gateway belongs
 * @member {string} [virtualHub.id] Resource ID.
 * @member {array} [connections] list of all vpn connections to the gateway.
 * @member {object} [bgpSettings] Local network gateway's BGP speaker settings.
 * @member {number} [bgpSettings.asn] The BGP speaker's ASN.
 * @member {string} [bgpSettings.bgpPeeringAddress] The BGP peering address and
 * BGP identifier of this BGP speaker.
 * @member {number} [bgpSettings.peerWeight] The weight added to routes learned
 * from this BGP speaker.
 * @member {string} [provisioningState] The provisioning state of the resource.
 * Possible values include: 'Succeeded', 'Updating', 'Deleting', 'Failed'
 * @member {object} [policies] The policies applied to this vpn gateway.
 * @member {boolean} [policies.allowBranchToBranchTraffic] True if branch to
 * branch traffic is allowed.
 * @member {boolean} [policies.allowVnetToVnetTraffic] True if Vnet to Vnet
 * traffic is allowed.
 * @member {string} [etag] Gets a unique read-only string that changes whenever
 * the resource is updated.
 */
export interface VpnGateway extends Resource {
  virtualHub?: SubResource;
  connections?: VpnConnection[];
  bgpSettings?: BgpSettings;
  provisioningState?: string;
  policies?: Policies;
  readonly etag?: string;
}

/**
 * @class
 * Initializes a new instance of the VpnSiteId class.
 * @constructor
 * VpnSite Resource.
 *
 * @member {string} [vpnSite] The resource-uri of the vpn-site for which config
 * is to be fetched.
 */
export interface VpnSiteId {
  readonly vpnSite?: string;
}


/**
 * @class
 * Initializes a new instance of the ApplicationGatewayListResult class.
 * @constructor
 * Response for ListApplicationGateways API service call.
 *
 * @member {string} [nextLink] URL to get the next set of results.
 */
export interface ApplicationGatewayListResult extends Array<ApplicationGateway> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayAvailableSslPredefinedPolicies class.
 * @constructor
 * Response for ApplicationGatewayAvailableSslOptions API service call.
 *
 * @member {string} [nextLink] URL to get the next set of results.
 */
export interface ApplicationGatewayAvailableSslPredefinedPolicies extends Array<ApplicationGatewaySslPredefinedPolicy> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationSecurityGroupListResult class.
 * @constructor
 * A list of application security groups.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface ApplicationSecurityGroupListResult extends Array<ApplicationSecurityGroup> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the AzureFirewallListResult class.
 * @constructor
 * Response for ListAzureFirewalls API service call.
 *
 * @member {string} [nextLink] URL to get the next set of results.
 */
export interface AzureFirewallListResult extends Array<AzureFirewall> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the DdosProtectionPlanListResult class.
 * @constructor
 * A list of DDoS protection plans.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface DdosProtectionPlanListResult extends Array<DdosProtectionPlan> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the EndpointServicesListResult class.
 * @constructor
 * Response for the ListAvailableEndpointServices API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface EndpointServicesListResult extends Array<EndpointServiceResult> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the AuthorizationListResult class.
 * @constructor
 * Response for ListAuthorizations API service call retrieves all
 * authorizations that belongs to an ExpressRouteCircuit.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface AuthorizationListResult extends Array<ExpressRouteCircuitAuthorization> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitPeeringListResult class.
 * @constructor
 * Response for ListPeering API service call retrieves all peerings that belong
 * to an ExpressRouteCircuit.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface ExpressRouteCircuitPeeringListResult extends Array<ExpressRouteCircuitPeering> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitListResult class.
 * @constructor
 * Response for ListExpressRouteCircuit API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface ExpressRouteCircuitListResult extends Array<ExpressRouteCircuit> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteServiceProviderListResult class.
 * @constructor
 * Response for the ListExpressRouteServiceProvider API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface ExpressRouteServiceProviderListResult extends Array<ExpressRouteServiceProvider> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCrossConnectionListResult class.
 * @constructor
 * Response for ListExpressRouteCrossConnection API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface ExpressRouteCrossConnectionListResult extends Array<ExpressRouteCrossConnection> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ExpressRouteCrossConnectionPeeringList class.
 * @constructor
 * Response for ListPeering API service call retrieves all peerings that belong
 * to an ExpressRouteCrossConnection.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface ExpressRouteCrossConnectionPeeringList extends Array<ExpressRouteCrossConnectionPeering> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the LoadBalancerListResult class.
 * @constructor
 * Response for ListLoadBalancers API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface LoadBalancerListResult extends Array<LoadBalancer> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the LoadBalancerBackendAddressPoolListResult class.
 * @constructor
 * Response for ListBackendAddressPool API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface LoadBalancerBackendAddressPoolListResult extends Array<BackendAddressPool> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the LoadBalancerFrontendIPConfigurationListResult class.
 * @constructor
 * Response for ListFrontendIPConfiguration API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface LoadBalancerFrontendIPConfigurationListResult extends Array<FrontendIPConfiguration> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the InboundNatRuleListResult class.
 * @constructor
 * Response for ListInboundNatRule API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface InboundNatRuleListResult extends Array<InboundNatRule> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the LoadBalancerLoadBalancingRuleListResult class.
 * @constructor
 * Response for ListLoadBalancingRule API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface LoadBalancerLoadBalancingRuleListResult extends Array<LoadBalancingRule> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the NetworkInterfaceListResult class.
 * @constructor
 * Response for the ListNetworkInterface API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface NetworkInterfaceListResult extends Array<NetworkInterface> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the LoadBalancerProbeListResult class.
 * @constructor
 * Response for ListProbe API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface LoadBalancerProbeListResult extends Array<Probe> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the NetworkInterfaceIPConfigurationListResult class.
 * @constructor
 * Response for list ip configurations API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface NetworkInterfaceIPConfigurationListResult extends Array<NetworkInterfaceIPConfiguration> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the NetworkInterfaceLoadBalancerListResult class.
 * @constructor
 * Response for list ip configurations API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface NetworkInterfaceLoadBalancerListResult extends Array<LoadBalancer> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the NetworkSecurityGroupListResult class.
 * @constructor
 * Response for ListNetworkSecurityGroups API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface NetworkSecurityGroupListResult extends Array<NetworkSecurityGroup> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SecurityRuleListResult class.
 * @constructor
 * Response for ListSecurityRule API service call. Retrieves all security rules
 * that belongs to a network security group.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface SecurityRuleListResult extends Array<SecurityRule> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the NetworkWatcherListResult class.
 * @constructor
 * List of network watcher resources.
 *
 */
export interface NetworkWatcherListResult extends Array<NetworkWatcher> {
}

/**
 * @class
 * Initializes a new instance of the PacketCaptureListResult class.
 * @constructor
 * List of packet capture sessions.
 *
 */
export interface PacketCaptureListResult extends Array<PacketCaptureResult> {
}

/**
 * @class
 * Initializes a new instance of the ConnectionMonitorListResult class.
 * @constructor
 * List of connection monitors.
 *
 */
export interface ConnectionMonitorListResult extends Array<ConnectionMonitorResult> {
}

/**
 * @class
 * Initializes a new instance of the OperationListResult class.
 * @constructor
 * Result of the request to list Network operations. It contains a list of
 * operations and a URL link to get the next set of results.
 *
 * @member {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 */
export interface OperationListResult extends Array<Operation> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the PublicIPAddressListResult class.
 * @constructor
 * Response for ListPublicIpAddresses API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface PublicIPAddressListResult extends Array<PublicIPAddress> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the PublicIPPrefixListResult class.
 * @constructor
 * Response for ListPublicIpPrefixes API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface PublicIPPrefixListResult extends Array<PublicIPPrefix> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the RouteFilterListResult class.
 * @constructor
 * Response for the ListRouteFilters API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface RouteFilterListResult extends Array<RouteFilter> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the RouteFilterRuleListResult class.
 * @constructor
 * Response for the ListRouteFilterRules API service call
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface RouteFilterRuleListResult extends Array<RouteFilterRule> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the RouteTableListResult class.
 * @constructor
 * Response for the ListRouteTable API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface RouteTableListResult extends Array<RouteTable> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the RouteListResult class.
 * @constructor
 * Response for the ListRoute API service call
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface RouteListResult extends Array<Route> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the BgpServiceCommunityListResult class.
 * @constructor
 * Response for the ListServiceCommunity API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface BgpServiceCommunityListResult extends Array<BgpServiceCommunity> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceEndpointPolicyListResult class.
 * @constructor
 * Response for ListServiceEndpointPolicies API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface ServiceEndpointPolicyListResult extends Array<ServiceEndpointPolicy> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceEndpointPolicyDefinitionListResult class.
 * @constructor
 * Response for ListServiceEndpointPolicyDefinition API service call. Retrieves
 * all service endpoint policy definition that belongs to a service endpoint
 * policy.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface ServiceEndpointPolicyDefinitionListResult extends Array<ServiceEndpointPolicyDefinition> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the UsagesListResult class.
 * @constructor
 * The list usages operation response.
 *
 * @member {string} [nextLink] URL to get the next set of results.
 */
export interface UsagesListResult extends Array<Usage> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkListResult class.
 * @constructor
 * Response for the ListVirtualNetworks API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface VirtualNetworkListResult extends Array<VirtualNetwork> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkListUsageResult class.
 * @constructor
 * Response for the virtual networks GetUsage API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface VirtualNetworkListUsageResult extends Array<VirtualNetworkUsage> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SubnetListResult class.
 * @constructor
 * Response for ListSubnets API service callRetrieves all subnet that belongs
 * to a virtual network
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface SubnetListResult extends Array<Subnet> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkPeeringListResult class.
 * @constructor
 * Response for ListSubnets API service call. Retrieves all subnets that belong
 * to a virtual network.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface VirtualNetworkPeeringListResult extends Array<VirtualNetworkPeering> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkGatewayListResult class.
 * @constructor
 * Response for the ListVirtualNetworkGateways API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface VirtualNetworkGatewayListResult extends Array<VirtualNetworkGateway> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkGatewayListConnectionsResult class.
 * @constructor
 * Response for the VirtualNetworkGatewayListConnections API service call
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface VirtualNetworkGatewayListConnectionsResult extends Array<VirtualNetworkGatewayConnectionListEntity> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkGatewayConnectionListResult class.
 * @constructor
 * Response for the ListVirtualNetworkGatewayConnections API service call
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface VirtualNetworkGatewayConnectionListResult extends Array<VirtualNetworkGatewayConnection> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the LocalNetworkGatewayListResult class.
 * @constructor
 * Response for ListLocalNetworkGateways API service call.
 *
 * @member {string} [nextLink] The URL to get the next set of results.
 */
export interface LocalNetworkGatewayListResult extends Array<LocalNetworkGateway> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ListVirtualWANsResult class.
 * @constructor
 * Result of the request to list VirtualWANs. It contains a list of VirtualWANs
 * and a URL nextLink to get the next set of results.
 *
 * @member {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 */
export interface ListVirtualWANsResult extends Array<VirtualWAN> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ListVpnSitesResult class.
 * @constructor
 * Result of the request to list VpnSites. It contains a list of VpnSites and a
 * URL nextLink to get the next set of results.
 *
 * @member {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 */
export interface ListVpnSitesResult extends Array<VpnSite> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ListVirtualHubsResult class.
 * @constructor
 * Result of the request to list VirtualHubs. It contains a list of VirtualHubs
 * and a URL nextLink to get the next set of results.
 *
 * @member {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 */
export interface ListVirtualHubsResult extends Array<VirtualHub> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ListHubVirtualNetworkConnectionsResult class.
 * @constructor
 * List of HubVirtualNetworkConnections and a URL nextLink to get the next set
 * of results.
 *
 * @member {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 */
export interface ListHubVirtualNetworkConnectionsResult extends Array<HubVirtualNetworkConnection> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ListVpnGatewaysResult class.
 * @constructor
 * Result of the request to list VpnGateways. It contains a list of VpnGateways
 * and a URL nextLink to get the next set of results.
 *
 * @member {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 */
export interface ListVpnGatewaysResult extends Array<VpnGateway> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ListVpnConnectionsResult class.
 * @constructor
 * Result of the request to list all vpn connections to a virtual wan vpn
 * gateway. It contains a list of Vpn Connections and a URL nextLink to get the
 * next set of results.
 *
 * @member {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 */
export interface ListVpnConnectionsResult extends Array<VpnConnection> {
  nextLink?: string;
}

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Application gateway backendhealth http settings.
 *
 */
class ApplicationGatewayBackendHealthServer {
  /**
   * Create a ApplicationGatewayBackendHealthServer.
   * @member {string} [address] IP address or FQDN of backend server.
   * @member {object} [ipConfiguration] Reference of IP configuration of
   * backend server.
   * @member {array} [ipConfiguration.applicationGatewayBackendAddressPools]
   * The reference of ApplicationGatewayBackendAddressPool resource.
   * @member {array} [ipConfiguration.loadBalancerBackendAddressPools] The
   * reference of LoadBalancerBackendAddressPool resource.
   * @member {array} [ipConfiguration.loadBalancerInboundNatRules] A list of
   * references of LoadBalancerInboundNatRules.
   * @member {string} [ipConfiguration.privateIPAddress] Private IP address of
   * the IP configuration.
   * @member {string} [ipConfiguration.privateIPAllocationMethod] Defines how a
   * private IP address is assigned. Possible values are: 'Static' and
   * 'Dynamic'. Possible values include: 'Static', 'Dynamic'
   * @member {string} [ipConfiguration.privateIPAddressVersion] Available from
   * Api-Version 2016-03-30 onwards, it represents whether the specific
   * ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible
   * values are: 'IPv4' and 'IPv6'. Possible values include: 'IPv4', 'IPv6'
   * @member {object} [ipConfiguration.subnet] Subnet bound to the IP
   * configuration.
   * @member {string} [ipConfiguration.subnet.addressPrefix] The address prefix
   * for the subnet.
   * @member {object} [ipConfiguration.subnet.networkSecurityGroup] The
   * reference of the NetworkSecurityGroup resource.
   * @member {array}
   * [ipConfiguration.subnet.networkSecurityGroup.securityRules] A collection
   * of security rules of the network security group.
   * @member {array}
   * [ipConfiguration.subnet.networkSecurityGroup.defaultSecurityRules] The
   * default security rules of network security group.
   * @member {array}
   * [ipConfiguration.subnet.networkSecurityGroup.networkInterfaces] A
   * collection of references to network interfaces.
   * @member {array} [ipConfiguration.subnet.networkSecurityGroup.subnets] A
   * collection of references to subnets.
   * @member {string}
   * [ipConfiguration.subnet.networkSecurityGroup.resourceGuid] The resource
   * GUID property of the network security group resource.
   * @member {string}
   * [ipConfiguration.subnet.networkSecurityGroup.provisioningState] The
   * provisioning state of the public IP resource. Possible values are:
   * 'Updating', 'Deleting', and 'Failed'.
   * @member {string} [ipConfiguration.subnet.networkSecurityGroup.etag] A
   * unique read-only string that changes whenever the resource is updated.
   * @member {object} [ipConfiguration.subnet.routeTable] The reference of the
   * RouteTable resource.
   * @member {array} [ipConfiguration.subnet.routeTable.routes] Collection of
   * routes contained within a route table.
   * @member {array} [ipConfiguration.subnet.routeTable.subnets] A collection
   * of references to subnets.
   * @member {boolean}
   * [ipConfiguration.subnet.routeTable.disableBgpRoutePropagation] Gets or
   * sets whether to disable the routes learned by BGP on that route table.
   * True means disable.
   * @member {string} [ipConfiguration.subnet.routeTable.provisioningState] The
   * provisioning state of the resource. Possible values are: 'Updating',
   * 'Deleting', and 'Failed'.
   * @member {string} [ipConfiguration.subnet.routeTable.etag] Gets a unique
   * read-only string that changes whenever the resource is updated.
   * @member {array} [ipConfiguration.subnet.serviceEndpoints] An array of
   * service endpoints.
   * @member {array} [ipConfiguration.subnet.ipConfigurations] Gets an array of
   * references to the network interface IP configurations using subnet.
   * @member {array} [ipConfiguration.subnet.resourceNavigationLinks] Gets an
   * array of references to the external resources using subnet.
   * @member {string} [ipConfiguration.subnet.provisioningState] The
   * provisioning state of the resource.
   * @member {string} [ipConfiguration.subnet.name] The name of the resource
   * that is unique within a resource group. This name can be used to access
   * the resource.
   * @member {string} [ipConfiguration.subnet.etag] A unique read-only string
   * that changes whenever the resource is updated.
   * @member {boolean} [ipConfiguration.primary] Gets whether this is a primary
   * customer address on the network interface.
   * @member {object} [ipConfiguration.publicIPAddress] Public IP address bound
   * to the IP configuration.
   * @member {object} [ipConfiguration.publicIPAddress.sku] The public IP
   * address SKU.
   * @member {string} [ipConfiguration.publicIPAddress.sku.name] Name of a
   * public IP address SKU. Possible values include: 'Basic', 'Standard'
   * @member {string}
   * [ipConfiguration.publicIPAddress.publicIPAllocationMethod] The public IP
   * allocation method. Possible values are: 'Static' and 'Dynamic'. Possible
   * values include: 'Static', 'Dynamic'
   * @member {string} [ipConfiguration.publicIPAddress.publicIPAddressVersion]
   * The public IP address version. Possible values are: 'IPv4' and 'IPv6'.
   * Possible values include: 'IPv4', 'IPv6'
   * @member {object} [ipConfiguration.publicIPAddress.ipConfiguration] The IP
   * configuration associated with the public IP address.
   * @member {string}
   * [ipConfiguration.publicIPAddress.ipConfiguration.privateIPAddress] The
   * private IP address of the IP configuration.
   * @member {string}
   * [ipConfiguration.publicIPAddress.ipConfiguration.privateIPAllocationMethod]
   * The private IP allocation method. Possible values are 'Static' and
   * 'Dynamic'. Possible values include: 'Static', 'Dynamic'
   * @member {object} [ipConfiguration.publicIPAddress.ipConfiguration.subnet]
   * The reference of the subnet resource.
   * @member {string}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.addressPrefix] The
   * address prefix for the subnet.
   * @member {object}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup]
   * The reference of the NetworkSecurityGroup resource.
   * @member {array}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.securityRules]
   * A collection of security rules of the network security group.
   * @member {array}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.defaultSecurityRules]
   * The default security rules of network security group.
   * @member {array}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.networkInterfaces]
   * A collection of references to network interfaces.
   * @member {array}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.subnets]
   * A collection of references to subnets.
   * @member {string}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.resourceGuid]
   * The resource GUID property of the network security group resource.
   * @member {string}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.provisioningState]
   * The provisioning state of the public IP resource. Possible values are:
   * 'Updating', 'Deleting', and 'Failed'.
   * @member {string}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.networkSecurityGroup.etag]
   * A unique read-only string that changes whenever the resource is updated.
   * @member {object}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable] The
   * reference of the RouteTable resource.
   * @member {array}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable.routes]
   * Collection of routes contained within a route table.
   * @member {array}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable.subnets]
   * A collection of references to subnets.
   * @member {boolean}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable.disableBgpRoutePropagation]
   * Gets or sets whether to disable the routes learned by BGP on that route
   * table. True means disable.
   * @member {string}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable.provisioningState]
   * The provisioning state of the resource. Possible values are: 'Updating',
   * 'Deleting', and 'Failed'.
   * @member {string}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.routeTable.etag]
   * Gets a unique read-only string that changes whenever the resource is
   * updated.
   * @member {array}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.serviceEndpoints]
   * An array of service endpoints.
   * @member {array}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.ipConfigurations]
   * Gets an array of references to the network interface IP configurations
   * using subnet.
   * @member {array}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.resourceNavigationLinks]
   * Gets an array of references to the external resources using subnet.
   * @member {string}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.provisioningState]
   * The provisioning state of the resource.
   * @member {string}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.name] The name of
   * the resource that is unique within a resource group. This name can be used
   * to access the resource.
   * @member {string}
   * [ipConfiguration.publicIPAddress.ipConfiguration.subnet.etag] A unique
   * read-only string that changes whenever the resource is updated.
   * @member {object}
   * [ipConfiguration.publicIPAddress.ipConfiguration.publicIPAddress] The
   * reference of the public IP resource.
   * @member {string}
   * [ipConfiguration.publicIPAddress.ipConfiguration.provisioningState] Gets
   * the provisioning state of the public IP resource. Possible values are:
   * 'Updating', 'Deleting', and 'Failed'.
   * @member {string} [ipConfiguration.publicIPAddress.ipConfiguration.name]
   * The name of the resource that is unique within a resource group. This name
   * can be used to access the resource.
   * @member {string} [ipConfiguration.publicIPAddress.ipConfiguration.etag] A
   * unique read-only string that changes whenever the resource is updated.
   * @member {object} [ipConfiguration.publicIPAddress.dnsSettings] The FQDN of
   * the DNS record associated with the public IP address.
   * @member {string}
   * [ipConfiguration.publicIPAddress.dnsSettings.domainNameLabel] Gets or sets
   * the Domain name label.The concatenation of the domain name label and the
   * regionalized DNS zone make up the fully qualified domain name associated
   * with the public IP address. If a domain name label is specified, an A DNS
   * record is created for the public IP in the Microsoft Azure DNS system.
   * @member {string} [ipConfiguration.publicIPAddress.dnsSettings.fqdn] Gets
   * the FQDN, Fully qualified domain name of the A DNS record associated with
   * the public IP. This is the concatenation of the domainNameLabel and the
   * regionalized DNS zone.
   * @member {string} [ipConfiguration.publicIPAddress.dnsSettings.reverseFqdn]
   * Gets or Sets the Reverse FQDN. A user-visible, fully qualified domain name
   * that resolves to this public IP address. If the reverseFqdn is specified,
   * then a PTR DNS record is created pointing from the IP address in the
   * in-addr.arpa domain to the reverse FQDN.
   * @member {array} [ipConfiguration.publicIPAddress.ipTags] The list of tags
   * associated with the public IP address.
   * @member {string} [ipConfiguration.publicIPAddress.ipAddress] The IP
   * address associated with the public IP address resource.
   * @member {number} [ipConfiguration.publicIPAddress.idleTimeoutInMinutes]
   * The idle timeout of the public IP address.
   * @member {string} [ipConfiguration.publicIPAddress.resourceGuid] The
   * resource GUID property of the public IP resource.
   * @member {string} [ipConfiguration.publicIPAddress.provisioningState] The
   * provisioning state of the PublicIP resource. Possible values are:
   * 'Updating', 'Deleting', and 'Failed'.
   * @member {string} [ipConfiguration.publicIPAddress.etag] A unique read-only
   * string that changes whenever the resource is updated.
   * @member {array} [ipConfiguration.publicIPAddress.zones] A list of
   * availability zones denoting the IP allocated for the resource needs to
   * come from.
   * @member {array} [ipConfiguration.applicationSecurityGroups] Application
   * security groups in which the IP configuration is included.
   * @member {string} [ipConfiguration.provisioningState] The provisioning
   * state of the network interface IP configuration. Possible values are:
   * 'Updating', 'Deleting', and 'Failed'.
   * @member {string} [ipConfiguration.name] The name of the resource that is
   * unique within a resource group. This name can be used to access the
   * resource.
   * @member {string} [ipConfiguration.etag] A unique read-only string that
   * changes whenever the resource is updated.
   * @member {string} [health] Health of backend server. Possible values
   * include: 'Unknown', 'Up', 'Down', 'Partial', 'Draining'
   */
  constructor() {
  }

  /**
   * Defines the metadata of ApplicationGatewayBackendHealthServer
   *
   * @returns {object} metadata of ApplicationGatewayBackendHealthServer
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ApplicationGatewayBackendHealthServer',
      type: {
        name: 'Composite',
        className: 'ApplicationGatewayBackendHealthServer',
        modelProperties: {
          address: {
            required: false,
            serializedName: 'address',
            type: {
              name: 'String'
            }
          },
          ipConfiguration: {
            required: false,
            serializedName: 'ipConfiguration',
            type: {
              name: 'Composite',
              className: 'NetworkInterfaceIPConfiguration'
            }
          },
          health: {
            required: false,
            serializedName: 'health',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ApplicationGatewayBackendHealthServer;

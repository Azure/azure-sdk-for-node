/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Parameters that define the configuration of traffic analytics.
 *
 */
class TrafficAnalyticsProperties {
  /**
   * Create a TrafficAnalyticsProperties.
   * @property {object} networkWatcherFlowAnalyticsConfiguration
   * @property {boolean} [networkWatcherFlowAnalyticsConfiguration.enabled]
   * Flag to enable/disable traffic analytics.
   * @property {string} [networkWatcherFlowAnalyticsConfiguration.workspaceId]
   * The resource guid of the attached workspace
   * @property {string}
   * [networkWatcherFlowAnalyticsConfiguration.workspaceRegion] The location of
   * the attached workspace
   * @property {string}
   * [networkWatcherFlowAnalyticsConfiguration.workspaceResourceId] Resource Id
   * of the attached workspace
   * @property {number}
   * [networkWatcherFlowAnalyticsConfiguration.trafficAnalyticsInterval] The
   * interval in minutes which would decide how frequently TA service should do
   * flow analytics
   */
  constructor() {
  }

  /**
   * Defines the metadata of TrafficAnalyticsProperties
   *
   * @returns {object} metadata of TrafficAnalyticsProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TrafficAnalyticsProperties',
      type: {
        name: 'Composite',
        className: 'TrafficAnalyticsProperties',
        modelProperties: {
          networkWatcherFlowAnalyticsConfiguration: {
            required: true,
            serializedName: 'networkWatcherFlowAnalyticsConfiguration',
            type: {
              name: 'Composite',
              className: 'TrafficAnalyticsConfigurationProperties'
            }
          }
        }
      }
    };
  }
}

module.exports = TrafficAnalyticsProperties;

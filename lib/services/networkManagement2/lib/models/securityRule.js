/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the SecurityRule class.
 * @constructor
 * Network security rule
 * @member {string} [description] Gets or sets a description for this rule.
 * Restricted to 140 chars.
 * 
 * @member {string} protocol Gets or sets Network protocol this rule applies
 * to. Can be Tcp, Udp or All(*). Possible values include: 'Tcp', 'Udp', '*'
 * 
 * @member {string} [sourcePortRange] Gets or sets Source Port or Range.
 * Integer or range between 0 and 65535. Asterix '*' can also be used to
 * match all ports.
 * 
 * @member {string} [destinationPortRange] Gets or sets Destination Port or
 * Range. Integer or range between 0 and 65535. Asterix '*' can also be used
 * to match all ports.
 * 
 * @member {string} sourceAddressPrefix Gets or sets source address prefix.
 * CIDR or source IP range. Asterix '*' can also be used to match all source
 * IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and
 * 'Internet' can also be used. If this is an ingress rule, specifies where
 * network traffic originates from.
 * 
 * @member {string} destinationAddressPrefix Gets or sets destination address
 * prefix. CIDR or source IP range. Asterix '*' can also be used to match all
 * source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and
 * 'Internet' can also be used.
 * 
 * @member {string} access Gets or sets network traffic is allowed or denied.
 * Possible values are 'Allow' and 'Deny'. Possible values include: 'Allow',
 * 'Deny'
 * 
 * @member {number} [priority] Gets or sets the priority of the rule. The
 * value can be between 100 and 4096. The priority number must be unique for
 * each rule in the collection. The lower the priority number, the higher the
 * priority of the rule.
 * 
 * @member {string} direction Gets or sets the direction of the rule.InBound
 * or Outbound. The direction specifies if rule will be evaluated on incoming
 * or outcoming traffic. Possible values include: 'Inbound', 'Outbound'
 * 
 * @member {string} [provisioningState] Gets or sets Provisioning state of the
 * PublicIP resource Updating/Deleting/Failed
 * 
 * @member {string} [name] Gets name of the resource that is unique within a
 * resource group. This name can be used to access the resource
 * 
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated
 * 
 */
function SecurityRule() {
  SecurityRule['super_'].call(this);
}

util.inherits(SecurityRule, models['SubResource']);

/**
 * Defines the metadata of SecurityRule
 *
 * @returns {object} metadata of SecurityRule
 *
 */
SecurityRule.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'SecurityRule',
    type: {
      name: 'Composite',
      className: 'SecurityRule',
      modelProperties: {
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        description: {
          required: false,
          serializedName: 'properties.description',
          type: {
            name: 'String'
          }
        },
        protocol: {
          required: true,
          serializedName: 'properties.protocol',
          type: {
            name: 'String'
          }
        },
        sourcePortRange: {
          required: false,
          serializedName: 'properties.sourcePortRange',
          type: {
            name: 'String'
          }
        },
        destinationPortRange: {
          required: false,
          serializedName: 'properties.destinationPortRange',
          type: {
            name: 'String'
          }
        },
        sourceAddressPrefix: {
          required: true,
          serializedName: 'properties.sourceAddressPrefix',
          type: {
            name: 'String'
          }
        },
        destinationAddressPrefix: {
          required: true,
          serializedName: 'properties.destinationAddressPrefix',
          type: {
            name: 'String'
          }
        },
        access: {
          required: true,
          serializedName: 'properties.access',
          type: {
            name: 'String'
          }
        },
        priority: {
          required: false,
          serializedName: 'properties.priority',
          type: {
            name: 'Number'
          }
        },
        direction: {
          required: true,
          serializedName: 'properties.direction',
          type: {
            name: 'String'
          }
        },
        provisioningState: {
          required: false,
          serializedName: 'properties.provisioningState',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        etag: {
          required: false,
          serializedName: 'etag',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = SecurityRule;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a ContainerNetworkInterfacePropertiesFormat.
 */
class ContainerNetworkInterfacePropertiesFormat {
  /**
   * Create a ContainerNetworkInterfacePropertiesFormat.
   * @member {object} [containerNetworkInterfaceConfiguration] Container
   * network interface configuration from which this container network
   * interface is created.
   * @member {object} [containerNetworkInterfaceConfiguration.properties]
   * Container network interface configuration properties.
   * @member {array}
   * [containerNetworkInterfaceConfiguration.properties.ipConfigurations] A
   * list of ip configurations of the container network interface
   * configuration.
   * @member {array}
   * [containerNetworkInterfaceConfiguration.properties.containerNetworkInterfaces]
   * A list of container network interfaces created from this container network
   * interface configuration.
   * @member {string} [containerNetworkInterfaceConfiguration.etag] A unique
   * read-only string that changes whenever the resource is updated.
   * @member {object} [container] Reference to the conatinaer to which this
   * container network interface is attached.
   * @member {object} [container.properties] Properties of the container.
   * @member {string} [container.properties.containerUri] ARM Uri for the
   * container.
   * @member {string} [container.etag] A unique read-only string that changes
   * whenever the resource is updated.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ContainerNetworkInterfacePropertiesFormat
   *
   * @returns {object} metadata of ContainerNetworkInterfacePropertiesFormat
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ContainerNetworkInterfacePropertiesFormat',
      type: {
        name: 'Composite',
        className: 'ContainerNetworkInterfacePropertiesFormat',
        modelProperties: {
          containerNetworkInterfaceConfiguration: {
            required: false,
            serializedName: 'containerNetworkInterfaceConfiguration',
            type: {
              name: 'Composite',
              className: 'ContainerNetworkInterfaceConfiguration'
            }
          },
          container: {
            required: false,
            serializedName: 'container',
            type: {
              name: 'Composite',
              className: 'Container'
            }
          }
        }
      }
    };
  }
}

module.exports = ContainerNetworkInterfacePropertiesFormat;

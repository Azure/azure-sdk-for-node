/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Vpn Client Parameters for package generation
 *
 */
class VpnClientParameters {
  /**
   * Create a VpnClientParameters.
   * @member {string} [processorArchitecture] VPN client Processor
   * Architecture. Possible values are: 'AMD64' and 'X86'. Possible values
   * include: 'Amd64', 'X86'
   * @member {string} [authenticationMethod] VPN client Authentication Method.
   * Possible values are: 'EAPTLS' and 'EAPMSCHAPv2'. Possible values include:
   * 'EAPTLS', 'EAPMSCHAPv2'
   * @member {string} [radiusServerAuthCertificate] The public certificate data
   * for the radius server authentication certificate as a Base-64 encoded
   * string. Required only if external radius authentication has been
   * configured with EAPTLS authentication.
   * @member {array} [clientRootCertificates] A list of client root
   * certificates public certificate data encoded as Base-64 strings. Optional
   * parameter for external radius based authentication with EAPTLS.
   */
  constructor() {
  }

  /**
   * Defines the metadata of VpnClientParameters
   *
   * @returns {object} metadata of VpnClientParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VpnClientParameters',
      type: {
        name: 'Composite',
        className: 'VpnClientParameters',
        modelProperties: {
          processorArchitecture: {
            required: false,
            serializedName: 'processorArchitecture',
            type: {
              name: 'String'
            }
          },
          authenticationMethod: {
            required: false,
            serializedName: 'authenticationMethod',
            type: {
              name: 'String'
            }
          },
          radiusServerAuthCertificate: {
            required: false,
            serializedName: 'radiusServerAuthCertificate',
            type: {
              name: 'String'
            }
          },
          clientRootCertificates: {
            required: false,
            serializedName: 'clientRootCertificates',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = VpnClientParameters;

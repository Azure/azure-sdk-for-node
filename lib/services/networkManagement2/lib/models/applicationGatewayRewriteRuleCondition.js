/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Set of conditions in the Rewrite Rule in Application Gateway.
 *
 */
class ApplicationGatewayRewriteRuleCondition {
  /**
   * Create a ApplicationGatewayRewriteRuleCondition.
   * @property {string} [variable] The condition parameter of the
   * RewriteRuleCondition.
   * @property {string} [pattern] The pattern, either fixed string or regular
   * expression, that evaluates the truthfulness of the condition
   * @property {boolean} [ignoreCase] Setting this paramter to truth value with
   * force the pattern to do a case in-sensitive comparison.
   * @property {boolean} [negate] Setting this value as truth will force to
   * check the negation of the condition given by the user.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ApplicationGatewayRewriteRuleCondition
   *
   * @returns {object} metadata of ApplicationGatewayRewriteRuleCondition
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ApplicationGatewayRewriteRuleCondition',
      type: {
        name: 'Composite',
        className: 'ApplicationGatewayRewriteRuleCondition',
        modelProperties: {
          variable: {
            required: false,
            serializedName: 'variable',
            type: {
              name: 'String'
            }
          },
          pattern: {
            required: false,
            serializedName: 'pattern',
            type: {
              name: 'String'
            }
          },
          ignoreCase: {
            required: false,
            serializedName: 'ignoreCase',
            type: {
              name: 'Boolean'
            }
          },
          negate: {
            required: false,
            serializedName: 'negate',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = ApplicationGatewayRewriteRuleCondition;

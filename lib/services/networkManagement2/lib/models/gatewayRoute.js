/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Gateway routing details
 *
 */
class GatewayRoute {
  /**
   * Create a GatewayRoute.
   * @member {string} [localAddress] The gateway's local address
   * @member {string} [network] The route's network prefix
   * @member {string} [nextHop] The route's next hop
   * @member {string} [sourcePeer] The peer this route was learned from
   * @member {string} [origin] The source this route was learned from
   * @member {string} [asPath] The route's AS path sequence
   * @member {number} [weight] The route's weight
   */
  constructor() {
  }

  /**
   * Defines the metadata of GatewayRoute
   *
   * @returns {object} metadata of GatewayRoute
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'GatewayRoute',
      type: {
        name: 'Composite',
        className: 'GatewayRoute',
        modelProperties: {
          localAddress: {
            required: false,
            readOnly: true,
            serializedName: 'localAddress',
            type: {
              name: 'String'
            }
          },
          network: {
            required: false,
            readOnly: true,
            serializedName: 'network',
            type: {
              name: 'String'
            }
          },
          nextHop: {
            required: false,
            readOnly: true,
            serializedName: 'nextHop',
            type: {
              name: 'String'
            }
          },
          sourcePeer: {
            required: false,
            readOnly: true,
            serializedName: 'sourcePeer',
            type: {
              name: 'String'
            }
          },
          origin: {
            required: false,
            readOnly: true,
            serializedName: 'origin',
            type: {
              name: 'String'
            }
          },
          asPath: {
            required: false,
            readOnly: true,
            serializedName: 'asPath',
            type: {
              name: 'String'
            }
          },
          weight: {
            required: false,
            readOnly: true,
            serializedName: 'weight',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = GatewayRoute;

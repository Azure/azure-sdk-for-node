/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the ExpressRouteCircuitServiceProviderProperties class.
 * @constructor
 * Contains ServiceProviderProperties in an ExpressRouteCircuit
 * @member {string} [serviceProviderName] Gets or sets serviceProviderName.
 * 
 * @member {string} [peeringLocation] Gets or sets peering location.
 * 
 * @member {number} [bandwidthInMbps] Gets or sets BandwidthInMbps.
 * 
 */
function ExpressRouteCircuitServiceProviderProperties(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.serviceProviderName !== undefined) {
      this.serviceProviderName = parameters.serviceProviderName;
    }
    if (parameters.peeringLocation !== undefined) {
      this.peeringLocation = parameters.peeringLocation;
    }
    if (parameters.bandwidthInMbps !== undefined) {
      this.bandwidthInMbps = parameters.bandwidthInMbps;
    }
  }    
}


/**
 * Validate the payload against the ExpressRouteCircuitServiceProviderProperties schema
 *
 * @param {JSON} payload
 *
 */
ExpressRouteCircuitServiceProviderProperties.prototype.serialize = function () {
  var payload = {};
  if (this['serviceProviderName'] !== null && this['serviceProviderName'] !== undefined) {
    if (typeof this['serviceProviderName'].valueOf() !== 'string') {
      throw new Error('this[\'serviceProviderName\'] must be of type string.');
    }
    payload['serviceProviderName'] = this['serviceProviderName'];
  }

  if (this['peeringLocation'] !== null && this['peeringLocation'] !== undefined) {
    if (typeof this['peeringLocation'].valueOf() !== 'string') {
      throw new Error('this[\'peeringLocation\'] must be of type string.');
    }
    payload['peeringLocation'] = this['peeringLocation'];
  }

  if (this['bandwidthInMbps'] !== null && this['bandwidthInMbps'] !== undefined) {
    if (typeof this['bandwidthInMbps'] !== 'number') {
      throw new Error('this[\'bandwidthInMbps\'] must be of type number.');
    }
    payload['bandwidthInMbps'] = this['bandwidthInMbps'];
  }

  return payload;
};

/**
 * Deserialize the instance to ExpressRouteCircuitServiceProviderProperties schema
 *
 * @param {JSON} instance
 *
 */
ExpressRouteCircuitServiceProviderProperties.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['serviceProviderName'] !== undefined) {
      this['serviceProviderName'] = instance['serviceProviderName'];
    }

    if (instance['peeringLocation'] !== undefined) {
      this['peeringLocation'] = instance['peeringLocation'];
    }

    if (instance['bandwidthInMbps'] !== undefined) {
      this['bandwidthInMbps'] = instance['bandwidthInMbps'];
    }
  }

  return this;
};

module.exports = ExpressRouteCircuitServiceProviderProperties;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Network interface and all its associated security rules.
 *
 */
class SecurityGroupNetworkInterface {
  /**
   * Create a SecurityGroupNetworkInterface.
   * @member {string} [id] ID of the network interface.
   * @member {object} [securityRuleAssociations]
   * @member {object} [securityRuleAssociations.networkInterfaceAssociation]
   * @member {string} [securityRuleAssociations.networkInterfaceAssociation.id]
   * Network interface ID.
   * @member {array}
   * [securityRuleAssociations.networkInterfaceAssociation.securityRules]
   * Collection of custom security rules.
   * @member {object} [securityRuleAssociations.subnetAssociation]
   * @member {string} [securityRuleAssociations.subnetAssociation.id] Subnet
   * ID.
   * @member {array} [securityRuleAssociations.subnetAssociation.securityRules]
   * Collection of custom security rules.
   * @member {array} [securityRuleAssociations.defaultSecurityRules] Collection
   * of default security rules of the network security group.
   * @member {array} [securityRuleAssociations.effectiveSecurityRules]
   * Collection of effective security rules.
   */
  constructor() {
  }

  /**
   * Defines the metadata of SecurityGroupNetworkInterface
   *
   * @returns {object} metadata of SecurityGroupNetworkInterface
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SecurityGroupNetworkInterface',
      type: {
        name: 'Composite',
        className: 'SecurityGroupNetworkInterface',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          securityRuleAssociations: {
            required: false,
            serializedName: 'securityRuleAssociations',
            type: {
              name: 'Composite',
              className: 'SecurityRuleAssociations'
            }
          }
        }
      }
    };
  }
}

module.exports = SecurityGroupNetworkInterface;

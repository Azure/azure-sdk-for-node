/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayProbe class.
 * @constructor
 * Probe of application gateway
 * @member {string} [name] Gets name of the resource that is unique within a
 * resource group. This name can be used to access the resource
 * 
 * @member {string} [etag] A unique read-only string that changes whenever the
 * resource is updated
 * 
 * @member {string} [protocol] Gets or sets the protocol. Possible values for
 * this property include: 'Http', 'Https'.
 * 
 * @member {string} [host] Gets or sets the host to send probe to
 * 
 * @member {string} [path] Gets or sets the relative path of probe
 * 
 * @member {number} [interval] Gets or sets probing interval in seconds
 * 
 * @member {number} [timeout] Gets or sets probing timeout in seconds
 * 
 * @member {number} [unhealthyThreshold] Gets or sets probing unhealthy
 * threshold
 * 
 * @member {string} [provisioningState] Gets or sets Provisioning state of the
 * backend http settings resource Updating/Deleting/Failed
 * 
 */
function ApplicationGatewayProbe(parameters) {
  ApplicationGatewayProbe['super_'].call(this, parameters);
  if (parameters !== null && parameters !== undefined) {
    if (parameters.name !== undefined) {
      this.name = parameters.name;
    }
    if (parameters.etag !== undefined) {
      this.etag = parameters.etag;
    }
    if (parameters.protocol !== undefined) {
      this.protocol = parameters.protocol;
    }
    if (parameters.host !== undefined) {
      this.host = parameters.host;
    }
    if (parameters.path !== undefined) {
      this.path = parameters.path;
    }
    if (parameters.interval !== undefined) {
      this.interval = parameters.interval;
    }
    if (parameters.timeout !== undefined) {
      this.timeout = parameters.timeout;
    }
    if (parameters.unhealthyThreshold !== undefined) {
      this.unhealthyThreshold = parameters.unhealthyThreshold;
    }
    if (parameters.provisioningState !== undefined) {
      this.provisioningState = parameters.provisioningState;
    }
  }    
}

util.inherits(ApplicationGatewayProbe, models['SubResource']);

/**
 * Validate the payload against the ApplicationGatewayProbe schema
 *
 * @param {JSON} payload
 *
 */
ApplicationGatewayProbe.prototype.serialize = function () {
  var payload = ApplicationGatewayProbe['super_'].prototype.serialize.call(this);
  if (this['name'] !== null && this['name'] !== undefined) {
    if (typeof this['name'].valueOf() !== 'string') {
      throw new Error('this[\'name\'] must be of type string.');
    }
    payload['name'] = this['name'];
  }

  if (this['etag'] !== null && this['etag'] !== undefined) {
    if (typeof this['etag'].valueOf() !== 'string') {
      throw new Error('this[\'etag\'] must be of type string.');
    }
    payload['etag'] = this['etag'];
  }

  if (this['protocol'] !== null && this['protocol'] !== undefined) {
    if (typeof this['protocol'].valueOf() !== 'string') {
      throw new Error('this[\'protocol\'] must be of type string.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['protocol'] = this['protocol'];
  }

  if (this['host'] !== null && this['host'] !== undefined) {
    if (typeof this['host'].valueOf() !== 'string') {
      throw new Error('this[\'host\'] must be of type string.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['host'] = this['host'];
  }

  if (this['path'] !== null && this['path'] !== undefined) {
    if (typeof this['path'].valueOf() !== 'string') {
      throw new Error('this[\'path\'] must be of type string.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['path'] = this['path'];
  }

  if (this['interval'] !== null && this['interval'] !== undefined) {
    if (typeof this['interval'] !== 'number') {
      throw new Error('this[\'interval\'] must be of type number.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['interval'] = this['interval'];
  }

  if (this['timeout'] !== null && this['timeout'] !== undefined) {
    if (typeof this['timeout'] !== 'number') {
      throw new Error('this[\'timeout\'] must be of type number.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['timeout'] = this['timeout'];
  }

  if (this['unhealthyThreshold'] !== null && this['unhealthyThreshold'] !== undefined) {
    if (typeof this['unhealthyThreshold'] !== 'number') {
      throw new Error('this[\'unhealthyThreshold\'] must be of type number.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['unhealthyThreshold'] = this['unhealthyThreshold'];
  }

  if (this['provisioningState'] !== null && this['provisioningState'] !== undefined) {
    if (typeof this['provisioningState'].valueOf() !== 'string') {
      throw new Error('this[\'provisioningState\'] must be of type string.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['provisioningState'] = this['provisioningState'];
  }

  return payload;
};

/**
 * Deserialize the instance to ApplicationGatewayProbe schema
 *
 * @param {JSON} instance
 *
 */
ApplicationGatewayProbe.prototype.deserialize = function (instance) {
  ApplicationGatewayProbe['super_'].prototype.deserialize.call(this, instance);
  if (instance) {
    if (instance['name'] !== undefined) {
      this['name'] = instance['name'];
    }

    if (instance['etag'] !== undefined) {
      this['etag'] = instance['etag'];
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['protocol'] !== undefined) {
        this['protocol'] = instance['properties']['protocol'];
      }
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['host'] !== undefined) {
        this['host'] = instance['properties']['host'];
      }
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['path'] !== undefined) {
        this['path'] = instance['properties']['path'];
      }
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['interval'] !== undefined) {
        this['interval'] = instance['properties']['interval'];
      }
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['timeout'] !== undefined) {
        this['timeout'] = instance['properties']['timeout'];
      }
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['unhealthyThreshold'] !== undefined) {
        this['unhealthyThreshold'] = instance['properties']['unhealthyThreshold'];
      }
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['provisioningState'] !== undefined) {
        this['provisioningState'] = instance['properties']['provisioningState'];
      }
    }
  }

  return this;
};

module.exports = ApplicationGatewayProbe;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure";
import * as moment from "moment";

export {

  BaseResource,
  CloudError
};

export interface ErrorDetail {
  code?: string;
  message?: string;
  target?: string;
}

export interface ErrorModel {
  code?: string;
  message?: string;
  target?: string;
  details?: ErrorDetail[];
}

export interface AzureSku {
}

export interface WorkspaceCollection {
  /**
   * Resource id
  */
  id?: string;
  /**
   * Workspace collection name
  */
  name?: string;
  /**
   * Resource type
  */
  type?: string;
  /**
   * Azure location
  */
  location?: string;
  tags?: { [propertyName: string]: string };
  /**
   * Properties
  */
  properties?: any;
}

export interface Workspace {
  /**
   * Workspace id
  */
  id?: string;
  /**
   * Workspace name
  */
  name?: string;
  /**
   * Resource type
  */
  type?: string;
  /**
   * Property bag
  */
  properties?: any;
}

export interface Display {
  /**
   * The localized friendly form of the resource provider name. This form is also expected to
   * include the publisher/company responsible. Use Title Casing. Begin with "Microsoft" for 1st
   * party services.
  */
  provider?: string;
  /**
   * The localized friendly form of the resource type related to this action/operation. This form
   * should match the public documentation for the resource provider. Use Title Casing. For
   * examples, refer to the "name" section.
  */
  resource?: string;
  /**
   * The localized friendly name for the operation as shown to the user. This name should be
   * concise (to fit in drop downs), but clear (self-documenting). Use Title Casing and include the
   * entity/resource to which it applies.
  */
  operation?: string;
  /**
   * The localized friendly description for the operation as shown to the user. This description
   * should be thorough, yet concise. It will be used in tool-tips and detailed views.
  */
  description?: string;
  /**
   * The intended executor of the operation; governs the display of the operation in the RBAC UX
   * and the audit logs UX. Default value is 'user,system'
  */
  origin?: string;
}

export interface Operation {
  /**
   * The name of the operation being performed on this particular object. This name should match
   * the action name that appears in RBAC / the event service.
  */
  name?: string;
  display?: Display;
}

export interface OperationList {
  value?: Operation[];
}

export interface WorkspaceCollectionAccessKeys {
  /**
   * Access key 1
  */
  key1?: string;
  /**
   * Access key 2
  */
  key2?: string;
}

export interface WorkspaceCollectionAccessKey {
  /**
   * Key name. Possible values include: 'key1', 'key2'
  */
  keyName?: string;
}

export interface CreateWorkspaceCollectionRequest {
  /**
   * Azure location
  */
  location?: string;
  tags?: { [propertyName: string]: string };
}

export interface UpdateWorkspaceCollectionRequest {
  tags?: { [propertyName: string]: string };
}

export interface CheckNameRequest {
  /**
   * Workspace collection name
  */
  name?: string;
  /**
   * Resource type
  */
  type?: string;
}

export interface CheckNameResponse {
  /**
   * Specifies a Boolean value that indicates whether the specified Power BI Workspace Collection
   * name is available to use.
  */
  nameAvailable?: boolean;
  /**
   * Reason why the workspace collection name cannot be used. Possible values include:
   * 'Unavailable', 'Invalid'
  */
  reason?: string;
  /**
   * Message indicating an unavailable name due to a conflict, or a description of the naming rules
   * that are violated.
  */
  message?: string;
}

export interface MigrateWorkspaceCollectionRequest {
  /**
   * Name of the resource group the Power BI workspace collections will be migrated to.
  */
  targetResourceGroup?: string;
  resources?: string[];
}

export interface WorkspaceCollectionList extends Array<WorkspaceCollection> {
}

export interface WorkspaceList extends Array<Workspace> {
}

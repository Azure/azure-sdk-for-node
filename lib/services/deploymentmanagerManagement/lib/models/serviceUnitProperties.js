/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Defines the properties of a service unit.
 *
 */
class ServiceUnitProperties {
  /**
   * Create a ServiceUnitProperties.
   * @property {string} targetResourceGroup The Azure Resource Group to which
   * the resources in the service unit belong to or should be deployed to.
   * @property {string} deploymentMode Describes the type of ARM deployment to
   * be performed on the resource. Possible values include: 'Incremental',
   * 'Complete'
   * @property {object} [artifacts] The artifacts for the service unit.
   * @property {string} [artifacts.templateUri] The full URI of the ARM
   * template file with the SAS token.
   * @property {string} [artifacts.parametersUri] The full URI of the ARM
   * parameters file with the SAS token.
   * @property {string} [artifacts.templateArtifactSourceRelativePath] The path
   * to the ARM template file relative to the artifact source.
   * @property {string} [artifacts.parametersArtifactSourceRelativePath] The
   * path to the ARM parameters file relative to the artifact source.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ServiceUnitProperties
   *
   * @returns {object} metadata of ServiceUnitProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ServiceUnitProperties',
      type: {
        name: 'Composite',
        className: 'ServiceUnitProperties',
        modelProperties: {
          targetResourceGroup: {
            required: true,
            serializedName: 'targetResourceGroup',
            type: {
              name: 'String'
            }
          },
          deploymentMode: {
            required: true,
            serializedName: 'deploymentMode',
            type: {
              name: 'Enum',
              allowedValues: [ 'Incremental', 'Complete' ]
            }
          },
          artifacts: {
            required: false,
            serializedName: 'artifacts',
            type: {
              name: 'Composite',
              className: 'ServiceUnitArtifacts'
            }
          }
        }
      }
    };
  }
}

module.exports = ServiceUnitProperties;

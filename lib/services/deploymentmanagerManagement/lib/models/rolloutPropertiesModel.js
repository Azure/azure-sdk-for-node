/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Defines the properties of a rollout.
 *
 */
class RolloutPropertiesModel {
  /**
   * Create a RolloutPropertiesModel.
   * @property {string} [status] The current status of the rollout.
   * @property {number} [totalRetryAttempts] The cardinal count of total number
   * of retries performed on the rollout at a given time.
   * @property {object} [operationInfo] Operational information of the rollout.
   * @property {number} [operationInfo.retryAttempt] The ordinal count of the
   * number of retry attempts on a rollout. 0 if no retries of the rollout have
   * been performed. If the rollout is updated with a PUT, this count is reset
   * to 0.
   * @property {boolean} [operationInfo.skipSucceededOnRetry] True, if all
   * steps that succeeded on the previous run/attempt were chosen to be skipped
   * in this retry attempt. False, otherwise.
   * @property {date} [operationInfo.startTime] The start time of the rollout
   * in UTC.
   * @property {date} [operationInfo.endTime] The start time of the rollout in
   * UTC. This property will not be set if the rollout has not completed yet.
   * @property {object} [operationInfo.error] The detailed error information
   * for any failure.
   * @property {string} [operationInfo.error.code] Error code string.
   * @property {string} [operationInfo.error.message] Descriptive error
   * information.
   * @property {string} [operationInfo.error.target] Error target
   * @property {array} [operationInfo.error.details] More detailed error
   * information.
   * @property {array} [services] The detailed information on the services
   * being deployed.
   */
  constructor() {
  }

  /**
   * Defines the metadata of RolloutPropertiesModel
   *
   * @returns {object} metadata of RolloutPropertiesModel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RolloutProperties',
      type: {
        name: 'Composite',
        className: 'RolloutPropertiesModel',
        modelProperties: {
          status: {
            required: false,
            readOnly: true,
            serializedName: 'status',
            type: {
              name: 'String'
            }
          },
          totalRetryAttempts: {
            required: false,
            readOnly: true,
            serializedName: 'totalRetryAttempts',
            type: {
              name: 'Number'
            }
          },
          operationInfo: {
            required: false,
            readOnly: true,
            serializedName: 'operationInfo',
            type: {
              name: 'Composite',
              className: 'RolloutOperationInfo'
            }
          },
          services: {
            required: false,
            readOnly: true,
            serializedName: 'services',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ServiceElementType',
                  type: {
                    name: 'Composite',
                    className: 'Service'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = RolloutPropertiesModel;

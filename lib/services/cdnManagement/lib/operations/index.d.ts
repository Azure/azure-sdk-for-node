/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Profiles
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the CdnManagementClient.
 */
export interface Profiles {

    /**
     * Lists all of the CDN profiles within an Azure subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProfileListResult>): void;
    list(callback: ServiceCallback<models.ProfileListResult>): void;

    /**
     * Lists all of the CDN profiles within a resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProfileListResult>): void;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.ProfileListResult>): void;

    /**
     * Gets a CDN profile with the specified profile name under the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceGroupName: string, profileName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Profile>): void;
    get(resourceGroupName: string, profileName: string, callback: ServiceCallback<models.Profile>): void;

    /**
     * Creates a new CDN profile with a profile name under the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {object} profile Profile properties needed to create a new profile.
     *
     * @param {object} profile.sku The pricing tier (defines a CDN provider,
     * feature list and rate) of the CDN profile.
     *
     * @param {string} [profile.sku.name] Name of the pricing tier. Possible values
     * include: 'Standard_Verizon', 'Premium_Verizon', 'Custom_Verizon',
     * 'Standard_Akamai', 'Standard_ChinaCdn'
     *
     * @param {string} profile.location Resource location.
     *
     * @param {object} [profile.tags] Resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    create(resourceGroupName: string, profileName: string, profile: models.Profile, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Profile>): void;
    create(resourceGroupName: string, profileName: string, profile: models.Profile, callback: ServiceCallback<models.Profile>): void;

    /**
     * Updates an existing CDN profile with the specified profile name under the
     * specified subscription and resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {object} tags Profile tags
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    update(resourceGroupName: string, profileName: string, tags: { [propertyName: string]: string }, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Profile>): void;
    update(resourceGroupName: string, profileName: string, tags: { [propertyName: string]: string }, callback: ServiceCallback<models.Profile>): void;

    /**
     * Deletes an existing CDN profile with the specified parameters. Deleting a
     * profile will result in the deletion of all of the sub-resources including
     * endpoints, origins and custom domains.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(resourceGroupName: string, profileName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, profileName: string, callback: ServiceCallback<void>): void;

    /**
     * Generates a dynamic SSO URI used to sign in to the CDN supplemental portal.
     * Supplemnetal portal is used to configure advanced feature capabilities that
     * are not yet available in the Azure portal, such as core reports in a
     * standard profile; rules engine, advanced HTTP reports, and real-time stats
     * and alerts in a premium profile. The SSO URI changes approximately every 10
     * minutes.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    generateSsoUri(resourceGroupName: string, profileName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SsoUri>): void;
    generateSsoUri(resourceGroupName: string, profileName: string, callback: ServiceCallback<models.SsoUri>): void;

    /**
     * Checks the quota and actual usage of endpoints under the given CDN profile.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listResourceUsage(resourceGroupName: string, profileName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ResourceUsageListResult>): void;
    listResourceUsage(resourceGroupName: string, profileName: string, callback: ServiceCallback<models.ResourceUsageListResult>): void;

    /**
     * Creates a new CDN profile with a profile name under the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {object} profile Profile properties needed to create a new profile.
     *
     * @param {object} profile.sku The pricing tier (defines a CDN provider,
     * feature list and rate) of the CDN profile.
     *
     * @param {string} [profile.sku.name] Name of the pricing tier. Possible values
     * include: 'Standard_Verizon', 'Premium_Verizon', 'Custom_Verizon',
     * 'Standard_Akamai', 'Standard_ChinaCdn'
     *
     * @param {string} profile.location Resource location.
     *
     * @param {object} [profile.tags] Resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginCreate(resourceGroupName: string, profileName: string, profile: models.Profile, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Profile>): void;
    beginCreate(resourceGroupName: string, profileName: string, profile: models.Profile, callback: ServiceCallback<models.Profile>): void;

    /**
     * Updates an existing CDN profile with the specified profile name under the
     * specified subscription and resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {object} tags Profile tags
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginUpdate(resourceGroupName: string, profileName: string, tags: { [propertyName: string]: string }, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Profile>): void;
    beginUpdate(resourceGroupName: string, profileName: string, tags: { [propertyName: string]: string }, callback: ServiceCallback<models.Profile>): void;

    /**
     * Deletes an existing CDN profile with the specified parameters. Deleting a
     * profile will result in the deletion of all of the sub-resources including
     * endpoints, origins and custom domains.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginDeleteMethod(resourceGroupName: string, profileName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, profileName: string, callback: ServiceCallback<void>): void;

    /**
     * Lists all of the CDN profiles within an Azure subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProfileListResult>): void;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ProfileListResult>): void;

    /**
     * Lists all of the CDN profiles within a resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProfileListResult>): void;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.ProfileListResult>): void;

    /**
     * Checks the quota and actual usage of endpoints under the given CDN profile.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listResourceUsageNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ResourceUsageListResult>): void;
    listResourceUsageNext(nextPageLink: string, callback: ServiceCallback<models.ResourceUsageListResult>): void;
}

/**
 * @class
 * Endpoints
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the CdnManagementClient.
 */
export interface Endpoints {

    /**
     * Lists existing CDN endpoints.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByProfile(resourceGroupName: string, profileName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EndpointListResult>): void;
    listByProfile(resourceGroupName: string, profileName: string, callback: ServiceCallback<models.EndpointListResult>): void;

    /**
     * Gets an existing CDN endpoint with the specified endpoint name under the
     * specified subscription, resource group and profile.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    get(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Creates a new CDN endpoint with the specified endpoint name under the
     * specified subscription, resource group and profile.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {object} endpoint Endpoint properties
     *
     * @param {string} [endpoint.originHostHeader] The host header CDN sends along
     * with content requests to origin. The default value is the host name of the
     * origin.
     *
     * @param {string} [endpoint.originPath] The path used when CDN sends request
     * to origin.
     *
     * @param {array} [endpoint.contentTypesToCompress] List of content types on
     * which compression applies. The value should be a valid MIME type.
     *
     * @param {boolean} [endpoint.isCompressionEnabled] Indicates whether content
     * compression is enabled on CDN. Default value is false. If compression is
     * enabled, content will be served as compressed if user requests for a
     * compressed version. Content won't be compressed on CDN when requested
     * content is smaller than 1 byte or larger than 1 MB.
     *
     * @param {boolean} [endpoint.isHttpAllowed] Indicates whether HTTP traffic is
     * allowed on the endpoint. Default value is true. At least one protocol (HTTP
     * or HTTPS) must be allowed.
     *
     * @param {boolean} [endpoint.isHttpsAllowed] Indicates whether HTTPS traffic
     * is allowed on the endpoint. Default value is true. At least one protocol
     * (HTTP or HTTPS) must be allowed.
     *
     * @param {string} [endpoint.queryStringCachingBehavior] Defines the query
     * string caching behavior. Possible values include: 'IgnoreQueryString',
     * 'BypassCaching', 'UseQueryString', 'NotSet'
     *
     * @param {string} [endpoint.optimizationType] Customer can specify what
     * scenario they want this CDN endpoint to optimize, e.g. Download, Media
     * services. With this information we can apply scenario driven optimization.
     *
     * @param {array} [endpoint.geoFilters] List of rules defining user geo access
     * within a CDN endpoint. Each geo filter defines an acess rule to a specified
     * path or content, e.g. block APAC for path /pictures/
     *
     * @param {array} endpoint.origins The source of the content being delivered
     * via CDN.
     *
     * @param {string} endpoint.location Resource location.
     *
     * @param {object} [endpoint.tags] Resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    create(resourceGroupName: string, profileName: string, endpointName: string, endpoint: models.Endpoint, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    create(resourceGroupName: string, profileName: string, endpointName: string, endpoint: models.Endpoint, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Updates an existing CDN endpoint with the specified endpoint name under the
     * specified subscription, resource group and profile. Only tags and Origin
     * HostHeader can be updated after creating an endpoint. To update origins, use
     * the Update Origin operation. To update custom domains, use the Update Custom
     * Domain operation.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {object} endpointUpdateProperties Endpoint update properties
     *
     * @param {object} [endpointUpdateProperties.tags] Endpoint tags.
     *
     * @param {string} [endpointUpdateProperties.originHostHeader] The host header
     * CDN sends along with content requests to origin. The default value is the
     * host name of the origin.
     *
     * @param {string} [endpointUpdateProperties.originPath] The path used when CDN
     * sends request to origin.
     *
     * @param {array} [endpointUpdateProperties.contentTypesToCompress] List of
     * content types on which compression applies. The value should be a valid MIME
     * type.
     *
     * @param {boolean} [endpointUpdateProperties.isCompressionEnabled] Indicates
     * whether content compression is enabled on CDN. Default value is false. If
     * compression is enabled, content will be served as compressed if user
     * requests for a compressed version. Content won't be compressed on CDN when
     * requested content is smaller than 1 byte or larger than 1 MB.
     *
     * @param {boolean} [endpointUpdateProperties.isHttpAllowed] Indicates whether
     * HTTP traffic is allowed on the endpoint. Default value is true. At least one
     * protocol (HTTP or HTTPS) must be allowed.
     *
     * @param {boolean} [endpointUpdateProperties.isHttpsAllowed] Indicates whether
     * HTTPS traffic is allowed on the endpoint. Default value is true. At least
     * one protocol (HTTP or HTTPS) must be allowed.
     *
     * @param {string} [endpointUpdateProperties.queryStringCachingBehavior]
     * Defines the query string caching behavior. Possible values include:
     * 'IgnoreQueryString', 'BypassCaching', 'UseQueryString', 'NotSet'
     *
     * @param {string} [endpointUpdateProperties.optimizationType] Customer can
     * specify what scenario they want this CDN endpoint to optimize, e.g.
     * Download, Media services. With this information we can apply scenario driven
     * optimization.
     *
     * @param {array} [endpointUpdateProperties.geoFilters] List of rules defining
     * user geo access within a CDN endpoint. Each geo filter defines an acess rule
     * to a specified path or content, e.g. block APAC for path /pictures/
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    update(resourceGroupName: string, profileName: string, endpointName: string, endpointUpdateProperties: models.EndpointUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    update(resourceGroupName: string, profileName: string, endpointName: string, endpointUpdateProperties: models.EndpointUpdateParameters, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Deletes an existing CDN endpoint with the specified endpoint name under the
     * specified subscription, resource group and profile.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<void>): void;

    /**
     * Starts an existing CDN endpoint that is on a stopped state.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    start(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    start(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Stops an existing running CDN endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    stop(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    stop(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Removes a content from CDN.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {array} contentPaths The path to the content to be purged. Can
     * describe a file path or a wild card directory.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    purgeContent(resourceGroupName: string, profileName: string, endpointName: string, contentPaths: string[], options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    purgeContent(resourceGroupName: string, profileName: string, endpointName: string, contentPaths: string[], callback: ServiceCallback<void>): void;

    /**
     * Pre-loads a content to CDN. Available for Verizon Profiles.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {array} contentPaths The path to the content to be loaded. Path
     * should be a relative file URL of the origin.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    loadContent(resourceGroupName: string, profileName: string, endpointName: string, contentPaths: string[], options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    loadContent(resourceGroupName: string, profileName: string, endpointName: string, contentPaths: string[], callback: ServiceCallback<void>): void;

    /**
     * Validates the custom domain mapping to ensure it maps to the correct CDN
     * endpoint in DNS.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {string} hostName The host name of the custom domain. Must be a
     * domain name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    validateCustomDomain(resourceGroupName: string, profileName: string, endpointName: string, hostName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ValidateCustomDomainOutput>): void;
    validateCustomDomain(resourceGroupName: string, profileName: string, endpointName: string, hostName: string, callback: ServiceCallback<models.ValidateCustomDomainOutput>): void;

    /**
     * Checks the quota and usage of geo filters and custom domains under the given
     * endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listResourceUsage(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ResourceUsageListResult>): void;
    listResourceUsage(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<models.ResourceUsageListResult>): void;

    /**
     * Creates a new CDN endpoint with the specified endpoint name under the
     * specified subscription, resource group and profile.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {object} endpoint Endpoint properties
     *
     * @param {string} [endpoint.originHostHeader] The host header CDN sends along
     * with content requests to origin. The default value is the host name of the
     * origin.
     *
     * @param {string} [endpoint.originPath] The path used when CDN sends request
     * to origin.
     *
     * @param {array} [endpoint.contentTypesToCompress] List of content types on
     * which compression applies. The value should be a valid MIME type.
     *
     * @param {boolean} [endpoint.isCompressionEnabled] Indicates whether content
     * compression is enabled on CDN. Default value is false. If compression is
     * enabled, content will be served as compressed if user requests for a
     * compressed version. Content won't be compressed on CDN when requested
     * content is smaller than 1 byte or larger than 1 MB.
     *
     * @param {boolean} [endpoint.isHttpAllowed] Indicates whether HTTP traffic is
     * allowed on the endpoint. Default value is true. At least one protocol (HTTP
     * or HTTPS) must be allowed.
     *
     * @param {boolean} [endpoint.isHttpsAllowed] Indicates whether HTTPS traffic
     * is allowed on the endpoint. Default value is true. At least one protocol
     * (HTTP or HTTPS) must be allowed.
     *
     * @param {string} [endpoint.queryStringCachingBehavior] Defines the query
     * string caching behavior. Possible values include: 'IgnoreQueryString',
     * 'BypassCaching', 'UseQueryString', 'NotSet'
     *
     * @param {string} [endpoint.optimizationType] Customer can specify what
     * scenario they want this CDN endpoint to optimize, e.g. Download, Media
     * services. With this information we can apply scenario driven optimization.
     *
     * @param {array} [endpoint.geoFilters] List of rules defining user geo access
     * within a CDN endpoint. Each geo filter defines an acess rule to a specified
     * path or content, e.g. block APAC for path /pictures/
     *
     * @param {array} endpoint.origins The source of the content being delivered
     * via CDN.
     *
     * @param {string} endpoint.location Resource location.
     *
     * @param {object} [endpoint.tags] Resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginCreate(resourceGroupName: string, profileName: string, endpointName: string, endpoint: models.Endpoint, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    beginCreate(resourceGroupName: string, profileName: string, endpointName: string, endpoint: models.Endpoint, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Updates an existing CDN endpoint with the specified endpoint name under the
     * specified subscription, resource group and profile. Only tags and Origin
     * HostHeader can be updated after creating an endpoint. To update origins, use
     * the Update Origin operation. To update custom domains, use the Update Custom
     * Domain operation.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {object} endpointUpdateProperties Endpoint update properties
     *
     * @param {object} [endpointUpdateProperties.tags] Endpoint tags.
     *
     * @param {string} [endpointUpdateProperties.originHostHeader] The host header
     * CDN sends along with content requests to origin. The default value is the
     * host name of the origin.
     *
     * @param {string} [endpointUpdateProperties.originPath] The path used when CDN
     * sends request to origin.
     *
     * @param {array} [endpointUpdateProperties.contentTypesToCompress] List of
     * content types on which compression applies. The value should be a valid MIME
     * type.
     *
     * @param {boolean} [endpointUpdateProperties.isCompressionEnabled] Indicates
     * whether content compression is enabled on CDN. Default value is false. If
     * compression is enabled, content will be served as compressed if user
     * requests for a compressed version. Content won't be compressed on CDN when
     * requested content is smaller than 1 byte or larger than 1 MB.
     *
     * @param {boolean} [endpointUpdateProperties.isHttpAllowed] Indicates whether
     * HTTP traffic is allowed on the endpoint. Default value is true. At least one
     * protocol (HTTP or HTTPS) must be allowed.
     *
     * @param {boolean} [endpointUpdateProperties.isHttpsAllowed] Indicates whether
     * HTTPS traffic is allowed on the endpoint. Default value is true. At least
     * one protocol (HTTP or HTTPS) must be allowed.
     *
     * @param {string} [endpointUpdateProperties.queryStringCachingBehavior]
     * Defines the query string caching behavior. Possible values include:
     * 'IgnoreQueryString', 'BypassCaching', 'UseQueryString', 'NotSet'
     *
     * @param {string} [endpointUpdateProperties.optimizationType] Customer can
     * specify what scenario they want this CDN endpoint to optimize, e.g.
     * Download, Media services. With this information we can apply scenario driven
     * optimization.
     *
     * @param {array} [endpointUpdateProperties.geoFilters] List of rules defining
     * user geo access within a CDN endpoint. Each geo filter defines an acess rule
     * to a specified path or content, e.g. block APAC for path /pictures/
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginUpdate(resourceGroupName: string, profileName: string, endpointName: string, endpointUpdateProperties: models.EndpointUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    beginUpdate(resourceGroupName: string, profileName: string, endpointName: string, endpointUpdateProperties: models.EndpointUpdateParameters, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Deletes an existing CDN endpoint with the specified endpoint name under the
     * specified subscription, resource group and profile.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginDeleteMethod(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<void>): void;

    /**
     * Starts an existing CDN endpoint that is on a stopped state.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginStart(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    beginStart(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Stops an existing running CDN endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginStop(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Endpoint>): void;
    beginStop(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<models.Endpoint>): void;

    /**
     * Removes a content from CDN.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {array} contentPaths The path to the content to be purged. Can
     * describe a file path or a wild card directory.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginPurgeContent(resourceGroupName: string, profileName: string, endpointName: string, contentPaths: string[], options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    beginPurgeContent(resourceGroupName: string, profileName: string, endpointName: string, contentPaths: string[], callback: ServiceCallback<void>): void;

    /**
     * Pre-loads a content to CDN. Available for Verizon Profiles.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {array} contentPaths The path to the content to be loaded. Path
     * should be a relative file URL of the origin.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginLoadContent(resourceGroupName: string, profileName: string, endpointName: string, contentPaths: string[], options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    beginLoadContent(resourceGroupName: string, profileName: string, endpointName: string, contentPaths: string[], callback: ServiceCallback<void>): void;

    /**
     * Lists existing CDN endpoints.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByProfileNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EndpointListResult>): void;
    listByProfileNext(nextPageLink: string, callback: ServiceCallback<models.EndpointListResult>): void;

    /**
     * Checks the quota and usage of geo filters and custom domains under the given
     * endpoint.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listResourceUsageNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ResourceUsageListResult>): void;
    listResourceUsageNext(nextPageLink: string, callback: ServiceCallback<models.ResourceUsageListResult>): void;
}

/**
 * @class
 * Origins
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the CdnManagementClient.
 */
export interface Origins {

    /**
     * Lists all of the existing origins within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByEndpoint(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OriginListResult>): void;
    listByEndpoint(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<models.OriginListResult>): void;

    /**
     * Gets an existing origin within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {string} originName Name of the origin which is unique within the
     * endpoint.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceGroupName: string, profileName: string, endpointName: string, originName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Origin>): void;
    get(resourceGroupName: string, profileName: string, endpointName: string, originName: string, callback: ServiceCallback<models.Origin>): void;

    /**
     * Updates an existing origin within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {string} originName Name of the origin which is unique within the
     * endpoint.
     *
     * @param {object} originUpdateProperties Origin properties
     *
     * @param {string} [originUpdateProperties.hostName] The address of the origin.
     * Domain names, IPv4 addresses, and IPv6 addresses are supported.
     *
     * @param {number} [originUpdateProperties.httpPort] The value of the HTTP
     * port. Must be between 1 and 65535.
     *
     * @param {number} [originUpdateProperties.httpsPort] The value of the HTTPS
     * port. Must be between 1 and 65535.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    update(resourceGroupName: string, profileName: string, endpointName: string, originName: string, originUpdateProperties: models.OriginUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Origin>): void;
    update(resourceGroupName: string, profileName: string, endpointName: string, originName: string, originUpdateProperties: models.OriginUpdateParameters, callback: ServiceCallback<models.Origin>): void;

    /**
     * Updates an existing origin within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {string} originName Name of the origin which is unique within the
     * endpoint.
     *
     * @param {object} originUpdateProperties Origin properties
     *
     * @param {string} [originUpdateProperties.hostName] The address of the origin.
     * Domain names, IPv4 addresses, and IPv6 addresses are supported.
     *
     * @param {number} [originUpdateProperties.httpPort] The value of the HTTP
     * port. Must be between 1 and 65535.
     *
     * @param {number} [originUpdateProperties.httpsPort] The value of the HTTPS
     * port. Must be between 1 and 65535.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginUpdate(resourceGroupName: string, profileName: string, endpointName: string, originName: string, originUpdateProperties: models.OriginUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Origin>): void;
    beginUpdate(resourceGroupName: string, profileName: string, endpointName: string, originName: string, originUpdateProperties: models.OriginUpdateParameters, callback: ServiceCallback<models.Origin>): void;

    /**
     * Lists all of the existing origins within an endpoint.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByEndpointNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OriginListResult>): void;
    listByEndpointNext(nextPageLink: string, callback: ServiceCallback<models.OriginListResult>): void;
}

/**
 * @class
 * CustomDomains
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the CdnManagementClient.
 */
export interface CustomDomains {

    /**
     * Lists all of the existing custom domains within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByEndpoint(resourceGroupName: string, profileName: string, endpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomDomainListResult>): void;
    listByEndpoint(resourceGroupName: string, profileName: string, endpointName: string, callback: ServiceCallback<models.CustomDomainListResult>): void;

    /**
     * Gets an exisitng custom domain within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {string} customDomainName Name of the custom domain within an
     * endpoint.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomDomain>): void;
    get(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, callback: ServiceCallback<models.CustomDomain>): void;

    /**
     * Creates a new custom domain within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {string} customDomainName Name of the custom domain within an
     * endpoint.
     *
     * @param {string} hostName The host name of the custom domain. Must be a
     * domain name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    create(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, hostName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomDomain>): void;
    create(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, hostName: string, callback: ServiceCallback<models.CustomDomain>): void;

    /**
     * Deletes an existing custom domain within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {string} customDomainName Name of the custom domain within an
     * endpoint.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomDomain>): void;
    deleteMethod(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, callback: ServiceCallback<models.CustomDomain>): void;

    /**
     * Creates a new custom domain within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {string} customDomainName Name of the custom domain within an
     * endpoint.
     *
     * @param {string} hostName The host name of the custom domain. Must be a
     * domain name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginCreate(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, hostName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomDomain>): void;
    beginCreate(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, hostName: string, callback: ServiceCallback<models.CustomDomain>): void;

    /**
     * Deletes an existing custom domain within an endpoint.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} profileName Name of the CDN profile which is unique within
     * the resource group.
     *
     * @param {string} endpointName Name of the endpoint under the profile which is
     * unique globally.
     *
     * @param {string} customDomainName Name of the custom domain within an
     * endpoint.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginDeleteMethod(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomDomain>): void;
    beginDeleteMethod(resourceGroupName: string, profileName: string, endpointName: string, customDomainName: string, callback: ServiceCallback<models.CustomDomain>): void;

    /**
     * Lists all of the existing custom domains within an endpoint.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByEndpointNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CustomDomainListResult>): void;
    listByEndpointNext(nextPageLink: string, callback: ServiceCallback<models.CustomDomainListResult>): void;
}

/**
 * @class
 * EdgeNodes
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the CdnManagementClient.
 */
export interface EdgeNodes {

    /**
     * Lists all the edge nodes of a CDN service.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EdgenodeResult>): void;
    list(callback: ServiceCallback<models.EdgenodeResult>): void;
}

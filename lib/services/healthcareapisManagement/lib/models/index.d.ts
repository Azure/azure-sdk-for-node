/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure";
import * as moment from "moment";

export {

  BaseResource,
  CloudError
};

/**
 * An access policy entry.
 */
export interface ServiceAccessPolicyEntry {
  /**
   * An object ID that is allowed access to the FHIR service.
   */
  objectId: string;
}

/**
 * The settings for the Cosmos DB database backing the service.
 */
export interface ServiceCosmosDbConfigurationInfo {
  /**
   * The provisioned throughput for the backing database.
   */
  offerThroughput?: number;
}

/**
 * The properties of a service instance.
 */
export interface ServicesProperties {
  /**
   * The provisioning state. Possible values include: 'Deleting', 'Succeeded', 'Creating',
   * 'Accepted', 'Verifying', 'Updating', 'Failed', 'Canceled', 'Deprovisioned'
   */
  readonly provisioningState?: string;
  /**
   * The access policies of the service instance.
   */
  accessPolicies: ServiceAccessPolicyEntry[];
  /**
   * The settings for the Cosmos DB database backing the service.
   */
  cosmosDbConfiguration?: ServiceCosmosDbConfigurationInfo;
}

/**
 * The common properties of a service.
 */
export interface Resource extends BaseResource {
  /**
   * The resource identifier.
   */
  readonly id?: string;
  /**
   * The resource name.
   */
  readonly name?: string;
  /**
   * The resource type.
   */
  readonly type?: string;
  /**
   * The resource location.
   */
  location: string;
  /**
   * The resource tags.
   */
  tags?: { [propertyName: string]: string };
  /**
   * An etag associated with the resource, used for optimistic concurrency when editing it.
   */
  etag?: string;
}

/**
 * The description of the service.
 */
export interface ServicesDescription extends Resource {
  /**
   * The common properties of a service.
   */
  properties?: ServicesProperties;
}

/**
 * The description of the service.
 */
export interface ServicesPatchDescription {
  /**
   * Instance tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Error details.
 */
export interface ErrorDetailsInternal {
  /**
   * The error code.
   */
  readonly code?: string;
  /**
   * The error message.
   */
  readonly message?: string;
  /**
   * The target of the particular error.
   */
  readonly target?: string;
}

/**
 * Error details.
 */
export interface ErrorDetails {
  /**
   * Object containing error details.
   */
  error?: ErrorDetailsInternal;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.HealthcareApis
   */
  readonly provider?: string;
  /**
   * Resource Type: Services
   */
  readonly resource?: string;
  /**
   * Name of the operation
   */
  readonly operation?: string;
  /**
   * Friendly description for the operation,
   */
  readonly description?: string;
}

/**
 * Service REST API operation.
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{read | write | action | delete}
   */
  readonly name?: string;
  /**
   * Default value is 'user,system'.
   */
  readonly origin?: string;
  /**
   * The information displayed about the operation.
   */
  display?: OperationDisplay;
}

/**
 * Input values.
 */
export interface CheckNameAvailabilityParameters {
  /**
   * The name of the service instance to check.
   */
  name: string;
  /**
   * The fully qualified resource type which includes provider namespace.
   */
  type: string;
}

/**
 * The properties indicating whether a given service name is available.
 */
export interface ServicesNameAvailabilityInfo {
  /**
   * The value which indicates whether the provided name is available.
   */
  readonly nameAvailable?: boolean;
  /**
   * The reason for unavailability. Possible values include: 'Invalid', 'AlreadyExists'
   */
  readonly reason?: string;
  /**
   * The detailed reason message.
   */
  message?: string;
}

/**
 * Input values.
 */
export interface MoveResourcesParameters {
  /**
   * The target subscription to move resources to.
   */
  targetSubscriptionId: string;
  /**
   * The target resource group to move resources to.
   */
  targetResourceGroupName: string;
  /**
   * The list of resources to move.
   */
  resourceIdsToMove: string[];
}

/**
 * The properties indicating the operation result of an operation on a service.
 */
export interface OperationResultsDescription {
  /**
   * The ID of the operation returned.
   */
  readonly id?: string;
  /**
   * The name of the operation result.
   */
  readonly name?: string;
  /**
   * The status of the operation being performed. Possible values include: 'Canceled', 'Succeeded',
   * 'Failed', 'Requested', 'Running'
   */
  readonly status?: string;
  /**
   * The time that the operation was started.
   */
  readonly startTime?: string;
  /**
   * Additional properties of the operation result.
   */
  properties?: any;
}

/**
 * A list of service description objects with a next link.
 */
export interface ServicesDescriptionListResult extends Array<ServicesDescription> {
  /**
   * The link used to get the next page of service description objects.
   */
  nextLink?: string;
}

/**
 * A list of service operations. It contains a list of operations and a URL link to get the next
 * set of results.
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * The link used to get the next page of service description objects.
   */
  nextLink?: string;
}

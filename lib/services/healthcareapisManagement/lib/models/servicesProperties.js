/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The properties of a service instance.
 *
 */
class ServicesProperties {
  /**
   * Create a ServicesProperties.
   * @property {string} [provisioningState] The provisioning state. Possible
   * values include: 'Deleting', 'Succeeded', 'Creating', 'Accepted',
   * 'Verifying', 'Updating', 'Failed', 'Canceled', 'Deprovisioned'
   * @property {array} accessPolicies The access policies of the service
   * instance.
   * @property {object} [cosmosDbConfiguration] The settings for the Cosmos DB
   * database backing the service.
   * @property {number} [cosmosDbConfiguration.offerThroughput] The provisioned
   * throughput for the backing database.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ServicesProperties
   *
   * @returns {object} metadata of ServicesProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ServicesProperties',
      type: {
        name: 'Composite',
        className: 'ServicesProperties',
        modelProperties: {
          provisioningState: {
            required: false,
            readOnly: true,
            serializedName: 'provisioningState',
            type: {
              name: 'String'
            }
          },
          accessPolicies: {
            required: true,
            serializedName: 'accessPolicies',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ServiceAccessPolicyEntryElementType',
                  type: {
                    name: 'Composite',
                    className: 'ServiceAccessPolicyEntry'
                  }
              }
            }
          },
          cosmosDbConfiguration: {
            required: false,
            serializedName: 'cosmosDbConfiguration',
            type: {
              name: 'Composite',
              className: 'ServiceCosmosDbConfigurationInfo'
            }
          }
        }
      }
    };
  }
}

module.exports = ServicesProperties;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Authentication mechanism for IoT devices.
 *
 */
class Authentication {
  /**
   * Create a Authentication.
   * @property {object} [symmetricKey] Symmetric key for authentication.
   * @property {object} [symmetricKey.connectionString] Connection string based
   * on symmetric key.
   * @property {string} [symmetricKey.connectionString.value] The value of the
   * secret.
   * @property {string}
   * [symmetricKey.connectionString.encryptionCertThumbprint] Thumbprint
   * certificate that was used to encrypt "Value". If the value in unencrypted,
   * it will be null.
   * @property {string} [symmetricKey.connectionString.encryptionAlgorithm] The
   * algorithm used to encrypt "Value". Possible values include: 'None',
   * 'AES256', 'RSAES_PKCS1_v_1_5'
   */
  constructor() {
  }

  /**
   * Defines the metadata of Authentication
   *
   * @returns {object} metadata of Authentication
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Authentication',
      type: {
        name: 'Composite',
        className: 'Authentication',
        modelProperties: {
          symmetricKey: {
            required: false,
            serializedName: 'symmetricKey',
            type: {
              name: 'Composite',
              className: 'SymmetricKey'
            }
          }
        }
      }
    };
  }
}

module.exports = Authentication;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

/* jshint latedef:false */
/* jshint forin:false */
/* jshint noempty:false */

'use strict';

var msRestAzure = require('ms-rest-azure');

exports.BaseResource = msRestAzure.BaseResource;
exports.CloudError = msRestAzure.CloudError;
exports.Address = require('./address');
exports.AlertErrorDetails = require('./alertErrorDetails');
exports.ARMBaseModel = require('./aRMBaseModel');
exports.Alert = require('./alert');
exports.AsymmetricEncryptedSecret = require('./asymmetricEncryptedSecret');
exports.SymmetricKey = require('./symmetricKey');
exports.Authentication = require('./authentication');
exports.AzureContainerInfo = require('./azureContainerInfo');
exports.BandwidthSchedule = require('./bandwidthSchedule');
exports.ClientAccessRight = require('./clientAccessRight');
exports.ContactDetails = require('./contactDetails');
exports.Sku = require('./sku');
exports.DataBoxEdgeDevice = require('./dataBoxEdgeDevice');
exports.DataBoxEdgeDeviceExtendedInfo = require('./dataBoxEdgeDeviceExtendedInfo');
exports.DataBoxEdgeDevicePatch = require('./dataBoxEdgeDevicePatch');
exports.FileSourceInfo = require('./fileSourceInfo');
exports.RoleSinkInfo = require('./roleSinkInfo');
exports.Trigger = require('./trigger');
exports.FileEventTrigger = require('./fileEventTrigger');
exports.IoTDeviceInfo = require('./ioTDeviceInfo');
exports.MountPointMap = require('./mountPointMap');
exports.Role = require('./role');
exports.IoTRole = require('./ioTRole');
exports.Ipv4Config = require('./ipv4Config');
exports.Ipv6Config = require('./ipv6Config');
exports.JobErrorItem = require('./jobErrorItem');
exports.JobErrorDetails = require('./jobErrorDetails');
exports.UpdateDownloadProgress = require('./updateDownloadProgress');
exports.UpdateInstallProgress = require('./updateInstallProgress');
exports.Job = require('./job');
exports.MetricDimensionV1 = require('./metricDimensionV1');
exports.MetricSpecificationV1 = require('./metricSpecificationV1');
exports.NetworkAdapterPosition = require('./networkAdapterPosition');
exports.NetworkAdapter = require('./networkAdapter');
exports.NetworkSettings = require('./networkSettings');
exports.OperationDisplay = require('./operationDisplay');
exports.ServiceSpecification = require('./serviceSpecification');
exports.Operation = require('./operation');
exports.OrderStatus = require('./orderStatus');
exports.TrackingInfo = require('./trackingInfo');
exports.Order = require('./order');
exports.PeriodicTimerSourceInfo = require('./periodicTimerSourceInfo');
exports.PeriodicTimerEventTrigger = require('./periodicTimerEventTrigger');
exports.RefreshDetails = require('./refreshDetails');
exports.SecuritySettings = require('./securitySettings');
exports.UserAccessRight = require('./userAccessRight');
exports.Share = require('./share');
exports.ShareAccessRight = require('./shareAccessRight');
exports.StorageAccountCredential = require('./storageAccountCredential');
exports.UpdateSummary = require('./updateSummary');
exports.UploadCertificateRequest = require('./uploadCertificateRequest');
exports.UploadCertificateResponse = require('./uploadCertificateResponse');
exports.User = require('./user');
exports.OperationsList = require('./operationsList');
exports.DataBoxEdgeDeviceList = require('./dataBoxEdgeDeviceList');
exports.AlertList = require('./alertList');
exports.BandwidthSchedulesList = require('./bandwidthSchedulesList');
exports.OrderList = require('./orderList');
exports.RoleList = require('./roleList');
exports.ShareList = require('./shareList');
exports.StorageAccountCredentialList = require('./storageAccountCredentialList');
exports.TriggerList = require('./triggerList');
exports.UserList = require('./userList');
exports.discriminators = {
  'BaseResource.FileEvent' : exports.FileEventTrigger,
  'BaseResource.IOT' : exports.IoTRole,
  'BaseResource.PeriodicTimerEvent' : exports.PeriodicTimerEventTrigger,
  'BaseResource.Role' : exports.Role,
  'BaseResource.Trigger' : exports.Trigger
};

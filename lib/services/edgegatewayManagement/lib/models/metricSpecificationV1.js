/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Metric specification version 1.
 *
 */
class MetricSpecificationV1 {
  /**
   * Create a MetricSpecificationV1.
   * @property {string} [name] Name of the metric.
   * @property {string} [displayName] Display name of the metric.
   * @property {string} [displayDescription] Description of the metric to be
   * displayed.
   * @property {string} [unit] Metric units. Possible values include:
   * 'NotSpecified', 'Percent', 'Count', 'Seconds', 'Milliseconds', 'Bytes',
   * 'BytesPerSecond', 'CountPerSecond'
   * @property {string} [aggregationType] Metric aggregation type. Possible
   * values include: 'NotSpecified', 'None', 'Average', 'Minimum', 'Maximum',
   * 'Total', 'Count'
   * @property {array} [dimensions] Metric dimensions, other than default
   * dimension which is resource.
   * @property {boolean} [fillGapWithZero] set true to fill the gaps with zero.
   * @property {string} [category] Metric category. Possible values include:
   * 'Capacity', 'Transaction'
   * @property {string} [resourceIdDimensionNameOverride] Resource name
   * override.
   * @property {array} [supportedTimeGrainTypes] Support granularity of
   * metrics.
   * @property {array} [supportedAggregationTypes] Support metric aggregation
   * type.
   */
  constructor() {
  }

  /**
   * Defines the metadata of MetricSpecificationV1
   *
   * @returns {object} metadata of MetricSpecificationV1
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'MetricSpecification_V1',
      type: {
        name: 'Composite',
        className: 'MetricSpecificationV1',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          displayDescription: {
            required: false,
            serializedName: 'displayDescription',
            type: {
              name: 'String'
            }
          },
          unit: {
            required: false,
            serializedName: 'unit',
            type: {
              name: 'String'
            }
          },
          aggregationType: {
            required: false,
            serializedName: 'aggregationType',
            type: {
              name: 'String'
            }
          },
          dimensions: {
            required: false,
            serializedName: 'dimensions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MetricDimensionV1ElementType',
                  type: {
                    name: 'Composite',
                    className: 'MetricDimensionV1'
                  }
              }
            }
          },
          fillGapWithZero: {
            required: false,
            serializedName: 'fillGapWithZero',
            type: {
              name: 'Boolean'
            }
          },
          category: {
            required: false,
            serializedName: 'category',
            type: {
              name: 'String'
            }
          },
          resourceIdDimensionNameOverride: {
            required: false,
            serializedName: 'resourceIdDimensionNameOverride',
            type: {
              name: 'String'
            }
          },
          supportedTimeGrainTypes: {
            required: false,
            serializedName: 'supportedTimeGrainTypes',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'TimeGrainElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          supportedAggregationTypes: {
            required: false,
            serializedName: 'supportedAggregationTypes',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MetricAggregationTypeElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = MetricSpecificationV1;

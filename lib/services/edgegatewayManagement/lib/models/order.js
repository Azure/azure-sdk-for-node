/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The order details.
 *
 * @extends models['ARMBaseModel']
 */
class Order extends models['ARMBaseModel'] {
  /**
   * Create a Order.
   * @property {object} [contactInformation] The contact details.
   * @property {string} [contactInformation.contactPerson] Gets or sets the
   * contact person.
   * @property {string} [contactInformation.companyName] Gets or sets the name
   * of the company.
   * @property {string} [contactInformation.phone] Gets or sets the phone
   * number.
   * @property {array} [contactInformation.emailList] Gets or sets the email
   * list.
   * @property {object} [shippingAddress] The shipping address.
   * @property {string} [shippingAddress.addressLine1] The address line1.
   * @property {string} [shippingAddress.addressLine2] The address line2.
   * @property {string} [shippingAddress.addressLine3] The address line3.
   * @property {string} [shippingAddress.postalCode] The postal code.
   * @property {string} [shippingAddress.city] The city name.
   * @property {string} [shippingAddress.state] The state name.
   * @property {string} [shippingAddress.country] The country name.
   * @property {object} [changeStatusTo] Current status of the Order.
   * @property {string} [changeStatusTo.status] Status of the order pertaining
   * to the allowed StatusTypes. Possible values include: 'Untracked',
   * 'AwaitingFulfilment', 'AwaitingPreparation', 'AwaitingShipment',
   * 'Shipped', 'Arriving', 'Delivered', 'ReplacementRequested', 'LostDevice',
   * 'Declined', 'ReturnInitiated', 'AwaitingReturnShipment', 'ShippedBack',
   * 'CollectedAtMicrosoft'
   * @property {date} [changeStatusTo.updateDateTime] Time of status update.
   * @property {string} [changeStatusTo.comments] Comments related to this
   * status change.
   * @property {array} [orderHistory] List of status changes in the order.
   * @property {string} [serialNumber] Serial number of the device.
   * @property {array} [deliveryTrackingInfo] Tracking information related to
   * the packages being delivered to the customer whether original or
   * replacement devices.
   * @property {array} [returnTrackingInfo] Tracking information related to the
   * package being returned from the customer whether original or replacement
   * devices.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of Order
   *
   * @returns {object} metadata of Order
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Order',
      type: {
        name: 'Composite',
        className: 'Order',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          contactInformation: {
            required: false,
            serializedName: 'properties.contactInformation',
            type: {
              name: 'Composite',
              className: 'ContactDetails'
            }
          },
          shippingAddress: {
            required: false,
            serializedName: 'properties.shippingAddress',
            type: {
              name: 'Composite',
              className: 'Address'
            }
          },
          changeStatusTo: {
            required: false,
            serializedName: 'properties.changeStatusTo',
            type: {
              name: 'Composite',
              className: 'OrderStatus'
            }
          },
          orderHistory: {
            required: false,
            readOnly: true,
            serializedName: 'properties.orderHistory',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'OrderStatusElementType',
                  type: {
                    name: 'Composite',
                    className: 'OrderStatus'
                  }
              }
            }
          },
          serialNumber: {
            required: false,
            readOnly: true,
            serializedName: 'properties.serialNumber',
            type: {
              name: 'String'
            }
          },
          deliveryTrackingInfo: {
            required: false,
            readOnly: true,
            serializedName: 'properties.deliveryTrackingInfo',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'TrackingInfoElementType',
                  type: {
                    name: 'Composite',
                    className: 'TrackingInfo'
                  }
              }
            }
          },
          returnTrackingInfo: {
            required: false,
            readOnly: true,
            serializedName: 'properties.returnTrackingInfo',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'TrackingInfoElementType',
                  type: {
                    name: 'Composite',
                    className: 'TrackingInfo'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = Order;

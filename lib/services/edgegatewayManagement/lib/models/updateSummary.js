/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Details about ongoing updates and availability of updates on the device.
 *
 * @extends models['ARMBaseModel']
 */
class UpdateSummary extends models['ARMBaseModel'] {
  /**
   * Create a UpdateSummary.
   * @property {string} [deviceVersionNumber] The current version of the
   * device, of format: 1.2.17312.13.
   * @property {string} [friendlyDeviceVersionName] The current version of the
   * device represented in text format.
   * @property {date} [deviceLastScannedDateTime] The last time when a scan was
   * done on the device.
   * @property {date} [lastCompletedScanJobDateTime] The time when the last
   * scan job was completed (success/cancelled/failed) on the appliance.
   * @property {date} [lastCompletedDownloadJobDateTime] The time when the last
   * Download job was completed (success/cancelled/failed) on the appliance.
   * @property {date} [lastCompletedInstallJobDateTime] The time when the last
   * Install job was completed (success/cancelled/failed) on the appliance.
   * @property {number} [totalNumberOfUpdatesAvailable] Count of updates that
   * are available for the current device version as per the last scan on the
   * device.
   * @property {number} [totalNumberOfUpdatesPendingDownload] The total number
   * of items pending download.
   * @property {number} [totalNumberOfUpdatesPendingInstall] The total number
   * of items pending install.
   * @property {string} [rebootBehavior] Indicates if updates are available and
   * at least one of the update items detected needs a reboot. Possible values
   * include: 'NeverReboots', 'RequiresReboot', 'RequestReboot'
   * @property {string} [ongoingUpdateOperation] The current update operation.
   * Possible values include: 'None', 'Scan', 'Download', 'Install'
   * @property {string} [inProgressDownloadJobId] The Job ID of the download
   * job if a download is in progress.
   * @property {string} [inProgressInstallJobId] The Job ID of the install job
   * if an install is in progress.
   * @property {date} [inProgressDownloadJobStartedDateTime] The time when the
   * currently running download (if any) started.
   * @property {date} [inProgressInstallJobStartedDateTime] The time when the
   * currently running install (if any) started.
   * @property {array} [updateTitles] The list of update titles which are
   * available for install.
   * @property {number} [totalUpdateSizeInBytes] The total size of updates
   * available for download in bytes.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of UpdateSummary
   *
   * @returns {object} metadata of UpdateSummary
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'UpdateSummary',
      type: {
        name: 'Composite',
        className: 'UpdateSummary',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          deviceVersionNumber: {
            required: false,
            serializedName: 'properties.deviceVersionNumber',
            type: {
              name: 'String'
            }
          },
          friendlyDeviceVersionName: {
            required: false,
            serializedName: 'properties.friendlyDeviceVersionName',
            type: {
              name: 'String'
            }
          },
          deviceLastScannedDateTime: {
            required: false,
            serializedName: 'properties.deviceLastScannedDateTime',
            type: {
              name: 'DateTime'
            }
          },
          lastCompletedScanJobDateTime: {
            required: false,
            serializedName: 'properties.lastCompletedScanJobDateTime',
            type: {
              name: 'DateTime'
            }
          },
          lastCompletedDownloadJobDateTime: {
            required: false,
            readOnly: true,
            serializedName: 'properties.lastCompletedDownloadJobDateTime',
            type: {
              name: 'DateTime'
            }
          },
          lastCompletedInstallJobDateTime: {
            required: false,
            readOnly: true,
            serializedName: 'properties.lastCompletedInstallJobDateTime',
            type: {
              name: 'DateTime'
            }
          },
          totalNumberOfUpdatesAvailable: {
            required: false,
            readOnly: true,
            serializedName: 'properties.totalNumberOfUpdatesAvailable',
            type: {
              name: 'Number'
            }
          },
          totalNumberOfUpdatesPendingDownload: {
            required: false,
            readOnly: true,
            serializedName: 'properties.totalNumberOfUpdatesPendingDownload',
            type: {
              name: 'Number'
            }
          },
          totalNumberOfUpdatesPendingInstall: {
            required: false,
            readOnly: true,
            serializedName: 'properties.totalNumberOfUpdatesPendingInstall',
            type: {
              name: 'Number'
            }
          },
          rebootBehavior: {
            required: false,
            readOnly: true,
            serializedName: 'properties.rebootBehavior',
            type: {
              name: 'String'
            }
          },
          ongoingUpdateOperation: {
            required: false,
            readOnly: true,
            serializedName: 'properties.ongoingUpdateOperation',
            type: {
              name: 'String'
            }
          },
          inProgressDownloadJobId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.inProgressDownloadJobId',
            type: {
              name: 'String'
            }
          },
          inProgressInstallJobId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.inProgressInstallJobId',
            type: {
              name: 'String'
            }
          },
          inProgressDownloadJobStartedDateTime: {
            required: false,
            readOnly: true,
            serializedName: 'properties.inProgressDownloadJobStartedDateTime',
            type: {
              name: 'DateTime'
            }
          },
          inProgressInstallJobStartedDateTime: {
            required: false,
            readOnly: true,
            serializedName: 'properties.inProgressInstallJobStartedDateTime',
            type: {
              name: 'DateTime'
            }
          },
          updateTitles: {
            required: false,
            readOnly: true,
            serializedName: 'properties.updateTitles',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          totalUpdateSizeInBytes: {
            required: false,
            readOnly: true,
            serializedName: 'properties.totalUpdateSizeInBytes',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = UpdateSummary;

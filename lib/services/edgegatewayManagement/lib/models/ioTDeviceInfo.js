/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Metadata of IoT device/IoT Edge device to be configured.
 *
 */
class IoTDeviceInfo {
  /**
   * Create a IoTDeviceInfo.
   * @property {string} deviceId ID of the IoT device/edge device.
   * @property {string} ioTHostHub Host name for the IoT hub associated to the
   * device.
   * @property {object} [authentication] IoT device authentication info.
   * @property {object} [authentication.symmetricKey] Symmetric key for
   * authentication.
   * @property {object} [authentication.symmetricKey.connectionString]
   * Connection string based on the symmetric key.
   * @property {string} [authentication.symmetricKey.connectionString.value]
   * The value of the secret.
   * @property {string}
   * [authentication.symmetricKey.connectionString.encryptionCertThumbprint]
   * Thumbprint certificate used to encrypt \"Value\". If the value is
   * unencrypted, it will be null.
   * @property {string}
   * [authentication.symmetricKey.connectionString.encryptionAlgorithm] The
   * algorithm used to encrypt "Value". Possible values include: 'None',
   * 'AES256', 'RSAES_PKCS1_v_1_5'
   */
  constructor() {
  }

  /**
   * Defines the metadata of IoTDeviceInfo
   *
   * @returns {object} metadata of IoTDeviceInfo
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IoTDeviceInfo',
      type: {
        name: 'Composite',
        className: 'IoTDeviceInfo',
        modelProperties: {
          deviceId: {
            required: true,
            serializedName: 'deviceId',
            type: {
              name: 'String'
            }
          },
          ioTHostHub: {
            required: true,
            serializedName: 'ioTHostHub',
            type: {
              name: 'String'
            }
          },
          authentication: {
            required: false,
            serializedName: 'authentication',
            type: {
              name: 'Composite',
              className: 'Authentication'
            }
          }
        }
      }
    };
  }
}

module.exports = IoTDeviceInfo;

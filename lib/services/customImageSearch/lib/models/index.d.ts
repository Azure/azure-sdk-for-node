/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as moment from "moment";


/**
 * @class
 * Initializes a new instance of the ResponseBase class.
 * @constructor
 * Response base
 *
 * @member {string} _type Polymorphic Discriminator
 */
export interface ResponseBase {
  _type: string;
}

/**
 * @class
 * Initializes a new instance of the Identifiable class.
 * @constructor
 * Defines the identity of a resource.
 *
 * @member {string} [id] A String identifier.
 */
export interface Identifiable extends ResponseBase {
  readonly id?: string;
}

/**
 * @class
 * Initializes a new instance of the Response class.
 * @constructor
 * Defines a response. All schemas that could be returned at the root of a
 * response should inherit from this
 *
 * @member {string} [readLink] The URL that returns this resource.
 * @member {string} [webSearchUrl] The URL To Bing's search result for this
 * item.
 */
export interface Response extends Identifiable {
  readonly readLink?: string;
  readonly webSearchUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the Thing class.
 * @constructor
 * Defines a thing.
 *
 * @member {string} [name] The name of the thing represented by this object.
 * @member {string} [url] The URL to get more information about the thing
 * represented by this object.
 * @member {object} [image] An image of the item.
 * @member {object} [image.thumbnail] The URL to a thumbnail of the image
 * @member {string} [image.imageInsightsToken] The token that you use in a
 * subsequent call to the Image Search API to get additional information about
 * the image. For information about using this token, see the insightsToken
 * query parameter.
 * @member {string} [image.imageId] Unique Id for the image
 * @member {string} [image.accentColor] A three-byte hexadecimal number that
 * represents the color that dominates the image. Use the color as the
 * temporary background in your client until the image is loaded.
 * @member {string} [image.visualWords] Visual representation of the image.
 * Used for getting more sizes
 * @member {string} [description] A short description of the item.
 * @member {string} [alternateName] An alias for the item
 * @member {string} [bingId] An ID that uniquely identifies this item.
 */
export interface Thing extends Response {
  readonly name?: string;
  readonly url?: string;
  readonly image?: ImageObject;
  readonly description?: string;
  readonly alternateName?: string;
  readonly bingId?: string;
}

/**
 * @class
 * Initializes a new instance of the CreativeWork class.
 * @constructor
 * The most generic kind of creative work, including books, movies,
 * photographs, software programs, etc.
 *
 * @member {string} [thumbnailUrl] The URL to a thumbnail of the item.
 * @member {array} [provider] The source of the creative work.
 * @member {string} [text] Text content of this creative work
 */
export interface CreativeWork extends Thing {
  readonly thumbnailUrl?: string;
  readonly provider?: Thing[];
  readonly text?: string;
}

/**
 * @class
 * Initializes a new instance of the MediaObject class.
 * @constructor
 * Defines a media object.
 *
 * @member {string} [contentUrl] Original URL to retrieve the source (file) for
 * the media object (e.g the source URL for the image).
 * @member {string} [hostPageUrl] URL of the page that hosts the media object.
 * @member {string} [contentSize] Size of the media object content (use format
 * "value unit" e.g "1024 B").
 * @member {string} [encodingFormat] Encoding format (e.g mp3, mp4, jpeg, etc).
 * @member {string} [hostPageDisplayUrl] Display URL of the page that hosts the
 * media object.
 * @member {number} [width] The width of the media object, in pixels.
 * @member {number} [height] The height of the media object, in pixels.
 */
export interface MediaObject extends CreativeWork {
  readonly contentUrl?: string;
  readonly hostPageUrl?: string;
  readonly contentSize?: string;
  readonly encodingFormat?: string;
  readonly hostPageDisplayUrl?: string;
  readonly width?: number;
  readonly height?: number;
}

/**
 * @class
 * Initializes a new instance of the ImageObject class.
 * @constructor
 * Defines an image
 *
 * @member {object} [thumbnail] The URL to a thumbnail of the image
 * @member {string} [imageInsightsToken] The token that you use in a subsequent
 * call to the Image Search API to get additional information about the image.
 * For information about using this token, see the insightsToken query
 * parameter.
 * @member {string} [imageId] Unique Id for the image
 * @member {string} [accentColor] A three-byte hexadecimal number that
 * represents the color that dominates the image. Use the color as the
 * temporary background in your client until the image is loaded.
 * @member {string} [visualWords] Visual representation of the image. Used for
 * getting more sizes
 */
export interface ImageObject extends MediaObject {
  readonly thumbnail?: ImageObject;
  readonly imageInsightsToken?: string;
  readonly imageId?: string;
  readonly accentColor?: string;
  readonly visualWords?: string;
}

/**
 * @class
 * Initializes a new instance of the Answer class.
 * @constructor
 * Defines an answer.
 *
 */
export interface Answer extends Response {
}

/**
 * @class
 * Initializes a new instance of the SearchResultsAnswer class.
 * @constructor
 * Defines a search result answer.
 *
 * @member {number} [totalEstimatedMatches] The estimated number of webpages
 * that are relevant to the query. Use this number along with the count and
 * offset query parameters to page the results.
 */
export interface SearchResultsAnswer extends Answer {
  readonly totalEstimatedMatches?: number;
}

/**
 * @class
 * Initializes a new instance of the Images class.
 * @constructor
 * Defines an image answer
 *
 * @member {number} [nextOffset] Used as part of deduping. Tells client the
 * next offset that client should use in the next pagination request
 * @member {array} value A list of image objects that are relevant to the
 * query. If there are no results, the List is empty.
 */
export interface Images extends SearchResultsAnswer {
  readonly nextOffset?: number;
  value: ImageObject[];
}

/**
 * @class
 * Initializes a new instance of the Query class.
 * @constructor
 * Defines a search query.
 *
 * @member {string} text The query string. Use this string as the query term in
 * a new search request.
 * @member {string} [displayText] The display version of the query term. This
 * version of the query term may contain special characters that highlight the
 * search term found in the query string. The string contains the highlighting
 * characters only if the query enabled hit highlighting
 * @member {string} [webSearchUrl] The URL that takes the user to the Bing
 * search results page for the query.Only related search results include this
 * field.
 * @member {string} [searchLink] The URL that you use to get the results of the
 * related search. Before using the URL, you must append query parameters as
 * appropriate and include the Ocp-Apim-Subscription-Key header. Use this URL
 * if you're displaying the results in your own user interface. Otherwise, use
 * the webSearchUrl URL.
 * @member {object} [thumbnail] The URL to a thumbnail of a related image.
 * @member {object} [thumbnail.thumbnail] The URL to a thumbnail of the image
 * @member {string} [thumbnail.imageInsightsToken] The token that you use in a
 * subsequent call to the Image Search API to get additional information about
 * the image. For information about using this token, see the insightsToken
 * query parameter.
 * @member {string} [thumbnail.imageId] Unique Id for the image
 * @member {string} [thumbnail.accentColor] A three-byte hexadecimal number
 * that represents the color that dominates the image. Use the color as the
 * temporary background in your client until the image is loaded.
 * @member {string} [thumbnail.visualWords] Visual representation of the image.
 * Used for getting more sizes
 */
export interface Query {
  text: string;
  readonly displayText?: string;
  readonly webSearchUrl?: string;
  readonly searchLink?: string;
  readonly thumbnail?: ImageObject;
}

/**
 * @class
 * Initializes a new instance of the ErrorModel class.
 * @constructor
 * Defines the error that occurred.
 *
 * @member {string} code The error code that identifies the category of error.
 * Possible values include: 'None', 'ServerError', 'InvalidRequest',
 * 'RateLimitExceeded', 'InvalidAuthorization', 'InsufficientAuthorization'.
 * Default value: 'None' .
 * @member {string} [subCode] The error code that further helps to identify the
 * error. Possible values include: 'UnexpectedError', 'ResourceError',
 * 'NotImplemented', 'ParameterMissing', 'ParameterInvalidValue',
 * 'HttpNotAllowed', 'Blocked', 'AuthorizationMissing',
 * 'AuthorizationRedundancy', 'AuthorizationDisabled', 'AuthorizationExpired'
 * @member {string} message A description of the error.
 * @member {string} [moreDetails] A description that provides additional
 * information about the error.
 * @member {string} [parameter] The parameter in the request that caused the
 * error.
 * @member {string} [value] The parameter's value in the request that was not
 * valid.
 */
export interface ErrorModel {
  code: string;
  readonly subCode?: string;
  message: string;
  readonly moreDetails?: string;
  readonly parameter?: string;
  readonly value?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorResponse class.
 * @constructor
 * The top-level response that represents a failed request.
 *
 * @member {array} errors A list of errors that describe the reasons why the
 * request failed.
 */
export interface ErrorResponse extends Response {
  errors: ErrorModel[];
}

/**
 * @class
 * Initializes a new instance of the WebPage class.
 * @constructor
 * Defines a webpage that is relevant to the query.
 *
 */
export interface WebPage extends CreativeWork {
}

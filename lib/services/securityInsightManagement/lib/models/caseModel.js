/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Represents a case in Azure Security Insights.
 *
 * @extends models['Resource']
 */
class CaseModel extends models['Resource'] {
  /**
   * Create a CaseModel.
   * @property {string} [etag] Etag of the alert rule.
   * @property {date} [lastUpdatedTimeUtc] The last time the case was updated
   * @property {date} [createdTimeUtc] The time the case was created
   * @property {date} [endTimeUtc] The end time of the case
   * @property {date} [startTimeUtc] The start time of the case
   * @property {array} [tags] List of tags
   * @property {string} [description] The description of the case
   * @property {string} title The title of the case
   * @property {object} [assignedTo] Describes a user that the case is assigned
   * to
   * @property {uuid} [assignedTo.objectId] The object id of the user.
   * @property {string} [assignedTo.email] The email of the user.
   * @property {string} [assignedTo.name] The name of the user.
   * @property {string} severity The severity of the case. Possible values
   * include: 'Critical', 'High', 'Medium', 'Low', 'Informational'
   * @property {string} status The status of the case. Possible values include:
   * 'Draft', 'Open', 'InProgress', 'Closed'
   * @property {string} [closeReason] The reason the case was closed. Possible
   * values include: 'Resolved', 'Dismissed', 'Other'
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of CaseModel
   *
   * @returns {object} metadata of CaseModel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Case',
      type: {
        name: 'Composite',
        className: 'CaseModel',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          etag: {
            required: false,
            serializedName: 'etag',
            type: {
              name: 'String'
            }
          },
          lastUpdatedTimeUtc: {
            required: false,
            serializedName: 'properties.lastUpdatedTimeUtc',
            type: {
              name: 'DateTime'
            }
          },
          createdTimeUtc: {
            required: false,
            serializedName: 'properties.createdTimeUtc',
            type: {
              name: 'DateTime'
            }
          },
          endTimeUtc: {
            required: false,
            serializedName: 'properties.endTimeUtc',
            type: {
              name: 'DateTime'
            }
          },
          startTimeUtc: {
            required: false,
            serializedName: 'properties.startTimeUtc',
            type: {
              name: 'DateTime'
            }
          },
          tags: {
            required: false,
            serializedName: 'properties.tags',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          description: {
            required: false,
            serializedName: 'properties.description',
            type: {
              name: 'String'
            }
          },
          title: {
            required: true,
            serializedName: 'properties.title',
            type: {
              name: 'String'
            }
          },
          assignedTo: {
            required: false,
            serializedName: 'properties.assignedTo',
            type: {
              name: 'Composite',
              className: 'UserInfo'
            }
          },
          severity: {
            required: true,
            serializedName: 'properties.severity',
            type: {
              name: 'String'
            }
          },
          status: {
            required: true,
            serializedName: 'properties.status',
            type: {
              name: 'String'
            }
          },
          closeReason: {
            required: false,
            serializedName: 'properties.closeReason',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = CaseModel;

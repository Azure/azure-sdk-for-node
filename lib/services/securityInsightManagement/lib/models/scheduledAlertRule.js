/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Represents scheduled alert rule.
 *
 * @extends models['AlertRule']
 */
class ScheduledAlertRule extends models['AlertRule'] {
  /**
   * Create a ScheduledAlertRule.
   * @property {object} [properties] Scheduled alert rule properties
   * @property {string} [properties.ruleName] The name for alerts created by
   * this alert rule.
   * @property {string} [properties.description] The description of the alert
   * rule.
   * @property {string} [properties.severity] The severity for alerts created
   * by this alert rule. Possible values include: 'Low', 'Medium', 'High',
   * 'Informational'
   * @property {boolean} [properties.enabled] Determines whether this alert
   * rule is enabled or disabled.
   * @property {string} [properties.query] The query that creates alerts for
   * this rule.
   * @property {moment.duration} [properties.queryFrequency] The frequency (in
   * ISO 8601 duration format) for this alert rule to run.
   * @property {moment.duration} [properties.queryPeriod] The period (in ISO
   * 8601 duration format) that this alert rule looks at.
   * @property {string} [properties.triggerOperator] The operation against the
   * threshold that triggers alert rule. Possible values include:
   * 'GreaterThan', 'LessThan', 'Equal', 'NotEqual'
   * @property {number} [properties.triggerThreshold] The threshold triggers
   * this alert rule.
   * @property {boolean} [properties.suppressionEnabled] Determines whether the
   * suppression for this alert rule is enabled or disabled.
   * @property {moment.duration} [properties.suppressionDuration] The
   * suppression (in ISO 8601 duration format) to wait since last time this
   * alert rule been triggered.
   * @property {string} [properties.lastModifiedUtc] The last time that this
   * alert has been modified.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ScheduledAlertRule
   *
   * @returns {object} metadata of ScheduledAlertRule
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Scheduled',
      type: {
        name: 'Composite',
        className: 'ScheduledAlertRule',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          kind: {
            required: false,
            serializedName: 'kind',
            type: {
              name: 'String'
            }
          },
          etag: {
            required: false,
            serializedName: 'etag',
            type: {
              name: 'String'
            }
          },
          properties: {
            required: false,
            serializedName: 'properties',
            type: {
              name: 'Composite',
              className: 'ScheduledAlertRuleProperties'
            }
          }
        }
      }
    };
  }
}

module.exports = ScheduledAlertRule;

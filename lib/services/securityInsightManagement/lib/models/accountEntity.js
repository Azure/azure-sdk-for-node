/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Represents an account entity.
 *
 * @extends models['Entity']
 */
class AccountEntity extends models['Entity'] {
  /**
   * Create a AccountEntity.
   * @property {string} [accountName] The name of the account. This field
   * should hold only the name without any domain added to it, i.e.
   * administrator.
   * @property {string} [ntDomain] The NETBIOS domain name as it appears in the
   * alert format â€“ domain\username. Examples: NT AUTHORITY.
   * @property {string} [upnSuffix] The user principal name suffix for the
   * account, in some cases it is also the domain name. Examples: contoso.com.
   * @property {string} [sid] The account security identifier, e.g. S-1-5-18.
   * @property {string} [aadTenantId] The Azure Active Directory tenant id.
   * @property {string} [aadUserId] The Azure Active Directory user id.
   * @property {string} [puid] The Azure Active Directory Passport User ID.
   * @property {boolean} [isDomainJoined] Determines whether this is a domain
   * account.
   * @property {uuid} [objectGuid] The objectGUID attribute is a single-value
   * attribute that is the unique identifier for the object, assigned by active
   * directory.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of AccountEntity
   *
   * @returns {object} metadata of AccountEntity
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Account',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'kind',
          clientName: 'kind'
        },
        uberParent: 'Entity',
        className: 'AccountEntity',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          kind: {
            required: true,
            serializedName: 'kind',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          accountName: {
            required: false,
            readOnly: true,
            serializedName: 'properties.accountName',
            type: {
              name: 'String'
            }
          },
          ntDomain: {
            required: false,
            readOnly: true,
            serializedName: 'properties.ntDomain',
            type: {
              name: 'String'
            }
          },
          upnSuffix: {
            required: false,
            readOnly: true,
            serializedName: 'properties.upnSuffix',
            type: {
              name: 'String'
            }
          },
          sid: {
            required: false,
            readOnly: true,
            serializedName: 'properties.sid',
            type: {
              name: 'String'
            }
          },
          aadTenantId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.aadTenantId',
            type: {
              name: 'String'
            }
          },
          aadUserId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.aadUserId',
            type: {
              name: 'String'
            }
          },
          puid: {
            required: false,
            readOnly: true,
            serializedName: 'properties.puid',
            type: {
              name: 'String'
            }
          },
          isDomainJoined: {
            required: false,
            readOnly: true,
            serializedName: 'properties.isDomainJoined',
            type: {
              name: 'Boolean'
            }
          },
          objectGuid: {
            required: false,
            readOnly: true,
            serializedName: 'properties.objectGuid',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = AccountEntity;

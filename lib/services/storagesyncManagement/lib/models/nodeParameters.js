/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Parameter collection for operations on arm node resource.
 *
 */
class NodeParameters {
  /**
   * Create a NodeParameters.
   * @member {string} [location] Location of the resource.
   * @member {object} [tags] Resource tags.
   * @member {string} [gatewayId] Gateway ID which will manage this node.
   * @member {string} [connectionName] myhost.domain.com
   * @member {string} [userName] User name to be used to connect to node.
   * @member {string} [password] Password associated with user name.
   */
  constructor() {
  }

  /**
   * Defines the metadata of NodeParameters
   *
   * @returns {object} metadata of NodeParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'NodeParameters',
      type: {
        name: 'Composite',
        className: 'NodeParameters',
        modelProperties: {
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Object'
            }
          },
          gatewayId: {
            required: false,
            serializedName: 'properties.gatewayId',
            type: {
              name: 'String'
            }
          },
          connectionName: {
            required: false,
            serializedName: 'properties.connectionName',
            type: {
              name: 'String'
            }
          },
          userName: {
            required: false,
            serializedName: 'properties.userName',
            type: {
              name: 'String'
            }
          },
          password: {
            required: false,
            serializedName: 'properties.password',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = NodeParameters;

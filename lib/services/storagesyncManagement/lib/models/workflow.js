/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Workflow resource.
 *
 * @extends models['ProxyResource']
 */
class Workflow extends models['ProxyResource'] {
  /**
   * Create a Workflow.
   * @property {string} [lastStepName] last step name
   * @property {string} [status] workflow status. Possible values include:
   * 'active', 'expired', 'succeeded', 'aborted', 'failed'
   * @property {string} [operation] operation direction. Possible values
   * include: 'do', 'undo', 'cancel'
   * @property {string} [steps] workflow steps
   * @property {string} [lastOperationId] workflow last operation identifier.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of Workflow
   *
   * @returns {object} metadata of Workflow
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Workflow',
      type: {
        name: 'Composite',
        className: 'Workflow',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          lastStepName: {
            required: false,
            serializedName: 'properties.lastStepName',
            type: {
              name: 'String'
            }
          },
          status: {
            required: false,
            serializedName: 'properties.status',
            type: {
              name: 'String'
            }
          },
          operation: {
            required: false,
            serializedName: 'properties.operation',
            type: {
              name: 'String'
            }
          },
          steps: {
            required: false,
            serializedName: 'properties.steps',
            type: {
              name: 'String'
            }
          },
          lastOperationId: {
            required: false,
            serializedName: 'properties.lastOperationId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = Workflow;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The parameters used when creating a storage sync service.
 *
 */
class RegisteredServerCreateParameters {
  /**
   * Create a RegisteredServerCreateParameters.
   * @member {string} [serverCertificate] Registered Server Certificate
   * @member {string} [agentVersion] Registered Server Agent Version
   * @member {string} [serverOSVersion] Registered Server OS Version
   * @member {string} [lastHeartBeat] Registered Server last heart beat
   * @member {string} [serverRole] Registered Server serverRole
   * @member {string} [clusterId] Registered Server clusterId
   * @member {string} [clusterName] Registered Server clusterName
   * @member {string} [serverId] Registered Server serverId
   * @member {string} [friendlyName] Friendly Name
   */
  constructor() {
  }

  /**
   * Defines the metadata of RegisteredServerCreateParameters
   *
   * @returns {object} metadata of RegisteredServerCreateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RegisteredServerCreateParameters',
      type: {
        name: 'Composite',
        className: 'RegisteredServerCreateParameters',
        modelProperties: {
          serverCertificate: {
            required: false,
            serializedName: 'properties.serverCertificate',
            type: {
              name: 'String'
            }
          },
          agentVersion: {
            required: false,
            serializedName: 'properties.agentVersion',
            type: {
              name: 'String'
            }
          },
          serverOSVersion: {
            required: false,
            serializedName: 'properties.serverOSVersion',
            type: {
              name: 'String'
            }
          },
          lastHeartBeat: {
            required: false,
            serializedName: 'properties.lastHeartBeat',
            type: {
              name: 'String'
            }
          },
          serverRole: {
            required: false,
            serializedName: 'properties.serverRole',
            type: {
              name: 'String'
            }
          },
          clusterId: {
            required: false,
            serializedName: 'properties.clusterId',
            type: {
              name: 'String'
            }
          },
          clusterName: {
            required: false,
            serializedName: 'properties.clusterName',
            type: {
              name: 'String'
            }
          },
          serverId: {
            required: false,
            serializedName: 'properties.serverId',
            type: {
              name: 'String'
            }
          },
          friendlyName: {
            required: false,
            serializedName: 'properties.friendlyName',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = RegisteredServerCreateParameters;

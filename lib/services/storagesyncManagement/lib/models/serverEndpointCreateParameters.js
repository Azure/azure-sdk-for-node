/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The parameters used when creating a storage sync service.
 *
 */
class ServerEndpointCreateParameters {
  /**
   * Create a ServerEndpointCreateParameters.
   * @member {string} [location] Required. Gets or sets the location of the
   * resource. This will be one of the supported and registered Azure Geo
   * Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a
   * resource cannot be changed once it is created, but if an identical geo
   * region is specified on update, the request will succeed.
   * @member {object} [tags] Gets or sets a list of key value pairs that
   * describe the resource. These tags can be used for viewing and grouping
   * this resource (across resource groups). A maximum of 15 tags can be
   * provided for a resource. Each tag must have a key with a length no greater
   * than 128 characters and a value with a length no greater than 256
   * characters.
   * @member {string} [serverLocalPath] Server Local path.
   * @member {string} [cloudTiering] Cloud Tiering. Possible values include:
   * 'on', 'off'
   * @member {number} [volumeFreeSpacePercent] Level of free space to be
   * maintained by Cloud Tiering if it is enabled.
   * @member {string} [friendlyName] Friendly Name
   * @member {string} [serverResourceId] Server Resource Id.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ServerEndpointCreateParameters
   *
   * @returns {object} metadata of ServerEndpointCreateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ServerEndpointCreateParameters',
      type: {
        name: 'Composite',
        className: 'ServerEndpointCreateParameters',
        modelProperties: {
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          serverLocalPath: {
            required: false,
            serializedName: 'properties.serverLocalPath',
            type: {
              name: 'String'
            }
          },
          cloudTiering: {
            required: false,
            serializedName: 'properties.cloudTiering',
            type: {
              name: 'String'
            }
          },
          volumeFreeSpacePercent: {
            required: false,
            serializedName: 'properties.volumeFreeSpacePercent',
            constraints: {
              InclusiveMaximum: 100,
              InclusiveMinimum: 0
            },
            type: {
              name: 'Number'
            }
          },
          friendlyName: {
            required: false,
            serializedName: 'properties.friendlyName',
            type: {
              name: 'String'
            }
          },
          serverResourceId: {
            required: false,
            serializedName: 'properties.serverResourceId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ServerEndpointCreateParameters;

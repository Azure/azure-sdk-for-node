/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Sync Session status object.
 *
 */
class SyncProgressStatus {
  /**
   * Create a SyncProgressStatus.
   * @property {date} [progressTimestamp] Progress timestamp
   * @property {string} [syncDirection] Sync direction. Possible values
   * include: 'none', 'initialize', 'download', 'upload', 'recall'
   * @property {number} [perItemErrorCount] Per item error count
   * @property {number} [appliedItemCount] Applied item count.
   * @property {number} [totalItemCount] Total item count
   * @property {number} [appliedBytes] Applied bytes
   * @property {number} [totalBytes] Total bytes
   */
  constructor() {
  }

  /**
   * Defines the metadata of SyncProgressStatus
   *
   * @returns {object} metadata of SyncProgressStatus
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SyncProgressStatus',
      type: {
        name: 'Composite',
        className: 'SyncProgressStatus',
        modelProperties: {
          progressTimestamp: {
            required: false,
            serializedName: 'progressTimestamp',
            type: {
              name: 'DateTime'
            }
          },
          syncDirection: {
            required: false,
            serializedName: 'syncDirection',
            type: {
              name: 'String'
            }
          },
          perItemErrorCount: {
            required: false,
            serializedName: 'perItemErrorCount',
            constraints: {
              InclusiveMaximum: 2147483647,
              InclusiveMinimum: 0
            },
            type: {
              name: 'Number'
            }
          },
          appliedItemCount: {
            required: false,
            serializedName: 'appliedItemCount',
            constraints: {
              InclusiveMaximum: 2147483647,
              InclusiveMinimum: 0
            },
            type: {
              name: 'Number'
            }
          },
          totalItemCount: {
            required: false,
            serializedName: 'totalItemCount',
            constraints: {
              InclusiveMaximum: 2147483647,
              InclusiveMinimum: 0
            },
            type: {
              name: 'Number'
            }
          },
          appliedBytes: {
            required: false,
            serializedName: 'appliedBytes',
            constraints: {
              InclusiveMaximum: 2147483647,
              InclusiveMinimum: 0
            },
            type: {
              name: 'Number'
            }
          },
          totalBytes: {
            required: false,
            serializedName: 'totalBytes',
            constraints: {
              InclusiveMaximum: 2147483647,
              InclusiveMinimum: 0
            },
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = SyncProgressStatus;

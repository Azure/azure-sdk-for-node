/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing Diagnostic Metric information
 *
 */
class DiagnosticMetricSet {
  /**
   * Create a DiagnosticMetricSet.
   * @member {string} [name] Name of the metric
   * @member {string} [unit] Metric's unit
   * @member {date} [startTime] Start time of the period
   * @member {date} [endTime] End time of the period
   * @member {string} [timeGrain] Presented time grain. Supported grains at the
   * moment are PT1M, PT1H, P1D
   * @member {array} [values] Collection of metric values for the selected
   * period based on the
   * {Microsoft.Web.Hosting.Administration.DiagnosticMetricSet.TimeGrain}
   */
  constructor() {
  }

  /**
   * Defines the metadata of DiagnosticMetricSet
   *
   * @returns {object} metadata of DiagnosticMetricSet
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DiagnosticMetricSet',
      type: {
        name: 'Composite',
        className: 'DiagnosticMetricSet',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          unit: {
            required: false,
            serializedName: 'unit',
            type: {
              name: 'String'
            }
          },
          startTime: {
            required: false,
            serializedName: 'startTime',
            type: {
              name: 'DateTime'
            }
          },
          endTime: {
            required: false,
            serializedName: 'endTime',
            type: {
              name: 'DateTime'
            }
          },
          timeGrain: {
            required: false,
            serializedName: 'timeGrain',
            type: {
              name: 'String'
            }
          },
          values: {
            required: false,
            serializedName: 'values',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'DiagnosticMetricSampleElementType',
                  type: {
                    name: 'Composite',
                    className: 'DiagnosticMetricSample'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = DiagnosticMetricSet;

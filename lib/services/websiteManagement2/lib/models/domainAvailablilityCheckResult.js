/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Domain availablility check result.
 *
 */
class DomainAvailablilityCheckResult {
  /**
   * Create a DomainAvailablilityCheckResult.
   * @member {string} [name] Name of the domain.
   * @member {boolean} [available] <code>true</code> if domain can be purchased
   * using CreateDomain API; otherwise, <code>false</code>.
   * @member {string} [domainType] Valid values are Regular domain: Azure will
   * charge the full price of domain registration, SoftDeleted: Purchasing this
   * domain will simply restore it and this operation will not cost anything.
   * Possible values include: 'Regular', 'SoftDeleted'
   */
  constructor() {
  }

  /**
   * Defines the metadata of DomainAvailablilityCheckResult
   *
   * @returns {object} metadata of DomainAvailablilityCheckResult
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DomainAvailablilityCheckResult',
      type: {
        name: 'Composite',
        className: 'DomainAvailablilityCheckResult',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          available: {
            required: false,
            serializedName: 'available',
            type: {
              name: 'Boolean'
            }
          },
          domainType: {
            required: false,
            serializedName: 'domainType',
            type: {
              name: 'Enum',
              allowedValues: [ 'Regular', 'SoftDeleted' ]
            }
          }
        }
      }
    };
  }
}

module.exports = DomainAvailablilityCheckResult;

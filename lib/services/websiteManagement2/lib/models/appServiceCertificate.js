/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Key Vault container for a certificate that is purchased through Azure.
 *
 */
class AppServiceCertificate {
  /**
   * Create a AppServiceCertificate.
   * @member {string} [keyVaultId] Key Vault resource Id.
   * @member {string} [keyVaultSecretName] Key Vault secret name.
   * @member {string} [provisioningState] Status of the Key Vault secret.
   * Possible values include: 'Initialized', 'WaitingOnCertificateOrder',
   * 'Succeeded', 'CertificateOrderFailed', 'OperationNotPermittedOnKeyVault',
   * 'AzureServiceUnauthorizedToAccessKeyVault', 'KeyVaultDoesNotExist',
   * 'KeyVaultSecretDoesNotExist', 'UnknownError', 'ExternalPrivateKey',
   * 'Unknown'
   */
  constructor() {
  }

  /**
   * Defines the metadata of AppServiceCertificate
   *
   * @returns {object} metadata of AppServiceCertificate
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AppServiceCertificate',
      type: {
        name: 'Composite',
        className: 'AppServiceCertificate',
        modelProperties: {
          keyVaultId: {
            required: false,
            serializedName: 'keyVaultId',
            type: {
              name: 'String'
            }
          },
          keyVaultSecretName: {
            required: false,
            serializedName: 'keyVaultSecretName',
            type: {
              name: 'String'
            }
          },
          provisioningState: {
            required: false,
            readOnly: true,
            serializedName: 'provisioningState',
            type: {
              name: 'Enum',
              allowedValues: [ 'Initialized', 'WaitingOnCertificateOrder', 'Succeeded', 'CertificateOrderFailed', 'OperationNotPermittedOnKeyVault', 'AzureServiceUnauthorizedToAccessKeyVault', 'KeyVaultDoesNotExist', 'KeyVaultSecretDoesNotExist', 'UnknownError', 'ExternalPrivateKey', 'Unknown' ]
            }
          }
        }
      }
    };
  }
}

module.exports = AppServiceCertificate;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Virtual application in an app.
 *
 */
class VirtualApplication {
  /**
   * Create a VirtualApplication.
   * @member {string} [virtualPath] Virtual path.
   * @member {string} [physicalPath] Physical path.
   * @member {boolean} [preloadEnabled] <code>true</code> if preloading is
   * enabled; otherwise, <code>false</code>.
   * @member {array} [virtualDirectories] Virtual directories for virtual
   * application.
   */
  constructor() {
  }

  /**
   * Defines the metadata of VirtualApplication
   *
   * @returns {object} metadata of VirtualApplication
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VirtualApplication',
      type: {
        name: 'Composite',
        className: 'VirtualApplication',
        modelProperties: {
          virtualPath: {
            required: false,
            serializedName: 'virtualPath',
            type: {
              name: 'String'
            }
          },
          physicalPath: {
            required: false,
            serializedName: 'physicalPath',
            type: {
              name: 'String'
            }
          },
          preloadEnabled: {
            required: false,
            serializedName: 'preloadEnabled',
            type: {
              name: 'Boolean'
            }
          },
          virtualDirectories: {
            required: false,
            serializedName: 'virtualDirectories',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'VirtualDirectoryElementType',
                  type: {
                    name: 'Composite',
                    className: 'VirtualDirectory'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = VirtualApplication;

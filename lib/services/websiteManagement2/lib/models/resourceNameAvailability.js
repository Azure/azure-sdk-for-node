/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Information regarding availbility of a resource name.
 *
 */
class ResourceNameAvailability {
  /**
   * Create a ResourceNameAvailability.
   * @member {boolean} [nameAvailable] <code>true</code> indicates name is
   * valid and available. <code>false</code> indicates the name is invalid,
   * unavailable, or both.
   * @member {string} [reason] <code>Invalid</code> indicates the name provided
   * does not match Azure App Service naming requirements.
   * <code>AlreadyExists</code> indicates that the name is already in use and
   * is therefore unavailable. Possible values include: 'Invalid',
   * 'AlreadyExists'
   * @member {string} [message] If reason == invalid, provide the user with the
   * reason why the given name is invalid, and provide the resource naming
   * requirements so that the user can select a valid name. If reason ==
   * AlreadyExists, explain that resource name is already in use, and direct
   * them to select a different name.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ResourceNameAvailability
   *
   * @returns {object} metadata of ResourceNameAvailability
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ResourceNameAvailability',
      type: {
        name: 'Composite',
        className: 'ResourceNameAvailability',
        modelProperties: {
          nameAvailable: {
            required: false,
            serializedName: 'nameAvailable',
            type: {
              name: 'Boolean'
            }
          },
          reason: {
            required: false,
            serializedName: 'reason',
            type: {
              name: 'String'
            }
          },
          message: {
            required: false,
            serializedName: 'message',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ResourceNameAvailability;

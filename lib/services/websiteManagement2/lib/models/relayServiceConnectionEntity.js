/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Hybrid Connection for an App Service app.
 *
 * @extends models['ProxyOnlyResource']
 */
class RelayServiceConnectionEntity extends models['ProxyOnlyResource'] {
  /**
   * Create a RelayServiceConnectionEntity.
   * @member {string} [entityName]
   * @member {string} [entityConnectionString]
   * @member {string} [resourceType]
   * @member {string} [resourceConnectionString]
   * @member {string} [hostname]
   * @member {number} [port]
   * @member {string} [biztalkUri]
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of RelayServiceConnectionEntity
   *
   * @returns {object} metadata of RelayServiceConnectionEntity
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RelayServiceConnectionEntity',
      type: {
        name: 'Composite',
        className: 'RelayServiceConnectionEntity',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          kind: {
            required: false,
            serializedName: 'kind',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          entityName: {
            required: false,
            serializedName: 'properties.entityName',
            type: {
              name: 'String'
            }
          },
          entityConnectionString: {
            required: false,
            serializedName: 'properties.entityConnectionString',
            type: {
              name: 'String'
            }
          },
          resourceType: {
            required: false,
            serializedName: 'properties.resourceType',
            type: {
              name: 'String'
            }
          },
          resourceConnectionString: {
            required: false,
            serializedName: 'properties.resourceConnectionString',
            type: {
              name: 'String'
            }
          },
          hostname: {
            required: false,
            serializedName: 'properties.hostname',
            type: {
              name: 'String'
            }
          },
          port: {
            required: false,
            serializedName: 'properties.port',
            type: {
              name: 'Number'
            }
          },
          biztalkUri: {
            required: false,
            serializedName: 'properties.biztalkUri',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = RelayServiceConnectionEntity;

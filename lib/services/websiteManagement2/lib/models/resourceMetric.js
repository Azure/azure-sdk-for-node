/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Object representing a metric for any resource .
 *
 */
class ResourceMetric {
  /**
   * Create a ResourceMetric.
   * @property {object} [name] Name of metric.
   * @property {string} [name.value] metric name value.
   * @property {string} [name.localizedValue] Localized metric name value.
   * @property {string} [unit] Metric unit.
   * @property {string} [timeGrain] Metric granularity. E.g PT1H, PT5M, P1D
   * @property {date} [startTime] Metric start time.
   * @property {date} [endTime] Metric end time.
   * @property {string} [resourceId] Metric resource Id.
   * @property {string} [id] Resource Id.
   * @property {array} [metricValues] Metric values.
   * @property {array} [properties] Resource metric properties collection.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ResourceMetric
   *
   * @returns {object} metadata of ResourceMetric
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ResourceMetric',
      type: {
        name: 'Composite',
        className: 'ResourceMetric',
        modelProperties: {
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'Composite',
              className: 'ResourceMetricName'
            }
          },
          unit: {
            required: false,
            readOnly: true,
            serializedName: 'unit',
            type: {
              name: 'String'
            }
          },
          timeGrain: {
            required: false,
            readOnly: true,
            serializedName: 'timeGrain',
            type: {
              name: 'String'
            }
          },
          startTime: {
            required: false,
            readOnly: true,
            serializedName: 'startTime',
            type: {
              name: 'DateTime'
            }
          },
          endTime: {
            required: false,
            readOnly: true,
            serializedName: 'endTime',
            type: {
              name: 'DateTime'
            }
          },
          resourceId: {
            required: false,
            readOnly: true,
            serializedName: 'resourceId',
            type: {
              name: 'String'
            }
          },
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          metricValues: {
            required: false,
            readOnly: true,
            serializedName: 'metricValues',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ResourceMetricValueElementType',
                  type: {
                    name: 'Composite',
                    className: 'ResourceMetricValue'
                  }
              }
            }
          },
          properties: {
            required: false,
            readOnly: true,
            serializedName: 'properties',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ResourceMetricPropertyElementType',
                  type: {
                    name: 'Composite',
                    className: 'ResourceMetricProperty'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = ResourceMetric;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * SSL certificate details.
 *
 */
class CertificateDetails {
  /**
   * Create a CertificateDetails.
   * @member {number} [version] Certificate Version.
   * @member {string} [serialNumber] Certificate Serial Number.
   * @member {string} [thumbprint] Certificate Thumbprint.
   * @member {string} [subject] Certificate Subject.
   * @member {date} [notBefore] Date Certificate is valid from.
   * @member {date} [notAfter] Date Certificate is valid to.
   * @member {string} [signatureAlgorithm] Certificate Signature algorithm.
   * @member {string} [issuer] Certificate Issuer.
   * @member {string} [rawData] Raw certificate data.
   */
  constructor() {
  }

  /**
   * Defines the metadata of CertificateDetails
   *
   * @returns {object} metadata of CertificateDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'CertificateDetails',
      type: {
        name: 'Composite',
        className: 'CertificateDetails',
        modelProperties: {
          version: {
            required: false,
            readOnly: true,
            serializedName: 'version',
            type: {
              name: 'Number'
            }
          },
          serialNumber: {
            required: false,
            readOnly: true,
            serializedName: 'serialNumber',
            type: {
              name: 'String'
            }
          },
          thumbprint: {
            required: false,
            readOnly: true,
            serializedName: 'thumbprint',
            type: {
              name: 'String'
            }
          },
          subject: {
            required: false,
            readOnly: true,
            serializedName: 'subject',
            type: {
              name: 'String'
            }
          },
          notBefore: {
            required: false,
            readOnly: true,
            serializedName: 'notBefore',
            type: {
              name: 'DateTime'
            }
          },
          notAfter: {
            required: false,
            readOnly: true,
            serializedName: 'notAfter',
            type: {
              name: 'DateTime'
            }
          },
          signatureAlgorithm: {
            required: false,
            readOnly: true,
            serializedName: 'signatureAlgorithm',
            type: {
              name: 'String'
            }
          },
          issuer: {
            required: false,
            readOnly: true,
            serializedName: 'issuer',
            type: {
              name: 'String'
            }
          },
          rawData: {
            required: false,
            readOnly: true,
            serializedName: 'rawData',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = CertificateDetails;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Describes main public IP address and any extra virtual IPs.
 *
 */
class AddressResponse {
  /**
   * Create a AddressResponse.
   * @member {string} [serviceIpAddress] Main public virtual IP.
   * @member {string} [internalIpAddress] Virtual Network internal IP address
   * of the App Service Environment if it is in internal load-balancing mode.
   * @member {array} [outboundIpAddresses] IP addresses appearing on outbound
   * connections.
   * @member {array} [vipMappings] Additional virtual IPs.
   */
  constructor() {
  }

  /**
   * Defines the metadata of AddressResponse
   *
   * @returns {object} metadata of AddressResponse
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AddressResponse',
      type: {
        name: 'Composite',
        className: 'AddressResponse',
        modelProperties: {
          serviceIpAddress: {
            required: false,
            serializedName: 'serviceIpAddress',
            type: {
              name: 'String'
            }
          },
          internalIpAddress: {
            required: false,
            serializedName: 'internalIpAddress',
            type: {
              name: 'String'
            }
          },
          outboundIpAddresses: {
            required: false,
            serializedName: 'outboundIpAddresses',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          vipMappings: {
            required: false,
            serializedName: 'vipMappings',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'VirtualIPMappingElementType',
                  type: {
                    name: 'Composite',
                    className: 'VirtualIPMapping'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = AddressResponse;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The IP Addresses and Ports that require inbound network access to and within
 * the subnet of the App Service Environment.
 *
 */
class InboundEnvironmentEndpoint {
  /**
   * Create a InboundEnvironmentEndpoint.
   * @property {string} [description] Short text describing the purpose of the
   * network traffic.
   * @property {array} [endpoints] The IP addresses that network traffic will
   * originate from in cidr notation.
   * @property {array} [ports] The ports that network traffic will arrive to
   * the App Service Environment at.
   */
  constructor() {
  }

  /**
   * Defines the metadata of InboundEnvironmentEndpoint
   *
   * @returns {object} metadata of InboundEnvironmentEndpoint
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'InboundEnvironmentEndpoint',
      type: {
        name: 'Composite',
        className: 'InboundEnvironmentEndpoint',
        modelProperties: {
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          endpoints: {
            required: false,
            serializedName: 'endpoints',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          ports: {
            required: false,
            serializedName: 'ports',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = InboundEnvironmentEndpoint;

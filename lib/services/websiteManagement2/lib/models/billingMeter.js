/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * App Service billing entity that contains information about meter which the
 * Azure billing system utilizes to charge users for services.
 *
 * @extends models['ProxyOnlyResource']
 */
class BillingMeter extends models['ProxyOnlyResource'] {
  /**
   * Create a BillingMeter.
   * @member {string} [meterId] Meter GUID onboarded in Commerce
   * @member {string} [billingLocation] Azure Location of billable resource
   * @member {string} [shortName] Short Name from App Service Azure pricing
   * Page
   * @member {string} [friendlyName] Friendly name of the meter
   * @member {string} [resourceType] App Service resource type meter used for
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of BillingMeter
   *
   * @returns {object} metadata of BillingMeter
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'BillingMeter',
      type: {
        name: 'Composite',
        className: 'BillingMeter',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          kind: {
            required: false,
            serializedName: 'kind',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          meterId: {
            required: false,
            serializedName: 'properties.meterId',
            type: {
              name: 'String'
            }
          },
          billingLocation: {
            required: false,
            serializedName: 'properties.billingLocation',
            type: {
              name: 'String'
            }
          },
          shortName: {
            required: false,
            serializedName: 'properties.shortName',
            type: {
              name: 'String'
            }
          },
          friendlyName: {
            required: false,
            serializedName: 'properties.friendlyName',
            type: {
              name: 'String'
            }
          },
          resourceType: {
            required: false,
            serializedName: 'properties.resourceType',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = BillingMeter;

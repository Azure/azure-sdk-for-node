/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Definition of a single resource metric.
 *
 */
class MetricSpecification {
  /**
   * Create a MetricSpecification.
   * @member {string} [name]
   * @member {string} [displayName]
   * @member {string} [displayDescription]
   * @member {string} [unit]
   * @member {string} [aggregationType]
   * @member {boolean} [supportsInstanceLevelAggregation]
   * @member {boolean} [enableRegionalMdmAccount]
   * @member {string} [sourceMdmAccount]
   * @member {string} [sourceMdmNamespace]
   * @member {string} [metricFilterPattern]
   * @member {boolean} [fillGapWithZero]
   * @member {boolean} [isInternal]
   * @member {array} [dimensions]
   * @member {string} [category]
   * @member {array} [availabilities]
   */
  constructor() {
  }

  /**
   * Defines the metadata of MetricSpecification
   *
   * @returns {object} metadata of MetricSpecification
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'MetricSpecification',
      type: {
        name: 'Composite',
        className: 'MetricSpecification',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          displayDescription: {
            required: false,
            serializedName: 'displayDescription',
            type: {
              name: 'String'
            }
          },
          unit: {
            required: false,
            serializedName: 'unit',
            type: {
              name: 'String'
            }
          },
          aggregationType: {
            required: false,
            serializedName: 'aggregationType',
            type: {
              name: 'String'
            }
          },
          supportsInstanceLevelAggregation: {
            required: false,
            serializedName: 'supportsInstanceLevelAggregation',
            type: {
              name: 'Boolean'
            }
          },
          enableRegionalMdmAccount: {
            required: false,
            serializedName: 'enableRegionalMdmAccount',
            type: {
              name: 'Boolean'
            }
          },
          sourceMdmAccount: {
            required: false,
            serializedName: 'sourceMdmAccount',
            type: {
              name: 'String'
            }
          },
          sourceMdmNamespace: {
            required: false,
            serializedName: 'sourceMdmNamespace',
            type: {
              name: 'String'
            }
          },
          metricFilterPattern: {
            required: false,
            serializedName: 'metricFilterPattern',
            type: {
              name: 'String'
            }
          },
          fillGapWithZero: {
            required: false,
            serializedName: 'fillGapWithZero',
            type: {
              name: 'Boolean'
            }
          },
          isInternal: {
            required: false,
            serializedName: 'isInternal',
            type: {
              name: 'Boolean'
            }
          },
          dimensions: {
            required: false,
            serializedName: 'dimensions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'DimensionElementType',
                  type: {
                    name: 'Composite',
                    className: 'Dimension'
                  }
              }
            }
          },
          category: {
            required: false,
            serializedName: 'category',
            type: {
              name: 'String'
            }
          },
          availabilities: {
            required: false,
            serializedName: 'availabilities',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MetricAvailabilityElementType',
                  type: {
                    name: 'Composite',
                    className: 'MetricAvailability'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = MetricSpecification;

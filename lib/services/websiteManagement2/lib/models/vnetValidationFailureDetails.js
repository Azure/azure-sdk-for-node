/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * A class that describes the reason for a validation failure.
 *
 * @extends models['ProxyOnlyResource']
 */
class VnetValidationFailureDetails extends models['ProxyOnlyResource'] {
  /**
   * Create a VnetValidationFailureDetails.
   * @member {boolean} [failed] A flag describing whether or not validation
   * failed.
   * @member {array} [failedTests] A list of tests that failed in the
   * validation.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of VnetValidationFailureDetails
   *
   * @returns {object} metadata of VnetValidationFailureDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VnetValidationFailureDetails',
      type: {
        name: 'Composite',
        className: 'VnetValidationFailureDetails',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          kind: {
            required: false,
            serializedName: 'kind',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          failed: {
            required: false,
            serializedName: 'properties.failed',
            type: {
              name: 'Boolean'
            }
          },
          failedTests: {
            required: false,
            serializedName: 'properties.failedTests',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'VnetValidationTestFailureElementType',
                  type: {
                    name: 'Composite',
                    className: 'VnetValidationTestFailure'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = VnetValidationFailureDetails;

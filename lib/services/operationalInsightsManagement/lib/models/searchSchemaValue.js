/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Value object for schema results.
 *
 */
class SearchSchemaValue {
  /**
   * Create a SearchSchemaValue.
   * @member {string} [name] The name of the schema.
   * @member {string} [displayName] The display name of the schema.
   * @member {string} [type] The type.
   * @member {boolean} indexed The boolean that indicates the field is
   * searchable as free text.
   * @member {boolean} stored The boolean that indicates whether or not the
   * field is stored.
   * @member {boolean} facet The boolean that indicates whether or not the
   * field is a facet.
   * @member {array} [ownerType] The array of workflows containing the field.
   */
  constructor() {
  }

  /**
   * Defines the metadata of SearchSchemaValue
   *
   * @returns {object} metadata of SearchSchemaValue
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SearchSchemaValue',
      type: {
        name: 'Composite',
        className: 'SearchSchemaValue',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          displayName: {
            required: false,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          indexed: {
            required: true,
            serializedName: 'indexed',
            type: {
              name: 'Boolean'
            }
          },
          stored: {
            required: true,
            serializedName: 'stored',
            type: {
              name: 'Boolean'
            }
          },
          facet: {
            required: true,
            serializedName: 'facet',
            type: {
              name: 'Boolean'
            }
          },
          ownerType: {
            required: false,
            serializedName: 'ownerType',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = SearchSchemaValue;

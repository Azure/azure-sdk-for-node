/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The get search result operation response.
 *
 */
class SearchResultsResponse {
  /**
   * Create a SearchResultsResponse.
   * @member {string} [id] The id of the search, which includes the full url.
   * @member {object} [metadata] The metadata from search results.
   * @member {string} [metadata.searchId] The request id of the search.
   * @member {string} [metadata.resultType] The search result type.
   * @member {number} [metadata.total] The total number of search results.
   * @member {number} [metadata.top] The number of top search results.
   * @member {string} [metadata.id] The id of the search results request.
   * @member {array} [metadata.coreSummaries] The core summaries.
   * @member {string} [metadata.status] The status of the search results.
   * @member {date} [metadata.startTime] The start time for the search.
   * @member {date} [metadata.lastUpdated] The time of last update.
   * @member {string} [metadata.eTag] The ETag of the search results.
   * @member {array} [metadata.sort] How the results are sorted.
   * @member {number} [metadata.requestTime] The request time.
   * @member {string} [metadata.aggregatedValueField] The aggregated value
   * field.
   * @member {string} [metadata.aggregatedGroupingFields] The aggregated
   * grouping fields.
   * @member {number} [metadata.sum] The sum of all aggregates returned in the
   * result set.
   * @member {number} [metadata.max] The max of all aggregates returned in the
   * result set.
   * @member {object} [metadata.schema] The schema.
   * @member {string} [metadata.schema.name] The name of the metadata schema.
   * @member {number} [metadata.schema.version] The version of the metadata
   * schema.
   * @member {array} [value] The array of result values.
   * @member {object} [error] The error.
   * @member {string} [error.type] The error type.
   * @member {string} [error.message] The error message.
   */
  constructor() {
  }

  /**
   * Defines the metadata of SearchResultsResponse
   *
   * @returns {object} metadata of SearchResultsResponse
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SearchResultsResponse',
      type: {
        name: 'Composite',
        className: 'SearchResultsResponse',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          metadata: {
            required: false,
            serializedName: '__metadata',
            type: {
              name: 'Composite',
              className: 'SearchMetadata'
            }
          },
          value: {
            required: false,
            serializedName: 'value',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ObjectElementType',
                  type: {
                    name: 'Object'
                  }
              }
            }
          },
          error: {
            required: false,
            serializedName: 'error',
            type: {
              name: 'Composite',
              className: 'SearchError'
            }
          }
        }
      }
    };
  }
}

module.exports = SearchResultsResponse;

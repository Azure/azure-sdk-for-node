/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * A management group that is connected to a workspace
 *
 */
class ManagementGroup {
  /**
   * Create a ManagementGroup.
   * @member {number} [serverCount] The number of servers connected to the
   * management group.
   * @member {boolean} [isGateway] Gets or sets a value indicating whether the
   * management group is a gateway.
   * @member {string} [name] The name of the management group.
   * @member {string} [id] The unique ID of the management group.
   * @member {date} [created] The datetime that the management group was
   * created.
   * @member {date} [dataReceived] The last datetime that the management group
   * received data.
   * @member {string} [version] The version of System Center that is managing
   * the management group.
   * @member {string} [sku] The SKU of System Center that is managing the
   * management group.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ManagementGroup
   *
   * @returns {object} metadata of ManagementGroup
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ManagementGroup',
      type: {
        name: 'Composite',
        className: 'ManagementGroup',
        modelProperties: {
          serverCount: {
            required: false,
            serializedName: 'properties.serverCount',
            type: {
              name: 'Number'
            }
          },
          isGateway: {
            required: false,
            serializedName: 'properties.isGateway',
            type: {
              name: 'Boolean'
            }
          },
          name: {
            required: false,
            serializedName: 'properties.name',
            type: {
              name: 'String'
            }
          },
          id: {
            required: false,
            serializedName: 'properties.id',
            type: {
              name: 'String'
            }
          },
          created: {
            required: false,
            serializedName: 'properties.created',
            type: {
              name: 'DateTime'
            }
          },
          dataReceived: {
            required: false,
            serializedName: 'properties.dataReceived',
            type: {
              name: 'DateTime'
            }
          },
          version: {
            required: false,
            serializedName: 'properties.version',
            type: {
              name: 'String'
            }
          },
          sku: {
            required: false,
            serializedName: 'properties.sku',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ManagementGroup;

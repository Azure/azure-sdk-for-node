/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Represents the prediction response.
 *
 */
class PredictionResponse {
  /**
   * Create a PredictionResponse.
   * @property {string} query The query used in the prediction.
   * @property {object} prediction The prediction of the requested query.
   * @property {string} [prediction.normalizedQuery] The query after
   * pre-processing and normalization.
   * @property {string} [prediction.alteredQuery] The query after spell
   * checking. Only set if spell check was enabled and a spelling mistake was
   * found.
   * @property {string} [prediction.topIntent] The name of the top scoring
   * intent.
   * @property {object} [prediction.intents] A dictionary representing the
   * intents that fired.
   * @property {object} [prediction.entities] The dictionary representing the
   * entities that fired.
   * @property {object} [prediction.sentiment] The result of the sentiment
   * analysis.
   * @property {number} [prediction.sentiment.score] The sentiment score of the
   * query.
   * @property {string} [prediction.sentiment.label] The label of the sentiment
   * analysis result.
   */
  constructor() {
  }

  /**
   * Defines the metadata of PredictionResponse
   *
   * @returns {object} metadata of PredictionResponse
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PredictionResponse',
      type: {
        name: 'Composite',
        className: 'PredictionResponse',
        modelProperties: {
          query: {
            required: true,
            serializedName: 'query',
            type: {
              name: 'String'
            }
          },
          prediction: {
            required: true,
            serializedName: 'prediction',
            type: {
              name: 'Composite',
              className: 'Prediction'
            }
          }
        }
      }
    };
  }
}

module.exports = PredictionResponse;

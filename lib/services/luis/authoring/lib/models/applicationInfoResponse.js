/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Response containing the Application Info.
 *
 */
class ApplicationInfoResponse {
  /**
   * Create a ApplicationInfoResponse.
   * @property {uuid} [id] The ID (GUID) of the application.
   * @property {string} [name] The name of the application.
   * @property {string} [description] The description of the application.
   * @property {string} [culture] The culture of the application. For example,
   * "en-us".
   * @property {string} [usageScenario] Defines the scenario for the new
   * application. Optional. For example, IoT.
   * @property {string} [domain] The domain for the new application. Optional.
   * For example, Comics.
   * @property {number} [versionsCount] Amount of model versions within the
   * application.
   * @property {string} [createdDateTime] The version's creation timestamp.
   * @property {object} [endpoints] The Runtime endpoint URL for this model
   * version.
   * @property {number} [endpointHitsCount] Number of calls made to this
   * endpoint.
   * @property {string} [activeVersion] The version ID currently marked as
   * active.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ApplicationInfoResponse
   *
   * @returns {object} metadata of ApplicationInfoResponse
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ApplicationInfoResponse',
      type: {
        name: 'Composite',
        className: 'ApplicationInfoResponse',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          culture: {
            required: false,
            serializedName: 'culture',
            type: {
              name: 'String'
            }
          },
          usageScenario: {
            required: false,
            serializedName: 'usageScenario',
            type: {
              name: 'String'
            }
          },
          domain: {
            required: false,
            serializedName: 'domain',
            type: {
              name: 'String'
            }
          },
          versionsCount: {
            required: false,
            serializedName: 'versionsCount',
            type: {
              name: 'Number'
            }
          },
          createdDateTime: {
            required: false,
            serializedName: 'createdDateTime',
            type: {
              name: 'String'
            }
          },
          endpoints: {
            required: false,
            serializedName: 'endpoints',
            type: {
              name: 'Object'
            }
          },
          endpointHitsCount: {
            required: false,
            serializedName: 'endpointHitsCount',
            type: {
              name: 'Number'
            }
          },
          activeVersion: {
            required: false,
            serializedName: 'activeVersion',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ApplicationInfoResponse;

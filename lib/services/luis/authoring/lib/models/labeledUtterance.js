/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * A prediction and label pair of an example.
 *
 */
class LabeledUtterance {
  /**
   * Create a LabeledUtterance.
   * @property {number} [id] ID of Labeled Utterance.
   * @property {string} [text] The utterance. For example, "What's the weather
   * like in seattle?"
   * @property {array} [tokenizedText] The utterance tokenized.
   * @property {string} [intentLabel] The intent matching the example.
   * @property {array} [entityLabels] The entities matching the example.
   * @property {array} [intentPredictions] List of suggested intents.
   * @property {array} [entityPredictions] List of suggested entities.
   */
  constructor() {
  }

  /**
   * Defines the metadata of LabeledUtterance
   *
   * @returns {object} metadata of LabeledUtterance
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'LabeledUtterance',
      type: {
        name: 'Composite',
        className: 'LabeledUtterance',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'Number'
            }
          },
          text: {
            required: false,
            serializedName: 'text',
            type: {
              name: 'String'
            }
          },
          tokenizedText: {
            required: false,
            serializedName: 'tokenizedText',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          intentLabel: {
            required: false,
            serializedName: 'intentLabel',
            type: {
              name: 'String'
            }
          },
          entityLabels: {
            required: false,
            serializedName: 'entityLabels',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'EntityLabelElementType',
                  type: {
                    name: 'Composite',
                    className: 'EntityLabel'
                  }
              }
            }
          },
          intentPredictions: {
            required: false,
            serializedName: 'intentPredictions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'IntentPredictionElementType',
                  type: {
                    name: 'Composite',
                    className: 'IntentPrediction'
                  }
              }
            }
          },
          entityPredictions: {
            required: false,
            serializedName: 'entityPredictions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'EntityPredictionElementType',
                  type: {
                    name: 'Composite',
                    className: 'EntityPrediction'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = LabeledUtterance;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the LocalizableString class.
 * @constructor
 * The localizable string class.
 *
 * @member {string} value the invariant value.
 * @member {string} [localizedValue] the locale specific value.
 */
export interface LocalizableString {
  value: string;
  localizedValue?: string;
}

/**
 * @class
 * Initializes a new instance of the UsageMetric class.
 * @constructor
 * Usage Metric data.
 *
 * @member {object} [name] the usage metric name and display name.
 * @member {string} [name.value] the invariant value.
 * @member {string} [name.localizedValue] the locale specific value.
 * @member {number} [currentValue] the current value for the usage metric.
 * @member {string} [id] the id for the usage metric.
 * @member {number} [limit] the quota limit the usage metric.
 * @member {string} [unit] the unit for the usage metric.
 * @member {date} [nextResetTime] the next reset time for the current value.
 * @member {moment.duration} [quotaPeriod] the amount of time it takes to reset
 * the value.
 */
export interface UsageMetric {
  name?: LocalizableString;
  currentValue?: number;
  id?: string;
  limit?: number;
  unit?: string;
  nextResetTime?: Date;
  quotaPeriod?: moment.Duration;
}

/**
 * @class
 * Initializes a new instance of the ErrorResponse class.
 * @constructor
 * Describes the format of Error response.
 *
 * @member {string} [code] Error code
 * @member {string} [message] Error message indicating why the operation
 * failed.
 */
export interface ErrorResponse {
  code?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the SenderAuthorization class.
 * @constructor
 * the authorization used by the user who has performed the operation that led
 * to this event. This captures the RBAC properties of the event. These usually
 * include the 'action', 'role' and the 'scope'
 *
 * @member {string} [action] the permissible actions. For instance:
 * microsoft.support/supporttickets/write
 * @member {string} [role] the role of the user. For instance: Subscription
 * Admin
 * @member {string} [scope] the scope.
 */
export interface SenderAuthorization {
  action?: string;
  role?: string;
  scope?: string;
}

/**
 * @class
 * Initializes a new instance of the HttpRequestInfo class.
 * @constructor
 * The Http request info.
 *
 * @member {string} [clientRequestId] the client request id.
 * @member {string} [clientIpAddress] the client Ip Address
 * @member {string} [method] the Http request method.
 * @member {string} [uri] the Uri.
 */
export interface HttpRequestInfo {
  clientRequestId?: string;
  clientIpAddress?: string;
  method?: string;
  uri?: string;
}

/**
 * @class
 * Initializes a new instance of the EventData class.
 * @constructor
 * The Azure event log entries are of type EventData
 *
 * @member {object} [authorization]
 * @member {string} [authorization.action] the permissible actions. For
 * instance: microsoft.support/supporttickets/write
 * @member {string} [authorization.role] the role of the user. For instance:
 * Subscription Admin
 * @member {string} [authorization.scope] the scope.
 * @member {object} [claims] key value pairs to identify ARM permissions.
 * @member {string} [caller] the email address of the user who has performed
 * the operation, the UPN claim or SPN claim based on availability.
 * @member {string} [description] the description of the event.
 * @member {string} [id] the Id of this event as required by ARM for RBAC. It
 * contains the EventDataID and a timestamp information.
 * @member {string} [eventDataId] the event data Id. This is a unique
 * identifier for an event.
 * @member {string} [correlationId] the correlation Id, usually a GUID in the
 * string format. The correlation Id is shared among the events that belong to
 * the same uber operation.
 * @member {object} [eventName] the event name. This value should not be
 * confused with OperationName. For practical purposes, OperationName might be
 * more appealing to end users.
 * @member {string} [eventName.value] the invariant value.
 * @member {string} [eventName.localizedValue] the locale specific value.
 * @member {object} [category] the event category.
 * @member {string} [category.value] the invariant value.
 * @member {string} [category.localizedValue] the locale specific value.
 * @member {object} [httpRequest] the HTTP request info. Usually includes the
 * 'clientRequestId', 'clientIpAddress' (IP address of the user who initiated
 * the event) and 'method' (HTTP method e.g. PUT).
 * @member {string} [httpRequest.clientRequestId] the client request id.
 * @member {string} [httpRequest.clientIpAddress] the client Ip Address
 * @member {string} [httpRequest.method] the Http request method.
 * @member {string} [httpRequest.uri] the Uri.
 * @member {string} level the event level. Possible values include: 'Critical',
 * 'Error', 'Warning', 'Informational', 'Verbose'
 * @member {string} [resourceGroupName] the resource group name of the impacted
 * resource.
 * @member {object} [resourceProviderName] the resource provider name of the
 * impacted resource.
 * @member {string} [resourceProviderName.value] the invariant value.
 * @member {string} [resourceProviderName.localizedValue] the locale specific
 * value.
 * @member {string} [resourceId] the resource uri that uniquely identifies the
 * resource that caused this event.
 * @member {object} [resourceType] the resource type
 * @member {string} [resourceType.value] the invariant value.
 * @member {string} [resourceType.localizedValue] the locale specific value.
 * @member {string} [operationId] It is usually a GUID shared among the events
 * corresponding to single operation. This value should not be confused with
 * EventName.
 * @member {object} [operationName] the operation name.
 * @member {string} [operationName.value] the invariant value.
 * @member {string} [operationName.localizedValue] the locale specific value.
 * @member {object} [properties] the set of <Key, Value> pairs (usually a
 * Dictionary<String, String>) that includes details about the event.
 * @member {object} [status] a string describing the status of the operation.
 * Some typical values are: Started, In progress, Succeeded, Failed, Resolved.
 * @member {string} [status.value] the invariant value.
 * @member {string} [status.localizedValue] the locale specific value.
 * @member {object} [subStatus] the event sub status. Most of the time, when
 * included, this captures the HTTP status code of the REST call. Common values
 * are: OK (HTTP Status Code: 200), Created (HTTP Status Code: 201), Accepted
 * (HTTP Status Code: 202), No Content (HTTP Status Code: 204), Bad
 * Request(HTTP Status Code: 400), Not Found (HTTP Status Code: 404), Conflict
 * (HTTP Status Code: 409), Internal Server Error (HTTP Status Code: 500),
 * Service Unavailable (HTTP Status Code:503), Gateway Timeout (HTTP Status
 * Code: 504)
 * @member {string} [subStatus.value] the invariant value.
 * @member {string} [subStatus.localizedValue] the locale specific value.
 * @member {date} eventTimestamp the timestamp of when the event was generated
 * by the Azure service processing the request corresponding the event. It in
 * ISO 8601 format.
 * @member {date} submissionTimestamp the timestamp of when the event became
 * available for querying via this API. It is in ISO 8601 format. This value
 * should not be confused eventTimestamp. As there might be a delay between the
 * occurrence time of the event, and the time that the event is submitted to
 * the Azure logging infrastructure.
 * @member {string} [subscriptionId] the Azure subscription Id usually a GUID.
 * @member {string} [tenantId] the Azure tenant Id
 */
export interface EventData {
  authorization?: SenderAuthorization;
  claims?: { [propertyName: string]: string };
  caller?: string;
  description?: string;
  id?: string;
  eventDataId?: string;
  correlationId?: string;
  eventName?: LocalizableString;
  category?: LocalizableString;
  httpRequest?: HttpRequestInfo;
  level: string;
  resourceGroupName?: string;
  resourceProviderName?: LocalizableString;
  resourceId?: string;
  resourceType?: LocalizableString;
  operationId?: string;
  operationName?: LocalizableString;
  properties?: { [propertyName: string]: string };
  status?: LocalizableString;
  subStatus?: LocalizableString;
  eventTimestamp: Date;
  submissionTimestamp: Date;
  subscriptionId?: string;
  tenantId?: string;
}

/**
 * @class
 * Initializes a new instance of the MetricAvailability class.
 * @constructor
 * Metric availability specifies the time grain (aggregation interval or
 * frequency) and the retention period for that time grain.
 *
 * @member {moment.duration} [timeGrain] the time grain specifies the
 * aggregation interval for the metric. Expressed as a duration 'PT1M', 'P1D',
 * etc.
 * @member {moment.duration} [retention] the retention period for the metric at
 * the specified timegrain.  Expressed as a duration 'PT1M', 'P1D', etc.
 */
export interface MetricAvailability {
  timeGrain?: moment.Duration;
  retention?: moment.Duration;
}

/**
 * @class
 * Initializes a new instance of the MetricDefinition class.
 * @constructor
 * Metric definition class specifies the metadata for a metric.
 *
 * @member {boolean} [isDimensionRequired] Flag to indicate whether the
 * dimension is required.
 * @member {string} [resourceId] the resource identifier of the resource that
 * emitted the metric.
 * @member {object} [name] the name and the display name of the metric, i.e. it
 * is a localizable string.
 * @member {string} [name.value] the invariant value.
 * @member {string} [name.localizedValue] the locale specific value.
 * @member {string} [unit] the unit of the metric. Possible values include:
 * 'Count', 'Bytes', 'Seconds', 'CountPerSecond', 'BytesPerSecond', 'Percent',
 * 'MilliSeconds', 'ByteSeconds', 'Unspecified'
 * @member {string} [primaryAggregationType] the primary aggregation type value
 * defining how to use the values for display. Possible values include: 'None',
 * 'Average', 'Count', 'Minimum', 'Maximum', 'Total'
 * @member {array} [metricAvailabilities] the collection of what aggregation
 * intervals are available to be queried.
 * @member {string} [id] the resource identifier of the metric definition.
 * @member {array} [dimensions] the name and the display name of the dimension,
 * i.e. it is a localizable string.
 */
export interface MetricDefinition {
  isDimensionRequired?: boolean;
  resourceId?: string;
  name?: LocalizableString;
  unit?: string;
  primaryAggregationType?: string;
  metricAvailabilities?: MetricAvailability[];
  id?: string;
  dimensions?: LocalizableString[];
}

/**
 * @class
 * Initializes a new instance of the MetricValue class.
 * @constructor
 * Represents a metric value.
 *
 * @member {date} timeStamp the timestamp for the metric value in ISO 8601
 * format.
 * @member {number} [average] the average value in the time range.
 * @member {number} [minimum] the least value in the time range.
 * @member {number} [maximum] the greatest value in the time range.
 * @member {number} [total] the sum of all of the values in the time range.
 * @member {number} [count] the number of samples in the time range. Can be
 * used to determine the number of values that contributed to the average
 * value.
 */
export interface MetricValue {
  timeStamp: Date;
  average?: number;
  minimum?: number;
  maximum?: number;
  total?: number;
  count?: number;
}

/**
 * @class
 * Initializes a new instance of the MetadataValue class.
 * @constructor
 * Represents a metric metadata value.
 *
 * @member {object} [name] the name of the metadata.
 * @member {string} [name.value] the invariant value.
 * @member {string} [name.localizedValue] the locale specific value.
 * @member {string} [value] the value of the metadata.
 */
export interface MetadataValue {
  name?: LocalizableString;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the TimeSeriesElement class.
 * @constructor
 * A time series result type. The discriminator value is always TimeSeries in
 * this case.
 *
 * @member {array} [metadatavalues] the metadata values returned if $filter was
 * specified in the call.
 * @member {array} [data] An array of data points representing the metric
 * values.  This is only returned if a result type of data is specified.
 */
export interface TimeSeriesElement {
  metadatavalues?: MetadataValue[];
  data?: MetricValue[];
}

/**
 * @class
 * Initializes a new instance of the Metric class.
 * @constructor
 * The result data of a query.
 *
 * @member {string} id the metric Id.
 * @member {string} type the resource type of the metric resource.
 * @member {object} name the name and the display name of the metric, i.e. it
 * is localizable string.
 * @member {string} [name.value] the invariant value.
 * @member {string} [name.localizedValue] the locale specific value.
 * @member {string} unit the unit of the metric. Possible values include:
 * 'Count', 'Bytes', 'Seconds', 'CountPerSecond', 'BytesPerSecond', 'Percent',
 * 'MilliSeconds', 'ByteSeconds', 'Unspecified'
 * @member {array} timeseries the time series returned when a data query is
 * performed.
 */
export interface Metric {
  id: string;
  type: string;
  name: LocalizableString;
  unit: string;
  timeseries: TimeSeriesElement[];
}

/**
 * @class
 * Initializes a new instance of the Response class.
 * @constructor
 * The response to a metrics query.
 *
 * @member {number} [cost] The integer value representing the cost of the
 * query, for data case.
 * @member {string} timespan The timespan for which the data was retrieved. Its
 * value consists of two datatimes concatenated, separated by '/'.  This may be
 * adjusted in the future and returned back from what was originally requested.
 * @member {moment.duration} [interval] The interval (window size) for which
 * the metric data was returned in.  This may be adjusted in the future and
 * returned back from what was originally requested.  This is not present if a
 * metadata request was made.
 * @member {array} value the value of the collection.
 */
export interface Response {
  cost?: number;
  timespan: string;
  interval?: moment.Duration;
  value: Metric[];
}


/**
 * @class
 * Initializes a new instance of the UsageMetricCollection class.
 * @constructor
 * Represents collection of usage metrics.
 *
 */
export interface UsageMetricCollection extends Array<UsageMetric> {
}

/**
 * @class
 * Initializes a new instance of the EventDataCollection class.
 * @constructor
 * Represents collection of events.
 *
 * @member {string} [nextLink] Provides the link to retrieve the next set of
 * events.
 */
export interface EventDataCollection extends Array<EventData> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the EventCategoryCollection class.
 * @constructor
 * A collection of event categories. Currently possible values are:
 * Administrative, Security, ServiceHealth, Alert, Recommendation, Policy.
 *
 */
export interface EventCategoryCollection extends Array<LocalizableString> {
}

/**
 * @class
 * Initializes a new instance of the MetricDefinitionCollection class.
 * @constructor
 * Represents collection of metric definitions.
 *
 */
export interface MetricDefinitionCollection extends Array<MetricDefinition> {
}

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClient, ServiceClientOptions, ServiceCallback, HttpOperationResponse, ServiceClientCredentials } from 'ms-rest';
import { AzureServiceClient, AzureServiceClientOptions } from 'ms-rest-azure';
import * as models from "./models";
import * as operations from "./operations";

export default class EngagementFabric extends AzureServiceClient {
  /**
   * Initializes a new instance of the EngagementFabric class.
   * @constructor
   *
   * @class
   * @param {credentials} credentials - Credentials needed for the client to connect to Azure.
   *
   * @param {string} subscriptionId - Subscription ID
   *
   * @param {string} [baseUri] - The base URI of the service.
   *
   * @param {object} [options] - The parameter options
   *
   * @param {Array} [options.filters] - Filters to be added to the request pipeline
   *
   * @param {object} [options.requestOptions] - Options for the underlying request object
   * {@link https://github.com/request/request#requestoptions-callback Options doc}
   *
   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
   *
   * @param {string} [options.acceptLanguage] - The preferred language for the response.
   *
   * @param {number} [options.longRunningOperationRetryTimeout] - The retry timeout in seconds for Long Running Operations. Default value is 30.
   *
   * @param {boolean} [options.generateClientRequestId] - Whether a unique x-ms-client-request-id should be generated. When set to true a unique x-ms-client-request-id value is generated and included in each request. Default is true.
   *
   */
  constructor(credentials: ServiceClientCredentials, subscriptionId: string, baseUri?: string, options?: AzureServiceClientOptions);

  credentials: ServiceClientCredentials;

  subscriptionId: string;

  apiVersion: string;

  acceptLanguage: string;

  longRunningOperationRetryTimeout: number;

  generateClientRequestId: boolean;

  // Operation groups
  accounts: operations.Accounts;
  channels: operations.Channels;
  operations: operations.Operations;
  sKUs: operations.SKUs;


  /**
   * @summary Check availability of EngagementFabric resource
   *
   * @param {string} resourceGroupName Resource Group Name
   *
   * @param {object} parameters Parameter describing the name to be checked
   *
   * @param {string} parameters.name The name to be checked
   *
   * @param {string} parameters.type The fully qualified resource type for the
   * name to be checked
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<CheckNameAvailabilityResult>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  checkNameAvailabilityWithHttpOperationResponse(resourceGroupName: string, parameters: models.CheckNameAvailabilityParameter, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CheckNameAvailabilityResult>>;

  /**
   * @summary Check availability of EngagementFabric resource
   *
   * @param {string} resourceGroupName Resource Group Name
   *
   * @param {object} parameters Parameter describing the name to be checked
   *
   * @param {string} parameters.name The name to be checked
   *
   * @param {string} parameters.type The fully qualified resource type for the
   * name to be checked
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {CheckNameAvailabilityResult} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {CheckNameAvailabilityResult} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link CheckNameAvailabilityResult} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  checkNameAvailability(resourceGroupName: string, parameters: models.CheckNameAvailabilityParameter, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CheckNameAvailabilityResult>;
  checkNameAvailability(resourceGroupName: string, parameters: models.CheckNameAvailabilityParameter, callback: ServiceCallback<models.CheckNameAvailabilityResult>): void;
  checkNameAvailability(resourceGroupName: string, parameters: models.CheckNameAvailabilityParameter, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CheckNameAvailabilityResult>): void;
}

export { EngagementFabric, models as EngagementFabricModels };

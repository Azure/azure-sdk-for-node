/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The EngagementFabric SKU description of given resource type
 *
 */
class SkuDescription {
  /**
   * Create a SkuDescription.
   * @property {string} [resourceType] The fully qualified resource type
   * @property {string} [name] The name of the SKU
   * @property {string} [tier] The price tier of the SKU
   * @property {array} [locations] The set of locations that the SKU is
   * available
   * @property {array} [locationInfo] Locations and zones
   * @property {array} [restrictions] The restrictions because of which SKU
   * cannot be used
   */
  constructor() {
  }

  /**
   * Defines the metadata of SkuDescription
   *
   * @returns {object} metadata of SkuDescription
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SkuDescription',
      type: {
        name: 'Composite',
        className: 'SkuDescription',
        modelProperties: {
          resourceType: {
            required: false,
            readOnly: true,
            serializedName: 'resourceType',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          tier: {
            required: false,
            readOnly: true,
            serializedName: 'tier',
            type: {
              name: 'String'
            }
          },
          locations: {
            required: false,
            readOnly: true,
            serializedName: 'locations',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          locationInfo: {
            required: false,
            readOnly: true,
            serializedName: 'locationInfo',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'SkuLocationInfoItemElementType',
                  type: {
                    name: 'Composite',
                    className: 'SkuLocationInfoItem'
                  }
              }
            }
          },
          restrictions: {
            required: false,
            readOnly: true,
            serializedName: 'restrictions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ObjectElementType',
                  type: {
                    name: 'Object'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = SkuDescription;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Defines a contractual rule for license attribution.
 *
 * @extends models['ContractualRulesAttribution']
 */
class ContractualRulesLicenseAttribution extends models['ContractualRulesAttribution'] {
  /**
   * Create a ContractualRulesLicenseAttribution.
   * @member {object} [license] The license under which the content may be
   * used.
   * @member {string} [licenseNotice] The license to display next to the
   * targeted field.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ContractualRulesLicenseAttribution
   *
   * @returns {object} metadata of ContractualRulesLicenseAttribution
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ContractualRules/LicenseAttribution',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: '_type',
          clientName: '_type'
        },
        uberParent: 'ContractualRulesContractualRule',
        className: 'ContractualRulesLicenseAttribution',
        modelProperties: {
          targetPropertyName: {
            required: false,
            readOnly: true,
            serializedName: 'targetPropertyName',
            type: {
              name: 'String'
            }
          },
          _type: {
            required: true,
            serializedName: '_type',
            type: {
              name: 'String'
            }
          },
          mustBeCloseToContent: {
            required: false,
            readOnly: true,
            serializedName: 'mustBeCloseToContent',
            type: {
              name: 'Boolean'
            }
          },
          license: {
            required: false,
            readOnly: true,
            serializedName: 'license',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: '_type',
                clientName: '_type'
              },
              uberParent: 'ResponseBase',
              className: 'License'
            }
          },
          licenseNotice: {
            required: false,
            readOnly: true,
            serializedName: 'licenseNotice',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ContractualRulesLicenseAttribution;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure";
import * as moment from "moment";

export {

  BaseResource,
  CloudError
};

/**
 * An annotation describing a change in the availabilityState to Available from Unavailable with a
 * reasonType of type Unplanned
 */
export interface AvailabilityStatusPropertiesRecentlyResolvedState {
  /**
   * Timestamp for when the availabilityState changed to Unavailable
   */
  unavailableOccurredTime?: Date;
  /**
   * Timestamp when the availabilityState changes to Available.
   */
  resolvedTime?: Date;
  /**
   * Brief description of cause of the resource becoming unavailable.
   */
  unavailabilitySummary?: string;
}

/**
 * Lists actions the user can take based on the current availabilityState of the resource.
 */
export interface RecommendedAction {
  /**
   * Recommended action.
   */
  action?: string;
  /**
   * Link to the action
   */
  actionUrl?: string;
  /**
   * Substring of action, it describes which text should host the action url.
   */
  actionUrlText?: string;
}

/**
 * Status of the service impacting event.
 */
export interface ServiceImpactingEventStatus {
  /**
   * Current status of the event
   */
  value?: string;
}

/**
 * Properties of the service impacting event.
 */
export interface ServiceImpactingEventIncidentProperties {
  /**
   * Title of the incident.
   */
  title?: string;
  /**
   * Service impacted by the event.
   */
  service?: string;
  /**
   * Region impacted by the event.
   */
  region?: string;
  /**
   * Type of Event.
   */
  incidentType?: string;
}

/**
 * Lists the service impacting events that may be affecting the health of the resource.
 */
export interface ServiceImpactingEvent {
  /**
   * Timestamp for when the event started.
   */
  eventStartTime?: Date;
  /**
   * Timestamp for when event was submitted/detected.
   */
  eventStatusLastModifiedTime?: Date;
  /**
   * Correlation id for the event
   */
  correlationId?: string;
  /**
   * Status of the service impacting event.
   */
  status?: ServiceImpactingEventStatus;
  /**
   * Properties of the service impacting event.
   */
  incidentProperties?: ServiceImpactingEventIncidentProperties;
}

/**
 * Properties of availability state.
 */
export interface AvailabilityStatusProperties {
  /**
   * Availability status of the resource. When it is null, this availabilityStatus object
   * represents an availability impacting event. Possible values include: 'Available',
   * 'Unavailable', 'Unknown'
   */
  availabilityState?: string;
  /**
   * Summary description of the availability status.
   */
  summary?: string;
  /**
   * Details of the availability status.
   */
  detailedStatus?: string;
  /**
   * When the resource's availabilityState is Unavailable, it describes where the health impacting
   * event was originated. Examples are planned, unplanned, user initiated or an outage etc.
   */
  reasonType?: string;
  /**
   * When the resource's availabilityState is Unavailable, it provides the Timestamp for when the
   * health impacting event was received.
   */
  rootCauseAttributionTime?: Date;
  /**
   * In case of an availability impacting event, it describes when the health impacting event was
   * originated. Examples are Lifecycle, Downtime, Fault Analysis etc.
   */
  healthEventType?: string;
  /**
   * In case of an availability impacting event, it describes where the health impacting event was
   * originated. Examples are PlatformInitiated, UserInitiated etc.
   */
  healthEventCause?: string;
  /**
   * In case of an availability impacting event, it describes the category of a PlatformInitiated
   * health impacting event. Examples are Planned, Unplanned etc.
   */
  healthEventCategory?: string;
  /**
   * It is a unique Id that identifies the event
   */
  healthEventId?: string;
  /**
   * When the resource's availabilityState is Unavailable and the reasonType is not User Initiated,
   * it provides the date and time for when the issue is expected to be resolved.
   */
  resolutionETA?: Date;
  /**
   * Timestamp for when last change in health status occurred.
   */
  occuredTime?: Date;
  /**
   * Chronicity of the availability transition. Possible values include: 'Transient', 'Persistent'
   */
  reasonChronicity?: string;
  /**
   * Timestamp for when the health was last checked.
   */
  reportedTime?: Date;
  /**
   * An annotation describing a change in the availabilityState to Available from Unavailable with
   * a reasonType of type Unplanned
   */
  recentlyResolvedState?: AvailabilityStatusPropertiesRecentlyResolvedState;
  /**
   * Lists actions the user can take based on the current availabilityState of the resource.
   */
  recommendedActions?: RecommendedAction[];
  /**
   * Lists the service impacting events that may be affecting the health of the resource.
   */
  serviceImpactingEvents?: ServiceImpactingEvent[];
}

/**
 * availabilityStatus of a resource.
 */
export interface AvailabilityStatus {
  /**
   * Azure Resource Manager Identity for the availabilityStatuses resource.
   */
  id?: string;
  /**
   * current.
   */
  name?: string;
  /**
   * Microsoft.ResourceHealth/AvailabilityStatuses.
   */
  type?: string;
  /**
   * Azure Resource Manager geo location of the resource.
   */
  location?: string;
  /**
   * Properties of availability state.
   */
  properties?: AvailabilityStatusProperties;
}

/**
 * Properties of the operation.
 */
export interface OperationDisplay {
  /**
   * Provider name.
   */
  provider?: string;
  /**
   * Resource name.
   */
  resource?: string;
  /**
   * Operation name.
   */
  operation?: string;
  /**
   * Description of the operation.
   */
  description?: string;
}

/**
 * Operation available in the resourcehealth resource provider.
 */
export interface Operation {
  /**
   * Name of the operation.
   */
  name?: string;
  /**
   * Properties of the operation.
   */
  display?: OperationDisplay;
}

/**
 * Lists the operations response.
 */
export interface OperationListResult {
  /**
   * List of operations available in the resourcehealth resource provider.
   */
  value: Operation[];
}

/**
 * Error details.
 */
export interface ErrorResponse {
  /**
   * The error code.
   */
  readonly code?: string;
  /**
   * The error message.
   */
  readonly message?: string;
  /**
   * The error details.
   */
  readonly details?: string;
}

/**
 * The List availabilityStatus operation response.
 */
export interface AvailabilityStatusListResult extends Array<AvailabilityStatus> {
  /**
   * The URI to fetch the next page of availabilityStatuses. Call ListNext() with this URI to fetch
   * the next page of availabilityStatuses.
   */
  nextLink?: string;
}

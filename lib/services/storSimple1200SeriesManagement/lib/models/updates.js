/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The updates profile
 *
 * @extends models['BaseModel']
 */
class Updates extends models['BaseModel'] {
  /**
   * Create a Updates.
   * @property {string} [deviceVersion] The current Device version.
   * @property {date} [deviceLastScannedTime] The last time when the device did
   * an update scan.
   * @property {boolean} [regularUpdatesAvailable] Set to true if regular
   * updates were detected for the current version of the device.
   * @property {boolean} [rebootRequiredForInstall] Set to true if
   * RegularUpdatesAvailable is true and if at least one of the updateItems
   * detected has needs a reboot to install.
   * @property {number} [totalItemsPendingForDownload] The total number of
   * items pending for download.
   * @property {number} [totalItemsPendingForInstall] The total number of items
   * pending for install.
   * @property {string} [status] The current update operation. Possible values
   * include: 'Idle', 'Scanning', 'Downloading', 'Installing'
   * @property {date} [lastCompletedScanTime] The time when the last scan job
   * was completed (success|cancelled|failed) on the device.
   * @property {date} [lastCompletedDownloadJobTime] The time when the last
   * Download job was completed (success|cancelled|failed) on the device.
   * @property {date} [lastCompletedInstallJobTime] The time when the last
   * Install job was completed (success|cancelled|failed) on the device.
   * @property {string} [inProgressDownloadJobId] If a download is in progress,
   * this field contains the JobId of that particular download job
   * @property {string} [inProgressInstallJobId] If an install is in progress,
   * this field contains the JobId of that particular install job
   * @property {date} [inProgressScanStartedTime] The time when the currently
   * running scan (if any) started
   * @property {date} [inProgressDownloadJobStartedTime] The time when the
   * currently running download (if any) started
   * @property {date} [inProgressInstallJobStartedTime] The time when the
   * currently running install (if any) started
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of Updates
   *
   * @returns {object} metadata of Updates
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Updates',
      type: {
        name: 'Composite',
        className: 'Updates',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          deviceVersion: {
            required: false,
            serializedName: 'properties.deviceVersion',
            type: {
              name: 'String'
            }
          },
          deviceLastScannedTime: {
            required: false,
            serializedName: 'properties.deviceLastScannedTime',
            type: {
              name: 'DateTime'
            }
          },
          regularUpdatesAvailable: {
            required: false,
            serializedName: 'properties.regularUpdatesAvailable',
            type: {
              name: 'Boolean'
            }
          },
          rebootRequiredForInstall: {
            required: false,
            serializedName: 'properties.rebootRequiredForInstall',
            type: {
              name: 'Boolean'
            }
          },
          totalItemsPendingForDownload: {
            required: false,
            serializedName: 'properties.totalItemsPendingForDownload',
            type: {
              name: 'Number'
            }
          },
          totalItemsPendingForInstall: {
            required: false,
            serializedName: 'properties.totalItemsPendingForInstall',
            type: {
              name: 'Number'
            }
          },
          status: {
            required: false,
            serializedName: 'properties.status',
            type: {
              name: 'Enum',
              allowedValues: [ 'Idle', 'Scanning', 'Downloading', 'Installing' ]
            }
          },
          lastCompletedScanTime: {
            required: false,
            serializedName: 'properties.lastCompletedScanTime',
            type: {
              name: 'DateTime'
            }
          },
          lastCompletedDownloadJobTime: {
            required: false,
            serializedName: 'properties.lastCompletedDownloadJobTime',
            type: {
              name: 'DateTime'
            }
          },
          lastCompletedInstallJobTime: {
            required: false,
            serializedName: 'properties.lastCompletedInstallJobTime',
            type: {
              name: 'DateTime'
            }
          },
          inProgressDownloadJobId: {
            required: false,
            serializedName: 'properties.inProgressDownloadJobId',
            type: {
              name: 'String'
            }
          },
          inProgressInstallJobId: {
            required: false,
            serializedName: 'properties.inProgressInstallJobId',
            type: {
              name: 'String'
            }
          },
          inProgressScanStartedTime: {
            required: false,
            serializedName: 'properties.inProgressScanStartedTime',
            type: {
              name: 'DateTime'
            }
          },
          inProgressDownloadJobStartedTime: {
            required: false,
            serializedName: 'properties.inProgressDownloadJobStartedTime',
            type: {
              name: 'DateTime'
            }
          },
          inProgressInstallJobStartedTime: {
            required: false,
            serializedName: 'properties.inProgressInstallJobStartedTime',
            type: {
              name: 'DateTime'
            }
          }
        }
      }
    };
  }
}

module.exports = Updates;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Represents a StorSimple device object along with its properties
 *
 * @extends models['BaseModel']
 */
class Device extends models['BaseModel'] {
  /**
   * Create a Device.
   * @property {date} [activationTime] The UTC time at which the device was
   * activated
   * @property {array} [allowedDeviceOperations] Operations that are allowed on
   * the device based on its current state
   * @property {string} [culture] Language culture setting on the device. For
   * eg: "en-US"
   * @property {array} [deviceCapabilities] Device can be configured either as
   * FileServer or IscsiServer
   * @property {string} [deviceDescription] Short description given for the
   * device
   * @property {string} [domainName] Fully qualified name of the domain to
   * which the device is attached
   * @property {string} [deviceSoftwareVersion] Version number of the software
   * running on the device
   * @property {string} [friendlySoftwareName] Friendly name for the software
   * version
   * @property {string} [deviceConfigurationStatus] "Complete" if the device
   * has been successfully registered as File/IscsiServer and the creation of
   * share/volume is complete, "Pending" if the device is only registered but
   * the creation of share/volume is complete is still pending. Possible values
   * include: 'Complete', 'Pending'
   * @property {string} [modelDescription] Name of the device model
   * @property {string} [status] Current status of the device. Possible values
   * include: 'Unknown', 'Online', 'Offline', 'RequiresAttention',
   * 'MaintenanceMode', 'Creating', 'Provisioning', 'Deleted', 'ReadyToSetup',
   * 'Deactivated', 'Deactivating'
   * @property {string} [deviceType] Type of the device. Possible values
   * include: 'Invalid', 'Appliance', 'VirtualAppliance',
   * 'Series9000OnPremVirtualAppliance', 'Series9000VirtualAppliance',
   * 'Series9000PhysicalAppliance'
   * @property {object} [details] subclass containing more storage-related
   * information about the device. This field will be populated only if the get
   * call is made with $expand = details.
   * @property {number} [details.endpointCount] Total number of endpoints that
   * are currently on the device ( i.e. number of shares on FileServer or
   * number of volumes on IscsiServer)
   * @property {number} [details.totalStorageInBytes] Total storage available
   * on the device in bytes.
   * @property {number} [details.totalLocalStorageInBytes] Total local storage
   * capacity in device in bytes.
   * @property {number} [details.provisionedStorageInBytes] Storage in bytes
   * that has been provisioned on the device including both local and cloud
   * @property {number} [details.provisionedLocalStorageInBytes] Storage in
   * bytes that has been provisioned locally on the device
   * @property {number} [details.usingStorageInBytes] Storage that is being
   * currently used in bytes including both local and cloud
   * @property {number} [details.usingLocalStorageInBytes] Local Storage that
   * is being currently used in bytes
   * @property {number} [details.totalBackupSizeInBytes] Total size taken up by
   * backups in bytes
   * @property {number} [details.availableStorageInBytes] Total pending
   * available storage on the device in bytes
   * @property {number} [details.availableLocalStorageInBytes] Local pending
   * storage available on the device in bytes
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of Device
   *
   * @returns {object} metadata of Device
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Device',
      type: {
        name: 'Composite',
        className: 'Device',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          activationTime: {
            required: false,
            serializedName: 'properties.activationTime',
            type: {
              name: 'DateTime'
            }
          },
          allowedDeviceOperations: {
            required: false,
            serializedName: 'properties.allowedDeviceOperations',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'DeviceOperationElementType',
                  type: {
                    name: 'Enum',
                    allowedValues: [ 'None', 'Delete', 'DeleteWithWarning', 'DRSource', 'DRTarget', 'Browsable', 'ReadOnlyForDR', 'Deactivate' ]
                  }
              }
            }
          },
          culture: {
            required: false,
            serializedName: 'properties.culture',
            type: {
              name: 'String'
            }
          },
          deviceCapabilities: {
            required: false,
            serializedName: 'properties.deviceCapabilities',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'SupportedDeviceCapabilitiesElementType',
                  type: {
                    name: 'Enum',
                    allowedValues: [ 'Invalid', 'FileServer', 'IscsiServer' ]
                  }
              }
            }
          },
          deviceDescription: {
            required: false,
            serializedName: 'properties.deviceDescription',
            type: {
              name: 'String'
            }
          },
          domainName: {
            required: false,
            serializedName: 'properties.domainName',
            type: {
              name: 'String'
            }
          },
          deviceSoftwareVersion: {
            required: false,
            serializedName: 'properties.deviceSoftwareVersion',
            type: {
              name: 'String'
            }
          },
          friendlySoftwareName: {
            required: false,
            serializedName: 'properties.friendlySoftwareName',
            type: {
              name: 'String'
            }
          },
          deviceConfigurationStatus: {
            required: false,
            serializedName: 'properties.deviceConfigurationStatus',
            type: {
              name: 'Enum',
              allowedValues: [ 'Complete', 'Pending' ]
            }
          },
          modelDescription: {
            required: false,
            serializedName: 'properties.modelDescription',
            type: {
              name: 'String'
            }
          },
          status: {
            required: false,
            serializedName: 'properties.status',
            type: {
              name: 'Enum',
              allowedValues: [ 'Unknown', 'Online', 'Offline', 'RequiresAttention', 'MaintenanceMode', 'Creating', 'Provisioning', 'Deleted', 'ReadyToSetup', 'Deactivated', 'Deactivating' ]
            }
          },
          deviceType: {
            required: false,
            serializedName: 'properties.type',
            type: {
              name: 'Enum',
              allowedValues: [ 'Invalid', 'Appliance', 'VirtualAppliance', 'Series9000OnPremVirtualAppliance', 'Series9000VirtualAppliance', 'Series9000PhysicalAppliance' ]
            }
          },
          details: {
            required: false,
            serializedName: 'properties.details',
            type: {
              name: 'Composite',
              className: 'DeviceDetails'
            }
          }
        }
      }
    };
  }
}

module.exports = Device;

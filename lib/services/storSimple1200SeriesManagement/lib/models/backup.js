/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The backup.
 *
 * @extends models['BaseModel']
 */
class Backup extends models['BaseModel'] {
  /**
   * Create a Backup.
   * @property {string} [targetId] The path id of the target FileServer or
   * IscsiServer for which the backup was taken.
   * @property {string} [targetType] Type of target, FileServer or IscsiServer
   * @property {number} sizeInBytes The backup size in bytes.
   * @property {date} [createdTime] The time when the backup was created.
   * @property {date} [expirationTime] The time when the backup will expire.
   * @property {string} initiatedBy Indicates how the backup was initiated
   * "Manual | Scheduled". Possible values include: 'Manual', 'Scheduled'
   * @property {string} deviceId The Device Identifier.
   * @property {array} elements The backup elements.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of Backup
   *
   * @returns {object} metadata of Backup
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Backup',
      type: {
        name: 'Composite',
        className: 'Backup',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          targetId: {
            required: false,
            serializedName: 'properties.targetId',
            type: {
              name: 'String'
            }
          },
          targetType: {
            required: false,
            serializedName: 'properties.targetType',
            type: {
              name: 'String'
            }
          },
          sizeInBytes: {
            required: true,
            serializedName: 'properties.sizeInBytes',
            type: {
              name: 'Number'
            }
          },
          createdTime: {
            required: false,
            serializedName: 'properties.createdTime',
            type: {
              name: 'DateTime'
            }
          },
          expirationTime: {
            required: false,
            serializedName: 'properties.expirationTime',
            type: {
              name: 'DateTime'
            }
          },
          initiatedBy: {
            required: true,
            serializedName: 'properties.initiatedBy',
            type: {
              name: 'Enum',
              allowedValues: [ 'Manual', 'Scheduled' ]
            }
          },
          deviceId: {
            required: true,
            serializedName: 'properties.deviceId',
            type: {
              name: 'String'
            }
          },
          elements: {
            required: true,
            serializedName: 'properties.elements',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'BackupElementElementType',
                  type: {
                    name: 'Composite',
                    className: 'BackupElement'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = Backup;

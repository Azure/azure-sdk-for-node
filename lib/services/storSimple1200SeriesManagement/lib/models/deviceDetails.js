/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class containing more granular details about the device
 *
 */
class DeviceDetails {
  /**
   * Create a DeviceDetails.
   * @property {number} [endpointCount] Total number of endpoints that are
   * currently on the device ( i.e. number of shares on FileServer or number of
   * volumes on IscsiServer)
   * @property {number} [totalStorageInBytes] Total storage available on the
   * device in bytes.
   * @property {number} [totalLocalStorageInBytes] Total local storage capacity
   * in device in bytes.
   * @property {number} [provisionedStorageInBytes] Storage in bytes that has
   * been provisioned on the device including both local and cloud
   * @property {number} [provisionedLocalStorageInBytes] Storage in bytes that
   * has been provisioned locally on the device
   * @property {number} [usingStorageInBytes] Storage that is being currently
   * used in bytes including both local and cloud
   * @property {number} [usingLocalStorageInBytes] Local Storage that is being
   * currently used in bytes
   * @property {number} [totalBackupSizeInBytes] Total size taken up by backups
   * in bytes
   * @property {number} [availableStorageInBytes] Total pending available
   * storage on the device in bytes
   * @property {number} [availableLocalStorageInBytes] Local pending storage
   * available on the device in bytes
   */
  constructor() {
  }

  /**
   * Defines the metadata of DeviceDetails
   *
   * @returns {object} metadata of DeviceDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DeviceDetails',
      type: {
        name: 'Composite',
        className: 'DeviceDetails',
        modelProperties: {
          endpointCount: {
            required: false,
            serializedName: 'endpointCount',
            type: {
              name: 'Number'
            }
          },
          totalStorageInBytes: {
            required: false,
            serializedName: 'totalStorageInBytes',
            type: {
              name: 'Number'
            }
          },
          totalLocalStorageInBytes: {
            required: false,
            serializedName: 'totalLocalStorageInBytes',
            type: {
              name: 'Number'
            }
          },
          provisionedStorageInBytes: {
            required: false,
            serializedName: 'provisionedStorageInBytes',
            type: {
              name: 'Number'
            }
          },
          provisionedLocalStorageInBytes: {
            required: false,
            serializedName: 'provisionedLocalStorageInBytes',
            type: {
              name: 'Number'
            }
          },
          usingStorageInBytes: {
            required: false,
            serializedName: 'usingStorageInBytes',
            type: {
              name: 'Number'
            }
          },
          usingLocalStorageInBytes: {
            required: false,
            serializedName: 'usingLocalStorageInBytes',
            type: {
              name: 'Number'
            }
          },
          totalBackupSizeInBytes: {
            required: false,
            serializedName: 'totalBackupSizeInBytes',
            type: {
              name: 'Number'
            }
          },
          availableStorageInBytes: {
            required: false,
            serializedName: 'availableStorageInBytes',
            type: {
              name: 'Number'
            }
          },
          availableLocalStorageInBytes: {
            required: false,
            serializedName: 'availableLocalStorageInBytes',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = DeviceDetails;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The iSCSI server.
 *
 * @extends models['BaseModel']
 */
class ISCSIServer extends models['BaseModel'] {
  /**
   * Create a ISCSIServer.
   * @property {string} storageDomainId The storage domain id.
   * @property {string} backupScheduleGroupId The backup policy id.
   * @property {string} [description] The description.
   * @property {string} [chapId] The chap id.
   * @property {string} [reverseChapId] The reverse chap id.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ISCSIServer
   *
   * @returns {object} metadata of ISCSIServer
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ISCSIServer',
      type: {
        name: 'Composite',
        className: 'ISCSIServer',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          storageDomainId: {
            required: true,
            serializedName: 'properties.storageDomainId',
            type: {
              name: 'String'
            }
          },
          backupScheduleGroupId: {
            required: true,
            serializedName: 'properties.backupScheduleGroupId',
            type: {
              name: 'String'
            }
          },
          description: {
            required: false,
            serializedName: 'properties.description',
            type: {
              name: 'String'
            }
          },
          chapId: {
            required: false,
            serializedName: 'properties.chapId',
            type: {
              name: 'String'
            }
          },
          reverseChapId: {
            required: false,
            serializedName: 'properties.reverseChapId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ISCSIServer;

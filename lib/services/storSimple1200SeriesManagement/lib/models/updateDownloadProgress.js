/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * details available during the download
 *
 */
class UpdateDownloadProgress {
  /**
   * Create a UpdateDownloadProgress.
   * @property {string} [downloadPhase] The download phase. Possible values
   * include: 'Unknown', 'Initializing', 'Downloading', 'Verifying'
   * @property {number} [percentComplete] Percentage of completion.
   * @property {number} [totalBytesToDownload] Total bytes to download.
   * @property {number} [totalBytesDownloaded] Total bytes downloaded.
   * @property {number} [numberOfUpdatesToDownload] Number of updates to
   * download.
   * @property {number} [numberOfUpdatesDownloaded] Number of updates
   * downloaded.
   */
  constructor() {
  }

  /**
   * Defines the metadata of UpdateDownloadProgress
   *
   * @returns {object} metadata of UpdateDownloadProgress
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'UpdateDownloadProgress',
      type: {
        name: 'Composite',
        className: 'UpdateDownloadProgress',
        modelProperties: {
          downloadPhase: {
            required: false,
            serializedName: 'downloadPhase',
            type: {
              name: 'Enum',
              allowedValues: [ 'Unknown', 'Initializing', 'Downloading', 'Verifying' ]
            }
          },
          percentComplete: {
            required: false,
            serializedName: 'percentComplete',
            type: {
              name: 'Number'
            }
          },
          totalBytesToDownload: {
            required: false,
            serializedName: 'totalBytesToDownload',
            type: {
              name: 'Number'
            }
          },
          totalBytesDownloaded: {
            required: false,
            serializedName: 'totalBytesDownloaded',
            type: {
              name: 'Number'
            }
          },
          numberOfUpdatesToDownload: {
            required: false,
            serializedName: 'numberOfUpdatesToDownload',
            type: {
              name: 'Number'
            }
          },
          numberOfUpdatesDownloaded: {
            required: false,
            serializedName: 'numberOfUpdatesDownloaded',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = UpdateDownloadProgress;

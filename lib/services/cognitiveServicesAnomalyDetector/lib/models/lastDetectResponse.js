/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a LastDetectResponse.
 */
class LastDetectResponse {
  /**
   * Create a LastDetectResponse.
   * @property {number} [period] Frequency extracted from the series, zero
   * means no recurrent pattern has been found.
   * @property {number} [suggestedWindow] Suggested input series points needed
   * for detecting the latest point.
   * @property {number} [expectedValue] Expected value of the latest point.
   * @property {number} [upperMargin] Upper margin of the latest point.
   * UpperMargin is used to calculate upperBoundary, which equals to
   * expectedValue + (100 - sensitivity)*upperMargin. If the value of latest
   * point is between upperBoundary and lowerBoundary, it should be treated as
   * normal value. By adjusting sensitivity value, anomaly status of latest
   * point can be changed.
   * @property {number} [lowerMargin] Lower margin of the latest point.
   * LowerMargin is used to calculate lowerBoundary, which equals to
   * expectedValue - (100 - sensitivity)*lowerMargin.
   * @property {boolean} [isAnomaly] Anomaly status of the latest point, true
   * means the latest point is an anomaly either in negative direction or
   * positive direction.
   * @property {boolean} [isNegativeAnomaly] Anomaly status in negative
   * direction of the latest point. True means the latest point is an anomaly
   * and its real value is smaller than the expected one.
   * @property {boolean} [isPositiveAnomaly] Anomaly status in positive
   * direction of the latest point. True means the latest point is an anomaly
   * and its real value is larger than the expected one.
   */
  constructor() {
  }

  /**
   * Defines the metadata of LastDetectResponse
   *
   * @returns {object} metadata of LastDetectResponse
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'LastDetectResponse',
      type: {
        name: 'Composite',
        className: 'LastDetectResponse',
        modelProperties: {
          period: {
            required: false,
            serializedName: 'period',
            type: {
              name: 'Number'
            }
          },
          suggestedWindow: {
            required: false,
            serializedName: 'suggestedWindow',
            type: {
              name: 'Number'
            }
          },
          expectedValue: {
            required: false,
            serializedName: 'expectedValue',
            type: {
              name: 'Number'
            }
          },
          upperMargin: {
            required: false,
            serializedName: 'upperMargin',
            type: {
              name: 'Number'
            }
          },
          lowerMargin: {
            required: false,
            serializedName: 'lowerMargin',
            type: {
              name: 'Number'
            }
          },
          isAnomaly: {
            required: false,
            serializedName: 'isAnomaly',
            type: {
              name: 'Boolean'
            }
          },
          isNegativeAnomaly: {
            required: false,
            serializedName: 'isNegativeAnomaly',
            type: {
              name: 'Boolean'
            }
          },
          isPositiveAnomaly: {
            required: false,
            serializedName: 'isPositiveAnomaly',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = LastDetectResponse;

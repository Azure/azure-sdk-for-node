/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a Request.
 */
class Request {
  /**
   * Create a Request.
   * @property {array} series Time series data points. Points should be sorted
   * by timestamp in ascending order to match the anomaly detection result. If
   * the data is not sorted correctly or there is duplicated timestamp, the API
   * will not work. In such case, an error message will be returned.
   * @property {string} granularity Can only be one of yearly, monthly, weekly,
   * daily, hourly or minutely. Granularity is used for verify whether input
   * series is valid. Possible values include: 'yearly', 'monthly', 'weekly',
   * 'daily', 'hourly', 'minutely'
   * @property {number} [customInterval] Custom Interval is used to set
   * non-standard time interval, for example, if the series is 5 minutes,
   * request can be set as {"granularity":"minutely", "customInterval":5}.
   * @property {number} [period] Optional argument, periodic value of a time
   * series. If the value is null or does not present, the API will determine
   * the period automatically.
   * @property {number} [maxAnomalyRatio] Optional argument, advanced model
   * parameter, max anomaly ratio in a time series.
   * @property {number} [sensitivity] Optional argument, advanced model
   * parameter, between 0-99, the lower the value is, the larger the margin
   * value will be which means less anomalies will be accepted.
   */
  constructor() {
  }

  /**
   * Defines the metadata of Request
   *
   * @returns {object} metadata of Request
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Request',
      type: {
        name: 'Composite',
        className: 'Request',
        modelProperties: {
          series: {
            required: true,
            serializedName: 'series',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PointElementType',
                  type: {
                    name: 'Composite',
                    className: 'Point'
                  }
              }
            }
          },
          granularity: {
            required: true,
            serializedName: 'granularity',
            type: {
              name: 'Enum',
              allowedValues: [ 'yearly', 'monthly', 'weekly', 'daily', 'hourly', 'minutely' ]
            }
          },
          customInterval: {
            required: false,
            serializedName: 'customInterval',
            type: {
              name: 'Number'
            }
          },
          period: {
            required: false,
            serializedName: 'period',
            type: {
              name: 'Number'
            }
          },
          maxAnomalyRatio: {
            required: false,
            serializedName: 'maxAnomalyRatio',
            type: {
              name: 'Number'
            }
          },
          sensitivity: {
            required: false,
            serializedName: 'sensitivity',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = Request;

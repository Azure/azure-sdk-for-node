/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * Common properties of an ARM resource.
 *
 * @member {string} [id] Resource Id.
 * @member {string} [name] Resource name.
 * @member {string} location Resource location.
 * @member {string} [type] Resource type.
 * @member {object} [tags] User-defined tags for the resource.
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  location: string;
  readonly type?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the CommitmentAssociationProperties class.
 * @constructor
 * Properties of an Azure ML commitment association.
 *
 * @member {string} [associatedResourceId] The ID of the resource this
 * association points to, such as the ARM ID of an Azure ML web service.
 * @member {string} [commitmentPlanId] The ARM ID of the parent Azure ML
 * commitment plan.
 * @member {date} [creationDate] The date at which this commitment association
 * was created, in ISO 8601 format.
 */
export interface CommitmentAssociationProperties {
  readonly associatedResourceId?: string;
  readonly commitmentPlanId?: string;
  readonly creationDate?: Date;
}

/**
 * @class
 * Initializes a new instance of the CommitmentAssociation class.
 * @constructor
 * Represents the association between a commitment plan and some other
 * resource, such as a Machine Learning web service.
 *
 * @member {string} [etag] An entity tag used to enforce optimistic
 * concurrency.
 * @member {object} [properties] The properties of the commitment association
 * resource.
 * @member {string} [properties.associatedResourceId] The ID of the resource
 * this association points to, such as the ARM ID of an Azure ML web service.
 * @member {string} [properties.commitmentPlanId] The ARM ID of the parent
 * Azure ML commitment plan.
 * @member {date} [properties.creationDate] The date at which this commitment
 * association was created, in ISO 8601 format.
 */
export interface CommitmentAssociation extends Resource {
  etag?: string;
  properties?: CommitmentAssociationProperties;
}

/**
 * @class
 * Initializes a new instance of the ResourceSku class.
 * @constructor
 * The SKU of a resource.
 *
 * @member {number} [capacity] The scale-out capacity of the resource. 1 is 1x,
 * 2 is 2x, etc. This impacts the quantities and cost of any commitment plan
 * resource.
 * @member {string} [name] The SKU name. Along with tier, uniquely identifies
 * the SKU.
 * @member {string} [tier] The SKU tier. Along with name, uniquely identifies
 * the SKU.
 */
export interface ResourceSku {
  capacity?: number;
  name?: string;
  tier?: string;
}

/**
 * @class
 * Initializes a new instance of the MoveCommitmentAssociationRequest class.
 * @constructor
 * Specifies the destination Azure ML commitment plan for a move operation.
 *
 * @member {string} [destinationPlanId] The ARM ID of the commitment plan to
 * re-parent the commitment association to.
 */
export interface MoveCommitmentAssociationRequest {
  destinationPlanId?: string;
}

/**
 * @class
 * Initializes a new instance of the CommitmentPlanPatchPayload class.
 * @constructor
 * The properties of a commitment plan which may be updated via PATCH.
 *
 * @member {object} [tags] User-defined tags for the commitment plan.
 * @member {object} [sku] The commitment plan SKU.
 * @member {number} [sku.capacity] The scale-out capacity of the resource. 1 is
 * 1x, 2 is 2x, etc. This impacts the quantities and cost of any commitment
 * plan resource.
 * @member {string} [sku.name] The SKU name. Along with tier, uniquely
 * identifies the SKU.
 * @member {string} [sku.tier] The SKU tier. Along with name, uniquely
 * identifies the SKU.
 */
export interface CommitmentPlanPatchPayload {
  tags?: { [propertyName: string]: string };
  sku?: ResourceSku;
}

/**
 * @class
 * Initializes a new instance of the PlanQuantity class.
 * @constructor
 * Represents the quantity a commitment plan provides of a metered resource.
 *
 * @member {number} [allowance] The quantity added to the commitment plan at an
 * interval specified by its allowance frequency.
 * @member {number} [amount] The quantity available to the plan the last time
 * usage was calculated.
 * @member {string} [includedQuantityMeter] The Azure meter for usage against
 * included quantities.
 * @member {string} [overageMeter] The Azure meter for usage which exceeds
 * included quantities.
 */
export interface PlanQuantity {
  readonly allowance?: number;
  readonly amount?: number;
  readonly includedQuantityMeter?: string;
  readonly overageMeter?: string;
}

/**
 * @class
 * Initializes a new instance of the CommitmentPlanProperties class.
 * @constructor
 * Properties of an Azure ML commitment plan.
 *
 * @member {boolean} [chargeForOverage] Indicates whether usage beyond the
 * commitment plan's included quantities will be charged.
 * @member {boolean} [chargeForPlan] Indicates whether the commitment plan will
 * incur a charge.
 * @member {date} [creationDate] The date at which this commitment plan was
 * created, in ISO 8601 format.
 * @member {object} [includedQuantities] The included resource quantities this
 * plan gives you.
 * @member {number} [maxAssociationLimit] The maximum number of commitment
 * associations that can be children of this commitment plan.
 * @member {number} [maxCapacityLimit] The maximum scale-out capacity for this
 * commitment plan.
 * @member {number} [minCapacityLimit] The minimum scale-out capacity for this
 * commitment plan.
 * @member {string} [planMeter] The Azure meter which will be used to charge
 * for this commitment plan.
 * @member {number} [refillFrequencyInDays] The frequency at which this
 * commitment plan's included quantities are refilled.
 * @member {boolean} [suspendPlanOnOverage] Indicates whether this commitment
 * plan will be moved into a suspended state if usage goes beyond the
 * commitment plan's included quantities.
 */
export interface CommitmentPlanProperties {
  readonly chargeForOverage?: boolean;
  readonly chargeForPlan?: boolean;
  readonly creationDate?: Date;
  readonly includedQuantities?: { [propertyName: string]: PlanQuantity };
  readonly maxAssociationLimit?: number;
  readonly maxCapacityLimit?: number;
  readonly minCapacityLimit?: number;
  readonly planMeter?: string;
  readonly refillFrequencyInDays?: number;
  readonly suspendPlanOnOverage?: boolean;
}

/**
 * @class
 * Initializes a new instance of the CommitmentPlan class.
 * @constructor
 * An Azure ML commitment plan resource.
 *
 * @member {string} [etag] An entity tag used to enforce optimistic
 * concurrency.
 * @member {object} [properties] The commitment plan properties.
 * @member {boolean} [properties.chargeForOverage] Indicates whether usage
 * beyond the commitment plan's included quantities will be charged.
 * @member {boolean} [properties.chargeForPlan] Indicates whether the
 * commitment plan will incur a charge.
 * @member {date} [properties.creationDate] The date at which this commitment
 * plan was created, in ISO 8601 format.
 * @member {object} [properties.includedQuantities] The included resource
 * quantities this plan gives you.
 * @member {number} [properties.maxAssociationLimit] The maximum number of
 * commitment associations that can be children of this commitment plan.
 * @member {number} [properties.maxCapacityLimit] The maximum scale-out
 * capacity for this commitment plan.
 * @member {number} [properties.minCapacityLimit] The minimum scale-out
 * capacity for this commitment plan.
 * @member {string} [properties.planMeter] The Azure meter which will be used
 * to charge for this commitment plan.
 * @member {number} [properties.refillFrequencyInDays] The frequency at which
 * this commitment plan's included quantities are refilled.
 * @member {boolean} [properties.suspendPlanOnOverage] Indicates whether this
 * commitment plan will be moved into a suspended state if usage goes beyond
 * the commitment plan's included quantities.
 * @member {object} [sku] The commitment plan SKU.
 * @member {number} [sku.capacity] The scale-out capacity of the resource. 1 is
 * 1x, 2 is 2x, etc. This impacts the quantities and cost of any commitment
 * plan resource.
 * @member {string} [sku.name] The SKU name. Along with tier, uniquely
 * identifies the SKU.
 * @member {string} [sku.tier] The SKU tier. Along with name, uniquely
 * identifies the SKU.
 */
export interface CommitmentPlan extends Resource {
  etag?: string;
  readonly properties?: CommitmentPlanProperties;
  sku?: ResourceSku;
}

/**
 * @class
 * Initializes a new instance of the PlanUsageHistory class.
 * @constructor
 * Represents historical information about usage of the Azure resources
 * associated with a commitment plan.
 *
 * @member {object} [planDeletionOverage] Overage incurred as a result of
 * deleting a commitment plan.
 * @member {object} [planMigrationOverage] Overage incurred as a result of
 * migrating a commitment plan from one SKU to another.
 * @member {object} [planQuantitiesAfterUsage] Included quantities remaining
 * after usage against the commitment plan's associated resources was
 * calculated.
 * @member {object} [planQuantitiesBeforeUsage] Included quantities remaining
 * before usage against the commitment plan's associated resources was
 * calculated.
 * @member {object} [planUsageOverage] Usage against the commitment plan's
 * associated resources which was not covered by included quantities and is
 * therefore overage.
 * @member {object} [usage] Usage against the commitment plan's associated
 * resources.
 * @member {date} [usageDate] The date of usage, in ISO 8601 format.
 */
export interface PlanUsageHistory {
  planDeletionOverage?: { [propertyName: string]: number };
  planMigrationOverage?: { [propertyName: string]: number };
  planQuantitiesAfterUsage?: { [propertyName: string]: number };
  planQuantitiesBeforeUsage?: { [propertyName: string]: number };
  planUsageOverage?: { [propertyName: string]: number };
  usage?: { [propertyName: string]: number };
  usageDate?: Date;
}


/**
 * @class
 * Initializes a new instance of the CommitmentAssociationListResult class.
 * @constructor
 * A page of commitment association resources.
 *
 * @member {string} [nextLink] A URI to retrieve the next page of results.
 */
export interface CommitmentAssociationListResult extends Array<CommitmentAssociation> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the CommitmentPlanListResult class.
 * @constructor
 * A page of commitment plan resources.
 *
 * @member {string} [nextLink] A URI to retrieve the next page of results.
 */
export interface CommitmentPlanListResult extends Array<CommitmentPlan> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the PlanUsageHistoryListResult class.
 * @constructor
 * A page of usage history.
 *
 * @member {string} [nextLink] A URI to retrieve the next page of results.
 */
export interface PlanUsageHistoryListResult extends Array<PlanUsageHistory> {
  nextLink?: string;
}

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Instance of an Azure ML web service resource.
 *
 * @extends models['Resource']
 */
class WebService extends models['Resource'] {
  /**
   * Create a WebService.
   * @member {object} properties Contains the property payload that describes
   * the web service.
   * @member {string} [properties.title] The title of the web service.
   * @member {string} [properties.description] The description of the web
   * service.
   * @member {date} [properties.createdOn] Read Only: The date and time when
   * the web service was created.
   * @member {date} [properties.modifiedOn] Read Only: The date and time when
   * the web service was last modified.
   * @member {string} [properties.provisioningState] Read Only: The provision
   * state of the web service. Valid values are Unknown, Provisioning,
   * Succeeded, and Failed. Possible values include: 'Unknown', 'Provisioning',
   * 'Succeeded', 'Failed'
   * @member {object} [properties.keys] Contains the web service provisioning
   * keys. If you do not specify provisioning keys, the Azure Machine Learning
   * system generates them for you. Note: The keys are not returned from calls
   * to GET operations.
   * @member {string} [properties.keys.primary] The primary access key.
   * @member {string} [properties.keys.secondary] The secondary access key.
   * @member {boolean} [properties.readOnly] When set to true, indicates that
   * the web service is read-only and can no longer be updated or patched, only
   * removed. Default, is false. Note: Once set to true, you cannot change its
   * value.
   * @member {string} [properties.swaggerLocation] Read Only: Contains the URI
   * of the swagger spec associated with this web service.
   * @member {boolean} [properties.exposeSampleData] When set to true, sample
   * data is included in the web service's swagger definition. The default
   * value is true.
   * @member {object} [properties.realtimeConfiguration] Contains the
   * configuration settings for the web service endpoint.
   * @member {number} [properties.realtimeConfiguration.maxConcurrentCalls]
   * Specifies the maximum concurrent calls that can be made to the web
   * service. Minimum value: 4, Maximum value: 200.
   * @member {object} [properties.diagnostics] Settings controlling the
   * diagnostics traces collection for the web service.
   * @member {string} [properties.diagnostics.level] Specifies the verbosity of
   * the diagnostic output. Valid values are: None - disables tracing; Error -
   * collects only error (stderr) traces; All - collects all traces (stdout and
   * stderr). Possible values include: 'None', 'Error', 'All'
   * @member {date} [properties.diagnostics.expiry] Specifies the date and time
   * when the logging will cease. If null, diagnostic collection is not time
   * limited.
   * @member {object} [properties.storageAccount] Specifies the storage account
   * that Azure Machine Learning uses to store information about the web
   * service. Only the name of the storage account is returned from calls to
   * GET operations. When updating the storage account information, you must
   * ensure that all necessary assets are available in the new storage account
   * or calls to your web service will fail.
   * @member {string} [properties.storageAccount.name] Specifies the name of
   * the storage account.
   * @member {string} [properties.storageAccount.key] Specifies the key used to
   * access the storage account.
   * @member {object} [properties.machineLearningWorkspace] Specifies the
   * Machine Learning workspace containing the experiment that is source for
   * the web service.
   * @member {string} [properties.machineLearningWorkspace.id] Specifies the
   * workspace ID of the machine learning workspace associated with the web
   * service
   * @member {object} [properties.commitmentPlan] Contains the commitment plan
   * associated with this web service. Set at creation time. Once set, this
   * value cannot be changed. Note: The commitment plan is not returned from
   * calls to GET operations.
   * @member {string} [properties.commitmentPlan.id] Specifies the Azure
   * Resource Manager ID of the commitment plan associated with the web
   * service.
   * @member {object} [properties.input] Contains the Swagger 2.0 schema
   * describing one or more of the web service's inputs. For more information,
   * see the Swagger specification.
   * @member {string} [properties.input.title] The title of your Swagger
   * schema.
   * @member {string} [properties.input.description] The description of the
   * Swagger schema.
   * @member {string} [properties.input.type] The type of the entity described
   * in swagger. Always 'object'.
   * @member {object} [properties.input.properties] Specifies a collection that
   * contains the column schema for each input or output of the web service.
   * For more information, see the Swagger specification.
   * @member {object} [properties.output] Contains the Swagger 2.0 schema
   * describing one or more of the web service's outputs. For more information,
   * see the Swagger specification.
   * @member {string} [properties.output.title] The title of your Swagger
   * schema.
   * @member {string} [properties.output.description] The description of the
   * Swagger schema.
   * @member {string} [properties.output.type] The type of the entity described
   * in swagger. Always 'object'.
   * @member {object} [properties.output.properties] Specifies a collection
   * that contains the column schema for each input or output of the web
   * service. For more information, see the Swagger specification.
   * @member {object} [properties.exampleRequest] Defines sample input data for
   * one or more of the service's inputs.
   * @member {object} [properties.exampleRequest.inputs] Sample input data for
   * the web service's input(s) given as an input name to sample input values
   * matrix map.
   * @member {object} [properties.exampleRequest.globalParameters] Sample input
   * data for the web service's global parameters
   * @member {object} [properties.assets] Contains user defined properties
   * describing web service assets. Properties are expressed as Key/Value
   * pairs.
   * @member {object} [properties.parameters] The set of global parameters
   * values defined for the web service, given as a global parameter name to
   * default value map. If no default value is specified, the parameter is
   * considered to be required.
   * @member {boolean} [properties.payloadsInBlobStorage] When set to true,
   * indicates that the payload size is larger than 3 MB. Otherwise false. If
   * the payload size exceed 3 MB, the payload is stored in a blob and the
   * PayloadsLocation parameter contains the URI of the blob. Otherwise, this
   * will be set to false and Assets, Input, Output, Package, Parameters,
   * ExampleRequest are inline. The Payload sizes is determined by adding the
   * size of the Assets, Input, Output, Package, Parameters, and the
   * ExampleRequest.
   * @member {object} [properties.payloadsLocation] The URI of the payload
   * blob. This paramater contains a value only if the payloadsInBlobStorage
   * parameter is set to true. Otherwise is set to null.
   * @member {string} [properties.payloadsLocation.uri] The URI from which the
   * blob is accessible from. For example, aml://abc for system assets or
   * https://xyz for user assets or payload.
   * @member {string} [properties.payloadsLocation.credentials] Access
   * credentials for the blob, if applicable (e.g. blob specified by storage
   * account connection string + blob URI)
   * @member {string} [properties.packageType] Polymorphic Discriminator
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of WebService
   *
   * @returns {object} metadata of WebService
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'WebService',
      type: {
        name: 'Composite',
        className: 'WebService',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          location: {
            required: true,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          properties: {
            required: true,
            serializedName: 'properties',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'packageType',
                clientName: 'packageType'
              },
              uberParent: 'WebServiceProperties',
              className: 'WebServiceProperties'
            }
          }
        }
      }
    };
  }
}

module.exports = WebService;

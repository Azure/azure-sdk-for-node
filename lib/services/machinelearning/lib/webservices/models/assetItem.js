/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Information about an asset associated with the web service.
 *
 */
class AssetItem {
  /**
   * Create a AssetItem.
   * @member {string} name Asset's friendly name.
   * @member {string} [id] Asset's Id.
   * @member {string} type Asset's type. Possible values include: 'Module',
   * 'Resource'
   * @member {object} locationInfo Access information for the asset.
   * @member {string} [locationInfo.uri] The URI from which the blob is
   * accessible from. For example, aml://abc for system assets or https://xyz
   * for user assets or payload.
   * @member {string} [locationInfo.credentials] Access credentials for the
   * blob, if applicable (e.g. blob specified by storage account connection
   * string + blob URI)
   * @member {object} [inputPorts] Information about the asset's input ports.
   * @member {object} [outputPorts] Information about the asset's output ports.
   * @member {object} [metadata] If the asset is a custom module, this holds
   * the module's metadata.
   * @member {array} [parameters] If the asset is a custom module, this holds
   * the module's parameters.
   */
  constructor() {
  }

  /**
   * Defines the metadata of AssetItem
   *
   * @returns {object} metadata of AssetItem
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AssetItem',
      type: {
        name: 'Composite',
        className: 'AssetItem',
        modelProperties: {
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          type: {
            required: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          locationInfo: {
            required: true,
            serializedName: 'locationInfo',
            type: {
              name: 'Composite',
              className: 'BlobLocation'
            }
          },
          inputPorts: {
            required: false,
            serializedName: 'inputPorts',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'InputPortElementType',
                  type: {
                    name: 'Composite',
                    className: 'InputPort'
                  }
              }
            }
          },
          outputPorts: {
            required: false,
            serializedName: 'outputPorts',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'OutputPortElementType',
                  type: {
                    name: 'Composite',
                    className: 'OutputPort'
                  }
              }
            }
          },
          metadata: {
            required: false,
            serializedName: 'metadata',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          parameters: {
            required: false,
            serializedName: 'parameters',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ModuleAssetParameterElementType',
                  type: {
                    name: 'Composite',
                    className: 'ModuleAssetParameter'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = AssetItem;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * WebServices
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AzureMLWebServicesManagementClient.
 */
export interface WebServices {


    /**
     * Create or update a web service. This call will overwrite an existing web
     * service. Note that there is no warning or confirmation. This is a
     * nonrecoverable operation. If your intent is to create a new web service,
     * call the Get operation first to verify that it does not exist.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {object} createOrUpdatePayload The payload that is used to create or
     * update the web service.
     *
     * @param {object} createOrUpdatePayload.properties Contains the property
     * payload that describes the web service.
     *
     * @param {string} [createOrUpdatePayload.properties.title] The title of the
     * web service.
     *
     * @param {string} [createOrUpdatePayload.properties.description] The
     * description of the web service.
     *
     * @param {object} [createOrUpdatePayload.properties.keys] Contains the web
     * service provisioning keys. If you do not specify provisioning keys, the
     * Azure Machine Learning system generates them for you. Note: The keys are not
     * returned from calls to GET operations.
     *
     * @param {string} [createOrUpdatePayload.properties.keys.primary] The primary
     * access key.
     *
     * @param {string} [createOrUpdatePayload.properties.keys.secondary] The
     * secondary access key.
     *
     * @param {boolean} [createOrUpdatePayload.properties.readOnly] When set to
     * true, indicates that the web service is read-only and can no longer be
     * updated or patched, only removed. Default, is false. Note: Once set to true,
     * you cannot change its value.
     *
     * @param {boolean} [createOrUpdatePayload.properties.exposeSampleData] When
     * set to true, sample data is included in the web service's swagger
     * definition. The default value is true.
     *
     * @param {object} [createOrUpdatePayload.properties.realtimeConfiguration]
     * Contains the configuration settings for the web service endpoint.
     *
     * @param {number}
     * [createOrUpdatePayload.properties.realtimeConfiguration.maxConcurrentCalls]
     * Specifies the maximum concurrent calls that can be made to the web service.
     * Minimum value: 4, Maximum value: 200.
     *
     * @param {object} [createOrUpdatePayload.properties.diagnostics] Settings
     * controlling the diagnostics traces collection for the web service.
     *
     * @param {string} createOrUpdatePayload.properties.diagnostics.level Specifies
     * the verbosity of the diagnostic output. Valid values are: None - disables
     * tracing; Error - collects only error (stderr) traces; All - collects all
     * traces (stdout and stderr). Possible values include: 'None', 'Error', 'All'
     *
     * @param {date} [createOrUpdatePayload.properties.diagnostics.expiry]
     * Specifies the date and time when the logging will cease. If null, diagnostic
     * collection is not time limited.
     *
     * @param {object} [createOrUpdatePayload.properties.storageAccount] Specifies
     * the storage account that Azure Machine Learning uses to store information
     * about the web service. Only the name of the storage account is returned from
     * calls to GET operations. When updating the storage account information, you
     * must ensure that all necessary assets are available in the new storage
     * account or calls to your web service will fail.
     *
     * @param {string} [createOrUpdatePayload.properties.storageAccount.name]
     * Specifies the name of the storage account.
     *
     * @param {string} [createOrUpdatePayload.properties.storageAccount.key]
     * Specifies the key used to access the storage account.
     *
     * @param {object} [createOrUpdatePayload.properties.machineLearningWorkspace]
     * Specifies the Machine Learning workspace containing the experiment that is
     * source for the web service.
     *
     * @param {string} createOrUpdatePayload.properties.machineLearningWorkspace.id
     * Specifies the workspace ID of the machine learning workspace associated with
     * the web service
     *
     * @param {object} [createOrUpdatePayload.properties.commitmentPlan] Contains
     * the commitment plan associated with this web service. Set at creation time.
     * Once set, this value cannot be changed. Note: The commitment plan is not
     * returned from calls to GET operations.
     *
     * @param {string} createOrUpdatePayload.properties.commitmentPlan.id Specifies
     * the Azure Resource Manager ID of the commitment plan associated with the web
     * service.
     *
     * @param {object} [createOrUpdatePayload.properties.input] Contains the
     * Swagger 2.0 schema describing one or more of the web service's inputs. For
     * more information, see the Swagger specification.
     *
     * @param {object} [createOrUpdatePayload.properties.output] Contains the
     * Swagger 2.0 schema describing one or more of the web service's outputs. For
     * more information, see the Swagger specification.
     *
     * @param {string} [createOrUpdatePayload.properties.output.title] The title of
     * your Swagger schema.
     *
     * @param {string} [createOrUpdatePayload.properties.output.description] The
     * description of the Swagger schema.
     *
     * @param {string} createOrUpdatePayload.properties.output.type The type of the
     * entity described in swagger. Always 'object'.
     *
     * @param {object} createOrUpdatePayload.properties.output.properties Specifies
     * a collection that contains the column schema for each input or output of the
     * web service. For more information, see the Swagger specification.
     *
     * @param {object} [createOrUpdatePayload.properties.exampleRequest] Defines
     * sample input data for one or more of the service's inputs.
     *
     * @param {object} [createOrUpdatePayload.properties.exampleRequest.inputs]
     * Sample input data for the web service's input(s) given as an input name to
     * sample input values matrix map.
     *
     * @param {object}
     * [createOrUpdatePayload.properties.exampleRequest.globalParameters] Sample
     * input data for the web service's global parameters
     *
     * @param {object} [createOrUpdatePayload.properties.assets] Contains user
     * defined properties describing web service assets. Properties are expressed
     * as Key/Value pairs.
     *
     * @param {object} [createOrUpdatePayload.properties.parameters] The set of
     * global parameters values defined for the web service, given as a global
     * parameter name to default value map. If no default value is specified, the
     * parameter is considered to be required.
     *
     * @param {boolean} [createOrUpdatePayload.properties.payloadsInBlobStorage]
     * When set to true, indicates that the payload size is larger than 3 MB.
     * Otherwise false. If the payload size exceed 3 MB, the payload is stored in a
     * blob and the PayloadsLocation parameter contains the URI of the blob.
     * Otherwise, this will be set to false and Assets, Input, Output, Package,
     * Parameters, ExampleRequest are inline. The Payload sizes is determined by
     * adding the size of the Assets, Input, Output, Package, Parameters, and the
     * ExampleRequest.
     *
     * @param {object} [createOrUpdatePayload.properties.payloadsLocation] The URI
     * of the payload blob. This paramater contains a value only if the
     * payloadsInBlobStorage parameter is set to true. Otherwise is set to null.
     *
     * @param {string} createOrUpdatePayload.properties.payloadsLocation.uri The
     * URI from which the blob is accessible from. For example, aml://abc for
     * system assets or https://xyz for user assets or payload.
     *
     * @param {string}
     * [createOrUpdatePayload.properties.payloadsLocation.credentials] Access
     * credentials for the blob, if applicable (e.g. blob specified by storage
     * account connection string + blob URI)
     *
     * @param {string} createOrUpdatePayload.properties.packageType Polymorphic
     * Discriminator
     *
     * @param {string} createOrUpdatePayload.location Specifies the location of the
     * resource.
     *
     * @param {object} [createOrUpdatePayload.tags] Contains resource tags defined
     * as key/value pairs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebService>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, webServiceName: string, createOrUpdatePayload: models.WebService, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebService>>;

    /**
     * Create or update a web service. This call will overwrite an existing web
     * service. Note that there is no warning or confirmation. This is a
     * nonrecoverable operation. If your intent is to create a new web service,
     * call the Get operation first to verify that it does not exist.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {object} createOrUpdatePayload The payload that is used to create or
     * update the web service.
     *
     * @param {object} createOrUpdatePayload.properties Contains the property
     * payload that describes the web service.
     *
     * @param {string} [createOrUpdatePayload.properties.title] The title of the
     * web service.
     *
     * @param {string} [createOrUpdatePayload.properties.description] The
     * description of the web service.
     *
     * @param {object} [createOrUpdatePayload.properties.keys] Contains the web
     * service provisioning keys. If you do not specify provisioning keys, the
     * Azure Machine Learning system generates them for you. Note: The keys are not
     * returned from calls to GET operations.
     *
     * @param {string} [createOrUpdatePayload.properties.keys.primary] The primary
     * access key.
     *
     * @param {string} [createOrUpdatePayload.properties.keys.secondary] The
     * secondary access key.
     *
     * @param {boolean} [createOrUpdatePayload.properties.readOnly] When set to
     * true, indicates that the web service is read-only and can no longer be
     * updated or patched, only removed. Default, is false. Note: Once set to true,
     * you cannot change its value.
     *
     * @param {boolean} [createOrUpdatePayload.properties.exposeSampleData] When
     * set to true, sample data is included in the web service's swagger
     * definition. The default value is true.
     *
     * @param {object} [createOrUpdatePayload.properties.realtimeConfiguration]
     * Contains the configuration settings for the web service endpoint.
     *
     * @param {number}
     * [createOrUpdatePayload.properties.realtimeConfiguration.maxConcurrentCalls]
     * Specifies the maximum concurrent calls that can be made to the web service.
     * Minimum value: 4, Maximum value: 200.
     *
     * @param {object} [createOrUpdatePayload.properties.diagnostics] Settings
     * controlling the diagnostics traces collection for the web service.
     *
     * @param {string} createOrUpdatePayload.properties.diagnostics.level Specifies
     * the verbosity of the diagnostic output. Valid values are: None - disables
     * tracing; Error - collects only error (stderr) traces; All - collects all
     * traces (stdout and stderr). Possible values include: 'None', 'Error', 'All'
     *
     * @param {date} [createOrUpdatePayload.properties.diagnostics.expiry]
     * Specifies the date and time when the logging will cease. If null, diagnostic
     * collection is not time limited.
     *
     * @param {object} [createOrUpdatePayload.properties.storageAccount] Specifies
     * the storage account that Azure Machine Learning uses to store information
     * about the web service. Only the name of the storage account is returned from
     * calls to GET operations. When updating the storage account information, you
     * must ensure that all necessary assets are available in the new storage
     * account or calls to your web service will fail.
     *
     * @param {string} [createOrUpdatePayload.properties.storageAccount.name]
     * Specifies the name of the storage account.
     *
     * @param {string} [createOrUpdatePayload.properties.storageAccount.key]
     * Specifies the key used to access the storage account.
     *
     * @param {object} [createOrUpdatePayload.properties.machineLearningWorkspace]
     * Specifies the Machine Learning workspace containing the experiment that is
     * source for the web service.
     *
     * @param {string} createOrUpdatePayload.properties.machineLearningWorkspace.id
     * Specifies the workspace ID of the machine learning workspace associated with
     * the web service
     *
     * @param {object} [createOrUpdatePayload.properties.commitmentPlan] Contains
     * the commitment plan associated with this web service. Set at creation time.
     * Once set, this value cannot be changed. Note: The commitment plan is not
     * returned from calls to GET operations.
     *
     * @param {string} createOrUpdatePayload.properties.commitmentPlan.id Specifies
     * the Azure Resource Manager ID of the commitment plan associated with the web
     * service.
     *
     * @param {object} [createOrUpdatePayload.properties.input] Contains the
     * Swagger 2.0 schema describing one or more of the web service's inputs. For
     * more information, see the Swagger specification.
     *
     * @param {object} [createOrUpdatePayload.properties.output] Contains the
     * Swagger 2.0 schema describing one or more of the web service's outputs. For
     * more information, see the Swagger specification.
     *
     * @param {string} [createOrUpdatePayload.properties.output.title] The title of
     * your Swagger schema.
     *
     * @param {string} [createOrUpdatePayload.properties.output.description] The
     * description of the Swagger schema.
     *
     * @param {string} createOrUpdatePayload.properties.output.type The type of the
     * entity described in swagger. Always 'object'.
     *
     * @param {object} createOrUpdatePayload.properties.output.properties Specifies
     * a collection that contains the column schema for each input or output of the
     * web service. For more information, see the Swagger specification.
     *
     * @param {object} [createOrUpdatePayload.properties.exampleRequest] Defines
     * sample input data for one or more of the service's inputs.
     *
     * @param {object} [createOrUpdatePayload.properties.exampleRequest.inputs]
     * Sample input data for the web service's input(s) given as an input name to
     * sample input values matrix map.
     *
     * @param {object}
     * [createOrUpdatePayload.properties.exampleRequest.globalParameters] Sample
     * input data for the web service's global parameters
     *
     * @param {object} [createOrUpdatePayload.properties.assets] Contains user
     * defined properties describing web service assets. Properties are expressed
     * as Key/Value pairs.
     *
     * @param {object} [createOrUpdatePayload.properties.parameters] The set of
     * global parameters values defined for the web service, given as a global
     * parameter name to default value map. If no default value is specified, the
     * parameter is considered to be required.
     *
     * @param {boolean} [createOrUpdatePayload.properties.payloadsInBlobStorage]
     * When set to true, indicates that the payload size is larger than 3 MB.
     * Otherwise false. If the payload size exceed 3 MB, the payload is stored in a
     * blob and the PayloadsLocation parameter contains the URI of the blob.
     * Otherwise, this will be set to false and Assets, Input, Output, Package,
     * Parameters, ExampleRequest are inline. The Payload sizes is determined by
     * adding the size of the Assets, Input, Output, Package, Parameters, and the
     * ExampleRequest.
     *
     * @param {object} [createOrUpdatePayload.properties.payloadsLocation] The URI
     * of the payload blob. This paramater contains a value only if the
     * payloadsInBlobStorage parameter is set to true. Otherwise is set to null.
     *
     * @param {string} createOrUpdatePayload.properties.payloadsLocation.uri The
     * URI from which the blob is accessible from. For example, aml://abc for
     * system assets or https://xyz for user assets or payload.
     *
     * @param {string}
     * [createOrUpdatePayload.properties.payloadsLocation.credentials] Access
     * credentials for the blob, if applicable (e.g. blob specified by storage
     * account connection string + blob URI)
     *
     * @param {string} createOrUpdatePayload.properties.packageType Polymorphic
     * Discriminator
     *
     * @param {string} createOrUpdatePayload.location Specifies the location of the
     * resource.
     *
     * @param {object} [createOrUpdatePayload.tags] Contains resource tags defined
     * as key/value pairs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebService} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebService} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebService} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, webServiceName: string, createOrUpdatePayload: models.WebService, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebService>;
    createOrUpdate(resourceGroupName: string, webServiceName: string, createOrUpdatePayload: models.WebService, callback: ServiceCallback<models.WebService>): void;
    createOrUpdate(resourceGroupName: string, webServiceName: string, createOrUpdatePayload: models.WebService, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebService>): void;


    /**
     * Gets the Web Service Definition as specified by a subscription, resource
     * group, and name. Note that the storage credentials and web service keys are
     * not returned by this call. To get the web service access keys, call List
     * Keys.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.region] The region for which encrypted credential
     * parameters are valid.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebService>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, webServiceName: string, options?: { region? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebService>>;

    /**
     * Gets the Web Service Definition as specified by a subscription, resource
     * group, and name. Note that the storage credentials and web service keys are
     * not returned by this call. To get the web service access keys, call List
     * Keys.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.region] The region for which encrypted credential
     * parameters are valid.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebService} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebService} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebService} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, webServiceName: string, options?: { region? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.WebService>;
    get(resourceGroupName: string, webServiceName: string, callback: ServiceCallback<models.WebService>): void;
    get(resourceGroupName: string, webServiceName: string, options: { region? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebService>): void;


    /**
     * Modifies an existing web service resource. The PATCH API call is an
     * asynchronous operation. To determine whether it has completed successfully,
     * you must perform a Get operation.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {object} patchPayload The payload to use to patch the web service.
     *
     * @param {object} patchPayload.properties Contains the property payload that
     * describes the web service.
     *
     * @param {string} [patchPayload.properties.title] The title of the web
     * service.
     *
     * @param {string} [patchPayload.properties.description] The description of the
     * web service.
     *
     * @param {object} [patchPayload.properties.keys] Contains the web service
     * provisioning keys. If you do not specify provisioning keys, the Azure
     * Machine Learning system generates them for you. Note: The keys are not
     * returned from calls to GET operations.
     *
     * @param {string} [patchPayload.properties.keys.primary] The primary access
     * key.
     *
     * @param {string} [patchPayload.properties.keys.secondary] The secondary
     * access key.
     *
     * @param {boolean} [patchPayload.properties.readOnly] When set to true,
     * indicates that the web service is read-only and can no longer be updated or
     * patched, only removed. Default, is false. Note: Once set to true, you cannot
     * change its value.
     *
     * @param {boolean} [patchPayload.properties.exposeSampleData] When set to
     * true, sample data is included in the web service's swagger definition. The
     * default value is true.
     *
     * @param {object} [patchPayload.properties.realtimeConfiguration] Contains the
     * configuration settings for the web service endpoint.
     *
     * @param {number}
     * [patchPayload.properties.realtimeConfiguration.maxConcurrentCalls] Specifies
     * the maximum concurrent calls that can be made to the web service. Minimum
     * value: 4, Maximum value: 200.
     *
     * @param {object} [patchPayload.properties.diagnostics] Settings controlling
     * the diagnostics traces collection for the web service.
     *
     * @param {string} patchPayload.properties.diagnostics.level Specifies the
     * verbosity of the diagnostic output. Valid values are: None - disables
     * tracing; Error - collects only error (stderr) traces; All - collects all
     * traces (stdout and stderr). Possible values include: 'None', 'Error', 'All'
     *
     * @param {date} [patchPayload.properties.diagnostics.expiry] Specifies the
     * date and time when the logging will cease. If null, diagnostic collection is
     * not time limited.
     *
     * @param {object} [patchPayload.properties.storageAccount] Specifies the
     * storage account that Azure Machine Learning uses to store information about
     * the web service. Only the name of the storage account is returned from calls
     * to GET operations. When updating the storage account information, you must
     * ensure that all necessary assets are available in the new storage account or
     * calls to your web service will fail.
     *
     * @param {string} [patchPayload.properties.storageAccount.name] Specifies the
     * name of the storage account.
     *
     * @param {string} [patchPayload.properties.storageAccount.key] Specifies the
     * key used to access the storage account.
     *
     * @param {object} [patchPayload.properties.machineLearningWorkspace] Specifies
     * the Machine Learning workspace containing the experiment that is source for
     * the web service.
     *
     * @param {string} patchPayload.properties.machineLearningWorkspace.id
     * Specifies the workspace ID of the machine learning workspace associated with
     * the web service
     *
     * @param {object} [patchPayload.properties.commitmentPlan] Contains the
     * commitment plan associated with this web service. Set at creation time. Once
     * set, this value cannot be changed. Note: The commitment plan is not returned
     * from calls to GET operations.
     *
     * @param {string} patchPayload.properties.commitmentPlan.id Specifies the
     * Azure Resource Manager ID of the commitment plan associated with the web
     * service.
     *
     * @param {object} [patchPayload.properties.input] Contains the Swagger 2.0
     * schema describing one or more of the web service's inputs. For more
     * information, see the Swagger specification.
     *
     * @param {object} [patchPayload.properties.output] Contains the Swagger 2.0
     * schema describing one or more of the web service's outputs. For more
     * information, see the Swagger specification.
     *
     * @param {string} [patchPayload.properties.output.title] The title of your
     * Swagger schema.
     *
     * @param {string} [patchPayload.properties.output.description] The description
     * of the Swagger schema.
     *
     * @param {string} patchPayload.properties.output.type The type of the entity
     * described in swagger. Always 'object'.
     *
     * @param {object} patchPayload.properties.output.properties Specifies a
     * collection that contains the column schema for each input or output of the
     * web service. For more information, see the Swagger specification.
     *
     * @param {object} [patchPayload.properties.exampleRequest] Defines sample
     * input data for one or more of the service's inputs.
     *
     * @param {object} [patchPayload.properties.exampleRequest.inputs] Sample input
     * data for the web service's input(s) given as an input name to sample input
     * values matrix map.
     *
     * @param {object} [patchPayload.properties.exampleRequest.globalParameters]
     * Sample input data for the web service's global parameters
     *
     * @param {object} [patchPayload.properties.assets] Contains user defined
     * properties describing web service assets. Properties are expressed as
     * Key/Value pairs.
     *
     * @param {object} [patchPayload.properties.parameters] The set of global
     * parameters values defined for the web service, given as a global parameter
     * name to default value map. If no default value is specified, the parameter
     * is considered to be required.
     *
     * @param {boolean} [patchPayload.properties.payloadsInBlobStorage] When set to
     * true, indicates that the payload size is larger than 3 MB. Otherwise false.
     * If the payload size exceed 3 MB, the payload is stored in a blob and the
     * PayloadsLocation parameter contains the URI of the blob. Otherwise, this
     * will be set to false and Assets, Input, Output, Package, Parameters,
     * ExampleRequest are inline. The Payload sizes is determined by adding the
     * size of the Assets, Input, Output, Package, Parameters, and the
     * ExampleRequest.
     *
     * @param {object} [patchPayload.properties.payloadsLocation] The URI of the
     * payload blob. This paramater contains a value only if the
     * payloadsInBlobStorage parameter is set to true. Otherwise is set to null.
     *
     * @param {string} patchPayload.properties.payloadsLocation.uri The URI from
     * which the blob is accessible from. For example, aml://abc for system assets
     * or https://xyz for user assets or payload.
     *
     * @param {string} [patchPayload.properties.payloadsLocation.credentials]
     * Access credentials for the blob, if applicable (e.g. blob specified by
     * storage account connection string + blob URI)
     *
     * @param {string} patchPayload.properties.packageType Polymorphic
     * Discriminator
     *
     * @param {string} patchPayload.location Specifies the location of the
     * resource.
     *
     * @param {object} [patchPayload.tags] Contains resource tags defined as
     * key/value pairs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebService>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    patchWithHttpOperationResponse(resourceGroupName: string, webServiceName: string, patchPayload: models.WebService, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebService>>;

    /**
     * Modifies an existing web service resource. The PATCH API call is an
     * asynchronous operation. To determine whether it has completed successfully,
     * you must perform a Get operation.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {object} patchPayload The payload to use to patch the web service.
     *
     * @param {object} patchPayload.properties Contains the property payload that
     * describes the web service.
     *
     * @param {string} [patchPayload.properties.title] The title of the web
     * service.
     *
     * @param {string} [patchPayload.properties.description] The description of the
     * web service.
     *
     * @param {object} [patchPayload.properties.keys] Contains the web service
     * provisioning keys. If you do not specify provisioning keys, the Azure
     * Machine Learning system generates them for you. Note: The keys are not
     * returned from calls to GET operations.
     *
     * @param {string} [patchPayload.properties.keys.primary] The primary access
     * key.
     *
     * @param {string} [patchPayload.properties.keys.secondary] The secondary
     * access key.
     *
     * @param {boolean} [patchPayload.properties.readOnly] When set to true,
     * indicates that the web service is read-only and can no longer be updated or
     * patched, only removed. Default, is false. Note: Once set to true, you cannot
     * change its value.
     *
     * @param {boolean} [patchPayload.properties.exposeSampleData] When set to
     * true, sample data is included in the web service's swagger definition. The
     * default value is true.
     *
     * @param {object} [patchPayload.properties.realtimeConfiguration] Contains the
     * configuration settings for the web service endpoint.
     *
     * @param {number}
     * [patchPayload.properties.realtimeConfiguration.maxConcurrentCalls] Specifies
     * the maximum concurrent calls that can be made to the web service. Minimum
     * value: 4, Maximum value: 200.
     *
     * @param {object} [patchPayload.properties.diagnostics] Settings controlling
     * the diagnostics traces collection for the web service.
     *
     * @param {string} patchPayload.properties.diagnostics.level Specifies the
     * verbosity of the diagnostic output. Valid values are: None - disables
     * tracing; Error - collects only error (stderr) traces; All - collects all
     * traces (stdout and stderr). Possible values include: 'None', 'Error', 'All'
     *
     * @param {date} [patchPayload.properties.diagnostics.expiry] Specifies the
     * date and time when the logging will cease. If null, diagnostic collection is
     * not time limited.
     *
     * @param {object} [patchPayload.properties.storageAccount] Specifies the
     * storage account that Azure Machine Learning uses to store information about
     * the web service. Only the name of the storage account is returned from calls
     * to GET operations. When updating the storage account information, you must
     * ensure that all necessary assets are available in the new storage account or
     * calls to your web service will fail.
     *
     * @param {string} [patchPayload.properties.storageAccount.name] Specifies the
     * name of the storage account.
     *
     * @param {string} [patchPayload.properties.storageAccount.key] Specifies the
     * key used to access the storage account.
     *
     * @param {object} [patchPayload.properties.machineLearningWorkspace] Specifies
     * the Machine Learning workspace containing the experiment that is source for
     * the web service.
     *
     * @param {string} patchPayload.properties.machineLearningWorkspace.id
     * Specifies the workspace ID of the machine learning workspace associated with
     * the web service
     *
     * @param {object} [patchPayload.properties.commitmentPlan] Contains the
     * commitment plan associated with this web service. Set at creation time. Once
     * set, this value cannot be changed. Note: The commitment plan is not returned
     * from calls to GET operations.
     *
     * @param {string} patchPayload.properties.commitmentPlan.id Specifies the
     * Azure Resource Manager ID of the commitment plan associated with the web
     * service.
     *
     * @param {object} [patchPayload.properties.input] Contains the Swagger 2.0
     * schema describing one or more of the web service's inputs. For more
     * information, see the Swagger specification.
     *
     * @param {object} [patchPayload.properties.output] Contains the Swagger 2.0
     * schema describing one or more of the web service's outputs. For more
     * information, see the Swagger specification.
     *
     * @param {string} [patchPayload.properties.output.title] The title of your
     * Swagger schema.
     *
     * @param {string} [patchPayload.properties.output.description] The description
     * of the Swagger schema.
     *
     * @param {string} patchPayload.properties.output.type The type of the entity
     * described in swagger. Always 'object'.
     *
     * @param {object} patchPayload.properties.output.properties Specifies a
     * collection that contains the column schema for each input or output of the
     * web service. For more information, see the Swagger specification.
     *
     * @param {object} [patchPayload.properties.exampleRequest] Defines sample
     * input data for one or more of the service's inputs.
     *
     * @param {object} [patchPayload.properties.exampleRequest.inputs] Sample input
     * data for the web service's input(s) given as an input name to sample input
     * values matrix map.
     *
     * @param {object} [patchPayload.properties.exampleRequest.globalParameters]
     * Sample input data for the web service's global parameters
     *
     * @param {object} [patchPayload.properties.assets] Contains user defined
     * properties describing web service assets. Properties are expressed as
     * Key/Value pairs.
     *
     * @param {object} [patchPayload.properties.parameters] The set of global
     * parameters values defined for the web service, given as a global parameter
     * name to default value map. If no default value is specified, the parameter
     * is considered to be required.
     *
     * @param {boolean} [patchPayload.properties.payloadsInBlobStorage] When set to
     * true, indicates that the payload size is larger than 3 MB. Otherwise false.
     * If the payload size exceed 3 MB, the payload is stored in a blob and the
     * PayloadsLocation parameter contains the URI of the blob. Otherwise, this
     * will be set to false and Assets, Input, Output, Package, Parameters,
     * ExampleRequest are inline. The Payload sizes is determined by adding the
     * size of the Assets, Input, Output, Package, Parameters, and the
     * ExampleRequest.
     *
     * @param {object} [patchPayload.properties.payloadsLocation] The URI of the
     * payload blob. This paramater contains a value only if the
     * payloadsInBlobStorage parameter is set to true. Otherwise is set to null.
     *
     * @param {string} patchPayload.properties.payloadsLocation.uri The URI from
     * which the blob is accessible from. For example, aml://abc for system assets
     * or https://xyz for user assets or payload.
     *
     * @param {string} [patchPayload.properties.payloadsLocation.credentials]
     * Access credentials for the blob, if applicable (e.g. blob specified by
     * storage account connection string + blob URI)
     *
     * @param {string} patchPayload.properties.packageType Polymorphic
     * Discriminator
     *
     * @param {string} patchPayload.location Specifies the location of the
     * resource.
     *
     * @param {object} [patchPayload.tags] Contains resource tags defined as
     * key/value pairs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebService} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebService} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebService} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    patch(resourceGroupName: string, webServiceName: string, patchPayload: models.WebService, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebService>;
    patch(resourceGroupName: string, webServiceName: string, patchPayload: models.WebService, callback: ServiceCallback<models.WebService>): void;
    patch(resourceGroupName: string, webServiceName: string, patchPayload: models.WebService, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebService>): void;


    /**
     * Deletes the specified web service.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    removeWithHttpOperationResponse(resourceGroupName: string, webServiceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes the specified web service.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    remove(resourceGroupName: string, webServiceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    remove(resourceGroupName: string, webServiceName: string, callback: ServiceCallback<void>): void;
    remove(resourceGroupName: string, webServiceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Creates an encrypted credentials parameter blob for the specified region. To
     * get the web service from a region other than the region in which it has been
     * created, you must first call Create Regional Web Services Properties to
     * create a copy of the encrypted credential parameter blob in that region. You
     * only need to do this before the first time that you get the web service in
     * the new region.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {string} region The region for which encrypted credential parameters
     * are created.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AsyncOperationStatus>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createRegionalPropertiesWithHttpOperationResponse(resourceGroupName: string, webServiceName: string, region: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AsyncOperationStatus>>;

    /**
     * Creates an encrypted credentials parameter blob for the specified region. To
     * get the web service from a region other than the region in which it has been
     * created, you must first call Create Regional Web Services Properties to
     * create a copy of the encrypted credential parameter blob in that region. You
     * only need to do this before the first time that you get the web service in
     * the new region.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {string} region The region for which encrypted credential parameters
     * are created.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AsyncOperationStatus} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AsyncOperationStatus} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AsyncOperationStatus} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createRegionalProperties(resourceGroupName: string, webServiceName: string, region: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AsyncOperationStatus>;
    createRegionalProperties(resourceGroupName: string, webServiceName: string, region: string, callback: ServiceCallback<models.AsyncOperationStatus>): void;
    createRegionalProperties(resourceGroupName: string, webServiceName: string, region: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AsyncOperationStatus>): void;


    /**
     * Gets the access keys for the specified web service.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebServiceKeys>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listKeysWithHttpOperationResponse(resourceGroupName: string, webServiceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebServiceKeys>>;

    /**
     * Gets the access keys for the specified web service.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebServiceKeys} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebServiceKeys} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebServiceKeys} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listKeys(resourceGroupName: string, webServiceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebServiceKeys>;
    listKeys(resourceGroupName: string, webServiceName: string, callback: ServiceCallback<models.WebServiceKeys>): void;
    listKeys(resourceGroupName: string, webServiceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebServiceKeys>): void;


    /**
     * Gets the web services in the specified resource group.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.skiptoken] Continuation token for pagination.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PaginatedWebServicesList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { skiptoken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PaginatedWebServicesList>>;

    /**
     * Gets the web services in the specified resource group.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.skiptoken] Continuation token for pagination.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PaginatedWebServicesList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PaginatedWebServicesList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PaginatedWebServicesList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { skiptoken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.PaginatedWebServicesList>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.PaginatedWebServicesList>): void;
    listByResourceGroup(resourceGroupName: string, options: { skiptoken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PaginatedWebServicesList>): void;


    /**
     * Gets the web services in the specified subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.skiptoken] Continuation token for pagination.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PaginatedWebServicesList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySubscriptionIdWithHttpOperationResponse(options?: { skiptoken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PaginatedWebServicesList>>;

    /**
     * Gets the web services in the specified subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.skiptoken] Continuation token for pagination.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PaginatedWebServicesList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PaginatedWebServicesList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PaginatedWebServicesList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySubscriptionId(options?: { skiptoken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.PaginatedWebServicesList>;
    listBySubscriptionId(callback: ServiceCallback<models.PaginatedWebServicesList>): void;
    listBySubscriptionId(options: { skiptoken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PaginatedWebServicesList>): void;


    /**
     * Create or update a web service. This call will overwrite an existing web
     * service. Note that there is no warning or confirmation. This is a
     * nonrecoverable operation. If your intent is to create a new web service,
     * call the Get operation first to verify that it does not exist.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {object} createOrUpdatePayload The payload that is used to create or
     * update the web service.
     *
     * @param {object} createOrUpdatePayload.properties Contains the property
     * payload that describes the web service.
     *
     * @param {string} [createOrUpdatePayload.properties.title] The title of the
     * web service.
     *
     * @param {string} [createOrUpdatePayload.properties.description] The
     * description of the web service.
     *
     * @param {object} [createOrUpdatePayload.properties.keys] Contains the web
     * service provisioning keys. If you do not specify provisioning keys, the
     * Azure Machine Learning system generates them for you. Note: The keys are not
     * returned from calls to GET operations.
     *
     * @param {string} [createOrUpdatePayload.properties.keys.primary] The primary
     * access key.
     *
     * @param {string} [createOrUpdatePayload.properties.keys.secondary] The
     * secondary access key.
     *
     * @param {boolean} [createOrUpdatePayload.properties.readOnly] When set to
     * true, indicates that the web service is read-only and can no longer be
     * updated or patched, only removed. Default, is false. Note: Once set to true,
     * you cannot change its value.
     *
     * @param {boolean} [createOrUpdatePayload.properties.exposeSampleData] When
     * set to true, sample data is included in the web service's swagger
     * definition. The default value is true.
     *
     * @param {object} [createOrUpdatePayload.properties.realtimeConfiguration]
     * Contains the configuration settings for the web service endpoint.
     *
     * @param {number}
     * [createOrUpdatePayload.properties.realtimeConfiguration.maxConcurrentCalls]
     * Specifies the maximum concurrent calls that can be made to the web service.
     * Minimum value: 4, Maximum value: 200.
     *
     * @param {object} [createOrUpdatePayload.properties.diagnostics] Settings
     * controlling the diagnostics traces collection for the web service.
     *
     * @param {string} createOrUpdatePayload.properties.diagnostics.level Specifies
     * the verbosity of the diagnostic output. Valid values are: None - disables
     * tracing; Error - collects only error (stderr) traces; All - collects all
     * traces (stdout and stderr). Possible values include: 'None', 'Error', 'All'
     *
     * @param {date} [createOrUpdatePayload.properties.diagnostics.expiry]
     * Specifies the date and time when the logging will cease. If null, diagnostic
     * collection is not time limited.
     *
     * @param {object} [createOrUpdatePayload.properties.storageAccount] Specifies
     * the storage account that Azure Machine Learning uses to store information
     * about the web service. Only the name of the storage account is returned from
     * calls to GET operations. When updating the storage account information, you
     * must ensure that all necessary assets are available in the new storage
     * account or calls to your web service will fail.
     *
     * @param {string} [createOrUpdatePayload.properties.storageAccount.name]
     * Specifies the name of the storage account.
     *
     * @param {string} [createOrUpdatePayload.properties.storageAccount.key]
     * Specifies the key used to access the storage account.
     *
     * @param {object} [createOrUpdatePayload.properties.machineLearningWorkspace]
     * Specifies the Machine Learning workspace containing the experiment that is
     * source for the web service.
     *
     * @param {string} createOrUpdatePayload.properties.machineLearningWorkspace.id
     * Specifies the workspace ID of the machine learning workspace associated with
     * the web service
     *
     * @param {object} [createOrUpdatePayload.properties.commitmentPlan] Contains
     * the commitment plan associated with this web service. Set at creation time.
     * Once set, this value cannot be changed. Note: The commitment plan is not
     * returned from calls to GET operations.
     *
     * @param {string} createOrUpdatePayload.properties.commitmentPlan.id Specifies
     * the Azure Resource Manager ID of the commitment plan associated with the web
     * service.
     *
     * @param {object} [createOrUpdatePayload.properties.input] Contains the
     * Swagger 2.0 schema describing one or more of the web service's inputs. For
     * more information, see the Swagger specification.
     *
     * @param {object} [createOrUpdatePayload.properties.output] Contains the
     * Swagger 2.0 schema describing one or more of the web service's outputs. For
     * more information, see the Swagger specification.
     *
     * @param {string} [createOrUpdatePayload.properties.output.title] The title of
     * your Swagger schema.
     *
     * @param {string} [createOrUpdatePayload.properties.output.description] The
     * description of the Swagger schema.
     *
     * @param {string} createOrUpdatePayload.properties.output.type The type of the
     * entity described in swagger. Always 'object'.
     *
     * @param {object} createOrUpdatePayload.properties.output.properties Specifies
     * a collection that contains the column schema for each input or output of the
     * web service. For more information, see the Swagger specification.
     *
     * @param {object} [createOrUpdatePayload.properties.exampleRequest] Defines
     * sample input data for one or more of the service's inputs.
     *
     * @param {object} [createOrUpdatePayload.properties.exampleRequest.inputs]
     * Sample input data for the web service's input(s) given as an input name to
     * sample input values matrix map.
     *
     * @param {object}
     * [createOrUpdatePayload.properties.exampleRequest.globalParameters] Sample
     * input data for the web service's global parameters
     *
     * @param {object} [createOrUpdatePayload.properties.assets] Contains user
     * defined properties describing web service assets. Properties are expressed
     * as Key/Value pairs.
     *
     * @param {object} [createOrUpdatePayload.properties.parameters] The set of
     * global parameters values defined for the web service, given as a global
     * parameter name to default value map. If no default value is specified, the
     * parameter is considered to be required.
     *
     * @param {boolean} [createOrUpdatePayload.properties.payloadsInBlobStorage]
     * When set to true, indicates that the payload size is larger than 3 MB.
     * Otherwise false. If the payload size exceed 3 MB, the payload is stored in a
     * blob and the PayloadsLocation parameter contains the URI of the blob.
     * Otherwise, this will be set to false and Assets, Input, Output, Package,
     * Parameters, ExampleRequest are inline. The Payload sizes is determined by
     * adding the size of the Assets, Input, Output, Package, Parameters, and the
     * ExampleRequest.
     *
     * @param {object} [createOrUpdatePayload.properties.payloadsLocation] The URI
     * of the payload blob. This paramater contains a value only if the
     * payloadsInBlobStorage parameter is set to true. Otherwise is set to null.
     *
     * @param {string} createOrUpdatePayload.properties.payloadsLocation.uri The
     * URI from which the blob is accessible from. For example, aml://abc for
     * system assets or https://xyz for user assets or payload.
     *
     * @param {string}
     * [createOrUpdatePayload.properties.payloadsLocation.credentials] Access
     * credentials for the blob, if applicable (e.g. blob specified by storage
     * account connection string + blob URI)
     *
     * @param {string} createOrUpdatePayload.properties.packageType Polymorphic
     * Discriminator
     *
     * @param {string} createOrUpdatePayload.location Specifies the location of the
     * resource.
     *
     * @param {object} [createOrUpdatePayload.tags] Contains resource tags defined
     * as key/value pairs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebService>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, webServiceName: string, createOrUpdatePayload: models.WebService, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebService>>;

    /**
     * Create or update a web service. This call will overwrite an existing web
     * service. Note that there is no warning or confirmation. This is a
     * nonrecoverable operation. If your intent is to create a new web service,
     * call the Get operation first to verify that it does not exist.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {object} createOrUpdatePayload The payload that is used to create or
     * update the web service.
     *
     * @param {object} createOrUpdatePayload.properties Contains the property
     * payload that describes the web service.
     *
     * @param {string} [createOrUpdatePayload.properties.title] The title of the
     * web service.
     *
     * @param {string} [createOrUpdatePayload.properties.description] The
     * description of the web service.
     *
     * @param {object} [createOrUpdatePayload.properties.keys] Contains the web
     * service provisioning keys. If you do not specify provisioning keys, the
     * Azure Machine Learning system generates them for you. Note: The keys are not
     * returned from calls to GET operations.
     *
     * @param {string} [createOrUpdatePayload.properties.keys.primary] The primary
     * access key.
     *
     * @param {string} [createOrUpdatePayload.properties.keys.secondary] The
     * secondary access key.
     *
     * @param {boolean} [createOrUpdatePayload.properties.readOnly] When set to
     * true, indicates that the web service is read-only and can no longer be
     * updated or patched, only removed. Default, is false. Note: Once set to true,
     * you cannot change its value.
     *
     * @param {boolean} [createOrUpdatePayload.properties.exposeSampleData] When
     * set to true, sample data is included in the web service's swagger
     * definition. The default value is true.
     *
     * @param {object} [createOrUpdatePayload.properties.realtimeConfiguration]
     * Contains the configuration settings for the web service endpoint.
     *
     * @param {number}
     * [createOrUpdatePayload.properties.realtimeConfiguration.maxConcurrentCalls]
     * Specifies the maximum concurrent calls that can be made to the web service.
     * Minimum value: 4, Maximum value: 200.
     *
     * @param {object} [createOrUpdatePayload.properties.diagnostics] Settings
     * controlling the diagnostics traces collection for the web service.
     *
     * @param {string} createOrUpdatePayload.properties.diagnostics.level Specifies
     * the verbosity of the diagnostic output. Valid values are: None - disables
     * tracing; Error - collects only error (stderr) traces; All - collects all
     * traces (stdout and stderr). Possible values include: 'None', 'Error', 'All'
     *
     * @param {date} [createOrUpdatePayload.properties.diagnostics.expiry]
     * Specifies the date and time when the logging will cease. If null, diagnostic
     * collection is not time limited.
     *
     * @param {object} [createOrUpdatePayload.properties.storageAccount] Specifies
     * the storage account that Azure Machine Learning uses to store information
     * about the web service. Only the name of the storage account is returned from
     * calls to GET operations. When updating the storage account information, you
     * must ensure that all necessary assets are available in the new storage
     * account or calls to your web service will fail.
     *
     * @param {string} [createOrUpdatePayload.properties.storageAccount.name]
     * Specifies the name of the storage account.
     *
     * @param {string} [createOrUpdatePayload.properties.storageAccount.key]
     * Specifies the key used to access the storage account.
     *
     * @param {object} [createOrUpdatePayload.properties.machineLearningWorkspace]
     * Specifies the Machine Learning workspace containing the experiment that is
     * source for the web service.
     *
     * @param {string} createOrUpdatePayload.properties.machineLearningWorkspace.id
     * Specifies the workspace ID of the machine learning workspace associated with
     * the web service
     *
     * @param {object} [createOrUpdatePayload.properties.commitmentPlan] Contains
     * the commitment plan associated with this web service. Set at creation time.
     * Once set, this value cannot be changed. Note: The commitment plan is not
     * returned from calls to GET operations.
     *
     * @param {string} createOrUpdatePayload.properties.commitmentPlan.id Specifies
     * the Azure Resource Manager ID of the commitment plan associated with the web
     * service.
     *
     * @param {object} [createOrUpdatePayload.properties.input] Contains the
     * Swagger 2.0 schema describing one or more of the web service's inputs. For
     * more information, see the Swagger specification.
     *
     * @param {object} [createOrUpdatePayload.properties.output] Contains the
     * Swagger 2.0 schema describing one or more of the web service's outputs. For
     * more information, see the Swagger specification.
     *
     * @param {string} [createOrUpdatePayload.properties.output.title] The title of
     * your Swagger schema.
     *
     * @param {string} [createOrUpdatePayload.properties.output.description] The
     * description of the Swagger schema.
     *
     * @param {string} createOrUpdatePayload.properties.output.type The type of the
     * entity described in swagger. Always 'object'.
     *
     * @param {object} createOrUpdatePayload.properties.output.properties Specifies
     * a collection that contains the column schema for each input or output of the
     * web service. For more information, see the Swagger specification.
     *
     * @param {object} [createOrUpdatePayload.properties.exampleRequest] Defines
     * sample input data for one or more of the service's inputs.
     *
     * @param {object} [createOrUpdatePayload.properties.exampleRequest.inputs]
     * Sample input data for the web service's input(s) given as an input name to
     * sample input values matrix map.
     *
     * @param {object}
     * [createOrUpdatePayload.properties.exampleRequest.globalParameters] Sample
     * input data for the web service's global parameters
     *
     * @param {object} [createOrUpdatePayload.properties.assets] Contains user
     * defined properties describing web service assets. Properties are expressed
     * as Key/Value pairs.
     *
     * @param {object} [createOrUpdatePayload.properties.parameters] The set of
     * global parameters values defined for the web service, given as a global
     * parameter name to default value map. If no default value is specified, the
     * parameter is considered to be required.
     *
     * @param {boolean} [createOrUpdatePayload.properties.payloadsInBlobStorage]
     * When set to true, indicates that the payload size is larger than 3 MB.
     * Otherwise false. If the payload size exceed 3 MB, the payload is stored in a
     * blob and the PayloadsLocation parameter contains the URI of the blob.
     * Otherwise, this will be set to false and Assets, Input, Output, Package,
     * Parameters, ExampleRequest are inline. The Payload sizes is determined by
     * adding the size of the Assets, Input, Output, Package, Parameters, and the
     * ExampleRequest.
     *
     * @param {object} [createOrUpdatePayload.properties.payloadsLocation] The URI
     * of the payload blob. This paramater contains a value only if the
     * payloadsInBlobStorage parameter is set to true. Otherwise is set to null.
     *
     * @param {string} createOrUpdatePayload.properties.payloadsLocation.uri The
     * URI from which the blob is accessible from. For example, aml://abc for
     * system assets or https://xyz for user assets or payload.
     *
     * @param {string}
     * [createOrUpdatePayload.properties.payloadsLocation.credentials] Access
     * credentials for the blob, if applicable (e.g. blob specified by storage
     * account connection string + blob URI)
     *
     * @param {string} createOrUpdatePayload.properties.packageType Polymorphic
     * Discriminator
     *
     * @param {string} createOrUpdatePayload.location Specifies the location of the
     * resource.
     *
     * @param {object} [createOrUpdatePayload.tags] Contains resource tags defined
     * as key/value pairs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebService} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebService} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebService} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, webServiceName: string, createOrUpdatePayload: models.WebService, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebService>;
    beginCreateOrUpdate(resourceGroupName: string, webServiceName: string, createOrUpdatePayload: models.WebService, callback: ServiceCallback<models.WebService>): void;
    beginCreateOrUpdate(resourceGroupName: string, webServiceName: string, createOrUpdatePayload: models.WebService, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebService>): void;


    /**
     * Modifies an existing web service resource. The PATCH API call is an
     * asynchronous operation. To determine whether it has completed successfully,
     * you must perform a Get operation.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {object} patchPayload The payload to use to patch the web service.
     *
     * @param {object} patchPayload.properties Contains the property payload that
     * describes the web service.
     *
     * @param {string} [patchPayload.properties.title] The title of the web
     * service.
     *
     * @param {string} [patchPayload.properties.description] The description of the
     * web service.
     *
     * @param {object} [patchPayload.properties.keys] Contains the web service
     * provisioning keys. If you do not specify provisioning keys, the Azure
     * Machine Learning system generates them for you. Note: The keys are not
     * returned from calls to GET operations.
     *
     * @param {string} [patchPayload.properties.keys.primary] The primary access
     * key.
     *
     * @param {string} [patchPayload.properties.keys.secondary] The secondary
     * access key.
     *
     * @param {boolean} [patchPayload.properties.readOnly] When set to true,
     * indicates that the web service is read-only and can no longer be updated or
     * patched, only removed. Default, is false. Note: Once set to true, you cannot
     * change its value.
     *
     * @param {boolean} [patchPayload.properties.exposeSampleData] When set to
     * true, sample data is included in the web service's swagger definition. The
     * default value is true.
     *
     * @param {object} [patchPayload.properties.realtimeConfiguration] Contains the
     * configuration settings for the web service endpoint.
     *
     * @param {number}
     * [patchPayload.properties.realtimeConfiguration.maxConcurrentCalls] Specifies
     * the maximum concurrent calls that can be made to the web service. Minimum
     * value: 4, Maximum value: 200.
     *
     * @param {object} [patchPayload.properties.diagnostics] Settings controlling
     * the diagnostics traces collection for the web service.
     *
     * @param {string} patchPayload.properties.diagnostics.level Specifies the
     * verbosity of the diagnostic output. Valid values are: None - disables
     * tracing; Error - collects only error (stderr) traces; All - collects all
     * traces (stdout and stderr). Possible values include: 'None', 'Error', 'All'
     *
     * @param {date} [patchPayload.properties.diagnostics.expiry] Specifies the
     * date and time when the logging will cease. If null, diagnostic collection is
     * not time limited.
     *
     * @param {object} [patchPayload.properties.storageAccount] Specifies the
     * storage account that Azure Machine Learning uses to store information about
     * the web service. Only the name of the storage account is returned from calls
     * to GET operations. When updating the storage account information, you must
     * ensure that all necessary assets are available in the new storage account or
     * calls to your web service will fail.
     *
     * @param {string} [patchPayload.properties.storageAccount.name] Specifies the
     * name of the storage account.
     *
     * @param {string} [patchPayload.properties.storageAccount.key] Specifies the
     * key used to access the storage account.
     *
     * @param {object} [patchPayload.properties.machineLearningWorkspace] Specifies
     * the Machine Learning workspace containing the experiment that is source for
     * the web service.
     *
     * @param {string} patchPayload.properties.machineLearningWorkspace.id
     * Specifies the workspace ID of the machine learning workspace associated with
     * the web service
     *
     * @param {object} [patchPayload.properties.commitmentPlan] Contains the
     * commitment plan associated with this web service. Set at creation time. Once
     * set, this value cannot be changed. Note: The commitment plan is not returned
     * from calls to GET operations.
     *
     * @param {string} patchPayload.properties.commitmentPlan.id Specifies the
     * Azure Resource Manager ID of the commitment plan associated with the web
     * service.
     *
     * @param {object} [patchPayload.properties.input] Contains the Swagger 2.0
     * schema describing one or more of the web service's inputs. For more
     * information, see the Swagger specification.
     *
     * @param {object} [patchPayload.properties.output] Contains the Swagger 2.0
     * schema describing one or more of the web service's outputs. For more
     * information, see the Swagger specification.
     *
     * @param {string} [patchPayload.properties.output.title] The title of your
     * Swagger schema.
     *
     * @param {string} [patchPayload.properties.output.description] The description
     * of the Swagger schema.
     *
     * @param {string} patchPayload.properties.output.type The type of the entity
     * described in swagger. Always 'object'.
     *
     * @param {object} patchPayload.properties.output.properties Specifies a
     * collection that contains the column schema for each input or output of the
     * web service. For more information, see the Swagger specification.
     *
     * @param {object} [patchPayload.properties.exampleRequest] Defines sample
     * input data for one or more of the service's inputs.
     *
     * @param {object} [patchPayload.properties.exampleRequest.inputs] Sample input
     * data for the web service's input(s) given as an input name to sample input
     * values matrix map.
     *
     * @param {object} [patchPayload.properties.exampleRequest.globalParameters]
     * Sample input data for the web service's global parameters
     *
     * @param {object} [patchPayload.properties.assets] Contains user defined
     * properties describing web service assets. Properties are expressed as
     * Key/Value pairs.
     *
     * @param {object} [patchPayload.properties.parameters] The set of global
     * parameters values defined for the web service, given as a global parameter
     * name to default value map. If no default value is specified, the parameter
     * is considered to be required.
     *
     * @param {boolean} [patchPayload.properties.payloadsInBlobStorage] When set to
     * true, indicates that the payload size is larger than 3 MB. Otherwise false.
     * If the payload size exceed 3 MB, the payload is stored in a blob and the
     * PayloadsLocation parameter contains the URI of the blob. Otherwise, this
     * will be set to false and Assets, Input, Output, Package, Parameters,
     * ExampleRequest are inline. The Payload sizes is determined by adding the
     * size of the Assets, Input, Output, Package, Parameters, and the
     * ExampleRequest.
     *
     * @param {object} [patchPayload.properties.payloadsLocation] The URI of the
     * payload blob. This paramater contains a value only if the
     * payloadsInBlobStorage parameter is set to true. Otherwise is set to null.
     *
     * @param {string} patchPayload.properties.payloadsLocation.uri The URI from
     * which the blob is accessible from. For example, aml://abc for system assets
     * or https://xyz for user assets or payload.
     *
     * @param {string} [patchPayload.properties.payloadsLocation.credentials]
     * Access credentials for the blob, if applicable (e.g. blob specified by
     * storage account connection string + blob URI)
     *
     * @param {string} patchPayload.properties.packageType Polymorphic
     * Discriminator
     *
     * @param {string} patchPayload.location Specifies the location of the
     * resource.
     *
     * @param {object} [patchPayload.tags] Contains resource tags defined as
     * key/value pairs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebService>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginPatchWithHttpOperationResponse(resourceGroupName: string, webServiceName: string, patchPayload: models.WebService, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebService>>;

    /**
     * Modifies an existing web service resource. The PATCH API call is an
     * asynchronous operation. To determine whether it has completed successfully,
     * you must perform a Get operation.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {object} patchPayload The payload to use to patch the web service.
     *
     * @param {object} patchPayload.properties Contains the property payload that
     * describes the web service.
     *
     * @param {string} [patchPayload.properties.title] The title of the web
     * service.
     *
     * @param {string} [patchPayload.properties.description] The description of the
     * web service.
     *
     * @param {object} [patchPayload.properties.keys] Contains the web service
     * provisioning keys. If you do not specify provisioning keys, the Azure
     * Machine Learning system generates them for you. Note: The keys are not
     * returned from calls to GET operations.
     *
     * @param {string} [patchPayload.properties.keys.primary] The primary access
     * key.
     *
     * @param {string} [patchPayload.properties.keys.secondary] The secondary
     * access key.
     *
     * @param {boolean} [patchPayload.properties.readOnly] When set to true,
     * indicates that the web service is read-only and can no longer be updated or
     * patched, only removed. Default, is false. Note: Once set to true, you cannot
     * change its value.
     *
     * @param {boolean} [patchPayload.properties.exposeSampleData] When set to
     * true, sample data is included in the web service's swagger definition. The
     * default value is true.
     *
     * @param {object} [patchPayload.properties.realtimeConfiguration] Contains the
     * configuration settings for the web service endpoint.
     *
     * @param {number}
     * [patchPayload.properties.realtimeConfiguration.maxConcurrentCalls] Specifies
     * the maximum concurrent calls that can be made to the web service. Minimum
     * value: 4, Maximum value: 200.
     *
     * @param {object} [patchPayload.properties.diagnostics] Settings controlling
     * the diagnostics traces collection for the web service.
     *
     * @param {string} patchPayload.properties.diagnostics.level Specifies the
     * verbosity of the diagnostic output. Valid values are: None - disables
     * tracing; Error - collects only error (stderr) traces; All - collects all
     * traces (stdout and stderr). Possible values include: 'None', 'Error', 'All'
     *
     * @param {date} [patchPayload.properties.diagnostics.expiry] Specifies the
     * date and time when the logging will cease. If null, diagnostic collection is
     * not time limited.
     *
     * @param {object} [patchPayload.properties.storageAccount] Specifies the
     * storage account that Azure Machine Learning uses to store information about
     * the web service. Only the name of the storage account is returned from calls
     * to GET operations. When updating the storage account information, you must
     * ensure that all necessary assets are available in the new storage account or
     * calls to your web service will fail.
     *
     * @param {string} [patchPayload.properties.storageAccount.name] Specifies the
     * name of the storage account.
     *
     * @param {string} [patchPayload.properties.storageAccount.key] Specifies the
     * key used to access the storage account.
     *
     * @param {object} [patchPayload.properties.machineLearningWorkspace] Specifies
     * the Machine Learning workspace containing the experiment that is source for
     * the web service.
     *
     * @param {string} patchPayload.properties.machineLearningWorkspace.id
     * Specifies the workspace ID of the machine learning workspace associated with
     * the web service
     *
     * @param {object} [patchPayload.properties.commitmentPlan] Contains the
     * commitment plan associated with this web service. Set at creation time. Once
     * set, this value cannot be changed. Note: The commitment plan is not returned
     * from calls to GET operations.
     *
     * @param {string} patchPayload.properties.commitmentPlan.id Specifies the
     * Azure Resource Manager ID of the commitment plan associated with the web
     * service.
     *
     * @param {object} [patchPayload.properties.input] Contains the Swagger 2.0
     * schema describing one or more of the web service's inputs. For more
     * information, see the Swagger specification.
     *
     * @param {object} [patchPayload.properties.output] Contains the Swagger 2.0
     * schema describing one or more of the web service's outputs. For more
     * information, see the Swagger specification.
     *
     * @param {string} [patchPayload.properties.output.title] The title of your
     * Swagger schema.
     *
     * @param {string} [patchPayload.properties.output.description] The description
     * of the Swagger schema.
     *
     * @param {string} patchPayload.properties.output.type The type of the entity
     * described in swagger. Always 'object'.
     *
     * @param {object} patchPayload.properties.output.properties Specifies a
     * collection that contains the column schema for each input or output of the
     * web service. For more information, see the Swagger specification.
     *
     * @param {object} [patchPayload.properties.exampleRequest] Defines sample
     * input data for one or more of the service's inputs.
     *
     * @param {object} [patchPayload.properties.exampleRequest.inputs] Sample input
     * data for the web service's input(s) given as an input name to sample input
     * values matrix map.
     *
     * @param {object} [patchPayload.properties.exampleRequest.globalParameters]
     * Sample input data for the web service's global parameters
     *
     * @param {object} [patchPayload.properties.assets] Contains user defined
     * properties describing web service assets. Properties are expressed as
     * Key/Value pairs.
     *
     * @param {object} [patchPayload.properties.parameters] The set of global
     * parameters values defined for the web service, given as a global parameter
     * name to default value map. If no default value is specified, the parameter
     * is considered to be required.
     *
     * @param {boolean} [patchPayload.properties.payloadsInBlobStorage] When set to
     * true, indicates that the payload size is larger than 3 MB. Otherwise false.
     * If the payload size exceed 3 MB, the payload is stored in a blob and the
     * PayloadsLocation parameter contains the URI of the blob. Otherwise, this
     * will be set to false and Assets, Input, Output, Package, Parameters,
     * ExampleRequest are inline. The Payload sizes is determined by adding the
     * size of the Assets, Input, Output, Package, Parameters, and the
     * ExampleRequest.
     *
     * @param {object} [patchPayload.properties.payloadsLocation] The URI of the
     * payload blob. This paramater contains a value only if the
     * payloadsInBlobStorage parameter is set to true. Otherwise is set to null.
     *
     * @param {string} patchPayload.properties.payloadsLocation.uri The URI from
     * which the blob is accessible from. For example, aml://abc for system assets
     * or https://xyz for user assets or payload.
     *
     * @param {string} [patchPayload.properties.payloadsLocation.credentials]
     * Access credentials for the blob, if applicable (e.g. blob specified by
     * storage account connection string + blob URI)
     *
     * @param {string} patchPayload.properties.packageType Polymorphic
     * Discriminator
     *
     * @param {string} patchPayload.location Specifies the location of the
     * resource.
     *
     * @param {object} [patchPayload.tags] Contains resource tags defined as
     * key/value pairs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebService} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebService} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebService} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginPatch(resourceGroupName: string, webServiceName: string, patchPayload: models.WebService, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebService>;
    beginPatch(resourceGroupName: string, webServiceName: string, patchPayload: models.WebService, callback: ServiceCallback<models.WebService>): void;
    beginPatch(resourceGroupName: string, webServiceName: string, patchPayload: models.WebService, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebService>): void;


    /**
     * Deletes the specified web service.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginRemoveWithHttpOperationResponse(resourceGroupName: string, webServiceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes the specified web service.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginRemove(resourceGroupName: string, webServiceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginRemove(resourceGroupName: string, webServiceName: string, callback: ServiceCallback<void>): void;
    beginRemove(resourceGroupName: string, webServiceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Creates an encrypted credentials parameter blob for the specified region. To
     * get the web service from a region other than the region in which it has been
     * created, you must first call Create Regional Web Services Properties to
     * create a copy of the encrypted credential parameter blob in that region. You
     * only need to do this before the first time that you get the web service in
     * the new region.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {string} region The region for which encrypted credential parameters
     * are created.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AsyncOperationStatus>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateRegionalPropertiesWithHttpOperationResponse(resourceGroupName: string, webServiceName: string, region: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AsyncOperationStatus>>;

    /**
     * Creates an encrypted credentials parameter blob for the specified region. To
     * get the web service from a region other than the region in which it has been
     * created, you must first call Create Regional Web Services Properties to
     * create a copy of the encrypted credential parameter blob in that region. You
     * only need to do this before the first time that you get the web service in
     * the new region.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * web service is located.
     *
     * @param {string} webServiceName The name of the web service.
     *
     * @param {string} region The region for which encrypted credential parameters
     * are created.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AsyncOperationStatus} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AsyncOperationStatus} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AsyncOperationStatus} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateRegionalProperties(resourceGroupName: string, webServiceName: string, region: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AsyncOperationStatus>;
    beginCreateRegionalProperties(resourceGroupName: string, webServiceName: string, region: string, callback: ServiceCallback<models.AsyncOperationStatus>): void;
    beginCreateRegionalProperties(resourceGroupName: string, webServiceName: string, region: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AsyncOperationStatus>): void;


    /**
     * Gets the web services in the specified resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PaginatedWebServicesList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PaginatedWebServicesList>>;

    /**
     * Gets the web services in the specified resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PaginatedWebServicesList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PaginatedWebServicesList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PaginatedWebServicesList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PaginatedWebServicesList>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.PaginatedWebServicesList>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PaginatedWebServicesList>): void;


    /**
     * Gets the web services in the specified subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PaginatedWebServicesList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySubscriptionIdNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PaginatedWebServicesList>>;

    /**
     * Gets the web services in the specified subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PaginatedWebServicesList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PaginatedWebServicesList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PaginatedWebServicesList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySubscriptionIdNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PaginatedWebServicesList>;
    listBySubscriptionIdNext(nextPageLink: string, callback: ServiceCallback<models.PaginatedWebServicesList>): void;
    listBySubscriptionIdNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PaginatedWebServicesList>): void;
}

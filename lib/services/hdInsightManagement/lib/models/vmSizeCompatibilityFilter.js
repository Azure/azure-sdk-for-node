/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The virtual machine type compatibility filter.
 *
 */
class VmSizeCompatibilityFilter {
  /**
   * Create a VmSizeCompatibilityFilter.
   * @member {string} [filterMode] Gets the mode for the filter.
   * @member {array} [regions] The list of regions.
   * @member {array} [clusterFlavors] The list of cluster types available.
   * @member {array} [nodeTypes] The list of node types.
   * @member {array} [clusterVersions] The list of cluster versions.
   * @member {array} [vmsizes] The list of virtual machine sizes.
   */
  constructor() {
  }

  /**
   * Defines the metadata of VmSizeCompatibilityFilter
   *
   * @returns {object} metadata of VmSizeCompatibilityFilter
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'vmSizeCompatibilityFilter',
      type: {
        name: 'Composite',
        className: 'VmSizeCompatibilityFilter',
        modelProperties: {
          filterMode: {
            required: false,
            serializedName: 'FilterMode',
            type: {
              name: 'String'
            }
          },
          regions: {
            required: false,
            serializedName: 'Regions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          clusterFlavors: {
            required: false,
            serializedName: 'ClusterFlavors',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          nodeTypes: {
            required: false,
            serializedName: 'NodeTypes',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          clusterVersions: {
            required: false,
            serializedName: 'ClusterVersions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          vmsizes: {
            required: false,
            serializedName: 'vmsizes',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = VmSizeCompatibilityFilter;

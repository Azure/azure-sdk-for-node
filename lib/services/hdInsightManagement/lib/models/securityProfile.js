/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The security profile which contains Ssh public key for the HDInsight
 * cluster.
 *
 */
class SecurityProfile {
  /**
   * Create a SecurityProfile.
   * @member {string} [directoryType] The directory type. Possible values
   * include: 'ActiveDirectory'
   * @member {string} [domain] domain.
   * @member {string} [organizationalUnitDN] Distinguished Name for
   * organizational unit.
   * @member {array} [ldapsUrls] The LDAP URLs.
   * @member {string} [domainUsername] The domain admin user name.
   * @member {string} [domainUserPassword] The domain admin password.
   * @member {array} [clusterUsersGroupDNs] Optional. The Distinguished Names
   * for cluster user groups
   */
  constructor() {
  }

  /**
   * Defines the metadata of SecurityProfile
   *
   * @returns {object} metadata of SecurityProfile
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SecurityProfile',
      type: {
        name: 'Composite',
        className: 'SecurityProfile',
        modelProperties: {
          directoryType: {
            required: false,
            serializedName: 'directoryType',
            type: {
              name: 'Enum',
              allowedValues: [ 'ActiveDirectory' ]
            }
          },
          domain: {
            required: false,
            serializedName: 'domain',
            type: {
              name: 'String'
            }
          },
          organizationalUnitDN: {
            required: false,
            serializedName: 'organizationalUnitDN',
            type: {
              name: 'String'
            }
          },
          ldapsUrls: {
            required: false,
            serializedName: 'ldapsUrls',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          domainUsername: {
            required: false,
            serializedName: 'domainUsername',
            type: {
              name: 'String'
            }
          },
          domainUserPassword: {
            required: false,
            serializedName: 'domainUserPassword',
            type: {
              name: 'String'
            }
          },
          clusterUsersGroupDNs: {
            required: false,
            serializedName: 'clusterUsersGroupDNs',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = SecurityProfile;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The disk encryption properties
 *
 */
class DiskEncryptionProperties {
  /**
   * Create a DiskEncryptionProperties.
   * @property {string} [vaultUri] Base key vault URI where the customers key
   * is located eg. https://myvault.vault.azure.net
   * @property {string} [keyName] Key name that is used for enabling disk
   * encryption.
   * @property {string} [keyVersion] Specific key version that is used for
   * enabling disk encryption.
   * @property {string} [encryptionAlgorithm] Algorithm identifier for
   * encryption, default RSA-OAEP. Possible values include: 'RSA-OAEP',
   * 'RSA-OAEP-256', 'RSA1_5'
   * @property {string} [msiResourceId] Resource ID of Managed Identity that is
   * used to access the key vault.
   */
  constructor() {
  }

  /**
   * Defines the metadata of DiskEncryptionProperties
   *
   * @returns {object} metadata of DiskEncryptionProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DiskEncryptionProperties',
      type: {
        name: 'Composite',
        className: 'DiskEncryptionProperties',
        modelProperties: {
          vaultUri: {
            required: false,
            serializedName: 'vaultUri',
            type: {
              name: 'String'
            }
          },
          keyName: {
            required: false,
            serializedName: 'keyName',
            type: {
              name: 'String'
            }
          },
          keyVersion: {
            required: false,
            serializedName: 'keyVersion',
            type: {
              name: 'String'
            }
          },
          encryptionAlgorithm: {
            required: false,
            serializedName: 'encryptionAlgorithm',
            type: {
              name: 'String'
            }
          },
          msiResourceId: {
            required: false,
            serializedName: 'msiResourceId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = DiskEncryptionProperties;

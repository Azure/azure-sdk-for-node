/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the HttpSettingsParameters class.
 * @constructor
 * The payload for a Configure HTTP settings request.
 *
 * @member {string} restAuthCredentialisEnabled Whether HTTP auth is enabled or
 * disabled.
 * @member {string} [restAuthCredentialusername] Http username.
 * @member {string} [restAuthCredentialpassword] Http user password.
 */
export interface HttpSettingsParameters {
  restAuthCredentialisEnabled: string;
  restAuthCredentialusername?: string;
  restAuthCredentialpassword?: string;
}

/**
 * @class
 * Initializes a new instance of the ClusterDefinition class.
 * @constructor
 * The cluste definition.
 *
 * @member {string} [blueprint] The link to the blueprint.
 * @member {string} [kind] The type of cluster.
 * @member {object} [componentVersion] The versions of different services in
 * the cluster.
 * @member {object} [configurations] The cluster configurations.
 */
export interface ClusterDefinition {
  blueprint?: string;
  kind?: string;
  componentVersion?: { [propertyName: string]: string };
  configurations?: any;
}

/**
 * @class
 * Initializes a new instance of the SecurityProfile class.
 * @constructor
 * The security profile which contains Ssh public key for the HDInsight
 * cluster.
 *
 * @member {string} [directoryType] The directory type. Possible values
 * include: 'ActiveDirectory'
 * @member {string} [domain] domain.
 * @member {string} [organizationalUnitDN] Distinguished Name for
 * organizational unit.
 * @member {array} [ldapsUrls] The LDAP URLs.
 * @member {string} [domainUsername] The domain admin user name.
 * @member {string} [domainUserPassword] The domain admin password.
 * @member {array} [clusterUsersGroupDNs] Optional. The Distinguished Names for
 * cluster user groups
 */
export interface SecurityProfile {
  directoryType?: string;
  domain?: string;
  organizationalUnitDN?: string;
  ldapsUrls?: string[];
  domainUsername?: string;
  domainUserPassword?: string;
  clusterUsersGroupDNs?: string[];
}

/**
 * @class
 * Initializes a new instance of the HardwareProfile class.
 * @constructor
 * Describes the hardware profile.
 *
 * @member {string} [vmSize] The size of the VM
 */
export interface HardwareProfile {
  vmSize?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkProfile class.
 * @constructor
 * The Virtual network properties.
 *
 * @member {string} [id] The ID of the virtual network.
 * @member {string} [subnet] The name of the subnet.
 */
export interface VirtualNetworkProfile {
  id?: string;
  subnet?: string;
}

/**
 * @class
 * Initializes a new instance of the RdpSettings class.
 * @constructor
 * The RDP settings for the windows cluster.
 *
 * @member {string} [username] The username for the RDP user.
 * @member {string} [password] The password for the RDP user.
 * @member {date} [expiryDate] The RDP expiry date(YYYY-MM-DD).
 */
export interface RdpSettings {
  username?: string;
  password?: string;
  expiryDate?: Date;
}

/**
 * @class
 * Initializes a new instance of the WindowsOperatingSystemProfile class.
 * @constructor
 * The Windows operation system settings.
 *
 * @member {object} [rdpSettings] The RDP settings.
 * @member {string} [rdpSettings.username] The username for the RDP user.
 * @member {string} [rdpSettings.password] The password for the RDP user.
 * @member {date} [rdpSettings.expiryDate] The RDP expiry date(YYYY-MM-DD).
 */
export interface WindowsOperatingSystemProfile {
  rdpSettings?: RdpSettings;
}

/**
 * @class
 * Initializes a new instance of the SshPublicKey class.
 * @constructor
 * The Ssh public key for the cluster nodes.
 *
 * @member {string} [certificateData] The certificate for SSH.
 */
export interface SshPublicKey {
  certificateData?: string;
}

/**
 * @class
 * Initializes a new instance of the SshProfile class.
 * @constructor
 * The list of Ssh public keys.
 *
 * @member {array} [publicKeys] The list of SSH public keys.
 */
export interface SshProfile {
  publicKeys?: SshPublicKey[];
}

/**
 * @class
 * Initializes a new instance of the LinuxOperatingSystemProfile class.
 * @constructor
 * The ssh username, password, and ssh public key.
 *
 * @member {string} [username] The username.
 * @member {string} [password] The password.
 * @member {object} [sshProfile] The SSH profile.
 * @member {array} [sshProfile.publicKeys] The list of SSH public keys.
 */
export interface LinuxOperatingSystemProfile {
  username?: string;
  password?: string;
  sshProfile?: SshProfile;
}

/**
 * @class
 * Initializes a new instance of the OsProfile class.
 * @constructor
 * The Windows operation systems profile, and configure remote desktop
 * settings.
 *
 * @member {object} [windowsOperatingSystemProfile] The Windows OS profile.
 * @member {object} [windowsOperatingSystemProfile.rdpSettings] The RDP
 * settings.
 * @member {string} [windowsOperatingSystemProfile.rdpSettings.username] The
 * username for the RDP user.
 * @member {string} [windowsOperatingSystemProfile.rdpSettings.password] The
 * password for the RDP user.
 * @member {date} [windowsOperatingSystemProfile.rdpSettings.expiryDate] The
 * RDP expiry date(YYYY-MM-DD).
 * @member {object} [linuxOperatingSystemProfile] The Linux OS profile.
 * @member {string} [linuxOperatingSystemProfile.username] The username.
 * @member {string} [linuxOperatingSystemProfile.password] The password.
 * @member {object} [linuxOperatingSystemProfile.sshProfile] The SSH profile.
 * @member {array} [linuxOperatingSystemProfile.sshProfile.publicKeys] The list
 * of SSH public keys.
 */
export interface OsProfile {
  windowsOperatingSystemProfile?: WindowsOperatingSystemProfile;
  linuxOperatingSystemProfile?: LinuxOperatingSystemProfile;
}

/**
 * @class
 * Initializes a new instance of the ScriptAction class.
 * @constructor
 * Describes a script action on role on the cluster.
 *
 * @member {string} name The name of the script action.
 * @member {string} uri The URI to the script.
 * @member {string} parameters The parameters for the script provided.
 */
export interface ScriptAction {
  name: string;
  uri: string;
  parameters: string;
}

/**
 * @class
 * Initializes a new instance of the Role class.
 * @constructor
 * Describes a role on the cluster.
 *
 * @member {string} [name] The name of the role.
 * @member {number} [minInstanceCount] The minimum instance count of the
 * cluster.
 * @member {number} [targetInstanceCount] The instance count of the cluster.
 * @member {object} [hardwareProfile] The hardware profile.
 * @member {string} [hardwareProfile.vmSize] The size of the VM
 * @member {object} [osProfile] The operating system profile.
 * @member {object} [osProfile.windowsOperatingSystemProfile] The Windows OS
 * profile.
 * @member {object} [osProfile.windowsOperatingSystemProfile.rdpSettings] The
 * RDP settings.
 * @member {string}
 * [osProfile.windowsOperatingSystemProfile.rdpSettings.username] The username
 * for the RDP user.
 * @member {string}
 * [osProfile.windowsOperatingSystemProfile.rdpSettings.password] The password
 * for the RDP user.
 * @member {date}
 * [osProfile.windowsOperatingSystemProfile.rdpSettings.expiryDate] The RDP
 * expiry date(YYYY-MM-DD).
 * @member {object} [osProfile.linuxOperatingSystemProfile] The Linux OS
 * profile.
 * @member {string} [osProfile.linuxOperatingSystemProfile.username] The
 * username.
 * @member {string} [osProfile.linuxOperatingSystemProfile.password] The
 * password.
 * @member {object} [osProfile.linuxOperatingSystemProfile.sshProfile] The SSH
 * profile.
 * @member {array}
 * [osProfile.linuxOperatingSystemProfile.sshProfile.publicKeys] The list of
 * SSH public keys.
 * @member {object} [virtualNetworkProfile] The virtual network profile.
 * @member {string} [virtualNetworkProfile.id] The ID of the virtual network.
 * @member {string} [virtualNetworkProfile.subnet] The name of the subnet.
 * @member {array} [scriptActions] The list of script actions on the role.
 */
export interface Role {
  name?: string;
  minInstanceCount?: number;
  targetInstanceCount?: number;
  hardwareProfile?: HardwareProfile;
  osProfile?: OsProfile;
  virtualNetworkProfile?: VirtualNetworkProfile;
  scriptActions?: ScriptAction[];
}

/**
 * @class
 * Initializes a new instance of the ComputeProfile class.
 * @constructor
 * Describes the compute profile.
 *
 * @member {array} [roles] The list of roles in the cluster.
 */
export interface ComputeProfile {
  roles?: Role[];
}

/**
 * @class
 * Initializes a new instance of the StorageAccount class.
 * @constructor
 * Describes the storage Account.
 *
 * @member {string} [name] The name of the storage account.
 * @member {boolean} [isDefault] Describes is the storage account is the
 * default storage account.
 * @member {string} [container] The container in the storage account.
 * @member {string} [key] The storage account access key.
 */
export interface StorageAccount {
  name?: string;
  isDefault?: boolean;
  container?: string;
  key?: string;
}

/**
 * @class
 * Initializes a new instance of the StorageProfile class.
 * @constructor
 * Describes the storage profile.
 *
 * @member {array} [storageaccounts] The list of storage accounts in the
 * cluster.
 */
export interface StorageProfile {
  storageaccounts?: StorageAccount[];
}

/**
 * @class
 * Initializes a new instance of the ClusterCreateProperties class.
 * @constructor
 * The cluster create parameters.
 *
 * @member {string} [clusterVersion] The version of the cluster.
 * @member {string} [osType] The type of operating system. Possible values
 * include: 'Windows', 'Linux'
 * @member {string} [tier] The cluster tier. Possible values include:
 * 'Standard', 'Premium'
 * @member {object} [clusterDefinition] The cluster definition.
 * @member {string} [clusterDefinition.blueprint] The link to the blueprint.
 * @member {string} [clusterDefinition.kind] The type of cluster.
 * @member {object} [clusterDefinition.componentVersion] The versions of
 * different services in the cluster.
 * @member {object} [clusterDefinition.configurations] The cluster
 * configurations.
 * @member {object} [securityProfile] The security profile.
 * @member {string} [securityProfile.directoryType] The directory type.
 * Possible values include: 'ActiveDirectory'
 * @member {string} [securityProfile.domain] domain.
 * @member {string} [securityProfile.organizationalUnitDN] Distinguished Name
 * for organizational unit.
 * @member {array} [securityProfile.ldapsUrls] The LDAP URLs.
 * @member {string} [securityProfile.domainUsername] The domain admin user
 * name.
 * @member {string} [securityProfile.domainUserPassword] The domain admin
 * password.
 * @member {array} [securityProfile.clusterUsersGroupDNs] Optional. The
 * Distinguished Names for cluster user groups
 * @member {object} [computeProfile] The compute profile.
 * @member {array} [computeProfile.roles] The list of roles in the cluster.
 * @member {object} [storageProfile] The storage profile.
 * @member {array} [storageProfile.storageaccounts] The list of storage
 * accounts in the cluster.
 */
export interface ClusterCreateProperties {
  clusterVersion?: string;
  osType?: string;
  tier?: string;
  clusterDefinition?: ClusterDefinition;
  securityProfile?: SecurityProfile;
  computeProfile?: ComputeProfile;
  storageProfile?: StorageProfile;
}

/**
 * @class
 * Initializes a new instance of the ClusterCreateParametersExtended class.
 * @constructor
 * The CreateCluster request parameters.
 *
 * @member {string} [location] The location of the cluster.
 * @member {object} [tags] The resource tags.
 * @member {object} [properties] The cluster create parameters.
 * @member {string} [properties.clusterVersion] The version of the cluster.
 * @member {string} [properties.osType] The type of operating system. Possible
 * values include: 'Windows', 'Linux'
 * @member {string} [properties.tier] The cluster tier. Possible values
 * include: 'Standard', 'Premium'
 * @member {object} [properties.clusterDefinition] The cluster definition.
 * @member {string} [properties.clusterDefinition.blueprint] The link to the
 * blueprint.
 * @member {string} [properties.clusterDefinition.kind] The type of cluster.
 * @member {object} [properties.clusterDefinition.componentVersion] The
 * versions of different services in the cluster.
 * @member {object} [properties.clusterDefinition.configurations] The cluster
 * configurations.
 * @member {object} [properties.securityProfile] The security profile.
 * @member {string} [properties.securityProfile.directoryType] The directory
 * type. Possible values include: 'ActiveDirectory'
 * @member {string} [properties.securityProfile.domain] domain.
 * @member {string} [properties.securityProfile.organizationalUnitDN]
 * Distinguished Name for organizational unit.
 * @member {array} [properties.securityProfile.ldapsUrls] The LDAP URLs.
 * @member {string} [properties.securityProfile.domainUsername] The domain
 * admin user name.
 * @member {string} [properties.securityProfile.domainUserPassword] The domain
 * admin password.
 * @member {array} [properties.securityProfile.clusterUsersGroupDNs] Optional.
 * The Distinguished Names for cluster user groups
 * @member {object} [properties.computeProfile] The compute profile.
 * @member {array} [properties.computeProfile.roles] The list of roles in the
 * cluster.
 * @member {object} [properties.storageProfile] The storage profile.
 * @member {array} [properties.storageProfile.storageaccounts] The list of
 * storage accounts in the cluster.
 */
export interface ClusterCreateParametersExtended {
  location?: string;
  tags?: { [propertyName: string]: string };
  properties?: ClusterCreateProperties;
}

/**
 * @class
 * Initializes a new instance of the ClusterPatchParameters class.
 * @constructor
 * The PatchCluster request parameters
 *
 * @member {object} [tags] The resource tags.
 */
export interface ClusterPatchParameters {
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the QuotaInfo class.
 * @constructor
 * Gets or sets Quota properties for the cluster.
 *
 * @member {number} [coresUsed] The cores used by the cluster.
 */
export interface QuotaInfo {
  coresUsed?: number;
}

/**
 * @class
 * Initializes a new instance of the Errors class.
 * @constructor
 * The error message associated with the cluster creation.
 *
 * @member {string} [code] The error code.
 * @member {string} [message] The error message.
 */
export interface Errors {
  code?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the ConnectivityEndpoint class.
 * @constructor
 * The connectivity properties
 *
 * @member {string} [name] The name of the endpoint.
 * @member {string} [protocol] The protocol of the endpoint.
 * @member {string} [location] The location of the endpoint.
 * @member {number} [port] The port to connect to.
 */
export interface ConnectivityEndpoint {
  name?: string;
  protocol?: string;
  location?: string;
  port?: number;
}

/**
 * @class
 * Initializes a new instance of the ClusterGetProperties class.
 * @constructor
 * The properties of cluster.
 *
 * @member {string} [clusterVersion] The version of the cluster.
 * @member {string} [osType] The type of operating system. Possible values
 * include: 'Windows', 'Linux'
 * @member {string} [tier] The cluster tier. Possible values include:
 * 'Standard', 'Premium'
 * @member {object} clusterDefinition The cluster definition.
 * @member {string} [clusterDefinition.blueprint] The link to the blueprint.
 * @member {string} [clusterDefinition.kind] The type of cluster.
 * @member {object} [clusterDefinition.componentVersion] The versions of
 * different services in the cluster.
 * @member {object} [clusterDefinition.configurations] The cluster
 * configurations.
 * @member {object} [securityProfile] The security profile.
 * @member {string} [securityProfile.directoryType] The directory type.
 * Possible values include: 'ActiveDirectory'
 * @member {string} [securityProfile.domain] domain.
 * @member {string} [securityProfile.organizationalUnitDN] Distinguished Name
 * for organizational unit.
 * @member {array} [securityProfile.ldapsUrls] The LDAP URLs.
 * @member {string} [securityProfile.domainUsername] The domain admin user
 * name.
 * @member {string} [securityProfile.domainUserPassword] The domain admin
 * password.
 * @member {array} [securityProfile.clusterUsersGroupDNs] Optional. The
 * Distinguished Names for cluster user groups
 * @member {object} [computeProfile] The compute profile.
 * @member {array} [computeProfile.roles] The list of roles in the cluster.
 * @member {string} [provisioningState] The provisioning state, which only
 * appears in the response. Possible values include: 'InProgress', 'Failed',
 * 'Succeeded', 'Canceled', 'Deleting'
 * @member {string} [createdDate] The date on which the cluster was created.
 * @member {string} [clusterState] The state of the cluster.
 * @member {object} [quotaInfo] The quota information.
 * @member {number} [quotaInfo.coresUsed] The cores used by the cluster.
 * @member {array} [errors] The list of errors.
 * @member {array} [connectivityEndpoints] The list of connectivity endpoints.
 */
export interface ClusterGetProperties {
  clusterVersion?: string;
  osType?: string;
  tier?: string;
  clusterDefinition: ClusterDefinition;
  securityProfile?: SecurityProfile;
  computeProfile?: ComputeProfile;
  provisioningState?: string;
  createdDate?: string;
  clusterState?: string;
  quotaInfo?: QuotaInfo;
  errors?: Errors[];
  connectivityEndpoints?: ConnectivityEndpoint[];
}

/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * The resource definition.
 *
 * @member {string} [id] Resource Id
 * @member {string} [name] Resource name
 * @member {string} [type] Resource type
 * @member {string} location Resource location
 * @member {object} [tags] Resource tags
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
  location: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the Cluster class.
 * @constructor
 * Describes the cluster.
 *
 * @member {string} [etag] The ETag for the resource
 * @member {object} [properties] The properties of the cluster.
 * @member {string} [properties.clusterVersion] The version of the cluster.
 * @member {string} [properties.osType] The type of operating system. Possible
 * values include: 'Windows', 'Linux'
 * @member {string} [properties.tier] The cluster tier. Possible values
 * include: 'Standard', 'Premium'
 * @member {object} [properties.clusterDefinition] The cluster definition.
 * @member {string} [properties.clusterDefinition.blueprint] The link to the
 * blueprint.
 * @member {string} [properties.clusterDefinition.kind] The type of cluster.
 * @member {object} [properties.clusterDefinition.componentVersion] The
 * versions of different services in the cluster.
 * @member {object} [properties.clusterDefinition.configurations] The cluster
 * configurations.
 * @member {object} [properties.securityProfile] The security profile.
 * @member {string} [properties.securityProfile.directoryType] The directory
 * type. Possible values include: 'ActiveDirectory'
 * @member {string} [properties.securityProfile.domain] domain.
 * @member {string} [properties.securityProfile.organizationalUnitDN]
 * Distinguished Name for organizational unit.
 * @member {array} [properties.securityProfile.ldapsUrls] The LDAP URLs.
 * @member {string} [properties.securityProfile.domainUsername] The domain
 * admin user name.
 * @member {string} [properties.securityProfile.domainUserPassword] The domain
 * admin password.
 * @member {array} [properties.securityProfile.clusterUsersGroupDNs] Optional.
 * The Distinguished Names for cluster user groups
 * @member {object} [properties.computeProfile] The compute profile.
 * @member {array} [properties.computeProfile.roles] The list of roles in the
 * cluster.
 * @member {string} [properties.provisioningState] The provisioning state,
 * which only appears in the response. Possible values include: 'InProgress',
 * 'Failed', 'Succeeded', 'Canceled', 'Deleting'
 * @member {string} [properties.createdDate] The date on which the cluster was
 * created.
 * @member {string} [properties.clusterState] The state of the cluster.
 * @member {object} [properties.quotaInfo] The quota information.
 * @member {number} [properties.quotaInfo.coresUsed] The cores used by the
 * cluster.
 * @member {array} [properties.errors] The list of errors.
 * @member {array} [properties.connectivityEndpoints] The list of connectivity
 * endpoints.
 */
export interface Cluster extends Resource {
  etag?: string;
  properties?: ClusterGetProperties;
}

/**
 * @class
 * Initializes a new instance of the RuntimeScriptAction class.
 * @constructor
 * Describes a script action on a running cluster.
 *
 * @member {string} name The name of the script action.
 * @member {string} uri The URI to the script.
 * @member {string} [parameters] The parameters for the script
 * @member {array} roles The list of roles where script will be executed.
 * @member {string} [applicationName] The application name of the script
 * action, if any.
 */
export interface RuntimeScriptAction {
  name: string;
  uri: string;
  parameters?: string;
  roles: string[];
  readonly applicationName?: string;
}

/**
 * @class
 * Initializes a new instance of the ExecuteScriptActionParameters class.
 * @constructor
 * Describes the script actions on a running cluster.
 *
 * @member {array} [scriptActions] The list of run time script actions.
 * @member {string} persistOnSuccess Gets or sets if the scripts needs to be
 * persisted.
 */
export interface ExecuteScriptActionParameters {
  scriptActions?: RuntimeScriptAction[];
  persistOnSuccess: string;
}

/**
 * @class
 * Initializes a new instance of the ClusterListPersistedScriptActionsResult class.
 * @constructor
 * List PersistedScriptActions operations response.
 *
 * @member {array} [value] The list of Persisted Script Actions.
 * @member {string} [nextLink] The link (url) to the next page of results.
 */
export interface ClusterListPersistedScriptActionsResult {
  value?: RuntimeScriptAction[];
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ScriptActionExecutionSummary class.
 * @constructor
 * Describes the execution summary of a script action.
 *
 * @member {string} [status] The status of script action execution.
 * @member {number} [instanceCount] The instance count for a given script
 * action execution status.
 */
export interface ScriptActionExecutionSummary {
  readonly status?: string;
  readonly instanceCount?: number;
}

/**
 * @class
 * Initializes a new instance of the RuntimeScriptActionDetail class.
 * @constructor
 * Describes the execution details of a script action.
 *
 * @member {number} [scriptExecutionId] The execution id of the script action.
 * @member {string} [startTime] The start time of script action execution.
 * @member {string} [endTime] The end time of script action execution.
 * @member {string} [status] The current execution status of the script action.
 * @member {string} [operation] The reason why the script action was executed.
 * @member {array} [executionSummary] The summary of script action execution
 * result.
 * @member {string} [debugInformation] The script action execution debug
 * information.
 * @member {string} name The name of the script action.
 * @member {string} uri The URI to the script.
 * @member {string} [parameters] The parameters for the script
 * @member {array} roles The list of roles where script will be executed.
 * @member {string} [applicationName] The application name of the script
 * action, if any.
 */
export interface RuntimeScriptActionDetail {
  readonly scriptExecutionId?: number;
  readonly startTime?: string;
  readonly endTime?: string;
  readonly status?: string;
  readonly operation?: string;
  readonly executionSummary?: ScriptActionExecutionSummary[];
  readonly debugInformation?: string;
  name: string;
  uri: string;
  parameters?: string;
  roles: string[];
  readonly applicationName?: string;
}

/**
 * @class
 * Initializes a new instance of the ClusterListRuntimeScriptActionDetailResult class.
 * @constructor
 * The ListScriptExecutionHistory response.
 *
 * @member {array} [value] The list of persisted script action details for the
 * cluster.
 * @member {string} [nextLink] The link (url) to the next page of results.
 */
export interface ClusterListRuntimeScriptActionDetailResult {
  readonly value?: RuntimeScriptActionDetail[];
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ClusterResizeParameters class.
 * @constructor
 * The Resize Cluster request parameters.
 *
 * @member {number} [targetInstanceCount] The target instance count for the
 * operation.
 */
export interface ClusterResizeParameters {
  targetInstanceCount?: number;
}

/**
 * @class
 * Initializes a new instance of the OperationResource class.
 * @constructor
 * The azure async operation response.
 *
 * @member {string} [status] The async operation state. Possible values
 * include: 'InProgress', 'Succeeded', 'Failed'
 * @member {object} [error] The operation error information.
 * @member {string} [error.code] The error code.
 * @member {string} [error.message] The error message.
 */
export interface OperationResource {
  status?: string;
  error?: Errors;
}

/**
 * @class
 * Initializes a new instance of the SubResource class.
 * @constructor
 * The sub resource definition.
 *
 * @member {string} [id] Resource Id
 */
export interface SubResource extends BaseResource {
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationDisplay class.
 * @constructor
 * The object that represents the operation.
 *
 * @member {string} [provider] Service provider: Microsoft.HDInsight
 * @member {string} [resource] Resource on which the operation is performed:
 * Profile, endpoint, etc.
 * @member {string} [operation] Operation type: Read, write, delete, etc.
 */
export interface OperationDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
}

/**
 * @class
 * Initializes a new instance of the Operation class.
 * @constructor
 * HDInsight REST API operation
 *
 * @member {string} [name] Operation name: {provider}/{resource}/{operation}
 * @member {object} [display] The object that represents the operation.
 * @member {string} [display.provider] Service provider: Microsoft.HDInsight
 * @member {string} [display.resource] Resource on which the operation is
 * performed: Profile, endpoint, etc.
 * @member {string} [display.operation] Operation type: Read, write, delete,
 * etc.
 */
export interface Operation {
  name?: string;
  display?: OperationDisplay;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGetHttpsEndpoint class.
 * @constructor
 * Gets application Http endpoints.
 *
 * @member {object} [additionalProperties] Unmatched properties from the
 * message are deserialized this collection
 * @member {array} [accessModes] The list of access modes for the application.
 * @member {string} [location] The location of the endpoint.
 * @member {number} [destinationPort] The destinationPort to connect to.
 * @member {number} [publicPort] The publicPort to connect to.
 */
export interface ApplicationGetHttpsEndpoint {
  additionalProperties?: { [propertyName: string]: string };
  accessModes?: string[];
  location?: string;
  destinationPort?: number;
  publicPort?: number;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGetEndpoint class.
 * @constructor
 * Gets Application ssh endpoint
 *
 * @member {string} [location] The location of the endpoint.
 * @member {number} [destinationPort] The destinationPort to connect to.
 * @member {number} [publicPort] The publicPort to connect to.
 */
export interface ApplicationGetEndpoint {
  location?: string;
  destinationPort?: number;
  publicPort?: number;
}

/**
 * @class
 * Initializes a new instance of the ApplicationGetProperties class.
 * @constructor
 * HDInsight cluster application.
 *
 * @member {object} [computeProfile] The list of roles in the cluster.
 * @member {array} [computeProfile.roles] The list of roles in the cluster.
 * @member {array} [installScriptActions] The list of install script actions.
 * @member {array} [uninstallScriptActions] The list of uninstall script
 * actions.
 * @member {array} [httpsEndpoints] The list of application Https endpoints.
 * @member {array} [sshEndpoints] The list of application ssh endpoints.
 * @member {string} [provisioningState] The provisioning state of the
 * application
 * @member {string} [applicationType] The Application type.
 * @member {string} [applicationState] The Application state.
 * @member {array} [errors] The list of errors.
 * @member {string} [createdDate] The application create date time.
 * @member {string} [marketplaceIdentifier] The Marketplace identifier.
 * @member {string} [additionalProperties] The additional properties for
 * application.
 */
export interface ApplicationGetProperties {
  computeProfile?: ComputeProfile;
  installScriptActions?: RuntimeScriptAction[];
  uninstallScriptActions?: RuntimeScriptAction[];
  httpsEndpoints?: ApplicationGetHttpsEndpoint[];
  sshEndpoints?: ApplicationGetEndpoint[];
  readonly provisioningState?: string;
  applicationType?: string;
  readonly applicationState?: string;
  errors?: Errors[];
  readonly createdDate?: string;
  readonly marketplaceIdentifier?: string;
  additionalProperties?: string;
}

/**
 * @class
 * Initializes a new instance of the Application class.
 * @constructor
 * HDInsight cluster application
 *
 * @member {object} [id] The resource id for the application
 * @member {string} [id.id] Resource Id
 * @member {string} [name] The name of the application.
 * @member {string} [type] The type of application.
 * @member {string} [etag] The ETag for the application
 * @member {object} [tags] The tags for the application.
 * @member {object} [properties] Gets or sets the properties of the
 * application.
 * @member {object} [properties.computeProfile] The list of roles in the
 * cluster.
 * @member {array} [properties.computeProfile.roles] The list of roles in the
 * cluster.
 * @member {array} [properties.installScriptActions] The list of install script
 * actions.
 * @member {array} [properties.uninstallScriptActions] The list of uninstall
 * script actions.
 * @member {array} [properties.httpsEndpoints] The list of application Https
 * endpoints.
 * @member {array} [properties.sshEndpoints] The list of application ssh
 * endpoints.
 * @member {string} [properties.provisioningState] The provisioning state of
 * the application
 * @member {string} [properties.applicationType] The Application type.
 * @member {string} [properties.applicationState] The Application state.
 * @member {array} [properties.errors] The list of errors.
 * @member {string} [properties.createdDate] The application create date time.
 * @member {string} [properties.marketplaceIdentifier] The Marketplace
 * identifier.
 * @member {string} [properties.additionalProperties] The additional properties
 * for application.
 */
export interface Application {
  readonly id?: SubResource;
  readonly name?: string;
  readonly type?: string;
  etag?: string;
  tags?: { [propertyName: string]: string };
  properties?: ApplicationGetProperties;
}

/**
 * @class
 * Initializes a new instance of the VersionSpec class.
 * @constructor
 * Gets or sets Version spec properties.
 *
 * @member {string} [friendlyName] Friendly Name
 * @member {string} [displayName] Display Name
 * @member {string} [isDefault] Value true if the version is the default
 * version.
 * @member {object} [componentVersions] The component version property.
 */
export interface VersionSpec {
  friendlyName?: string;
  displayName?: string;
  isDefault?: string;
  componentVersions?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the VersionsCapability class.
 * @constructor
 * The version capability.
 *
 * @member {array} [available] Gets the list of version capabilities.
 */
export interface VersionsCapability {
  available?: VersionSpec[];
}

/**
 * @class
 * Initializes a new instance of the RegionsCapability class.
 * @constructor
 * The regions capability.
 *
 * @member {array} [available] Gets the list of region capabilities.
 */
export interface RegionsCapability {
  available?: string[];
}

/**
 * @class
 * Initializes a new instance of the VmSizesCapability class.
 * @constructor
 * The virtual machine sizes capability.
 *
 * @member {array} [available] Gets the list of virtual machine size
 * capabilities.
 */
export interface VmSizesCapability {
  available?: string[];
}

/**
 * @class
 * Initializes a new instance of the VmSizeCompatibilityFilter class.
 * @constructor
 * The virtual machine type compatibility filter.
 *
 * @member {string} [filterMode] Gets the mode for the filter.
 * @member {array} [regions] The list of regions.
 * @member {array} [clusterFlavors] The list of cluster types available.
 * @member {array} [nodeTypes] The list of node types.
 * @member {array} [clusterVersions] The list of cluster versions.
 * @member {array} [vmsizes] The list of virtual machine sizes.
 */
export interface VmSizeCompatibilityFilter {
  filterMode?: string;
  regions?: string[];
  clusterFlavors?: string[];
  nodeTypes?: string[];
  clusterVersions?: string[];
  vmsizes?: string[];
}

/**
 * @class
 * Initializes a new instance of the RegionalQuotaCapability class.
 * @constructor
 * The regional quota capacity.
 *
 * @member {string} [regionName] Gets the region name.
 * @member {number} [coresUsed] The number of cores used in the region.
 * @member {number} [coresAvailable] The number of courses available in the
 * region.
 */
export interface RegionalQuotaCapability {
  regionName?: string;
  coresUsed?: number;
  coresAvailable?: number;
}

/**
 * @class
 * Initializes a new instance of the QuotaCapability class.
 * @constructor
 * The regional quota capability.
 *
 * @member {array} [regionalQuotas] The list of region quota capabilities.
 */
export interface QuotaCapability {
  regionalQuotas?: RegionalQuotaCapability[];
}

/**
 * @class
 * Initializes a new instance of the CapabilitiesResult class.
 * @constructor
 * The Get Capabilities operation response.
 *
 * @member {object} [versions] The version capability.
 * @member {object} [regions] The virtual machine size compatibilty features.
 * @member {object} [vmsizes] The virtual machine sizes.
 * @member {array} [vmsizeFilters] The virtual machine size compatibilty
 * filters.
 * @member {array} [features] The capabilty features.
 * @member {object} [quota] The quota capability.
 * @member {array} [quota.regionalQuotas] The list of region quota
 * capabilities.
 */
export interface CapabilitiesResult {
  versions?: { [propertyName: string]: VersionsCapability };
  regions?: { [propertyName: string]: RegionsCapability };
  vmsizes?: { [propertyName: string]: VmSizesCapability };
  vmsizeFilters?: VmSizeCompatibilityFilter[];
  features?: string[];
  quota?: QuotaCapability;
}

/**
 * @class
 * Initializes a new instance of the RDPSettingsParameters class.
 * @constructor
 * Parameters specifying the data factory gateway definition for a create or
 * update operation.
 *
 * @member {object} osProfile The definition of a data factory gateway to be
 * created or updated.
 * @member {object} [osProfile.windowsOperatingSystemProfile] The Windows OS
 * profile.
 * @member {object} [osProfile.windowsOperatingSystemProfile.rdpSettings] The
 * RDP settings.
 * @member {string}
 * [osProfile.windowsOperatingSystemProfile.rdpSettings.username] The username
 * for the RDP user.
 * @member {string}
 * [osProfile.windowsOperatingSystemProfile.rdpSettings.password] The password
 * for the RDP user.
 * @member {date}
 * [osProfile.windowsOperatingSystemProfile.rdpSettings.expiryDate] The RDP
 * expiry date(YYYY-MM-DD).
 * @member {object} [osProfile.linuxOperatingSystemProfile] The Linux OS
 * profile.
 * @member {string} [osProfile.linuxOperatingSystemProfile.username] The
 * username.
 * @member {string} [osProfile.linuxOperatingSystemProfile.password] The
 * password.
 * @member {object} [osProfile.linuxOperatingSystemProfile.sshProfile] The SSH
 * profile.
 * @member {array}
 * [osProfile.linuxOperatingSystemProfile.sshProfile.publicKeys] The list of
 * SSH public keys.
 */
export interface RDPSettingsParameters {
  osProfile: OsProfile;
}

/**
 * @class
 * Initializes a new instance of the HttpConnectivitySettings class.
 * @constructor
 * The payload for a Configure HTTP settings request.
 *
 * @member {string} [enabledCredential] Describes whether HTTP based
 * authorization is enabled or not.
 * @member {string} [username] The http username.
 * @member {string} [password] The http user password.
 */
export interface HttpConnectivitySettings {
  enabledCredential?: string;
  username?: string;
  password?: string;
}

/**
 * @class
 * Initializes a new instance of the Extension class.
 * @constructor
 * Cluster monitoring extensions
 *
 * @member {string} [workspaceId] Workspace Id for cluster monitoring extension
 * @member {string} [primaryKey] Certificate for monitoring extensions
 */
export interface Extension {
  workspaceId?: string;
  primaryKey?: string;
}

/**
 * @class
 * Initializes a new instance of the ScriptActionPersistedGetResponseSpec class.
 * @constructor
 * The persisted script action for cluster
 *
 * @member {string} [name] The name of script action.
 * @member {string} [uri] The URI to the script.
 * @member {string} [parameters] The parameters for the script provided.
 * @member {array} [roles] The list of roles where script will be executed.
 * @member {string} [applicationName] The application name for the script
 * action.
 */
export interface ScriptActionPersistedGetResponseSpec {
  name?: string;
  uri?: string;
  parameters?: string;
  roles?: string[];
  applicationName?: string;
}


/**
 * @class
 * Initializes a new instance of the ClusterListResult class.
 * @constructor
 * The List Cluster operation response.
 *
 * @member {string} [nextLink] The link (url) to the next page of results.
 */
export interface ClusterListResult extends Array<Cluster> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationListResult class.
 * @constructor
 * Result of the request to list cluster Applications. It contains a list of
 * operations and a URL link to get the next set of results.
 *
 * @member {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 */
export interface ApplicationListResult extends Array<Application> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ScriptActionsList class.
 * @constructor
 * All persisted script action for the cluster.
 *
 * @member {string} [nextLink] The link (url) to the next page of results.
 */
export interface ScriptActionsList extends Array<RuntimeScriptActionDetail> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ScriptActionExecutionHistoryList class.
 * @constructor
 * The ListScriptExecutionHistory response.
 *
 * @member {string} [nextLink] The link (url) to the next page of results.
 */
export interface ScriptActionExecutionHistoryList extends Array<RuntimeScriptActionDetail> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationListResult class.
 * @constructor
 * Result of the request to list HDInsight operations. It contains a list of
 * operations and a URL link to get the next set of results.
 *
 * @member {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 */
export interface OperationListResult extends Array<Operation> {
  nextLink?: string;
}

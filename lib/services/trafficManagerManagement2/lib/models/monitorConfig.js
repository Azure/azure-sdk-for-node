/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the MonitorConfig class.
 * @constructor
 * Class containing endpoint monitoring settings in a Traffic Manager profile.
 *
 * @member {string} [profileMonitorStatus] Gets or sets the profile-level
 * monitoring status of the Traffic Manager profile.
 * 
 * @member {string} [protocol] Gets or sets the protocol (HTTP or HTTPS) used
 * to probe for endpoint health.
 * 
 * @member {number} [port] Gets or sets the TCP port used to probe for
 * endpoint health.
 * 
 * @member {string} [path] Gets or sets the path relative to the endpoint
 * domain name used to probe for endpoint health.
 * 
 */
function MonitorConfig() {
}

/**
 * Defines the metadata of MonitorConfig
 *
 * @returns {object} metadata of MonitorConfig
 *
 */
MonitorConfig.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'MonitorConfig',
    type: {
      name: 'Composite',
      className: 'MonitorConfig',
      modelProperties: {
        profileMonitorStatus: {
          required: false,
          serializedName: 'profileMonitorStatus',
          type: {
            name: 'String'
          }
        },
        protocol: {
          required: false,
          serializedName: 'protocol',
          type: {
            name: 'String'
          }
        },
        port: {
          required: false,
          serializedName: 'port',
          type: {
            name: 'Number'
          }
        },
        path: {
          required: false,
          serializedName: 'path',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = MonitorConfig;

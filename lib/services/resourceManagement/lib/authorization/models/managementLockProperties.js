/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the ManagementLockProperties class.
 * @constructor
 * The management lock properties.
 * @member {string} [level] Gets or sets the lock level of the management
 * lock. Possible values for this property include: 'NotSpecified',
 * 'CanNotDelete', 'ReadOnly'.
 * 
 * @member {string} [notes] Gets or sets the notes of the management lock.
 * 
 */
function ManagementLockProperties(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.level !== null && parameters.level !== undefined) {
      this.level = parameters.level;
    }
    if (parameters.notes !== null && parameters.notes !== undefined) {
      this.notes = parameters.notes;
    }
  }    
}


/**
 * Validate the payload against the ManagementLockProperties schema
 *
 * @param {JSON} payload
 *
 */
ManagementLockProperties.prototype.serialize = function () {
  var payload = {};
  if (this['level'] !== null && this['level'] !== undefined) {
    var allowedValues = [ 'NotSpecified', 'CanNotDelete', 'ReadOnly' ];
    var thislevel = this['level'];
    if (!allowedValues.some( function(item) { return item === thislevel; })) {
      throw new Error(this['level'] + ' is not a valid value. The valid values are: ' + allowedValues);
    }
    payload['level'] = this['level'];
  }

  if (this['notes'] !== null && this['notes'] !== undefined) {
    if (typeof this['notes'].valueOf() !== 'string') {
      throw new Error('this[\'notes\'] must be of type string.');
    }
    payload['notes'] = this['notes'];
  }

  return payload;
};

/**
 * Deserialize the instance to ManagementLockProperties schema
 *
 * @param {JSON} instance
 *
 */
ManagementLockProperties.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['level'] !== null && instance['level'] !== undefined) {
      this['level'] = instance['level'];
    }

    if (instance['notes'] !== null && instance['notes'] !== undefined) {
      this['notes'] = instance['notes'];
    }
  }

  return this;
};

module.exports = ManagementLockProperties;

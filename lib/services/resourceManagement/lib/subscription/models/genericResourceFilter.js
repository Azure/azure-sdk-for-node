/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the GenericResourceFilter class.
 * @constructor
 * Resource filter.
 * @member {string} [resourceType] Gets or sets the resource type.
 * 
 * @member {string} [tagname] Gets or sets the tag name.
 * 
 * @member {string} [tagvalue] Gets or sets the tag value.
 * 
 */
function GenericResourceFilter(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.resourceType !== null && parameters.resourceType !== undefined) {
      this.resourceType = parameters.resourceType;
    }
    if (parameters.tagname !== null && parameters.tagname !== undefined) {
      this.tagname = parameters.tagname;
    }
    if (parameters.tagvalue !== null && parameters.tagvalue !== undefined) {
      this.tagvalue = parameters.tagvalue;
    }
  }    
}


/**
 * Validate the payload against the GenericResourceFilter schema
 *
 * @param {JSON} payload
 *
 */
GenericResourceFilter.prototype.serialize = function () {
  var payload = {};
  if (this['resourceType'] !== null && this['resourceType'] !== undefined) {
    if (typeof this['resourceType'].valueOf() !== 'string') {
      throw new Error('this[\'resourceType\'] must be of type string.');
    }
    payload['resourceType'] = this['resourceType'];
  }

  if (this['tagname'] !== null && this['tagname'] !== undefined) {
    if (typeof this['tagname'].valueOf() !== 'string') {
      throw new Error('this[\'tagname\'] must be of type string.');
    }
    payload['tagname'] = this['tagname'];
  }

  if (this['tagvalue'] !== null && this['tagvalue'] !== undefined) {
    if (typeof this['tagvalue'].valueOf() !== 'string') {
      throw new Error('this[\'tagvalue\'] must be of type string.');
    }
    payload['tagvalue'] = this['tagvalue'];
  }

  return payload;
};

/**
 * Deserialize the instance to GenericResourceFilter schema
 *
 * @param {JSON} instance
 *
 */
GenericResourceFilter.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['resourceType'] !== null && instance['resourceType'] !== undefined) {
      this['resourceType'] = instance['resourceType'];
    }

    if (instance['tagname'] !== null && instance['tagname'] !== undefined) {
      this['tagname'] = instance['tagname'];
    }

    if (instance['tagvalue'] !== null && instance['tagvalue'] !== undefined) {
      this['tagvalue'] = instance['tagvalue'];
    }
  }

  return this;
};

module.exports = GenericResourceFilter;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure";
import * as moment from "moment";

export {

  BaseResource,
  CloudError
};

/**
 * Lock owner properties.
 */
export interface ManagementLockOwner {
  /**
   * The application ID of the lock owner.
   */
  applicationId?: string;
}

/**
 * The lock information.
 */
export interface ManagementLockObject extends BaseResource {
  /**
   * The level of the lock. Possible values are: NotSpecified, CanNotDelete, ReadOnly. CanNotDelete
   * means authorized users are able to read and modify the resources, but not delete. ReadOnly
   * means authorized users can only read from a resource, but they can't modify or delete it.
   * Possible values include: 'NotSpecified', 'CanNotDelete', 'ReadOnly'
   */
  level: string;
  /**
   * Notes about the lock. Maximum of 512 characters.
   */
  notes?: string;
  /**
   * The owners of the lock.
   */
  owners?: ManagementLockOwner[];
  /**
   * The resource ID of the lock.
   */
  readonly id?: string;
  /**
   * The resource type of the lock - Microsoft.Authorization/locks.
   */
  readonly type?: string;
  /**
   * The name of the lock.
   */
  readonly name?: string;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.Authorization
   */
  provider?: string;
  /**
   * Resource on which the operation is performed: Profile, endpoint, etc.
   */
  resource?: string;
  /**
   * Operation type: Read, write, delete, etc.
   */
  operation?: string;
}

/**
 * Microsoft.Authorization operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * Result of the request to list Microsoft.Authorization operations. It contains a list of
 * operations and a URL link to get the next set of results.
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   */
  nextLink?: string;
}

/**
 * The list of locks.
 */
export interface ManagementLockListResult extends Array<ManagementLockObject> {
  /**
   * The URL to use for getting the next set of results.
   */
  nextLink?: string;
}

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the DeploymentProperties class.
 * @constructor
 * Deployment properties.
 *
 * @member {object} [template] Gets or sets the template content. Use only one
 * of Template or TemplateLink.
 * 
 * @member {object} [templateLink] Gets or sets the URI referencing the
 * template. Use only one of Template or TemplateLink.
 * 
 * @member {string} [templateLink.uri] URI referencing the template.
 * 
 * @member {string} [templateLink.contentVersion] If included it must match
 * the ContentVersion in the template.
 * 
 * @member {object} [parameters] Deployment parameters. Use only one of
 * Parameters or ParametersLink.
 * 
 * @member {object} [parametersLink] Gets or sets the URI referencing the
 * parameters. Use only one of Parameters or ParametersLink.
 * 
 * @member {string} [parametersLink.uri] URI referencing the template.
 * 
 * @member {string} [parametersLink.contentVersion] If included it must match
 * the ContentVersion in the template.
 * 
 * @member {string} [mode] Gets or sets the deployment mode. Possible values
 * include: 'Incremental', 'Complete'
 * 
 * @member {object} [debugSetting] Gets or sets the debug setting of the
 * deployment.
 * 
 * @member {string} [debugSetting.detailLevel] Gets or sets the debug detail
 * level.
 * 
 */
function DeploymentProperties() {
}

/**
 * Defines the metadata of DeploymentProperties
 *
 * @returns {object} metadata of DeploymentProperties
 *
 */
DeploymentProperties.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'DeploymentProperties',
    type: {
      name: 'Composite',
      className: 'DeploymentProperties',
      modelProperties: {
        template: {
          required: false,
          serializedName: 'template',
          type: {
            name: 'Object'
          }
        },
        templateLink: {
          required: false,
          serializedName: 'templateLink',
          type: {
            name: 'Composite',
            className: 'TemplateLink'
          }
        },
        parameters: {
          required: false,
          serializedName: 'parameters',
          type: {
            name: 'Object'
          }
        },
        parametersLink: {
          required: false,
          serializedName: 'parametersLink',
          type: {
            name: 'Composite',
            className: 'ParametersLink'
          }
        },
        mode: {
          required: false,
          serializedName: 'mode',
          type: {
            name: 'Enum',
            allowedValues: [ 'Incremental', 'Complete' ]
          }
        },
        debugSetting: {
          required: false,
          serializedName: 'debugSetting',
          type: {
            name: 'Composite',
            className: 'DebugSetting'
          }
        }
      }
    }
  };
};

module.exports = DeploymentProperties;

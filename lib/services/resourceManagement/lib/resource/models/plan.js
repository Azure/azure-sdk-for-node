/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.11.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the Plan class.
 * @constructor
 * Plan for the resource.
 * @member {string} [name] Gets or sets the plan ID.
 * 
 * @member {string} [publisher] Gets or sets the publisher ID.
 * 
 * @member {string} [product] Gets or sets the offer ID.
 * 
 * @member {string} [promotionCode] Gets or sets the promotion code.
 * 
 */
function Plan(parameters) {
  if (parameters !== null && parameters !== undefined) {
    if (parameters.name !== null && parameters.name !== undefined) {
      this.name = parameters.name;
    }
    if (parameters.publisher !== null && parameters.publisher !== undefined) {
      this.publisher = parameters.publisher;
    }
    if (parameters.product !== null && parameters.product !== undefined) {
      this.product = parameters.product;
    }
    if (parameters.promotionCode !== null && parameters.promotionCode !== undefined) {
      this.promotionCode = parameters.promotionCode;
    }
  }    
}


/**
 * Validate the payload against the Plan schema
 *
 * @param {JSON} payload
 *
 */
Plan.prototype.serialize = function () {
  var payload = {};
  if (this['name'] !== null && this['name'] !== undefined) {
    if (typeof this['name'].valueOf() !== 'string') {
      throw new Error('this[\'name\'] must be of type string.');
    }
    payload['name'] = this['name'];
  }

  if (this['publisher'] !== null && this['publisher'] !== undefined) {
    if (typeof this['publisher'].valueOf() !== 'string') {
      throw new Error('this[\'publisher\'] must be of type string.');
    }
    payload['publisher'] = this['publisher'];
  }

  if (this['product'] !== null && this['product'] !== undefined) {
    if (typeof this['product'].valueOf() !== 'string') {
      throw new Error('this[\'product\'] must be of type string.');
    }
    payload['product'] = this['product'];
  }

  if (this['promotionCode'] !== null && this['promotionCode'] !== undefined) {
    if (typeof this['promotionCode'].valueOf() !== 'string') {
      throw new Error('this[\'promotionCode\'] must be of type string.');
    }
    payload['promotionCode'] = this['promotionCode'];
  }

  return payload;
};

/**
 * Deserialize the instance to Plan schema
 *
 * @param {JSON} instance
 *
 */
Plan.prototype.deserialize = function (instance) {
  if (instance) {
    if (instance['name'] !== null && instance['name'] !== undefined) {
      this['name'] = instance['name'];
    }

    if (instance['publisher'] !== null && instance['publisher'] !== undefined) {
      this['publisher'] = instance['publisher'];
    }

    if (instance['product'] !== null && instance['product'] !== undefined) {
      this['product'] = instance['product'];
    }

    if (instance['promotionCode'] !== null && instance['promotionCode'] !== undefined) {
      this['promotionCode'] = instance['promotionCode'];
    }
  }

  return this;
};

module.exports = Plan;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The appliance provider authorization.
 *
 */
class ApplianceProviderAuthorization {
  /**
   * Create a ApplianceProviderAuthorization.
   * @property {string} principalId The provider's principal identifier. This
   * is the identity that the provider will use to call ARM to manage the
   * appliance resources.
   * @property {string} roleDefinitionId The provider's role definition
   * identifier. This role will define all the permissions that the provider
   * must have on the appliance's container resource group. This role
   * definition cannot have permission to delete the resource group.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ApplianceProviderAuthorization
   *
   * @returns {object} metadata of ApplianceProviderAuthorization
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ApplianceProviderAuthorization',
      type: {
        name: 'Composite',
        className: 'ApplianceProviderAuthorization',
        modelProperties: {
          principalId: {
            required: true,
            serializedName: 'principalId',
            type: {
              name: 'String'
            }
          },
          roleDefinitionId: {
            required: true,
            serializedName: 'roleDefinitionId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ApplianceProviderAuthorization;

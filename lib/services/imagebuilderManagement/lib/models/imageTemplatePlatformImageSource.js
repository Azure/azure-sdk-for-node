/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Describes an image source from [Azure Gallery
 * Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
 *
 * @extends models['ImageTemplateSource']
 */
class ImageTemplatePlatformImageSource extends models['ImageTemplateSource'] {
  /**
   * Create a ImageTemplatePlatformImageSource.
   * @property {string} [publisher] Image Publisher in [Azure Gallery
   * Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
   * @property {string} [offer] Image offer from the [Azure Gallery
   * Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
   * @property {string} [sku] Image sku from the [Azure Gallery
   * Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
   * @property {string} [version] Image version from the [Azure Gallery
   * Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ImageTemplatePlatformImageSource
   *
   * @returns {object} metadata of ImageTemplatePlatformImageSource
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PlatformImage',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'type',
          clientName: 'type'
        },
        uberParent: 'ImageTemplateSource',
        className: 'ImageTemplatePlatformImageSource',
        modelProperties: {
          type: {
            required: true,
            serializedName: 'type',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          publisher: {
            required: false,
            serializedName: 'publisher',
            type: {
              name: 'String'
            }
          },
          offer: {
            required: false,
            serializedName: 'offer',
            type: {
              name: 'String'
            }
          },
          sku: {
            required: false,
            serializedName: 'sku',
            type: {
              name: 'String'
            }
          },
          version: {
            required: false,
            serializedName: 'version',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ImageTemplatePlatformImageSource;

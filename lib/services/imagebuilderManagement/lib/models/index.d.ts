/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure";
import * as moment from "moment";

export {

  BaseResource,
  CloudError
};

export interface ImageTemplateSource {
  /**
   * Polymorphic Discriminator
  */
  type: string;
}

export interface ImageTemplateCustomizer {
  /**
   * Friendly Name to provide context on what this customization step does
  */
  name?: string;
  /**
   * Polymorphic Discriminator
  */
  type: string;
}

/**
 * Generic distribution object
*/
export interface ImageTemplateDistributor {
  /**
   * The name to be used for the associated RunOutput.
  */
  runOutputName: string;
  /**
   * Tags that will be applied to the artifact once it has been created/updated by the distributor.
  */
  artifactTags?: { [propertyName: string]: string };
  /**
   * Polymorphic Discriminator
  */
  type: string;
}

export interface ProvisioningError {
  /**
   * Error code of the provisioning failure. Possible values include: 'BadSourceType',
   * 'BadPIRSource', 'BadISOSource', 'BadManagedImageSource', 'BadCustomizerType',
   * 'UnsupportedCustomizerType', 'NoCustomizerScript', 'BadDistributeType',
   * 'BadSharedImageDistribute', 'ServerError', 'Other'
  */
  provisioningErrorCode?: string;
  /**
   * Verbose error message about the provisioning failure
  */
  message?: string;
}

export interface ImageTemplateLastRunStatus {
  /**
   * Start time of the last run (UTC)
  */
  startTime?: Date;
  /**
   * End time of the last run (UTC)
  */
  endTime?: Date;
  /**
   * State of the last run. Possible values include: 'Running', 'Succeeded', 'PartiallySucceeded',
   * 'Failed'
  */
  runState?: string;
  /**
   * Sub-state of the last run. Possible values include: 'Queued', 'Building', 'Customizing',
   * 'Distributing'
  */
  runSubState?: string;
  /**
   * Verbose information about the last run state
  */
  message?: string;
}

/**
 * The Resource model definition.
*/
export interface Resource extends BaseResource {
  /**
   * Resource Id
  */
  readonly id?: string;
  /**
   * Resource name
  */
  readonly name?: string;
  /**
   * Resource type
  */
  readonly type?: string;
  /**
   * Resource location
  */
  location: string;
  /**
   * Resource tags
  */
  tags?: { [propertyName: string]: string };
}

export interface ImageTemplate extends Resource {
  /**
   * Specifies the properties used to describe the source image.
  */
  source: ImageTemplateSource;
  /**
   * Specifies the properties used to describe the customization steps of the image, like Image
   * source etc
  */
  customize?: ImageTemplateCustomizer[];
  /**
   * The distribution targets where the image output needs to go to.
  */
  distribute: ImageTemplateDistributor[];
  /**
   * Provisioning state of the resource. Possible values include: 'Creating', 'Succeeded',
   * 'Failed', 'Deleting'
  */
  readonly provisioningState?: string;
  /**
   * Provisioning error, if any
  */
  readonly provisioningError?: ProvisioningError;
  /**
   * State of 'run' that is currently executing or was last executed.
  */
  readonly lastRunStatus?: ImageTemplateLastRunStatus;
}

/**
 * Describes an image source that is an installation ISO. Currently only supports Red Hat
 * Enterprise Linux 7.2-7.5 ISO's.
*/
export interface ImageTemplateIsoSource extends ImageTemplateSource {
  /**
   * URI to get the ISO image. This URI has to be accessible to the resource provider at the time
   * of the image template creation.
  */
  sourceURI: string;
  /**
   * SHA256 Checksum of the ISO image.
  */
  sha256Checksum: string;
}

/**
 * Describes an image source from [Azure Gallery
 * Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
*/
export interface ImageTemplatePlatformImageSource extends ImageTemplateSource {
  /**
   * Image Publisher in [Azure Gallery
   * Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
  */
  publisher?: string;
  /**
   * Image offer from the [Azure Gallery
   * Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
  */
  offer?: string;
  /**
   * Image sku from the [Azure Gallery
   * Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
  */
  sku?: string;
  /**
   * Image version from the [Azure Gallery
   * Images](https://docs.microsoft.com/en-us/rest/api/compute/virtualmachineimages).
  */
  version?: string;
}

/**
 * Describes an image source that is a managed image in customer subscription.
*/
export interface ImageTemplateManagedImageSource extends ImageTemplateSource {
  /**
   * ARM resource id of the managed image in customer subscription
  */
  imageId: string;
}

/**
 * Runs a shell script during the customization phase (Linux)
*/
export interface ImageTemplateShellCustomizer extends ImageTemplateCustomizer {
  /**
   * The shell script to be run for customizing. It can be a github link, SAS URI for Azure
   * Storage, etc
  */
  script?: string;
}

/**
 * Reboots a VM and waits for it to come back online (Windows). Corresponds to Packer
 * windows-restart provisioner
*/
export interface ImageTemplateRestartCustomizer extends ImageTemplateCustomizer {
  /**
   * Command to execute the restart [Default: 'shutdown /r /f /t 0 /c "packer restart"']
  */
  restartCommand?: string;
  /**
   * Command to check if restart succeeded [Default: '']
  */
  restartCheckCommand?: string;
  /**
   * Restart timeout specified as a string of magnitude and unit, e.g. '5m' (5 minutes) or '2h' (2
   * hours) [Default: '5m']
  */
  restartTimeout?: string;
}

/**
 * Runs the specified PowerShell on the VM (Windows). Corresponds to Packer powershell provisioner
*/
export interface ImageTemplatePowerShellCustomizer extends ImageTemplateCustomizer {
  /**
   * The PowerShell script to be run for customizing. It can be a github link, SAS URI for Azure
   * Storage, etc
  */
  script?: string;
  validExitCodes?: number[];
}

/**
 * Distribute as a Managed Disk Image.
*/
export interface ImageTemplateManagedImageDistributor extends ImageTemplateDistributor {
  /**
   * Resource Id of the Managed Disk Image
  */
  imageId: string;
  /**
   * Azure location for the image, should match if image already exists
  */
  location: string;
}

/**
 * Distribute via Shared Image Gallery.
*/
export interface ImageTemplateSharedImageDistributor extends ImageTemplateDistributor {
  /**
   * Resource Id of the Shared Image Gallery image
  */
  galleryImageId: string;
  replicationRegions: string[];
}

/**
 * Distribute via VHD in a storage account.
*/
export interface ImageTemplateVhdDistributor extends ImageTemplateDistributor {
}

/**
 * Parameters for updating an image template.
*/
export interface ImageTemplateUpdateParameters {
  /**
   * The user-specified tags associated with the image template.
  */
  tags?: { [propertyName: string]: string };
}

/**
 * The Sub Resource model definition.
*/
export interface SubResource {
  /**
   * Resource Id
  */
  readonly id?: string;
  /**
   * Resource name
  */
  name: string;
  /**
   * Resource type
  */
  readonly type?: string;
}

/**
 * Represents an output that was created by running an image template.
*/
export interface RunOutput extends SubResource {
  /**
   * The resource id of the artifact.
  */
  artifactId?: string;
  /**
   * The URL location of the artifact.
  */
  artifactLocation?: string;
  /**
   * Provisioning state of the resource. Possible values include: 'Creating', 'Succeeded',
   * 'Failed', 'Deleting'
  */
  readonly provisioningState?: string;
}

/**
 * @summary The object that describes the operation.
*/
export interface OperationDisplay {
  /**
   * @summary Friendly name of the resource provider.
  */
  provider?: string;
  /**
   * @summary The operation type.
   * @description For example: read, write, delete, or listKeys/action
  */
  operation?: string;
  /**
   * @summary The resource type on which the operation is performed.
  */
  resource?: string;
  /**
   * @summary The friendly name of the operation
  */
  description?: string;
}

/**
 * @summary A REST API operation
*/
export interface Operation {
  /**
   * @summary The operation name.
   * @description This is of the format {provider}/{resource}/{operation}
  */
  name?: string;
  /**
   * @summary The object that describes the operation.
  */
  display?: OperationDisplay;
  /**
   * @summary The intended executor of the operation.
  */
  origin?: string;
  /**
   * @summary Properties of the operation.
  */
  properties?: any;
}

/**
 * Api error base.
*/
export interface ApiErrorBase {
  /**
   * The error code.
  */
  code?: string;
  /**
   * The target of the particular error.
  */
  target?: string;
  /**
   * The error message.
  */
  message?: string;
}

/**
 * Inner error details.
*/
export interface InnerError {
  /**
   * The exception type.
  */
  exceptionType?: string;
  /**
   * The internal error message or exception dump.
  */
  errorDetail?: string;
}

/**
 * Api error.
*/
export interface ApiError {
  /**
   * The Api error details
  */
  details?: ApiErrorBase[];
  /**
   * The Api inner error
  */
  innerError?: InnerError;
  /**
   * The error code.
  */
  code?: string;
  /**
   * The target of the particular error.
  */
  target?: string;
  /**
   * The error message.
  */
  message?: string;
}

export interface ImageTemplateListResult extends Array<ImageTemplate> {
  /**
   * The continuation token.
  */
  nextLink?: string;
}

export interface RunOutputCollection extends Array<RunOutput> {
  /**
   * The continuation token.
  */
  nextLink?: string;
}

/**
 * @summary Result of the request to list REST API operations. It contains a list of operations and
 * a URL nextLink to get the next set of results.
*/
export interface OperationListResult extends Array<Operation> {
  /**
   * @summary The URL to get the next set of operation list results if there are any.
  */
  nextLink?: string;
}

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * VirtualMachineImageTemplates
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ImageBuilderClient.
 */
export interface VirtualMachineImageTemplates {


    /**
     * Gets information about the VM image templates associated with the
     * subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ImageTemplateListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ImageTemplateListResult>>;

    /**
     * Gets information about the VM image templates associated with the
     * subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ImageTemplateListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ImageTemplateListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ImageTemplateListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ImageTemplateListResult>;
    list(callback: ServiceCallback<models.ImageTemplateListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ImageTemplateListResult>): void;


    /**
     * Gets information about the VM image templates associated with the specified
     * resource group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ImageTemplateListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ImageTemplateListResult>>;

    /**
     * Gets information about the VM image templates associated with the specified
     * resource group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ImageTemplateListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ImageTemplateListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ImageTemplateListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ImageTemplateListResult>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.ImageTemplateListResult>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ImageTemplateListResult>): void;


    /**
     * Create or update a virtual machine image template
     *
     * @param {object} parameters Parameters supplied to the CreateImageTemplate
     * operation
     *
     * @param {object} parameters.source Specifies the properties used to describe
     * the source image.
     *
     * @param {string} parameters.source.type Polymorphic Discriminator
     *
     * @param {array} [parameters.customize] Specifies the properties used to
     * describe the customization steps of the image, like Image source etc
     *
     * @param {array} parameters.distribute The distribution targets where the
     * image output needs to go to.
     *
     * @param {string} parameters.location Resource location
     *
     * @param {object} [parameters.tags] Resource tags
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ImageTemplate>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(parameters: models.ImageTemplate, resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ImageTemplate>>;

    /**
     * Create or update a virtual machine image template
     *
     * @param {object} parameters Parameters supplied to the CreateImageTemplate
     * operation
     *
     * @param {object} parameters.source Specifies the properties used to describe
     * the source image.
     *
     * @param {string} parameters.source.type Polymorphic Discriminator
     *
     * @param {array} [parameters.customize] Specifies the properties used to
     * describe the customization steps of the image, like Image source etc
     *
     * @param {array} parameters.distribute The distribution targets where the
     * image output needs to go to.
     *
     * @param {string} parameters.location Resource location
     *
     * @param {object} [parameters.tags] Resource tags
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ImageTemplate} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ImageTemplate} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ImageTemplate} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(parameters: models.ImageTemplate, resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ImageTemplate>;
    createOrUpdate(parameters: models.ImageTemplate, resourceGroupName: string, imageTemplateName: string, callback: ServiceCallback<models.ImageTemplate>): void;
    createOrUpdate(parameters: models.ImageTemplate, resourceGroupName: string, imageTemplateName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ImageTemplate>): void;


    /**
     * Update the tags for this Virtual Machine Image Template
     *
     * @param {object} parameters Additional parameters for Image Template update.
     *
     * @param {object} [parameters.tags] The user-specified tags associated with
     * the image template.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ImageTemplate>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(parameters: models.ImageTemplateUpdateParameters, resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ImageTemplate>>;

    /**
     * Update the tags for this Virtual Machine Image Template
     *
     * @param {object} parameters Additional parameters for Image Template update.
     *
     * @param {object} [parameters.tags] The user-specified tags associated with
     * the image template.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ImageTemplate} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ImageTemplate} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ImageTemplate} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(parameters: models.ImageTemplateUpdateParameters, resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ImageTemplate>;
    update(parameters: models.ImageTemplateUpdateParameters, resourceGroupName: string, imageTemplateName: string, callback: ServiceCallback<models.ImageTemplate>): void;
    update(parameters: models.ImageTemplateUpdateParameters, resourceGroupName: string, imageTemplateName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ImageTemplate>): void;


    /**
     * Get information about a virtual machine image template
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ImageTemplate>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ImageTemplate>>;

    /**
     * Get information about a virtual machine image template
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ImageTemplate} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ImageTemplate} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ImageTemplate} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ImageTemplate>;
    get(resourceGroupName: string, imageTemplateName: string, callback: ServiceCallback<models.ImageTemplate>): void;
    get(resourceGroupName: string, imageTemplateName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ImageTemplate>): void;


    /**
     * Delete a virtual machine image template
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete a virtual machine image template
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, imageTemplateName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, imageTemplateName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Create artifacts from a existing image template
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    runWithHttpOperationResponse(resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Create artifacts from a existing image template
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    run(resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    run(resourceGroupName: string, imageTemplateName: string, callback: ServiceCallback<void>): void;
    run(resourceGroupName: string, imageTemplateName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * List all run outputs for the specified Image Template resource
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RunOutputCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listRunOutputsWithHttpOperationResponse(resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RunOutputCollection>>;

    /**
     * List all run outputs for the specified Image Template resource
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RunOutputCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RunOutputCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RunOutputCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listRunOutputs(resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RunOutputCollection>;
    listRunOutputs(resourceGroupName: string, imageTemplateName: string, callback: ServiceCallback<models.RunOutputCollection>): void;
    listRunOutputs(resourceGroupName: string, imageTemplateName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RunOutputCollection>): void;


    /**
     * Get the specified run output for the specified image template resource
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {string} runOutputName The name of the run output
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RunOutput>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getRunOutputWithHttpOperationResponse(resourceGroupName: string, imageTemplateName: string, runOutputName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RunOutput>>;

    /**
     * Get the specified run output for the specified image template resource
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {string} runOutputName The name of the run output
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RunOutput} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RunOutput} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RunOutput} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getRunOutput(resourceGroupName: string, imageTemplateName: string, runOutputName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RunOutput>;
    getRunOutput(resourceGroupName: string, imageTemplateName: string, runOutputName: string, callback: ServiceCallback<models.RunOutput>): void;
    getRunOutput(resourceGroupName: string, imageTemplateName: string, runOutputName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RunOutput>): void;


    /**
     * Create or update a virtual machine image template
     *
     * @param {object} parameters Parameters supplied to the CreateImageTemplate
     * operation
     *
     * @param {object} parameters.source Specifies the properties used to describe
     * the source image.
     *
     * @param {string} parameters.source.type Polymorphic Discriminator
     *
     * @param {array} [parameters.customize] Specifies the properties used to
     * describe the customization steps of the image, like Image source etc
     *
     * @param {array} parameters.distribute The distribution targets where the
     * image output needs to go to.
     *
     * @param {string} parameters.location Resource location
     *
     * @param {object} [parameters.tags] Resource tags
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ImageTemplate>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(parameters: models.ImageTemplate, resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ImageTemplate>>;

    /**
     * Create or update a virtual machine image template
     *
     * @param {object} parameters Parameters supplied to the CreateImageTemplate
     * operation
     *
     * @param {object} parameters.source Specifies the properties used to describe
     * the source image.
     *
     * @param {string} parameters.source.type Polymorphic Discriminator
     *
     * @param {array} [parameters.customize] Specifies the properties used to
     * describe the customization steps of the image, like Image source etc
     *
     * @param {array} parameters.distribute The distribution targets where the
     * image output needs to go to.
     *
     * @param {string} parameters.location Resource location
     *
     * @param {object} [parameters.tags] Resource tags
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ImageTemplate} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ImageTemplate} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ImageTemplate} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(parameters: models.ImageTemplate, resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ImageTemplate>;
    beginCreateOrUpdate(parameters: models.ImageTemplate, resourceGroupName: string, imageTemplateName: string, callback: ServiceCallback<models.ImageTemplate>): void;
    beginCreateOrUpdate(parameters: models.ImageTemplate, resourceGroupName: string, imageTemplateName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ImageTemplate>): void;


    /**
     * Delete a virtual machine image template
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete a virtual machine image template
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, imageTemplateName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, imageTemplateName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Create artifacts from a existing image template
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginRunWithHttpOperationResponse(resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Create artifacts from a existing image template
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} imageTemplateName The name of the image Template
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginRun(resourceGroupName: string, imageTemplateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginRun(resourceGroupName: string, imageTemplateName: string, callback: ServiceCallback<void>): void;
    beginRun(resourceGroupName: string, imageTemplateName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Gets information about the VM image templates associated with the
     * subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ImageTemplateListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ImageTemplateListResult>>;

    /**
     * Gets information about the VM image templates associated with the
     * subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ImageTemplateListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ImageTemplateListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ImageTemplateListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ImageTemplateListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ImageTemplateListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ImageTemplateListResult>): void;


    /**
     * Gets information about the VM image templates associated with the specified
     * resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ImageTemplateListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ImageTemplateListResult>>;

    /**
     * Gets information about the VM image templates associated with the specified
     * resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ImageTemplateListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ImageTemplateListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ImageTemplateListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ImageTemplateListResult>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.ImageTemplateListResult>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ImageTemplateListResult>): void;


    /**
     * List all run outputs for the specified Image Template resource
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RunOutputCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listRunOutputsNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RunOutputCollection>>;

    /**
     * List all run outputs for the specified Image Template resource
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RunOutputCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RunOutputCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RunOutputCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listRunOutputsNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RunOutputCollection>;
    listRunOutputsNext(nextPageLink: string, callback: ServiceCallback<models.RunOutputCollection>): void;
    listRunOutputsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RunOutputCollection>): void;
}

/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the ImageBuilderClient.
 */
export interface Operations {


    /**
     * Lists available operations for the Microsoft.VirtualMachineImages provider
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists available operations for the Microsoft.VirtualMachineImages provider
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    list(callback: ServiceCallback<models.OperationListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;


    /**
     * Lists available operations for the Microsoft.VirtualMachineImages provider
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists available operations for the Microsoft.VirtualMachineImages provider
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.OperationListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;
}

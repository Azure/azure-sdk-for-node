/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Represents a project.
 *
 */
class Project {
  /**
   * Create a Project.
   * @property {uuid} [id] Gets The project id.
   * @property {string} [name] Gets or sets the name of the project.
   * @property {string} [description] Gets or sets the description of the
   * project.
   * @property {object} [settings] Gets or sets the project settings.
   * @property {uuid} [settings.domainId] Gets or sets the id of the Domain to
   * use with this project.
   * @property {string} [settings.classificationType] Gets or sets the
   * classification type of the project. Possible values include: 'Multiclass',
   * 'Multilabel'
   * @property {date} [created] Gets the date this project was created.
   * @property {date} [lastModified] Gets the date this project was last
   * modified.
   * @property {string} [thumbnailUri] Gets the thumbnail url representing the
   * project.
   */
  constructor() {
  }

  /**
   * Defines the metadata of Project
   *
   * @returns {object} metadata of Project
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Project',
      type: {
        name: 'Composite',
        className: 'Project',
        modelProperties: {
          id: {
            required: false,
            nullable: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            nullable: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          description: {
            required: false,
            nullable: true,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          settings: {
            required: false,
            serializedName: 'settings',
            type: {
              name: 'Composite',
              className: 'ProjectSettings'
            }
          },
          created: {
            required: false,
            nullable: false,
            readOnly: true,
            serializedName: 'created',
            type: {
              name: 'DateTime'
            }
          },
          lastModified: {
            required: false,
            nullable: false,
            readOnly: true,
            serializedName: 'lastModified',
            type: {
              name: 'DateTime'
            }
          },
          thumbnailUri: {
            required: false,
            nullable: true,
            readOnly: true,
            serializedName: 'thumbnailUri',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = Project;

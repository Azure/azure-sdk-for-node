/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Image performance model.
 *
 */
class ImagePerformance {
  /**
   * Create a ImagePerformance.
   * @property {array} [predictions]
   * @property {uuid} [id]
   * @property {date} [created]
   * @property {number} [width]
   * @property {number} [height]
   * @property {string} [imageUri]
   * @property {string} [thumbnailUri]
   * @property {array} [tags]
   * @property {array} [regions]
   */
  constructor() {
  }

  /**
   * Defines the metadata of ImagePerformance
   *
   * @returns {object} metadata of ImagePerformance
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ImagePerformance',
      type: {
        name: 'Composite',
        className: 'ImagePerformance',
        modelProperties: {
          predictions: {
            required: false,
            nullable: true,
            readOnly: true,
            serializedName: 'predictions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PredictionElementType',
                  type: {
                    name: 'Composite',
                    className: 'Prediction'
                  }
              }
            }
          },
          id: {
            required: false,
            nullable: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          created: {
            required: false,
            nullable: false,
            readOnly: true,
            serializedName: 'created',
            type: {
              name: 'DateTime'
            }
          },
          width: {
            required: false,
            nullable: false,
            readOnly: true,
            serializedName: 'width',
            type: {
              name: 'Number'
            }
          },
          height: {
            required: false,
            nullable: false,
            readOnly: true,
            serializedName: 'height',
            type: {
              name: 'Number'
            }
          },
          imageUri: {
            required: false,
            nullable: false,
            readOnly: true,
            serializedName: 'imageUri',
            type: {
              name: 'String'
            }
          },
          thumbnailUri: {
            required: false,
            nullable: false,
            readOnly: true,
            serializedName: 'thumbnailUri',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            nullable: true,
            readOnly: true,
            serializedName: 'tags',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ImageTagElementType',
                  type: {
                    name: 'Composite',
                    className: 'ImageTag'
                  }
              }
            }
          },
          regions: {
            required: false,
            nullable: true,
            readOnly: true,
            serializedName: 'regions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ImageRegionElementType',
                  type: {
                    name: 'Composite',
                    className: 'ImageRegion'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = ImagePerformance;

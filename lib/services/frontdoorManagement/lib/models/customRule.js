/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Defines contents of a web application rule
 *
 */
class CustomRule {
  /**
   * Create a CustomRule.
   * @property {string} [name] Describes the name of the rule.
   * @property {number} priority Describes priority of the rule. Rules with a
   * lower value will be evaluated before rules with a higher value.
   * @property {string} [enabledState] Describes if the custom rule is in
   * enabled or disabled state. Defaults to Enabled if not specified. Possible
   * values include: 'Disabled', 'Enabled'
   * @property {string} ruleType Describes type of rule. Possible values
   * include: 'MatchRule', 'RateLimitRule'
   * @property {number} [rateLimitDurationInMinutes] Defines rate limit
   * duration. Default is 1 minute.
   * @property {number} [rateLimitThreshold] Defines rate limit threshold.
   * @property {array} matchConditions List of match conditions.
   * @property {string} action Describes what action to be applied when rule
   * matches. Possible values include: 'Allow', 'Block', 'Log', 'Redirect'
   */
  constructor() {
  }

  /**
   * Defines the metadata of CustomRule
   *
   * @returns {object} metadata of CustomRule
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'CustomRule',
      type: {
        name: 'Composite',
        className: 'CustomRule',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'name',
            constraints: {
              MaxLength: 128
            },
            type: {
              name: 'String'
            }
          },
          priority: {
            required: true,
            serializedName: 'priority',
            type: {
              name: 'Number'
            }
          },
          enabledState: {
            required: false,
            serializedName: 'enabledState',
            type: {
              name: 'String'
            }
          },
          ruleType: {
            required: true,
            serializedName: 'ruleType',
            type: {
              name: 'String'
            }
          },
          rateLimitDurationInMinutes: {
            required: false,
            serializedName: 'rateLimitDurationInMinutes',
            type: {
              name: 'Number'
            }
          },
          rateLimitThreshold: {
            required: false,
            serializedName: 'rateLimitThreshold',
            type: {
              name: 'Number'
            }
          },
          matchConditions: {
            required: true,
            serializedName: 'matchConditions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MatchConditionElementType',
                  type: {
                    name: 'Composite',
                    className: 'MatchCondition'
                  }
              }
            }
          },
          action: {
            required: true,
            serializedName: 'action',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = CustomRule;

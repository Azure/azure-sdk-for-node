/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Load balancing settings for a backend pool
 *
 * @extends models['SubResource']
 */
class HealthProbeSettingsModel extends models['SubResource'] {
  /**
   * Create a HealthProbeSettingsModel.
   * @property {string} [path] The path to use for the health probe. Default is
   * /
   * @property {string} [protocol] Protocol scheme to use for this probe.
   * Possible values include: 'Http', 'Https'
   * @property {number} [intervalInSeconds] The number of seconds between
   * health probes.
   * @property {string} [resourceState] Resource status. Possible values
   * include: 'Creating', 'Enabling', 'Enabled', 'Disabling', 'Disabled',
   * 'Deleting'
   * @property {string} [name] Resource name.
   * @property {string} [type] Resource type.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of HealthProbeSettingsModel
   *
   * @returns {object} metadata of HealthProbeSettingsModel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'HealthProbeSettingsModel',
      type: {
        name: 'Composite',
        className: 'HealthProbeSettingsModel',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          path: {
            required: false,
            serializedName: 'properties.path',
            type: {
              name: 'String'
            }
          },
          protocol: {
            required: false,
            serializedName: 'properties.protocol',
            type: {
              name: 'String'
            }
          },
          intervalInSeconds: {
            required: false,
            serializedName: 'properties.intervalInSeconds',
            type: {
              name: 'Number'
            }
          },
          resourceState: {
            required: false,
            serializedName: 'properties.resourceState',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = HealthProbeSettingsModel;

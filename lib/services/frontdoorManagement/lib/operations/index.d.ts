/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * FrontDoors
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the FrontDoorManagementClient.
 */
export interface FrontDoors {


    /**
     * Lists all of the Front Doors within an Azure subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FrontDoorListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FrontDoorListResult>>;

    /**
     * Lists all of the Front Doors within an Azure subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FrontDoorListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FrontDoorListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FrontDoorListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FrontDoorListResult>;
    list(callback: ServiceCallback<models.FrontDoorListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FrontDoorListResult>): void;


    /**
     * Lists all of the Front Doors within a resource group under a subscription.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FrontDoorListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FrontDoorListResult>>;

    /**
     * Lists all of the Front Doors within a resource group under a subscription.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FrontDoorListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FrontDoorListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FrontDoorListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FrontDoorListResult>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.FrontDoorListResult>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FrontDoorListResult>): void;


    /**
     * Gets a Front Door with the specified Front Door name under the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FrontDoor>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FrontDoor>>;

    /**
     * Gets a Front Door with the specified Front Door name under the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FrontDoor} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FrontDoor} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FrontDoor} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, frontDoorName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FrontDoor>;
    get(resourceGroupName: string, frontDoorName: string, callback: ServiceCallback<models.FrontDoor>): void;
    get(resourceGroupName: string, frontDoorName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FrontDoor>): void;


    /**
     * Creates a new Front Door with a Front Door name under the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} frontDoorParameters Front Door properties needed to create a
     * new Front Door.
     *
     * @param {string} [frontDoorParameters.friendlyName] A friendly name for the
     * frontDoor
     *
     * @param {array} [frontDoorParameters.routingRules] Routing rules associated
     * with this Front Door.
     *
     * @param {array} [frontDoorParameters.loadBalancingSettings] Load balancing
     * settings associated with this Front Door instance.
     *
     * @param {array} [frontDoorParameters.healthProbeSettings] Health probe
     * settings associated with this Front Door instance.
     *
     * @param {array} [frontDoorParameters.backendPools] Backend pools available to
     * routing rules.
     *
     * @param {array} [frontDoorParameters.frontendEndpoints] Frontend endpoints
     * available to routing rules.
     *
     * @param {string} [frontDoorParameters.enabledState] Operational status of the
     * Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'.
     * Possible values include: 'Enabled', 'Disabled'
     *
     * @param {string} [frontDoorParameters.resourceState] Resource status of the
     * Front Door. Possible values include: 'Creating', 'Enabling', 'Enabled',
     * 'Disabling', 'Disabled', 'Deleting'
     *
     * @param {string} [frontDoorParameters.location] Resource location.
     *
     * @param {object} [frontDoorParameters.tags] Resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FrontDoor>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, frontDoorParameters: models.FrontDoor, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FrontDoor>>;

    /**
     * Creates a new Front Door with a Front Door name under the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} frontDoorParameters Front Door properties needed to create a
     * new Front Door.
     *
     * @param {string} [frontDoorParameters.friendlyName] A friendly name for the
     * frontDoor
     *
     * @param {array} [frontDoorParameters.routingRules] Routing rules associated
     * with this Front Door.
     *
     * @param {array} [frontDoorParameters.loadBalancingSettings] Load balancing
     * settings associated with this Front Door instance.
     *
     * @param {array} [frontDoorParameters.healthProbeSettings] Health probe
     * settings associated with this Front Door instance.
     *
     * @param {array} [frontDoorParameters.backendPools] Backend pools available to
     * routing rules.
     *
     * @param {array} [frontDoorParameters.frontendEndpoints] Frontend endpoints
     * available to routing rules.
     *
     * @param {string} [frontDoorParameters.enabledState] Operational status of the
     * Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'.
     * Possible values include: 'Enabled', 'Disabled'
     *
     * @param {string} [frontDoorParameters.resourceState] Resource status of the
     * Front Door. Possible values include: 'Creating', 'Enabling', 'Enabled',
     * 'Disabling', 'Disabled', 'Deleting'
     *
     * @param {string} [frontDoorParameters.location] Resource location.
     *
     * @param {object} [frontDoorParameters.tags] Resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FrontDoor} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FrontDoor} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FrontDoor} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, frontDoorName: string, frontDoorParameters: models.FrontDoor, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FrontDoor>;
    createOrUpdate(resourceGroupName: string, frontDoorName: string, frontDoorParameters: models.FrontDoor, callback: ServiceCallback<models.FrontDoor>): void;
    createOrUpdate(resourceGroupName: string, frontDoorName: string, frontDoorParameters: models.FrontDoor, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FrontDoor>): void;


    /**
     * Deletes an existing Front Door with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes an existing Front Door with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, frontDoorName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, frontDoorName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, frontDoorName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Validates the custom domain mapping to ensure it maps to the correct Front
     * Door endpoint in DNS.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} customDomainProperties Custom domain to be validated.
     *
     * @param {string} customDomainProperties.hostName The host name of the custom
     * domain. Must be a domain name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ValidateCustomDomainOutput>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    validateCustomDomainWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, customDomainProperties: models.ValidateCustomDomainInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ValidateCustomDomainOutput>>;

    /**
     * Validates the custom domain mapping to ensure it maps to the correct Front
     * Door endpoint in DNS.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} customDomainProperties Custom domain to be validated.
     *
     * @param {string} customDomainProperties.hostName The host name of the custom
     * domain. Must be a domain name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ValidateCustomDomainOutput} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ValidateCustomDomainOutput} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ValidateCustomDomainOutput} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    validateCustomDomain(resourceGroupName: string, frontDoorName: string, customDomainProperties: models.ValidateCustomDomainInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ValidateCustomDomainOutput>;
    validateCustomDomain(resourceGroupName: string, frontDoorName: string, customDomainProperties: models.ValidateCustomDomainInput, callback: ServiceCallback<models.ValidateCustomDomainOutput>): void;
    validateCustomDomain(resourceGroupName: string, frontDoorName: string, customDomainProperties: models.ValidateCustomDomainInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ValidateCustomDomainOutput>): void;


    /**
     * Creates a new Front Door with a Front Door name under the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} frontDoorParameters Front Door properties needed to create a
     * new Front Door.
     *
     * @param {string} [frontDoorParameters.friendlyName] A friendly name for the
     * frontDoor
     *
     * @param {array} [frontDoorParameters.routingRules] Routing rules associated
     * with this Front Door.
     *
     * @param {array} [frontDoorParameters.loadBalancingSettings] Load balancing
     * settings associated with this Front Door instance.
     *
     * @param {array} [frontDoorParameters.healthProbeSettings] Health probe
     * settings associated with this Front Door instance.
     *
     * @param {array} [frontDoorParameters.backendPools] Backend pools available to
     * routing rules.
     *
     * @param {array} [frontDoorParameters.frontendEndpoints] Frontend endpoints
     * available to routing rules.
     *
     * @param {string} [frontDoorParameters.enabledState] Operational status of the
     * Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'.
     * Possible values include: 'Enabled', 'Disabled'
     *
     * @param {string} [frontDoorParameters.resourceState] Resource status of the
     * Front Door. Possible values include: 'Creating', 'Enabling', 'Enabled',
     * 'Disabling', 'Disabled', 'Deleting'
     *
     * @param {string} [frontDoorParameters.location] Resource location.
     *
     * @param {object} [frontDoorParameters.tags] Resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FrontDoor>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, frontDoorParameters: models.FrontDoor, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FrontDoor>>;

    /**
     * Creates a new Front Door with a Front Door name under the specified
     * subscription and resource group.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} frontDoorParameters Front Door properties needed to create a
     * new Front Door.
     *
     * @param {string} [frontDoorParameters.friendlyName] A friendly name for the
     * frontDoor
     *
     * @param {array} [frontDoorParameters.routingRules] Routing rules associated
     * with this Front Door.
     *
     * @param {array} [frontDoorParameters.loadBalancingSettings] Load balancing
     * settings associated with this Front Door instance.
     *
     * @param {array} [frontDoorParameters.healthProbeSettings] Health probe
     * settings associated with this Front Door instance.
     *
     * @param {array} [frontDoorParameters.backendPools] Backend pools available to
     * routing rules.
     *
     * @param {array} [frontDoorParameters.frontendEndpoints] Frontend endpoints
     * available to routing rules.
     *
     * @param {string} [frontDoorParameters.enabledState] Operational status of the
     * Front Door load balancer. Permitted values are 'Enabled' or 'Disabled'.
     * Possible values include: 'Enabled', 'Disabled'
     *
     * @param {string} [frontDoorParameters.resourceState] Resource status of the
     * Front Door. Possible values include: 'Creating', 'Enabling', 'Enabled',
     * 'Disabling', 'Disabled', 'Deleting'
     *
     * @param {string} [frontDoorParameters.location] Resource location.
     *
     * @param {object} [frontDoorParameters.tags] Resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FrontDoor} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FrontDoor} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FrontDoor} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, frontDoorParameters: models.FrontDoor, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FrontDoor>;
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, frontDoorParameters: models.FrontDoor, callback: ServiceCallback<models.FrontDoor>): void;
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, frontDoorParameters: models.FrontDoor, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FrontDoor>): void;


    /**
     * Deletes an existing Front Door with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes an existing Front Door with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists all of the Front Doors within an Azure subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FrontDoorListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FrontDoorListResult>>;

    /**
     * Lists all of the Front Doors within an Azure subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FrontDoorListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FrontDoorListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FrontDoorListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FrontDoorListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.FrontDoorListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FrontDoorListResult>): void;


    /**
     * Lists all of the Front Doors within a resource group under a subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FrontDoorListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FrontDoorListResult>>;

    /**
     * Lists all of the Front Doors within a resource group under a subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FrontDoorListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FrontDoorListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FrontDoorListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FrontDoorListResult>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.FrontDoorListResult>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FrontDoorListResult>): void;
}

/**
 * @class
 * RoutingRules
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the FrontDoorManagementClient.
 */
export interface RoutingRules {


    /**
     * Lists all of the Routing Rules within a Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RoutingRuleListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByFrontDoorWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RoutingRuleListResult>>;

    /**
     * Lists all of the Routing Rules within a Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RoutingRuleListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RoutingRuleListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RoutingRuleListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RoutingRuleListResult>;
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, callback: ServiceCallback<models.RoutingRuleListResult>): void;
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RoutingRuleListResult>): void;


    /**
     * Gets a Routing Rule with the specified Rule name within the specified Front
     * Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} routingRuleName Name of the Routing Rule which is unique
     * within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RoutingRule>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, routingRuleName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RoutingRule>>;

    /**
     * Gets a Routing Rule with the specified Rule name within the specified Front
     * Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} routingRuleName Name of the Routing Rule which is unique
     * within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RoutingRule} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RoutingRule} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RoutingRule} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, frontDoorName: string, routingRuleName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RoutingRule>;
    get(resourceGroupName: string, frontDoorName: string, routingRuleName: string, callback: ServiceCallback<models.RoutingRule>): void;
    get(resourceGroupName: string, frontDoorName: string, routingRuleName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RoutingRule>): void;


    /**
     * Creates a new Routing Rule with the specified Rule name within the specified
     * Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} routingRuleName Name of the Routing Rule which is unique
     * within the Front Door.
     *
     * @param {object} routingRuleParameters Routing Rule properties needed to
     * create a new Front Door.
     *
     * @param {array} [routingRuleParameters.frontendEndpoints] Frontend endpoints
     * associated with this rule
     *
     * @param {array} [routingRuleParameters.acceptedProtocols] Protocol schemes to
     * match for this rule
     *
     * @param {array} [routingRuleParameters.patternsToMatch] The route patterns of
     * the rule.
     *
     * @param {string} [routingRuleParameters.customForwardingPath] A custom path
     * used to rewrite resource paths matched by this rule. Leave empty to use
     * incoming path.
     *
     * @param {string} [routingRuleParameters.forwardingProtocol] Protocol this
     * rule will use when forwarding traffic to backends. Possible values include:
     * 'HttpOnly', 'HttpsOnly', 'MatchRequest'
     *
     * @param {object} [routingRuleParameters.cacheConfiguration] The caching
     * configuration associated with this rule.
     *
     * @param {string}
     * [routingRuleParameters.cacheConfiguration.queryParameterStripDirective]
     * Treatment of URL query terms when forming the cache key. Possible values
     * include: 'StripNone', 'StripAll'
     *
     * @param {string}
     * [routingRuleParameters.cacheConfiguration.dynamicCompression] Whether to use
     * dynamic compression for cached content. Possible values include: 'Enabled',
     * 'Disabled'
     *
     * @param {object} [routingRuleParameters.backendPool] A reference to the
     * BackendPool which this rule routes to.
     *
     * @param {string} [routingRuleParameters.backendPool.id] Resource ID.
     *
     * @param {string} [routingRuleParameters.enabledState] Whether to enable use
     * of this rule. Permitted values are 'Enabled' or 'Disabled'. Possible values
     * include: 'Enabled', 'Disabled'
     *
     * @param {string} [routingRuleParameters.resourceState] Resource status.
     * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
     * 'Disabled', 'Deleting'
     *
     * @param {string} [routingRuleParameters.name] Resource name.
     *
     * @param {string} [routingRuleParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RoutingRule>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, routingRuleName: string, routingRuleParameters: models.RoutingRule, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RoutingRule>>;

    /**
     * Creates a new Routing Rule with the specified Rule name within the specified
     * Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} routingRuleName Name of the Routing Rule which is unique
     * within the Front Door.
     *
     * @param {object} routingRuleParameters Routing Rule properties needed to
     * create a new Front Door.
     *
     * @param {array} [routingRuleParameters.frontendEndpoints] Frontend endpoints
     * associated with this rule
     *
     * @param {array} [routingRuleParameters.acceptedProtocols] Protocol schemes to
     * match for this rule
     *
     * @param {array} [routingRuleParameters.patternsToMatch] The route patterns of
     * the rule.
     *
     * @param {string} [routingRuleParameters.customForwardingPath] A custom path
     * used to rewrite resource paths matched by this rule. Leave empty to use
     * incoming path.
     *
     * @param {string} [routingRuleParameters.forwardingProtocol] Protocol this
     * rule will use when forwarding traffic to backends. Possible values include:
     * 'HttpOnly', 'HttpsOnly', 'MatchRequest'
     *
     * @param {object} [routingRuleParameters.cacheConfiguration] The caching
     * configuration associated with this rule.
     *
     * @param {string}
     * [routingRuleParameters.cacheConfiguration.queryParameterStripDirective]
     * Treatment of URL query terms when forming the cache key. Possible values
     * include: 'StripNone', 'StripAll'
     *
     * @param {string}
     * [routingRuleParameters.cacheConfiguration.dynamicCompression] Whether to use
     * dynamic compression for cached content. Possible values include: 'Enabled',
     * 'Disabled'
     *
     * @param {object} [routingRuleParameters.backendPool] A reference to the
     * BackendPool which this rule routes to.
     *
     * @param {string} [routingRuleParameters.backendPool.id] Resource ID.
     *
     * @param {string} [routingRuleParameters.enabledState] Whether to enable use
     * of this rule. Permitted values are 'Enabled' or 'Disabled'. Possible values
     * include: 'Enabled', 'Disabled'
     *
     * @param {string} [routingRuleParameters.resourceState] Resource status.
     * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
     * 'Disabled', 'Deleting'
     *
     * @param {string} [routingRuleParameters.name] Resource name.
     *
     * @param {string} [routingRuleParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RoutingRule} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RoutingRule} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RoutingRule} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, frontDoorName: string, routingRuleName: string, routingRuleParameters: models.RoutingRule, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RoutingRule>;
    createOrUpdate(resourceGroupName: string, frontDoorName: string, routingRuleName: string, routingRuleParameters: models.RoutingRule, callback: ServiceCallback<models.RoutingRule>): void;
    createOrUpdate(resourceGroupName: string, frontDoorName: string, routingRuleName: string, routingRuleParameters: models.RoutingRule, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RoutingRule>): void;


    /**
     * Deletes an existing Routing Rule with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} routingRuleName Name of the Routing Rule which is unique
     * within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, routingRuleName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes an existing Routing Rule with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} routingRuleName Name of the Routing Rule which is unique
     * within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, frontDoorName: string, routingRuleName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, frontDoorName: string, routingRuleName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, frontDoorName: string, routingRuleName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Creates a new Routing Rule with the specified Rule name within the specified
     * Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} routingRuleName Name of the Routing Rule which is unique
     * within the Front Door.
     *
     * @param {object} routingRuleParameters Routing Rule properties needed to
     * create a new Front Door.
     *
     * @param {array} [routingRuleParameters.frontendEndpoints] Frontend endpoints
     * associated with this rule
     *
     * @param {array} [routingRuleParameters.acceptedProtocols] Protocol schemes to
     * match for this rule
     *
     * @param {array} [routingRuleParameters.patternsToMatch] The route patterns of
     * the rule.
     *
     * @param {string} [routingRuleParameters.customForwardingPath] A custom path
     * used to rewrite resource paths matched by this rule. Leave empty to use
     * incoming path.
     *
     * @param {string} [routingRuleParameters.forwardingProtocol] Protocol this
     * rule will use when forwarding traffic to backends. Possible values include:
     * 'HttpOnly', 'HttpsOnly', 'MatchRequest'
     *
     * @param {object} [routingRuleParameters.cacheConfiguration] The caching
     * configuration associated with this rule.
     *
     * @param {string}
     * [routingRuleParameters.cacheConfiguration.queryParameterStripDirective]
     * Treatment of URL query terms when forming the cache key. Possible values
     * include: 'StripNone', 'StripAll'
     *
     * @param {string}
     * [routingRuleParameters.cacheConfiguration.dynamicCompression] Whether to use
     * dynamic compression for cached content. Possible values include: 'Enabled',
     * 'Disabled'
     *
     * @param {object} [routingRuleParameters.backendPool] A reference to the
     * BackendPool which this rule routes to.
     *
     * @param {string} [routingRuleParameters.backendPool.id] Resource ID.
     *
     * @param {string} [routingRuleParameters.enabledState] Whether to enable use
     * of this rule. Permitted values are 'Enabled' or 'Disabled'. Possible values
     * include: 'Enabled', 'Disabled'
     *
     * @param {string} [routingRuleParameters.resourceState] Resource status.
     * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
     * 'Disabled', 'Deleting'
     *
     * @param {string} [routingRuleParameters.name] Resource name.
     *
     * @param {string} [routingRuleParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RoutingRule>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, routingRuleName: string, routingRuleParameters: models.RoutingRule, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RoutingRule>>;

    /**
     * Creates a new Routing Rule with the specified Rule name within the specified
     * Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} routingRuleName Name of the Routing Rule which is unique
     * within the Front Door.
     *
     * @param {object} routingRuleParameters Routing Rule properties needed to
     * create a new Front Door.
     *
     * @param {array} [routingRuleParameters.frontendEndpoints] Frontend endpoints
     * associated with this rule
     *
     * @param {array} [routingRuleParameters.acceptedProtocols] Protocol schemes to
     * match for this rule
     *
     * @param {array} [routingRuleParameters.patternsToMatch] The route patterns of
     * the rule.
     *
     * @param {string} [routingRuleParameters.customForwardingPath] A custom path
     * used to rewrite resource paths matched by this rule. Leave empty to use
     * incoming path.
     *
     * @param {string} [routingRuleParameters.forwardingProtocol] Protocol this
     * rule will use when forwarding traffic to backends. Possible values include:
     * 'HttpOnly', 'HttpsOnly', 'MatchRequest'
     *
     * @param {object} [routingRuleParameters.cacheConfiguration] The caching
     * configuration associated with this rule.
     *
     * @param {string}
     * [routingRuleParameters.cacheConfiguration.queryParameterStripDirective]
     * Treatment of URL query terms when forming the cache key. Possible values
     * include: 'StripNone', 'StripAll'
     *
     * @param {string}
     * [routingRuleParameters.cacheConfiguration.dynamicCompression] Whether to use
     * dynamic compression for cached content. Possible values include: 'Enabled',
     * 'Disabled'
     *
     * @param {object} [routingRuleParameters.backendPool] A reference to the
     * BackendPool which this rule routes to.
     *
     * @param {string} [routingRuleParameters.backendPool.id] Resource ID.
     *
     * @param {string} [routingRuleParameters.enabledState] Whether to enable use
     * of this rule. Permitted values are 'Enabled' or 'Disabled'. Possible values
     * include: 'Enabled', 'Disabled'
     *
     * @param {string} [routingRuleParameters.resourceState] Resource status.
     * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
     * 'Disabled', 'Deleting'
     *
     * @param {string} [routingRuleParameters.name] Resource name.
     *
     * @param {string} [routingRuleParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RoutingRule} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RoutingRule} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RoutingRule} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, routingRuleName: string, routingRuleParameters: models.RoutingRule, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RoutingRule>;
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, routingRuleName: string, routingRuleParameters: models.RoutingRule, callback: ServiceCallback<models.RoutingRule>): void;
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, routingRuleName: string, routingRuleParameters: models.RoutingRule, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RoutingRule>): void;


    /**
     * Deletes an existing Routing Rule with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} routingRuleName Name of the Routing Rule which is unique
     * within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, routingRuleName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes an existing Routing Rule with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} routingRuleName Name of the Routing Rule which is unique
     * within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, routingRuleName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, routingRuleName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, routingRuleName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists all of the Routing Rules within a Front Door.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RoutingRuleListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByFrontDoorNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RoutingRuleListResult>>;

    /**
     * Lists all of the Routing Rules within a Front Door.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RoutingRuleListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RoutingRuleListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RoutingRuleListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByFrontDoorNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RoutingRuleListResult>;
    listByFrontDoorNext(nextPageLink: string, callback: ServiceCallback<models.RoutingRuleListResult>): void;
    listByFrontDoorNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RoutingRuleListResult>): void;
}

/**
 * @class
 * HealthProbeSettings
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the FrontDoorManagementClient.
 */
export interface HealthProbeSettings {


    /**
     * Lists all of the HealthProbeSettings within a Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<HealthProbeSettingsListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByFrontDoorWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.HealthProbeSettingsListResult>>;

    /**
     * Lists all of the HealthProbeSettings within a Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {HealthProbeSettingsListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {HealthProbeSettingsListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link HealthProbeSettingsListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.HealthProbeSettingsListResult>;
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, callback: ServiceCallback<models.HealthProbeSettingsListResult>): void;
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.HealthProbeSettingsListResult>): void;


    /**
     * Gets a HealthProbeSettings with the specified Rule name within the specified
     * Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} healthProbeSettingsName Name of the health probe settings
     * which is unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<HealthProbeSettingsModel>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.HealthProbeSettingsModel>>;

    /**
     * Gets a HealthProbeSettings with the specified Rule name within the specified
     * Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} healthProbeSettingsName Name of the health probe settings
     * which is unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {HealthProbeSettingsModel} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {HealthProbeSettingsModel} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link HealthProbeSettingsModel} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.HealthProbeSettingsModel>;
    get(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, callback: ServiceCallback<models.HealthProbeSettingsModel>): void;
    get(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.HealthProbeSettingsModel>): void;


    /**
     * Creates a new HealthProbeSettings with the specified Rule name within the
     * specified Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} healthProbeSettingsName Name of the health probe settings
     * which is unique within the Front Door.
     *
     * @param {object} healthProbeSettingsParameters HealthProbeSettings properties
     * needed to create a new Front Door.
     *
     * @param {string} [healthProbeSettingsParameters.path] The path to use for the
     * health probe. Default is /
     *
     * @param {string} [healthProbeSettingsParameters.protocol] Protocol scheme to
     * use for this probe. Possible values include: 'Http', 'Https'
     *
     * @param {number} [healthProbeSettingsParameters.intervalInSeconds] The number
     * of seconds between health probes.
     *
     * @param {string} [healthProbeSettingsParameters.resourceState] Resource
     * status. Possible values include: 'Creating', 'Enabling', 'Enabled',
     * 'Disabling', 'Disabled', 'Deleting'
     *
     * @param {string} [healthProbeSettingsParameters.name] Resource name.
     *
     * @param {string} [healthProbeSettingsParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<HealthProbeSettingsModel>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, healthProbeSettingsParameters: models.HealthProbeSettingsModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.HealthProbeSettingsModel>>;

    /**
     * Creates a new HealthProbeSettings with the specified Rule name within the
     * specified Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} healthProbeSettingsName Name of the health probe settings
     * which is unique within the Front Door.
     *
     * @param {object} healthProbeSettingsParameters HealthProbeSettings properties
     * needed to create a new Front Door.
     *
     * @param {string} [healthProbeSettingsParameters.path] The path to use for the
     * health probe. Default is /
     *
     * @param {string} [healthProbeSettingsParameters.protocol] Protocol scheme to
     * use for this probe. Possible values include: 'Http', 'Https'
     *
     * @param {number} [healthProbeSettingsParameters.intervalInSeconds] The number
     * of seconds between health probes.
     *
     * @param {string} [healthProbeSettingsParameters.resourceState] Resource
     * status. Possible values include: 'Creating', 'Enabling', 'Enabled',
     * 'Disabling', 'Disabled', 'Deleting'
     *
     * @param {string} [healthProbeSettingsParameters.name] Resource name.
     *
     * @param {string} [healthProbeSettingsParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {HealthProbeSettingsModel} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {HealthProbeSettingsModel} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link HealthProbeSettingsModel} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, healthProbeSettingsParameters: models.HealthProbeSettingsModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.HealthProbeSettingsModel>;
    createOrUpdate(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, healthProbeSettingsParameters: models.HealthProbeSettingsModel, callback: ServiceCallback<models.HealthProbeSettingsModel>): void;
    createOrUpdate(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, healthProbeSettingsParameters: models.HealthProbeSettingsModel, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.HealthProbeSettingsModel>): void;


    /**
     * Deletes an existing HealthProbeSettings with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} healthProbeSettingsName Name of the health probe settings
     * which is unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes an existing HealthProbeSettings with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} healthProbeSettingsName Name of the health probe settings
     * which is unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Creates a new HealthProbeSettings with the specified Rule name within the
     * specified Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} healthProbeSettingsName Name of the health probe settings
     * which is unique within the Front Door.
     *
     * @param {object} healthProbeSettingsParameters HealthProbeSettings properties
     * needed to create a new Front Door.
     *
     * @param {string} [healthProbeSettingsParameters.path] The path to use for the
     * health probe. Default is /
     *
     * @param {string} [healthProbeSettingsParameters.protocol] Protocol scheme to
     * use for this probe. Possible values include: 'Http', 'Https'
     *
     * @param {number} [healthProbeSettingsParameters.intervalInSeconds] The number
     * of seconds between health probes.
     *
     * @param {string} [healthProbeSettingsParameters.resourceState] Resource
     * status. Possible values include: 'Creating', 'Enabling', 'Enabled',
     * 'Disabling', 'Disabled', 'Deleting'
     *
     * @param {string} [healthProbeSettingsParameters.name] Resource name.
     *
     * @param {string} [healthProbeSettingsParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<HealthProbeSettingsModel>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, healthProbeSettingsParameters: models.HealthProbeSettingsModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.HealthProbeSettingsModel>>;

    /**
     * Creates a new HealthProbeSettings with the specified Rule name within the
     * specified Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} healthProbeSettingsName Name of the health probe settings
     * which is unique within the Front Door.
     *
     * @param {object} healthProbeSettingsParameters HealthProbeSettings properties
     * needed to create a new Front Door.
     *
     * @param {string} [healthProbeSettingsParameters.path] The path to use for the
     * health probe. Default is /
     *
     * @param {string} [healthProbeSettingsParameters.protocol] Protocol scheme to
     * use for this probe. Possible values include: 'Http', 'Https'
     *
     * @param {number} [healthProbeSettingsParameters.intervalInSeconds] The number
     * of seconds between health probes.
     *
     * @param {string} [healthProbeSettingsParameters.resourceState] Resource
     * status. Possible values include: 'Creating', 'Enabling', 'Enabled',
     * 'Disabling', 'Disabled', 'Deleting'
     *
     * @param {string} [healthProbeSettingsParameters.name] Resource name.
     *
     * @param {string} [healthProbeSettingsParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {HealthProbeSettingsModel} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {HealthProbeSettingsModel} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link HealthProbeSettingsModel} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, healthProbeSettingsParameters: models.HealthProbeSettingsModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.HealthProbeSettingsModel>;
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, healthProbeSettingsParameters: models.HealthProbeSettingsModel, callback: ServiceCallback<models.HealthProbeSettingsModel>): void;
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, healthProbeSettingsParameters: models.HealthProbeSettingsModel, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.HealthProbeSettingsModel>): void;


    /**
     * Deletes an existing HealthProbeSettings with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} healthProbeSettingsName Name of the health probe settings
     * which is unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes an existing HealthProbeSettings with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} healthProbeSettingsName Name of the health probe settings
     * which is unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, healthProbeSettingsName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists all of the HealthProbeSettings within a Front Door.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<HealthProbeSettingsListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByFrontDoorNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.HealthProbeSettingsListResult>>;

    /**
     * Lists all of the HealthProbeSettings within a Front Door.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {HealthProbeSettingsListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {HealthProbeSettingsListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link HealthProbeSettingsListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByFrontDoorNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.HealthProbeSettingsListResult>;
    listByFrontDoorNext(nextPageLink: string, callback: ServiceCallback<models.HealthProbeSettingsListResult>): void;
    listByFrontDoorNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.HealthProbeSettingsListResult>): void;
}

/**
 * @class
 * LoadBalancingSettings
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the FrontDoorManagementClient.
 */
export interface LoadBalancingSettings {


    /**
     * Lists all of the LoadBalancingSettings within a Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<LoadBalancingSettingsListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByFrontDoorWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.LoadBalancingSettingsListResult>>;

    /**
     * Lists all of the LoadBalancingSettings within a Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {LoadBalancingSettingsListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {LoadBalancingSettingsListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link LoadBalancingSettingsListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.LoadBalancingSettingsListResult>;
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, callback: ServiceCallback<models.LoadBalancingSettingsListResult>): void;
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LoadBalancingSettingsListResult>): void;


    /**
     * Gets a LoadBalancingSettings with the specified Rule name within the
     * specified Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} loadBalancingSettingsName Name of the load balancing
     * settings which is unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<LoadBalancingSettingsModel>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.LoadBalancingSettingsModel>>;

    /**
     * Gets a LoadBalancingSettings with the specified Rule name within the
     * specified Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} loadBalancingSettingsName Name of the load balancing
     * settings which is unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {LoadBalancingSettingsModel} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {LoadBalancingSettingsModel} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link LoadBalancingSettingsModel} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.LoadBalancingSettingsModel>;
    get(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, callback: ServiceCallback<models.LoadBalancingSettingsModel>): void;
    get(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LoadBalancingSettingsModel>): void;


    /**
     * Creates a new LoadBalancingSettings with the specified Rule name within the
     * specified Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} loadBalancingSettingsName Name of the load balancing
     * settings which is unique within the Front Door.
     *
     * @param {object} loadBalancingSettingsParameters LoadBalancingSettings
     * properties needed to create a new Front Door.
     *
     * @param {number} [loadBalancingSettingsParameters.sampleSize] The number of
     * samples to consider for load balancing decisions
     *
     * @param {number} [loadBalancingSettingsParameters.successfulSamplesRequired]
     * The number of samples within the sample period that must succeed
     *
     * @param {number}
     * [loadBalancingSettingsParameters.additionalLatencyMilliseconds] The
     * additional latency in milliseconds for probes to fall into the lowest
     * latency bucket
     *
     * @param {string} [loadBalancingSettingsParameters.resourceState] Resource
     * status. Possible values include: 'Creating', 'Enabling', 'Enabled',
     * 'Disabling', 'Disabled', 'Deleting'
     *
     * @param {string} [loadBalancingSettingsParameters.name] Resource name.
     *
     * @param {string} [loadBalancingSettingsParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<LoadBalancingSettingsModel>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, loadBalancingSettingsParameters: models.LoadBalancingSettingsModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.LoadBalancingSettingsModel>>;

    /**
     * Creates a new LoadBalancingSettings with the specified Rule name within the
     * specified Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} loadBalancingSettingsName Name of the load balancing
     * settings which is unique within the Front Door.
     *
     * @param {object} loadBalancingSettingsParameters LoadBalancingSettings
     * properties needed to create a new Front Door.
     *
     * @param {number} [loadBalancingSettingsParameters.sampleSize] The number of
     * samples to consider for load balancing decisions
     *
     * @param {number} [loadBalancingSettingsParameters.successfulSamplesRequired]
     * The number of samples within the sample period that must succeed
     *
     * @param {number}
     * [loadBalancingSettingsParameters.additionalLatencyMilliseconds] The
     * additional latency in milliseconds for probes to fall into the lowest
     * latency bucket
     *
     * @param {string} [loadBalancingSettingsParameters.resourceState] Resource
     * status. Possible values include: 'Creating', 'Enabling', 'Enabled',
     * 'Disabling', 'Disabled', 'Deleting'
     *
     * @param {string} [loadBalancingSettingsParameters.name] Resource name.
     *
     * @param {string} [loadBalancingSettingsParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {LoadBalancingSettingsModel} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {LoadBalancingSettingsModel} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link LoadBalancingSettingsModel} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, loadBalancingSettingsParameters: models.LoadBalancingSettingsModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.LoadBalancingSettingsModel>;
    createOrUpdate(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, loadBalancingSettingsParameters: models.LoadBalancingSettingsModel, callback: ServiceCallback<models.LoadBalancingSettingsModel>): void;
    createOrUpdate(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, loadBalancingSettingsParameters: models.LoadBalancingSettingsModel, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LoadBalancingSettingsModel>): void;


    /**
     * Deletes an existing LoadBalancingSettings with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} loadBalancingSettingsName Name of the load balancing
     * settings which is unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes an existing LoadBalancingSettings with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} loadBalancingSettingsName Name of the load balancing
     * settings which is unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Creates a new LoadBalancingSettings with the specified Rule name within the
     * specified Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} loadBalancingSettingsName Name of the load balancing
     * settings which is unique within the Front Door.
     *
     * @param {object} loadBalancingSettingsParameters LoadBalancingSettings
     * properties needed to create a new Front Door.
     *
     * @param {number} [loadBalancingSettingsParameters.sampleSize] The number of
     * samples to consider for load balancing decisions
     *
     * @param {number} [loadBalancingSettingsParameters.successfulSamplesRequired]
     * The number of samples within the sample period that must succeed
     *
     * @param {number}
     * [loadBalancingSettingsParameters.additionalLatencyMilliseconds] The
     * additional latency in milliseconds for probes to fall into the lowest
     * latency bucket
     *
     * @param {string} [loadBalancingSettingsParameters.resourceState] Resource
     * status. Possible values include: 'Creating', 'Enabling', 'Enabled',
     * 'Disabling', 'Disabled', 'Deleting'
     *
     * @param {string} [loadBalancingSettingsParameters.name] Resource name.
     *
     * @param {string} [loadBalancingSettingsParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<LoadBalancingSettingsModel>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, loadBalancingSettingsParameters: models.LoadBalancingSettingsModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.LoadBalancingSettingsModel>>;

    /**
     * Creates a new LoadBalancingSettings with the specified Rule name within the
     * specified Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} loadBalancingSettingsName Name of the load balancing
     * settings which is unique within the Front Door.
     *
     * @param {object} loadBalancingSettingsParameters LoadBalancingSettings
     * properties needed to create a new Front Door.
     *
     * @param {number} [loadBalancingSettingsParameters.sampleSize] The number of
     * samples to consider for load balancing decisions
     *
     * @param {number} [loadBalancingSettingsParameters.successfulSamplesRequired]
     * The number of samples within the sample period that must succeed
     *
     * @param {number}
     * [loadBalancingSettingsParameters.additionalLatencyMilliseconds] The
     * additional latency in milliseconds for probes to fall into the lowest
     * latency bucket
     *
     * @param {string} [loadBalancingSettingsParameters.resourceState] Resource
     * status. Possible values include: 'Creating', 'Enabling', 'Enabled',
     * 'Disabling', 'Disabled', 'Deleting'
     *
     * @param {string} [loadBalancingSettingsParameters.name] Resource name.
     *
     * @param {string} [loadBalancingSettingsParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {LoadBalancingSettingsModel} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {LoadBalancingSettingsModel} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link LoadBalancingSettingsModel} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, loadBalancingSettingsParameters: models.LoadBalancingSettingsModel, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.LoadBalancingSettingsModel>;
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, loadBalancingSettingsParameters: models.LoadBalancingSettingsModel, callback: ServiceCallback<models.LoadBalancingSettingsModel>): void;
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, loadBalancingSettingsParameters: models.LoadBalancingSettingsModel, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LoadBalancingSettingsModel>): void;


    /**
     * Deletes an existing LoadBalancingSettings with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} loadBalancingSettingsName Name of the load balancing
     * settings which is unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes an existing LoadBalancingSettings with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} loadBalancingSettingsName Name of the load balancing
     * settings which is unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, loadBalancingSettingsName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists all of the LoadBalancingSettings within a Front Door.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<LoadBalancingSettingsListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByFrontDoorNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.LoadBalancingSettingsListResult>>;

    /**
     * Lists all of the LoadBalancingSettings within a Front Door.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {LoadBalancingSettingsListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {LoadBalancingSettingsListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link LoadBalancingSettingsListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByFrontDoorNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.LoadBalancingSettingsListResult>;
    listByFrontDoorNext(nextPageLink: string, callback: ServiceCallback<models.LoadBalancingSettingsListResult>): void;
    listByFrontDoorNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LoadBalancingSettingsListResult>): void;
}

/**
 * @class
 * BackendPools
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the FrontDoorManagementClient.
 */
export interface BackendPools {


    /**
     * Lists all of the Backend Pools within a Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BackendPoolListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByFrontDoorWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BackendPoolListResult>>;

    /**
     * Lists all of the Backend Pools within a Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BackendPoolListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BackendPoolListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BackendPoolListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BackendPoolListResult>;
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, callback: ServiceCallback<models.BackendPoolListResult>): void;
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BackendPoolListResult>): void;


    /**
     * Gets a Backend Pool with the specified Pool name within the specified Front
     * Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} backendPoolName Name of the Backend Pool which is unique
     * within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BackendPool>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, backendPoolName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BackendPool>>;

    /**
     * Gets a Backend Pool with the specified Pool name within the specified Front
     * Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} backendPoolName Name of the Backend Pool which is unique
     * within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BackendPool} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BackendPool} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BackendPool} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, frontDoorName: string, backendPoolName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BackendPool>;
    get(resourceGroupName: string, frontDoorName: string, backendPoolName: string, callback: ServiceCallback<models.BackendPool>): void;
    get(resourceGroupName: string, frontDoorName: string, backendPoolName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BackendPool>): void;


    /**
     * Creates a new Backend Pool with the specified Pool name within the specified
     * Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} backendPoolName Name of the Backend Pool which is unique
     * within the Front Door.
     *
     * @param {object} backendPoolParameters Backend Pool properties needed to
     * create a new Pool.
     *
     * @param {array} [backendPoolParameters.backends] The set of backends for this
     * pool
     *
     * @param {object} [backendPoolParameters.loadBalancingSettings] Load balancing
     * settings for a backend pool
     *
     * @param {object} [backendPoolParameters.healthProbeSettings] L7 health probe
     * settings for a backend pool
     *
     * @param {string} [backendPoolParameters.healthProbeSettings.id] Resource ID.
     *
     * @param {string} [backendPoolParameters.resourceState] Resource status.
     * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
     * 'Disabled', 'Deleting'
     *
     * @param {string} [backendPoolParameters.name] Resource name.
     *
     * @param {string} [backendPoolParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BackendPool>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, backendPoolName: string, backendPoolParameters: models.BackendPool, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BackendPool>>;

    /**
     * Creates a new Backend Pool with the specified Pool name within the specified
     * Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} backendPoolName Name of the Backend Pool which is unique
     * within the Front Door.
     *
     * @param {object} backendPoolParameters Backend Pool properties needed to
     * create a new Pool.
     *
     * @param {array} [backendPoolParameters.backends] The set of backends for this
     * pool
     *
     * @param {object} [backendPoolParameters.loadBalancingSettings] Load balancing
     * settings for a backend pool
     *
     * @param {object} [backendPoolParameters.healthProbeSettings] L7 health probe
     * settings for a backend pool
     *
     * @param {string} [backendPoolParameters.healthProbeSettings.id] Resource ID.
     *
     * @param {string} [backendPoolParameters.resourceState] Resource status.
     * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
     * 'Disabled', 'Deleting'
     *
     * @param {string} [backendPoolParameters.name] Resource name.
     *
     * @param {string} [backendPoolParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BackendPool} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BackendPool} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BackendPool} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, frontDoorName: string, backendPoolName: string, backendPoolParameters: models.BackendPool, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BackendPool>;
    createOrUpdate(resourceGroupName: string, frontDoorName: string, backendPoolName: string, backendPoolParameters: models.BackendPool, callback: ServiceCallback<models.BackendPool>): void;
    createOrUpdate(resourceGroupName: string, frontDoorName: string, backendPoolName: string, backendPoolParameters: models.BackendPool, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BackendPool>): void;


    /**
     * Deletes an existing Backend Pool with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} backendPoolName Name of the Backend Pool which is unique
     * within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, backendPoolName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes an existing Backend Pool with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} backendPoolName Name of the Backend Pool which is unique
     * within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, frontDoorName: string, backendPoolName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, frontDoorName: string, backendPoolName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, frontDoorName: string, backendPoolName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Creates a new Backend Pool with the specified Pool name within the specified
     * Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} backendPoolName Name of the Backend Pool which is unique
     * within the Front Door.
     *
     * @param {object} backendPoolParameters Backend Pool properties needed to
     * create a new Pool.
     *
     * @param {array} [backendPoolParameters.backends] The set of backends for this
     * pool
     *
     * @param {object} [backendPoolParameters.loadBalancingSettings] Load balancing
     * settings for a backend pool
     *
     * @param {object} [backendPoolParameters.healthProbeSettings] L7 health probe
     * settings for a backend pool
     *
     * @param {string} [backendPoolParameters.healthProbeSettings.id] Resource ID.
     *
     * @param {string} [backendPoolParameters.resourceState] Resource status.
     * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
     * 'Disabled', 'Deleting'
     *
     * @param {string} [backendPoolParameters.name] Resource name.
     *
     * @param {string} [backendPoolParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BackendPool>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, backendPoolName: string, backendPoolParameters: models.BackendPool, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BackendPool>>;

    /**
     * Creates a new Backend Pool with the specified Pool name within the specified
     * Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} backendPoolName Name of the Backend Pool which is unique
     * within the Front Door.
     *
     * @param {object} backendPoolParameters Backend Pool properties needed to
     * create a new Pool.
     *
     * @param {array} [backendPoolParameters.backends] The set of backends for this
     * pool
     *
     * @param {object} [backendPoolParameters.loadBalancingSettings] Load balancing
     * settings for a backend pool
     *
     * @param {object} [backendPoolParameters.healthProbeSettings] L7 health probe
     * settings for a backend pool
     *
     * @param {string} [backendPoolParameters.healthProbeSettings.id] Resource ID.
     *
     * @param {string} [backendPoolParameters.resourceState] Resource status.
     * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
     * 'Disabled', 'Deleting'
     *
     * @param {string} [backendPoolParameters.name] Resource name.
     *
     * @param {string} [backendPoolParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BackendPool} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BackendPool} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BackendPool} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, backendPoolName: string, backendPoolParameters: models.BackendPool, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BackendPool>;
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, backendPoolName: string, backendPoolParameters: models.BackendPool, callback: ServiceCallback<models.BackendPool>): void;
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, backendPoolName: string, backendPoolParameters: models.BackendPool, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BackendPool>): void;


    /**
     * Deletes an existing Backend Pool with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} backendPoolName Name of the Backend Pool which is unique
     * within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, backendPoolName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes an existing Backend Pool with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} backendPoolName Name of the Backend Pool which is unique
     * within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, backendPoolName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, backendPoolName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, backendPoolName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists all of the Backend Pools within a Front Door.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<BackendPoolListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByFrontDoorNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.BackendPoolListResult>>;

    /**
     * Lists all of the Backend Pools within a Front Door.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {BackendPoolListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {BackendPoolListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link BackendPoolListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByFrontDoorNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.BackendPoolListResult>;
    listByFrontDoorNext(nextPageLink: string, callback: ServiceCallback<models.BackendPoolListResult>): void;
    listByFrontDoorNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.BackendPoolListResult>): void;
}

/**
 * @class
 * FrontendEndpoints
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the FrontDoorManagementClient.
 */
export interface FrontendEndpoints {


    /**
     * Lists all of the frontend endpoints within a Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FrontendEndpointsListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByFrontDoorWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FrontendEndpointsListResult>>;

    /**
     * Lists all of the frontend endpoints within a Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FrontendEndpointsListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FrontendEndpointsListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FrontendEndpointsListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FrontendEndpointsListResult>;
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, callback: ServiceCallback<models.FrontendEndpointsListResult>): void;
    listByFrontDoor(resourceGroupName: string, frontDoorName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FrontendEndpointsListResult>): void;


    /**
     * Gets a Frontend endpoint with the specified name within the specified Front
     * Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FrontendEndpoint>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FrontendEndpoint>>;

    /**
     * Gets a Frontend endpoint with the specified name within the specified Front
     * Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FrontendEndpoint} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FrontendEndpoint} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FrontendEndpoint} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FrontendEndpoint>;
    get(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, callback: ServiceCallback<models.FrontendEndpoint>): void;
    get(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FrontendEndpoint>): void;


    /**
     * Creates a new frontend endpoint with the specified host name within the
     * specified Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} frontendEndpointParameters Frontend endpoint properties
     * needed to create a new endpoint.
     *
     * @param {string} [frontendEndpointParameters.hostName] The host name of the
     * frontendEndpoint. Must be a domain name.
     *
     * @param {string} [frontendEndpointParameters.sessionAffinityEnabledState]
     * Whether to allow session affinity on this host. Valid options are 'Enabled'
     * or 'Disabled'. Possible values include: 'Enabled', 'Disabled'
     *
     * @param {number} [frontendEndpointParameters.sessionAffinityTtlSeconds]
     * UNUSED. This field will be ignored. The TTL to use in seconds for session
     * affinity, if applicable.
     *
     * @param {object}
     * [frontendEndpointParameters.webApplicationFirewallPolicyLink] Defines the
     * Web Application Firewall policy for each host (if applicable)
     *
     * @param {string}
     * [frontendEndpointParameters.webApplicationFirewallPolicyLink.id] Resource
     * ID.
     *
     * @param {string} [frontendEndpointParameters.resourceState] Resource status.
     * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
     * 'Disabled', 'Deleting'
     *
     * @param {string} [frontendEndpointParameters.name] Resource name.
     *
     * @param {string} [frontendEndpointParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FrontendEndpoint>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, frontendEndpointParameters: models.FrontendEndpoint, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FrontendEndpoint>>;

    /**
     * Creates a new frontend endpoint with the specified host name within the
     * specified Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} frontendEndpointParameters Frontend endpoint properties
     * needed to create a new endpoint.
     *
     * @param {string} [frontendEndpointParameters.hostName] The host name of the
     * frontendEndpoint. Must be a domain name.
     *
     * @param {string} [frontendEndpointParameters.sessionAffinityEnabledState]
     * Whether to allow session affinity on this host. Valid options are 'Enabled'
     * or 'Disabled'. Possible values include: 'Enabled', 'Disabled'
     *
     * @param {number} [frontendEndpointParameters.sessionAffinityTtlSeconds]
     * UNUSED. This field will be ignored. The TTL to use in seconds for session
     * affinity, if applicable.
     *
     * @param {object}
     * [frontendEndpointParameters.webApplicationFirewallPolicyLink] Defines the
     * Web Application Firewall policy for each host (if applicable)
     *
     * @param {string}
     * [frontendEndpointParameters.webApplicationFirewallPolicyLink.id] Resource
     * ID.
     *
     * @param {string} [frontendEndpointParameters.resourceState] Resource status.
     * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
     * 'Disabled', 'Deleting'
     *
     * @param {string} [frontendEndpointParameters.name] Resource name.
     *
     * @param {string} [frontendEndpointParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FrontendEndpoint} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FrontendEndpoint} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FrontendEndpoint} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, frontendEndpointParameters: models.FrontendEndpoint, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FrontendEndpoint>;
    createOrUpdate(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, frontendEndpointParameters: models.FrontendEndpoint, callback: ServiceCallback<models.FrontendEndpoint>): void;
    createOrUpdate(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, frontendEndpointParameters: models.FrontendEndpoint, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FrontendEndpoint>): void;


    /**
     * Deletes an existing frontend endpoint with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes an existing frontend endpoint with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Enables a frontendEndpoint for HTTPS traffic
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} customHttpsConfiguration The configuration specifying how to
     * enable HTTPS
     *
     * @param {string} [customHttpsConfiguration.certificateSource] Defines the
     * source of the SSL certificate. Possible values include: 'AzureKeyVault',
     * 'FrontDoor'
     *
     * @param {string} [customHttpsConfiguration.protocolType] Defines the TLS
     * extension protocol that is used for secure delivery. Possible values
     * include: 'ServerNameIndication'
     *
     * @param {object} [customHttpsConfiguration.vault] The Key Vault containing
     * the SSL certificate
     *
     * @param {string} [customHttpsConfiguration.vault.id] Resource ID.
     *
     * @param {string} [customHttpsConfiguration.secretName] The name of the Key
     * Vault secret representing the full certificate PFX
     *
     * @param {string} [customHttpsConfiguration.secretVersion] The version of the
     * Key Vault secret representing the full certificate PFX
     *
     * @param {string} [customHttpsConfiguration.certificateType] Defines the type
     * of the certificate used for secure connections to a frontendEndpoint.
     * Possible values include: 'Dedicated'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    enableHttpsWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, customHttpsConfiguration: models.CustomHttpsConfiguration, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Enables a frontendEndpoint for HTTPS traffic
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} customHttpsConfiguration The configuration specifying how to
     * enable HTTPS
     *
     * @param {string} [customHttpsConfiguration.certificateSource] Defines the
     * source of the SSL certificate. Possible values include: 'AzureKeyVault',
     * 'FrontDoor'
     *
     * @param {string} [customHttpsConfiguration.protocolType] Defines the TLS
     * extension protocol that is used for secure delivery. Possible values
     * include: 'ServerNameIndication'
     *
     * @param {object} [customHttpsConfiguration.vault] The Key Vault containing
     * the SSL certificate
     *
     * @param {string} [customHttpsConfiguration.vault.id] Resource ID.
     *
     * @param {string} [customHttpsConfiguration.secretName] The name of the Key
     * Vault secret representing the full certificate PFX
     *
     * @param {string} [customHttpsConfiguration.secretVersion] The version of the
     * Key Vault secret representing the full certificate PFX
     *
     * @param {string} [customHttpsConfiguration.certificateType] Defines the type
     * of the certificate used for secure connections to a frontendEndpoint.
     * Possible values include: 'Dedicated'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    enableHttps(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, customHttpsConfiguration: models.CustomHttpsConfiguration, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    enableHttps(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, customHttpsConfiguration: models.CustomHttpsConfiguration, callback: ServiceCallback<void>): void;
    enableHttps(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, customHttpsConfiguration: models.CustomHttpsConfiguration, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Disables a frontendEndpoint for HTTPS traffic
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    disableHttpsWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Disables a frontendEndpoint for HTTPS traffic
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    disableHttps(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    disableHttps(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, callback: ServiceCallback<void>): void;
    disableHttps(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Creates a new frontend endpoint with the specified host name within the
     * specified Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} frontendEndpointParameters Frontend endpoint properties
     * needed to create a new endpoint.
     *
     * @param {string} [frontendEndpointParameters.hostName] The host name of the
     * frontendEndpoint. Must be a domain name.
     *
     * @param {string} [frontendEndpointParameters.sessionAffinityEnabledState]
     * Whether to allow session affinity on this host. Valid options are 'Enabled'
     * or 'Disabled'. Possible values include: 'Enabled', 'Disabled'
     *
     * @param {number} [frontendEndpointParameters.sessionAffinityTtlSeconds]
     * UNUSED. This field will be ignored. The TTL to use in seconds for session
     * affinity, if applicable.
     *
     * @param {object}
     * [frontendEndpointParameters.webApplicationFirewallPolicyLink] Defines the
     * Web Application Firewall policy for each host (if applicable)
     *
     * @param {string}
     * [frontendEndpointParameters.webApplicationFirewallPolicyLink.id] Resource
     * ID.
     *
     * @param {string} [frontendEndpointParameters.resourceState] Resource status.
     * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
     * 'Disabled', 'Deleting'
     *
     * @param {string} [frontendEndpointParameters.name] Resource name.
     *
     * @param {string} [frontendEndpointParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FrontendEndpoint>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, frontendEndpointParameters: models.FrontendEndpoint, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FrontendEndpoint>>;

    /**
     * Creates a new frontend endpoint with the specified host name within the
     * specified Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} frontendEndpointParameters Frontend endpoint properties
     * needed to create a new endpoint.
     *
     * @param {string} [frontendEndpointParameters.hostName] The host name of the
     * frontendEndpoint. Must be a domain name.
     *
     * @param {string} [frontendEndpointParameters.sessionAffinityEnabledState]
     * Whether to allow session affinity on this host. Valid options are 'Enabled'
     * or 'Disabled'. Possible values include: 'Enabled', 'Disabled'
     *
     * @param {number} [frontendEndpointParameters.sessionAffinityTtlSeconds]
     * UNUSED. This field will be ignored. The TTL to use in seconds for session
     * affinity, if applicable.
     *
     * @param {object}
     * [frontendEndpointParameters.webApplicationFirewallPolicyLink] Defines the
     * Web Application Firewall policy for each host (if applicable)
     *
     * @param {string}
     * [frontendEndpointParameters.webApplicationFirewallPolicyLink.id] Resource
     * ID.
     *
     * @param {string} [frontendEndpointParameters.resourceState] Resource status.
     * Possible values include: 'Creating', 'Enabling', 'Enabled', 'Disabling',
     * 'Disabled', 'Deleting'
     *
     * @param {string} [frontendEndpointParameters.name] Resource name.
     *
     * @param {string} [frontendEndpointParameters.id] Resource ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FrontendEndpoint} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FrontendEndpoint} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FrontendEndpoint} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, frontendEndpointParameters: models.FrontendEndpoint, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FrontendEndpoint>;
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, frontendEndpointParameters: models.FrontendEndpoint, callback: ServiceCallback<models.FrontendEndpoint>): void;
    beginCreateOrUpdate(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, frontendEndpointParameters: models.FrontendEndpoint, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FrontendEndpoint>): void;


    /**
     * Deletes an existing frontend endpoint with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes an existing frontend endpoint with the specified parameters.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Enables a frontendEndpoint for HTTPS traffic
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} customHttpsConfiguration The configuration specifying how to
     * enable HTTPS
     *
     * @param {string} [customHttpsConfiguration.certificateSource] Defines the
     * source of the SSL certificate. Possible values include: 'AzureKeyVault',
     * 'FrontDoor'
     *
     * @param {string} [customHttpsConfiguration.protocolType] Defines the TLS
     * extension protocol that is used for secure delivery. Possible values
     * include: 'ServerNameIndication'
     *
     * @param {object} [customHttpsConfiguration.vault] The Key Vault containing
     * the SSL certificate
     *
     * @param {string} [customHttpsConfiguration.vault.id] Resource ID.
     *
     * @param {string} [customHttpsConfiguration.secretName] The name of the Key
     * Vault secret representing the full certificate PFX
     *
     * @param {string} [customHttpsConfiguration.secretVersion] The version of the
     * Key Vault secret representing the full certificate PFX
     *
     * @param {string} [customHttpsConfiguration.certificateType] Defines the type
     * of the certificate used for secure connections to a frontendEndpoint.
     * Possible values include: 'Dedicated'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginEnableHttpsWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, customHttpsConfiguration: models.CustomHttpsConfiguration, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Enables a frontendEndpoint for HTTPS traffic
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} customHttpsConfiguration The configuration specifying how to
     * enable HTTPS
     *
     * @param {string} [customHttpsConfiguration.certificateSource] Defines the
     * source of the SSL certificate. Possible values include: 'AzureKeyVault',
     * 'FrontDoor'
     *
     * @param {string} [customHttpsConfiguration.protocolType] Defines the TLS
     * extension protocol that is used for secure delivery. Possible values
     * include: 'ServerNameIndication'
     *
     * @param {object} [customHttpsConfiguration.vault] The Key Vault containing
     * the SSL certificate
     *
     * @param {string} [customHttpsConfiguration.vault.id] Resource ID.
     *
     * @param {string} [customHttpsConfiguration.secretName] The name of the Key
     * Vault secret representing the full certificate PFX
     *
     * @param {string} [customHttpsConfiguration.secretVersion] The version of the
     * Key Vault secret representing the full certificate PFX
     *
     * @param {string} [customHttpsConfiguration.certificateType] Defines the type
     * of the certificate used for secure connections to a frontendEndpoint.
     * Possible values include: 'Dedicated'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginEnableHttps(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, customHttpsConfiguration: models.CustomHttpsConfiguration, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginEnableHttps(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, customHttpsConfiguration: models.CustomHttpsConfiguration, callback: ServiceCallback<void>): void;
    beginEnableHttps(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, customHttpsConfiguration: models.CustomHttpsConfiguration, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Disables a frontendEndpoint for HTTPS traffic
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDisableHttpsWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Disables a frontendEndpoint for HTTPS traffic
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {string} frontendEndpointName Name of the Frontend endpoint which is
     * unique within the Front Door.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDisableHttps(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDisableHttps(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, callback: ServiceCallback<void>): void;
    beginDisableHttps(resourceGroupName: string, frontDoorName: string, frontendEndpointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists all of the frontend endpoints within a Front Door.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FrontendEndpointsListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByFrontDoorNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FrontendEndpointsListResult>>;

    /**
     * Lists all of the frontend endpoints within a Front Door.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FrontendEndpointsListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FrontendEndpointsListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FrontendEndpointsListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByFrontDoorNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FrontendEndpointsListResult>;
    listByFrontDoorNext(nextPageLink: string, callback: ServiceCallback<models.FrontendEndpointsListResult>): void;
    listByFrontDoorNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FrontendEndpointsListResult>): void;
}

/**
 * @class
 * Endpoints
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the FrontDoorManagementClient.
 */
export interface Endpoints {


    /**
     * Removes a content from Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} contentFilePaths The path to the content to be purged. Path
     * can be a full URL, e.g. '/pictures/city.png' which removes a single file, or
     * a directory with a wildcard, e.g. '/pictures/*' which removes all folders
     * and files in the directory.
     *
     * @param {array} contentFilePaths.contentPaths The path to the content to be
     * purged. Can describe a file path or a wild card directory.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    purgeContentWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, contentFilePaths: models.PurgeParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Removes a content from Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} contentFilePaths The path to the content to be purged. Path
     * can be a full URL, e.g. '/pictures/city.png' which removes a single file, or
     * a directory with a wildcard, e.g. '/pictures/*' which removes all folders
     * and files in the directory.
     *
     * @param {array} contentFilePaths.contentPaths The path to the content to be
     * purged. Can describe a file path or a wild card directory.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    purgeContent(resourceGroupName: string, frontDoorName: string, contentFilePaths: models.PurgeParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    purgeContent(resourceGroupName: string, frontDoorName: string, contentFilePaths: models.PurgeParameters, callback: ServiceCallback<void>): void;
    purgeContent(resourceGroupName: string, frontDoorName: string, contentFilePaths: models.PurgeParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Removes a content from Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} contentFilePaths The path to the content to be purged. Path
     * can be a full URL, e.g. '/pictures/city.png' which removes a single file, or
     * a directory with a wildcard, e.g. '/pictures/*' which removes all folders
     * and files in the directory.
     *
     * @param {array} contentFilePaths.contentPaths The path to the content to be
     * purged. Can describe a file path or a wild card directory.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginPurgeContentWithHttpOperationResponse(resourceGroupName: string, frontDoorName: string, contentFilePaths: models.PurgeParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Removes a content from Front Door.
     *
     * @param {string} resourceGroupName Name of the Resource group within the
     * Azure subscription.
     *
     * @param {string} frontDoorName Name of the Front Door which is globally
     * unique.
     *
     * @param {object} contentFilePaths The path to the content to be purged. Path
     * can be a full URL, e.g. '/pictures/city.png' which removes a single file, or
     * a directory with a wildcard, e.g. '/pictures/*' which removes all folders
     * and files in the directory.
     *
     * @param {array} contentFilePaths.contentPaths The path to the content to be
     * purged. Can describe a file path or a wild card directory.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginPurgeContent(resourceGroupName: string, frontDoorName: string, contentFilePaths: models.PurgeParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginPurgeContent(resourceGroupName: string, frontDoorName: string, contentFilePaths: models.PurgeParameters, callback: ServiceCallback<void>): void;
    beginPurgeContent(resourceGroupName: string, frontDoorName: string, contentFilePaths: models.PurgeParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * Policies
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the FrontDoorManagementClient.
 */
export interface Policies {


    /**
     * Lists all of the protection policies within a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebApplicationFirewallPolicyListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebApplicationFirewallPolicyListResult>>;

    /**
     * Lists all of the protection policies within a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebApplicationFirewallPolicyListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebApplicationFirewallPolicyListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebApplicationFirewallPolicyListResult} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebApplicationFirewallPolicyListResult>;
    list(resourceGroupName: string, callback: ServiceCallback<models.WebApplicationFirewallPolicyListResult>): void;
    list(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebApplicationFirewallPolicyListResult>): void;


    /**
     * Retrieve protection policy with specified name within a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} policyName The name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebApplicationFirewallPolicy1>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebApplicationFirewallPolicy1>>;

    /**
     * Retrieve protection policy with specified name within a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} policyName The name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebApplicationFirewallPolicy1} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebApplicationFirewallPolicy1} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebApplicationFirewallPolicy1} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebApplicationFirewallPolicy1>;
    get(resourceGroupName: string, policyName: string, callback: ServiceCallback<models.WebApplicationFirewallPolicy1>): void;
    get(resourceGroupName: string, policyName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebApplicationFirewallPolicy1>): void;


    /**
     * Creates or update policy with specified rule set name within a resource
     * group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} policyName The name of the resource group.
     *
     * @param {object} parameters Policy to be created.
     *
     * @param {object} [parameters.policySettings] Describes  policySettings for
     * policy
     *
     * @param {string} [parameters.policySettings.enabledState] describes if the
     * policy is in enabled state or disabled state. Possible values include:
     * 'Disabled', 'Enabled'
     *
     * @param {string} [parameters.policySettings.mode] Describes if it is in
     * detection mode  or prevention mode at policy level. Possible values include:
     * 'Prevention', 'Detection'
     *
     * @param {object} [parameters.customRules] Describes custom rules inside the
     * policy
     *
     * @param {array} [parameters.customRules.rules] List of rules
     *
     * @param {object} [parameters.managedRules] Describes managed rules inside the
     * policy
     *
     * @param {array} [parameters.managedRules.ruleSets] List of rules
     *
     * @param {string} [parameters.etag] Gets a unique read-only string that
     * changes whenever the resource is updated.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebApplicationFirewallPolicy1>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, policyName: string, parameters: models.WebApplicationFirewallPolicy1, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebApplicationFirewallPolicy1>>;

    /**
     * Creates or update policy with specified rule set name within a resource
     * group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} policyName The name of the resource group.
     *
     * @param {object} parameters Policy to be created.
     *
     * @param {object} [parameters.policySettings] Describes  policySettings for
     * policy
     *
     * @param {string} [parameters.policySettings.enabledState] describes if the
     * policy is in enabled state or disabled state. Possible values include:
     * 'Disabled', 'Enabled'
     *
     * @param {string} [parameters.policySettings.mode] Describes if it is in
     * detection mode  or prevention mode at policy level. Possible values include:
     * 'Prevention', 'Detection'
     *
     * @param {object} [parameters.customRules] Describes custom rules inside the
     * policy
     *
     * @param {array} [parameters.customRules.rules] List of rules
     *
     * @param {object} [parameters.managedRules] Describes managed rules inside the
     * policy
     *
     * @param {array} [parameters.managedRules.ruleSets] List of rules
     *
     * @param {string} [parameters.etag] Gets a unique read-only string that
     * changes whenever the resource is updated.
     *
     * @param {string} [parameters.location] Resource location.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebApplicationFirewallPolicy1} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebApplicationFirewallPolicy1} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebApplicationFirewallPolicy1} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, policyName: string, parameters: models.WebApplicationFirewallPolicy1, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebApplicationFirewallPolicy1>;
    createOrUpdate(resourceGroupName: string, policyName: string, parameters: models.WebApplicationFirewallPolicy1, callback: ServiceCallback<models.WebApplicationFirewallPolicy1>): void;
    createOrUpdate(resourceGroupName: string, policyName: string, parameters: models.WebApplicationFirewallPolicy1, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebApplicationFirewallPolicy1>): void;


    /**
     * Deletes Policy
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} policyName The name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes Policy
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} policyName The name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, policyName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, policyName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Deletes Policy
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} policyName The name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes Policy
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} policyName The name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, policyName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, policyName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists all of the protection policies within a resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebApplicationFirewallPolicyListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebApplicationFirewallPolicyListResult>>;

    /**
     * Lists all of the protection policies within a resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebApplicationFirewallPolicyListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebApplicationFirewallPolicyListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebApplicationFirewallPolicyListResult} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebApplicationFirewallPolicyListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.WebApplicationFirewallPolicyListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebApplicationFirewallPolicyListResult>): void;
}

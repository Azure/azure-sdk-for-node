/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @summary WebHookUpdate
  *
 */
class WebHookUpdate {
  /**
   * Create a WebHookUpdate.
   * @property {object} configuration The configuration of the web hook
   * registration.
   *
   * If the property secret is omitted or contains an empty string in a POST or
   * PATCH request,
   * no signature hash will be calculated.
   *
   * When retrieving web hook registration information from the service, the
   * secret is always omitted
   * @property {string} [configuration.secret] A secret that will be used to
   * create a SHA1 hash of the payload with the secret as HMAC key.
   * This hash will be set as X-MicrosoftSpeechServices-Signature header when
   * calling back into the registered URL
   * @property {boolean} active A value indicating whether callbacks to the
   * registered URL are made or not
   * @property {string} name The name of the object
   * @property {string} [description] The description of the object
   */
  constructor() {
  }

  /**
   * Defines the metadata of WebHookUpdate
   *
   * @returns {object} metadata of WebHookUpdate
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'WebHookUpdate',
      type: {
        name: 'Composite',
        className: 'WebHookUpdate',
        modelProperties: {
          configuration: {
            required: true,
            serializedName: 'configuration',
            type: {
              name: 'Composite',
              className: 'WebHookConfigurationSecret'
            }
          },
          active: {
            required: true,
            serializedName: 'active',
            type: {
              name: 'Boolean'
            }
          },
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = WebHookUpdate;

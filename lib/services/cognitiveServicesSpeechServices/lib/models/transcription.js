/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @summary Transcription
  *
 */
class Transcription {
  /**
   * Create a Transcription.
   * @property {string} recordingsUrl
   * @property {uuid} id The identifier of this entity
   * @property {array} modelsProperty
   * @property {string} [locale] The locale of the contained data
   * @property {object} [resultsUrls] The results Urls for the transcription
   * @property {string} [statusMessage] The failure reason for the
   * transcription
   * @property {date} createdDateTime The time-stamp when the object was
   * created
   * @property {date} lastActionDateTime The time-stamp when the current status
   * was entered
   * @property {string} status The status of the object. Possible values
   * include: 'Succeeded', 'NotStarted', 'Running', 'Failed'
   * @property {string} name The name of the object
   * @property {string} [description] The description of the object
   * @property {object} [properties] The custom properties of this entity
   */
  constructor() {
  }

  /**
   * Defines the metadata of Transcription
   *
   * @returns {object} metadata of Transcription
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Transcription',
      type: {
        name: 'Composite',
        className: 'Transcription',
        modelProperties: {
          recordingsUrl: {
            required: true,
            serializedName: 'recordingsUrl',
            type: {
              name: 'String'
            }
          },
          id: {
            required: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          modelsProperty: {
            required: true,
            serializedName: 'models',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ModelElementType',
                  type: {
                    name: 'Composite',
                    className: 'Model'
                  }
              }
            }
          },
          locale: {
            required: false,
            serializedName: 'locale',
            type: {
              name: 'String'
            }
          },
          resultsUrls: {
            required: false,
            serializedName: 'resultsUrls',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          statusMessage: {
            required: false,
            serializedName: 'statusMessage',
            type: {
              name: 'String'
            }
          },
          createdDateTime: {
            required: true,
            serializedName: 'createdDateTime',
            type: {
              name: 'DateTime'
            }
          },
          lastActionDateTime: {
            required: true,
            serializedName: 'lastActionDateTime',
            type: {
              name: 'DateTime'
            }
          },
          status: {
            required: true,
            serializedName: 'status',
            type: {
              name: 'String'
            }
          },
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          properties: {
            required: false,
            serializedName: 'properties',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = Transcription;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * An Application Insights component daily data volume cap
 *
 */
class ApplicationInsightsComponentDataVolumeCap {
  /**
   * Create a ApplicationInsightsComponentDataVolumeCap.
   * @member {number} [cap] Daily data volume cap in GB.
   * @member {number} [resetTime] Daily data volume cap UTC reset hour.
   * @member {number} [warningThreshold] Reserved, not used for now.
   * @member {boolean} [stopSendNotificationWhenHitThreshold] Reserved, not
   * used for now.
   * @member {boolean} [stopSendNotificationWhenHitCap] Do not send a
   * notification email when the daily data volume cap is met.
   * @member {number} [maxHistoryCap] Maximum daily data volume cap that the
   * user can set for this component.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ApplicationInsightsComponentDataVolumeCap
   *
   * @returns {object} metadata of ApplicationInsightsComponentDataVolumeCap
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ApplicationInsightsComponentDataVolumeCap',
      type: {
        name: 'Composite',
        className: 'ApplicationInsightsComponentDataVolumeCap',
        modelProperties: {
          cap: {
            required: false,
            serializedName: 'Cap',
            type: {
              name: 'Number'
            }
          },
          resetTime: {
            required: false,
            readOnly: true,
            serializedName: 'ResetTime',
            type: {
              name: 'Number'
            }
          },
          warningThreshold: {
            required: false,
            serializedName: 'WarningThreshold',
            type: {
              name: 'Number'
            }
          },
          stopSendNotificationWhenHitThreshold: {
            required: false,
            serializedName: 'StopSendNotificationWhenHitThreshold',
            type: {
              name: 'Boolean'
            }
          },
          stopSendNotificationWhenHitCap: {
            required: false,
            serializedName: 'StopSendNotificationWhenHitCap',
            type: {
              name: 'Boolean'
            }
          },
          maxHistoryCap: {
            required: false,
            readOnly: true,
            serializedName: 'MaxHistoryCap',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = ApplicationInsightsComponentDataVolumeCap;

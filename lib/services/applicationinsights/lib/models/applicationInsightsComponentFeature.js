/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * An Application Insights component daily data volume cap status
 *
 */
class ApplicationInsightsComponentFeature {
  /**
   * Create a ApplicationInsightsComponentFeature.
   * @member {string} [featureName] The pricing feature name.
   * @member {string} [meterId] The meter id used for the feature.
   * @member {string} [meterRateFrequency] The meter rate for the feature's
   * meter.
   * @member {string} [resouceId] Reserved, not used now.
   * @member {boolean} [isHidden] Reserved, not used now.
   * @member {array} [capabilities] A list of Application Insights component
   * feature capability.
   * @member {string} [title] Display name of the feature.
   * @member {boolean} [isMainFeature] Whether can apply addon feature on to
   * it.
   * @member {string} [supportedAddonFeatures] The add on features on main
   * feature.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ApplicationInsightsComponentFeature
   *
   * @returns {object} metadata of ApplicationInsightsComponentFeature
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ApplicationInsightsComponentFeature',
      type: {
        name: 'Composite',
        className: 'ApplicationInsightsComponentFeature',
        modelProperties: {
          featureName: {
            required: false,
            readOnly: true,
            serializedName: 'FeatureName',
            type: {
              name: 'String'
            }
          },
          meterId: {
            required: false,
            readOnly: true,
            serializedName: 'MeterId',
            type: {
              name: 'String'
            }
          },
          meterRateFrequency: {
            required: false,
            readOnly: true,
            serializedName: 'MeterRateFrequency',
            type: {
              name: 'String'
            }
          },
          resouceId: {
            required: false,
            readOnly: true,
            serializedName: 'ResouceId',
            type: {
              name: 'String'
            }
          },
          isHidden: {
            required: false,
            readOnly: true,
            serializedName: 'IsHidden',
            type: {
              name: 'Boolean'
            }
          },
          capabilities: {
            required: false,
            readOnly: true,
            serializedName: 'Capabilities',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ApplicationInsightsComponentFeatureCapabilityElementType',
                  type: {
                    name: 'Composite',
                    className: 'ApplicationInsightsComponentFeatureCapability'
                  }
              }
            }
          },
          title: {
            required: false,
            readOnly: true,
            serializedName: 'Title',
            type: {
              name: 'String'
            }
          },
          isMainFeature: {
            required: false,
            readOnly: true,
            serializedName: 'IsMainFeature',
            type: {
              name: 'Boolean'
            }
          },
          supportedAddonFeatures: {
            required: false,
            readOnly: true,
            serializedName: 'SupportedAddonFeatures',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ApplicationInsightsComponentFeature;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure";
import * as moment from "moment";

export {

  BaseResource,
  CloudError
};

/**
 * Error response indicates Insights service is not able to process the incoming request. The
 * reason is provided in the error message.
 */
export interface ErrorResponse {
  /**
   * Error code.
   */
  code?: string;
  /**
   * Error message indicating why the operation failed.
   */
  message?: string;
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.Cdn
   */
  provider?: string;
  /**
   * Resource on which the operation is performed: Profile, endpoint, etc.
   */
  resource?: string;
  /**
   * Operation type: Read, write, delete, etc.
   */
  operation?: string;
}

/**
 * CDN REST API operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * Annotation associated with an application insights resource.
 */
export interface Annotation {
  /**
   * Name of annotation
   */
  annotationName?: string;
  /**
   * Category of annotation, free form
   */
  category?: string;
  /**
   * Time when event occurred
   */
  eventTime?: Date;
  /**
   * Unique Id for annotation
   */
  id?: string;
  /**
   * Serialized JSON object for detailed properties
   */
  properties?: string;
  /**
   * Related parent annotation if any
   */
  relatedAnnotation?: string;
}

/**
 * Inner error
 */
export interface InnerError {
  /**
   * Provides correlation for request
   */
  diagnosticcontext?: string;
  /**
   * Request time
   */
  time?: Date;
}

/**
 * Error associated with trying to create annotation with Id that already exist
 */
export interface AnnotationError {
  /**
   * Error detail code and explanation
   */
  code?: string;
  /**
   * Error message
   */
  message?: string;
  innererror?: InnerError;
}

/**
 * An Application Insights component API Key creation request definition.
*/
export interface APIKeyRequest {
  /**
   * The name of the API Key.
  */
  name?: string;
  /**
   * The read access rights of this API Key.
  */
  linkedReadProperties?: string[];
  /**
   * The write access rights of this API Key.
  */
  linkedWriteProperties?: string[];
}

/**
 * Properties that define an API key of an Application Insights Component.
*/
export interface ApplicationInsightsComponentAPIKey {
  /**
   * The unique ID of the API key inside an Application Insights component. It is auto generated
   * when the API key is created.
  */
  readonly id?: string;
  /**
   * The API key value. It will be only return once when the API Key was created.
  */
  readonly apiKey?: string;
  /**
   * The create date of this API key.
  */
  createdDate?: string;
  /**
   * The name of the API key.
  */
  name?: string;
  /**
   * The read access rights of this API Key.
  */
  linkedReadProperties?: string[];
  /**
   * The write access rights of this API Key.
  */
  linkedWriteProperties?: string[];
}

/**
 * An Application Insights component Continuous Export configuration request definition.
*/
export interface ApplicationInsightsComponentExportRequest {
  /**
   * The document types to be exported, as comma separated values. Allowed values include
   * 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd',
   * 'PerformanceCounters', 'Availability', 'Messages'.
  */
  recordTypes?: string;
  /**
   * The Continuous Export destination type. This has to be 'Blob'.
  */
  destinationType?: string;
  /**
   * The SAS URL for the destination storage container. It must grant write permission.
  */
  destinationAddress?: string;
  /**
   * Set to 'true' to create a Continuous Export configuration as enabled, otherwise set it to
   * 'false'.
  */
  isEnabled?: string;
  /**
   * Deprecated
  */
  notificationQueueEnabled?: string;
  /**
   * Deprecated
  */
  notificationQueueUri?: string;
  /**
   * The subscription ID of the destination storage container.
  */
  destinationStorageSubscriptionId?: string;
  /**
   * The location ID of the destination storage container.
  */
  destinationStorageLocationId?: string;
  /**
   * The name of destination storage account.
  */
  destinationAccountId?: string;
}

/**
 * Properties that define a Continuous Export configuration.
*/
export interface ApplicationInsightsComponentExportConfiguration {
  /**
   * The unique ID of the export configuration inside an Application Insights component. It is auto
   * generated when the Continuous Export configuration is created.
  */
  readonly exportId?: string;
  /**
   * The instrumentation key of the Application Insights component.
  */
  readonly instrumentationKey?: string;
  /**
   * This comma separated list of document types that will be exported. The possible values include
   * 'Requests', 'Event', 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd',
   * 'PerformanceCounters', 'Availability', 'Messages'.
  */
  recordTypes?: string;
  /**
   * The name of the Application Insights component.
  */
  readonly applicationName?: string;
  /**
   * The subscription of the Application Insights component.
  */
  readonly subscriptionId?: string;
  /**
   * The resource group of the Application Insights component.
  */
  readonly resourceGroup?: string;
  /**
   * The destination storage account subscription ID.
  */
  readonly destinationStorageSubscriptionId?: string;
  /**
   * The destination account location ID.
  */
  readonly destinationStorageLocationId?: string;
  /**
   * The name of destination account.
  */
  readonly destinationAccountId?: string;
  /**
   * The destination type.
  */
  readonly destinationType?: string;
  /**
   * This will be 'true' if the Continuous Export configuration is enabled, otherwise it will be
   * 'false'.
  */
  readonly isUserEnabled?: string;
  /**
   * Last time the Continuous Export configuration was updated.
  */
  readonly lastUserUpdate?: string;
  /**
   * Deprecated
  */
  notificationQueueEnabled?: string;
  /**
   * This indicates current Continuous Export configuration status. The possible values are
   * 'Preparing', 'Success', 'Failure'.
  */
  readonly exportStatus?: string;
  /**
   * The last time data was successfully delivered to the destination storage container for this
   * Continuous Export configuration.
  */
  readonly lastSuccessTime?: string;
  /**
   * The last time the Continuous Export configuration started failing.
  */
  readonly lastGapTime?: string;
  /**
   * This is the reason the Continuous Export configuration started failing. It can be
   * 'AzureStorageNotFound' or 'AzureStorageAccessDenied'.
  */
  readonly permanentErrorReason?: string;
  /**
   * The name of the destination storage account.
  */
  readonly storageName?: string;
  /**
   * The name of the destination storage container.
  */
  readonly containerName?: string;
}

/**
 * An Application Insights component daily data volume cap
*/
export interface ApplicationInsightsComponentDataVolumeCap {
  /**
   * Daily data volume cap in GB.
  */
  cap?: number;
  /**
   * Daily data volume cap UTC reset hour.
  */
  readonly resetTime?: number;
  /**
   * Reserved, not used for now.
  */
  warningThreshold?: number;
  /**
   * Reserved, not used for now.
  */
  stopSendNotificationWhenHitThreshold?: boolean;
  /**
   * Do not send a notification email when the daily data volume cap is met.
  */
  stopSendNotificationWhenHitCap?: boolean;
  /**
   * Maximum daily data volume cap that the user can set for this component.
  */
  readonly maxHistoryCap?: number;
}

/**
 * An Application Insights component billing features
*/
export interface ApplicationInsightsComponentBillingFeatures {
  /**
   * An Application Insights component daily data volume cap
  */
  dataVolumeCap?: ApplicationInsightsComponentDataVolumeCap;
  /**
   * Current enabled pricing plan. When the component is in the Enterprise plan, this will list
   * both 'Basic' and 'Application Insights Enterprise'.
  */
  currentBillingFeatures?: string[];
}

/**
 * An Application Insights component daily data volume cap status
*/
export interface ApplicationInsightsComponentQuotaStatus {
  /**
   * The Application ID for the Application Insights component.
  */
  readonly appId?: string;
  /**
   * The daily data volume cap is met, and data ingestion will be stopped.
  */
  readonly shouldBeThrottled?: boolean;
  /**
   * Date and time when the daily data volume cap will be reset, and data ingestion will resume.
  */
  readonly expirationTime?: string;
}

/**
 * An Application Insights component feature capabilities
*/
export interface ApplicationInsightsComponentFeatureCapabilities {
  /**
   * Whether allow to use continuous export feature.
  */
  readonly supportExportData?: boolean;
  /**
   * Reserved, not used now.
  */
  readonly burstThrottlePolicy?: string;
  /**
   * Reserved, not used now.
  */
  readonly metadataClass?: string;
  /**
   * Reserved, not used now.
  */
  readonly liveStreamMetrics?: boolean;
  /**
   * Reserved, not used now.
  */
  readonly applicationMap?: boolean;
  /**
   * Whether allow to use work item integration feature.
  */
  readonly workItemIntegration?: boolean;
  /**
   * Reserved, not used now.
  */
  readonly powerBIIntegration?: boolean;
  /**
   * Reserved, not used now.
  */
  readonly openSchema?: boolean;
  /**
   * Reserved, not used now.
  */
  readonly proactiveDetection?: boolean;
  /**
   * Reserved, not used now.
  */
  readonly analyticsIntegration?: boolean;
  /**
   * Whether allow to use multiple steps web test feature.
  */
  readonly multipleStepWebTest?: boolean;
  /**
   * Reserved, not used now.
  */
  readonly apiAccessLevel?: string;
  /**
   * The application insights component used tracking type.
  */
  readonly trackingType?: string;
  /**
   * Daily data volume cap in GB.
  */
  readonly dailyCap?: number;
  /**
   * Daily data volume cap UTC reset hour.
  */
  readonly dailyCapResetTime?: number;
  /**
   * Reserved, not used now.
  */
  readonly throttleRate?: number;
}

/**
 * An Application Insights component feature capability
*/
export interface ApplicationInsightsComponentFeatureCapability {
  /**
   * The name of the capability.
  */
  readonly name?: string;
  /**
   * The description of the capability.
  */
  readonly description?: string;
  /**
   * The value of the capability.
  */
  readonly value?: string;
  /**
   * The unit of the capability.
  */
  readonly unit?: string;
  /**
   * The meter used for the capability.
  */
  readonly meterId?: string;
  /**
   * The meter rate of the meter.
  */
  readonly meterRateFrequency?: string;
}

/**
 * An Application Insights component daily data volume cap status
*/
export interface ApplicationInsightsComponentFeature {
  /**
   * The pricing feature name.
  */
  readonly featureName?: string;
  /**
   * The meter id used for the feature.
  */
  readonly meterId?: string;
  /**
   * The meter rate for the feature's meter.
  */
  readonly meterRateFrequency?: string;
  /**
   * Reserved, not used now.
  */
  readonly resouceId?: string;
  /**
   * Reserved, not used now.
  */
  readonly isHidden?: boolean;
  /**
   * A list of Application Insights component feature capability.
  */
  readonly capabilities?: ApplicationInsightsComponentFeatureCapability[];
  /**
   * Display name of the feature.
  */
  readonly title?: string;
  /**
   * Whether can apply addon feature on to it.
  */
  readonly isMainFeature?: boolean;
  /**
   * The add on features on main feature.
  */
  readonly supportedAddonFeatures?: string;
}

/**
 * An Application Insights component available features.
*/
export interface ApplicationInsightsComponentAvailableFeatures {
  /**
   * A list of Application Insights component feature.
  */
  readonly result?: ApplicationInsightsComponentFeature[];
}

/**
 * Static definitions of the ProactiveDetection configuration rule (same values for all
 * components).
*/
export interface ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions {
  /**
   * The rule name
  */
  name?: string;
  /**
   * The rule name as it is displayed in UI
  */
  displayName?: string;
  /**
   * The rule description
  */
  description?: string;
  /**
   * URL which displays additional info about the proactive detection rule
  */
  helpUrl?: string;
  /**
   * A flag indicating whether the rule is hidden (from the UI)
  */
  isHidden?: boolean;
  /**
   * A flag indicating whether the rule is enabled by default
  */
  isEnabledByDefault?: boolean;
  /**
   * A flag indicating whether the rule is in preview
  */
  isInPreview?: boolean;
  /**
   * A flag indicating whether email notifications are supported for detections for this rule
  */
  supportsEmailNotifications?: boolean;
}

/**
 * Properties that define a ProactiveDetection configuration.
*/
export interface ApplicationInsightsComponentProactiveDetectionConfiguration extends BaseResource {
  /**
   * The rule name
  */
  name?: string;
  /**
   * A flag that indicates whether this rule is enabled by the user
  */
  enabled?: boolean;
  /**
   * A flag that indicated whether notifications on this rule should be sent to subscription owners
  */
  sendEmailsToSubscriptionOwners?: boolean;
  /**
   * Custom email addresses for this rule notifications
  */
  customEmails?: string[];
  /**
   * The last time this rule was updated
  */
  lastUpdatedTime?: string;
  /**
   * Static definitions of the ProactiveDetection configuration rule (same values for all
   * components).
  */
  ruleDefinitions?: ApplicationInsightsComponentProactiveDetectionConfigurationRuleDefinitions;
}

/**
 * An azure resource object
*/
export interface ComponentsResource extends BaseResource {
  /**
   * Azure resource Id
  */
  readonly id?: string;
  /**
   * Azure resource name
  */
  readonly name?: string;
  /**
   * Azure resource type
  */
  readonly type?: string;
  /**
   * Resource location
  */
  location: string;
  /**
   * Resource tags
  */
  tags?: { [propertyName: string]: string };
}

/**
 * A container holding only the Tags for a resource, allowing the user to update the tags on a
 * WebTest instance.
*/
export interface TagsResource {
  /**
   * Resource tags
  */
  tags?: { [propertyName: string]: string };
}

/**
 * An Application Insights component definition.
*/
export interface ApplicationInsightsComponent extends ComponentsResource {
  /**
   * The kind of application that this component refers to, used to customize UI. This value is a
   * freeform string, values should typically be one of the following: web, ios, other, store,
   * java, phone.
  */
  kind: string;
  /**
   * The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.
  */
  readonly applicationId?: string;
  /**
   * Application Insights Unique ID for your Application.
  */
  readonly appId?: string;
  /**
   * Type of application being monitored. Possible values include: 'web', 'other'
  */
  applicationType: string;
  /**
   * Used by the Application Insights system to determine what kind of flow this component was
   * created by. This is to be set to 'Bluefield' when creating/updating a component via the REST
   * API. Possible values include: 'Bluefield'
  */
  flowType?: string;
  /**
   * Describes what tool created this Application Insights component. Customers using this API
   * should set this to the default 'rest'. Possible values include: 'rest'
  */
  requestSource?: string;
  /**
   * Application Insights Instrumentation key. A read-only value that applications can use to
   * identify the destination for all telemetry sent to Azure Application Insights. This value will
   * be supplied upon construction of each new Application Insights component.
  */
  readonly instrumentationKey?: string;
  /**
   * Creation Date for the Application Insights component, in ISO 8601 format.
  */
  readonly creationDate?: Date;
  /**
   * Azure Tenant Id.
  */
  readonly tenantId?: string;
  /**
   * The unique application ID created when a new application is added to HockeyApp, used for
   * communications with HockeyApp.
  */
  hockeyAppId?: string;
  /**
   * Token used to authenticate communications with between Application Insights and HockeyApp.
  */
  readonly hockeyAppToken?: string;
  /**
   * Current state of this component: whether or not is has been provisioned within the resource
   * group it is defined. Users cannot change this value but are able to read from it. Values will
   * include Succeeded, Deploying, Canceled, and Failed.
  */
  readonly provisioningState?: string;
  /**
   * Percentage of the data produced by the application being monitored that is being sampled for
   * Application Insights telemetry.
  */
  samplingPercentage?: number;
}

/**
 * User-defined filters to return data which will be purged from the table.
*/
export interface ComponentPurgeBodyFilters {
  /**
   * The column of the table over which the given query should run
  */
  column?: string;
  /**
   * A query operator to evaluate over the provided column and value(s).
  */
  operator?: string;
  /**
   * the value for the operator to function over. This can be a number (e.g., > 100), a string
   * (timestamp >= '2017-09-01') or array of values.
  */
  value?: any;
  /**
   * When filtering over custom dimensions, this key will be used as the name of the custom
   * dimension.
  */
  key?: string;
}

/**
 * Describes the body of a purge request for an App Insights component
*/
export interface ComponentPurgeBody {
  /**
   * Table from which to purge data.
  */
  table: string;
  /**
   * The set of columns and filters (queries) to run over them to purge the resulting data.
  */
  filters: ComponentPurgeBodyFilters[];
}

/**
 * Response containing operationId for a specific purge action.
*/
export interface ComponentPurgeResponse {
  /**
   * Id to use when querying for status for a particular purge operation.
  */
  operationId: string;
}

/**
 * Response containing status for a specific purge operation.
*/
export interface ComponentPurgeStatusResponse {
  /**
   * Status of the operation represented by the requested Id. Possible values include: 'pending',
   * 'completed'
  */
  status: string;
}

/**
 * Work item configuration associated with an application insights resource.
*/
export interface WorkItemConfiguration {
  /**
   * Connector identifier where work item is created
  */
  connectorId?: string;
  /**
   * Configuration friendly name
  */
  configDisplayName?: string;
  /**
   * Boolean value indicating whether configuration is default
  */
  isDefault?: boolean;
  /**
   * Unique Id for work item
  */
  id?: string;
  /**
   * Serialized JSON object for detailed properties
  */
  configProperties?: string;
}

/**
 * Work item configuration creation payload
*/
export interface WorkItemCreateConfiguration {
  /**
   * Unique connector id
  */
  connectorId?: string;
  /**
   * Serialized JSON object for detailed properties
  */
  connectorDataConfiguration?: string;
  /**
   * Boolean indicating validate only
  */
  validateOnly?: boolean;
  /**
   * Custom work item properties
  */
  workItemProperties?: string;
}

/**
 * Error associated with trying to get work item configuration or configurations
*/
export interface WorkItemConfigurationError {
  /**
   * Error detail code and explanation
  */
  code?: string;
  /**
   * Error message
  */
  message?: string;
  innererror?: InnerError;
}

/**
 * Properties that define a favorite that is associated to an Application Insights component.
*/
export interface ApplicationInsightsComponentFavorite {
  /**
   * The user-defined name of the favorite.
  */
  name?: string;
  /**
   * Configuration of this particular favorite, which are driven by the Azure portal UX.
   * Configuration data is a string containing valid JSON
  */
  config?: string;
  /**
   * This instance's version of the data model. This can change as new features are added that can
   * be marked favorite. Current examples include MetricsExplorer (ME) and Search.
  */
  version?: string;
  /**
   * Internally assigned unique id of the favorite definition.
  */
  readonly favoriteId?: string;
  /**
   * Enum indicating if this favorite definition is owned by a specific user or is shared between
   * all users with access to the Application Insights component. Possible values include:
   * 'shared', 'user'
  */
  favoriteType?: string;
  /**
   * The source of the favorite definition.
  */
  sourceType?: string;
  /**
   * Date and time in UTC of the last modification that was made to this favorite definition.
  */
  readonly timeModified?: string;
  /**
   * A list of 0 or more tags that are associated with this favorite definition
  */
  tags?: string[];
  /**
   * Favorite category, as defined by the user at creation time.
  */
  category?: string;
  /**
   * Flag denoting wether or not this favorite was generated from a template.
  */
  isGeneratedFromTemplate?: boolean;
  /**
   * Unique user id of the specific user that owns this favorite.
  */
  readonly userId?: string;
}

/**
 * Properties that define a web test location available to an Application Insights Component.
*/
export interface ApplicationInsightsComponentWebTestLocation {
  /**
   * The display name of the web test location.
  */
  readonly displayName?: string;
  /**
   * Internally defined geographic location tag.
  */
  readonly tag?: string;
}

/**
 * An azure resource object
*/
export interface WebtestsResource extends BaseResource {
  /**
   * Azure resource Id
  */
  readonly id?: string;
  /**
   * Azure resource name
  */
  readonly name?: string;
  /**
   * Azure resource type
  */
  readonly type?: string;
  /**
   * Resource location
  */
  location: string;
  /**
   * Resource tags
  */
  tags?: { [propertyName: string]: string };
}

/**
 * Geo-physical location to run a web test from. You must specify one or more locations for the
 * test to run from.
*/
export interface WebTestGeolocation {
  /**
   * Location ID for the webtest to run from.
  */
  location?: string;
}

/**
 * An XML configuration specification for a WebTest.
*/
export interface WebTestPropertiesConfiguration {
  /**
   * The XML specification of a WebTest to run against an application.
  */
  webTest?: string;
}

/**
 * An Application Insights web test definition.
*/
export interface WebTest extends WebtestsResource {
  /**
   * The kind of web test that this web test watches. Choices are ping and multistep. Possible
   * values include: 'ping', 'multistep'
  */
  kind?: string;
  /**
   * Unique ID of this WebTest. This is typically the same value as the Name field.
  */
  syntheticMonitorId: string;
  /**
   * User defined name if this WebTest.
  */
  webTestName: string;
  /**
   * Purpose/user defined descriptive test for this WebTest.
  */
  description?: string;
  /**
   * Is the test actively being monitored.
  */
  enabled?: boolean;
  /**
   * Interval in seconds between test runs for this WebTest. Default value is 300.
  */
  frequency?: number;
  /**
   * Seconds until this WebTest will timeout and fail. Default value is 30.
  */
  timeout?: number;
  /**
   * The kind of web test this is, valid choices are ping and multistep. Possible values include:
   * 'ping', 'multistep'
  */
  webTestKind: string;
  /**
   * Allow for retries should this WebTest fail.
  */
  retryEnabled?: boolean;
  /**
   * A list of where to physically run the tests from to give global coverage for accessibility of
   * your application.
  */
  locations: WebTestGeolocation[];
  /**
   * An XML configuration specification for a WebTest.
  */
  configuration?: WebTestPropertiesConfiguration;
  /**
   * Current state of this component, whether or not is has been provisioned within the resource
   * group it is defined. Users cannot change this value but are able to read from it. Values will
   * include Succeeded, Deploying, Canceled, and Failed.
  */
  readonly provisioningState?: string;
}

/**
 * A set of properties that can be defined in the context of a specific item type. Each type may
 * have its own properties.
*/
export interface ApplicationInsightsComponentAnalyticsItemProperties {
  /**
   * A function alias, used when the type of the item is Function
  */
  functionAlias?: string;
}

/**
 * Properties that define an Analytics item that is associated to an Application Insights
 * component.
*/
export interface ApplicationInsightsComponentAnalyticsItem {
  /**
   * Internally assigned unique id of the item definition.
  */
  id?: string;
  /**
   * The user-defined name of the item.
  */
  name?: string;
  /**
   * The content of this item
  */
  content?: string;
  /**
   * This instance's version of the data model. This can change as new features are added.
  */
  readonly version?: string;
  /**
   * Enum indicating if this item definition is owned by a specific user or is shared between all
   * users with access to the Application Insights component. Possible values include: 'shared',
   * 'user'
  */
  scope?: string;
  /**
   * Enum indicating the type of the Analytics item. Possible values include: 'query', 'function',
   * 'folder', 'recent'
  */
  type?: string;
  /**
   * Date and time in UTC when this item was created.
  */
  readonly timeCreated?: string;
  /**
   * Date and time in UTC of the last modification that was made to this item.
  */
  readonly timeModified?: string;
  properties?: ApplicationInsightsComponentAnalyticsItemProperties;
}

/**
 * An azure resource object
*/
export interface WorkbookResource extends BaseResource {
  /**
   * Azure resource Id
  */
  readonly id?: string;
  /**
   * Azure resource name
  */
  readonly name?: string;
  /**
   * Azure resource type
  */
  readonly type?: string;
  /**
   * Resource location
  */
  location?: string;
  /**
   * Resource tags
  */
  tags?: { [propertyName: string]: string };
}

/**
 * An Application Insights workbook definition.
*/
export interface Workbook extends WorkbookResource {
  /**
   * The kind of workbook. Choices are user and shared. Possible values include: 'user', 'shared'
  */
  kind?: string;
  /**
   * The user-defined name of the workbook.
  */
  workbookName: string;
  /**
   * Configuration of this particular workbook. Configuration data is a string containing valid
   * JSON
  */
  serializedData: string;
  /**
   * This instance's version of the data model. This can change as new features are added that can
   * be marked workbook.
  */
  version?: string;
  /**
   * Internally assigned unique id of the workbook definition.
  */
  workbookId: string;
  /**
   * Enum indicating if this workbook definition is owned by a specific user or is shared between
   * all users with access to the Application Insights component. Possible values include: 'user',
   * 'shared'
  */
  sharedTypeKind: string;
  /**
   * Date and time in UTC of the last modification that was made to this workbook definition.
  */
  readonly timeModified?: string;
  /**
   * Workbook category, as defined by the user at creation time.
  */
  category: string;
  /**
   * A list of 0 or more tags that are associated with this workbook definition
  */
  workbookTags?: string[];
  /**
   * Unique user id of the specific user that owns this workbook.
  */
  userId: string;
  /**
   * Optional resourceId for a source resource.
  */
  sourceResourceId?: string;
}

/**
 * Contains a sourceId and workbook resource id to link two resources.
*/
export interface LinkProperties {
  /**
   * The source Azure resource id
  */
  sourceId?: string;
  /**
   * The workbook Azure resource id
  */
  targetId?: string;
  /**
   * The category of workbook
  */
  category?: string;
}

/**
 * Error Field contract.
*/
export interface ErrorFieldContract {
  /**
   * Property level error code.
  */
  code?: string;
  /**
   * Human-readable representation of property-level error.
  */
  message?: string;
  /**
   * Property name.
  */
  target?: string;
}

/**
 * Error message body that will indicate why the operation failed.
*/
export interface WorkbookError {
  /**
   * Service-defined error code. This code serves as a sub-status for the HTTP error code specified
   * in the response.
  */
  code?: string;
  /**
   * Human-readable representation of the error.
  */
  message?: string;
  /**
   * The list of invalid fields send in request, in case of validation error.
  */
  details?: ErrorFieldContract[];
}

/**
 * Result of the request to list CDN operations. It contains a list of operations and a URL link to
 * get the next set of results.
*/
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
  */
  nextLink?: string;
}

/**
 * Annotations list result.
*/
export interface AnnotationsListResult extends Array<Annotation> {
}

/**
 * Describes the list of API Keys of an Application Insights Component.
*/
export interface ApplicationInsightsComponentAPIKeyListResult extends
Array<ApplicationInsightsComponentAPIKey> {
}

/**
 * Describes the list of Application Insights Resources.
*/
export interface ApplicationInsightsComponentListResult extends Array<ApplicationInsightsComponent>
{
  /**
   * The URI to get the next set of Application Insights component definitions if too many
   * components where returned in the result set.
  */
  nextLink?: string;
}

/**
 * Work item configuration list result.
*/
export interface WorkItemConfigurationsListResult extends Array<WorkItemConfiguration> {
}

/**
 * Describes the list of web test locations available to an Application Insights Component.
*/
export interface ApplicationInsightsWebTestLocationsListResult extends
Array<ApplicationInsightsComponentWebTestLocation> {
}

/**
 * A list of 0 or more Application Insights web test definitions.
*/
export interface WebTestListResult extends Array<WebTest> {
  /**
   * The link to get the next part of the returned list of web tests, should the return set be too
   * large for a single request. May be null.
  */
  nextLink?: string;
}

/**
 * Workbook list result.
*/
export interface WorkbooksListResult extends Array<Workbook> {
}

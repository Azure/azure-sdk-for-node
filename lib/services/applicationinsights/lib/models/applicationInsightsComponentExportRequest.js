/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * An Application Insights component Continuous Export configuration request
 * definition.
 *
 */
class ApplicationInsightsComponentExportRequest {
  /**
   * Create a ApplicationInsightsComponentExportRequest.
   * @property {string} [recordTypes] The document types to be exported, as
   * comma separated values. Allowed values include 'Requests', 'Event',
   * 'Exceptions', 'Metrics', 'PageViews', 'PageViewPerformance', 'Rdd',
   * 'PerformanceCounters', 'Availability', 'Messages'.
   * @property {string} [destinationType] The Continuous Export destination
   * type. This has to be 'Blob'.
   * @property {string} [destinationAddress] The SAS URL for the destination
   * storage container. It must grant write permission.
   * @property {string} [isEnabled] Set to 'true' to create a Continuous Export
   * configuration as enabled, otherwise set it to 'false'.
   * @property {string} [notificationQueueEnabled] Deprecated
   * @property {string} [notificationQueueUri] Deprecated
   * @property {string} [destinationStorageSubscriptionId] The subscription ID
   * of the destination storage container.
   * @property {string} [destinationStorageLocationId] The location ID of the
   * destination storage container.
   * @property {string} [destinationAccountId] The name of destination storage
   * account.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ApplicationInsightsComponentExportRequest
   *
   * @returns {object} metadata of ApplicationInsightsComponentExportRequest
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ApplicationInsightsComponentExportRequest',
      type: {
        name: 'Composite',
        className: 'ApplicationInsightsComponentExportRequest',
        modelProperties: {
          recordTypes: {
            required: false,
            serializedName: 'RecordTypes',
            type: {
              name: 'String'
            }
          },
          destinationType: {
            required: false,
            serializedName: 'DestinationType',
            type: {
              name: 'String'
            }
          },
          destinationAddress: {
            required: false,
            serializedName: 'DestinationAddress',
            type: {
              name: 'String'
            }
          },
          isEnabled: {
            required: false,
            serializedName: 'IsEnabled',
            type: {
              name: 'String'
            }
          },
          notificationQueueEnabled: {
            required: false,
            serializedName: 'NotificationQueueEnabled',
            type: {
              name: 'String'
            }
          },
          notificationQueueUri: {
            required: false,
            serializedName: 'NotificationQueueUri',
            type: {
              name: 'String'
            }
          },
          destinationStorageSubscriptionId: {
            required: false,
            serializedName: 'DestinationStorageSubscriptionId',
            type: {
              name: 'String'
            }
          },
          destinationStorageLocationId: {
            required: false,
            serializedName: 'DestinationStorageLocationId',
            type: {
              name: 'String'
            }
          },
          destinationAccountId: {
            required: false,
            serializedName: 'DestinationAccountId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ApplicationInsightsComponentExportRequest;

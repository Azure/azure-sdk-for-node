/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Location information.
 *
 */
class Location {
  /**
   * Create a Location.
   * @property {string} [id] The fully qualified ID of the location. For
   * example,
   * /subscriptions/00000000-0000-0000-0000-000000000000/locations/westus.
   * @property {string} [subscriptionId] The subscription ID.
   * @property {string} [name] The location name.
   * @property {string} [displayName] The display name of the location.
   * @property {string} [latitude] The latitude of the location.
   * @property {string} [longitude] The longitude of the location.
   */
  constructor() {
  }

  /**
   * Defines the metadata of Location
   *
   * @returns {object} metadata of Location
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Location',
      type: {
        name: 'Composite',
        className: 'Location',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          subscriptionId: {
            required: false,
            readOnly: true,
            serializedName: 'subscriptionId',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          displayName: {
            required: false,
            readOnly: true,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          latitude: {
            required: false,
            readOnly: true,
            serializedName: 'latitude',
            type: {
              name: 'String'
            }
          },
          longitude: {
            required: false,
            readOnly: true,
            serializedName: 'longitude',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = Location;

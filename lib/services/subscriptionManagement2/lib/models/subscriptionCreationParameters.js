/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Subscription Creation Parameters required to create a new Azure
 * subscription.
 *
 */
class SubscriptionCreationParameters {
  /**
   * Create a SubscriptionCreationParameters.
   * @property {string} [displayName] The display name of the subscription.
   * @property {array} [owners] The list of principals that should be granted
   * Owner access on the subscription. Principals should be of type User,
   * Service Principal or Security Group.
   * @property {string} [offerType] The offer type of the subscription. For
   * example, MS-AZR-0017P (EnterpriseAgreement) and MS-AZR-0148P
   * (EnterpriseAgreement devTest) are available. Only valid when creating a
   * subscription in a enrollment account scope. Possible values include:
   * 'MS-AZR-0017P', 'MS-AZR-0148P'
   * @property {object} [additionalParameters] Additional, untyped parameters
   * to support custom subscription creation scenarios.
   */
  constructor() {
  }

  /**
   * Defines the metadata of SubscriptionCreationParameters
   *
   * @returns {object} metadata of SubscriptionCreationParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SubscriptionCreationParameters',
      type: {
        name: 'Composite',
        className: 'SubscriptionCreationParameters',
        modelProperties: {
          displayName: {
            required: false,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          owners: {
            required: false,
            serializedName: 'owners',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'AdPrincipalElementType',
                  type: {
                    name: 'Composite',
                    className: 'AdPrincipal'
                  }
              }
            }
          },
          offerType: {
            required: false,
            serializedName: 'offerType',
            type: {
              name: 'String'
            }
          },
          additionalParameters: {
            required: false,
            serializedName: 'additionalParameters',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'ObjectElementType',
                  type: {
                    name: 'Object'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = SubscriptionCreationParameters;

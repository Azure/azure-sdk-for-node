/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * Resource Manager Resource Information.
 *
 * @member {string} [id] Resource Manager Resource ID.
 * @member {string} [type] Resource Manager Resource Type.
 * @member {string} [name] Resource Manager Resource Name.
 * @member {string} [location] Resource Manager Resource Location.
 * @member {object} [tags] Resource Manager Resource Tags.
 * @member {string} [etag]
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly type?: string;
  readonly name?: string;
  readonly location?: string;
  tags?: { [propertyName: string]: string };
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the EncryptionJwkResource class.
 * @constructor
 * The public key of the gateway.
 *
 * @member {string} [kty]
 * @member {string} [alg]
 * @member {string} [e]
 * @member {string} [n]
 */
export interface EncryptionJwkResource {
  kty?: string;
  alg?: string;
  e?: string;
  n?: string;
}

/**
 * @class
 * Initializes a new instance of the GatewayStatus class.
 * @constructor
 * Expanded gateway status information.
 *
 * @member {number} [availableMemoryMByte] The available memory on the gateway
 * host machine in megabytes.
 * @member {number} [gatewayCpuUtilizationPercent] The CPU utilization of the
 * gateway process (numeric value between 0 and 100).
 * @member {number} [totalCpuUtilizationPercent] CPU Utilization of the whole
 * system.
 * @member {string} [gatewayVersion] The version of the gateway that is
 * installed on the system.
 * @member {string} [friendlyOsName] The Plaintext description of the OS on the
 * gateway.
 * @member {date} [installedDate] The date the gateway was installed.
 * @member {number} [logicalProcessorCount] Number of logical processors in the
 * gateway system.
 * @member {string} [name] The computer name of the gateway system.
 * @member {string} [gatewayId] The gateway resource ID.
 * @member {number} [gatewayWorkingSetMByte] The working set size of the
 * gateway process in megabytes.
 * @member {date} [statusUpdated] UTC date and time when gateway status was
 * last updated.
 * @member {string} [groupPolicyError] The group policy error.
 * @member {boolean} [allowGatewayGroupPolicyStatus] Status of the
 * allowGatewayGroupPolicy setting.
 * @member {boolean} [requireMfaGroupPolicyStatus] Status of the
 * requireMfaGroupPolicy setting.
 * @member {string} [encryptionCertificateThumbprint] Thumbprint of the
 * encryption certificate.
 * @member {string} [secondaryEncryptionCertificateThumbprint] Secondary
 * thumbprint of the encryption certificate.
 * @member {object} [encryptionJwk] The encryption certificate key.
 * @member {string} [encryptionJwk.kty]
 * @member {string} [encryptionJwk.alg]
 * @member {string} [encryptionJwk.e]
 * @member {string} [encryptionJwk.n]
 * @member {object} [secondaryEncryptionJwk] The secondary encryption
 * certificate key.
 * @member {string} [secondaryEncryptionJwk.kty]
 * @member {string} [secondaryEncryptionJwk.alg]
 * @member {string} [secondaryEncryptionJwk.e]
 * @member {string} [secondaryEncryptionJwk.n]
 * @member {number} [activeMessageCount] Active message count.
 * @member {string} [latestPublishedMsiVersion] Latest published version of the
 * gateway install MSI.
 * @member {date} [publishedTimeUtc] Gateway install MSI published time.
 */
export interface GatewayStatus {
  availableMemoryMByte?: number;
  gatewayCpuUtilizationPercent?: number;
  totalCpuUtilizationPercent?: number;
  gatewayVersion?: string;
  friendlyOsName?: string;
  installedDate?: Date;
  logicalProcessorCount?: number;
  name?: string;
  gatewayId?: string;
  gatewayWorkingSetMByte?: number;
  statusUpdated?: Date;
  groupPolicyError?: string;
  allowGatewayGroupPolicyStatus?: boolean;
  requireMfaGroupPolicyStatus?: boolean;
  encryptionCertificateThumbprint?: string;
  secondaryEncryptionCertificateThumbprint?: string;
  encryptionJwk?: EncryptionJwkResource;
  secondaryEncryptionJwk?: EncryptionJwkResource;
  activeMessageCount?: number;
  latestPublishedMsiVersion?: string;
  publishedTimeUtc?: Date;
}

/**
 * @class
 * Initializes a new instance of the GatewayResource class.
 * @constructor
 * Data model for an arm gateway resource.
 *
 * @member {date} [created] UTC date and time when gateway was first added to
 * management service.
 * @member {date} [updated] UTC date and time when node was last updated.
 * @member {string} [upgradeMode] The upgradeMode property gives the
 * flexibility to gateway to auto upgrade itself. If properties value not
 * specified, then we assume upgradeMode = Automatic. Possible values include:
 * 'Manual', 'Automatic'
 * @member {string} [desiredVersion] Latest available MSI version.
 * @member {array} [instances] Names of the nodes in the gateway.
 * @member {number} [activeMessageCount] Number of active messages.
 * @member {string} [latestPublishedMsiVersion] Last published MSI version.
 * @member {date} [publishedTimeUtc] The date/time of the last published
 * gateway.
 * @member {string} [installerDownload] Installer download uri.
 * @member {string} [minimumVersion] Minimum gateway version.
 */
export interface GatewayResource extends Resource {
  created?: Date;
  updated?: Date;
  upgradeMode?: string;
  desiredVersion?: string;
  instances?: GatewayStatus[];
  activeMessageCount?: number;
  latestPublishedMsiVersion?: string;
  publishedTimeUtc?: Date;
  readonly installerDownload?: string;
  readonly minimumVersion?: string;
}

/**
 * @class
 * Initializes a new instance of the GatewayProfile class.
 * @constructor
 * JSON properties that the gateway service uses know how to communicate with
 * the resource.
 *
 * @member {string} [dataPlaneServiceBaseAddress] The Dataplane connection URL.
 * @member {string} [gatewayId] The ID of the gateway.
 * @member {string} [environment] The environment for the gateway (DEV,
 * DogFood, or Production).
 * @member {string} [upgradeManifestUrl] Gateway upgrade manifest URL.
 * @member {string} [messagingNamespace] Messaging namespace.
 * @member {string} [messagingAccount] Messaging Account.
 * @member {string} [messagingKey] Messaging Key.
 * @member {string} [requestQueue] Request queue name.
 * @member {string} [responseTopic] Response topic name.
 * @member {string} [statusBlobSignature] The gateway status blob SAS URL.
 */
export interface GatewayProfile {
  dataPlaneServiceBaseAddress?: string;
  gatewayId?: string;
  environment?: string;
  upgradeManifestUrl?: string;
  messagingNamespace?: string;
  messagingAccount?: string;
  messagingKey?: string;
  requestQueue?: string;
  responseTopic?: string;
  statusBlobSignature?: string;
}

/**
 * @class
 * Initializes a new instance of the GatewayParameters class.
 * @constructor
 * Collection of parameters for operations on a gateway resource.
 *
 * @member {string} [location] Location of the resource.
 * @member {object} [tags] Resource tags.
 * @member {string} [upgradeMode] The upgradeMode property gives the
 * flexibility to gateway to auto upgrade itself. If properties value not
 * specified, then we assume upgradeMode = Automatic. Possible values include:
 * 'Manual', 'Automatic'
 */
export interface GatewayParameters {
  location?: string;
  tags?: any;
  upgradeMode?: string;
}

/**
 * @class
 * Initializes a new instance of the NodeResource class.
 * @constructor
 * A Node Resource.
 *
 * @member {string} [gatewayId] ID of the gateway.
 * @member {string} [connectionName] myhost.domain.com
 * @member {date} [created] UTC date and time when node was first added to
 * management service.
 * @member {date} [updated] UTC date and time when node was last updated.
 */
export interface NodeResource extends Resource {
  gatewayId?: string;
  connectionName?: string;
  created?: Date;
  updated?: Date;
}

/**
 * @class
 * Initializes a new instance of the NodeParameters class.
 * @constructor
 * Parameter collection for operations on arm node resource.
 *
 * @member {string} [location] Location of the resource.
 * @member {object} [tags] Resource tags.
 * @member {string} [gatewayId] Gateway ID which will manage this node.
 * @member {string} [connectionName] myhost.domain.com
 * @member {string} [userName] User name to be used to connect to node.
 * @member {string} [password] Password associated with user name.
 */
export interface NodeParameters {
  location?: string;
  tags?: any;
  gatewayId?: string;
  connectionName?: string;
  userName?: string;
  password?: string;
}

/**
 * @class
 * Initializes a new instance of the SessionResource class.
 * @constructor
 * The session object.
 *
 * @member {string} [userName] The username connecting to the session.
 * @member {date} [created] UTC date and time when node was first added to
 * management service.
 * @member {date} [updated] UTC date and time when node was last updated.
 */
export interface SessionResource extends Resource {
  userName?: string;
  created?: Date;
  updated?: Date;
}

/**
 * @class
 * Initializes a new instance of the SessionParameters class.
 * @constructor
 * Parameter collection for creation and other operations on sessions.
 *
 * @member {string} [userName] Encrypted User name to be used to connect to
 * node.
 * @member {string} [password] Encrypted Password associated with user name.
 * @member {string} [retentionPeriod] Session retention period. Possible values
 * include: 'Session', 'Persistent'
 * @member {string} [credentialDataFormat] Credential data format. Possible
 * values include: 'RsaEncrypted'
 * @member {string} [encryptionCertificateThumbprint] Encryption certificate
 * thumbprint.
 */
export interface SessionParameters {
  userName?: string;
  password?: string;
  retentionPeriod?: string;
  credentialDataFormat?: string;
  encryptionCertificateThumbprint?: string;
}

/**
 * @class
 * Initializes a new instance of the Version class.
 * @constructor
 * A multipart-numeric version number.
 *
 * @member {number} [major] The leftmost number of the version.
 * @member {number} [minor] The second leftmost number of the version.
 * @member {number} [build] The third number of the version.
 * @member {number} [revision] The fourth number of the version.
 * @member {number} [majorRevision] The MSW of the fourth part.
 * @member {number} [minorRevision] The LSW of the fourth part.
 */
export interface Version {
  major?: number;
  minor?: number;
  build?: number;
  revision?: number;
  majorRevision?: number;
  minorRevision?: number;
}

/**
 * @class
 * Initializes a new instance of the PowerShellSessionResource class.
 * @constructor
 * A PowerShell session resource (practically equivalent to a runspace
 * instance).
 *
 * @member {string} [sessionId] The PowerShell Session ID.
 * @member {string} [state] The runspace state.
 * @member {string} [runspaceAvailability] The availability of the runspace.
 * @member {date} [disconnectedOn] Timestamp of last time the service
 * disconnected from the runspace.
 * @member {date} [expiresOn] Timestamp when the runspace expires.
 * @member {object} [version]
 * @member {number} [version.major] The leftmost number of the version.
 * @member {number} [version.minor] The second leftmost number of the version.
 * @member {number} [version.build] The third number of the version.
 * @member {number} [version.revision] The fourth number of the version.
 * @member {number} [version.majorRevision] The MSW of the fourth part.
 * @member {number} [version.minorRevision] The LSW of the fourth part.
 * @member {string} [powerShellSessionResourceName] Name of the runspace.
 */
export interface PowerShellSessionResource extends Resource {
  sessionId?: string;
  state?: string;
  runspaceAvailability?: string;
  disconnectedOn?: Date;
  expiresOn?: Date;
  version?: Version;
  powerShellSessionResourceName?: string;
}

/**
 * @class
 * Initializes a new instance of the PromptFieldDescription class.
 * @constructor
 * Field description for the implementation of PSHostUserInterface.Prompt
 *
 * @member {string} [name] The name of the prompt.
 * @member {string} [label] The label text of the prompt.
 * @member {string} [helpMessage] The help message of the prompt.
 * @member {boolean} [promptFieldTypeIsList] When set to 'true' the prompt
 * field type is a list of values.
 * @member {string} [promptFieldType] Possible values include: 'String',
 * 'SecureString', 'Credential'
 */
export interface PromptFieldDescription {
  name?: string;
  label?: string;
  helpMessage?: string;
  promptFieldTypeIsList?: boolean;
  promptFieldType?: string;
}

/**
 * @class
 * Initializes a new instance of the PowerShellCommandResult class.
 * @constructor
 * Results from invoking a PowerShell command.
 *
 * @member {number} [messageType] The type of message.
 * @member {string} [foregroundColor] The HTML color string representing the
 * foreground color.
 * @member {string} [backgroundColor] The HTML color string representing the
 * background color.
 * @member {string} [value] Actual result text from the PowerShell Command.
 * @member {string} [prompt] The interactive prompt message.
 * @member {number} [exitCode] The exit code from a executable that was called
 * from PowerShell.
 * @member {number} [id] ID of the prompt message.
 * @member {string} [caption] Text that precedes the prompt.
 * @member {string} [message] Text of the prompt.
 * @member {array} [descriptions] Collection of PromptFieldDescription objects
 * that contains the user input.
 */
export interface PowerShellCommandResult {
  messageType?: number;
  foregroundColor?: string;
  backgroundColor?: string;
  value?: string;
  prompt?: string;
  exitCode?: number;
  id?: number;
  caption?: string;
  message?: string;
  descriptions?: PromptFieldDescription[];
}

/**
 * @class
 * Initializes a new instance of the PowerShellCommandResults class.
 * @constructor
 * A collection of results from a PowerShell command.
 *
 * @member {array} [results]
 * @member {string} [pssession]
 * @member {string} [command]
 * @member {boolean} [completed]
 */
export interface PowerShellCommandResults {
  results?: PowerShellCommandResult[];
  pssession?: string;
  command?: string;
  completed?: boolean;
}

/**
 * @class
 * Initializes a new instance of the PowerShellCommandStatus class.
 * @constructor
 * Result status from invoking a PowerShell command.
 *
 * @member {array} [results]
 * @member {string} [pssession]
 * @member {string} [command]
 * @member {boolean} [completed]
 */
export interface PowerShellCommandStatus extends Resource {
  results?: PowerShellCommandResult[];
  pssession?: string;
  command?: string;
  completed?: boolean;
}

/**
 * @class
 * Initializes a new instance of the PowerShellSessionResources class.
 * @constructor
 * A collection of PowerShell session resources
 *
 * @member {array} [value] Collection of PowerShell session resources.
 * @member {string} [nextLink] The URL to the next set of resources.
 */
export interface PowerShellSessionResources {
  value?: PowerShellSessionResource[];
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the PowerShellCommandParameters class.
 * @constructor
 * The parameters to a PowerShell script execution command.
 *
 * @member {string} [command] Script to execute.
 */
export interface PowerShellCommandParameters {
  command?: string;
}

/**
 * @class
 * Initializes a new instance of the PromptMessageResponse class.
 * @constructor
 * The response to a prompt message.
 *
 * @member {array} [response] The list of responses a cmdlet expects.
 */
export interface PromptMessageResponse {
  response?: string[];
}

/**
 * @class
 * Initializes a new instance of the PowerShellTabCompletionParameters class.
 * @constructor
 * Collection of parameters for PowerShell tab completion.
 *
 * @member {string} [command] Command to get tab completion for.
 */
export interface PowerShellTabCompletionParameters {
  command?: string;
}

/**
 * @class
 * Initializes a new instance of the PowerShellTabCompletionResults class.
 * @constructor
 * An array of strings representing the different values that can be selected
 * through.
 *
 * @member {array} [results]
 */
export interface PowerShellTabCompletionResults {
  results?: string[];
}

/**
 * @class
 * Initializes a new instance of the ErrorModel class.
 * @constructor
 * Error message.
 *
 * @member {number} [code]
 * @member {string} [message]
 * @member {string} [fields]
 */
export interface ErrorModel {
  code?: number;
  message?: string;
  fields?: string;
}


/**
 * @class
 * Initializes a new instance of the GatewayResources class.
 * @constructor
 * Collection of Gateway Resources.
 *
 * @member {string} [nextLink] The URL to the next set of resources.
 */
export interface GatewayResources extends Array<GatewayResource> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the NodeResources class.
 * @constructor
 * A collection of node resource objects.
 *
 * @member {string} [nextLink] The URL to the next set of resources.
 */
export interface NodeResources extends Array<NodeResource> {
  nextLink?: string;
}

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * TensorFlow job settings.
 *
 */
class TensorFlowSettings {
  /**
   * Create a TensorFlowSettings.
   * @property {string} pythonScriptFilePath Python script file path. The
   * python script to execute.
   * @property {string} [pythonInterpreterPath] Python interpreter path. The
   * path to the Python interpreter.
   * @property {string} [masterCommandLineArgs] Master command line arguments.
   * Command line arguments that need to be passed to the python script for the
   * master task.
   * @property {string} [workerCommandLineArgs] Worker command line arguments.
   * Command line arguments that need to be passed to the python script for the
   * worker task. Optional for single process jobs.
   * @property {string} [parameterServerCommandLineArgs] Parameter server
   * command line arguments. Command line arguments that need to be passed to
   * the python script for the parameter server. Optional for single process
   * jobs.
   * @property {number} [workerCount] Worker count. The number of worker tasks.
   * If specified, the value must be less than or equal to (nodeCount *
   * numberOfGPUs per VM). If not specified, the default value is equal to
   * nodeCount. This property can be specified only for distributed TensorFlow
   * training.
   * @property {number} [parameterServerCount] Parameter server count. The
   * number of parameter server tasks. If specified, the value must be less
   * than or equal to nodeCount. If not specified, the default value is equal
   * to 1 for distributed TensorFlow training. This property can be specified
   * only for distributed TensorFlow training.
   */
  constructor() {
  }

  /**
   * Defines the metadata of TensorFlowSettings
   *
   * @returns {object} metadata of TensorFlowSettings
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TensorFlowSettings',
      type: {
        name: 'Composite',
        className: 'TensorFlowSettings',
        modelProperties: {
          pythonScriptFilePath: {
            required: true,
            serializedName: 'pythonScriptFilePath',
            type: {
              name: 'String'
            }
          },
          pythonInterpreterPath: {
            required: false,
            serializedName: 'pythonInterpreterPath',
            type: {
              name: 'String'
            }
          },
          masterCommandLineArgs: {
            required: false,
            serializedName: 'masterCommandLineArgs',
            type: {
              name: 'String'
            }
          },
          workerCommandLineArgs: {
            required: false,
            serializedName: 'workerCommandLineArgs',
            type: {
              name: 'String'
            }
          },
          parameterServerCommandLineArgs: {
            required: false,
            serializedName: 'parameterServerCommandLineArgs',
            type: {
              name: 'String'
            }
          },
          workerCount: {
            required: false,
            serializedName: 'workerCount',
            type: {
              name: 'Number'
            }
          },
          parameterServerCount: {
            required: false,
            serializedName: 'parameterServerCount',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = TensorFlowSettings;

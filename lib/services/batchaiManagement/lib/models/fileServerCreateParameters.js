/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * File Server creation parameters.
 *
 */
class FileServerCreateParameters {
  /**
   * Create a FileServerCreateParameters.
   * @property {string} vmSize VM size. The size of the virtual machine for the
   * File Server. For information about available VM sizes from the Virtual
   * Machines Marketplace, see Sizes for Virtual Machines (Linux).
   * @property {object} sshConfiguration SSH configuration. SSH configuration
   * for the File Server node.
   * @property {array} [sshConfiguration.publicIPsToAllow] List of source IP
   * ranges to allow SSH connection from. The default value is '*' (all source
   * IPs are allowed). Maximum number of IP ranges that can be specified is
   * 400.
   * @property {object} [sshConfiguration.userAccountSettings] Settings for
   * administrator user account to be created on a node. The account can be
   * used to establish SSH connection to the node.
   * @property {string} [sshConfiguration.userAccountSettings.adminUserName]
   * Name of the administrator user account which can be used to SSH to nodes.
   * @property {string}
   * [sshConfiguration.userAccountSettings.adminUserSshPublicKey] SSH public
   * key of the administrator user account.
   * @property {string}
   * [sshConfiguration.userAccountSettings.adminUserPassword] Password of the
   * administrator user account.
   * @property {object} dataDisks Data disks. Settings for the data disks which
   * will be created for the File Server.
   * @property {number} [dataDisks.diskSizeInGB] Disk size in GB for the blank
   * data disks.
   * @property {string} [dataDisks.cachingType] Caching type for the disks.
   * Available values are none (default), readonly, readwrite. Caching type can
   * be set only for VM sizes supporting premium storage. Possible values
   * include: 'none', 'readonly', 'readwrite'
   * @property {number} [dataDisks.diskCount] Number of data disks attached to
   * the File Server. If multiple disks attached, they will be configured in
   * RAID level 0.
   * @property {string} [dataDisks.storageAccountType] Type of storage account
   * to be used on the disk. Possible values are: Standard_LRS or Premium_LRS.
   * Premium storage account type can only be used with VM sizes supporting
   * premium storage. Possible values include: 'Standard_LRS', 'Premium_LRS'
   * @property {object} [subnet] Subnet identifier. Identifier of an existing
   * virtual network subnet to put the File Server in. If not provided, a new
   * virtual network and subnet will be created.
   * @property {string} [subnet.id] The ID of the resource
   */
  constructor() {
  }

  /**
   * Defines the metadata of FileServerCreateParameters
   *
   * @returns {object} metadata of FileServerCreateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'FileServerCreateParameters',
      type: {
        name: 'Composite',
        className: 'FileServerCreateParameters',
        modelProperties: {
          vmSize: {
            required: true,
            serializedName: 'properties.vmSize',
            type: {
              name: 'String'
            }
          },
          sshConfiguration: {
            required: true,
            serializedName: 'properties.sshConfiguration',
            type: {
              name: 'Composite',
              className: 'SshConfiguration'
            }
          },
          dataDisks: {
            required: true,
            serializedName: 'properties.dataDisks',
            type: {
              name: 'Composite',
              className: 'DataDisks'
            }
          },
          subnet: {
            required: false,
            serializedName: 'properties.subnet',
            type: {
              name: 'Composite',
              className: 'ResourceId'
            }
          }
        }
      }
    };
  }
}

module.exports = FileServerCreateParameters;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Snapshot object.
 *
 */
class Snapshot {
  /**
   * Create a Snapshot.
   * @property {uuid} id Snapshot id.
   * @property {string} account Azure Cognitive Service Face account id of the
   * subscriber who created the snapshot by Snapshot - Take.
   * @property {string} type Type of the source object in the snapshot,
   * specified by the subscriber who created the snapshot when calling Snapshot
   * - Take. Currently FaceList, PersonGroup, LargeFaceList and
   * LargePersonGroup are supported. Possible values include: 'FaceList',
   * 'LargeFaceList', 'LargePersonGroup', 'PersonGroup'
   * @property {array} applyScope Array of the target Face subscription ids for
   * the snapshot, specified by the user who created the snapshot when calling
   * Snapshot - Take. For each snapshot, only subscriptions included in the
   * applyScope of Snapshot - Take can apply it.
   * @property {string} [userData] User specified data about the snapshot for
   * any purpose. Length should not exceed 16KB.
   * @property {date} createdTime A combined UTC date and time string that
   * describes the created time of the snapshot. E.g.
   * 2018-12-25T11:41:02.2331413Z.
   * @property {date} lastUpdateTime A combined UTC date and time string that
   * describes the last time when the snapshot was created or updated by
   * Snapshot - Update. E.g. 2018-12-25T11:51:27.8705696Z.
   */
  constructor() {
  }

  /**
   * Defines the metadata of Snapshot
   *
   * @returns {object} metadata of Snapshot
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Snapshot',
      type: {
        name: 'Composite',
        className: 'Snapshot',
        modelProperties: {
          id: {
            required: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          account: {
            required: true,
            serializedName: 'account',
            type: {
              name: 'String'
            }
          },
          type: {
            required: true,
            serializedName: 'type',
            type: {
              name: 'Enum',
              allowedValues: [ 'FaceList', 'LargeFaceList', 'LargePersonGroup', 'PersonGroup' ]
            }
          },
          applyScope: {
            required: true,
            serializedName: 'applyScope',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'UuidElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          userData: {
            required: false,
            serializedName: 'userData',
            constraints: {
              MaxLength: 16384
            },
            type: {
              name: 'String'
            }
          },
          createdTime: {
            required: true,
            serializedName: 'createdTime',
            type: {
              name: 'DateTime'
            }
          },
          lastUpdateTime: {
            required: true,
            serializedName: 'lastUpdateTime',
            type: {
              name: 'DateTime'
            }
          }
        }
      }
    };
  }
}

module.exports = Snapshot;

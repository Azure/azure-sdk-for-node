/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Operation status object. Operation refers to the asynchronous backend task
 * including taking a snapshot and applying a snapshot.
 *
 */
class OperationStatus {
  /**
   * Create a OperationStatus.
   * @property {string} status Operation status: notstarted, running,
   * succeeded, failed. If the operation is requested and waiting to perform,
   * the status is notstarted. If the operation is ongoing in backend, the
   * status is running. Status succeeded means the operation is completed
   * successfully, specifically for snapshot taking operation, it illustrates
   * the snapshot is well taken and ready to apply, and for snapshot applying
   * operation, it presents the target object has finished creating by the
   * snapshot and ready to be used. Status failed is often caused by editing
   * the source object while taking the snapshot or editing the target object
   * while applying the snapshot before completion, see the field "message" to
   * check the failure reason. Possible values include: 'notstarted',
   * 'running', 'succeeded', 'failed'
   * @property {date} createdTime A combined UTC date and time string that
   * describes the time when the operation (take or apply a snapshot) is
   * requested. E.g. 2018-12-25T11:41:02.2331413Z.
   * @property {date} [lastActionTime] A combined UTC date and time string that
   * describes the last time the operation (take or apply a snapshot) is
   * actively migrating data. The lastActionTime will keep increasing until the
   * operation finishes. E.g. 2018-12-25T11:51:27.8705696Z.
   * @property {string} [resourceLocation] When the operation succeeds
   * successfully, for snapshot taking operation the snapshot id will be
   * included in this field, and for snapshot applying operation, the path to
   * get the target object will be returned in this field.
   * @property {string} [message] Show failure message when operation fails
   * (omitted when operation succeeds).
   */
  constructor() {
  }

  /**
   * Defines the metadata of OperationStatus
   *
   * @returns {object} metadata of OperationStatus
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'OperationStatus',
      type: {
        name: 'Composite',
        className: 'OperationStatus',
        modelProperties: {
          status: {
            required: true,
            serializedName: 'status',
            type: {
              name: 'Enum',
              allowedValues: [ 'notstarted', 'running', 'succeeded', 'failed' ]
            }
          },
          createdTime: {
            required: true,
            serializedName: 'createdTime',
            type: {
              name: 'DateTime'
            }
          },
          lastActionTime: {
            required: false,
            serializedName: 'lastActionTime',
            type: {
              name: 'DateTime'
            }
          },
          resourceLocation: {
            required: false,
            serializedName: 'resourceLocation',
            type: {
              name: 'String'
            }
          },
          message: {
            required: false,
            serializedName: 'message',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = OperationStatus;

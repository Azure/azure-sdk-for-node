/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Request body for taking snapshot operation.
 *
 */
class TakeSnapshotRequest {
  /**
   * Create a TakeSnapshotRequest.
   * @property {string} type User specified type for the source object to take
   * snapshot from. Currently FaceList, PersonGroup, LargeFaceList and
   * LargePersonGroup are supported. Possible values include: 'FaceList',
   * 'LargeFaceList', 'LargePersonGroup', 'PersonGroup'
   * @property {string} objectId User specified source object id to take
   * snapshot from.
   * @property {array} applyScope User specified array of target Face
   * subscription ids for the snapshot. For each snapshot, only subscriptions
   * included in the applyScope of Snapshot - Take can apply it.
   * @property {string} [userData] User specified data about the snapshot for
   * any purpose. Length should not exceed 16KB.
   */
  constructor() {
  }

  /**
   * Defines the metadata of TakeSnapshotRequest
   *
   * @returns {object} metadata of TakeSnapshotRequest
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TakeSnapshotRequest',
      type: {
        name: 'Composite',
        className: 'TakeSnapshotRequest',
        modelProperties: {
          type: {
            required: true,
            serializedName: 'type',
            type: {
              name: 'Enum',
              allowedValues: [ 'FaceList', 'LargeFaceList', 'LargePersonGroup', 'PersonGroup' ]
            }
          },
          objectId: {
            required: true,
            serializedName: 'objectId',
            constraints: {
              MaxLength: 64,
              Pattern: /^[a-z0-9-_]+$/
            },
            type: {
              name: 'String'
            }
          },
          applyScope: {
            required: true,
            serializedName: 'applyScope',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'UuidElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          userData: {
            required: false,
            serializedName: 'userData',
            constraints: {
              MaxLength: 16384
            },
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = TakeSnapshotRequest;

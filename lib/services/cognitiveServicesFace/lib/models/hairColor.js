/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Hair color and associated confidence
 *
 */
class HairColor {
  /**
   * Create a HairColor.
   * @property {string} [color] Name of the hair color. Possible values
   * include: 'unknown', 'white', 'gray', 'blond', 'brown', 'red', 'black',
   * 'other'
   * @property {number} [confidence] Confidence level of the color
   */
  constructor() {
  }

  /**
   * Defines the metadata of HairColor
   *
   * @returns {object} metadata of HairColor
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'HairColor',
      type: {
        name: 'Composite',
        className: 'HairColor',
        modelProperties: {
          color: {
            required: false,
            nullable: false,
            serializedName: 'color',
            type: {
              name: 'Enum',
              allowedValues: [ 'unknown', 'white', 'gray', 'blond', 'brown', 'red', 'black', 'other' ]
            }
          },
          confidence: {
            required: false,
            nullable: false,
            serializedName: 'confidence',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = HairColor;

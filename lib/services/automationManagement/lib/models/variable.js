/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Definition of the varible.
 *
 * @extends models['BaseResource']
 */
class Variable extends models['BaseResource'] {
  /**
   * Create a Variable.
   * @member {string} [id] Gets the id of the resource.
   * @member {string} [name] Gets the name of the variable.
   * @member {string} [type] Resource type
   * @member {string} [value] Gets or sets the value of the variable.
   * @member {boolean} [isEncrypted] Gets or sets the encrypted flag of the
   * variable.
   * @member {date} [creationTime] Gets or sets the creation time.
   * @member {date} [lastModifiedTime] Gets or sets the last modified time.
   * @member {string} [description] Gets or sets the description.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of Variable
   *
   * @returns {object} metadata of Variable
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Variable',
      type: {
        name: 'Composite',
        className: 'Variable',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          value: {
            required: false,
            serializedName: 'properties.value',
            type: {
              name: 'String'
            }
          },
          isEncrypted: {
            required: false,
            serializedName: 'properties.isEncrypted',
            type: {
              name: 'Boolean'
            }
          },
          creationTime: {
            required: false,
            serializedName: 'properties.creationTime',
            type: {
              name: 'DateTime'
            }
          },
          lastModifiedTime: {
            required: false,
            serializedName: 'properties.lastModifiedTime',
            type: {
              name: 'DateTime'
            }
          },
          description: {
            required: false,
            serializedName: 'properties.description',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = Variable;

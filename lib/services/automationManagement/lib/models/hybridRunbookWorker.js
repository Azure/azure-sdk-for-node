/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Definition of hybrid runbook worker.
 *
 */
class HybridRunbookWorker {
  /**
   * Create a HybridRunbookWorker.
   * @member {string} [name] Gets or sets the worker machine name.
   * @member {string} [ip] Gets or sets the assigned machine IP address.
   * @member {date} [registrationTime] Gets or sets the registration time of
   * the worker machine.
   * @member {date} [lastSeenDateTime] Last Heartbeat from the Worker
   */
  constructor() {
  }

  /**
   * Defines the metadata of HybridRunbookWorker
   *
   * @returns {object} metadata of HybridRunbookWorker
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'HybridRunbookWorker',
      type: {
        name: 'Composite',
        className: 'HybridRunbookWorker',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          ip: {
            required: false,
            serializedName: 'ip',
            type: {
              name: 'String'
            }
          },
          registrationTime: {
            required: false,
            nullable: false,
            serializedName: 'registrationTime',
            type: {
              name: 'DateTime'
            }
          },
          lastSeenDateTime: {
            required: false,
            nullable: false,
            serializedName: 'lastSeenDateTime',
            type: {
              name: 'DateTime'
            }
          }
        }
      }
    };
  }
}

module.exports = HybridRunbookWorker;

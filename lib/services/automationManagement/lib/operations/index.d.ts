/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as stream from 'stream';
import * as models from '../models';


/**
 * @class
 * AutomationAccountOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface AutomationAccountOperations {


    /**
     * Update an automation account.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} parameters Parameters supplied to the update automation
     * account.
     *
     * @param {object} [parameters.sku] Gets or sets account SKU.
     *
     * @param {string} parameters.sku.name Gets or sets the SKU name of the
     * account. Possible values include: 'Free', 'Basic'
     *
     * @param {string} [parameters.sku.family] Gets or sets the SKU family.
     *
     * @param {number} [parameters.sku.capacity] Gets or sets the SKU capacity.
     *
     * @param {string} [parameters.name] Gets or sets the name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AutomationAccount>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, parameters: models.AutomationAccountUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AutomationAccount>>;

    /**
     * Update an automation account.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} parameters Parameters supplied to the update automation
     * account.
     *
     * @param {object} [parameters.sku] Gets or sets account SKU.
     *
     * @param {string} parameters.sku.name Gets or sets the SKU name of the
     * account. Possible values include: 'Free', 'Basic'
     *
     * @param {string} [parameters.sku.family] Gets or sets the SKU family.
     *
     * @param {number} [parameters.sku.capacity] Gets or sets the SKU capacity.
     *
     * @param {string} [parameters.name] Gets or sets the name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AutomationAccount} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AutomationAccount} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AutomationAccount} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, automationAccountName: string, parameters: models.AutomationAccountUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AutomationAccount>;
    update(resourceGroupName: string, automationAccountName: string, parameters: models.AutomationAccountUpdateParameters, callback: ServiceCallback<models.AutomationAccount>): void;
    update(resourceGroupName: string, automationAccountName: string, parameters: models.AutomationAccountUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AutomationAccount>): void;


    /**
     * Create or update automation account.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} parameters Parameters supplied to the create or update
     * automation account.
     *
     * @param {object} [parameters.sku] Gets or sets account SKU.
     *
     * @param {string} parameters.sku.name Gets or sets the SKU name of the
     * account. Possible values include: 'Free', 'Basic'
     *
     * @param {string} [parameters.sku.family] Gets or sets the SKU family.
     *
     * @param {number} [parameters.sku.capacity] Gets or sets the SKU capacity.
     *
     * @param {string} [parameters.name] Gets or sets name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AutomationAccount>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, parameters: models.AutomationAccountCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AutomationAccount>>;

    /**
     * Create or update automation account.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} parameters Parameters supplied to the create or update
     * automation account.
     *
     * @param {object} [parameters.sku] Gets or sets account SKU.
     *
     * @param {string} parameters.sku.name Gets or sets the SKU name of the
     * account. Possible values include: 'Free', 'Basic'
     *
     * @param {string} [parameters.sku.family] Gets or sets the SKU family.
     *
     * @param {number} [parameters.sku.capacity] Gets or sets the SKU capacity.
     *
     * @param {string} [parameters.name] Gets or sets name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AutomationAccount} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AutomationAccount} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AutomationAccount} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, automationAccountName: string, parameters: models.AutomationAccountCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AutomationAccount>;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, parameters: models.AutomationAccountCreateOrUpdateParameters, callback: ServiceCallback<models.AutomationAccount>): void;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, parameters: models.AutomationAccountCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AutomationAccount>): void;


    /**
     * Delete an automation account.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete an automation account.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Get information about an Automation Account.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AutomationAccount>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AutomationAccount>>;

    /**
     * Get information about an Automation Account.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AutomationAccount} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AutomationAccount} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AutomationAccount} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AutomationAccount>;
    get(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.AutomationAccount>): void;
    get(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AutomationAccount>): void;


    /**
     * Retrieve a list of accounts within a given resource group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AutomationAccountListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AutomationAccountListResult>>;

    /**
     * Retrieve a list of accounts within a given resource group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AutomationAccountListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AutomationAccountListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AutomationAccountListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AutomationAccountListResult>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.AutomationAccountListResult>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AutomationAccountListResult>): void;


    /**
     * @summary Lists the Automation Accounts within an Azure subscription.
     *
     * Retrieve a list of accounts within a given subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AutomationAccountListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AutomationAccountListResult>>;

    /**
     * @summary Lists the Automation Accounts within an Azure subscription.
     *
     * Retrieve a list of accounts within a given subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AutomationAccountListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AutomationAccountListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AutomationAccountListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AutomationAccountListResult>;
    list(callback: ServiceCallback<models.AutomationAccountListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AutomationAccountListResult>): void;


    /**
     * Retrieve a list of accounts within a given resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AutomationAccountListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AutomationAccountListResult>>;

    /**
     * Retrieve a list of accounts within a given resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AutomationAccountListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AutomationAccountListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AutomationAccountListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AutomationAccountListResult>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.AutomationAccountListResult>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AutomationAccountListResult>): void;


    /**
     * @summary Lists the Automation Accounts within an Azure subscription.
     *
     * Retrieve a list of accounts within a given subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AutomationAccountListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AutomationAccountListResult>>;

    /**
     * @summary Lists the Automation Accounts within an Azure subscription.
     *
     * Retrieve a list of accounts within a given subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AutomationAccountListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AutomationAccountListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AutomationAccountListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AutomationAccountListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.AutomationAccountListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AutomationAccountListResult>): void;
}

/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface Operations {


    /**
     * Lists all of the available Automation REST API operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists all of the available Automation REST API operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    list(callback: ServiceCallback<models.OperationListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;
}

/**
 * @class
 * StatisticsOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface StatisticsOperations {


    /**
     * Retrieve the statistics for the account.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StatisticsListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StatisticsListResult>>;

    /**
     * Retrieve the statistics for the account.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StatisticsListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StatisticsListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StatisticsListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.StatisticsListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.StatisticsListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StatisticsListResult>): void;
}

/**
 * @class
 * Usages
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface Usages {


    /**
     * Retrieve the usage for the account id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<UsageListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.UsageListResult>>;

    /**
     * Retrieve the usage for the account id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {UsageListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {UsageListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link UsageListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.UsageListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.UsageListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.UsageListResult>): void;
}

/**
 * @class
 * Keys
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface Keys {


    /**
     * Retrieve the automation keys for an account.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<KeyListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.KeyListResult>>;

    /**
     * Retrieve the automation keys for an account.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {KeyListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {KeyListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link KeyListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.KeyListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.KeyListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.KeyListResult>): void;
}

/**
 * @class
 * CertificateOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface CertificateOperations {


    /**
     * Delete the certificate.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} certificateName The name of certificate.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, certificateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete the certificate.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} certificateName The name of certificate.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, certificateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, certificateName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, certificateName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve the certificate identified by certificate name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} certificateName The name of certificate.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Certificate>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, certificateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Certificate>>;

    /**
     * Retrieve the certificate identified by certificate name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} certificateName The name of certificate.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Certificate} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Certificate} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Certificate} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, certificateName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Certificate>;
    get(resourceGroupName: string, automationAccountName: string, certificateName: string, callback: ServiceCallback<models.Certificate>): void;
    get(resourceGroupName: string, automationAccountName: string, certificateName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Certificate>): void;


    /**
     * Create a certificate.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} certificateName The parameters supplied to the create or
     * update certificate operation.
     *
     * @param {object} parameters The parameters supplied to the create or update
     * certificate operation.
     *
     * @param {string} parameters.name Gets or sets the name of the certificate.
     *
     * @param {string} parameters.base64Value Gets or sets the base64 encoded value
     * of the certificate.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * certificate.
     *
     * @param {string} [parameters.thumbprint] Gets or sets the thumbprint of the
     * certificate.
     *
     * @param {boolean} [parameters.isExportable] Gets or sets the is exportable
     * flag of the certificate.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Certificate>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, certificateName: string, parameters: models.CertificateCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Certificate>>;

    /**
     * Create a certificate.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} certificateName The parameters supplied to the create or
     * update certificate operation.
     *
     * @param {object} parameters The parameters supplied to the create or update
     * certificate operation.
     *
     * @param {string} parameters.name Gets or sets the name of the certificate.
     *
     * @param {string} parameters.base64Value Gets or sets the base64 encoded value
     * of the certificate.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * certificate.
     *
     * @param {string} [parameters.thumbprint] Gets or sets the thumbprint of the
     * certificate.
     *
     * @param {boolean} [parameters.isExportable] Gets or sets the is exportable
     * flag of the certificate.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Certificate} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Certificate} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Certificate} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, automationAccountName: string, certificateName: string, parameters: models.CertificateCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Certificate>;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, certificateName: string, parameters: models.CertificateCreateOrUpdateParameters, callback: ServiceCallback<models.Certificate>): void;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, certificateName: string, parameters: models.CertificateCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Certificate>): void;


    /**
     * Update a certificate.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} certificateName The parameters supplied to the update
     * certificate operation.
     *
     * @param {object} parameters The parameters supplied to the update certificate
     * operation.
     *
     * @param {string} [parameters.name] Gets or sets the name of the certificate.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * certificate.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Certificate>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, certificateName: string, parameters: models.CertificateUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Certificate>>;

    /**
     * Update a certificate.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} certificateName The parameters supplied to the update
     * certificate operation.
     *
     * @param {object} parameters The parameters supplied to the update certificate
     * operation.
     *
     * @param {string} [parameters.name] Gets or sets the name of the certificate.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * certificate.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Certificate} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Certificate} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Certificate} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, automationAccountName: string, certificateName: string, parameters: models.CertificateUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Certificate>;
    update(resourceGroupName: string, automationAccountName: string, certificateName: string, parameters: models.CertificateUpdateParameters, callback: ServiceCallback<models.Certificate>): void;
    update(resourceGroupName: string, automationAccountName: string, certificateName: string, parameters: models.CertificateUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Certificate>): void;


    /**
     * Retrieve a list of certificates.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<CertificateListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CertificateListResult>>;

    /**
     * Retrieve a list of certificates.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {CertificateListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {CertificateListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link CertificateListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CertificateListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.CertificateListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CertificateListResult>): void;


    /**
     * Retrieve a list of certificates.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<CertificateListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CertificateListResult>>;

    /**
     * Retrieve a list of certificates.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {CertificateListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {CertificateListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link CertificateListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CertificateListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.CertificateListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CertificateListResult>): void;
}

/**
 * @class
 * ConnectionOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface ConnectionOperations {


    /**
     * Delete the connection.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} connectionName The name of connection.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Connection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, connectionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Connection>>;

    /**
     * Delete the connection.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} connectionName The name of connection.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Connection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Connection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Connection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, connectionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Connection>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, connectionName: string, callback: ServiceCallback<models.Connection>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, connectionName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Connection>): void;


    /**
     * Retrieve the connection identified by connection name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} connectionName The name of connection.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Connection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, connectionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Connection>>;

    /**
     * Retrieve the connection identified by connection name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} connectionName The name of connection.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Connection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Connection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Connection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, connectionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Connection>;
    get(resourceGroupName: string, automationAccountName: string, connectionName: string, callback: ServiceCallback<models.Connection>): void;
    get(resourceGroupName: string, automationAccountName: string, connectionName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Connection>): void;


    /**
     * Create or update a connection.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} connectionName The parameters supplied to the create or
     * update connection operation.
     *
     * @param {object} parameters The parameters supplied to the create or update
     * connection operation.
     *
     * @param {string} parameters.name Gets or sets the name of the connection.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * connection.
     *
     * @param {object} parameters.connectionType Gets or sets the connectionType of
     * the connection.
     *
     * @param {string} [parameters.connectionType.name] Gets or sets the name of
     * the connection type.
     *
     * @param {object} [parameters.fieldDefinitionValues] Gets or sets the field
     * definition properties of the connection.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Connection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, connectionName: string, parameters: models.ConnectionCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Connection>>;

    /**
     * Create or update a connection.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} connectionName The parameters supplied to the create or
     * update connection operation.
     *
     * @param {object} parameters The parameters supplied to the create or update
     * connection operation.
     *
     * @param {string} parameters.name Gets or sets the name of the connection.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * connection.
     *
     * @param {object} parameters.connectionType Gets or sets the connectionType of
     * the connection.
     *
     * @param {string} [parameters.connectionType.name] Gets or sets the name of
     * the connection type.
     *
     * @param {object} [parameters.fieldDefinitionValues] Gets or sets the field
     * definition properties of the connection.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Connection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Connection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Connection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, automationAccountName: string, connectionName: string, parameters: models.ConnectionCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Connection>;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, connectionName: string, parameters: models.ConnectionCreateOrUpdateParameters, callback: ServiceCallback<models.Connection>): void;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, connectionName: string, parameters: models.ConnectionCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Connection>): void;


    /**
     * Update a connection.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} connectionName The parameters supplied to the update a
     * connection operation.
     *
     * @param {object} parameters The parameters supplied to the update a
     * connection operation.
     *
     * @param {string} [parameters.name] Gets or sets the name of the connection.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * connection.
     *
     * @param {object} [parameters.fieldDefinitionValues] Gets or sets the field
     * definition values of the connection.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Connection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, connectionName: string, parameters: models.ConnectionUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Connection>>;

    /**
     * Update a connection.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} connectionName The parameters supplied to the update a
     * connection operation.
     *
     * @param {object} parameters The parameters supplied to the update a
     * connection operation.
     *
     * @param {string} [parameters.name] Gets or sets the name of the connection.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * connection.
     *
     * @param {object} [parameters.fieldDefinitionValues] Gets or sets the field
     * definition values of the connection.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Connection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Connection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Connection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, automationAccountName: string, connectionName: string, parameters: models.ConnectionUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Connection>;
    update(resourceGroupName: string, automationAccountName: string, connectionName: string, parameters: models.ConnectionUpdateParameters, callback: ServiceCallback<models.Connection>): void;
    update(resourceGroupName: string, automationAccountName: string, connectionName: string, parameters: models.ConnectionUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Connection>): void;


    /**
     * Retrieve a list of connections.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ConnectionListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ConnectionListResult>>;

    /**
     * Retrieve a list of connections.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ConnectionListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ConnectionListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ConnectionListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ConnectionListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.ConnectionListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ConnectionListResult>): void;


    /**
     * Retrieve a list of connections.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ConnectionListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ConnectionListResult>>;

    /**
     * Retrieve a list of connections.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ConnectionListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ConnectionListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ConnectionListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ConnectionListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.ConnectionListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ConnectionListResult>): void;
}

/**
 * @class
 * ConnectionTypeOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface ConnectionTypeOperations {


    /**
     * Delete the connection type.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} connectionTypeName The name of connection type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, connectionTypeName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete the connection type.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} connectionTypeName The name of connection type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, connectionTypeName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, connectionTypeName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, connectionTypeName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve the connection type identified by connection type name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} connectionTypeName The name of connection type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ConnectionType>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, connectionTypeName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ConnectionType>>;

    /**
     * Retrieve the connection type identified by connection type name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} connectionTypeName The name of connection type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ConnectionType} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ConnectionType} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ConnectionType} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, connectionTypeName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ConnectionType>;
    get(resourceGroupName: string, automationAccountName: string, connectionTypeName: string, callback: ServiceCallback<models.ConnectionType>): void;
    get(resourceGroupName: string, automationAccountName: string, connectionTypeName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ConnectionType>): void;


    /**
     * Create a connection type.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} connectionTypeName The parameters supplied to the create or
     * update connection type operation.
     *
     * @param {object} parameters The parameters supplied to the create or update
     * connection type operation.
     *
     * @param {string} parameters.name Gets or sets the name of the connection
     * type.
     *
     * @param {boolean} [parameters.isGlobal] Gets or sets a Boolean value to
     * indicate if the connection type is global.
     *
     * @param {object} parameters.fieldDefinitions Gets or sets the field
     * definitions of the connection type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ConnectionType>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, connectionTypeName: string, parameters: models.ConnectionTypeCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ConnectionType>>;

    /**
     * Create a connection type.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} connectionTypeName The parameters supplied to the create or
     * update connection type operation.
     *
     * @param {object} parameters The parameters supplied to the create or update
     * connection type operation.
     *
     * @param {string} parameters.name Gets or sets the name of the connection
     * type.
     *
     * @param {boolean} [parameters.isGlobal] Gets or sets a Boolean value to
     * indicate if the connection type is global.
     *
     * @param {object} parameters.fieldDefinitions Gets or sets the field
     * definitions of the connection type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ConnectionType} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ConnectionType} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ConnectionType} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, automationAccountName: string, connectionTypeName: string, parameters: models.ConnectionTypeCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ConnectionType>;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, connectionTypeName: string, parameters: models.ConnectionTypeCreateOrUpdateParameters, callback: ServiceCallback<models.ConnectionType>): void;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, connectionTypeName: string, parameters: models.ConnectionTypeCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ConnectionType>): void;


    /**
     * Retrieve a list of connection types.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ConnectionTypeListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ConnectionTypeListResult>>;

    /**
     * Retrieve a list of connection types.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ConnectionTypeListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ConnectionTypeListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ConnectionTypeListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ConnectionTypeListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.ConnectionTypeListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ConnectionTypeListResult>): void;


    /**
     * Retrieve a list of connection types.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ConnectionTypeListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ConnectionTypeListResult>>;

    /**
     * Retrieve a list of connection types.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ConnectionTypeListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ConnectionTypeListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ConnectionTypeListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ConnectionTypeListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.ConnectionTypeListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ConnectionTypeListResult>): void;
}

/**
 * @class
 * CredentialOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface CredentialOperations {


    /**
     * Delete the credential.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} credentialName The name of credential.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, credentialName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete the credential.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} credentialName The name of credential.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, credentialName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, credentialName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, credentialName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve the credential identified by credential name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} credentialName The name of credential.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Credential>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, credentialName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Credential>>;

    /**
     * Retrieve the credential identified by credential name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} credentialName The name of credential.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Credential} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Credential} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Credential} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, credentialName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Credential>;
    get(resourceGroupName: string, automationAccountName: string, credentialName: string, callback: ServiceCallback<models.Credential>): void;
    get(resourceGroupName: string, automationAccountName: string, credentialName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Credential>): void;


    /**
     * Create a credential.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} credentialName The parameters supplied to the create or
     * update credential operation.
     *
     * @param {object} parameters The parameters supplied to the create or update
     * credential operation.
     *
     * @param {string} parameters.name Gets or sets the name of the credential.
     *
     * @param {string} parameters.userName Gets or sets the user name of the
     * credential.
     *
     * @param {string} parameters.password Gets or sets the password of the
     * credential.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * credential.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Credential>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, credentialName: string, parameters: models.CredentialCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Credential>>;

    /**
     * Create a credential.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} credentialName The parameters supplied to the create or
     * update credential operation.
     *
     * @param {object} parameters The parameters supplied to the create or update
     * credential operation.
     *
     * @param {string} parameters.name Gets or sets the name of the credential.
     *
     * @param {string} parameters.userName Gets or sets the user name of the
     * credential.
     *
     * @param {string} parameters.password Gets or sets the password of the
     * credential.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * credential.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Credential} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Credential} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Credential} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, automationAccountName: string, credentialName: string, parameters: models.CredentialCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Credential>;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, credentialName: string, parameters: models.CredentialCreateOrUpdateParameters, callback: ServiceCallback<models.Credential>): void;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, credentialName: string, parameters: models.CredentialCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Credential>): void;


    /**
     * Update a credential.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} credentialName The parameters supplied to the Update
     * credential operation.
     *
     * @param {object} parameters The parameters supplied to the Update credential
     * operation.
     *
     * @param {string} [parameters.name] Gets or sets the name of the credential.
     *
     * @param {string} [parameters.userName] Gets or sets the user name of the
     * credential.
     *
     * @param {string} [parameters.password] Gets or sets the password of the
     * credential.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * credential.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Credential>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, credentialName: string, parameters: models.CredentialUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Credential>>;

    /**
     * Update a credential.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} credentialName The parameters supplied to the Update
     * credential operation.
     *
     * @param {object} parameters The parameters supplied to the Update credential
     * operation.
     *
     * @param {string} [parameters.name] Gets or sets the name of the credential.
     *
     * @param {string} [parameters.userName] Gets or sets the user name of the
     * credential.
     *
     * @param {string} [parameters.password] Gets or sets the password of the
     * credential.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * credential.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Credential} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Credential} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Credential} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, automationAccountName: string, credentialName: string, parameters: models.CredentialUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Credential>;
    update(resourceGroupName: string, automationAccountName: string, credentialName: string, parameters: models.CredentialUpdateParameters, callback: ServiceCallback<models.Credential>): void;
    update(resourceGroupName: string, automationAccountName: string, credentialName: string, parameters: models.CredentialUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Credential>): void;


    /**
     * Retrieve a list of credentials.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<CredentialListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CredentialListResult>>;

    /**
     * Retrieve a list of credentials.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {CredentialListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {CredentialListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link CredentialListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CredentialListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.CredentialListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CredentialListResult>): void;


    /**
     * Retrieve a list of credentials.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<CredentialListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CredentialListResult>>;

    /**
     * Retrieve a list of credentials.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {CredentialListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {CredentialListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link CredentialListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CredentialListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.CredentialListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CredentialListResult>): void;
}

/**
 * @class
 * DscConfigurationOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface DscConfigurationOperations {


    /**
     * Delete the dsc configuration identified by configuration name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} configurationName The configuration name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, configurationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete the dsc configuration identified by configuration name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} configurationName The configuration name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, configurationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, configurationName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, configurationName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve the configuration identified by configuration name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} configurationName The configuration name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscConfiguration>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, configurationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscConfiguration>>;

    /**
     * Retrieve the configuration identified by configuration name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} configurationName The configuration name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscConfiguration} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscConfiguration} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscConfiguration} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, configurationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscConfiguration>;
    get(resourceGroupName: string, automationAccountName: string, configurationName: string, callback: ServiceCallback<models.DscConfiguration>): void;
    get(resourceGroupName: string, automationAccountName: string, configurationName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscConfiguration>): void;


    /**
     * Create the configuration identified by configuration name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} configurationName The create or update parameters for
     * configuration.
     *
     * @param {object} parameters The create or update parameters for
     * configuration.
     *
     * @param {boolean} [parameters.logVerbose] Gets or sets verbose log option.
     *
     * @param {boolean} [parameters.logProgress] Gets or sets progress log option.
     *
     * @param {object} parameters.source Gets or sets the source.
     *
     * @param {object} [parameters.source.hash] Gets or sets the hash.
     *
     * @param {string} parameters.source.hash.algorithm Gets or sets the content
     * hash algorithm used to hash the content.
     *
     * @param {string} parameters.source.hash.value Gets or sets expected hash
     * value of the content.
     *
     * @param {string} [parameters.source.type] Gets or sets the content source
     * type. Possible values include: 'embeddedContent', 'uri'
     *
     * @param {string} [parameters.source.value] Gets or sets the value of the
     * content. This is based on the content source type.
     *
     * @param {string} [parameters.source.version] Gets or sets the version of the
     * content.
     *
     * @param {object} [parameters.parameters] Gets or sets the configuration
     * parameters.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * configuration.
     *
     * @param {string} [parameters.name] Gets or sets name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscConfiguration>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, configurationName: string, parameters: models.DscConfigurationCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscConfiguration>>;

    /**
     * Create the configuration identified by configuration name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} configurationName The create or update parameters for
     * configuration.
     *
     * @param {object} parameters The create or update parameters for
     * configuration.
     *
     * @param {boolean} [parameters.logVerbose] Gets or sets verbose log option.
     *
     * @param {boolean} [parameters.logProgress] Gets or sets progress log option.
     *
     * @param {object} parameters.source Gets or sets the source.
     *
     * @param {object} [parameters.source.hash] Gets or sets the hash.
     *
     * @param {string} parameters.source.hash.algorithm Gets or sets the content
     * hash algorithm used to hash the content.
     *
     * @param {string} parameters.source.hash.value Gets or sets expected hash
     * value of the content.
     *
     * @param {string} [parameters.source.type] Gets or sets the content source
     * type. Possible values include: 'embeddedContent', 'uri'
     *
     * @param {string} [parameters.source.value] Gets or sets the value of the
     * content. This is based on the content source type.
     *
     * @param {string} [parameters.source.version] Gets or sets the version of the
     * content.
     *
     * @param {object} [parameters.parameters] Gets or sets the configuration
     * parameters.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * configuration.
     *
     * @param {string} [parameters.name] Gets or sets name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscConfiguration} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscConfiguration} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscConfiguration} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, automationAccountName: string, configurationName: string, parameters: models.DscConfigurationCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscConfiguration>;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, configurationName: string, parameters: models.DscConfigurationCreateOrUpdateParameters, callback: ServiceCallback<models.DscConfiguration>): void;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, configurationName: string, parameters: models.DscConfigurationCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscConfiguration>): void;


    /**
     * Create the configuration identified by configuration name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} configurationName The create or update parameters for
     * configuration.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.parameters] The create or update parameters for
     * configuration.
     *
     * @param {boolean} [options.parameters.logVerbose] Gets or sets verbose log
     * option.
     *
     * @param {boolean} [options.parameters.logProgress] Gets or sets progress log
     * option.
     *
     * @param {object} options.parameters.source Gets or sets the source.
     *
     * @param {object} [options.parameters.source.hash] Gets or sets the hash.
     *
     * @param {string} options.parameters.source.hash.algorithm Gets or sets the
     * content hash algorithm used to hash the content.
     *
     * @param {string} options.parameters.source.hash.value Gets or sets expected
     * hash value of the content.
     *
     * @param {string} [options.parameters.source.type] Gets or sets the content
     * source type. Possible values include: 'embeddedContent', 'uri'
     *
     * @param {string} [options.parameters.source.value] Gets or sets the value of
     * the content. This is based on the content source type.
     *
     * @param {string} [options.parameters.source.version] Gets or sets the version
     * of the content.
     *
     * @param {object} [options.parameters.parameters] Gets or sets the
     * configuration parameters.
     *
     * @param {string} [options.parameters.description] Gets or sets the
     * description of the configuration.
     *
     * @param {string} [options.parameters.name] Gets or sets name of the resource.
     *
     * @param {object} [options.parameters.tags] Gets or sets the tags attached to
     * the resource.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscConfiguration>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, configurationName: string, options?: { parameters? : models.DscConfigurationUpdateParameters, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscConfiguration>>;

    /**
     * Create the configuration identified by configuration name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} configurationName The create or update parameters for
     * configuration.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.parameters] The create or update parameters for
     * configuration.
     *
     * @param {boolean} [options.parameters.logVerbose] Gets or sets verbose log
     * option.
     *
     * @param {boolean} [options.parameters.logProgress] Gets or sets progress log
     * option.
     *
     * @param {object} options.parameters.source Gets or sets the source.
     *
     * @param {object} [options.parameters.source.hash] Gets or sets the hash.
     *
     * @param {string} options.parameters.source.hash.algorithm Gets or sets the
     * content hash algorithm used to hash the content.
     *
     * @param {string} options.parameters.source.hash.value Gets or sets expected
     * hash value of the content.
     *
     * @param {string} [options.parameters.source.type] Gets or sets the content
     * source type. Possible values include: 'embeddedContent', 'uri'
     *
     * @param {string} [options.parameters.source.value] Gets or sets the value of
     * the content. This is based on the content source type.
     *
     * @param {string} [options.parameters.source.version] Gets or sets the version
     * of the content.
     *
     * @param {object} [options.parameters.parameters] Gets or sets the
     * configuration parameters.
     *
     * @param {string} [options.parameters.description] Gets or sets the
     * description of the configuration.
     *
     * @param {string} [options.parameters.name] Gets or sets name of the resource.
     *
     * @param {object} [options.parameters.tags] Gets or sets the tags attached to
     * the resource.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscConfiguration} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscConfiguration} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscConfiguration} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, automationAccountName: string, configurationName: string, options?: { parameters? : models.DscConfigurationUpdateParameters, customHeaders? : { [headerName: string]: string; } }): Promise<models.DscConfiguration>;
    update(resourceGroupName: string, automationAccountName: string, configurationName: string, callback: ServiceCallback<models.DscConfiguration>): void;
    update(resourceGroupName: string, automationAccountName: string, configurationName: string, options: { parameters? : models.DscConfigurationUpdateParameters, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscConfiguration>): void;


    /**
     * Retrieve the configuration script identified by configuration name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} configurationName The configuration name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Object>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getContentWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, configurationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<stream.Readable>>;

    /**
     * Retrieve the configuration script identified by configuration name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} configurationName The configuration name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Object} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Object} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getContent(resourceGroupName: string, automationAccountName: string, configurationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<stream.Readable>;
    getContent(resourceGroupName: string, automationAccountName: string, configurationName: string, callback: ServiceCallback<stream.Readable>): void;
    getContent(resourceGroupName: string, automationAccountName: string, configurationName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<stream.Readable>): void;


    /**
     * Retrieve a list of configurations.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {number} [options.skip] The number of rows to skip.
     *
     * @param {number} [options.top] The the number of rows to take.
     *
     * @param {string} [options.inlinecount] Return total rows.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscConfigurationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, skip? : number, top? : number, inlinecount? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscConfigurationListResult>>;

    /**
     * Retrieve a list of configurations.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {number} [options.skip] The number of rows to skip.
     *
     * @param {number} [options.top] The the number of rows to take.
     *
     * @param {string} [options.inlinecount] Return total rows.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscConfigurationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscConfigurationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscConfigurationListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, skip? : number, top? : number, inlinecount? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.DscConfigurationListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.DscConfigurationListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { filter? : string, skip? : number, top? : number, inlinecount? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscConfigurationListResult>): void;


    /**
     * Retrieve a list of configurations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscConfigurationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscConfigurationListResult>>;

    /**
     * Retrieve a list of configurations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscConfigurationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscConfigurationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscConfigurationListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscConfigurationListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.DscConfigurationListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscConfigurationListResult>): void;
}

/**
 * @class
 * HybridRunbookWorkerGroupOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface HybridRunbookWorkerGroupOperations {


    /**
     * Delete a hybrid runbook worker group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} hybridRunbookWorkerGroupName The hybrid runbook worker group
     * name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, hybridRunbookWorkerGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete a hybrid runbook worker group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} hybridRunbookWorkerGroupName The hybrid runbook worker group
     * name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, hybridRunbookWorkerGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, hybridRunbookWorkerGroupName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, hybridRunbookWorkerGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve a hybrid runbook worker group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} hybridRunbookWorkerGroupName The hybrid runbook worker group
     * name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<HybridRunbookWorkerGroup>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, hybridRunbookWorkerGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.HybridRunbookWorkerGroup>>;

    /**
     * Retrieve a hybrid runbook worker group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} hybridRunbookWorkerGroupName The hybrid runbook worker group
     * name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {HybridRunbookWorkerGroup} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {HybridRunbookWorkerGroup} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link HybridRunbookWorkerGroup} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, hybridRunbookWorkerGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.HybridRunbookWorkerGroup>;
    get(resourceGroupName: string, automationAccountName: string, hybridRunbookWorkerGroupName: string, callback: ServiceCallback<models.HybridRunbookWorkerGroup>): void;
    get(resourceGroupName: string, automationAccountName: string, hybridRunbookWorkerGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.HybridRunbookWorkerGroup>): void;


    /**
     * Update a hybrid runbook worker group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} hybridRunbookWorkerGroupName The hybrid runbook worker group
     * name
     *
     * @param {object} parameters The hybrid runbook worker group
     *
     * @param {object} [parameters.credential] Sets the credential of a worker
     * group.
     *
     * @param {string} [parameters.credential.name] Gets or sets the name of the
     * credential.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<HybridRunbookWorkerGroup>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, hybridRunbookWorkerGroupName: string, parameters: models.HybridRunbookWorkerGroupUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.HybridRunbookWorkerGroup>>;

    /**
     * Update a hybrid runbook worker group.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} hybridRunbookWorkerGroupName The hybrid runbook worker group
     * name
     *
     * @param {object} parameters The hybrid runbook worker group
     *
     * @param {object} [parameters.credential] Sets the credential of a worker
     * group.
     *
     * @param {string} [parameters.credential.name] Gets or sets the name of the
     * credential.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {HybridRunbookWorkerGroup} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {HybridRunbookWorkerGroup} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link HybridRunbookWorkerGroup} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, automationAccountName: string, hybridRunbookWorkerGroupName: string, parameters: models.HybridRunbookWorkerGroupUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.HybridRunbookWorkerGroup>;
    update(resourceGroupName: string, automationAccountName: string, hybridRunbookWorkerGroupName: string, parameters: models.HybridRunbookWorkerGroupUpdateParameters, callback: ServiceCallback<models.HybridRunbookWorkerGroup>): void;
    update(resourceGroupName: string, automationAccountName: string, hybridRunbookWorkerGroupName: string, parameters: models.HybridRunbookWorkerGroupUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.HybridRunbookWorkerGroup>): void;


    /**
     * Retrieve a list of hybrid runbook worker groups.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<HybridRunbookWorkerGroupsListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.HybridRunbookWorkerGroupsListResult>>;

    /**
     * Retrieve a list of hybrid runbook worker groups.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {HybridRunbookWorkerGroupsListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {HybridRunbookWorkerGroupsListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link HybridRunbookWorkerGroupsListResult} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.HybridRunbookWorkerGroupsListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.HybridRunbookWorkerGroupsListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.HybridRunbookWorkerGroupsListResult>): void;


    /**
     * Retrieve a list of hybrid runbook worker groups.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<HybridRunbookWorkerGroupsListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.HybridRunbookWorkerGroupsListResult>>;

    /**
     * Retrieve a list of hybrid runbook worker groups.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {HybridRunbookWorkerGroupsListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {HybridRunbookWorkerGroupsListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link HybridRunbookWorkerGroupsListResult} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.HybridRunbookWorkerGroupsListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.HybridRunbookWorkerGroupsListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.HybridRunbookWorkerGroupsListResult>): void;
}

/**
 * @class
 * JobScheduleOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface JobScheduleOperations {


    /**
     * Delete the job schedule identified by job schedule name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {uuid} jobScheduleId The job schedule name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, jobScheduleId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete the job schedule identified by job schedule name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {uuid} jobScheduleId The job schedule name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, jobScheduleId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, jobScheduleId: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, jobScheduleId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve the job schedule identified by job schedule name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {uuid} jobScheduleId The job schedule name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobSchedule>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, jobScheduleId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobSchedule>>;

    /**
     * Retrieve the job schedule identified by job schedule name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {uuid} jobScheduleId The job schedule name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobSchedule} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobSchedule} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobSchedule} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, jobScheduleId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JobSchedule>;
    get(resourceGroupName: string, automationAccountName: string, jobScheduleId: string, callback: ServiceCallback<models.JobSchedule>): void;
    get(resourceGroupName: string, automationAccountName: string, jobScheduleId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobSchedule>): void;


    /**
     * Create a job schedule.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {uuid} jobScheduleId The job schedule name.
     *
     * @param {object} parameters The parameters supplied to the create job
     * schedule operation.
     *
     * @param {object} parameters.schedule Gets or sets the schedule.
     *
     * @param {string} [parameters.schedule.name] Gets or sets the name of the
     * Schedule.
     *
     * @param {object} parameters.runbook Gets or sets the runbook.
     *
     * @param {string} [parameters.runbook.name] Gets or sets the name of the
     * runbook.
     *
     * @param {string} [parameters.runOn] Gets or sets the hybrid worker group that
     * the scheduled job should run on.
     *
     * @param {object} [parameters.parameters] Gets or sets a list of job
     * properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobSchedule>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, jobScheduleId: string, parameters: models.JobScheduleCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobSchedule>>;

    /**
     * Create a job schedule.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {uuid} jobScheduleId The job schedule name.
     *
     * @param {object} parameters The parameters supplied to the create job
     * schedule operation.
     *
     * @param {object} parameters.schedule Gets or sets the schedule.
     *
     * @param {string} [parameters.schedule.name] Gets or sets the name of the
     * Schedule.
     *
     * @param {object} parameters.runbook Gets or sets the runbook.
     *
     * @param {string} [parameters.runbook.name] Gets or sets the name of the
     * runbook.
     *
     * @param {string} [parameters.runOn] Gets or sets the hybrid worker group that
     * the scheduled job should run on.
     *
     * @param {object} [parameters.parameters] Gets or sets a list of job
     * properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobSchedule} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobSchedule} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobSchedule} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroupName: string, automationAccountName: string, jobScheduleId: string, parameters: models.JobScheduleCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JobSchedule>;
    create(resourceGroupName: string, automationAccountName: string, jobScheduleId: string, parameters: models.JobScheduleCreateParameters, callback: ServiceCallback<models.JobSchedule>): void;
    create(resourceGroupName: string, automationAccountName: string, jobScheduleId: string, parameters: models.JobScheduleCreateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobSchedule>): void;


    /**
     * Retrieve a list of job schedules.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobScheduleListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobScheduleListResult>>;

    /**
     * Retrieve a list of job schedules.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobScheduleListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobScheduleListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobScheduleListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.JobScheduleListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.JobScheduleListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobScheduleListResult>): void;


    /**
     * Retrieve a list of job schedules.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobScheduleListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobScheduleListResult>>;

    /**
     * Retrieve a list of job schedules.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobScheduleListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobScheduleListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobScheduleListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JobScheduleListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.JobScheduleListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobScheduleListResult>): void;
}

/**
 * @class
 * LinkedWorkspaceOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface LinkedWorkspaceOperations {


    /**
     * Retrieve the linked workspace for the account id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<LinkedWorkspace>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.LinkedWorkspace>>;

    /**
     * Retrieve the linked workspace for the account id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {LinkedWorkspace} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {LinkedWorkspace} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link LinkedWorkspace} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.LinkedWorkspace>;
    get(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.LinkedWorkspace>): void;
    get(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LinkedWorkspace>): void;
}

/**
 * @class
 * ActivityOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface ActivityOperations {


    /**
     * Retrieve the activity in the module identified by module name and activity
     * name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} moduleName The name of module.
     *
     * @param {string} activityName The name of activity.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Activity>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, moduleName: string, activityName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Activity>>;

    /**
     * Retrieve the activity in the module identified by module name and activity
     * name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} moduleName The name of module.
     *
     * @param {string} activityName The name of activity.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Activity} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Activity} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Activity} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, moduleName: string, activityName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Activity>;
    get(resourceGroupName: string, automationAccountName: string, moduleName: string, activityName: string, callback: ServiceCallback<models.Activity>): void;
    get(resourceGroupName: string, automationAccountName: string, moduleName: string, activityName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Activity>): void;


    /**
     * Retrieve a list of activities in the module identified by module name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} moduleName The name of module.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ActivityListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByModuleWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, moduleName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ActivityListResult>>;

    /**
     * Retrieve a list of activities in the module identified by module name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} moduleName The name of module.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ActivityListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ActivityListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ActivityListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByModule(resourceGroupName: string, automationAccountName: string, moduleName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ActivityListResult>;
    listByModule(resourceGroupName: string, automationAccountName: string, moduleName: string, callback: ServiceCallback<models.ActivityListResult>): void;
    listByModule(resourceGroupName: string, automationAccountName: string, moduleName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ActivityListResult>): void;


    /**
     * Retrieve a list of activities in the module identified by module name.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ActivityListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByModuleNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ActivityListResult>>;

    /**
     * Retrieve a list of activities in the module identified by module name.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ActivityListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ActivityListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ActivityListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByModuleNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ActivityListResult>;
    listByModuleNext(nextPageLink: string, callback: ServiceCallback<models.ActivityListResult>): void;
    listByModuleNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ActivityListResult>): void;
}

/**
 * @class
 * ModuleOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface ModuleOperations {


    /**
     * Delete the module by name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} moduleName The module name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, moduleName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete the module by name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} moduleName The module name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, moduleName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, moduleName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, moduleName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve the module identified by module name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} moduleName The module name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Module>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, moduleName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Module>>;

    /**
     * Retrieve the module identified by module name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} moduleName The module name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Module} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Module} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Module} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, moduleName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Module>;
    get(resourceGroupName: string, automationAccountName: string, moduleName: string, callback: ServiceCallback<models.Module>): void;
    get(resourceGroupName: string, automationAccountName: string, moduleName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Module>): void;


    /**
     * Create or Update the module identified by module name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} moduleName The name of module.
     *
     * @param {object} parameters The create or update parameters for module.
     *
     * @param {object} parameters.contentLink Gets or sets the module content link.
     *
     * @param {string} [parameters.contentLink.uri] Gets or sets the uri of the
     * runbook content.
     *
     * @param {object} [parameters.contentLink.contentHash] Gets or sets the hash.
     *
     * @param {string} parameters.contentLink.contentHash.algorithm Gets or sets
     * the content hash algorithm used to hash the content.
     *
     * @param {string} parameters.contentLink.contentHash.value Gets or sets
     * expected hash value of the content.
     *
     * @param {string} [parameters.contentLink.version] Gets or sets the version of
     * the content.
     *
     * @param {string} [parameters.name] Gets or sets name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Module>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, moduleName: string, parameters: models.ModuleCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Module>>;

    /**
     * Create or Update the module identified by module name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} moduleName The name of module.
     *
     * @param {object} parameters The create or update parameters for module.
     *
     * @param {object} parameters.contentLink Gets or sets the module content link.
     *
     * @param {string} [parameters.contentLink.uri] Gets or sets the uri of the
     * runbook content.
     *
     * @param {object} [parameters.contentLink.contentHash] Gets or sets the hash.
     *
     * @param {string} parameters.contentLink.contentHash.algorithm Gets or sets
     * the content hash algorithm used to hash the content.
     *
     * @param {string} parameters.contentLink.contentHash.value Gets or sets
     * expected hash value of the content.
     *
     * @param {string} [parameters.contentLink.version] Gets or sets the version of
     * the content.
     *
     * @param {string} [parameters.name] Gets or sets name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Module} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Module} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Module} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, automationAccountName: string, moduleName: string, parameters: models.ModuleCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Module>;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, moduleName: string, parameters: models.ModuleCreateOrUpdateParameters, callback: ServiceCallback<models.Module>): void;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, moduleName: string, parameters: models.ModuleCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Module>): void;


    /**
     * Update the module identified by module name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} moduleName The name of module.
     *
     * @param {object} parameters The update parameters for module.
     *
     * @param {object} [parameters.contentLink] Gets or sets the module content
     * link.
     *
     * @param {string} [parameters.contentLink.uri] Gets or sets the uri of the
     * runbook content.
     *
     * @param {object} [parameters.contentLink.contentHash] Gets or sets the hash.
     *
     * @param {string} parameters.contentLink.contentHash.algorithm Gets or sets
     * the content hash algorithm used to hash the content.
     *
     * @param {string} parameters.contentLink.contentHash.value Gets or sets
     * expected hash value of the content.
     *
     * @param {string} [parameters.contentLink.version] Gets or sets the version of
     * the content.
     *
     * @param {string} [parameters.name] Gets or sets name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Module>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, moduleName: string, parameters: models.ModuleUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Module>>;

    /**
     * Update the module identified by module name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} moduleName The name of module.
     *
     * @param {object} parameters The update parameters for module.
     *
     * @param {object} [parameters.contentLink] Gets or sets the module content
     * link.
     *
     * @param {string} [parameters.contentLink.uri] Gets or sets the uri of the
     * runbook content.
     *
     * @param {object} [parameters.contentLink.contentHash] Gets or sets the hash.
     *
     * @param {string} parameters.contentLink.contentHash.algorithm Gets or sets
     * the content hash algorithm used to hash the content.
     *
     * @param {string} parameters.contentLink.contentHash.value Gets or sets
     * expected hash value of the content.
     *
     * @param {string} [parameters.contentLink.version] Gets or sets the version of
     * the content.
     *
     * @param {string} [parameters.name] Gets or sets name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Module} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Module} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Module} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, automationAccountName: string, moduleName: string, parameters: models.ModuleUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Module>;
    update(resourceGroupName: string, automationAccountName: string, moduleName: string, parameters: models.ModuleUpdateParameters, callback: ServiceCallback<models.Module>): void;
    update(resourceGroupName: string, automationAccountName: string, moduleName: string, parameters: models.ModuleUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Module>): void;


    /**
     * Retrieve a list of modules.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ModuleListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ModuleListResult>>;

    /**
     * Retrieve a list of modules.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ModuleListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ModuleListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ModuleListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ModuleListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.ModuleListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ModuleListResult>): void;


    /**
     * Retrieve a list of modules.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ModuleListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ModuleListResult>>;

    /**
     * Retrieve a list of modules.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ModuleListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ModuleListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ModuleListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ModuleListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.ModuleListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ModuleListResult>): void;
}

/**
 * @class
 * ObjectDataTypes
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface ObjectDataTypes {


    /**
     * Retrieve a list of fields of a given type identified by module name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} moduleName The name of module.
     *
     * @param {string} typeName The name of type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<TypeFieldListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listFieldsByModuleAndTypeWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, moduleName: string, typeName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TypeFieldListResult>>;

    /**
     * Retrieve a list of fields of a given type identified by module name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} moduleName The name of module.
     *
     * @param {string} typeName The name of type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {TypeFieldListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {TypeFieldListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link TypeFieldListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listFieldsByModuleAndType(resourceGroupName: string, automationAccountName: string, moduleName: string, typeName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.TypeFieldListResult>;
    listFieldsByModuleAndType(resourceGroupName: string, automationAccountName: string, moduleName: string, typeName: string, callback: ServiceCallback<models.TypeFieldListResult>): void;
    listFieldsByModuleAndType(resourceGroupName: string, automationAccountName: string, moduleName: string, typeName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TypeFieldListResult>): void;


    /**
     * Retrieve a list of fields of a given type across all accessible modules.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} typeName The name of type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<TypeFieldListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listFieldsByTypeWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, typeName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TypeFieldListResult>>;

    /**
     * Retrieve a list of fields of a given type across all accessible modules.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} typeName The name of type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {TypeFieldListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {TypeFieldListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link TypeFieldListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listFieldsByType(resourceGroupName: string, automationAccountName: string, typeName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.TypeFieldListResult>;
    listFieldsByType(resourceGroupName: string, automationAccountName: string, typeName: string, callback: ServiceCallback<models.TypeFieldListResult>): void;
    listFieldsByType(resourceGroupName: string, automationAccountName: string, typeName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TypeFieldListResult>): void;
}

/**
 * @class
 * Fields
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface Fields {


    /**
     * Retrieve a list of fields of a given type identified by module name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} moduleName The name of module.
     *
     * @param {string} typeName The name of type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<TypeFieldListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByTypeWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, moduleName: string, typeName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TypeFieldListResult>>;

    /**
     * Retrieve a list of fields of a given type identified by module name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} moduleName The name of module.
     *
     * @param {string} typeName The name of type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {TypeFieldListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {TypeFieldListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link TypeFieldListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByType(resourceGroupName: string, automationAccountName: string, moduleName: string, typeName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.TypeFieldListResult>;
    listByType(resourceGroupName: string, automationAccountName: string, moduleName: string, typeName: string, callback: ServiceCallback<models.TypeFieldListResult>): void;
    listByType(resourceGroupName: string, automationAccountName: string, moduleName: string, typeName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TypeFieldListResult>): void;
}

/**
 * @class
 * ScheduleOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface ScheduleOperations {


    /**
     * Create a schedule.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} scheduleName The schedule name.
     *
     * @param {object} parameters The parameters supplied to the create or update
     * schedule operation.
     *
     * @param {string} parameters.name Gets or sets the name of the Schedule.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * schedule.
     *
     * @param {date} parameters.startTime Gets or sets the start time of the
     * schedule.
     *
     * @param {date} [parameters.expiryTime] Gets or sets the end time of the
     * schedule.
     *
     * @param {object} [parameters.interval] Gets or sets the interval of the
     * schedule.
     *
     * @param {string} parameters.frequency Possible values include: 'OneTime',
     * 'Day', 'Hour', 'Week', 'Month'
     *
     * @param {string} [parameters.timeZone] Gets or sets the time zone of the
     * schedule.
     *
     * @param {object} [parameters.advancedSchedule] Gets or sets the
     * AdvancedSchedule.
     *
     * @param {array} [parameters.advancedSchedule.weekDays] Days of the week that
     * the job should execute on.
     *
     * @param {array} [parameters.advancedSchedule.monthDays] Days of the month
     * that the job should execute on. Must be between 1 and 31.
     *
     * @param {array} [parameters.advancedSchedule.monthlyOccurrences] Occurrences
     * of days within a month.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Schedule>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, scheduleName: string, parameters: models.ScheduleCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Schedule>>;

    /**
     * Create a schedule.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} scheduleName The schedule name.
     *
     * @param {object} parameters The parameters supplied to the create or update
     * schedule operation.
     *
     * @param {string} parameters.name Gets or sets the name of the Schedule.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * schedule.
     *
     * @param {date} parameters.startTime Gets or sets the start time of the
     * schedule.
     *
     * @param {date} [parameters.expiryTime] Gets or sets the end time of the
     * schedule.
     *
     * @param {object} [parameters.interval] Gets or sets the interval of the
     * schedule.
     *
     * @param {string} parameters.frequency Possible values include: 'OneTime',
     * 'Day', 'Hour', 'Week', 'Month'
     *
     * @param {string} [parameters.timeZone] Gets or sets the time zone of the
     * schedule.
     *
     * @param {object} [parameters.advancedSchedule] Gets or sets the
     * AdvancedSchedule.
     *
     * @param {array} [parameters.advancedSchedule.weekDays] Days of the week that
     * the job should execute on.
     *
     * @param {array} [parameters.advancedSchedule.monthDays] Days of the month
     * that the job should execute on. Must be between 1 and 31.
     *
     * @param {array} [parameters.advancedSchedule.monthlyOccurrences] Occurrences
     * of days within a month.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Schedule} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Schedule} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Schedule} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, automationAccountName: string, scheduleName: string, parameters: models.ScheduleCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Schedule>;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, scheduleName: string, parameters: models.ScheduleCreateOrUpdateParameters, callback: ServiceCallback<models.Schedule>): void;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, scheduleName: string, parameters: models.ScheduleCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Schedule>): void;


    /**
     * Update the schedule identified by schedule name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} scheduleName The schedule name.
     *
     * @param {object} parameters The parameters supplied to the update schedule
     * operation.
     *
     * @param {string} [parameters.name] Gets or sets the name of the Schedule.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * schedule.
     *
     * @param {boolean} [parameters.isEnabled] Gets or sets a value indicating
     * whether this schedule is enabled.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Schedule>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, scheduleName: string, parameters: models.ScheduleUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Schedule>>;

    /**
     * Update the schedule identified by schedule name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} scheduleName The schedule name.
     *
     * @param {object} parameters The parameters supplied to the update schedule
     * operation.
     *
     * @param {string} [parameters.name] Gets or sets the name of the Schedule.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * schedule.
     *
     * @param {boolean} [parameters.isEnabled] Gets or sets a value indicating
     * whether this schedule is enabled.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Schedule} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Schedule} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Schedule} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, automationAccountName: string, scheduleName: string, parameters: models.ScheduleUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Schedule>;
    update(resourceGroupName: string, automationAccountName: string, scheduleName: string, parameters: models.ScheduleUpdateParameters, callback: ServiceCallback<models.Schedule>): void;
    update(resourceGroupName: string, automationAccountName: string, scheduleName: string, parameters: models.ScheduleUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Schedule>): void;


    /**
     * Retrieve the schedule identified by schedule name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} scheduleName The schedule name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Schedule>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, scheduleName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Schedule>>;

    /**
     * Retrieve the schedule identified by schedule name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} scheduleName The schedule name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Schedule} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Schedule} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Schedule} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, scheduleName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Schedule>;
    get(resourceGroupName: string, automationAccountName: string, scheduleName: string, callback: ServiceCallback<models.Schedule>): void;
    get(resourceGroupName: string, automationAccountName: string, scheduleName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Schedule>): void;


    /**
     * Delete the schedule identified by schedule name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} scheduleName The schedule name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, scheduleName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete the schedule identified by schedule name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} scheduleName The schedule name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, scheduleName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, scheduleName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, scheduleName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve a list of schedules.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ScheduleListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ScheduleListResult>>;

    /**
     * Retrieve a list of schedules.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ScheduleListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ScheduleListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ScheduleListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ScheduleListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.ScheduleListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ScheduleListResult>): void;


    /**
     * Retrieve a list of schedules.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ScheduleListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ScheduleListResult>>;

    /**
     * Retrieve a list of schedules.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ScheduleListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ScheduleListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ScheduleListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ScheduleListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.ScheduleListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ScheduleListResult>): void;
}

/**
 * @class
 * VariableOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface VariableOperations {


    /**
     * Create a variable.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} variableName The variable name.
     *
     * @param {object} parameters The parameters supplied to the create or update
     * variable operation.
     *
     * @param {string} parameters.name Gets or sets the name of the variable.
     *
     * @param {string} [parameters.value] Gets or sets the value of the variable.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * variable.
     *
     * @param {boolean} [parameters.isEncrypted] Gets or sets the encrypted flag of
     * the variable.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Variable>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, variableName: string, parameters: models.VariableCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Variable>>;

    /**
     * Create a variable.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} variableName The variable name.
     *
     * @param {object} parameters The parameters supplied to the create or update
     * variable operation.
     *
     * @param {string} parameters.name Gets or sets the name of the variable.
     *
     * @param {string} [parameters.value] Gets or sets the value of the variable.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * variable.
     *
     * @param {boolean} [parameters.isEncrypted] Gets or sets the encrypted flag of
     * the variable.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Variable} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Variable} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Variable} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, automationAccountName: string, variableName: string, parameters: models.VariableCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Variable>;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, variableName: string, parameters: models.VariableCreateOrUpdateParameters, callback: ServiceCallback<models.Variable>): void;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, variableName: string, parameters: models.VariableCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Variable>): void;


    /**
     * Update a variable.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} variableName The variable name.
     *
     * @param {object} parameters The parameters supplied to the update variable
     * operation.
     *
     * @param {string} [parameters.name] Gets or sets the name of the variable.
     *
     * @param {string} [parameters.value] Gets or sets the value of the variable.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * variable.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Variable>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, variableName: string, parameters: models.VariableUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Variable>>;

    /**
     * Update a variable.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} variableName The variable name.
     *
     * @param {object} parameters The parameters supplied to the update variable
     * operation.
     *
     * @param {string} [parameters.name] Gets or sets the name of the variable.
     *
     * @param {string} [parameters.value] Gets or sets the value of the variable.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * variable.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Variable} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Variable} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Variable} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, automationAccountName: string, variableName: string, parameters: models.VariableUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Variable>;
    update(resourceGroupName: string, automationAccountName: string, variableName: string, parameters: models.VariableUpdateParameters, callback: ServiceCallback<models.Variable>): void;
    update(resourceGroupName: string, automationAccountName: string, variableName: string, parameters: models.VariableUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Variable>): void;


    /**
     * Delete the variable.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} variableName The name of variable.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, variableName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete the variable.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} variableName The name of variable.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, variableName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, variableName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, variableName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve the variable identified by variable name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} variableName The name of variable.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Variable>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, variableName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Variable>>;

    /**
     * Retrieve the variable identified by variable name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} variableName The name of variable.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Variable} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Variable} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Variable} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, variableName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Variable>;
    get(resourceGroupName: string, automationAccountName: string, variableName: string, callback: ServiceCallback<models.Variable>): void;
    get(resourceGroupName: string, automationAccountName: string, variableName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Variable>): void;


    /**
     * Retrieve a list of variables.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VariableListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VariableListResult>>;

    /**
     * Retrieve a list of variables.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VariableListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VariableListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VariableListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VariableListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.VariableListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VariableListResult>): void;


    /**
     * Retrieve a list of variables.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VariableListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VariableListResult>>;

    /**
     * Retrieve a list of variables.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VariableListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VariableListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VariableListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VariableListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.VariableListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VariableListResult>): void;
}

/**
 * @class
 * WebhookOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface WebhookOperations {


    /**
     * Generates a Uri for use in creating a webhook.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<String>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    generateUriWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<string>>;

    /**
     * Generates a Uri for use in creating a webhook.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {String} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {String} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    generateUri(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<string>;
    generateUri(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<string>): void;
    generateUri(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<string>): void;


    /**
     * Delete the webhook by name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} webhookName The webhook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, webhookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete the webhook by name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} webhookName The webhook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, webhookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, webhookName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, webhookName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve the webhook identified by webhook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} webhookName The webhook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Webhook>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, webhookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Webhook>>;

    /**
     * Retrieve the webhook identified by webhook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} webhookName The webhook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Webhook} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Webhook} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Webhook} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, webhookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Webhook>;
    get(resourceGroupName: string, automationAccountName: string, webhookName: string, callback: ServiceCallback<models.Webhook>): void;
    get(resourceGroupName: string, automationAccountName: string, webhookName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Webhook>): void;


    /**
     * Create the webhook identified by webhook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} webhookName The webhook name.
     *
     * @param {object} parameters The create or update parameters for webhook.
     *
     * @param {string} parameters.name Gets or sets the name of the webhook.
     *
     * @param {boolean} [parameters.isEnabled] Gets or sets the value of the
     * enabled flag of webhook.
     *
     * @param {string} [parameters.uri] Gets or sets the uri.
     *
     * @param {date} [parameters.expiryTime] Gets or sets the expiry time.
     *
     * @param {object} [parameters.parameters] Gets or sets the parameters of the
     * job.
     *
     * @param {object} [parameters.runbook] Gets or sets the runbook.
     *
     * @param {string} [parameters.runbook.name] Gets or sets the name of the
     * runbook.
     *
     * @param {string} [parameters.runOn] Gets or sets the name of the hybrid
     * worker group the webhook job will run on.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Webhook>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, webhookName: string, parameters: models.WebhookCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Webhook>>;

    /**
     * Create the webhook identified by webhook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} webhookName The webhook name.
     *
     * @param {object} parameters The create or update parameters for webhook.
     *
     * @param {string} parameters.name Gets or sets the name of the webhook.
     *
     * @param {boolean} [parameters.isEnabled] Gets or sets the value of the
     * enabled flag of webhook.
     *
     * @param {string} [parameters.uri] Gets or sets the uri.
     *
     * @param {date} [parameters.expiryTime] Gets or sets the expiry time.
     *
     * @param {object} [parameters.parameters] Gets or sets the parameters of the
     * job.
     *
     * @param {object} [parameters.runbook] Gets or sets the runbook.
     *
     * @param {string} [parameters.runbook.name] Gets or sets the name of the
     * runbook.
     *
     * @param {string} [parameters.runOn] Gets or sets the name of the hybrid
     * worker group the webhook job will run on.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Webhook} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Webhook} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Webhook} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, automationAccountName: string, webhookName: string, parameters: models.WebhookCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Webhook>;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, webhookName: string, parameters: models.WebhookCreateOrUpdateParameters, callback: ServiceCallback<models.Webhook>): void;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, webhookName: string, parameters: models.WebhookCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Webhook>): void;


    /**
     * Update the webhook identified by webhook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} webhookName The webhook name.
     *
     * @param {object} parameters The update parameters for webhook.
     *
     * @param {string} [parameters.name] Gets or sets the name of the webhook.
     *
     * @param {boolean} [parameters.isEnabled] Gets or sets the value of the
     * enabled flag of webhook.
     *
     * @param {string} [parameters.runOn] Gets or sets the name of the hybrid
     * worker group the webhook job will run on.
     *
     * @param {object} [parameters.parameters] Gets or sets the parameters of the
     * job.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * webhook.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Webhook>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, webhookName: string, parameters: models.WebhookUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Webhook>>;

    /**
     * Update the webhook identified by webhook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} webhookName The webhook name.
     *
     * @param {object} parameters The update parameters for webhook.
     *
     * @param {string} [parameters.name] Gets or sets the name of the webhook.
     *
     * @param {boolean} [parameters.isEnabled] Gets or sets the value of the
     * enabled flag of webhook.
     *
     * @param {string} [parameters.runOn] Gets or sets the name of the hybrid
     * worker group the webhook job will run on.
     *
     * @param {object} [parameters.parameters] Gets or sets the parameters of the
     * job.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * webhook.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Webhook} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Webhook} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Webhook} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, automationAccountName: string, webhookName: string, parameters: models.WebhookUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Webhook>;
    update(resourceGroupName: string, automationAccountName: string, webhookName: string, parameters: models.WebhookUpdateParameters, callback: ServiceCallback<models.Webhook>): void;
    update(resourceGroupName: string, automationAccountName: string, webhookName: string, parameters: models.WebhookUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Webhook>): void;


    /**
     * Retrieve a list of webhooks.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebhookListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebhookListResult>>;

    /**
     * Retrieve a list of webhooks.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebhookListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebhookListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebhookListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.WebhookListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.WebhookListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebhookListResult>): void;


    /**
     * Retrieve a list of webhooks.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WebhookListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WebhookListResult>>;

    /**
     * Retrieve a list of webhooks.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WebhookListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WebhookListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WebhookListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WebhookListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.WebhookListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WebhookListResult>): void;
}

/**
 * @class
 * WatcherOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface WatcherOperations {


    /**
     * Create the watcher identified by watcher name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} watcherName The watcher name.
     *
     * @param {object} parameters The create or update parameters for watcher.
     *
     * @param {number} [parameters.executionFrequencyInSeconds] Gets or sets the
     * frequency at which the watcher is invoked.
     *
     * @param {string} [parameters.scriptName] Gets or sets the name of the script
     * the watcher is attached to, i.e. the name of an existing runbook.
     *
     * @param {object} [parameters.scriptParameters] Gets or sets the parameters of
     * the script.
     *
     * @param {string} [parameters.scriptRunOn] Gets or sets the name of the hybrid
     * worker group the watcher will run on.
     *
     * @param {string} [parameters.description] Gets or sets the description.
     *
     * @param {string} [parameters.etag] Gets or sets the etag of the resource.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Watcher>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, watcherName: string, parameters: models.Watcher, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Watcher>>;

    /**
     * Create the watcher identified by watcher name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} watcherName The watcher name.
     *
     * @param {object} parameters The create or update parameters for watcher.
     *
     * @param {number} [parameters.executionFrequencyInSeconds] Gets or sets the
     * frequency at which the watcher is invoked.
     *
     * @param {string} [parameters.scriptName] Gets or sets the name of the script
     * the watcher is attached to, i.e. the name of an existing runbook.
     *
     * @param {object} [parameters.scriptParameters] Gets or sets the parameters of
     * the script.
     *
     * @param {string} [parameters.scriptRunOn] Gets or sets the name of the hybrid
     * worker group the watcher will run on.
     *
     * @param {string} [parameters.description] Gets or sets the description.
     *
     * @param {string} [parameters.etag] Gets or sets the etag of the resource.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Watcher} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Watcher} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Watcher} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, automationAccountName: string, watcherName: string, parameters: models.Watcher, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Watcher>;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, watcherName: string, parameters: models.Watcher, callback: ServiceCallback<models.Watcher>): void;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, watcherName: string, parameters: models.Watcher, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Watcher>): void;


    /**
     * Retrieve the watcher identified by watcher name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} watcherName The watcher name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Watcher>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, watcherName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Watcher>>;

    /**
     * Retrieve the watcher identified by watcher name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} watcherName The watcher name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Watcher} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Watcher} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Watcher} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, watcherName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Watcher>;
    get(resourceGroupName: string, automationAccountName: string, watcherName: string, callback: ServiceCallback<models.Watcher>): void;
    get(resourceGroupName: string, automationAccountName: string, watcherName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Watcher>): void;


    /**
     * Update the watcher identified by watcher name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} watcherName The watcher name.
     *
     * @param {object} parameters The update parameters for watcher.
     *
     * @param {number} [parameters.executionFrequencyInSeconds] Gets or sets the
     * frequency at which the watcher is invoked.
     *
     * @param {string} [parameters.name] Gets or sets the name of the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Watcher>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, watcherName: string, parameters: models.WatcherUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Watcher>>;

    /**
     * Update the watcher identified by watcher name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} watcherName The watcher name.
     *
     * @param {object} parameters The update parameters for watcher.
     *
     * @param {number} [parameters.executionFrequencyInSeconds] Gets or sets the
     * frequency at which the watcher is invoked.
     *
     * @param {string} [parameters.name] Gets or sets the name of the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Watcher} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Watcher} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Watcher} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, automationAccountName: string, watcherName: string, parameters: models.WatcherUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Watcher>;
    update(resourceGroupName: string, automationAccountName: string, watcherName: string, parameters: models.WatcherUpdateParameters, callback: ServiceCallback<models.Watcher>): void;
    update(resourceGroupName: string, automationAccountName: string, watcherName: string, parameters: models.WatcherUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Watcher>): void;


    /**
     * Delete the watcher by name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} watcherName The watcher name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, watcherName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete the watcher by name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} watcherName The watcher name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, watcherName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, watcherName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, watcherName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Resume the watcher identified by watcher name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} watcherName The watcher name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    startWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, watcherName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Resume the watcher identified by watcher name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} watcherName The watcher name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    start(resourceGroupName: string, automationAccountName: string, watcherName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    start(resourceGroupName: string, automationAccountName: string, watcherName: string, callback: ServiceCallback<void>): void;
    start(resourceGroupName: string, automationAccountName: string, watcherName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Resume the watcher identified by watcher name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} watcherName The watcher name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    stopWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, watcherName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Resume the watcher identified by watcher name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} watcherName The watcher name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    stop(resourceGroupName: string, automationAccountName: string, watcherName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    stop(resourceGroupName: string, automationAccountName: string, watcherName: string, callback: ServiceCallback<void>): void;
    stop(resourceGroupName: string, automationAccountName: string, watcherName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve a list of watchers.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WatcherListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WatcherListResult>>;

    /**
     * Retrieve a list of watchers.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WatcherListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WatcherListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WatcherListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.WatcherListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.WatcherListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WatcherListResult>): void;


    /**
     * Retrieve a list of watchers.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WatcherListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WatcherListResult>>;

    /**
     * Retrieve a list of watchers.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WatcherListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WatcherListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WatcherListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WatcherListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.WatcherListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WatcherListResult>): void;
}

/**
 * @class
 * SoftwareUpdateConfigurations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface SoftwareUpdateConfigurations {


    /**
     * Create a new software update configuration with the name given in the URI.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} softwareUpdateConfigurationName The name of the software
     * update configuration to be created.
     *
     * @param {object} parameters Request body.
     *
     * @param {object} parameters.updateConfiguration update specific properties
     * for the Software update configuration
     *
     * @param {string} parameters.updateConfiguration.operatingSystem operating
     * system of target machines. Possible values include: 'Windows', 'Linux'
     *
     * @param {object} [parameters.updateConfiguration.windows] Windows specific
     * update configuration.
     *
     * @param {string}
     * [parameters.updateConfiguration.windows.includedUpdateClassifications]
     * Update classification included in the software update configuration. A comma
     * separated string with required values. Possible values include:
     * 'Unclassified', 'Critical', 'Security', 'UpdateRollup', 'FeaturePack',
     * 'ServicePack', 'Definition', 'Tools', 'Updates'
     *
     * @param {array} [parameters.updateConfiguration.windows.excludedKbNumbers] KB
     * numbers excluded from the software update configuration.
     *
     * @param {array} [parameters.updateConfiguration.windows.includedKbNumbers] KB
     * numbers included from the software update configuration.
     *
     * @param {string} [parameters.updateConfiguration.windows.rebootSetting]
     * Reboot setting for the software update configuration.
     *
     * @param {object} [parameters.updateConfiguration.linux] Linux specific update
     * configuration.
     *
     * @param {string}
     * [parameters.updateConfiguration.linux.includedPackageClassifications] Update
     * classifications included in the software update configuration. Possible
     * values include: 'Unclassified', 'Critical', 'Security', 'Other'
     *
     * @param {array}
     * [parameters.updateConfiguration.linux.excludedPackageNameMasks] packages
     * excluded from the software update configuration.
     *
     * @param {array}
     * [parameters.updateConfiguration.linux.includedPackageNameMasks] packages
     * included from the software update configuration.
     *
     * @param {string} [parameters.updateConfiguration.linux.rebootSetting] Reboot
     * setting for the software update configuration.
     *
     * @param {moment.duration} [parameters.updateConfiguration.duration] Maximum
     * time allowed for the software update configuration run. Duration needs to be
     * specified using the format PT[n]H[n]M[n]S as per ISO8601
     *
     * @param {array} [parameters.updateConfiguration.azureVirtualMachines] List of
     * azure resource Ids for azure virtual machines targeted by the software
     * update configuration.
     *
     * @param {array} [parameters.updateConfiguration.nonAzureComputerNames] List
     * of names of non-azure machines targeted by the software update
     * configuration.
     *
     * @param {object} [parameters.updateConfiguration.targets] Group targets for
     * the software update configuration.
     *
     * @param {array} [parameters.updateConfiguration.targets.azureQueries] List of
     * Azure queries in the software update configuration.
     *
     * @param {array} [parameters.updateConfiguration.targets.nonAzureQueries] List
     * of non Azure queries in the software update configuration.
     *
     * @param {object} parameters.scheduleInfo Schedule information for the
     * Software update configuration
     *
     * @param {date} [parameters.scheduleInfo.startTime] Gets or sets the start
     * time of the schedule.
     *
     * @param {date} [parameters.scheduleInfo.expiryTime] Gets or sets the end time
     * of the schedule.
     *
     * @param {number} [parameters.scheduleInfo.expiryTimeOffsetMinutes] Gets or
     * sets the expiry time's offset in minutes.
     *
     * @param {boolean} [parameters.scheduleInfo.isEnabled] Gets or sets a value
     * indicating whether this schedule is enabled.
     *
     * @param {date} [parameters.scheduleInfo.nextRun] Gets or sets the next run
     * time of the schedule.
     *
     * @param {number} [parameters.scheduleInfo.nextRunOffsetMinutes] Gets or sets
     * the next run time's offset in minutes.
     *
     * @param {number} [parameters.scheduleInfo.interval] Gets or sets the interval
     * of the schedule.
     *
     * @param {string} [parameters.scheduleInfo.frequency] Gets or sets the
     * frequency of the schedule. Possible values include: 'OneTime', 'Day',
     * 'Hour', 'Week', 'Month'
     *
     * @param {string} [parameters.scheduleInfo.timeZone] Gets or sets the time
     * zone of the schedule.
     *
     * @param {object} [parameters.scheduleInfo.advancedSchedule] Gets or sets the
     * advanced schedule.
     *
     * @param {array} [parameters.scheduleInfo.advancedSchedule.weekDays] Days of
     * the week that the job should execute on.
     *
     * @param {array} [parameters.scheduleInfo.advancedSchedule.monthDays] Days of
     * the month that the job should execute on. Must be between 1 and 31.
     *
     * @param {array} [parameters.scheduleInfo.advancedSchedule.monthlyOccurrences]
     * Occurrences of days within a month.
     *
     * @param {date} [parameters.scheduleInfo.creationTime] Gets or sets the
     * creation time.
     *
     * @param {date} [parameters.scheduleInfo.lastModifiedTime] Gets or sets the
     * last modified time.
     *
     * @param {string} [parameters.scheduleInfo.description] Gets or sets the
     * description.
     *
     * @param {object} [parameters.error] Details of provisioning error
     *
     * @param {string} [parameters.error.code] Error code
     *
     * @param {string} [parameters.error.message] Error message indicating why the
     * operation failed.
     *
     * @param {object} [parameters.tasks] Tasks information for the Software update
     * configuration.
     *
     * @param {object} [parameters.tasks.preTask] Pre task properties.
     *
     * @param {object} [parameters.tasks.postTask] Post task properties.
     *
     * @param {object} [parameters.tasks.postTask.parameters] Gets or sets the
     * parameters of the task.
     *
     * @param {string} [parameters.tasks.postTask.source] Gets or sets the name of
     * the runbook.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SoftwareUpdateConfiguration>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationName: string, parameters: models.SoftwareUpdateConfiguration, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SoftwareUpdateConfiguration>>;

    /**
     * Create a new software update configuration with the name given in the URI.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} softwareUpdateConfigurationName The name of the software
     * update configuration to be created.
     *
     * @param {object} parameters Request body.
     *
     * @param {object} parameters.updateConfiguration update specific properties
     * for the Software update configuration
     *
     * @param {string} parameters.updateConfiguration.operatingSystem operating
     * system of target machines. Possible values include: 'Windows', 'Linux'
     *
     * @param {object} [parameters.updateConfiguration.windows] Windows specific
     * update configuration.
     *
     * @param {string}
     * [parameters.updateConfiguration.windows.includedUpdateClassifications]
     * Update classification included in the software update configuration. A comma
     * separated string with required values. Possible values include:
     * 'Unclassified', 'Critical', 'Security', 'UpdateRollup', 'FeaturePack',
     * 'ServicePack', 'Definition', 'Tools', 'Updates'
     *
     * @param {array} [parameters.updateConfiguration.windows.excludedKbNumbers] KB
     * numbers excluded from the software update configuration.
     *
     * @param {array} [parameters.updateConfiguration.windows.includedKbNumbers] KB
     * numbers included from the software update configuration.
     *
     * @param {string} [parameters.updateConfiguration.windows.rebootSetting]
     * Reboot setting for the software update configuration.
     *
     * @param {object} [parameters.updateConfiguration.linux] Linux specific update
     * configuration.
     *
     * @param {string}
     * [parameters.updateConfiguration.linux.includedPackageClassifications] Update
     * classifications included in the software update configuration. Possible
     * values include: 'Unclassified', 'Critical', 'Security', 'Other'
     *
     * @param {array}
     * [parameters.updateConfiguration.linux.excludedPackageNameMasks] packages
     * excluded from the software update configuration.
     *
     * @param {array}
     * [parameters.updateConfiguration.linux.includedPackageNameMasks] packages
     * included from the software update configuration.
     *
     * @param {string} [parameters.updateConfiguration.linux.rebootSetting] Reboot
     * setting for the software update configuration.
     *
     * @param {moment.duration} [parameters.updateConfiguration.duration] Maximum
     * time allowed for the software update configuration run. Duration needs to be
     * specified using the format PT[n]H[n]M[n]S as per ISO8601
     *
     * @param {array} [parameters.updateConfiguration.azureVirtualMachines] List of
     * azure resource Ids for azure virtual machines targeted by the software
     * update configuration.
     *
     * @param {array} [parameters.updateConfiguration.nonAzureComputerNames] List
     * of names of non-azure machines targeted by the software update
     * configuration.
     *
     * @param {object} [parameters.updateConfiguration.targets] Group targets for
     * the software update configuration.
     *
     * @param {array} [parameters.updateConfiguration.targets.azureQueries] List of
     * Azure queries in the software update configuration.
     *
     * @param {array} [parameters.updateConfiguration.targets.nonAzureQueries] List
     * of non Azure queries in the software update configuration.
     *
     * @param {object} parameters.scheduleInfo Schedule information for the
     * Software update configuration
     *
     * @param {date} [parameters.scheduleInfo.startTime] Gets or sets the start
     * time of the schedule.
     *
     * @param {date} [parameters.scheduleInfo.expiryTime] Gets or sets the end time
     * of the schedule.
     *
     * @param {number} [parameters.scheduleInfo.expiryTimeOffsetMinutes] Gets or
     * sets the expiry time's offset in minutes.
     *
     * @param {boolean} [parameters.scheduleInfo.isEnabled] Gets or sets a value
     * indicating whether this schedule is enabled.
     *
     * @param {date} [parameters.scheduleInfo.nextRun] Gets or sets the next run
     * time of the schedule.
     *
     * @param {number} [parameters.scheduleInfo.nextRunOffsetMinutes] Gets or sets
     * the next run time's offset in minutes.
     *
     * @param {number} [parameters.scheduleInfo.interval] Gets or sets the interval
     * of the schedule.
     *
     * @param {string} [parameters.scheduleInfo.frequency] Gets or sets the
     * frequency of the schedule. Possible values include: 'OneTime', 'Day',
     * 'Hour', 'Week', 'Month'
     *
     * @param {string} [parameters.scheduleInfo.timeZone] Gets or sets the time
     * zone of the schedule.
     *
     * @param {object} [parameters.scheduleInfo.advancedSchedule] Gets or sets the
     * advanced schedule.
     *
     * @param {array} [parameters.scheduleInfo.advancedSchedule.weekDays] Days of
     * the week that the job should execute on.
     *
     * @param {array} [parameters.scheduleInfo.advancedSchedule.monthDays] Days of
     * the month that the job should execute on. Must be between 1 and 31.
     *
     * @param {array} [parameters.scheduleInfo.advancedSchedule.monthlyOccurrences]
     * Occurrences of days within a month.
     *
     * @param {date} [parameters.scheduleInfo.creationTime] Gets or sets the
     * creation time.
     *
     * @param {date} [parameters.scheduleInfo.lastModifiedTime] Gets or sets the
     * last modified time.
     *
     * @param {string} [parameters.scheduleInfo.description] Gets or sets the
     * description.
     *
     * @param {object} [parameters.error] Details of provisioning error
     *
     * @param {string} [parameters.error.code] Error code
     *
     * @param {string} [parameters.error.message] Error message indicating why the
     * operation failed.
     *
     * @param {object} [parameters.tasks] Tasks information for the Software update
     * configuration.
     *
     * @param {object} [parameters.tasks.preTask] Pre task properties.
     *
     * @param {object} [parameters.tasks.postTask] Post task properties.
     *
     * @param {object} [parameters.tasks.postTask.parameters] Gets or sets the
     * parameters of the task.
     *
     * @param {string} [parameters.tasks.postTask.source] Gets or sets the name of
     * the runbook.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SoftwareUpdateConfiguration} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SoftwareUpdateConfiguration} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SoftwareUpdateConfiguration} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationName: string, parameters: models.SoftwareUpdateConfiguration, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.SoftwareUpdateConfiguration>;
    create(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationName: string, parameters: models.SoftwareUpdateConfiguration, callback: ServiceCallback<models.SoftwareUpdateConfiguration>): void;
    create(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationName: string, parameters: models.SoftwareUpdateConfiguration, options: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SoftwareUpdateConfiguration>): void;


    /**
     * Get a single software update configuration by name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} softwareUpdateConfigurationName The name of the software
     * update configuration to be created.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SoftwareUpdateConfiguration>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getByNameWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationName: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SoftwareUpdateConfiguration>>;

    /**
     * Get a single software update configuration by name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} softwareUpdateConfigurationName The name of the software
     * update configuration to be created.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SoftwareUpdateConfiguration} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SoftwareUpdateConfiguration} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SoftwareUpdateConfiguration} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getByName(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationName: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.SoftwareUpdateConfiguration>;
    getByName(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationName: string, callback: ServiceCallback<models.SoftwareUpdateConfiguration>): void;
    getByName(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationName: string, options: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SoftwareUpdateConfiguration>): void;


    /**
     * delete a specific software update configuration.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} softwareUpdateConfigurationName The name of the software
     * update configuration to be created.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationName: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * delete a specific software update configuration.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} softwareUpdateConfigurationName The name of the software
     * update configuration to be created.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationName: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationName: string, options: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Get all software update configurations for the account.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SoftwareUpdateConfigurationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { clientRequestId? : string, filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SoftwareUpdateConfigurationListResult>>;

    /**
     * Get all software update configurations for the account.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SoftwareUpdateConfigurationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SoftwareUpdateConfigurationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SoftwareUpdateConfigurationListResult} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(resourceGroupName: string, automationAccountName: string, options?: { clientRequestId? : string, filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.SoftwareUpdateConfigurationListResult>;
    list(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.SoftwareUpdateConfigurationListResult>): void;
    list(resourceGroupName: string, automationAccountName: string, options: { clientRequestId? : string, filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SoftwareUpdateConfigurationListResult>): void;
}

/**
 * @class
 * SoftwareUpdateConfigurationRuns
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface SoftwareUpdateConfigurationRuns {


    /**
     * Get a single software update configuration Run by Id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {uuid} softwareUpdateConfigurationRunId The Id of the software update
     * configuration run.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SoftwareUpdateConfigurationRun>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getByIdWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationRunId: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SoftwareUpdateConfigurationRun>>;

    /**
     * Get a single software update configuration Run by Id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {uuid} softwareUpdateConfigurationRunId The Id of the software update
     * configuration run.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SoftwareUpdateConfigurationRun} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SoftwareUpdateConfigurationRun} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SoftwareUpdateConfigurationRun} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getById(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationRunId: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.SoftwareUpdateConfigurationRun>;
    getById(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationRunId: string, callback: ServiceCallback<models.SoftwareUpdateConfigurationRun>): void;
    getById(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationRunId: string, options: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SoftwareUpdateConfigurationRun>): void;


    /**
     * Return list of software update configuration runs
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {string} [options.filter] The filter to apply on the operation. You
     * can use the following filters: 'properties/osType', 'properties/status',
     * 'properties/startTime', and 'properties/softwareUpdateConfiguration/name'
     *
     * @param {string} [options.skip] Number of entries you skip before returning
     * results
     *
     * @param {string} [options.top] Maximum number of entries returned in the
     * results collection
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SoftwareUpdateConfigurationRunListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { clientRequestId? : string, filter? : string, skip? : string, top? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SoftwareUpdateConfigurationRunListResult>>;

    /**
     * Return list of software update configuration runs
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {string} [options.filter] The filter to apply on the operation. You
     * can use the following filters: 'properties/osType', 'properties/status',
     * 'properties/startTime', and 'properties/softwareUpdateConfiguration/name'
     *
     * @param {string} [options.skip] Number of entries you skip before returning
     * results
     *
     * @param {string} [options.top] Maximum number of entries returned in the
     * results collection
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SoftwareUpdateConfigurationRunListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SoftwareUpdateConfigurationRunListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SoftwareUpdateConfigurationRunListResult}
     *                      for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(resourceGroupName: string, automationAccountName: string, options?: { clientRequestId? : string, filter? : string, skip? : string, top? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.SoftwareUpdateConfigurationRunListResult>;
    list(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.SoftwareUpdateConfigurationRunListResult>): void;
    list(resourceGroupName: string, automationAccountName: string, options: { clientRequestId? : string, filter? : string, skip? : string, top? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SoftwareUpdateConfigurationRunListResult>): void;
}

/**
 * @class
 * SoftwareUpdateConfigurationMachineRuns
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface SoftwareUpdateConfigurationMachineRuns {


    /**
     * Get a single software update configuration machine run by Id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {uuid} softwareUpdateConfigurationMachineRunId The Id of the software
     * update configuration machine run.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SoftwareUpdateConfigurationMachineRun>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getByIdWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationMachineRunId: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SoftwareUpdateConfigurationMachineRun>>;

    /**
     * Get a single software update configuration machine run by Id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {uuid} softwareUpdateConfigurationMachineRunId The Id of the software
     * update configuration machine run.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SoftwareUpdateConfigurationMachineRun} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SoftwareUpdateConfigurationMachineRun} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SoftwareUpdateConfigurationMachineRun} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getById(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationMachineRunId: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.SoftwareUpdateConfigurationMachineRun>;
    getById(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationMachineRunId: string, callback: ServiceCallback<models.SoftwareUpdateConfigurationMachineRun>): void;
    getById(resourceGroupName: string, automationAccountName: string, softwareUpdateConfigurationMachineRunId: string, options: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SoftwareUpdateConfigurationMachineRun>): void;


    /**
     * Return list of software update configuration machine runs
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {string} [options.filter] The filter to apply on the operation. You
     * can use the following filters: 'properties/osType', 'properties/status',
     * 'properties/startTime', and 'properties/softwareUpdateConfiguration/name'
     *
     * @param {string} [options.skip] number of entries you skip before returning
     * results
     *
     * @param {string} [options.top] Maximum number of entries returned in the
     * results collection
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SoftwareUpdateConfigurationMachineRunListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { clientRequestId? : string, filter? : string, skip? : string, top? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SoftwareUpdateConfigurationMachineRunListResult>>;

    /**
     * Return list of software update configuration machine runs
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {string} [options.filter] The filter to apply on the operation. You
     * can use the following filters: 'properties/osType', 'properties/status',
     * 'properties/startTime', and 'properties/softwareUpdateConfiguration/name'
     *
     * @param {string} [options.skip] number of entries you skip before returning
     * results
     *
     * @param {string} [options.top] Maximum number of entries returned in the
     * results collection
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SoftwareUpdateConfigurationMachineRunListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SoftwareUpdateConfigurationMachineRunListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link
     *                      SoftwareUpdateConfigurationMachineRunListResult} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(resourceGroupName: string, automationAccountName: string, options?: { clientRequestId? : string, filter? : string, skip? : string, top? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.SoftwareUpdateConfigurationMachineRunListResult>;
    list(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.SoftwareUpdateConfigurationMachineRunListResult>): void;
    list(resourceGroupName: string, automationAccountName: string, options: { clientRequestId? : string, filter? : string, skip? : string, top? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SoftwareUpdateConfigurationMachineRunListResult>): void;
}

/**
 * @class
 * SourceControlOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface SourceControlOperations {


    /**
     * Create a source control.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The source control name.
     *
     * @param {object} parameters The parameters supplied to the create or update
     * source control operation.
     *
     * @param {string} [parameters.repoUrl] The repo url of the source control.
     *
     * @param {string} [parameters.branch] The repo branch of the source control.
     * Include branch as empty string for VsoTfvc.
     *
     * @param {string} [parameters.folderPath] The folder path of the source
     * control. Path must be relative.
     *
     * @param {boolean} [parameters.autoSync] The auto async of the source control.
     * Default is false.
     *
     * @param {boolean} [parameters.publishRunbook] The auto publish of the source
     * control. Default is true.
     *
     * @param {string} [parameters.sourceType] The source type. Must be one of
     * VsoGit, VsoTfvc, GitHub, case sensitive. Possible values include: 'VsoGit',
     * 'VsoTfvc', 'GitHub'
     *
     * @param {object} [parameters.securityToken] The authorization token for the
     * repo of the source control.
     *
     * @param {string} [parameters.securityToken.accessToken] The access token.
     *
     * @param {string} [parameters.securityToken.refreshToken] The refresh token.
     *
     * @param {string} [parameters.securityToken.tokenType] The token type. Must be
     * either PersonalAccessToken or Oauth. Possible values include:
     * 'PersonalAccessToken', 'Oauth'
     *
     * @param {string} [parameters.description] The user description of the source
     * control.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SourceControl>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, sourceControlName: string, parameters: models.SourceControlCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SourceControl>>;

    /**
     * Create a source control.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The source control name.
     *
     * @param {object} parameters The parameters supplied to the create or update
     * source control operation.
     *
     * @param {string} [parameters.repoUrl] The repo url of the source control.
     *
     * @param {string} [parameters.branch] The repo branch of the source control.
     * Include branch as empty string for VsoTfvc.
     *
     * @param {string} [parameters.folderPath] The folder path of the source
     * control. Path must be relative.
     *
     * @param {boolean} [parameters.autoSync] The auto async of the source control.
     * Default is false.
     *
     * @param {boolean} [parameters.publishRunbook] The auto publish of the source
     * control. Default is true.
     *
     * @param {string} [parameters.sourceType] The source type. Must be one of
     * VsoGit, VsoTfvc, GitHub, case sensitive. Possible values include: 'VsoGit',
     * 'VsoTfvc', 'GitHub'
     *
     * @param {object} [parameters.securityToken] The authorization token for the
     * repo of the source control.
     *
     * @param {string} [parameters.securityToken.accessToken] The access token.
     *
     * @param {string} [parameters.securityToken.refreshToken] The refresh token.
     *
     * @param {string} [parameters.securityToken.tokenType] The token type. Must be
     * either PersonalAccessToken or Oauth. Possible values include:
     * 'PersonalAccessToken', 'Oauth'
     *
     * @param {string} [parameters.description] The user description of the source
     * control.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SourceControl} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SourceControl} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SourceControl} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, automationAccountName: string, sourceControlName: string, parameters: models.SourceControlCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SourceControl>;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, sourceControlName: string, parameters: models.SourceControlCreateOrUpdateParameters, callback: ServiceCallback<models.SourceControl>): void;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, sourceControlName: string, parameters: models.SourceControlCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SourceControl>): void;


    /**
     * Update a source control.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The source control name.
     *
     * @param {object} parameters The parameters supplied to the update source
     * control operation.
     *
     * @param {string} [parameters.branch] The repo branch of the source control.
     *
     * @param {string} [parameters.folderPath] The folder path of the source
     * control. Path must be relative.
     *
     * @param {boolean} [parameters.autoSync] The auto sync of the source control.
     * Default is false.
     *
     * @param {boolean} [parameters.publishRunbook] The auto publish of the source
     * control. Default is true.
     *
     * @param {object} [parameters.securityToken] The authorization token for the
     * repo of the source control.
     *
     * @param {string} [parameters.securityToken.accessToken] The access token.
     *
     * @param {string} [parameters.securityToken.refreshToken] The refresh token.
     *
     * @param {string} [parameters.securityToken.tokenType] The token type. Must be
     * either PersonalAccessToken or Oauth. Possible values include:
     * 'PersonalAccessToken', 'Oauth'
     *
     * @param {string} [parameters.description] The user description of the source
     * control.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SourceControl>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, sourceControlName: string, parameters: models.SourceControlUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SourceControl>>;

    /**
     * Update a source control.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The source control name.
     *
     * @param {object} parameters The parameters supplied to the update source
     * control operation.
     *
     * @param {string} [parameters.branch] The repo branch of the source control.
     *
     * @param {string} [parameters.folderPath] The folder path of the source
     * control. Path must be relative.
     *
     * @param {boolean} [parameters.autoSync] The auto sync of the source control.
     * Default is false.
     *
     * @param {boolean} [parameters.publishRunbook] The auto publish of the source
     * control. Default is true.
     *
     * @param {object} [parameters.securityToken] The authorization token for the
     * repo of the source control.
     *
     * @param {string} [parameters.securityToken.accessToken] The access token.
     *
     * @param {string} [parameters.securityToken.refreshToken] The refresh token.
     *
     * @param {string} [parameters.securityToken.tokenType] The token type. Must be
     * either PersonalAccessToken or Oauth. Possible values include:
     * 'PersonalAccessToken', 'Oauth'
     *
     * @param {string} [parameters.description] The user description of the source
     * control.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SourceControl} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SourceControl} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SourceControl} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, automationAccountName: string, sourceControlName: string, parameters: models.SourceControlUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SourceControl>;
    update(resourceGroupName: string, automationAccountName: string, sourceControlName: string, parameters: models.SourceControlUpdateParameters, callback: ServiceCallback<models.SourceControl>): void;
    update(resourceGroupName: string, automationAccountName: string, sourceControlName: string, parameters: models.SourceControlUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SourceControl>): void;


    /**
     * Delete the source control.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The name of source control.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, sourceControlName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete the source control.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The name of source control.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, sourceControlName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, sourceControlName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, sourceControlName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve the source control identified by source control name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The name of source control.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SourceControl>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, sourceControlName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SourceControl>>;

    /**
     * Retrieve the source control identified by source control name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The name of source control.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SourceControl} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SourceControl} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SourceControl} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SourceControl>;
    get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, callback: ServiceCallback<models.SourceControl>): void;
    get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SourceControl>): void;


    /**
     * Retrieve a list of source controls.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SourceControlListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SourceControlListResult>>;

    /**
     * Retrieve a list of source controls.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SourceControlListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SourceControlListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SourceControlListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.SourceControlListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.SourceControlListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SourceControlListResult>): void;


    /**
     * Retrieve a list of source controls.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SourceControlListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SourceControlListResult>>;

    /**
     * Retrieve a list of source controls.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SourceControlListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SourceControlListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SourceControlListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SourceControlListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.SourceControlListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SourceControlListResult>): void;
}

/**
 * @class
 * SourceControlSyncJobOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface SourceControlSyncJobOperations {


    /**
     * Creates the sync job for a source control.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The source control name.
     *
     * @param {uuid} sourceControlSyncJobId The source control sync job id.
     *
     * @param {object} parameters The parameters supplied to the create source
     * control sync job operation.
     *
     * @param {string} parameters.commitId The commit id of the source control sync
     * job. If not syncing to a commitId, enter an empty string.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SourceControlSyncJob>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, parameters: models.SourceControlSyncJobCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SourceControlSyncJob>>;

    /**
     * Creates the sync job for a source control.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The source control name.
     *
     * @param {uuid} sourceControlSyncJobId The source control sync job id.
     *
     * @param {object} parameters The parameters supplied to the create source
     * control sync job operation.
     *
     * @param {string} parameters.commitId The commit id of the source control sync
     * job. If not syncing to a commitId, enter an empty string.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SourceControlSyncJob} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SourceControlSyncJob} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SourceControlSyncJob} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, parameters: models.SourceControlSyncJobCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SourceControlSyncJob>;
    create(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, parameters: models.SourceControlSyncJobCreateParameters, callback: ServiceCallback<models.SourceControlSyncJob>): void;
    create(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, parameters: models.SourceControlSyncJobCreateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SourceControlSyncJob>): void;


    /**
     * Retrieve the source control sync job identified by job id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The source control name.
     *
     * @param {uuid} sourceControlSyncJobId The source control sync job id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SourceControlSyncJobById>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SourceControlSyncJobById>>;

    /**
     * Retrieve the source control sync job identified by job id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The source control name.
     *
     * @param {uuid} sourceControlSyncJobId The source control sync job id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SourceControlSyncJobById} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SourceControlSyncJobById} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SourceControlSyncJobById} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SourceControlSyncJobById>;
    get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, callback: ServiceCallback<models.SourceControlSyncJobById>): void;
    get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SourceControlSyncJobById>): void;


    /**
     * Retrieve a list of source control sync jobs.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The source control name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SourceControlSyncJobListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, sourceControlName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SourceControlSyncJobListResult>>;

    /**
     * Retrieve a list of source control sync jobs.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The source control name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SourceControlSyncJobListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SourceControlSyncJobListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SourceControlSyncJobListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, sourceControlName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.SourceControlSyncJobListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, sourceControlName: string, callback: ServiceCallback<models.SourceControlSyncJobListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, sourceControlName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SourceControlSyncJobListResult>): void;


    /**
     * Retrieve a list of source control sync jobs.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SourceControlSyncJobListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SourceControlSyncJobListResult>>;

    /**
     * Retrieve a list of source control sync jobs.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SourceControlSyncJobListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SourceControlSyncJobListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SourceControlSyncJobListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SourceControlSyncJobListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.SourceControlSyncJobListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SourceControlSyncJobListResult>): void;
}

/**
 * @class
 * SourceControlSyncJobStreams
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface SourceControlSyncJobStreams {


    /**
     * Retrieve a list of sync job streams identified by sync job id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The source control name.
     *
     * @param {uuid} sourceControlSyncJobId The source control sync job id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SourceControlSyncJobStreamsListBySyncJob>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySyncJobWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SourceControlSyncJobStreamsListBySyncJob>>;

    /**
     * Retrieve a list of sync job streams identified by sync job id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The source control name.
     *
     * @param {uuid} sourceControlSyncJobId The source control sync job id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SourceControlSyncJobStreamsListBySyncJob} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SourceControlSyncJobStreamsListBySyncJob} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SourceControlSyncJobStreamsListBySyncJob}
     *                      for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySyncJob(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.SourceControlSyncJobStreamsListBySyncJob>;
    listBySyncJob(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, callback: ServiceCallback<models.SourceControlSyncJobStreamsListBySyncJob>): void;
    listBySyncJob(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SourceControlSyncJobStreamsListBySyncJob>): void;


    /**
     * Retrieve a sync job stream identified by stream id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The source control name.
     *
     * @param {uuid} sourceControlSyncJobId The source control sync job id.
     *
     * @param {string} streamId The id of the sync job stream.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SourceControlSyncJobStreamById>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, streamId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SourceControlSyncJobStreamById>>;

    /**
     * Retrieve a sync job stream identified by stream id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} sourceControlName The source control name.
     *
     * @param {uuid} sourceControlSyncJobId The source control sync job id.
     *
     * @param {string} streamId The id of the sync job stream.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SourceControlSyncJobStreamById} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SourceControlSyncJobStreamById} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SourceControlSyncJobStreamById} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, streamId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SourceControlSyncJobStreamById>;
    get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, streamId: string, callback: ServiceCallback<models.SourceControlSyncJobStreamById>): void;
    get(resourceGroupName: string, automationAccountName: string, sourceControlName: string, sourceControlSyncJobId: string, streamId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SourceControlSyncJobStreamById>): void;


    /**
     * Retrieve a list of sync job streams identified by sync job id.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SourceControlSyncJobStreamsListBySyncJob>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySyncJobNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SourceControlSyncJobStreamsListBySyncJob>>;

    /**
     * Retrieve a list of sync job streams identified by sync job id.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SourceControlSyncJobStreamsListBySyncJob} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SourceControlSyncJobStreamsListBySyncJob} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SourceControlSyncJobStreamsListBySyncJob}
     *                      for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySyncJobNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SourceControlSyncJobStreamsListBySyncJob>;
    listBySyncJobNext(nextPageLink: string, callback: ServiceCallback<models.SourceControlSyncJobStreamsListBySyncJob>): void;
    listBySyncJobNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SourceControlSyncJobStreamsListBySyncJob>): void;
}

/**
 * @class
 * JobOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface JobOperations {


    /**
     * Retrieve the job output identified by job name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The name of the job to be created.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Object>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getOutputWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, jobName: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<stream.Readable>>;

    /**
     * Retrieve the job output identified by job name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The name of the job to be created.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Object} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Object} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getOutput(resourceGroupName: string, automationAccountName: string, jobName: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<stream.Readable>;
    getOutput(resourceGroupName: string, automationAccountName: string, jobName: string, callback: ServiceCallback<stream.Readable>): void;
    getOutput(resourceGroupName: string, automationAccountName: string, jobName: string, options: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<stream.Readable>): void;


    /**
     * Retrieve the runbook content of the job identified by job name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The job name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Object>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getRunbookContentWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, jobName: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<stream.Readable>>;

    /**
     * Retrieve the runbook content of the job identified by job name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The job name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Object} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Object} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getRunbookContent(resourceGroupName: string, automationAccountName: string, jobName: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<stream.Readable>;
    getRunbookContent(resourceGroupName: string, automationAccountName: string, jobName: string, callback: ServiceCallback<stream.Readable>): void;
    getRunbookContent(resourceGroupName: string, automationAccountName: string, jobName: string, options: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<stream.Readable>): void;


    /**
     * Suspend the job identified by job name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The job name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    suspendWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, jobName: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Suspend the job identified by job name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The job name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    suspend(resourceGroupName: string, automationAccountName: string, jobName: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    suspend(resourceGroupName: string, automationAccountName: string, jobName: string, callback: ServiceCallback<void>): void;
    suspend(resourceGroupName: string, automationAccountName: string, jobName: string, options: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Stop the job identified by jobName.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The job name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    stopWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, jobName: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Stop the job identified by jobName.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The job name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    stop(resourceGroupName: string, automationAccountName: string, jobName: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    stop(resourceGroupName: string, automationAccountName: string, jobName: string, callback: ServiceCallback<void>): void;
    stop(resourceGroupName: string, automationAccountName: string, jobName: string, options: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve the job identified by job name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The job name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Job>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, jobName: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Job>>;

    /**
     * Retrieve the job identified by job name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The job name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Job} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Job} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Job} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, jobName: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.Job>;
    get(resourceGroupName: string, automationAccountName: string, jobName: string, callback: ServiceCallback<models.Job>): void;
    get(resourceGroupName: string, automationAccountName: string, jobName: string, options: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Job>): void;


    /**
     * Create a job of the runbook.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The job name.
     *
     * @param {object} parameters The parameters supplied to the create job
     * operation.
     *
     * @param {object} [parameters.runbook] Gets or sets the runbook.
     *
     * @param {string} [parameters.runbook.name] Gets or sets the name of the
     * runbook.
     *
     * @param {object} [parameters.parameters] Gets or sets the parameters of the
     * job.
     *
     * @param {string} [parameters.runOn] Gets or sets the runOn which specifies
     * the group name where the job is to be executed.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Job>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, jobName: string, parameters: models.JobCreateParameters, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Job>>;

    /**
     * Create a job of the runbook.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The job name.
     *
     * @param {object} parameters The parameters supplied to the create job
     * operation.
     *
     * @param {object} [parameters.runbook] Gets or sets the runbook.
     *
     * @param {string} [parameters.runbook.name] Gets or sets the name of the
     * runbook.
     *
     * @param {object} [parameters.parameters] Gets or sets the parameters of the
     * job.
     *
     * @param {string} [parameters.runOn] Gets or sets the runOn which specifies
     * the group name where the job is to be executed.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Job} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Job} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Job} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroupName: string, automationAccountName: string, jobName: string, parameters: models.JobCreateParameters, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.Job>;
    create(resourceGroupName: string, automationAccountName: string, jobName: string, parameters: models.JobCreateParameters, callback: ServiceCallback<models.Job>): void;
    create(resourceGroupName: string, automationAccountName: string, jobName: string, parameters: models.JobCreateParameters, options: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Job>): void;


    /**
     * Retrieve a list of jobs.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobListResultV2>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobListResultV2>>;

    /**
     * Retrieve a list of jobs.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobListResultV2} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobListResultV2} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobListResultV2} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.JobListResultV2>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.JobListResultV2>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { filter? : string, clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobListResultV2>): void;


    /**
     * Resume the job identified by jobName.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The job name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    resumeWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, jobName: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Resume the job identified by jobName.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The job name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    resume(resourceGroupName: string, automationAccountName: string, jobName: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    resume(resourceGroupName: string, automationAccountName: string, jobName: string, callback: ServiceCallback<void>): void;
    resume(resourceGroupName: string, automationAccountName: string, jobName: string, options: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve a list of jobs.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobListResultV2>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobListResultV2>>;

    /**
     * Retrieve a list of jobs.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobListResultV2} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobListResultV2} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobListResultV2} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.JobListResultV2>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.JobListResultV2>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobListResultV2>): void;
}

/**
 * @class
 * JobStreamOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface JobStreamOperations {


    /**
     * Retrieve the job stream identified by job stream id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The job name.
     *
     * @param {string} jobStreamId The job stream id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobStream>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, jobName: string, jobStreamId: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobStream>>;

    /**
     * Retrieve the job stream identified by job stream id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The job name.
     *
     * @param {string} jobStreamId The job stream id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobStream} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobStream} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobStream} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, jobName: string, jobStreamId: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.JobStream>;
    get(resourceGroupName: string, automationAccountName: string, jobName: string, jobStreamId: string, callback: ServiceCallback<models.JobStream>): void;
    get(resourceGroupName: string, automationAccountName: string, jobName: string, jobStreamId: string, options: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobStream>): void;


    /**
     * Retrieve a list of jobs streams identified by job name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The job name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobStreamListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByJobWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, jobName: string, options?: { filter? : string, clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobStreamListResult>>;

    /**
     * Retrieve a list of jobs streams identified by job name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} jobName The job name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobStreamListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobStreamListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobStreamListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByJob(resourceGroupName: string, automationAccountName: string, jobName: string, options?: { filter? : string, clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.JobStreamListResult>;
    listByJob(resourceGroupName: string, automationAccountName: string, jobName: string, callback: ServiceCallback<models.JobStreamListResult>): void;
    listByJob(resourceGroupName: string, automationAccountName: string, jobName: string, options: { filter? : string, clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobStreamListResult>): void;


    /**
     * Retrieve a list of jobs streams identified by job name.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobStreamListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByJobNextWithHttpOperationResponse(nextPageLink: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobStreamListResult>>;

    /**
     * Retrieve a list of jobs streams identified by job name.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.clientRequestId] Identifies this specific client
     * request.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobStreamListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobStreamListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobStreamListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByJobNext(nextPageLink: string, options?: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.JobStreamListResult>;
    listByJobNext(nextPageLink: string, callback: ServiceCallback<models.JobStreamListResult>): void;
    listByJobNext(nextPageLink: string, options: { clientRequestId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobStreamListResult>): void;
}

/**
 * @class
 * AgentRegistrationInformation
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface AgentRegistrationInformation {


    /**
     * Retrieve the automation agent registration information.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AgentRegistration>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AgentRegistration>>;

    /**
     * Retrieve the automation agent registration information.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AgentRegistration} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AgentRegistration} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AgentRegistration} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AgentRegistration>;
    get(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.AgentRegistration>): void;
    get(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AgentRegistration>): void;


    /**
     * Regenerate a primary or secondary agent registration key
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} parameters The name of the agent registration key to be
     * regenerated
     *
     * @param {string} parameters.keyName Gets or sets the agent registration key
     * name - primary or secondary. Possible values include: 'primary', 'secondary'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AgentRegistration>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    regenerateKeyWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, parameters: models.AgentRegistrationRegenerateKeyParameter, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AgentRegistration>>;

    /**
     * Regenerate a primary or secondary agent registration key
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} parameters The name of the agent registration key to be
     * regenerated
     *
     * @param {string} parameters.keyName Gets or sets the agent registration key
     * name - primary or secondary. Possible values include: 'primary', 'secondary'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AgentRegistration} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AgentRegistration} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AgentRegistration} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    regenerateKey(resourceGroupName: string, automationAccountName: string, parameters: models.AgentRegistrationRegenerateKeyParameter, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AgentRegistration>;
    regenerateKey(resourceGroupName: string, automationAccountName: string, parameters: models.AgentRegistrationRegenerateKeyParameter, callback: ServiceCallback<models.AgentRegistration>): void;
    regenerateKey(resourceGroupName: string, automationAccountName: string, parameters: models.AgentRegistrationRegenerateKeyParameter, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AgentRegistration>): void;
}

/**
 * @class
 * DscNodeOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface DscNodeOperations {


    /**
     * Delete the dsc node identified by node id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeId The node id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscNode>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, nodeId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscNode>>;

    /**
     * Delete the dsc node identified by node id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeId The node id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscNode} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscNode} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscNode} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, nodeId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscNode>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, nodeId: string, callback: ServiceCallback<models.DscNode>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, nodeId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscNode>): void;


    /**
     * Retrieve the dsc node identified by node id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeId The node id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscNode>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, nodeId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscNode>>;

    /**
     * Retrieve the dsc node identified by node id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeId The node id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscNode} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscNode} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscNode} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, nodeId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscNode>;
    get(resourceGroupName: string, automationAccountName: string, nodeId: string, callback: ServiceCallback<models.DscNode>): void;
    get(resourceGroupName: string, automationAccountName: string, nodeId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscNode>): void;


    /**
     * Update the dsc node.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeId Parameters supplied to the update dsc node.
     *
     * @param {object} dscNodeUpdateParameters Parameters supplied to the update
     * dsc node.
     *
     * @param {string} [dscNodeUpdateParameters.nodeId] Gets or sets the id of the
     * dsc node.
     *
     * @param {object} [dscNodeUpdateParameters.properties]
     *
     * @param {string} [dscNodeUpdateParameters.properties.name] Gets or sets the
     * name of the dsc node configuration.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscNode>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, nodeId: string, dscNodeUpdateParameters: models.DscNodeUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscNode>>;

    /**
     * Update the dsc node.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeId Parameters supplied to the update dsc node.
     *
     * @param {object} dscNodeUpdateParameters Parameters supplied to the update
     * dsc node.
     *
     * @param {string} [dscNodeUpdateParameters.nodeId] Gets or sets the id of the
     * dsc node.
     *
     * @param {object} [dscNodeUpdateParameters.properties]
     *
     * @param {string} [dscNodeUpdateParameters.properties.name] Gets or sets the
     * name of the dsc node configuration.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscNode} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscNode} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscNode} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, automationAccountName: string, nodeId: string, dscNodeUpdateParameters: models.DscNodeUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscNode>;
    update(resourceGroupName: string, automationAccountName: string, nodeId: string, dscNodeUpdateParameters: models.DscNodeUpdateParameters, callback: ServiceCallback<models.DscNode>): void;
    update(resourceGroupName: string, automationAccountName: string, nodeId: string, dscNodeUpdateParameters: models.DscNodeUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscNode>): void;


    /**
     * Retrieve a list of dsc nodes.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {number} [options.skip] The number of rows to skip.
     *
     * @param {number} [options.top] The the number of rows to take.
     *
     * @param {string} [options.inlinecount] Return total rows.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscNodeListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, skip? : number, top? : number, inlinecount? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscNodeListResult>>;

    /**
     * Retrieve a list of dsc nodes.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {number} [options.skip] The number of rows to skip.
     *
     * @param {number} [options.top] The the number of rows to take.
     *
     * @param {string} [options.inlinecount] Return total rows.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscNodeListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscNodeListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscNodeListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, skip? : number, top? : number, inlinecount? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.DscNodeListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.DscNodeListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { filter? : string, skip? : number, top? : number, inlinecount? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscNodeListResult>): void;


    /**
     * Retrieve a list of dsc nodes.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscNodeListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscNodeListResult>>;

    /**
     * Retrieve a list of dsc nodes.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscNodeListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscNodeListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscNodeListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscNodeListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.DscNodeListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscNodeListResult>): void;
}

/**
 * @class
 * NodeReports
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface NodeReports {


    /**
     * Retrieve the Dsc node report list by node id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeId The parameters supplied to the list operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscNodeReportListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByNodeWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, nodeId: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscNodeReportListResult>>;

    /**
     * Retrieve the Dsc node report list by node id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeId The parameters supplied to the list operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscNodeReportListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscNodeReportListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscNodeReportListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByNode(resourceGroupName: string, automationAccountName: string, nodeId: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.DscNodeReportListResult>;
    listByNode(resourceGroupName: string, automationAccountName: string, nodeId: string, callback: ServiceCallback<models.DscNodeReportListResult>): void;
    listByNode(resourceGroupName: string, automationAccountName: string, nodeId: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscNodeReportListResult>): void;


    /**
     * Retrieve the Dsc node report data by node id and report id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeId The Dsc node id.
     *
     * @param {string} reportId The report id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscNodeReport>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, nodeId: string, reportId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscNodeReport>>;

    /**
     * Retrieve the Dsc node report data by node id and report id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeId The Dsc node id.
     *
     * @param {string} reportId The report id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscNodeReport} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscNodeReport} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscNodeReport} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, nodeId: string, reportId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscNodeReport>;
    get(resourceGroupName: string, automationAccountName: string, nodeId: string, reportId: string, callback: ServiceCallback<models.DscNodeReport>): void;
    get(resourceGroupName: string, automationAccountName: string, nodeId: string, reportId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscNodeReport>): void;


    /**
     * Retrieve the Dsc node reports by node id and report id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeId The Dsc node id.
     *
     * @param {string} reportId The report id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Object>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getContentWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, nodeId: string, reportId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<any>>;

    /**
     * Retrieve the Dsc node reports by node id and report id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeId The Dsc node id.
     *
     * @param {string} reportId The report id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Object} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Object} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getContent(resourceGroupName: string, automationAccountName: string, nodeId: string, reportId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<any>;
    getContent(resourceGroupName: string, automationAccountName: string, nodeId: string, reportId: string, callback: ServiceCallback<any>): void;
    getContent(resourceGroupName: string, automationAccountName: string, nodeId: string, reportId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;


    /**
     * Retrieve the Dsc node report list by node id.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscNodeReportListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByNodeNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscNodeReportListResult>>;

    /**
     * Retrieve the Dsc node report list by node id.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscNodeReportListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscNodeReportListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscNodeReportListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByNodeNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscNodeReportListResult>;
    listByNodeNext(nextPageLink: string, callback: ServiceCallback<models.DscNodeReportListResult>): void;
    listByNodeNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscNodeReportListResult>): void;
}

/**
 * @class
 * DscCompilationJobOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface DscCompilationJobOperations {


    /**
     * Creates the Dsc compilation job of the configuration.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} compilationJobName The the DSC configuration Id.
     *
     * @param {object} parameters The parameters supplied to the create compilation
     * job operation.
     *
     * @param {object} parameters.configuration Gets or sets the configuration.
     *
     * @param {string} [parameters.configuration.name] Gets or sets the name of the
     * Dsc configuration.
     *
     * @param {object} [parameters.parameters] Gets or sets the parameters of the
     * job.
     *
     * @param {boolean} [parameters.incrementNodeConfigurationBuild] If a new build
     * version of NodeConfiguration is required.
     *
     * @param {string} [parameters.name] Gets or sets name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscCompilationJob>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, compilationJobName: string, parameters: models.DscCompilationJobCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscCompilationJob>>;

    /**
     * Creates the Dsc compilation job of the configuration.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} compilationJobName The the DSC configuration Id.
     *
     * @param {object} parameters The parameters supplied to the create compilation
     * job operation.
     *
     * @param {object} parameters.configuration Gets or sets the configuration.
     *
     * @param {string} [parameters.configuration.name] Gets or sets the name of the
     * Dsc configuration.
     *
     * @param {object} [parameters.parameters] Gets or sets the parameters of the
     * job.
     *
     * @param {boolean} [parameters.incrementNodeConfigurationBuild] If a new build
     * version of NodeConfiguration is required.
     *
     * @param {string} [parameters.name] Gets or sets name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscCompilationJob} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscCompilationJob} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscCompilationJob} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroupName: string, automationAccountName: string, compilationJobName: string, parameters: models.DscCompilationJobCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscCompilationJob>;
    create(resourceGroupName: string, automationAccountName: string, compilationJobName: string, parameters: models.DscCompilationJobCreateParameters, callback: ServiceCallback<models.DscCompilationJob>): void;
    create(resourceGroupName: string, automationAccountName: string, compilationJobName: string, parameters: models.DscCompilationJobCreateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscCompilationJob>): void;


    /**
     * Retrieve the Dsc configuration compilation job identified by job id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} compilationJobName The the DSC configuration Id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscCompilationJob>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, compilationJobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscCompilationJob>>;

    /**
     * Retrieve the Dsc configuration compilation job identified by job id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} compilationJobName The the DSC configuration Id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscCompilationJob} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscCompilationJob} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscCompilationJob} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, compilationJobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscCompilationJob>;
    get(resourceGroupName: string, automationAccountName: string, compilationJobName: string, callback: ServiceCallback<models.DscCompilationJob>): void;
    get(resourceGroupName: string, automationAccountName: string, compilationJobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscCompilationJob>): void;


    /**
     * Retrieve a list of dsc compilation jobs.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscCompilationJobListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscCompilationJobListResult>>;

    /**
     * Retrieve a list of dsc compilation jobs.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscCompilationJobListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscCompilationJobListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscCompilationJobListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.DscCompilationJobListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.DscCompilationJobListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscCompilationJobListResult>): void;


    /**
     * Retrieve the job stream identified by job stream id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {uuid} jobId The job id.
     *
     * @param {string} jobStreamId The job stream id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobStream>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getStreamWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, jobId: string, jobStreamId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobStream>>;

    /**
     * Retrieve the job stream identified by job stream id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {uuid} jobId The job id.
     *
     * @param {string} jobStreamId The job stream id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobStream} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobStream} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobStream} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getStream(resourceGroupName: string, automationAccountName: string, jobId: string, jobStreamId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JobStream>;
    getStream(resourceGroupName: string, automationAccountName: string, jobId: string, jobStreamId: string, callback: ServiceCallback<models.JobStream>): void;
    getStream(resourceGroupName: string, automationAccountName: string, jobId: string, jobStreamId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobStream>): void;


    /**
     * Creates the Dsc compilation job of the configuration.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} compilationJobName The the DSC configuration Id.
     *
     * @param {object} parameters The parameters supplied to the create compilation
     * job operation.
     *
     * @param {object} parameters.configuration Gets or sets the configuration.
     *
     * @param {string} [parameters.configuration.name] Gets or sets the name of the
     * Dsc configuration.
     *
     * @param {object} [parameters.parameters] Gets or sets the parameters of the
     * job.
     *
     * @param {boolean} [parameters.incrementNodeConfigurationBuild] If a new build
     * version of NodeConfiguration is required.
     *
     * @param {string} [parameters.name] Gets or sets name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscCompilationJob>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, compilationJobName: string, parameters: models.DscCompilationJobCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscCompilationJob>>;

    /**
     * Creates the Dsc compilation job of the configuration.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} compilationJobName The the DSC configuration Id.
     *
     * @param {object} parameters The parameters supplied to the create compilation
     * job operation.
     *
     * @param {object} parameters.configuration Gets or sets the configuration.
     *
     * @param {string} [parameters.configuration.name] Gets or sets the name of the
     * Dsc configuration.
     *
     * @param {object} [parameters.parameters] Gets or sets the parameters of the
     * job.
     *
     * @param {boolean} [parameters.incrementNodeConfigurationBuild] If a new build
     * version of NodeConfiguration is required.
     *
     * @param {string} [parameters.name] Gets or sets name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscCompilationJob} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscCompilationJob} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscCompilationJob} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreate(resourceGroupName: string, automationAccountName: string, compilationJobName: string, parameters: models.DscCompilationJobCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscCompilationJob>;
    beginCreate(resourceGroupName: string, automationAccountName: string, compilationJobName: string, parameters: models.DscCompilationJobCreateParameters, callback: ServiceCallback<models.DscCompilationJob>): void;
    beginCreate(resourceGroupName: string, automationAccountName: string, compilationJobName: string, parameters: models.DscCompilationJobCreateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscCompilationJob>): void;


    /**
     * Retrieve a list of dsc compilation jobs.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscCompilationJobListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscCompilationJobListResult>>;

    /**
     * Retrieve a list of dsc compilation jobs.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscCompilationJobListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscCompilationJobListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscCompilationJobListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscCompilationJobListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.DscCompilationJobListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscCompilationJobListResult>): void;
}

/**
 * @class
 * DscCompilationJobStream
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface DscCompilationJobStream {


    /**
     * Retrieve all the job streams for the compilation Job.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {uuid} jobId The job id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobStreamListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByJobWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, jobId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobStreamListResult>>;

    /**
     * Retrieve all the job streams for the compilation Job.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {uuid} jobId The job id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobStreamListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobStreamListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobStreamListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByJob(resourceGroupName: string, automationAccountName: string, jobId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JobStreamListResult>;
    listByJob(resourceGroupName: string, automationAccountName: string, jobId: string, callback: ServiceCallback<models.JobStreamListResult>): void;
    listByJob(resourceGroupName: string, automationAccountName: string, jobId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobStreamListResult>): void;
}

/**
 * @class
 * DscNodeConfigurationOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface DscNodeConfigurationOperations {


    /**
     * Delete the Dsc node configurations by node configuration.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeConfigurationName The Dsc node configuration name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete the Dsc node configurations by node configuration.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeConfigurationName The Dsc node configuration name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve the Dsc node configurations by node configuration.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeConfigurationName The Dsc node configuration name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscNodeConfiguration>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscNodeConfiguration>>;

    /**
     * Retrieve the Dsc node configurations by node configuration.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeConfigurationName The Dsc node configuration name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscNodeConfiguration} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscNodeConfiguration} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscNodeConfiguration} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscNodeConfiguration>;
    get(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, callback: ServiceCallback<models.DscNodeConfiguration>): void;
    get(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscNodeConfiguration>): void;


    /**
     * Create the node configuration identified by node configuration name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeConfigurationName The Dsc node configuration name.
     *
     * @param {object} parameters The create or update parameters for
     * configuration.
     *
     * @param {object} parameters.source Gets or sets the source.
     *
     * @param {object} [parameters.source.hash] Gets or sets the hash.
     *
     * @param {string} parameters.source.hash.algorithm Gets or sets the content
     * hash algorithm used to hash the content.
     *
     * @param {string} parameters.source.hash.value Gets or sets expected hash
     * value of the content.
     *
     * @param {string} [parameters.source.type] Gets or sets the content source
     * type. Possible values include: 'embeddedContent', 'uri'
     *
     * @param {string} [parameters.source.value] Gets or sets the value of the
     * content. This is based on the content source type.
     *
     * @param {string} [parameters.source.version] Gets or sets the version of the
     * content.
     *
     * @param {object} parameters.configuration Gets or sets the configuration of
     * the node.
     *
     * @param {string} [parameters.configuration.name] Gets or sets the name of the
     * Dsc configuration.
     *
     * @param {boolean} [parameters.incrementNodeConfigurationBuild] If a new build
     * version of NodeConfiguration is required.
     *
     * @param {string} [parameters.name] Name of the node configuration.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscNodeConfiguration>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, parameters: models.DscNodeConfigurationCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscNodeConfiguration>>;

    /**
     * Create the node configuration identified by node configuration name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeConfigurationName The Dsc node configuration name.
     *
     * @param {object} parameters The create or update parameters for
     * configuration.
     *
     * @param {object} parameters.source Gets or sets the source.
     *
     * @param {object} [parameters.source.hash] Gets or sets the hash.
     *
     * @param {string} parameters.source.hash.algorithm Gets or sets the content
     * hash algorithm used to hash the content.
     *
     * @param {string} parameters.source.hash.value Gets or sets expected hash
     * value of the content.
     *
     * @param {string} [parameters.source.type] Gets or sets the content source
     * type. Possible values include: 'embeddedContent', 'uri'
     *
     * @param {string} [parameters.source.value] Gets or sets the value of the
     * content. This is based on the content source type.
     *
     * @param {string} [parameters.source.version] Gets or sets the version of the
     * content.
     *
     * @param {object} parameters.configuration Gets or sets the configuration of
     * the node.
     *
     * @param {string} [parameters.configuration.name] Gets or sets the name of the
     * Dsc configuration.
     *
     * @param {boolean} [parameters.incrementNodeConfigurationBuild] If a new build
     * version of NodeConfiguration is required.
     *
     * @param {string} [parameters.name] Name of the node configuration.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscNodeConfiguration} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscNodeConfiguration} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscNodeConfiguration} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, parameters: models.DscNodeConfigurationCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscNodeConfiguration>;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, parameters: models.DscNodeConfigurationCreateOrUpdateParameters, callback: ServiceCallback<models.DscNodeConfiguration>): void;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, parameters: models.DscNodeConfigurationCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscNodeConfiguration>): void;


    /**
     * Retrieve a list of dsc node configurations.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {number} [options.skip] The number of rows to skip.
     *
     * @param {number} [options.top] The the number of rows to take.
     *
     * @param {string} [options.inlinecount] Return total rows.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscNodeConfigurationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, skip? : number, top? : number, inlinecount? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscNodeConfigurationListResult>>;

    /**
     * Retrieve a list of dsc node configurations.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {number} [options.skip] The number of rows to skip.
     *
     * @param {number} [options.top] The the number of rows to take.
     *
     * @param {string} [options.inlinecount] Return total rows.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscNodeConfigurationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscNodeConfigurationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscNodeConfigurationListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { filter? : string, skip? : number, top? : number, inlinecount? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.DscNodeConfigurationListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.DscNodeConfigurationListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { filter? : string, skip? : number, top? : number, inlinecount? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscNodeConfigurationListResult>): void;


    /**
     * Create the node configuration identified by node configuration name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeConfigurationName The Dsc node configuration name.
     *
     * @param {object} parameters The create or update parameters for
     * configuration.
     *
     * @param {object} parameters.source Gets or sets the source.
     *
     * @param {object} [parameters.source.hash] Gets or sets the hash.
     *
     * @param {string} parameters.source.hash.algorithm Gets or sets the content
     * hash algorithm used to hash the content.
     *
     * @param {string} parameters.source.hash.value Gets or sets expected hash
     * value of the content.
     *
     * @param {string} [parameters.source.type] Gets or sets the content source
     * type. Possible values include: 'embeddedContent', 'uri'
     *
     * @param {string} [parameters.source.value] Gets or sets the value of the
     * content. This is based on the content source type.
     *
     * @param {string} [parameters.source.version] Gets or sets the version of the
     * content.
     *
     * @param {object} parameters.configuration Gets or sets the configuration of
     * the node.
     *
     * @param {string} [parameters.configuration.name] Gets or sets the name of the
     * Dsc configuration.
     *
     * @param {boolean} [parameters.incrementNodeConfigurationBuild] If a new build
     * version of NodeConfiguration is required.
     *
     * @param {string} [parameters.name] Name of the node configuration.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscNodeConfiguration>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, parameters: models.DscNodeConfigurationCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscNodeConfiguration>>;

    /**
     * Create the node configuration identified by node configuration name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} nodeConfigurationName The Dsc node configuration name.
     *
     * @param {object} parameters The create or update parameters for
     * configuration.
     *
     * @param {object} parameters.source Gets or sets the source.
     *
     * @param {object} [parameters.source.hash] Gets or sets the hash.
     *
     * @param {string} parameters.source.hash.algorithm Gets or sets the content
     * hash algorithm used to hash the content.
     *
     * @param {string} parameters.source.hash.value Gets or sets expected hash
     * value of the content.
     *
     * @param {string} [parameters.source.type] Gets or sets the content source
     * type. Possible values include: 'embeddedContent', 'uri'
     *
     * @param {string} [parameters.source.value] Gets or sets the value of the
     * content. This is based on the content source type.
     *
     * @param {string} [parameters.source.version] Gets or sets the version of the
     * content.
     *
     * @param {object} parameters.configuration Gets or sets the configuration of
     * the node.
     *
     * @param {string} [parameters.configuration.name] Gets or sets the name of the
     * Dsc configuration.
     *
     * @param {boolean} [parameters.incrementNodeConfigurationBuild] If a new build
     * version of NodeConfiguration is required.
     *
     * @param {string} [parameters.name] Name of the node configuration.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscNodeConfiguration} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscNodeConfiguration} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscNodeConfiguration} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, parameters: models.DscNodeConfigurationCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscNodeConfiguration>;
    beginCreateOrUpdate(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, parameters: models.DscNodeConfigurationCreateOrUpdateParameters, callback: ServiceCallback<models.DscNodeConfiguration>): void;
    beginCreateOrUpdate(resourceGroupName: string, automationAccountName: string, nodeConfigurationName: string, parameters: models.DscNodeConfigurationCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscNodeConfiguration>): void;


    /**
     * Retrieve a list of dsc node configurations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<DscNodeConfigurationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.DscNodeConfigurationListResult>>;

    /**
     * Retrieve a list of dsc node configurations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {DscNodeConfigurationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {DscNodeConfigurationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link DscNodeConfigurationListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.DscNodeConfigurationListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.DscNodeConfigurationListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.DscNodeConfigurationListResult>): void;
}

/**
 * @class
 * NodeCountInformation
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface NodeCountInformation {


    /**
     * Retrieve counts for Dsc Nodes.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NodeCounts>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NodeCounts>>;

    /**
     * Retrieve counts for Dsc Nodes.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NodeCounts} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NodeCounts} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NodeCounts} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NodeCounts>;
    get(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.NodeCounts>): void;
    get(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NodeCounts>): void;
}

/**
 * @class
 * RunbookDraftOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface RunbookDraftOperations {


    /**
     * Retrieve the content of runbook draft identified by runbook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Object>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getContentWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<stream.Readable>>;

    /**
     * Retrieve the content of runbook draft identified by runbook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Object} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Object} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getContent(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<stream.Readable>;
    getContent(resourceGroupName: string, automationAccountName: string, runbookName: string, callback: ServiceCallback<stream.Readable>): void;
    getContent(resourceGroupName: string, automationAccountName: string, runbookName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<stream.Readable>): void;


    /**
     * Replaces the runbook draft content.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} runbookContent The runbook draft content.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Object>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    replaceContentWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, runbookContent: stream.Readable, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<stream.Readable>>;

    /**
     * Replaces the runbook draft content.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} runbookContent The runbook draft content.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Object} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Object} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    replaceContent(resourceGroupName: string, automationAccountName: string, runbookName: string, runbookContent: stream.Readable, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<stream.Readable>;
    replaceContent(resourceGroupName: string, automationAccountName: string, runbookName: string, runbookContent: stream.Readable, callback: ServiceCallback<stream.Readable>): void;
    replaceContent(resourceGroupName: string, automationAccountName: string, runbookName: string, runbookContent: stream.Readable, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<stream.Readable>): void;


    /**
     * Retrieve the runbook draft identified by runbook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RunbookDraft>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RunbookDraft>>;

    /**
     * Retrieve the runbook draft identified by runbook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RunbookDraft} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RunbookDraft} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RunbookDraft} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RunbookDraft>;
    get(resourceGroupName: string, automationAccountName: string, runbookName: string, callback: ServiceCallback<models.RunbookDraft>): void;
    get(resourceGroupName: string, automationAccountName: string, runbookName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RunbookDraft>): void;


    /**
     * Undo draft edit to last known published state identified by runbook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RunbookDraftUndoEditResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    undoEditWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RunbookDraftUndoEditResult>>;

    /**
     * Undo draft edit to last known published state identified by runbook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RunbookDraftUndoEditResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RunbookDraftUndoEditResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RunbookDraftUndoEditResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    undoEdit(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RunbookDraftUndoEditResult>;
    undoEdit(resourceGroupName: string, automationAccountName: string, runbookName: string, callback: ServiceCallback<models.RunbookDraftUndoEditResult>): void;
    undoEdit(resourceGroupName: string, automationAccountName: string, runbookName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RunbookDraftUndoEditResult>): void;


    /**
     * Replaces the runbook draft content.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} runbookContent The runbook draft content.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Object>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginReplaceContentWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, runbookContent: stream.Readable, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<stream.Readable>>;

    /**
     * Replaces the runbook draft content.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} runbookContent The runbook draft content.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Object} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Object} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginReplaceContent(resourceGroupName: string, automationAccountName: string, runbookName: string, runbookContent: stream.Readable, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<stream.Readable>;
    beginReplaceContent(resourceGroupName: string, automationAccountName: string, runbookName: string, runbookContent: stream.Readable, callback: ServiceCallback<stream.Readable>): void;
    beginReplaceContent(resourceGroupName: string, automationAccountName: string, runbookName: string, runbookContent: stream.Readable, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<stream.Readable>): void;
}

/**
 * @class
 * RunbookOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface RunbookOperations {


    /**
     * Publish runbook draft.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The parameters supplied to the publish runbook
     * operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    publishWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Publish runbook draft.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The parameters supplied to the publish runbook
     * operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    publish(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    publish(resourceGroupName: string, automationAccountName: string, runbookName: string, callback: ServiceCallback<void>): void;
    publish(resourceGroupName: string, automationAccountName: string, runbookName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve the content of runbook identified by runbook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Object>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getContentWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<stream.Readable>>;

    /**
     * Retrieve the content of runbook identified by runbook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Object} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Object} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getContent(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<stream.Readable>;
    getContent(resourceGroupName: string, automationAccountName: string, runbookName: string, callback: ServiceCallback<stream.Readable>): void;
    getContent(resourceGroupName: string, automationAccountName: string, runbookName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<stream.Readable>): void;


    /**
     * Retrieve the runbook identified by runbook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Runbook>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Runbook>>;

    /**
     * Retrieve the runbook identified by runbook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Runbook} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Runbook} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Runbook} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Runbook>;
    get(resourceGroupName: string, automationAccountName: string, runbookName: string, callback: ServiceCallback<models.Runbook>): void;
    get(resourceGroupName: string, automationAccountName: string, runbookName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Runbook>): void;


    /**
     * Create the runbook identified by runbook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} parameters The create or update parameters for runbook.
     * Provide either content link for a published runbook or draft, not both.
     *
     * @param {boolean} [parameters.logVerbose] Gets or sets verbose log option.
     *
     * @param {boolean} [parameters.logProgress] Gets or sets progress log option.
     *
     * @param {string} parameters.runbookType Gets or sets the type of the runbook.
     * Possible values include: 'Script', 'Graph', 'PowerShellWorkflow',
     * 'PowerShell', 'GraphPowerShellWorkflow', 'GraphPowerShell'
     *
     * @param {object} [parameters.draft] Gets or sets the draft runbook
     * properties.
     *
     * @param {boolean} [parameters.draft.inEdit] Gets or sets whether runbook is
     * in edit mode.
     *
     * @param {object} [parameters.draft.draftContentLink] Gets or sets the draft
     * runbook content link.
     *
     * @param {date} [parameters.draft.creationTime] Gets or sets the creation time
     * of the runbook draft.
     *
     * @param {date} [parameters.draft.lastModifiedTime] Gets or sets the last
     * modified time of the runbook draft.
     *
     * @param {object} [parameters.draft.parameters] Gets or sets the runbook draft
     * parameters.
     *
     * @param {array} [parameters.draft.outputTypes] Gets or sets the runbook
     * output types.
     *
     * @param {object} [parameters.publishContentLink] Gets or sets the published
     * runbook content link.
     *
     * @param {string} [parameters.publishContentLink.uri] Gets or sets the uri of
     * the runbook content.
     *
     * @param {object} [parameters.publishContentLink.contentHash] Gets or sets the
     * hash.
     *
     * @param {string} parameters.publishContentLink.contentHash.algorithm Gets or
     * sets the content hash algorithm used to hash the content.
     *
     * @param {string} parameters.publishContentLink.contentHash.value Gets or sets
     * expected hash value of the content.
     *
     * @param {string} [parameters.publishContentLink.version] Gets or sets the
     * version of the content.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * runbook.
     *
     * @param {number} [parameters.logActivityTrace] Gets or sets the
     * activity-level tracing options of the runbook.
     *
     * @param {string} [parameters.name] Gets or sets the name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Runbook>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, parameters: models.RunbookCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Runbook>>;

    /**
     * Create the runbook identified by runbook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} parameters The create or update parameters for runbook.
     * Provide either content link for a published runbook or draft, not both.
     *
     * @param {boolean} [parameters.logVerbose] Gets or sets verbose log option.
     *
     * @param {boolean} [parameters.logProgress] Gets or sets progress log option.
     *
     * @param {string} parameters.runbookType Gets or sets the type of the runbook.
     * Possible values include: 'Script', 'Graph', 'PowerShellWorkflow',
     * 'PowerShell', 'GraphPowerShellWorkflow', 'GraphPowerShell'
     *
     * @param {object} [parameters.draft] Gets or sets the draft runbook
     * properties.
     *
     * @param {boolean} [parameters.draft.inEdit] Gets or sets whether runbook is
     * in edit mode.
     *
     * @param {object} [parameters.draft.draftContentLink] Gets or sets the draft
     * runbook content link.
     *
     * @param {date} [parameters.draft.creationTime] Gets or sets the creation time
     * of the runbook draft.
     *
     * @param {date} [parameters.draft.lastModifiedTime] Gets or sets the last
     * modified time of the runbook draft.
     *
     * @param {object} [parameters.draft.parameters] Gets or sets the runbook draft
     * parameters.
     *
     * @param {array} [parameters.draft.outputTypes] Gets or sets the runbook
     * output types.
     *
     * @param {object} [parameters.publishContentLink] Gets or sets the published
     * runbook content link.
     *
     * @param {string} [parameters.publishContentLink.uri] Gets or sets the uri of
     * the runbook content.
     *
     * @param {object} [parameters.publishContentLink.contentHash] Gets or sets the
     * hash.
     *
     * @param {string} parameters.publishContentLink.contentHash.algorithm Gets or
     * sets the content hash algorithm used to hash the content.
     *
     * @param {string} parameters.publishContentLink.contentHash.value Gets or sets
     * expected hash value of the content.
     *
     * @param {string} [parameters.publishContentLink.version] Gets or sets the
     * version of the content.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * runbook.
     *
     * @param {number} [parameters.logActivityTrace] Gets or sets the
     * activity-level tracing options of the runbook.
     *
     * @param {string} [parameters.name] Gets or sets the name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Runbook} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Runbook} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Runbook} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, automationAccountName: string, runbookName: string, parameters: models.RunbookCreateOrUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Runbook>;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, runbookName: string, parameters: models.RunbookCreateOrUpdateParameters, callback: ServiceCallback<models.Runbook>): void;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, runbookName: string, parameters: models.RunbookCreateOrUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Runbook>): void;


    /**
     * Update the runbook identified by runbook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} parameters The update parameters for runbook.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * runbook.
     *
     * @param {boolean} [parameters.logVerbose] Gets or sets verbose log option.
     *
     * @param {boolean} [parameters.logProgress] Gets or sets progress log option.
     *
     * @param {number} [parameters.logActivityTrace] Gets or sets the
     * activity-level tracing options of the runbook.
     *
     * @param {string} [parameters.name] Gets or sets the name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Runbook>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, parameters: models.RunbookUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Runbook>>;

    /**
     * Update the runbook identified by runbook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} parameters The update parameters for runbook.
     *
     * @param {string} [parameters.description] Gets or sets the description of the
     * runbook.
     *
     * @param {boolean} [parameters.logVerbose] Gets or sets verbose log option.
     *
     * @param {boolean} [parameters.logProgress] Gets or sets progress log option.
     *
     * @param {number} [parameters.logActivityTrace] Gets or sets the
     * activity-level tracing options of the runbook.
     *
     * @param {string} [parameters.name] Gets or sets the name of the resource.
     *
     * @param {string} [parameters.location] Gets or sets the location of the
     * resource.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Runbook} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Runbook} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Runbook} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, automationAccountName: string, runbookName: string, parameters: models.RunbookUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Runbook>;
    update(resourceGroupName: string, automationAccountName: string, runbookName: string, parameters: models.RunbookUpdateParameters, callback: ServiceCallback<models.Runbook>): void;
    update(resourceGroupName: string, automationAccountName: string, runbookName: string, parameters: models.RunbookUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Runbook>): void;


    /**
     * Delete the runbook by name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete the runbook by name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, runbookName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, runbookName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve a list of runbooks.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RunbookListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RunbookListResult>>;

    /**
     * Retrieve a list of runbooks.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RunbookListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RunbookListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RunbookListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RunbookListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.RunbookListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RunbookListResult>): void;


    /**
     * Publish runbook draft.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The parameters supplied to the publish runbook
     * operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginPublishWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Publish runbook draft.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The parameters supplied to the publish runbook
     * operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginPublish(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginPublish(resourceGroupName: string, automationAccountName: string, runbookName: string, callback: ServiceCallback<void>): void;
    beginPublish(resourceGroupName: string, automationAccountName: string, runbookName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve a list of runbooks.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RunbookListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RunbookListResult>>;

    /**
     * Retrieve a list of runbooks.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RunbookListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RunbookListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RunbookListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RunbookListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.RunbookListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RunbookListResult>): void;
}

/**
 * @class
 * TestJobStreams
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface TestJobStreams {


    /**
     * Retrieve a test job stream of the test job identified by runbook name and
     * stream id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {string} jobStreamId The job stream id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobStream>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, jobStreamId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobStream>>;

    /**
     * Retrieve a test job stream of the test job identified by runbook name and
     * stream id.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {string} jobStreamId The job stream id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobStream} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobStream} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobStream} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, runbookName: string, jobStreamId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JobStream>;
    get(resourceGroupName: string, automationAccountName: string, runbookName: string, jobStreamId: string, callback: ServiceCallback<models.JobStream>): void;
    get(resourceGroupName: string, automationAccountName: string, runbookName: string, jobStreamId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobStream>): void;


    /**
     * Retrieve a list of test job streams identified by runbook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobStreamListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByTestJobWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobStreamListResult>>;

    /**
     * Retrieve a list of test job streams identified by runbook name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply on the operation.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobStreamListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobStreamListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobStreamListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByTestJob(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.JobStreamListResult>;
    listByTestJob(resourceGroupName: string, automationAccountName: string, runbookName: string, callback: ServiceCallback<models.JobStreamListResult>): void;
    listByTestJob(resourceGroupName: string, automationAccountName: string, runbookName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobStreamListResult>): void;


    /**
     * Retrieve a list of test job streams identified by runbook name.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobStreamListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByTestJobNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobStreamListResult>>;

    /**
     * Retrieve a list of test job streams identified by runbook name.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobStreamListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobStreamListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobStreamListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByTestJobNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JobStreamListResult>;
    listByTestJobNext(nextPageLink: string, callback: ServiceCallback<models.JobStreamListResult>): void;
    listByTestJobNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobStreamListResult>): void;
}

/**
 * @class
 * TestJobOperations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface TestJobOperations {


    /**
     * Create a test job of the runbook.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The parameters supplied to the create test job
     * operation.
     *
     * @param {object} parameters The parameters supplied to the create test job
     * operation.
     *
     * @param {object} [parameters.parameters] Gets or sets the parameters of the
     * test job.
     *
     * @param {string} [parameters.runOn] Gets or sets the runOn which specifies
     * the group name where the job is to be executed.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<TestJob>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, parameters: models.TestJobCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TestJob>>;

    /**
     * Create a test job of the runbook.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The parameters supplied to the create test job
     * operation.
     *
     * @param {object} parameters The parameters supplied to the create test job
     * operation.
     *
     * @param {object} [parameters.parameters] Gets or sets the parameters of the
     * test job.
     *
     * @param {string} [parameters.runOn] Gets or sets the runOn which specifies
     * the group name where the job is to be executed.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {TestJob} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {TestJob} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link TestJob} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroupName: string, automationAccountName: string, runbookName: string, parameters: models.TestJobCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.TestJob>;
    create(resourceGroupName: string, automationAccountName: string, runbookName: string, parameters: models.TestJobCreateParameters, callback: ServiceCallback<models.TestJob>): void;
    create(resourceGroupName: string, automationAccountName: string, runbookName: string, parameters: models.TestJobCreateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TestJob>): void;


    /**
     * Retrieve the test job for the specified runbook.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<TestJob>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TestJob>>;

    /**
     * Retrieve the test job for the specified runbook.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {TestJob} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {TestJob} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link TestJob} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.TestJob>;
    get(resourceGroupName: string, automationAccountName: string, runbookName: string, callback: ServiceCallback<models.TestJob>): void;
    get(resourceGroupName: string, automationAccountName: string, runbookName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TestJob>): void;


    /**
     * Resume the test job.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    resumeWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Resume the test job.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    resume(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    resume(resourceGroupName: string, automationAccountName: string, runbookName: string, callback: ServiceCallback<void>): void;
    resume(resourceGroupName: string, automationAccountName: string, runbookName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Stop the test job.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    stopWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Stop the test job.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    stop(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    stop(resourceGroupName: string, automationAccountName: string, runbookName: string, callback: ServiceCallback<void>): void;
    stop(resourceGroupName: string, automationAccountName: string, runbookName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Suspend the test job.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    suspendWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Suspend the test job.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} runbookName The runbook name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    suspend(resourceGroupName: string, automationAccountName: string, runbookName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    suspend(resourceGroupName: string, automationAccountName: string, runbookName: string, callback: ServiceCallback<void>): void;
    suspend(resourceGroupName: string, automationAccountName: string, runbookName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * Python2Package
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AutomationClient.
 */
export interface Python2Package {


    /**
     * Delete the python 2 package by name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} packageName The python package name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, packageName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete the python 2 package by name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} packageName The python package name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, automationAccountName: string, packageName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, automationAccountName: string, packageName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, automationAccountName: string, packageName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieve the python 2 package identified by package name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} packageName The python package name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Module>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, packageName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Module>>;

    /**
     * Retrieve the python 2 package identified by package name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} packageName The python package name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Module} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Module} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Module} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, automationAccountName: string, packageName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Module>;
    get(resourceGroupName: string, automationAccountName: string, packageName: string, callback: ServiceCallback<models.Module>): void;
    get(resourceGroupName: string, automationAccountName: string, packageName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Module>): void;


    /**
     * Create or Update the python 2 package identified by package name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} packageName The name of python package.
     *
     * @param {object} parameters The create or update parameters for python
     * package.
     *
     * @param {object} parameters.contentLink Gets or sets the module content link.
     *
     * @param {string} [parameters.contentLink.uri] Gets or sets the uri of the
     * runbook content.
     *
     * @param {object} [parameters.contentLink.contentHash] Gets or sets the hash.
     *
     * @param {string} parameters.contentLink.contentHash.algorithm Gets or sets
     * the content hash algorithm used to hash the content.
     *
     * @param {string} parameters.contentLink.contentHash.value Gets or sets
     * expected hash value of the content.
     *
     * @param {string} [parameters.contentLink.version] Gets or sets the version of
     * the content.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Module>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, packageName: string, parameters: models.PythonPackageCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Module>>;

    /**
     * Create or Update the python 2 package identified by package name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} packageName The name of python package.
     *
     * @param {object} parameters The create or update parameters for python
     * package.
     *
     * @param {object} parameters.contentLink Gets or sets the module content link.
     *
     * @param {string} [parameters.contentLink.uri] Gets or sets the uri of the
     * runbook content.
     *
     * @param {object} [parameters.contentLink.contentHash] Gets or sets the hash.
     *
     * @param {string} parameters.contentLink.contentHash.algorithm Gets or sets
     * the content hash algorithm used to hash the content.
     *
     * @param {string} parameters.contentLink.contentHash.value Gets or sets
     * expected hash value of the content.
     *
     * @param {string} [parameters.contentLink.version] Gets or sets the version of
     * the content.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Module} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Module} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Module} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, automationAccountName: string, packageName: string, parameters: models.PythonPackageCreateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Module>;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, packageName: string, parameters: models.PythonPackageCreateParameters, callback: ServiceCallback<models.Module>): void;
    createOrUpdate(resourceGroupName: string, automationAccountName: string, packageName: string, parameters: models.PythonPackageCreateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Module>): void;


    /**
     * Update the python 2 package identified by package name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} packageName The name of python package.
     *
     * @param {object} parameters The update parameters for python package.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Module>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, packageName: string, parameters: models.PythonPackageUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Module>>;

    /**
     * Update the python 2 package identified by package name.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {string} packageName The name of python package.
     *
     * @param {object} parameters The update parameters for python package.
     *
     * @param {object} [parameters.tags] Gets or sets the tags attached to the
     * resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Module} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Module} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Module} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, automationAccountName: string, packageName: string, parameters: models.PythonPackageUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Module>;
    update(resourceGroupName: string, automationAccountName: string, packageName: string, parameters: models.PythonPackageUpdateParameters, callback: ServiceCallback<models.Module>): void;
    update(resourceGroupName: string, automationAccountName: string, packageName: string, parameters: models.PythonPackageUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Module>): void;


    /**
     * Retrieve a list of python 2 packages.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ModuleListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountWithHttpOperationResponse(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ModuleListResult>>;

    /**
     * Retrieve a list of python 2 packages.
     *
     * @param {string} resourceGroupName Name of an Azure Resource group.
     *
     * @param {string} automationAccountName The name of the automation account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ModuleListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ModuleListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ModuleListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ModuleListResult>;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, callback: ServiceCallback<models.ModuleListResult>): void;
    listByAutomationAccount(resourceGroupName: string, automationAccountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ModuleListResult>): void;


    /**
     * Retrieve a list of python 2 packages.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ModuleListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAutomationAccountNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ModuleListResult>>;

    /**
     * Retrieve a list of python 2 packages.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ModuleListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ModuleListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ModuleListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAutomationAccountNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ModuleListResult>;
    listByAutomationAccountNext(nextPageLink: string, callback: ServiceCallback<models.ModuleListResult>): void;
    listByAutomationAccountNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ModuleListResult>): void;
}

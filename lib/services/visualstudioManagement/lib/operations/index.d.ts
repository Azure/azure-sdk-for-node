/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the VisualStudioResourceProviderClient.
 */
export interface Operations {


    /**
     * @summary Operations_List
     *
     * Gets the details of all operations possible on the Microsoft.VisualStudio
     * resource provider.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * @summary Operations_List
     *
     * Gets the details of all operations possible on the Microsoft.VisualStudio
     * resource provider.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    list(callback: ServiceCallback<models.OperationListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;
}

/**
 * @class
 * Accounts
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the VisualStudioResourceProviderClient.
 */
export interface Accounts {


    /**
     * @summary Accounts_CheckNameAvailability
     *
     * Checks if the specified Visual Studio Team Services account name is
     * available. Resource name can be either an account name or an account name
     * and PUID.
     *
     * @param {object} body Parameters describing the name to check availability
     * for.
     *
     * @param {string} [body.resourceName] The name of the resource to check
     * availability for.
     *
     * @param {string} [body.resourceType] The type of resource to check
     * availability for.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<CheckNameAvailabilityResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    checkNameAvailabilityWithHttpOperationResponse(body: models.CheckNameAvailabilityParameter, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CheckNameAvailabilityResult>>;

    /**
     * @summary Accounts_CheckNameAvailability
     *
     * Checks if the specified Visual Studio Team Services account name is
     * available. Resource name can be either an account name or an account name
     * and PUID.
     *
     * @param {object} body Parameters describing the name to check availability
     * for.
     *
     * @param {string} [body.resourceName] The name of the resource to check
     * availability for.
     *
     * @param {string} [body.resourceType] The type of resource to check
     * availability for.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {CheckNameAvailabilityResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {CheckNameAvailabilityResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link CheckNameAvailabilityResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    checkNameAvailability(body: models.CheckNameAvailabilityParameter, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CheckNameAvailabilityResult>;
    checkNameAvailability(body: models.CheckNameAvailabilityParameter, callback: ServiceCallback<models.CheckNameAvailabilityResult>): void;
    checkNameAvailability(body: models.CheckNameAvailabilityParameter, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CheckNameAvailabilityResult>): void;


    /**
     * @summary Accounts_ListByResourceGroup
     *
     * Gets all Visual Studio Team Services account resources under the resource
     * group linked to the specified Azure subscription.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AccountResourceListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AccountResourceListResult>>;

    /**
     * @summary Accounts_ListByResourceGroup
     *
     * Gets all Visual Studio Team Services account resources under the resource
     * group linked to the specified Azure subscription.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AccountResourceListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AccountResourceListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AccountResourceListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AccountResourceListResult>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.AccountResourceListResult>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AccountResourceListResult>): void;


    /**
     * @summary Accounts_CreateOrUpdate
     *
     * Creates or updates a Visual Studio Team Services account resource.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {object} body The request data.
     *
     * @param {string} [body.accountName] The account name.
     *
     * @param {string} [body.location] The Azure instance location.
     *
     * @param {object} [body.operationType] The type of the operation.
     *
     * @param {object} [body.properties] The custom properties of the resource.
     *
     * @param {object} [body.tags] The custom tags of the resource.
     *
     * @param {string} resourceName Name of the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AccountResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, body: models.AccountResourceRequest, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AccountResource>>;

    /**
     * @summary Accounts_CreateOrUpdate
     *
     * Creates or updates a Visual Studio Team Services account resource.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {object} body The request data.
     *
     * @param {string} [body.accountName] The account name.
     *
     * @param {string} [body.location] The Azure instance location.
     *
     * @param {object} [body.operationType] The type of the operation.
     *
     * @param {object} [body.properties] The custom properties of the resource.
     *
     * @param {object} [body.tags] The custom tags of the resource.
     *
     * @param {string} resourceName Name of the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AccountResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AccountResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AccountResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, body: models.AccountResourceRequest, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AccountResource>;
    createOrUpdate(resourceGroupName: string, body: models.AccountResourceRequest, resourceName: string, callback: ServiceCallback<models.AccountResource>): void;
    createOrUpdate(resourceGroupName: string, body: models.AccountResourceRequest, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AccountResource>): void;


    /**
     * @summary Accounts_Delete
     *
     * Deletes a Visual Studio Team Services account resource.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} resourceName Name of the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Accounts_Delete
     *
     * Deletes a Visual Studio Team Services account resource.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} resourceName Name of the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, resourceName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Accounts_Get
     *
     * Gets the Visual Studio Team Services account resource details.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} resourceName Name of the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AccountResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AccountResource>>;

    /**
     * @summary Accounts_Get
     *
     * Gets the Visual Studio Team Services account resource details.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} resourceName Name of the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AccountResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AccountResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AccountResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AccountResource>;
    get(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.AccountResource>): void;
    get(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AccountResource>): void;
}

/**
 * @class
 * Extensions
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the VisualStudioResourceProviderClient.
 */
export interface Extensions {


    /**
     * @summary Extensions_ListByAccount
     *
     * Gets the details of the extension resources created within the resource
     * group.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} accountResourceName The name of the Visual Studio Team
     * Services account resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ExtensionResourceListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAccountWithHttpOperationResponse(resourceGroupName: string, accountResourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ExtensionResourceListResult>>;

    /**
     * @summary Extensions_ListByAccount
     *
     * Gets the details of the extension resources created within the resource
     * group.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} accountResourceName The name of the Visual Studio Team
     * Services account resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ExtensionResourceListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ExtensionResourceListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ExtensionResourceListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAccount(resourceGroupName: string, accountResourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ExtensionResourceListResult>;
    listByAccount(resourceGroupName: string, accountResourceName: string, callback: ServiceCallback<models.ExtensionResourceListResult>): void;
    listByAccount(resourceGroupName: string, accountResourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ExtensionResourceListResult>): void;


    /**
     * @summary Extensions_Create
     *
     * Registers the extension with a Visual Studio Team Services account.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {object} body An object containing additional information related to
     * the extension request.
     *
     * @param {string} [body.location] The Azure region of the Visual Studio
     * account associated with this request (i.e 'southcentralus'.)
     *
     * @param {object} [body.plan] Extended information about the plan being
     * purchased for this extension resource.
     *
     * @param {string} [body.plan.name] Name of the plan.
     *
     * @param {string} [body.plan.product] Product name.
     *
     * @param {string} [body.plan.promotionCode] Optional: the promotion code
     * associated with the plan.
     *
     * @param {string} [body.plan.publisher] Name of the extension publisher.
     *
     * @param {string} [body.plan.version] A string that uniquely identifies the
     * plan version.
     *
     * @param {object} [body.properties] A dictionary of extended properties. This
     * property is currently unused.
     *
     * @param {object} [body.tags] A dictionary of user-defined tags to be stored
     * with the extension resource.
     *
     * @param {string} accountResourceName The name of the Visual Studio Team
     * Services account resource.
     *
     * @param {string} extensionResourceName The name of the extension.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ExtensionResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroupName: string, body: models.ExtensionResourceRequest, accountResourceName: string, extensionResourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ExtensionResource>>;

    /**
     * @summary Extensions_Create
     *
     * Registers the extension with a Visual Studio Team Services account.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {object} body An object containing additional information related to
     * the extension request.
     *
     * @param {string} [body.location] The Azure region of the Visual Studio
     * account associated with this request (i.e 'southcentralus'.)
     *
     * @param {object} [body.plan] Extended information about the plan being
     * purchased for this extension resource.
     *
     * @param {string} [body.plan.name] Name of the plan.
     *
     * @param {string} [body.plan.product] Product name.
     *
     * @param {string} [body.plan.promotionCode] Optional: the promotion code
     * associated with the plan.
     *
     * @param {string} [body.plan.publisher] Name of the extension publisher.
     *
     * @param {string} [body.plan.version] A string that uniquely identifies the
     * plan version.
     *
     * @param {object} [body.properties] A dictionary of extended properties. This
     * property is currently unused.
     *
     * @param {object} [body.tags] A dictionary of user-defined tags to be stored
     * with the extension resource.
     *
     * @param {string} accountResourceName The name of the Visual Studio Team
     * Services account resource.
     *
     * @param {string} extensionResourceName The name of the extension.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ExtensionResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ExtensionResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ExtensionResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroupName: string, body: models.ExtensionResourceRequest, accountResourceName: string, extensionResourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ExtensionResource>;
    create(resourceGroupName: string, body: models.ExtensionResourceRequest, accountResourceName: string, extensionResourceName: string, callback: ServiceCallback<models.ExtensionResource>): void;
    create(resourceGroupName: string, body: models.ExtensionResourceRequest, accountResourceName: string, extensionResourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ExtensionResource>): void;


    /**
     * @summary Extensions_Delete
     *
     * Removes an extension resource registration for a Visual Studio Team Services
     * account.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} accountResourceName The name of the Visual Studio Team
     * Services account resource.
     *
     * @param {string} extensionResourceName The name of the extension.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountResourceName: string, extensionResourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Extensions_Delete
     *
     * Removes an extension resource registration for a Visual Studio Team Services
     * account.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} accountResourceName The name of the Visual Studio Team
     * Services account resource.
     *
     * @param {string} extensionResourceName The name of the extension.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, accountResourceName: string, extensionResourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, accountResourceName: string, extensionResourceName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, accountResourceName: string, extensionResourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Extensions_Get
     *
     * Gets the details of an extension associated with a Visual Studio Team
     * Services account resource.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} accountResourceName The name of the Visual Studio Team
     * Services account resource.
     *
     * @param {string} extensionResourceName The name of the extension.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ExtensionResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, accountResourceName: string, extensionResourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ExtensionResource>>;

    /**
     * @summary Extensions_Get
     *
     * Gets the details of an extension associated with a Visual Studio Team
     * Services account resource.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} accountResourceName The name of the Visual Studio Team
     * Services account resource.
     *
     * @param {string} extensionResourceName The name of the extension.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ExtensionResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ExtensionResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ExtensionResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, accountResourceName: string, extensionResourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ExtensionResource>;
    get(resourceGroupName: string, accountResourceName: string, extensionResourceName: string, callback: ServiceCallback<models.ExtensionResource>): void;
    get(resourceGroupName: string, accountResourceName: string, extensionResourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ExtensionResource>): void;


    /**
     * @summary Extensions_Update
     *
     * Updates an existing extension registration for the Visual Studio Team
     * Services account.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {object} body An object containing additional information related to
     * the extension request.
     *
     * @param {string} [body.location] The Azure region of the Visual Studio
     * account associated with this request (i.e 'southcentralus'.)
     *
     * @param {object} [body.plan] Extended information about the plan being
     * purchased for this extension resource.
     *
     * @param {string} [body.plan.name] Name of the plan.
     *
     * @param {string} [body.plan.product] Product name.
     *
     * @param {string} [body.plan.promotionCode] Optional: the promotion code
     * associated with the plan.
     *
     * @param {string} [body.plan.publisher] Name of the extension publisher.
     *
     * @param {string} [body.plan.version] A string that uniquely identifies the
     * plan version.
     *
     * @param {object} [body.properties] A dictionary of extended properties. This
     * property is currently unused.
     *
     * @param {object} [body.tags] A dictionary of user-defined tags to be stored
     * with the extension resource.
     *
     * @param {string} accountResourceName The name of the Visual Studio Team
     * Services account resource.
     *
     * @param {string} extensionResourceName The name of the extension.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ExtensionResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, body: models.ExtensionResourceRequest, accountResourceName: string, extensionResourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ExtensionResource>>;

    /**
     * @summary Extensions_Update
     *
     * Updates an existing extension registration for the Visual Studio Team
     * Services account.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {object} body An object containing additional information related to
     * the extension request.
     *
     * @param {string} [body.location] The Azure region of the Visual Studio
     * account associated with this request (i.e 'southcentralus'.)
     *
     * @param {object} [body.plan] Extended information about the plan being
     * purchased for this extension resource.
     *
     * @param {string} [body.plan.name] Name of the plan.
     *
     * @param {string} [body.plan.product] Product name.
     *
     * @param {string} [body.plan.promotionCode] Optional: the promotion code
     * associated with the plan.
     *
     * @param {string} [body.plan.publisher] Name of the extension publisher.
     *
     * @param {string} [body.plan.version] A string that uniquely identifies the
     * plan version.
     *
     * @param {object} [body.properties] A dictionary of extended properties. This
     * property is currently unused.
     *
     * @param {object} [body.tags] A dictionary of user-defined tags to be stored
     * with the extension resource.
     *
     * @param {string} accountResourceName The name of the Visual Studio Team
     * Services account resource.
     *
     * @param {string} extensionResourceName The name of the extension.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ExtensionResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ExtensionResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ExtensionResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, body: models.ExtensionResourceRequest, accountResourceName: string, extensionResourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ExtensionResource>;
    update(resourceGroupName: string, body: models.ExtensionResourceRequest, accountResourceName: string, extensionResourceName: string, callback: ServiceCallback<models.ExtensionResource>): void;
    update(resourceGroupName: string, body: models.ExtensionResourceRequest, accountResourceName: string, extensionResourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ExtensionResource>): void;
}

/**
 * @class
 * Projects
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the VisualStudioResourceProviderClient.
 */
export interface Projects {


    /**
     * @summary Projects_ListByResourceGroup
     *
     * Gets all Visual Studio Team Services project resources created in the
     * specified Team Services account.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} rootResourceName Name of the Team Services account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProjectResourceListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, rootResourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProjectResourceListResult>>;

    /**
     * @summary Projects_ListByResourceGroup
     *
     * Gets all Visual Studio Team Services project resources created in the
     * specified Team Services account.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} rootResourceName Name of the Team Services account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProjectResourceListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProjectResourceListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProjectResourceListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, rootResourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProjectResourceListResult>;
    listByResourceGroup(resourceGroupName: string, rootResourceName: string, callback: ServiceCallback<models.ProjectResourceListResult>): void;
    listByResourceGroup(resourceGroupName: string, rootResourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProjectResourceListResult>): void;


    /**
     * @summary Projects_Create
     *
     * Creates a Team Services project in the collection with the specified name.
     * 'VersionControlOption' and 'ProcessTemplateId' must be specified in the
     * resource properties. Valid values for VersionControlOption: Git, Tfvc. Valid
     * values for ProcessTemplateId: 6B724908-EF14-45CF-84F8-768B5384DA45,
     * ADCC42AB-9882-485E-A3ED-7678F01F66BC, 27450541-8E31-4150-9947-DC59F998FC01
     * (these IDs correspond to Scrum, Agile, and CMMI process templates).
     *
     * @param {object} body The request data.
     *
     * @param {object} [body.properties] Key/value pair of resource properties.
     *
     * @param {string} [body.location] Resource location.
     *
     * @param {object} [body.tags] Resource tags.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} rootResourceName Name of the Team Services account.
     *
     * @param {string} resourceName Name of the Team Services project.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.validating] This parameter is ignored and should be
     * set to an empty string.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProjectResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(body: models.ProjectResource, resourceGroupName: string, rootResourceName: string, resourceName: string, options?: { validating? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProjectResource>>;

    /**
     * @summary Projects_Create
     *
     * Creates a Team Services project in the collection with the specified name.
     * 'VersionControlOption' and 'ProcessTemplateId' must be specified in the
     * resource properties. Valid values for VersionControlOption: Git, Tfvc. Valid
     * values for ProcessTemplateId: 6B724908-EF14-45CF-84F8-768B5384DA45,
     * ADCC42AB-9882-485E-A3ED-7678F01F66BC, 27450541-8E31-4150-9947-DC59F998FC01
     * (these IDs correspond to Scrum, Agile, and CMMI process templates).
     *
     * @param {object} body The request data.
     *
     * @param {object} [body.properties] Key/value pair of resource properties.
     *
     * @param {string} [body.location] Resource location.
     *
     * @param {object} [body.tags] Resource tags.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} rootResourceName Name of the Team Services account.
     *
     * @param {string} resourceName Name of the Team Services project.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.validating] This parameter is ignored and should be
     * set to an empty string.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProjectResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProjectResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProjectResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(body: models.ProjectResource, resourceGroupName: string, rootResourceName: string, resourceName: string, options?: { validating? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ProjectResource>;
    create(body: models.ProjectResource, resourceGroupName: string, rootResourceName: string, resourceName: string, callback: ServiceCallback<models.ProjectResource>): void;
    create(body: models.ProjectResource, resourceGroupName: string, rootResourceName: string, resourceName: string, options: { validating? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProjectResource>): void;


    /**
     * @summary Projects_Get
     *
     * Gets the details of a Team Services project resource.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} rootResourceName Name of the Team Services account.
     *
     * @param {string} resourceName Name of the Team Services project.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProjectResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, rootResourceName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProjectResource>>;

    /**
     * @summary Projects_Get
     *
     * Gets the details of a Team Services project resource.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} rootResourceName Name of the Team Services account.
     *
     * @param {string} resourceName Name of the Team Services project.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProjectResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProjectResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProjectResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, rootResourceName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProjectResource>;
    get(resourceGroupName: string, rootResourceName: string, resourceName: string, callback: ServiceCallback<models.ProjectResource>): void;
    get(resourceGroupName: string, rootResourceName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProjectResource>): void;


    /**
     * @summary Projects_Update
     *
     * Updates the tags of the specified Team Services project.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {object} body The request data.
     *
     * @param {object} [body.properties] Key/value pair of resource properties.
     *
     * @param {string} [body.location] Resource location.
     *
     * @param {object} [body.tags] Resource tags.
     *
     * @param {string} rootResourceName Name of the Team Services account.
     *
     * @param {string} resourceName Name of the Team Services project.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProjectResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, body: models.ProjectResource, rootResourceName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProjectResource>>;

    /**
     * @summary Projects_Update
     *
     * Updates the tags of the specified Team Services project.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {object} body The request data.
     *
     * @param {object} [body.properties] Key/value pair of resource properties.
     *
     * @param {string} [body.location] Resource location.
     *
     * @param {object} [body.tags] Resource tags.
     *
     * @param {string} rootResourceName Name of the Team Services account.
     *
     * @param {string} resourceName Name of the Team Services project.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProjectResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProjectResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProjectResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, body: models.ProjectResource, rootResourceName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProjectResource>;
    update(resourceGroupName: string, body: models.ProjectResource, rootResourceName: string, resourceName: string, callback: ServiceCallback<models.ProjectResource>): void;
    update(resourceGroupName: string, body: models.ProjectResource, rootResourceName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProjectResource>): void;


    /**
     * @summary Projects_GetJobStatus
     *
     * Gets the status of the project resource creation job.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} rootResourceName Name of the Team Services account.
     *
     * @param {string} resourceName Name of the Team Services project.
     *
     * @param {string} subContainerName This parameter should be set to the
     * resourceName.
     *
     * @param {string} operation The operation type. The only supported value is
     * 'put'.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {uuid} [options.jobId] The job identifier.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProjectResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getJobStatusWithHttpOperationResponse(resourceGroupName: string, rootResourceName: string, resourceName: string, subContainerName: string, operation: string, options?: { jobId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProjectResource>>;

    /**
     * @summary Projects_GetJobStatus
     *
     * Gets the status of the project resource creation job.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} rootResourceName Name of the Team Services account.
     *
     * @param {string} resourceName Name of the Team Services project.
     *
     * @param {string} subContainerName This parameter should be set to the
     * resourceName.
     *
     * @param {string} operation The operation type. The only supported value is
     * 'put'.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {uuid} [options.jobId] The job identifier.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProjectResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProjectResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProjectResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getJobStatus(resourceGroupName: string, rootResourceName: string, resourceName: string, subContainerName: string, operation: string, options?: { jobId? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ProjectResource>;
    getJobStatus(resourceGroupName: string, rootResourceName: string, resourceName: string, subContainerName: string, operation: string, callback: ServiceCallback<models.ProjectResource>): void;
    getJobStatus(resourceGroupName: string, rootResourceName: string, resourceName: string, subContainerName: string, operation: string, options: { jobId? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProjectResource>): void;


    /**
     * @summary Projects_Create
     *
     * Creates a Team Services project in the collection with the specified name.
     * 'VersionControlOption' and 'ProcessTemplateId' must be specified in the
     * resource properties. Valid values for VersionControlOption: Git, Tfvc. Valid
     * values for ProcessTemplateId: 6B724908-EF14-45CF-84F8-768B5384DA45,
     * ADCC42AB-9882-485E-A3ED-7678F01F66BC, 27450541-8E31-4150-9947-DC59F998FC01
     * (these IDs correspond to Scrum, Agile, and CMMI process templates).
     *
     * @param {object} body The request data.
     *
     * @param {object} [body.properties] Key/value pair of resource properties.
     *
     * @param {string} [body.location] Resource location.
     *
     * @param {object} [body.tags] Resource tags.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} rootResourceName Name of the Team Services account.
     *
     * @param {string} resourceName Name of the Team Services project.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.validating] This parameter is ignored and should be
     * set to an empty string.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProjectResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateWithHttpOperationResponse(body: models.ProjectResource, resourceGroupName: string, rootResourceName: string, resourceName: string, options?: { validating? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProjectResource>>;

    /**
     * @summary Projects_Create
     *
     * Creates a Team Services project in the collection with the specified name.
     * 'VersionControlOption' and 'ProcessTemplateId' must be specified in the
     * resource properties. Valid values for VersionControlOption: Git, Tfvc. Valid
     * values for ProcessTemplateId: 6B724908-EF14-45CF-84F8-768B5384DA45,
     * ADCC42AB-9882-485E-A3ED-7678F01F66BC, 27450541-8E31-4150-9947-DC59F998FC01
     * (these IDs correspond to Scrum, Agile, and CMMI process templates).
     *
     * @param {object} body The request data.
     *
     * @param {object} [body.properties] Key/value pair of resource properties.
     *
     * @param {string} [body.location] Resource location.
     *
     * @param {object} [body.tags] Resource tags.
     *
     * @param {string} resourceGroupName Name of the resource group within the
     * Azure subscription.
     *
     * @param {string} rootResourceName Name of the Team Services account.
     *
     * @param {string} resourceName Name of the Team Services project.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.validating] This parameter is ignored and should be
     * set to an empty string.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProjectResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProjectResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProjectResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreate(body: models.ProjectResource, resourceGroupName: string, rootResourceName: string, resourceName: string, options?: { validating? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ProjectResource>;
    beginCreate(body: models.ProjectResource, resourceGroupName: string, rootResourceName: string, resourceName: string, callback: ServiceCallback<models.ProjectResource>): void;
    beginCreate(body: models.ProjectResource, resourceGroupName: string, rootResourceName: string, resourceName: string, options: { validating? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProjectResource>): void;
}

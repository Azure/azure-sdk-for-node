/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The integration account schema.
 *
 * @extends models['Resource']
 */
class IntegrationAccountSchema extends models['Resource'] {
  /**
   * Create a IntegrationAccountSchema.
   * @member {string} schemaType The schema type. Possible values include:
   * 'NotSpecified', 'Xml'
   * @member {string} [targetNamespace] The target namespace of the schema.
   * @member {string} [documentName] The document name.
   * @member {string} [fileName] The file name.
   * @member {date} [createdTime] The created time.
   * @member {date} [changedTime] The changed time.
   * @member {object} [metadata] The metadata.
   * @member {string} [content] The content.
   * @member {string} [contentType] The content type.
   * @member {object} [contentLink] The content link.
   * @member {string} [contentLink.uri] The content link URI.
   * @member {string} [contentLink.contentVersion] The content version.
   * @member {number} [contentLink.contentSize] The content size.
   * @member {object} [contentLink.contentHash] The content hash.
   * @member {string} [contentLink.contentHash.algorithm] The algorithm of the
   * content hash.
   * @member {string} [contentLink.contentHash.value] The value of the content
   * hash.
   * @member {object} [contentLink.metadata] The metadata.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of IntegrationAccountSchema
   *
   * @returns {object} metadata of IntegrationAccountSchema
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IntegrationAccountSchema',
      type: {
        name: 'Composite',
        className: 'IntegrationAccountSchema',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          schemaType: {
            required: true,
            serializedName: 'properties.schemaType',
            type: {
              name: 'String'
            }
          },
          targetNamespace: {
            required: false,
            serializedName: 'properties.targetNamespace',
            type: {
              name: 'String'
            }
          },
          documentName: {
            required: false,
            serializedName: 'properties.documentName',
            type: {
              name: 'String'
            }
          },
          fileName: {
            required: false,
            serializedName: 'properties.fileName',
            type: {
              name: 'String'
            }
          },
          createdTime: {
            required: false,
            readOnly: true,
            serializedName: 'properties.createdTime',
            type: {
              name: 'DateTime'
            }
          },
          changedTime: {
            required: false,
            readOnly: true,
            serializedName: 'properties.changedTime',
            type: {
              name: 'DateTime'
            }
          },
          metadata: {
            required: false,
            serializedName: 'properties.metadata',
            type: {
              name: 'Object'
            }
          },
          content: {
            required: false,
            serializedName: 'properties.content',
            type: {
              name: 'String'
            }
          },
          contentType: {
            required: false,
            serializedName: 'properties.contentType',
            type: {
              name: 'String'
            }
          },
          contentLink: {
            required: false,
            readOnly: true,
            serializedName: 'properties.contentLink',
            type: {
              name: 'Composite',
              className: 'ContentLink'
            }
          }
        }
      }
    };
  }
}

module.exports = IntegrationAccountSchema;

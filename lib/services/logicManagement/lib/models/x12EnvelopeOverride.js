/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The X12 envelope override settings.
 *
 */
class X12EnvelopeOverride {
  /**
   * Create a X12EnvelopeOverride.
   * @property {string} targetNamespace The target namespace on which this
   * envelope settings has to be applied.
   * @property {string} protocolVersion The protocol version on which this
   * envelope settings has to be applied.
   * @property {string} messageId The message id on which this envelope
   * settings has to be applied.
   * @property {string} responsibleAgencyCode The responsible agency code.
   * @property {string} headerVersion The header version.
   * @property {string} senderApplicationId The sender application id.
   * @property {string} receiverApplicationId The receiver application id.
   * @property {string} [functionalIdentifierCode] The functional identifier
   * code.
   * @property {string} dateFormat The date format. Possible values include:
   * 'NotSpecified', 'CCYYMMDD', 'YYMMDD'
   * @property {string} timeFormat The time format. Possible values include:
   * 'NotSpecified', 'HHMM', 'HHMMSS', 'HHMMSSdd', 'HHMMSSd'
   */
  constructor() {
  }

  /**
   * Defines the metadata of X12EnvelopeOverride
   *
   * @returns {object} metadata of X12EnvelopeOverride
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'X12EnvelopeOverride',
      type: {
        name: 'Composite',
        className: 'X12EnvelopeOverride',
        modelProperties: {
          targetNamespace: {
            required: true,
            serializedName: 'targetNamespace',
            type: {
              name: 'String'
            }
          },
          protocolVersion: {
            required: true,
            serializedName: 'protocolVersion',
            type: {
              name: 'String'
            }
          },
          messageId: {
            required: true,
            serializedName: 'messageId',
            type: {
              name: 'String'
            }
          },
          responsibleAgencyCode: {
            required: true,
            serializedName: 'responsibleAgencyCode',
            type: {
              name: 'String'
            }
          },
          headerVersion: {
            required: true,
            serializedName: 'headerVersion',
            type: {
              name: 'String'
            }
          },
          senderApplicationId: {
            required: true,
            serializedName: 'senderApplicationId',
            type: {
              name: 'String'
            }
          },
          receiverApplicationId: {
            required: true,
            serializedName: 'receiverApplicationId',
            type: {
              name: 'String'
            }
          },
          functionalIdentifierCode: {
            required: false,
            serializedName: 'functionalIdentifierCode',
            type: {
              name: 'String'
            }
          },
          dateFormat: {
            required: true,
            serializedName: 'dateFormat',
            type: {
              name: 'String'
            }
          },
          timeFormat: {
            required: true,
            serializedName: 'timeFormat',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = X12EnvelopeOverride;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The AS2 agreement acknowledegment connection settings.
 *
 */
class AS2AcknowledgementConnectionSettings {
  /**
   * Create a AS2AcknowledgementConnectionSettings.
   * @member {boolean} ignoreCertificateNameMismatch The value indicating
   * whether to ignore mismatch in certificate name.
   * @member {boolean} supportHttpStatusCodeContinue The value indicating
   * whether to support HTTP status code 'CONTINUE'.
   * @member {boolean} keepHttpConnectionAlive The value indicating whether to
   * keep the connection alive.
   * @member {boolean} unfoldHttpHeaders The value indicating whether to unfold
   * the HTTP headers.
   */
  constructor() {
  }

  /**
   * Defines the metadata of AS2AcknowledgementConnectionSettings
   *
   * @returns {object} metadata of AS2AcknowledgementConnectionSettings
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AS2AcknowledgementConnectionSettings',
      type: {
        name: 'Composite',
        className: 'AS2AcknowledgementConnectionSettings',
        modelProperties: {
          ignoreCertificateNameMismatch: {
            required: true,
            serializedName: 'ignoreCertificateNameMismatch',
            type: {
              name: 'Boolean'
            }
          },
          supportHttpStatusCodeContinue: {
            required: true,
            serializedName: 'supportHttpStatusCodeContinue',
            type: {
              name: 'Boolean'
            }
          },
          keepHttpConnectionAlive: {
            required: true,
            serializedName: 'keepHttpConnectionAlive',
            type: {
              name: 'Boolean'
            }
          },
          unfoldHttpHeaders: {
            required: true,
            serializedName: 'unfoldHttpHeaders',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = AS2AcknowledgementConnectionSettings;

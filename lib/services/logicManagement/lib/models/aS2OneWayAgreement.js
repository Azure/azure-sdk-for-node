/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The integration account AS2 oneway agreement.
 *
 */
class AS2OneWayAgreement {
  /**
   * Create a AS2OneWayAgreement.
   * @member {object} senderBusinessIdentity The sender business identity
   * @member {string} [senderBusinessIdentity.qualifier] The business identity
   * qualifier e.g. as2identity, ZZ, ZZZ, 31, 32
   * @member {string} [senderBusinessIdentity.value] The user defined business
   * identity value.
   * @member {object} receiverBusinessIdentity The receiver business identity
   * @member {string} [receiverBusinessIdentity.qualifier] The business
   * identity qualifier e.g. as2identity, ZZ, ZZZ, 31, 32
   * @member {string} [receiverBusinessIdentity.value] The user defined
   * business identity value.
   * @member {object} protocolSettings The AS2 protocol settings.
   * @member {object} [protocolSettings.messageConnectionSettings] The message
   * connection settings.
   * @member {boolean}
   * [protocolSettings.messageConnectionSettings.ignoreCertificateNameMismatch]
   * The value indicating whether to ignore mismatch in certificate name.
   * @member {boolean}
   * [protocolSettings.messageConnectionSettings.supportHttpStatusCodeContinue]
   * The value indicating whether to support HTTP status code 'CONTINUE'.
   * @member {boolean}
   * [protocolSettings.messageConnectionSettings.keepHttpConnectionAlive] The
   * value indicating whether to keep the connection alive.
   * @member {boolean}
   * [protocolSettings.messageConnectionSettings.unfoldHttpHeaders] The value
   * indicating whether to unfold the HTTP headers.
   * @member {object} [protocolSettings.acknowledgementConnectionSettings] The
   * acknowledgement connection settings.
   * @member {boolean}
   * [protocolSettings.acknowledgementConnectionSettings.ignoreCertificateNameMismatch]
   * The value indicating whether to ignore mismatch in certificate name.
   * @member {boolean}
   * [protocolSettings.acknowledgementConnectionSettings.supportHttpStatusCodeContinue]
   * The value indicating whether to support HTTP status code 'CONTINUE'.
   * @member {boolean}
   * [protocolSettings.acknowledgementConnectionSettings.keepHttpConnectionAlive]
   * The value indicating whether to keep the connection alive.
   * @member {boolean}
   * [protocolSettings.acknowledgementConnectionSettings.unfoldHttpHeaders] The
   * value indicating whether to unfold the HTTP headers.
   * @member {object} [protocolSettings.mdnSettings] The MDN settings.
   * @member {boolean} [protocolSettings.mdnSettings.needMdn] The value
   * indicating whether to send or request a MDN.
   * @member {boolean} [protocolSettings.mdnSettings.signMdn] The value
   * indicating whether the MDN needs to be signed or not.
   * @member {boolean} [protocolSettings.mdnSettings.sendMdnAsynchronously] The
   * value indicating whether to send the asynchronous MDN.
   * @member {string} [protocolSettings.mdnSettings.receiptDeliveryUrl] The
   * receipt delivery URL.
   * @member {string} [protocolSettings.mdnSettings.dispositionNotificationTo]
   * The disposition notification to header value.
   * @member {boolean} [protocolSettings.mdnSettings.signOutboundMdnIfOptional]
   * The value indicating whether to sign the outbound MDN if optional.
   * @member {string} [protocolSettings.mdnSettings.mdnText] The MDN text.
   * @member {boolean}
   * [protocolSettings.mdnSettings.sendInboundMdnToMessageBox] The value
   * indicating whether to send inbound MDN to message box.
   * @member {string} [protocolSettings.mdnSettings.micHashingAlgorithm] The
   * signing or hashing algorithm. Possible values include: 'NotSpecified',
   * 'None', 'MD5', 'SHA1', 'SHA2256', 'SHA2384', 'SHA2512'
   * @member {object} [protocolSettings.securitySettings] The security
   * settings.
   * @member {boolean}
   * [protocolSettings.securitySettings.overrideGroupSigningCertificate] The
   * value indicating whether to send or request a MDN.
   * @member {string}
   * [protocolSettings.securitySettings.signingCertificateName] The name of the
   * signing certificate.
   * @member {string}
   * [protocolSettings.securitySettings.encryptionCertificateName] The name of
   * the encryption certificate.
   * @member {boolean}
   * [protocolSettings.securitySettings.enableNrrForInboundEncodedMessages] The
   * value indicating whether to enable NRR for inbound encoded messages.
   * @member {boolean}
   * [protocolSettings.securitySettings.enableNrrForInboundDecodedMessages] The
   * value indicating whether to enable NRR for inbound decoded messages.
   * @member {boolean}
   * [protocolSettings.securitySettings.enableNrrForOutboundMdn] The value
   * indicating whether to enable NRR for outbound MDN.
   * @member {boolean}
   * [protocolSettings.securitySettings.enableNrrForOutboundEncodedMessages]
   * The value indicating whether to enable NRR for outbound encoded messages.
   * @member {boolean}
   * [protocolSettings.securitySettings.enableNrrForOutboundDecodedMessages]
   * The value indicating whether to enable NRR for outbound decoded messages.
   * @member {boolean}
   * [protocolSettings.securitySettings.enableNrrForInboundMdn] The value
   * indicating whether to enable NRR for inbound MDN.
   * @member {string} [protocolSettings.securitySettings.sha2AlgorithmFormat]
   * The Sha2 algorithm format. Valid values are Sha2, ShaHashSize,
   * ShaHyphenHashSize, Sha2UnderscoreHashSize.
   * @member {object} [protocolSettings.validationSettings] The validation
   * settings.
   * @member {boolean}
   * [protocolSettings.validationSettings.overrideMessageProperties] The value
   * indicating whether to override incoming message properties with those in
   * agreement.
   * @member {boolean} [protocolSettings.validationSettings.encryptMessage] The
   * value indicating whether the message has to be encrypted.
   * @member {boolean} [protocolSettings.validationSettings.signMessage] The
   * value indicating whether the message has to be signed.
   * @member {boolean} [protocolSettings.validationSettings.compressMessage]
   * The value indicating whether the message has to be compressed.
   * @member {boolean}
   * [protocolSettings.validationSettings.checkDuplicateMessage] The value
   * indicating whether to check for duplicate message.
   * @member {number}
   * [protocolSettings.validationSettings.interchangeDuplicatesValidityDays]
   * The number of days to look back for duplicate interchange.
   * @member {boolean}
   * [protocolSettings.validationSettings.checkCertificateRevocationListOnSend]
   * The value indicating whether to check for certificate revocation list on
   * send.
   * @member {boolean}
   * [protocolSettings.validationSettings.checkCertificateRevocationListOnReceive]
   * The value indicating whether to check for certificate revocation list on
   * receive.
   * @member {string} [protocolSettings.validationSettings.encryptionAlgorithm]
   * The encryption algorithm. Possible values include: 'NotSpecified', 'None',
   * 'DES3', 'RC2', 'AES128', 'AES192', 'AES256'
   * @member {string} [protocolSettings.validationSettings.signingAlgorithm]
   * The signing algorithm. Possible values include: 'NotSpecified', 'Default',
   * 'SHA1', 'SHA2256', 'SHA2384', 'SHA2512'
   * @member {object} [protocolSettings.envelopeSettings] The envelope
   * settings.
   * @member {string} [protocolSettings.envelopeSettings.messageContentType]
   * The message content type.
   * @member {boolean}
   * [protocolSettings.envelopeSettings.transmitFileNameInMimeHeader] The value
   * indicating whether to transmit file name in mime header.
   * @member {string} [protocolSettings.envelopeSettings.fileNameTemplate] The
   * template for file name.
   * @member {boolean}
   * [protocolSettings.envelopeSettings.suspendMessageOnFileNameGenerationError]
   * The value indicating whether to suspend message on file name generation
   * error.
   * @member {boolean} [protocolSettings.envelopeSettings.autogenerateFileName]
   * The value indicating whether to auto generate file name.
   * @member {object} [protocolSettings.errorSettings] The error settings.
   * @member {boolean} [protocolSettings.errorSettings.suspendDuplicateMessage]
   * The value indicating whether to suspend duplicate message.
   * @member {boolean} [protocolSettings.errorSettings.resendIfMdnNotReceived]
   * The value indicating whether to resend message If MDN is not received.
   */
  constructor() {
  }

  /**
   * Defines the metadata of AS2OneWayAgreement
   *
   * @returns {object} metadata of AS2OneWayAgreement
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AS2OneWayAgreement',
      type: {
        name: 'Composite',
        className: 'AS2OneWayAgreement',
        modelProperties: {
          senderBusinessIdentity: {
            required: true,
            serializedName: 'senderBusinessIdentity',
            type: {
              name: 'Composite',
              className: 'BusinessIdentity'
            }
          },
          receiverBusinessIdentity: {
            required: true,
            serializedName: 'receiverBusinessIdentity',
            type: {
              name: 'Composite',
              className: 'BusinessIdentity'
            }
          },
          protocolSettings: {
            required: true,
            serializedName: 'protocolSettings',
            type: {
              name: 'Composite',
              className: 'AS2ProtocolSettings'
            }
          }
        }
      }
    };
  }
}

module.exports = AS2OneWayAgreement;

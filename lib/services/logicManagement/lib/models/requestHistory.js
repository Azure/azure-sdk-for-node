/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The request history.
 *
 * @extends models['Resource']
 */
class RequestHistory extends models['Resource'] {
  /**
   * Create a RequestHistory.
   * @member {date} [startTime] The time the request started.
   * @member {date} [endTime] The time the request ended.
   * @member {object} [request] The request.
   * @member {object} [request.headers] A list of all the headers attached to
   * the request.
   * @member {string} [request.uri] The destination for the request.
   * @member {string} [request.method] The HTTP method used for the request.
   * @member {object} [response] The response.
   * @member {object} [response.headers] A list of all the headers attached to
   * the response.
   * @member {number} [response.statusCode] The status code of the response.
   * @member {object} [response.bodyLink] Details on the location of the body
   * content.
   * @member {string} [response.bodyLink.uri] The content link URI.
   * @member {string} [response.bodyLink.contentVersion] The content version.
   * @member {number} [response.bodyLink.contentSize] The content size.
   * @member {object} [response.bodyLink.contentHash] The content hash.
   * @member {string} [response.bodyLink.contentHash.algorithm] The algorithm
   * of the content hash.
   * @member {string} [response.bodyLink.contentHash.value] The value of the
   * content hash.
   * @member {object} [response.bodyLink.metadata] The metadata.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of RequestHistory
   *
   * @returns {object} metadata of RequestHistory
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RequestHistory',
      type: {
        name: 'Composite',
        className: 'RequestHistory',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          startTime: {
            required: false,
            serializedName: 'startTime',
            type: {
              name: 'DateTime'
            }
          },
          endTime: {
            required: false,
            serializedName: 'endTime',
            type: {
              name: 'DateTime'
            }
          },
          request: {
            required: false,
            serializedName: 'request',
            type: {
              name: 'Composite',
              className: 'Request'
            }
          },
          response: {
            required: false,
            serializedName: 'response',
            type: {
              name: 'Composite',
              className: 'Response'
            }
          }
        }
      }
    };
  }
}

module.exports = RequestHistory;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The AS2 agreement mdn settings.
 *
 */
class AS2MdnSettings {
  /**
   * Create a AS2MdnSettings.
   * @member {boolean} needMdn The value indicating whether to send or request
   * a MDN.
   * @member {boolean} signMdn The value indicating whether the MDN needs to be
   * signed or not.
   * @member {boolean} sendMdnAsynchronously The value indicating whether to
   * send the asynchronous MDN.
   * @member {string} [receiptDeliveryUrl] The receipt delivery URL.
   * @member {string} [dispositionNotificationTo] The disposition notification
   * to header value.
   * @member {boolean} signOutboundMdnIfOptional The value indicating whether
   * to sign the outbound MDN if optional.
   * @member {string} [mdnText] The MDN text.
   * @member {boolean} sendInboundMdnToMessageBox The value indicating whether
   * to send inbound MDN to message box.
   * @member {string} micHashingAlgorithm The signing or hashing algorithm.
   * Possible values include: 'NotSpecified', 'None', 'MD5', 'SHA1', 'SHA2256',
   * 'SHA2384', 'SHA2512'
   */
  constructor() {
  }

  /**
   * Defines the metadata of AS2MdnSettings
   *
   * @returns {object} metadata of AS2MdnSettings
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AS2MdnSettings',
      type: {
        name: 'Composite',
        className: 'AS2MdnSettings',
        modelProperties: {
          needMdn: {
            required: true,
            serializedName: 'needMdn',
            type: {
              name: 'Boolean'
            }
          },
          signMdn: {
            required: true,
            serializedName: 'signMdn',
            type: {
              name: 'Boolean'
            }
          },
          sendMdnAsynchronously: {
            required: true,
            serializedName: 'sendMdnAsynchronously',
            type: {
              name: 'Boolean'
            }
          },
          receiptDeliveryUrl: {
            required: false,
            serializedName: 'receiptDeliveryUrl',
            type: {
              name: 'String'
            }
          },
          dispositionNotificationTo: {
            required: false,
            serializedName: 'dispositionNotificationTo',
            type: {
              name: 'String'
            }
          },
          signOutboundMdnIfOptional: {
            required: true,
            serializedName: 'signOutboundMdnIfOptional',
            type: {
              name: 'Boolean'
            }
          },
          mdnText: {
            required: false,
            serializedName: 'mdnText',
            type: {
              name: 'String'
            }
          },
          sendInboundMdnToMessageBox: {
            required: true,
            serializedName: 'sendInboundMdnToMessageBox',
            type: {
              name: 'Boolean'
            }
          },
          micHashingAlgorithm: {
            required: true,
            serializedName: 'micHashingAlgorithm',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = AS2MdnSettings;

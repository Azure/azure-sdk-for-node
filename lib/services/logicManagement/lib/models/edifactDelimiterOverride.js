/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The Edifact delimiter override settings.
 *
 */
class EdifactDelimiterOverride {
  /**
   * Create a EdifactDelimiterOverride.
   * @member {string} [messageId] The message id.
   * @member {string} [messageVersion] The message version.
   * @member {string} [messageRelease] The message releaseversion.
   * @member {number} dataElementSeparator The data element separator.
   * @member {number} componentSeparator The component separator.
   * @member {number} segmentTerminator The segment terminator.
   * @member {number} repetitionSeparator The repetition separator.
   * @member {string} segmentTerminatorSuffix The segment terminator suffix.
   * Possible values include: 'NotSpecified', 'None', 'CR', 'LF', 'CRLF'
   * @member {string} decimalPointIndicator The decimal point indicator.
   * Possible values include: 'NotSpecified', 'Comma', 'Decimal'
   * @member {number} releaseIndicator The release indicator.
   * @member {string} [messageAssociationAssignedCode] The message association
   * assigned code.
   * @member {string} [targetNamespace] The target namespace on which this
   * delimiter settings has to be applied.
   */
  constructor() {
  }

  /**
   * Defines the metadata of EdifactDelimiterOverride
   *
   * @returns {object} metadata of EdifactDelimiterOverride
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'EdifactDelimiterOverride',
      type: {
        name: 'Composite',
        className: 'EdifactDelimiterOverride',
        modelProperties: {
          messageId: {
            required: false,
            serializedName: 'messageId',
            type: {
              name: 'String'
            }
          },
          messageVersion: {
            required: false,
            serializedName: 'messageVersion',
            type: {
              name: 'String'
            }
          },
          messageRelease: {
            required: false,
            serializedName: 'messageRelease',
            type: {
              name: 'String'
            }
          },
          dataElementSeparator: {
            required: true,
            serializedName: 'dataElementSeparator',
            type: {
              name: 'Number'
            }
          },
          componentSeparator: {
            required: true,
            serializedName: 'componentSeparator',
            type: {
              name: 'Number'
            }
          },
          segmentTerminator: {
            required: true,
            serializedName: 'segmentTerminator',
            type: {
              name: 'Number'
            }
          },
          repetitionSeparator: {
            required: true,
            serializedName: 'repetitionSeparator',
            type: {
              name: 'Number'
            }
          },
          segmentTerminatorSuffix: {
            required: true,
            serializedName: 'segmentTerminatorSuffix',
            type: {
              name: 'Enum',
              allowedValues: [ 'NotSpecified', 'None', 'CR', 'LF', 'CRLF' ]
            }
          },
          decimalPointIndicator: {
            required: true,
            serializedName: 'decimalPointIndicator',
            type: {
              name: 'Enum',
              allowedValues: [ 'NotSpecified', 'Comma', 'Decimal' ]
            }
          },
          releaseIndicator: {
            required: true,
            serializedName: 'releaseIndicator',
            type: {
              name: 'Number'
            }
          },
          messageAssociationAssignedCode: {
            required: false,
            serializedName: 'messageAssociationAssignedCode',
            type: {
              name: 'String'
            }
          },
          targetNamespace: {
            required: false,
            serializedName: 'targetNamespace',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = EdifactDelimiterOverride;

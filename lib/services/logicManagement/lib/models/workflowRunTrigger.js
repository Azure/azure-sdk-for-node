/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The workflow run trigger.
 *
 */
class WorkflowRunTrigger {
  /**
   * Create a WorkflowRunTrigger.
   * @member {string} [name] Gets the name.
   * @member {object} [inputs] Gets the inputs.
   * @member {object} [inputsLink] Gets the link to inputs.
   * @member {string} [inputsLink.uri] The content link URI.
   * @member {string} [inputsLink.contentVersion] The content version.
   * @member {number} [inputsLink.contentSize] The content size.
   * @member {object} [inputsLink.contentHash] The content hash.
   * @member {string} [inputsLink.contentHash.algorithm] The algorithm of the
   * content hash.
   * @member {string} [inputsLink.contentHash.value] The value of the content
   * hash.
   * @member {object} [inputsLink.metadata] The metadata.
   * @member {object} [outputs] Gets the outputs.
   * @member {object} [outputsLink] Gets the link to outputs.
   * @member {string} [outputsLink.uri] The content link URI.
   * @member {string} [outputsLink.contentVersion] The content version.
   * @member {number} [outputsLink.contentSize] The content size.
   * @member {object} [outputsLink.contentHash] The content hash.
   * @member {string} [outputsLink.contentHash.algorithm] The algorithm of the
   * content hash.
   * @member {string} [outputsLink.contentHash.value] The value of the content
   * hash.
   * @member {object} [outputsLink.metadata] The metadata.
   * @member {date} [startTime] Gets the start time.
   * @member {date} [endTime] Gets the end time.
   * @member {string} [trackingId] Gets the tracking id.
   * @member {object} [correlation] The run correlation.
   * @member {string} [correlation.clientTrackingId] The client tracking id.
   * @member {string} [code] Gets the code.
   * @member {string} [status] Gets the status. Possible values include:
   * 'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded', 'Skipped',
   * 'Suspended', 'Cancelled', 'Failed', 'Faulted', 'TimedOut', 'Aborted',
   * 'Ignored'
   * @member {object} [error] Gets the error.
   * @member {object} [trackedProperties] Gets the tracked properties.
   */
  constructor() {
  }

  /**
   * Defines the metadata of WorkflowRunTrigger
   *
   * @returns {object} metadata of WorkflowRunTrigger
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'WorkflowRunTrigger',
      type: {
        name: 'Composite',
        className: 'WorkflowRunTrigger',
        modelProperties: {
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          inputs: {
            required: false,
            readOnly: true,
            serializedName: 'inputs',
            type: {
              name: 'Object'
            }
          },
          inputsLink: {
            required: false,
            readOnly: true,
            serializedName: 'inputsLink',
            type: {
              name: 'Composite',
              className: 'ContentLink'
            }
          },
          outputs: {
            required: false,
            readOnly: true,
            serializedName: 'outputs',
            type: {
              name: 'Object'
            }
          },
          outputsLink: {
            required: false,
            readOnly: true,
            serializedName: 'outputsLink',
            type: {
              name: 'Composite',
              className: 'ContentLink'
            }
          },
          startTime: {
            required: false,
            readOnly: true,
            serializedName: 'startTime',
            type: {
              name: 'DateTime'
            }
          },
          endTime: {
            required: false,
            readOnly: true,
            serializedName: 'endTime',
            type: {
              name: 'DateTime'
            }
          },
          trackingId: {
            required: false,
            readOnly: true,
            serializedName: 'trackingId',
            type: {
              name: 'String'
            }
          },
          correlation: {
            required: false,
            serializedName: 'correlation',
            type: {
              name: 'Composite',
              className: 'Correlation'
            }
          },
          code: {
            required: false,
            readOnly: true,
            serializedName: 'code',
            type: {
              name: 'String'
            }
          },
          status: {
            required: false,
            readOnly: true,
            serializedName: 'status',
            type: {
              name: 'Enum',
              allowedValues: [ 'NotSpecified', 'Paused', 'Running', 'Waiting', 'Succeeded', 'Skipped', 'Suspended', 'Cancelled', 'Failed', 'Faulted', 'TimedOut', 'Aborted', 'Ignored' ]
            }
          },
          error: {
            required: false,
            readOnly: true,
            serializedName: 'error',
            type: {
              name: 'Object'
            }
          },
          trackedProperties: {
            required: false,
            readOnly: true,
            serializedName: 'trackedProperties',
            type: {
              name: 'Object'
            }
          }
        }
      }
    };
  }
}

module.exports = WorkflowRunTrigger;

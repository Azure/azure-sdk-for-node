/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the HostNameSslState class.
 * @constructor
 * Object that represents a SSL-enabled host name.
 *
 * @member {string} [name] Host name
 * 
 * @member {string} sslState SSL type. Possible values include: 'Disabled',
 * 'SniEnabled', 'IpBasedEnabled'
 * 
 * @member {string} [virtualIP] Virtual IP address assigned to the host name
 * if IP based SSL is enabled
 * 
 * @member {string} [thumbprint] SSL cert thumbprint
 * 
 * @member {boolean} [toUpdate] Set this flag to update existing host name
 * 
 */
function HostNameSslState() {
}

/**
 * Defines the metadata of HostNameSslState
 *
 * @returns {object} metadata of HostNameSslState
 *
 */
HostNameSslState.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'HostNameSslState',
    type: {
      name: 'Composite',
      className: 'HostNameSslState',
      modelProperties: {
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        sslState: {
          required: true,
          serializedName: 'sslState',
          type: {
            name: 'Enum',
            allowedValues: [ 'Disabled', 'SniEnabled', 'IpBasedEnabled' ]
          }
        },
        virtualIP: {
          required: false,
          serializedName: 'virtualIP',
          type: {
            name: 'String'
          }
        },
        thumbprint: {
          required: false,
          serializedName: 'thumbprint',
          type: {
            name: 'String'
          }
        },
        toUpdate: {
          required: false,
          serializedName: 'toUpdate',
          type: {
            name: 'Boolean'
          }
        }
      }
    }
  };
};

module.exports = HostNameSslState;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.14.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the StampCapacity class.
 * @constructor
 * Class containing stamp capacity information
 * @member {string} [name] Name of the stamp
 * 
 * @member {number} [availableCapacity] Available capacity (# of machines,
 * bytes of storage etc...)
 * 
 * @member {number} [totalCapacity] Total capacity (# of machines, bytes of
 * storage etc...)
 * 
 * @member {string} [unit] Name of the unit
 * 
 * @member {string} [computeMode] Shared/Dedicated workers. Possible values
 * for this property include: 'Shared', 'Dedicated'.
 * 
 * @member {string} [workerSize] Size of the machines. Possible values for
 * this property include: 'Small', 'Medium', 'Large'.
 * 
 * @member {number} [workerSizeId] Size Id of machines:
 * 0 - Small
 * 1 - Medium
 * 2 - Large
 * 
 * @member {boolean} [excludeFromCapacityAllocation] If true it includes basic
 * sites
 * Basic sites are not used for capacity allocation.
 * 
 * @member {boolean} [isApplicableForAllComputeModes] Is capacity applicable
 * for all sites?
 * 
 * @member {string} [siteMode] Shared or Dedicated
 * 
 */
function StampCapacity() {
}

/**
 * Defines the metadata of StampCapacity
 *
 * @returns {object} metadata of StampCapacity
 *
 */
StampCapacity.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'StampCapacity',
    type: {
      name: 'Composite',
      className: 'StampCapacity',
      modelProperties: {
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        availableCapacity: {
          required: false,
          serializedName: 'availableCapacity',
          type: {
            name: 'Number'
          }
        },
        totalCapacity: {
          required: false,
          serializedName: 'totalCapacity',
          type: {
            name: 'Number'
          }
        },
        unit: {
          required: false,
          serializedName: 'unit',
          type: {
            name: 'String'
          }
        },
        computeMode: {
          required: false,
          serializedName: 'computeMode',
          type: {
            name: 'Enum',
            allowedValues: [ 'Shared', 'Dedicated' ]
          }
        },
        workerSize: {
          required: false,
          serializedName: 'workerSize',
          type: {
            name: 'Enum',
            allowedValues: [ 'Small', 'Medium', 'Large' ]
          }
        },
        workerSizeId: {
          required: false,
          serializedName: 'workerSizeId',
          type: {
            name: 'Number'
          }
        },
        excludeFromCapacityAllocation: {
          required: false,
          serializedName: 'excludeFromCapacityAllocation',
          type: {
            name: 'Boolean'
          }
        },
        isApplicableForAllComputeModes: {
          required: false,
          serializedName: 'isApplicableForAllComputeModes',
          type: {
            name: 'Boolean'
          }
        },
        siteMode: {
          required: false,
          serializedName: 'siteMode',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = StampCapacity;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the BackupSchedule class.
 * @constructor
 * Description of a backup schedule. Describes how often should be the backup
 * performed and what should be the retention policy.
 *
 * @member {number} [frequencyInterval] How often should be the backup
 * executed (e.g. for weekly backup, this should be set to 7 and
 * FrequencyUnit should be set to Day)
 * 
 * @member {string} frequencyUnit How often should be the backup executed
 * (e.g. for weekly backup, this should be set to Day and FrequencyInterval
 * should be set to 7). Possible values include: 'Day', 'Hour'
 * 
 * @member {boolean} [keepAtLeastOneBackup] True if the retention policy
 * should always keep at least one backup in the storage account, regardless
 * how old it is; false otherwise.
 * 
 * @member {number} [retentionPeriodInDays] After how many days backups should
 * be deleted
 * 
 * @member {date} [startTime] When the schedule should start working
 * 
 * @member {date} [lastExecutionTime] The last time when this schedule was
 * triggered
 * 
 */
function BackupSchedule() {
}

/**
 * Defines the metadata of BackupSchedule
 *
 * @returns {object} metadata of BackupSchedule
 *
 */
BackupSchedule.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'BackupSchedule',
    type: {
      name: 'Composite',
      className: 'BackupSchedule',
      modelProperties: {
        frequencyInterval: {
          required: false,
          serializedName: 'frequencyInterval',
          type: {
            name: 'Number'
          }
        },
        frequencyUnit: {
          required: true,
          serializedName: 'frequencyUnit',
          type: {
            name: 'Enum',
            allowedValues: [ 'Day', 'Hour' ]
          }
        },
        keepAtLeastOneBackup: {
          required: false,
          serializedName: 'keepAtLeastOneBackup',
          type: {
            name: 'Boolean'
          }
        },
        retentionPeriodInDays: {
          required: false,
          serializedName: 'retentionPeriodInDays',
          type: {
            name: 'Number'
          }
        },
        startTime: {
          required: false,
          serializedName: 'startTime',
          type: {
            name: 'DateTime'
          }
        },
        lastExecutionTime: {
          required: false,
          serializedName: 'lastExecutionTime',
          type: {
            name: 'DateTime'
          }
        }
      }
    }
  };
};

module.exports = BackupSchedule;

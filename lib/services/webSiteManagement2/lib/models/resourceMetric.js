/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the ResourceMetric class.
 * @constructor
 * Object representing a metric for any resource
 *
 * @member {object} [name] Name of metric
 * 
 * @member {string} [name.value] metric name value
 * 
 * @member {string} [name.localizedValue] Localized metric name value
 * 
 * @member {string} [unit] Metric unit
 * 
 * @member {string} [timeGrain] Metric granularity. E.g PT1H, PT5M, P1D
 * 
 * @member {date} [startTime] Metric start time
 * 
 * @member {date} [endTime] Metric end time
 * 
 * @member {string} [resourceId] Metric resource Id
 * 
 * @member {array} [metricValues] Metric values
 * 
 * @member {array} [properties] Properties
 * 
 */
function ResourceMetric() {
}

/**
 * Defines the metadata of ResourceMetric
 *
 * @returns {object} metadata of ResourceMetric
 *
 */
ResourceMetric.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'ResourceMetric',
    type: {
      name: 'Composite',
      className: 'ResourceMetric',
      modelProperties: {
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'Composite',
            className: 'ResourceMetricName'
          }
        },
        unit: {
          required: false,
          serializedName: 'unit',
          type: {
            name: 'String'
          }
        },
        timeGrain: {
          required: false,
          serializedName: 'timeGrain',
          type: {
            name: 'String'
          }
        },
        startTime: {
          required: false,
          serializedName: 'startTime',
          type: {
            name: 'DateTime'
          }
        },
        endTime: {
          required: false,
          serializedName: 'endTime',
          type: {
            name: 'DateTime'
          }
        },
        resourceId: {
          required: false,
          serializedName: 'resourceId',
          type: {
            name: 'String'
          }
        },
        metricValues: {
          required: false,
          serializedName: 'metricValues',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'ResourceMetricValueElementType',
                type: {
                  name: 'Composite',
                  className: 'ResourceMetricValue'
                }
            }
          }
        },
        properties: {
          required: false,
          serializedName: 'properties',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'KeyValuePairStringStringElementType',
                type: {
                  name: 'Composite',
                  className: 'KeyValuePairStringString'
                }
            }
          }
        }
      }
    }
  };
};

module.exports = ResourceMetric;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the CertificateDetails class.
 * @constructor
 * Certificate Details
 *
 * @member {number} [version] Version
 * 
 * @member {string} [serialNumber] Serial Number
 * 
 * @member {string} [thumbprint] Thumbprint
 * 
 * @member {string} [subject] Subject
 * 
 * @member {date} [notBefore] Valid from
 * 
 * @member {date} [notAfter] Valid to
 * 
 * @member {string} [signatureAlgorithm] Signature Algorithm
 * 
 * @member {string} [issuer] Issuer
 * 
 * @member {string} [rawData] Raw certificate data
 * 
 */
function CertificateDetails() {
  CertificateDetails['super_'].call(this);
}

util.inherits(CertificateDetails, models['Resource']);

/**
 * Defines the metadata of CertificateDetails
 *
 * @returns {object} metadata of CertificateDetails
 *
 */
CertificateDetails.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'CertificateDetails',
    type: {
      name: 'Composite',
      className: 'CertificateDetails',
      modelProperties: {
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        kind: {
          required: false,
          serializedName: 'kind',
          type: {
            name: 'String'
          }
        },
        location: {
          required: true,
          serializedName: 'location',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        tags: {
          required: false,
          serializedName: 'tags',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        version: {
          required: false,
          serializedName: 'properties.version',
          type: {
            name: 'Number'
          }
        },
        serialNumber: {
          required: false,
          serializedName: 'properties.serialNumber',
          type: {
            name: 'String'
          }
        },
        thumbprint: {
          required: false,
          serializedName: 'properties.thumbprint',
          type: {
            name: 'String'
          }
        },
        subject: {
          required: false,
          serializedName: 'properties.subject',
          type: {
            name: 'String'
          }
        },
        notBefore: {
          required: false,
          serializedName: 'properties.notBefore',
          type: {
            name: 'DateTime'
          }
        },
        notAfter: {
          required: false,
          serializedName: 'properties.notAfter',
          type: {
            name: 'DateTime'
          }
        },
        signatureAlgorithm: {
          required: false,
          serializedName: 'properties.signatureAlgorithm',
          type: {
            name: 'String'
          }
        },
        issuer: {
          required: false,
          serializedName: 'properties.issuer',
          type: {
            name: 'String'
          }
        },
        rawData: {
          required: false,
          serializedName: 'properties.rawData',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = CertificateDetails;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the SlotDifference class.
 * @constructor
 * An object describing the difference in setting values between two web app
 * slots
 *
 * @member {string} [slotDifferenceType] Indicates the type of the difference:
 * Information, Warning or Error.
 * 
 * @member {string} [settingType] The type of the settings: General,
 * AppSetting or ConnectionString
 * 
 * @member {string} [diffRule] Rule that describes how to process the
 * difference in settings during web app slot swap.
 * 
 * @member {string} [settingName] Name of the setting
 * 
 * @member {string} [valueInCurrentSlot] Value of the setting in the current
 * web app slot
 * 
 * @member {string} [valueInTargetSlot] Value of the setting in the target web
 * app slot
 * 
 * @member {string} [description] Description of the difference
 * 
 */
function SlotDifference() {
  SlotDifference['super_'].call(this);
}

util.inherits(SlotDifference, models['Resource']);

/**
 * Defines the metadata of SlotDifference
 *
 * @returns {object} metadata of SlotDifference
 *
 */
SlotDifference.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'SlotDifference',
    type: {
      name: 'Composite',
      className: 'SlotDifference',
      modelProperties: {
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        kind: {
          required: false,
          serializedName: 'kind',
          type: {
            name: 'String'
          }
        },
        location: {
          required: true,
          serializedName: 'location',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        tags: {
          required: false,
          serializedName: 'tags',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        slotDifferenceType: {
          required: false,
          serializedName: 'properties.type',
          type: {
            name: 'String'
          }
        },
        settingType: {
          required: false,
          serializedName: 'properties.settingType',
          type: {
            name: 'String'
          }
        },
        diffRule: {
          required: false,
          serializedName: 'properties.diffRule',
          type: {
            name: 'String'
          }
        },
        settingName: {
          required: false,
          serializedName: 'properties.settingName',
          type: {
            name: 'String'
          }
        },
        valueInCurrentSlot: {
          required: false,
          serializedName: 'properties.valueInCurrentSlot',
          type: {
            name: 'String'
          }
        },
        valueInTargetSlot: {
          required: false,
          serializedName: 'properties.valueInTargetSlot',
          type: {
            name: 'String'
          }
        },
        description: {
          required: false,
          serializedName: 'properties.description',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = SlotDifference;

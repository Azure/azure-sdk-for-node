/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */


/**
 * @class
 * Initializes a new instance of the ArmPlan class.
 * @constructor
 * The plan object in an ARM, represents a marketplace plan
 *
 * @member {string} [name] The name
 * 
 * @member {string} [publisher] The publisher
 * 
 * @member {string} [product] The product
 * 
 * @member {string} [promotionCode] The promotion code
 * 
 * @member {string} [version] Version of product
 * 
 */
export interface ArmPlan {
  name?: string;
  publisher?: string;
  product?: string;
  promotionCode?: string;
  version?: string;
}

/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * @member {string} [id] Resource Id
 * 
 * @member {string} [name] Resource Name
 * 
 * @member {string} [kind] Kind of resource
 * 
 * @member {string} location Resource Location
 * 
 * @member {string} [type] Resource type
 * 
 * @member {object} [tags] Resource tags
 * 
 */
export interface Resource extends BaseResource {
  id?: string;
  name?: string;
  kind?: string;
  location: string;
  type?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the CertificateOrderCertificate class.
 * @constructor
 * Class representing the Key Vault container for certificate purchased
 * through Azure
 *
 * @member {string} [keyVaultId] Key Vault Csm resource Id
 * 
 * @member {string} [keyVaultSecretName] Key Vault secret name
 * 
 * @member {string} [provisioningState] Status of the Key Vault secret.
 * Possible values include: 'Initialized', 'WaitingOnCertificateOrder',
 * 'Succeeded', 'CertificateOrderFailed', 'OperationNotPermittedOnKeyVault',
 * 'AzureServiceUnauthorizedToAccessKeyVault', 'KeyVaultDoesNotExist',
 * 'KeyVaultSecretDoesNotExist', 'UnknownError', 'Unknown'
 * 
 */
export interface CertificateOrderCertificate extends Resource {
  keyVaultId?: string;
  keyVaultSecretName?: string;
  provisioningState?: string;
}

/**
 * @class
 * Initializes a new instance of the SkuDescription class.
 * @constructor
 * Describes a sku for a scalable resource
 *
 * @member {string} [name] Name of the resource sku
 * 
 * @member {string} [tier] Service Tier of the resource sku
 * 
 * @member {string} [size] Size specifier of the resource sku
 * 
 * @member {string} [family] Family code of the resource sku
 * 
 * @member {number} [capacity] Current number of instances assigned to the
 * resource
 * 
 */
export interface SkuDescription {
  name?: string;
  tier?: string;
  size?: string;
  family?: string;
  capacity?: number;
}

/**
 * @class
 * Initializes a new instance of the CertificateOrder class.
 * @constructor
 * Certificate purchase order
 *
 * @member {object} [certificates] State of the Key Vault secret
 * 
 * @member {string} [distinguishedName] Certificate distinguished name
 * 
 * @member {string} [domainVerificationToken] Domain Verification Token
 * 
 * @member {number} [validityInYears] Duration in years (must be between 1 and
 * 3)
 * 
 * @member {number} [keySize] Certificate Key Size
 * 
 * @member {string} [productType] Certificate product type. Possible values
 * include: 'StandardDomainValidatedSsl', 'StandardDomainValidatedWildCardSsl'
 * 
 * @member {boolean} [autoRenew] Auto renew
 * 
 * @member {string} [provisioningState] Status of certificate order. Possible
 * values include: 'Succeeded', 'Failed', 'Canceled', 'InProgress', 'Deleting'
 * 
 * @member {string} [status] Current order status. Possible values include:
 * 'Pendingissuance', 'Issued', 'Revoked', 'Canceled', 'Denied',
 * 'Pendingrevocation', 'PendingRekey', 'Unused', 'Expired', 'NotSubmitted'
 * 
 * @member {object} [signedCertificate] Signed certificate
 * 
 * @member {number} [signedCertificate.version] Version
 * 
 * @member {string} [signedCertificate.serialNumber] Serial Number
 * 
 * @member {string} [signedCertificate.thumbprint] Thumbprint
 * 
 * @member {string} [signedCertificate.subject] Subject
 * 
 * @member {date} [signedCertificate.notBefore] Valid from
 * 
 * @member {date} [signedCertificate.notAfter] Valid to
 * 
 * @member {string} [signedCertificate.signatureAlgorithm] Signature Algorithm
 * 
 * @member {string} [signedCertificate.issuer] Issuer
 * 
 * @member {string} [signedCertificate.rawData] Raw certificate data
 * 
 * @member {string} [csr] Last CSR that was created for this order
 * 
 * @member {object} [intermediate] Intermediate certificate
 * 
 * @member {number} [intermediate.version] Version
 * 
 * @member {string} [intermediate.serialNumber] Serial Number
 * 
 * @member {string} [intermediate.thumbprint] Thumbprint
 * 
 * @member {string} [intermediate.subject] Subject
 * 
 * @member {date} [intermediate.notBefore] Valid from
 * 
 * @member {date} [intermediate.notAfter] Valid to
 * 
 * @member {string} [intermediate.signatureAlgorithm] Signature Algorithm
 * 
 * @member {string} [intermediate.issuer] Issuer
 * 
 * @member {string} [intermediate.rawData] Raw certificate data
 * 
 * @member {object} [root] Root certificate
 * 
 * @member {number} [root.version] Version
 * 
 * @member {string} [root.serialNumber] Serial Number
 * 
 * @member {string} [root.thumbprint] Thumbprint
 * 
 * @member {string} [root.subject] Subject
 * 
 * @member {date} [root.notBefore] Valid from
 * 
 * @member {date} [root.notAfter] Valid to
 * 
 * @member {string} [root.signatureAlgorithm] Signature Algorithm
 * 
 * @member {string} [root.issuer] Issuer
 * 
 * @member {string} [root.rawData] Raw certificate data
 * 
 * @member {string} [serialNumber] Current serial number of the certificate
 * 
 * @member {date} [lastCertificateIssuanceTime] Certificate last issuance time
 * 
 * @member {date} [expirationTime] Certificate expiration time
 * 
 */
export interface CertificateOrder extends Resource {
  certificates?: { [propertyName: string]: CertificateOrderCertificate };
  distinguishedName?: string;
  domainVerificationToken?: string;
  validityInYears?: number;
  keySize?: number;
  productType?: string;
  autoRenew?: boolean;
  provisioningState?: string;
  status?: string;
  signedCertificate?: CertificateDetails;
  csr?: string;
  intermediate?: CertificateDetails;
  root?: CertificateDetails;
  serialNumber?: string;
  lastCertificateIssuanceTime?: Date;
  expirationTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the CertificateDetails class.
 * @constructor
 * Certificate Details
 *
 * @member {number} [version] Version
 * 
 * @member {string} [serialNumber] Serial Number
 * 
 * @member {string} [thumbprint] Thumbprint
 * 
 * @member {string} [subject] Subject
 * 
 * @member {date} [notBefore] Valid from
 * 
 * @member {date} [notAfter] Valid to
 * 
 * @member {string} [signatureAlgorithm] Signature Algorithm
 * 
 * @member {string} [issuer] Issuer
 * 
 * @member {string} [rawData] Raw certificate data
 * 
 */
export interface CertificateDetails extends Resource {
  version?: number;
  serialNumber?: string;
  thumbprint?: string;
  subject?: string;
  notBefore?: Date;
  notAfter?: Date;
  signatureAlgorithm?: string;
  issuer?: string;
  rawData?: string;
}

/**
 * @class
 * Initializes a new instance of the ReissueCertificateOrderRequest class.
 * @constructor
 * Class representing certificate reissue request
 *
 * @member {number} [keySize] Certificate Key Size
 * 
 * @member {number} [delayExistingRevokeInHours] Delay in hours to revoke
 * existing certificate after the new certificate is issued
 * 
 */
export interface ReissueCertificateOrderRequest extends Resource {
  keySize?: number;
  delayExistingRevokeInHours?: number;
}

/**
 * @class
 * Initializes a new instance of the RenewCertificateOrderRequest class.
 * @constructor
 * Class representing certificate renew request
 *
 * @member {number} [keySize] Certificate Key Size
 * 
 */
export interface RenewCertificateOrderRequest extends Resource {
  keySize?: number;
}

/**
 * @class
 * Initializes a new instance of the CertificateOrderAction class.
 * @constructor
 * Represents a certificate action
 *
 * @member {string} [certificateOrderActionType] Type. Possible values
 * include: 'CertificateIssued', 'CertificateOrderCanceled',
 * 'CertificateOrderCreated', 'CertificateRevoked',
 * 'DomainValidationComplete', 'FraudDetected', 'OrgNameChange',
 * 'OrgValidationComplete', 'SanDrop'
 * 
 * @member {date} [createdAt] Time at which the certificate action was
 * performed
 * 
 */
export interface CertificateOrderAction extends Resource {
  certificateOrderActionType?: string;
  createdAt?: Date;
}

/**
 * @class
 * Initializes a new instance of the CertificateEmail class.
 * @constructor
 * Certificate Email
 *
 * @member {string} [emailId] Email id
 * 
 * @member {date} [timeStamp] Time stamp
 * 
 */
export interface CertificateEmail extends Resource {
  emailId?: string;
  timeStamp?: Date;
}

/**
 * @class
 * Initializes a new instance of the Certificate class.
 * @constructor
 * App certificate
 *
 * @member {string} [friendlyName] Friendly name of the certificate
 * 
 * @member {string} [subjectName] Subject name of the certificate
 * 
 * @member {array} [hostNames] Host names the certificate applies to
 * 
 * @member {string} [pfxBlob] Pfx blob
 * 
 * @member {string} [siteName] App name
 * 
 * @member {string} [selfLink] Self link
 * 
 * @member {string} [issuer] Certificate issuer
 * 
 * @member {date} [issueDate] Certificate issue Date
 * 
 * @member {date} [expirationDate] Certificate expriration date
 * 
 * @member {string} [password] Certificate password
 * 
 * @member {string} [thumbprint] Certificate thumbprint
 * 
 * @member {boolean} [valid] Is the certificate valid?
 * 
 * @member {string} [cerBlob] Raw bytes of .cer file
 * 
 * @member {string} [publicKeyHash] Public key hash
 * 
 * @member {object} [hostingEnvironmentProfile] Specification for the hosting
 * environment (App Service Environment) to use for the certificate
 * 
 * @member {string} [hostingEnvironmentProfile.id] Resource id of the
 * hostingEnvironment (App Service Environment)
 * 
 * @member {string} [hostingEnvironmentProfile.name] Name of the
 * hostingEnvironment (App Service Environment) (read only)
 * 
 * @member {string} [hostingEnvironmentProfile.type] Resource type of the
 * hostingEnvironment (App Service Environment) (read only)
 * 
 */
export interface Certificate extends Resource {
  friendlyName?: string;
  subjectName?: string;
  hostNames?: string[];
  pfxBlob?: string;
  siteName?: string;
  selfLink?: string;
  issuer?: string;
  issueDate?: Date;
  expirationDate?: Date;
  password?: string;
  thumbprint?: string;
  valid?: boolean;
  cerBlob?: string;
  publicKeyHash?: string;
  hostingEnvironmentProfile?: HostingEnvironmentProfile;
}

/**
 * @class
 * Initializes a new instance of the HostingEnvironmentProfile class.
 * @constructor
 * Specification for a hostingEnvironment (App Service Environment) to use for
 * this resource
 *
 * @member {string} [id] Resource id of the hostingEnvironment (App Service
 * Environment)
 * 
 * @member {string} [name] Name of the hostingEnvironment (App Service
 * Environment) (read only)
 * 
 * @member {string} [type] Resource type of the hostingEnvironment (App
 * Service Environment) (read only)
 * 
 */
export interface HostingEnvironmentProfile {
  id?: string;
  name?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the Csr class.
 * @constructor
 * Certificate signing request object
 *
 * @member {string} [csrName] Name used to locate CSR object
 * 
 * @member {string} [distinguishedName] Distinguished name of certificate to
 * be created
 * 
 * @member {string} [csrString] Actual CSR string created
 * 
 * @member {string} [pfxBlob] PFX certifcate of created certificate
 * 
 * @member {string} [password] PFX password
 * 
 * @member {string} [publicKeyHash] Hash of the certificates public key
 * 
 * @member {string} [hostingEnvironment] Hosting environment
 * 
 */
export interface Csr extends Resource {
  csrName?: string;
  distinguishedName?: string;
  csrString?: string;
  pfxBlob?: string;
  password?: string;
  publicKeyHash?: string;
  hostingEnvironment?: string;
}

/**
 * @class
 * Initializes a new instance of the ClassicMobileService class.
 * @constructor
 * A mobile service
 *
 * @member {string} [classicMobileServiceName] Name of the mobile service
 * 
 */
export interface ClassicMobileService extends Resource {
  classicMobileServiceName?: string;
}

/**
 * @class
 * Initializes a new instance of the Domain class.
 * @constructor
 * Represents a domain
 *
 * @member {object} [contactAdmin] Admin contact information
 * 
 * @member {object} [contactAdmin.addressMailing] Mailing address
 * 
 * @member {string} [contactAdmin.addressMailing.address1] Address 1
 * 
 * @member {string} [contactAdmin.addressMailing.address2] Address 2
 * 
 * @member {string} [contactAdmin.addressMailing.city] City
 * 
 * @member {string} [contactAdmin.addressMailing.country] Country
 * 
 * @member {string} [contactAdmin.addressMailing.postalCode] Postal code
 * 
 * @member {string} [contactAdmin.addressMailing.state] State
 * 
 * @member {string} [contactAdmin.email] Email address
 * 
 * @member {string} [contactAdmin.fax] Fax number
 * 
 * @member {string} [contactAdmin.jobTitle] Job title
 * 
 * @member {string} [contactAdmin.nameFirst] First name
 * 
 * @member {string} [contactAdmin.nameLast] Last name
 * 
 * @member {string} [contactAdmin.nameMiddle] Middle name
 * 
 * @member {string} [contactAdmin.organization] Organization
 * 
 * @member {string} [contactAdmin.phone] Phone number
 * 
 * @member {object} [contactBilling] Billing contact information
 * 
 * @member {object} [contactBilling.addressMailing] Mailing address
 * 
 * @member {string} [contactBilling.addressMailing.address1] Address 1
 * 
 * @member {string} [contactBilling.addressMailing.address2] Address 2
 * 
 * @member {string} [contactBilling.addressMailing.city] City
 * 
 * @member {string} [contactBilling.addressMailing.country] Country
 * 
 * @member {string} [contactBilling.addressMailing.postalCode] Postal code
 * 
 * @member {string} [contactBilling.addressMailing.state] State
 * 
 * @member {string} [contactBilling.email] Email address
 * 
 * @member {string} [contactBilling.fax] Fax number
 * 
 * @member {string} [contactBilling.jobTitle] Job title
 * 
 * @member {string} [contactBilling.nameFirst] First name
 * 
 * @member {string} [contactBilling.nameLast] Last name
 * 
 * @member {string} [contactBilling.nameMiddle] Middle name
 * 
 * @member {string} [contactBilling.organization] Organization
 * 
 * @member {string} [contactBilling.phone] Phone number
 * 
 * @member {object} [contactRegistrant] Registrant contact information
 * 
 * @member {object} [contactRegistrant.addressMailing] Mailing address
 * 
 * @member {string} [contactRegistrant.addressMailing.address1] Address 1
 * 
 * @member {string} [contactRegistrant.addressMailing.address2] Address 2
 * 
 * @member {string} [contactRegistrant.addressMailing.city] City
 * 
 * @member {string} [contactRegistrant.addressMailing.country] Country
 * 
 * @member {string} [contactRegistrant.addressMailing.postalCode] Postal code
 * 
 * @member {string} [contactRegistrant.addressMailing.state] State
 * 
 * @member {string} [contactRegistrant.email] Email address
 * 
 * @member {string} [contactRegistrant.fax] Fax number
 * 
 * @member {string} [contactRegistrant.jobTitle] Job title
 * 
 * @member {string} [contactRegistrant.nameFirst] First name
 * 
 * @member {string} [contactRegistrant.nameLast] Last name
 * 
 * @member {string} [contactRegistrant.nameMiddle] Middle name
 * 
 * @member {string} [contactRegistrant.organization] Organization
 * 
 * @member {string} [contactRegistrant.phone] Phone number
 * 
 * @member {object} [contactTech] Technical contact information
 * 
 * @member {object} [contactTech.addressMailing] Mailing address
 * 
 * @member {string} [contactTech.addressMailing.address1] Address 1
 * 
 * @member {string} [contactTech.addressMailing.address2] Address 2
 * 
 * @member {string} [contactTech.addressMailing.city] City
 * 
 * @member {string} [contactTech.addressMailing.country] Country
 * 
 * @member {string} [contactTech.addressMailing.postalCode] Postal code
 * 
 * @member {string} [contactTech.addressMailing.state] State
 * 
 * @member {string} [contactTech.email] Email address
 * 
 * @member {string} [contactTech.fax] Fax number
 * 
 * @member {string} [contactTech.jobTitle] Job title
 * 
 * @member {string} [contactTech.nameFirst] First name
 * 
 * @member {string} [contactTech.nameLast] Last name
 * 
 * @member {string} [contactTech.nameMiddle] Middle name
 * 
 * @member {string} [contactTech.organization] Organization
 * 
 * @member {string} [contactTech.phone] Phone number
 * 
 * @member {string} [registrationStatus] Domain registration status. Possible
 * values include: 'Active', 'Awaiting', 'Cancelled', 'Confiscated',
 * 'Disabled', 'Excluded', 'Expired', 'Failed', 'Held', 'Locked', 'Parked',
 * 'Pending', 'Reserved', 'Reverted', 'Suspended', 'Transferred', 'Unknown',
 * 'Unlocked', 'Unparked', 'Updated', 'JsonConverterFailed'
 * 
 * @member {string} [provisioningState] Domain provisioning state. Possible
 * values include: 'Succeeded', 'Failed', 'Canceled', 'InProgress', 'Deleting'
 * 
 * @member {array} [nameServers] Name servers
 * 
 * @member {boolean} [privacy] If true then domain privacy is enabled for this
 * domain
 * 
 * @member {date} [createdTime] Domain creation timestamp
 * 
 * @member {date} [expirationTime] Domain expiration timestamp
 * 
 * @member {date} [lastRenewedTime] Timestamp when the domain was renewed last
 * time
 * 
 * @member {boolean} [autoRenew] If true then domain will renewed automatically
 * 
 * @member {boolean} [readyForDnsRecordManagement] If true then Azure can
 * assign this domain to Web Apps. This value will be true if domain
 * registration status is active and it is hosted on name servers Azure has
 * programmatic access to
 * 
 * @member {array} [managedHostNames] All hostnames derived from the domain
 * and assigned to Azure resources
 * 
 * @member {object} [consent] Legal agreement consent
 * 
 * @member {array} [consent.agreementKeys] List of applicable legal agreement
 * keys. This list can be retrieved using ListLegalAgreements Api under
 * TopLevelDomain resource
 * 
 * @member {string} [consent.agreedBy] Client IP address
 * 
 * @member {date} [consent.agreedAt] Timestamp when the agreements were
 * accepted
 * 
 * @member {array} [domainNotRenewableReasons] Reasons why domain is not
 * renewable
 * 
 */
export interface Domain extends Resource {
  contactAdmin?: Contact;
  contactBilling?: Contact;
  contactRegistrant?: Contact;
  contactTech?: Contact;
  registrationStatus?: string;
  provisioningState?: string;
  nameServers?: string[];
  privacy?: boolean;
  createdTime?: Date;
  expirationTime?: Date;
  lastRenewedTime?: Date;
  autoRenew?: boolean;
  readyForDnsRecordManagement?: boolean;
  managedHostNames?: HostName[];
  consent?: DomainPurchaseConsent;
  domainNotRenewableReasons?: string[];
}

/**
 * @class
 * Initializes a new instance of the Contact class.
 * @constructor
 * Contact information for domain registration. If 'Domain Privacy' option is
 * not selected then the contact information will be  be made publicly
 * available through the Whois directories as per ICANN requirements.
 *
 * @member {object} [addressMailing] Mailing address
 * 
 * @member {string} [addressMailing.address1] Address 1
 * 
 * @member {string} [addressMailing.address2] Address 2
 * 
 * @member {string} [addressMailing.city] City
 * 
 * @member {string} [addressMailing.country] Country
 * 
 * @member {string} [addressMailing.postalCode] Postal code
 * 
 * @member {string} [addressMailing.state] State
 * 
 * @member {string} [email] Email address
 * 
 * @member {string} [fax] Fax number
 * 
 * @member {string} [jobTitle] Job title
 * 
 * @member {string} [nameFirst] First name
 * 
 * @member {string} [nameLast] Last name
 * 
 * @member {string} [nameMiddle] Middle name
 * 
 * @member {string} [organization] Organization
 * 
 * @member {string} [phone] Phone number
 * 
 */
export interface Contact {
  addressMailing?: Address;
  email?: string;
  fax?: string;
  jobTitle?: string;
  nameFirst?: string;
  nameLast?: string;
  nameMiddle?: string;
  organization?: string;
  phone?: string;
}

/**
 * @class
 * Initializes a new instance of the Address class.
 * @constructor
 * Address information for domain registration
 *
 * @member {string} [address1] Address 1
 * 
 * @member {string} [address2] Address 2
 * 
 * @member {string} [city] City
 * 
 * @member {string} [country] Country
 * 
 * @member {string} [postalCode] Postal code
 * 
 * @member {string} [state] State
 * 
 */
export interface Address {
  address1?: string;
  address2?: string;
  city?: string;
  country?: string;
  postalCode?: string;
  state?: string;
}

/**
 * @class
 * Initializes a new instance of the HostName class.
 * @constructor
 * Details of a hostname derived from a domain
 *
 * @member {string} [name] Name of the hostname
 * 
 * @member {array} [siteNames] List of sites the hostname is assigned to. This
 * list will have more than one site only if the hostname is pointing to a
 * Traffic Manager
 * 
 * @member {string} [azureResourceName] Name of the Azure resource the
 * hostname is assigned to. If it is assigned to a traffic manager then it
 * will be the traffic manager name otherwise it will be the website name
 * 
 * @member {string} [azureResourceType] Type of the Azure resource the
 * hostname is assigned to. Possible values include: 'Website',
 * 'TrafficManager'
 * 
 * @member {string} [customHostNameDnsRecordType] Type of the Dns record.
 * Possible values include: 'CName', 'A'
 * 
 * @member {string} [hostNameType] Type of the hostname. Possible values
 * include: 'Verified', 'Managed'
 * 
 */
export interface HostName {
  name?: string;
  siteNames?: string[];
  azureResourceName?: string;
  azureResourceType?: string;
  customHostNameDnsRecordType?: string;
  hostNameType?: string;
}

/**
 * @class
 * Initializes a new instance of the DomainPurchaseConsent class.
 * @constructor
 * Domain purchase consent object representing acceptance of applicable legal
 * agreements
 *
 * @member {array} [agreementKeys] List of applicable legal agreement keys.
 * This list can be retrieved using ListLegalAgreements Api under
 * TopLevelDomain resource
 * 
 * @member {string} [agreedBy] Client IP address
 * 
 * @member {date} [agreedAt] Timestamp when the agreements were accepted
 * 
 */
export interface DomainPurchaseConsent {
  agreementKeys?: string[];
  agreedBy?: string;
  agreedAt?: Date;
}

/**
 * @class
 * Initializes a new instance of the User class.
 * @constructor
 * Represents user crendentials used for publishing activity
 *
 * @member {string} [userName] Username (internal)
 * 
 * @member {string} [publishingUserName] Username used for publishing
 * 
 * @member {string} [publishingPassword] Password used for publishing
 * 
 * @member {string} [scmUri] Service Control Manager URI, including username
 * and password
 * 
 */
export interface User extends Resource {
  userName?: string;
  publishingUserName?: string;
  publishingPassword?: string;
  scmUri?: string;
}

/**
 * @class
 * Initializes a new instance of the GeoRegion class.
 * @constructor
 * Geographical region
 *
 * @member {string} [geoRegionName] Region name
 * 
 * @member {string} [description] Region description
 * 
 * @member {string} [displayName] Display name for region
 * 
 */
export interface GeoRegion extends Resource {
  geoRegionName?: string;
  description?: string;
  displayName?: string;
}

/**
 * @class
 * Initializes a new instance of the ServerFarmWithRichSku class.
 * @constructor
 * App Service Plan Model
 *
 * @member {string} [serverFarmWithRichSkuName] Name for the App Service Plan
 * 
 * @member {string} [workerTierName] Target worker tier assigned to the App
 * Service Plan
 * 
 * @member {string} [status] App Service Plan Status. Possible values include:
 * 'Ready', 'Pending'
 * 
 * @member {string} [subscription] App Service Plan Subscription
 * 
 * @member {string} [adminSiteName] App Service Plan administration site
 * 
 * @member {object} [hostingEnvironmentProfile] Specification for the hosting
 * environment (App Service Environment) to use for the App Service Plan
 * 
 * @member {string} [hostingEnvironmentProfile.id] Resource id of the
 * hostingEnvironment (App Service Environment)
 * 
 * @member {string} [hostingEnvironmentProfile.name] Name of the
 * hostingEnvironment (App Service Environment) (read only)
 * 
 * @member {string} [hostingEnvironmentProfile.type] Resource type of the
 * hostingEnvironment (App Service Environment) (read only)
 * 
 * @member {number} [maximumNumberOfWorkers] Maximum number of instances that
 * can be assigned to this App Service Plan
 * 
 * @member {string} [geoRegion] Geographical location for the App Service Plan
 * 
 * @member {boolean} [perSiteScaling] If True apps assigned to this App
 * Service Plan can be scaled independently
 * If False apps assigned to this App Service Plan will scale to
 * all instances of the plan
 * 
 * @member {number} [numberOfSites] Number of web apps assigned to this App
 * Service Plan
 * 
 * @member {string} [resourceGroup] Resource group of the serverfarm
 * 
 * @member {boolean} [reserved] Enables creation of a Linux App Service Plan
 * 
 * @member {object} [sku]
 * 
 * @member {string} [sku.name] Name of the resource sku
 * 
 * @member {string} [sku.tier] Service Tier of the resource sku
 * 
 * @member {string} [sku.size] Size specifier of the resource sku
 * 
 * @member {string} [sku.family] Family code of the resource sku
 * 
 * @member {number} [sku.capacity] Current number of instances assigned to the
 * resource
 * 
 */
export interface ServerFarmWithRichSku extends Resource {
  serverFarmWithRichSkuName?: string;
  workerTierName?: string;
  status?: string;
  subscription?: string;
  adminSiteName?: string;
  hostingEnvironmentProfile?: HostingEnvironmentProfile;
  maximumNumberOfWorkers?: number;
  geoRegion?: string;
  perSiteScaling?: boolean;
  numberOfSites?: number;
  resourceGroup?: string;
  reserved?: boolean;
  sku?: SkuDescription;
}

/**
 * @class
 * Initializes a new instance of the Site class.
 * @constructor
 * Represents a web app
 *
 * @member {string} [siteName] Name of web app
 * 
 * @member {string} [state] State of the web app
 * 
 * @member {array} [hostNames] Hostnames associated with web app
 * 
 * @member {string} [repositorySiteName] Name of repository site
 * 
 * @member {string} [usageState] State indicating whether web app has exceeded
 * its quota usage. Possible values include: 'Normal', 'Exceeded'
 * 
 * @member {boolean} [enabled] True if the site is enabled; otherwise, false.
 * Setting this  value to false disables the site (takes the site off line).
 * 
 * @member {array} [enabledHostNames] Hostnames for the web app that are
 * enabled. Hostnames need to be assigned and enabled. If some hostnames are
 * assigned but not enabled
 * the app is not served on those hostnames
 * 
 * @member {string} [availabilityState] Management information availability
 * state for the web app. Possible values are Normal or Limited.
 * Normal means that the site is running correctly and that
 * management information for the site is available.
 * Limited means that only partial management information for the
 * site is available and that detailed site information is unavailable.
 * Possible values include: 'Normal', 'Limited', 'DisasterRecoveryMode'
 * 
 * @member {array} [hostNameSslStates] Hostname SSL states are  used to manage
 * the SSL bindings for site's hostnames.
 * 
 * @member {string} [serverFarmId]
 * 
 * @member {date} [lastModifiedTimeUtc] Last time web app was modified in UTC
 * 
 * @member {object} [siteConfig] Configuration of web app
 * 
 * @member {number} [siteConfig.numberOfWorkers] Number of workers
 * 
 * @member {array} [siteConfig.defaultDocuments] Default documents
 * 
 * @member {string} [siteConfig.netFrameworkVersion] Net Framework Version
 * 
 * @member {string} [siteConfig.phpVersion] Version of PHP
 * 
 * @member {string} [siteConfig.pythonVersion] Version of Python
 * 
 * @member {string} [siteConfig.nodeVersion] Version of Node
 * 
 * @member {boolean} [siteConfig.requestTracingEnabled] Enable request tracing
 * 
 * @member {date} [siteConfig.requestTracingExpirationTime] Request tracing
 * expiration time
 * 
 * @member {boolean} [siteConfig.remoteDebuggingEnabled] Remote Debugging
 * Enabled
 * 
 * @member {string} [siteConfig.remoteDebuggingVersion] Remote Debugging
 * Version
 * 
 * @member {boolean} [siteConfig.httpLoggingEnabled] HTTP logging Enabled
 * 
 * @member {number} [siteConfig.logsDirectorySizeLimit] HTTP Logs Directory
 * size limit
 * 
 * @member {boolean} [siteConfig.detailedErrorLoggingEnabled] Detailed error
 * logging enabled
 * 
 * @member {string} [siteConfig.publishingUsername] Publishing user name
 * 
 * @member {string} [siteConfig.publishingPassword] Publishing password
 * 
 * @member {array} [siteConfig.appSettings] Application Settings
 * 
 * @member {array} [siteConfig.metadata] Site Metadata
 * 
 * @member {array} [siteConfig.connectionStrings] Connection strings
 * 
 * @member {array} [siteConfig.handlerMappings] Handler mappings
 * 
 * @member {string} [siteConfig.documentRoot] Document root
 * 
 * @member {string} [siteConfig.scmType] SCM type
 * 
 * @member {boolean} [siteConfig.use32BitWorkerProcess] Use 32 bit worker
 * process
 * 
 * @member {boolean} [siteConfig.webSocketsEnabled] Web socket enabled.
 * 
 * @member {boolean} [siteConfig.alwaysOn] Always On
 * 
 * @member {string} [siteConfig.javaVersion] Java version
 * 
 * @member {string} [siteConfig.javaContainer] Java container
 * 
 * @member {string} [siteConfig.javaContainerVersion] Java container version
 * 
 * @member {string} [siteConfig.appCommandLine] App Command Line to launch
 * 
 * @member {string} [siteConfig.managedPipelineMode] Managed pipeline mode.
 * Possible values include: 'Integrated', 'Classic'
 * 
 * @member {array} [siteConfig.virtualApplications] Virtual applications
 * 
 * @member {string} [siteConfig.loadBalancing] Site load balancing. Possible
 * values include: 'WeightedRoundRobin', 'LeastRequests',
 * 'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'
 * 
 * @member {object} [siteConfig.experiments] This is work around for
 * polymophic types
 * 
 * @member {array} [siteConfig.experiments.rampUpRules] List of
 * {Microsoft.Web.Hosting.Administration.RampUpRule} objects.
 * 
 * @member {object} [siteConfig.limits] Site limits
 * 
 * @member {number} [siteConfig.limits.maxPercentageCpu] Maximum allowed CPU
 * usage percentage
 * 
 * @member {number} [siteConfig.limits.maxMemoryInMb] Maximum allowed memory
 * usage in MB
 * 
 * @member {number} [siteConfig.limits.maxDiskSizeInMb] Maximum allowed disk
 * size usage in MB
 * 
 * @member {boolean} [siteConfig.autoHealEnabled] Auto heal enabled
 * 
 * @member {object} [siteConfig.autoHealRules] Auto heal rules
 * 
 * @member {object} [siteConfig.autoHealRules.triggers] Triggers - Conditions
 * that describe when to execute the auto-heal actions
 * 
 * @member {object} [siteConfig.autoHealRules.triggers.requests] Requests -
 * Defines a rule based on total requests
 * 
 * @member {number} [siteConfig.autoHealRules.triggers.requests.count] Count
 * 
 * @member {string} [siteConfig.autoHealRules.triggers.requests.timeInterval]
 * TimeInterval
 * 
 * @member {number} [siteConfig.autoHealRules.triggers.privateBytesInKB]
 * PrivateBytesInKB - Defines a rule based on private bytes
 * 
 * @member {array} [siteConfig.autoHealRules.triggers.statusCodes] StatusCodes
 * - Defines a rule based on status codes
 * 
 * @member {object} [siteConfig.autoHealRules.triggers.slowRequests]
 * SlowRequests - Defines a rule based on request execution time
 * 
 * @member {string} [siteConfig.autoHealRules.triggers.slowRequests.timeTaken]
 * TimeTaken
 * 
 * @member {number} [siteConfig.autoHealRules.triggers.slowRequests.count]
 * Count
 * 
 * @member {string}
 * [siteConfig.autoHealRules.triggers.slowRequests.timeInterval] TimeInterval
 * 
 * @member {object} [siteConfig.autoHealRules.actions] Actions - Actions to be
 * executed when a rule is triggered
 * 
 * @member {string} [siteConfig.autoHealRules.actions.actionType] ActionType -
 * predefined action to be taken. Possible values include: 'Recycle',
 * 'LogEvent', 'CustomAction'
 * 
 * @member {object} [siteConfig.autoHealRules.actions.customAction]
 * CustomAction - custom action to be taken
 * 
 * @member {string} [siteConfig.autoHealRules.actions.customAction.exe]
 * Executable to be run
 * 
 * @member {string} [siteConfig.autoHealRules.actions.customAction.parameters]
 * Parameters for the executable
 * 
 * @member {string} [siteConfig.autoHealRules.actions.minProcessExecutionTime]
 * MinProcessExecutionTime - minimum time the process must execute
 * before taking the action
 * 
 * @member {string} [siteConfig.tracingOptions] Tracing options
 * 
 * @member {string} [siteConfig.vnetName] Vnet name
 * 
 * @member {object} [siteConfig.cors] Cross-Origin Resource Sharing (CORS)
 * settings.
 * 
 * @member {array} [siteConfig.cors.allowedOrigins] Gets or sets the list of
 * origins that should be allowed to make cross-origin
 * calls (for example: http://example.com:12345). Use "*" to allow
 * all.
 * 
 * @member {object} [siteConfig.apiDefinition] Information about the formal
 * API definition for the web app.
 * 
 * @member {string} [siteConfig.apiDefinition.url] The URL of the API
 * definition.
 * 
 * @member {string} [siteConfig.autoSwapSlotName] Auto swap slot name
 * 
 * @member {boolean} [siteConfig.localMySqlEnabled] Local mysql enabled
 * 
 * @member {array} [siteConfig.ipSecurityRestrictions] Ip Security restrictions
 * 
 * @member {array} [trafficManagerHostNames] Read-only list of Azure Traffic
 * manager hostnames associated with web app
 * 
 * @member {boolean} [premiumAppDeployed] If set indicates whether web app is
 * deployed as a premium app
 * 
 * @member {boolean} [scmSiteAlsoStopped] If set indicates whether to stop SCM
 * (KUDU) site when the web app is stopped. Default is false.
 * 
 * @member {string} [targetSwapSlot] Read-only property that specifies which
 * slot this app will swap into
 * 
 * @member {object} [hostingEnvironmentProfile] Specification for the hosting
 * environment (App Service Environment) to use for the web app
 * 
 * @member {string} [hostingEnvironmentProfile.id] Resource id of the
 * hostingEnvironment (App Service Environment)
 * 
 * @member {string} [hostingEnvironmentProfile.name] Name of the
 * hostingEnvironment (App Service Environment) (read only)
 * 
 * @member {string} [hostingEnvironmentProfile.type] Resource type of the
 * hostingEnvironment (App Service Environment) (read only)
 * 
 * @member {string} [microService]
 * 
 * @member {string} [gatewaySiteName] Name of gateway app associated with web
 * app
 * 
 * @member {boolean} [clientAffinityEnabled] Specifies if the client affinity
 * is enabled when load balancing http request for multiple instances of the
 * web app
 * 
 * @member {boolean} [clientCertEnabled] Specifies if the client certificate
 * is enabled for the web app
 * 
 * @member {boolean} [hostNamesDisabled] Specifies if the public hostnames are
 * disabled the web app.
 * If set to true the app is only accessible via API Management
 * process
 * 
 * @member {string} [outboundIpAddresses] List of comma separated IP addresses
 * that this web app uses for outbound connections. Those can be used when
 * configuring firewall rules for databases accessed by this web app.
 * 
 * @member {number} [containerSize] Size of a function container
 * 
 * @member {number} [maxNumberOfWorkers] Maximum number of workers
 * This only applies to function container
 * 
 * @member {object} [cloningInfo] This is only valid for web app creation. If
 * specified, web app is cloned from
 * a source web app
 * 
 * @member {string} [cloningInfo.correlationId] Correlation Id of cloning
 * operation. This id ties multiple cloning operations
 * together to use the same snapshot
 * 
 * @member {boolean} [cloningInfo.overwrite] Overwrite destination web app
 * 
 * @member {boolean} [cloningInfo.cloneCustomHostNames] If true, clone custom
 * hostnames from source web app
 * 
 * @member {boolean} [cloningInfo.cloneSourceControl] Clone source control
 * from source web app
 * 
 * @member {string} [cloningInfo.sourceWebAppId] ARM resource id of the source
 * web app. Web app resource id is of the form
 * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}
 * for production slots and
 * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}
 * for other slots
 * 
 * @member {string} [cloningInfo.hostingEnvironment] Hosting environment
 * 
 * @member {object} [cloningInfo.appSettingsOverrides] Application settings
 * overrides for cloned web app. If specified these settings will override
 * the settings cloned
 * from source web app. If not specified, application settings
 * from source web app are retained.
 * 
 * @member {boolean} [cloningInfo.configureLoadBalancing] If specified
 * configure load balancing for source and clone site
 * 
 * @member {string} [cloningInfo.trafficManagerProfileId] ARM resource id of
 * the traffic manager profile to use if it exists. Traffic manager resource
 * id is of the form
 * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}
 * 
 * @member {string} [cloningInfo.trafficManagerProfileName] Name of traffic
 * manager profile to create. This is only needed if traffic manager profile
 * does not already exist
 * 
 * @member {string} [resourceGroup] Resource group web app belongs to
 * 
 * @member {boolean} [isDefaultContainer] Site is a default container
 * 
 * @member {string} [defaultHostName] Default hostname of the web app
 * 
 */
export interface Site extends Resource {
  siteName?: string;
  state?: string;
  hostNames?: string[];
  repositorySiteName?: string;
  usageState?: string;
  enabled?: boolean;
  enabledHostNames?: string[];
  availabilityState?: string;
  hostNameSslStates?: HostNameSslState[];
  serverFarmId?: string;
  lastModifiedTimeUtc?: Date;
  siteConfig?: SiteConfig;
  trafficManagerHostNames?: string[];
  premiumAppDeployed?: boolean;
  scmSiteAlsoStopped?: boolean;
  targetSwapSlot?: string;
  hostingEnvironmentProfile?: HostingEnvironmentProfile;
  microService?: string;
  gatewaySiteName?: string;
  clientAffinityEnabled?: boolean;
  clientCertEnabled?: boolean;
  hostNamesDisabled?: boolean;
  outboundIpAddresses?: string;
  containerSize?: number;
  maxNumberOfWorkers?: number;
  cloningInfo?: CloningInfo;
  resourceGroup?: string;
  isDefaultContainer?: boolean;
  defaultHostName?: string;
}

/**
 * @class
 * Initializes a new instance of the HostNameSslState class.
 * @constructor
 * Object that represents a SSL-enabled host name.
 *
 * @member {string} [name] Host name
 * 
 * @member {string} sslState SSL type. Possible values include: 'Disabled',
 * 'SniEnabled', 'IpBasedEnabled'
 * 
 * @member {string} [virtualIP] Virtual IP address assigned to the host name
 * if IP based SSL is enabled
 * 
 * @member {string} [thumbprint] SSL cert thumbprint
 * 
 * @member {boolean} [toUpdate] Set this flag to update existing host name
 * 
 */
export interface HostNameSslState {
  name?: string;
  sslState: string;
  virtualIP?: string;
  thumbprint?: string;
  toUpdate?: boolean;
}

/**
 * @class
 * Initializes a new instance of the SiteConfig class.
 * @constructor
 * Configuration of Azure web site
 *
 * @member {number} [numberOfWorkers] Number of workers
 * 
 * @member {array} [defaultDocuments] Default documents
 * 
 * @member {string} [netFrameworkVersion] Net Framework Version
 * 
 * @member {string} [phpVersion] Version of PHP
 * 
 * @member {string} [pythonVersion] Version of Python
 * 
 * @member {string} [nodeVersion] Version of Node
 * 
 * @member {boolean} [requestTracingEnabled] Enable request tracing
 * 
 * @member {date} [requestTracingExpirationTime] Request tracing expiration
 * time
 * 
 * @member {boolean} [remoteDebuggingEnabled] Remote Debugging Enabled
 * 
 * @member {string} [remoteDebuggingVersion] Remote Debugging Version
 * 
 * @member {boolean} [httpLoggingEnabled] HTTP logging Enabled
 * 
 * @member {number} [logsDirectorySizeLimit] HTTP Logs Directory size limit
 * 
 * @member {boolean} [detailedErrorLoggingEnabled] Detailed error logging
 * enabled
 * 
 * @member {string} [publishingUsername] Publishing user name
 * 
 * @member {string} [publishingPassword] Publishing password
 * 
 * @member {array} [appSettings] Application Settings
 * 
 * @member {array} [metadata] Site Metadata
 * 
 * @member {array} [connectionStrings] Connection strings
 * 
 * @member {array} [handlerMappings] Handler mappings
 * 
 * @member {string} [documentRoot] Document root
 * 
 * @member {string} [scmType] SCM type
 * 
 * @member {boolean} [use32BitWorkerProcess] Use 32 bit worker process
 * 
 * @member {boolean} [webSocketsEnabled] Web socket enabled.
 * 
 * @member {boolean} [alwaysOn] Always On
 * 
 * @member {string} [javaVersion] Java version
 * 
 * @member {string} [javaContainer] Java container
 * 
 * @member {string} [javaContainerVersion] Java container version
 * 
 * @member {string} [appCommandLine] App Command Line to launch
 * 
 * @member {string} [managedPipelineMode] Managed pipeline mode. Possible
 * values include: 'Integrated', 'Classic'
 * 
 * @member {array} [virtualApplications] Virtual applications
 * 
 * @member {string} [loadBalancing] Site load balancing. Possible values
 * include: 'WeightedRoundRobin', 'LeastRequests', 'LeastResponseTime',
 * 'WeightedTotalTraffic', 'RequestHash'
 * 
 * @member {object} [experiments] This is work around for polymophic types
 * 
 * @member {array} [experiments.rampUpRules] List of
 * {Microsoft.Web.Hosting.Administration.RampUpRule} objects.
 * 
 * @member {object} [limits] Site limits
 * 
 * @member {number} [limits.maxPercentageCpu] Maximum allowed CPU usage
 * percentage
 * 
 * @member {number} [limits.maxMemoryInMb] Maximum allowed memory usage in MB
 * 
 * @member {number} [limits.maxDiskSizeInMb] Maximum allowed disk size usage
 * in MB
 * 
 * @member {boolean} [autoHealEnabled] Auto heal enabled
 * 
 * @member {object} [autoHealRules] Auto heal rules
 * 
 * @member {object} [autoHealRules.triggers] Triggers - Conditions that
 * describe when to execute the auto-heal actions
 * 
 * @member {object} [autoHealRules.triggers.requests] Requests - Defines a
 * rule based on total requests
 * 
 * @member {number} [autoHealRules.triggers.requests.count] Count
 * 
 * @member {string} [autoHealRules.triggers.requests.timeInterval] TimeInterval
 * 
 * @member {number} [autoHealRules.triggers.privateBytesInKB] PrivateBytesInKB
 * - Defines a rule based on private bytes
 * 
 * @member {array} [autoHealRules.triggers.statusCodes] StatusCodes - Defines
 * a rule based on status codes
 * 
 * @member {object} [autoHealRules.triggers.slowRequests] SlowRequests -
 * Defines a rule based on request execution time
 * 
 * @member {string} [autoHealRules.triggers.slowRequests.timeTaken] TimeTaken
 * 
 * @member {number} [autoHealRules.triggers.slowRequests.count] Count
 * 
 * @member {string} [autoHealRules.triggers.slowRequests.timeInterval]
 * TimeInterval
 * 
 * @member {object} [autoHealRules.actions] Actions - Actions to be executed
 * when a rule is triggered
 * 
 * @member {string} [autoHealRules.actions.actionType] ActionType - predefined
 * action to be taken. Possible values include: 'Recycle', 'LogEvent',
 * 'CustomAction'
 * 
 * @member {object} [autoHealRules.actions.customAction] CustomAction - custom
 * action to be taken
 * 
 * @member {string} [autoHealRules.actions.customAction.exe] Executable to be
 * run
 * 
 * @member {string} [autoHealRules.actions.customAction.parameters] Parameters
 * for the executable
 * 
 * @member {string} [autoHealRules.actions.minProcessExecutionTime]
 * MinProcessExecutionTime - minimum time the process must execute
 * before taking the action
 * 
 * @member {string} [tracingOptions] Tracing options
 * 
 * @member {string} [vnetName] Vnet name
 * 
 * @member {object} [cors] Cross-Origin Resource Sharing (CORS) settings.
 * 
 * @member {array} [cors.allowedOrigins] Gets or sets the list of origins that
 * should be allowed to make cross-origin
 * calls (for example: http://example.com:12345). Use "*" to allow
 * all.
 * 
 * @member {object} [apiDefinition] Information about the formal API
 * definition for the web app.
 * 
 * @member {string} [apiDefinition.url] The URL of the API definition.
 * 
 * @member {string} [autoSwapSlotName] Auto swap slot name
 * 
 * @member {boolean} [localMySqlEnabled] Local mysql enabled
 * 
 * @member {array} [ipSecurityRestrictions] Ip Security restrictions
 * 
 */
export interface SiteConfig extends Resource {
  numberOfWorkers?: number;
  defaultDocuments?: string[];
  netFrameworkVersion?: string;
  phpVersion?: string;
  pythonVersion?: string;
  nodeVersion?: string;
  requestTracingEnabled?: boolean;
  requestTracingExpirationTime?: Date;
  remoteDebuggingEnabled?: boolean;
  remoteDebuggingVersion?: string;
  httpLoggingEnabled?: boolean;
  logsDirectorySizeLimit?: number;
  detailedErrorLoggingEnabled?: boolean;
  publishingUsername?: string;
  publishingPassword?: string;
  appSettings?: NameValuePair[];
  metadata?: NameValuePair[];
  connectionStrings?: ConnStringInfo[];
  handlerMappings?: HandlerMapping[];
  documentRoot?: string;
  scmType?: string;
  use32BitWorkerProcess?: boolean;
  webSocketsEnabled?: boolean;
  alwaysOn?: boolean;
  javaVersion?: string;
  javaContainer?: string;
  javaContainerVersion?: string;
  appCommandLine?: string;
  managedPipelineMode?: string;
  virtualApplications?: VirtualApplication[];
  loadBalancing?: string;
  experiments?: Experiments;
  limits?: SiteLimits;
  autoHealEnabled?: boolean;
  autoHealRules?: AutoHealRules;
  tracingOptions?: string;
  vnetName?: string;
  cors?: CorsSettings;
  apiDefinition?: ApiDefinitionInfo;
  autoSwapSlotName?: string;
  localMySqlEnabled?: boolean;
  ipSecurityRestrictions?: IpSecurityRestriction[];
}

/**
 * @class
 * Initializes a new instance of the NameValuePair class.
 * @constructor
 * Name value pair
 *
 * @member {string} [name] Pair name
 * 
 * @member {string} [value] Pair value
 * 
 */
export interface NameValuePair {
  name?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the ConnStringInfo class.
 * @constructor
 * Represents database connection string information
 *
 * @member {string} [name] Name of connection string
 * 
 * @member {string} [connectionString] Connection string value
 * 
 * @member {string} type Type of database. Possible values include: 'MySql',
 * 'SQLServer', 'SQLAzure', 'Custom'
 * 
 */
export interface ConnStringInfo {
  name?: string;
  connectionString?: string;
  type: string;
}

/**
 * @class
 * Initializes a new instance of the HandlerMapping class.
 * @constructor
 * The IIS handler mappings used to define which handler processes HTTP
 * requests with certain extension.
 * For example it is used to configure php-cgi.exe process to
 * handle all HTTP requests with *.php extension.
 *
 * @member {string} [extension] Requests with this extension will be handled
 * using the specified FastCGI application.
 * 
 * @member {string} [scriptProcessor] The absolute path to the FastCGI
 * application.
 * 
 * @member {string} [arguments] Command-line arguments to be passed to the
 * script processor.
 * 
 */
export interface HandlerMapping {
  extension?: string;
  scriptProcessor?: string;
  arguments?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualApplication class.
 * @constructor
 * @member {string} [virtualPath]
 * 
 * @member {string} [physicalPath]
 * 
 * @member {boolean} [preloadEnabled]
 * 
 * @member {array} [virtualDirectories]
 * 
 */
export interface VirtualApplication {
  virtualPath?: string;
  physicalPath?: string;
  preloadEnabled?: boolean;
  virtualDirectories?: VirtualDirectory[];
}

/**
 * @class
 * Initializes a new instance of the VirtualDirectory class.
 * @constructor
 * @member {string} [virtualPath]
 * 
 * @member {string} [physicalPath]
 * 
 */
export interface VirtualDirectory {
  virtualPath?: string;
  physicalPath?: string;
}

/**
 * @class
 * Initializes a new instance of the Experiments class.
 * @constructor
 * Class containing Routing in production experiments
 *
 * @member {array} [rampUpRules] List of
 * {Microsoft.Web.Hosting.Administration.RampUpRule} objects.
 * 
 */
export interface Experiments {
  rampUpRules?: RampUpRule[];
}

/**
 * @class
 * Initializes a new instance of the RampUpRule class.
 * @constructor
 * Routing rules for ramp up testing. This rule allows to redirect static
 * traffic % to a slot or to gradually change routing % based on performance
 *
 * @member {string} [actionHostName] Hostname of a slot to which the traffic
 * will be redirected if decided to. E.g. mysite-stage.azurewebsites.net
 * 
 * @member {number} [reroutePercentage] Percentage of the traffic which will
 * be redirected to
 * {Microsoft.Web.Hosting.Administration.RampUpRule.ActionHostName}
 * 
 * @member {number} [changeStep] [Optional] In auto ramp up scenario this is
 * the step to to add/remove from
 * {Microsoft.Web.Hosting.Administration.RampUpRule.ReroutePercentage} until
 * it reaches
 * {Microsoft.Web.Hosting.Administration.RampUpRule.MinReroutePercentage}
 * or {Microsoft.Web.Hosting.Administration.RampUpRule.MaxReroutePercentage}.
 * Site metrics are checked every N minutes specificed in
 * {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeIntervalInMinutes}.
 * Custom decision algorithm can be provided in TiPCallback site
 * extension which Url can be specified in
 * {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeDecisionCallbackUrl}
 * 
 * @member {number} [changeIntervalInMinutes] [Optional] Specifies interval in
 * mimuntes to reevaluate ReroutePercentage
 * 
 * @member {number} [minReroutePercentage] [Optional] Specifies lower boundary
 * above which ReroutePercentage will stay.
 * 
 * @member {number} [maxReroutePercentage] [Optional] Specifies upper boundary
 * below which ReroutePercentage will stay.
 * 
 * @member {string} [changeDecisionCallbackUrl] Custom decision algorithm can
 * be provided in TiPCallback site extension which Url can be specified. See
 * TiPCallback site extension for the scaffold and contracts.
 * https://www.siteextensions.net/packages/TiPCallback/
 * 
 * @member {string} [name] Name of the routing rule. The recommended name
 * would be to point to the slot which will receive the traffic in the
 * experiment.
 * 
 */
export interface RampUpRule {
  actionHostName?: string;
  reroutePercentage?: number;
  changeStep?: number;
  changeIntervalInMinutes?: number;
  minReroutePercentage?: number;
  maxReroutePercentage?: number;
  changeDecisionCallbackUrl?: string;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the SiteLimits class.
 * @constructor
 * Represents metric limits set on a web app.
 *
 * @member {number} [maxPercentageCpu] Maximum allowed CPU usage percentage
 * 
 * @member {number} [maxMemoryInMb] Maximum allowed memory usage in MB
 * 
 * @member {number} [maxDiskSizeInMb] Maximum allowed disk size usage in MB
 * 
 */
export interface SiteLimits {
  maxPercentageCpu?: number;
  maxMemoryInMb?: number;
  maxDiskSizeInMb?: number;
}

/**
 * @class
 * Initializes a new instance of the AutoHealRules class.
 * @constructor
 * AutoHealRules - describes the rules which can be defined for auto-heal
 *
 * @member {object} [triggers] Triggers - Conditions that describe when to
 * execute the auto-heal actions
 * 
 * @member {object} [triggers.requests] Requests - Defines a rule based on
 * total requests
 * 
 * @member {number} [triggers.requests.count] Count
 * 
 * @member {string} [triggers.requests.timeInterval] TimeInterval
 * 
 * @member {number} [triggers.privateBytesInKB] PrivateBytesInKB - Defines a
 * rule based on private bytes
 * 
 * @member {array} [triggers.statusCodes] StatusCodes - Defines a rule based
 * on status codes
 * 
 * @member {object} [triggers.slowRequests] SlowRequests - Defines a rule
 * based on request execution time
 * 
 * @member {string} [triggers.slowRequests.timeTaken] TimeTaken
 * 
 * @member {number} [triggers.slowRequests.count] Count
 * 
 * @member {string} [triggers.slowRequests.timeInterval] TimeInterval
 * 
 * @member {object} [actions] Actions - Actions to be executed when a rule is
 * triggered
 * 
 * @member {string} [actions.actionType] ActionType - predefined action to be
 * taken. Possible values include: 'Recycle', 'LogEvent', 'CustomAction'
 * 
 * @member {object} [actions.customAction] CustomAction - custom action to be
 * taken
 * 
 * @member {string} [actions.customAction.exe] Executable to be run
 * 
 * @member {string} [actions.customAction.parameters] Parameters for the
 * executable
 * 
 * @member {string} [actions.minProcessExecutionTime] MinProcessExecutionTime
 * - minimum time the process must execute
 * before taking the action
 * 
 */
export interface AutoHealRules {
  triggers?: AutoHealTriggers;
  actions?: AutoHealActions;
}

/**
 * @class
 * Initializes a new instance of the AutoHealTriggers class.
 * @constructor
 * AutoHealTriggers - describes the triggers for auto-heal.
 *
 * @member {object} [requests] Requests - Defines a rule based on total
 * requests
 * 
 * @member {number} [requests.count] Count
 * 
 * @member {string} [requests.timeInterval] TimeInterval
 * 
 * @member {number} [privateBytesInKB] PrivateBytesInKB - Defines a rule based
 * on private bytes
 * 
 * @member {array} [statusCodes] StatusCodes - Defines a rule based on status
 * codes
 * 
 * @member {object} [slowRequests] SlowRequests - Defines a rule based on
 * request execution time
 * 
 * @member {string} [slowRequests.timeTaken] TimeTaken
 * 
 * @member {number} [slowRequests.count] Count
 * 
 * @member {string} [slowRequests.timeInterval] TimeInterval
 * 
 */
export interface AutoHealTriggers {
  requests?: RequestsBasedTrigger;
  privateBytesInKB?: number;
  statusCodes?: StatusCodesBasedTrigger[];
  slowRequests?: SlowRequestsBasedTrigger;
}

/**
 * @class
 * Initializes a new instance of the RequestsBasedTrigger class.
 * @constructor
 * RequestsBasedTrigger
 *
 * @member {number} [count] Count
 * 
 * @member {string} [timeInterval] TimeInterval
 * 
 */
export interface RequestsBasedTrigger {
  count?: number;
  timeInterval?: string;
}

/**
 * @class
 * Initializes a new instance of the StatusCodesBasedTrigger class.
 * @constructor
 * StatusCodeBasedTrigger
 *
 * @member {number} [status] HTTP status code
 * 
 * @member {number} [subStatus] SubStatus
 * 
 * @member {number} [win32Status] Win32 error code
 * 
 * @member {number} [count] Count
 * 
 * @member {string} [timeInterval] TimeInterval
 * 
 */
export interface StatusCodesBasedTrigger {
  status?: number;
  subStatus?: number;
  win32Status?: number;
  count?: number;
  timeInterval?: string;
}

/**
 * @class
 * Initializes a new instance of the SlowRequestsBasedTrigger class.
 * @constructor
 * SlowRequestsBasedTrigger
 *
 * @member {string} [timeTaken] TimeTaken
 * 
 * @member {number} [count] Count
 * 
 * @member {string} [timeInterval] TimeInterval
 * 
 */
export interface SlowRequestsBasedTrigger {
  timeTaken?: string;
  count?: number;
  timeInterval?: string;
}

/**
 * @class
 * Initializes a new instance of the AutoHealActions class.
 * @constructor
 * AutoHealActions - Describes the actions which can be
 * taken by the auto-heal module when a rule is triggered.
 *
 * @member {string} actionType ActionType - predefined action to be taken.
 * Possible values include: 'Recycle', 'LogEvent', 'CustomAction'
 * 
 * @member {object} [customAction] CustomAction - custom action to be taken
 * 
 * @member {string} [customAction.exe] Executable to be run
 * 
 * @member {string} [customAction.parameters] Parameters for the executable
 * 
 * @member {string} [minProcessExecutionTime] MinProcessExecutionTime -
 * minimum time the process must execute
 * before taking the action
 * 
 */
export interface AutoHealActions {
  actionType: string;
  customAction?: AutoHealCustomAction;
  minProcessExecutionTime?: string;
}

/**
 * @class
 * Initializes a new instance of the AutoHealCustomAction class.
 * @constructor
 * AutoHealCustomAction - Describes the custom action to be executed
 * when an auto heal rule is triggered.
 *
 * @member {string} [exe] Executable to be run
 * 
 * @member {string} [parameters] Parameters for the executable
 * 
 */
export interface AutoHealCustomAction {
  exe?: string;
  parameters?: string;
}

/**
 * @class
 * Initializes a new instance of the CorsSettings class.
 * @constructor
 * Cross-Origin Resource Sharing (CORS) settings for the web app.
 *
 * @member {array} [allowedOrigins] Gets or sets the list of origins that
 * should be allowed to make cross-origin
 * calls (for example: http://example.com:12345). Use "*" to allow
 * all.
 * 
 */
export interface CorsSettings {
  allowedOrigins?: string[];
}

/**
 * @class
 * Initializes a new instance of the ApiDefinitionInfo class.
 * @constructor
 * Information about the formal API definition for the web app.
 *
 * @member {string} [url] The URL of the API definition.
 * 
 */
export interface ApiDefinitionInfo {
  url?: string;
}

/**
 * @class
 * Initializes a new instance of the IpSecurityRestriction class.
 * @constructor
 * Represents an ip security restriction on a web app.
 *
 * @member {string} [ipAddress] IP address the security restriction is valid
 * for
 * 
 * @member {string} [subnetMask] Subnet mask for the range of IP addresses the
 * restriction is valid for
 * 
 */
export interface IpSecurityRestriction {
  ipAddress?: string;
  subnetMask?: string;
}

/**
 * @class
 * Initializes a new instance of the CloningInfo class.
 * @constructor
 * Represents information needed for cloning operation
 *
 * @member {string} [correlationId] Correlation Id of cloning operation. This
 * id ties multiple cloning operations
 * together to use the same snapshot
 * 
 * @member {boolean} [overwrite] Overwrite destination web app
 * 
 * @member {boolean} [cloneCustomHostNames] If true, clone custom hostnames
 * from source web app
 * 
 * @member {boolean} [cloneSourceControl] Clone source control from source web
 * app
 * 
 * @member {string} [sourceWebAppId] ARM resource id of the source web app.
 * Web app resource id is of the form
 * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}
 * for production slots and
 * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}
 * for other slots
 * 
 * @member {string} [hostingEnvironment] Hosting environment
 * 
 * @member {object} [appSettingsOverrides] Application settings overrides for
 * cloned web app. If specified these settings will override the settings
 * cloned
 * from source web app. If not specified, application settings
 * from source web app are retained.
 * 
 * @member {boolean} [configureLoadBalancing] If specified configure load
 * balancing for source and clone site
 * 
 * @member {string} [trafficManagerProfileId] ARM resource id of the traffic
 * manager profile to use if it exists. Traffic manager resource id is of the
 * form
 * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}
 * 
 * @member {string} [trafficManagerProfileName] Name of traffic manager
 * profile to create. This is only needed if traffic manager profile does not
 * already exist
 * 
 */
export interface CloningInfo {
  correlationId?: string;
  overwrite?: boolean;
  cloneCustomHostNames?: boolean;
  cloneSourceControl?: boolean;
  sourceWebAppId?: string;
  hostingEnvironment?: string;
  appSettingsOverrides?: { [propertyName: string]: string };
  configureLoadBalancing?: boolean;
  trafficManagerProfileId?: string;
  trafficManagerProfileName?: string;
}

/**
 * @class
 * Initializes a new instance of the SiteProperties class.
 * @constructor
 * @member {array} [metadata]
 * 
 * @member {array} [properties]
 * 
 * @member {array} [appSettings]
 * 
 */
export interface SiteProperties {
  metadata?: NameValuePair[];
  properties?: NameValuePair[];
  appSettings?: NameValuePair[];
}

/**
 * @class
 * Initializes a new instance of the RoutingRule class.
 * @constructor
 * Routing rules for TiP
 *
 * @member {string} [name] Name of the routing rule. The recommended name
 * would be to point to the slot which will receive the traffic in the
 * experiment.
 * 
 */
export interface RoutingRule {
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the SiteAuthSettings class.
 * @constructor
 * Configuration settings for the Azure App Service Authentication /
 * Authorization feature.
 *
 * @member {boolean} [enabled] Gets or sets a value indicating whether the
 * Authentication / Authorization feature is enabled for the current app.
 * 
 * @member {string} [httpApiPrefixPath] Gets or sets the relative path prefix
 * used by platform HTTP APIs.
 * Changing this value is not recommended except for compatibility
 * reasons.
 * 
 * @member {string} [unauthenticatedClientAction] Gets or sets the action to
 * take when an unauthenticated client attempts to access the app. Possible
 * values include: 'RedirectToLoginPage', 'AllowAnonymous'
 * 
 * @member {boolean} [tokenStoreEnabled] Gets or sets a value indicating
 * whether to durably store platform-specific security tokens
 * obtained during login flows. This capability is disabled by
 * default.
 * 
 * @member {array} [allowedExternalRedirectUrls] Gets or sets a collection of
 * external URLs that can be redirected to as part of logging in
 * or logging out of the web app. Note that the query string part
 * of the URL is ignored.
 * This is an advanced setting typically only needed by Windows
 * Store application backends.
 * Note that URLs within the current domain are always implicitly
 * allowed.
 * 
 * @member {string} [defaultProvider] Gets or sets the default authentication
 * provider to use when multiple providers are configured.
 * This setting is only needed if multiple providers are
 * configured and the unauthenticated client
 * action is set to "RedirectToLoginPage". Possible values
 * include: 'AzureActiveDirectory', 'Facebook', 'Google', 'MicrosoftAccount',
 * 'Twitter'
 * 
 * @member {number} [tokenRefreshExtensionHours] Gets or sets the number of
 * hours after session token expiration that a session token can be used to
 * call the token refresh API. The default is 72 hours.
 * 
 * @member {string} [clientId] Gets or sets the Client ID of this relying
 * party application, known as the client_id.
 * This setting is required for enabling OpenID Connection
 * authentication with Azure Active Directory or
 * other 3rd party OpenID Connect providers.
 * More information on OpenID Connect:
 * http://openid.net/specs/openid-connect-core-1_0.html
 * 
 * @member {string} [clientSecret] Gets or sets the Client Secret of this
 * relying party application (in Azure Active Directory, this is also
 * referred to as the Key).
 * This setting is optional. If no client secret is configured,
 * the OpenID Connect implicit auth flow is used to authenticate end users.
 * Otherwise, the OpenID Connect Authorization Code Flow is used
 * to authenticate end users.
 * More information on OpenID Connect:
 * http://openid.net/specs/openid-connect-core-1_0.html
 * 
 * @member {string} [issuer] Gets or sets the OpenID Connect Issuer URI that
 * represents the entity which issues access tokens for this application.
 * When using Azure Active Directory, this value is the URI of the
 * directory tenant, e.g. https://sts.windows.net/{tenant-guid}/.
 * This URI is a case-sensitive identifier for the token issuer.
 * More information on OpenID Connect Discovery:
 * http://openid.net/specs/openid-connect-discovery-1_0.html
 * 
 * @member {array} [allowedAudiences] Gets or sets a list of allowed audience
 * values to consider when validating JWTs issued by
 * Azure Active Directory. Note that the
 * {Microsoft.Web.Hosting.Administration.SiteAuthSettings.ClientId} value is
 * always considered an
 * allowed audience, regardless of this setting.
 * 
 * @member {array} [additionalLoginParams] Gets or sets a list of login
 * parameters to send to the OpenID Connect authorization endpoint when
 * a user logs in. Each parameter must be in the form "key=value".
 * 
 * @member {string} [aadClientId]
 * 
 * @member {string} [openIdIssuer]
 * 
 * @member {string} [googleClientId] Gets or sets the OpenID Connect Client ID
 * for the Google web application.
 * This setting is required for enabling Google Sign-In.
 * Google Sign-In documentation:
 * https://developers.google.com/identity/sign-in/web/
 * 
 * @member {string} [googleClientSecret] Gets or sets the client secret
 * associated with the Google web application.
 * This setting is required for enabling Google Sign-In.
 * Google Sign-In documentation:
 * https://developers.google.com/identity/sign-in/web/
 * 
 * @member {array} [googleOAuthScopes] Gets or sets the OAuth 2.0 scopes that
 * will be requested as part of Google Sign-In authentication.
 * This setting is optional. If not specified, "openid",
 * "profile", and "email" are used as default scopes.
 * Google Sign-In documentation:
 * https://developers.google.com/identity/sign-in/web/
 * 
 * @member {string} [facebookAppId] Gets or sets the App ID of the Facebook
 * app used for login.
 * This setting is required for enabling Facebook Login.
 * Facebook Login documentation:
 * https://developers.facebook.com/docs/facebook-login
 * 
 * @member {string} [facebookAppSecret] Gets or sets the App Secret of the
 * Facebook app used for Facebook Login.
 * This setting is required for enabling Facebook Login.
 * Facebook Login documentation:
 * https://developers.facebook.com/docs/facebook-login
 * 
 * @member {array} [facebookOAuthScopes] Gets or sets the OAuth 2.0 scopes
 * that will be requested as part of Facebook Login authentication.
 * This setting is optional.
 * Facebook Login documentation:
 * https://developers.facebook.com/docs/facebook-login
 * 
 * @member {string} [twitterConsumerKey] Gets or sets the OAuth 1.0a consumer
 * key of the Twitter application used for sign-in.
 * This setting is required for enabling Twitter Sign-In.
 * Twitter Sign-In documentation:
 * https://dev.twitter.com/web/sign-in
 * 
 * @member {string} [twitterConsumerSecret] Gets or sets the OAuth 1.0a
 * consumer secret of the Twitter application used for sign-in.
 * This setting is required for enabling Twitter Sign-In.
 * Twitter Sign-In documentation:
 * https://dev.twitter.com/web/sign-in
 * 
 * @member {string} [microsoftAccountClientId] Gets or sets the OAuth 2.0
 * client ID that was created for the app used for authentication.
 * This setting is required for enabling Microsoft Account
 * authentication.
 * Microsoft Account OAuth documentation:
 * https://dev.onedrive.com/auth/msa_oauth.htm
 * 
 * @member {string} [microsoftAccountClientSecret] Gets or sets the OAuth 2.0
 * client secret that was created for the app used for authentication.
 * This setting is required for enabling Microsoft Account
 * authentication.
 * Microsoft Account OAuth documentation:
 * https://dev.onedrive.com/auth/msa_oauth.htm
 * 
 * @member {array} [microsoftAccountOAuthScopes] Gets or sets the OAuth 2.0
 * scopes that will be requested as part of Microsoft Account authentication.
 * This setting is optional. If not specified, "wl.basic" is used
 * as the default scope.
 * Microsoft Account Scopes and permissions documentation:
 * https://msdn.microsoft.com/en-us/library/dn631845.aspx
 * 
 */
export interface SiteAuthSettings {
  enabled?: boolean;
  httpApiPrefixPath?: string;
  unauthenticatedClientAction?: string;
  tokenStoreEnabled?: boolean;
  allowedExternalRedirectUrls?: string[];
  defaultProvider?: string;
  tokenRefreshExtensionHours?: number;
  clientId?: string;
  clientSecret?: string;
  issuer?: string;
  allowedAudiences?: string[];
  additionalLoginParams?: string[];
  aadClientId?: string;
  openIdIssuer?: string;
  googleClientId?: string;
  googleClientSecret?: string;
  googleOAuthScopes?: string[];
  facebookAppId?: string;
  facebookAppSecret?: string;
  facebookOAuthScopes?: string[];
  twitterConsumerKey?: string;
  twitterConsumerSecret?: string;
  microsoftAccountClientId?: string;
  microsoftAccountClientSecret?: string;
  microsoftAccountOAuthScopes?: string[];
}

/**
 * @class
 * Initializes a new instance of the HostingEnvironment class.
 * @constructor
 * Description of an hostingEnvironment (App Service Environment)
 *
 * @member {string} [hostingEnvironmentName] Name of the hostingEnvironment
 * (App Service Environment)
 * 
 * @member {string} [hostingEnvironmentLocation] Location of the
 * hostingEnvironment (App Service Environment), e.g. "West US"
 * 
 * @member {string} [provisioningState] Provisioning state of the
 * hostingEnvironment (App Service Environment). Possible values include:
 * 'Succeeded', 'Failed', 'Canceled', 'InProgress', 'Deleting'
 * 
 * @member {string} [status] Current status of the hostingEnvironment (App
 * Service Environment). Possible values include: 'Preparing', 'Ready',
 * 'Scaling', 'Deleting'
 * 
 * @member {string} [vnetName] Name of the hostingEnvironment's (App Service
 * Environment) virtual network
 * 
 * @member {string} [vnetResourceGroupName] Resource group of the
 * hostingEnvironment's (App Service Environment) virtual network
 * 
 * @member {string} [vnetSubnetName] Subnet of the hostingEnvironment's (App
 * Service Environment) virtual network
 * 
 * @member {object} [virtualNetwork] Description of the hostingEnvironment's
 * (App Service Environment) virtual network
 * 
 * @member {string} [virtualNetwork.id] Resource id of the virtual network
 * 
 * @member {string} [virtualNetwork.name] Name of the virtual network
 * (read-only)
 * 
 * @member {string} [virtualNetwork.type] Resource type of the virtual network
 * (read-only)
 * 
 * @member {string} [virtualNetwork.subnet] Subnet within the virtual network
 * 
 * @member {string} [internalLoadBalancingMode] Specifies which endpoints to
 * serve internally in the hostingEnvironment's (App Service Environment)
 * VNET. Possible values include: 'None', 'Web', 'Publishing'
 * 
 * @member {string} [multiSize] Front-end VM size, e.g. "Medium", "Large"
 * 
 * @member {number} [multiRoleCount] Number of front-end instances
 * 
 * @member {array} [workerPools] Description of worker pools with worker size
 * ids, VM sizes, and number of workers in each pool
 * 
 * @member {number} [ipsslAddressCount] Number of IP SSL addresses reserved
 * for this hostingEnvironment (App Service Environment)
 * 
 * @member {string} [databaseEdition] Edition of the metadata database for the
 * hostingEnvironment (App Service Environment) e.g. "Standard"
 * 
 * @member {string} [databaseServiceObjective] Service objective of the
 * metadata database for the hostingEnvironment (App Service Environment)
 * e.g. "S0"
 * 
 * @member {number} [upgradeDomains] Number of upgrade domains of this
 * hostingEnvironment (App Service Environment)
 * 
 * @member {string} [subscriptionId] Subscription of the hostingEnvironment
 * (App Service Environment)
 * 
 * @member {string} [dnsSuffix] DNS suffix of the hostingEnvironment (App
 * Service Environment)
 * 
 * @member {string} [lastAction] Last deployment action on this
 * hostingEnvironment (App Service Environment)
 * 
 * @member {string} [lastActionResult] Result of the last deployment action on
 * this hostingEnvironment (App Service Environment)
 * 
 * @member {string} [allowedMultiSizes] List of comma separated strings
 * describing which VM sizes are allowed for front-ends
 * 
 * @member {string} [allowedWorkerSizes] List of comma separated strings
 * describing which VM sizes are allowed for workers
 * 
 * @member {number} [maximumNumberOfMachines] Maximum number of VMs in this
 * hostingEnvironment (App Service Environment)
 * 
 * @member {array} [vipMappings] Description of IP SSL mapping for this
 * hostingEnvironment (App Service Environment)
 * 
 * @member {array} [environmentCapacities] Current total, used, and available
 * worker capacities
 * 
 * @member {array} [networkAccessControlList] Access control list for
 * controlling traffic to the hostingEnvironment (App Service Environment)
 * 
 * @member {boolean} [environmentIsHealthy] True/false indicating whether the
 * hostingEnvironment (App Service Environment) is healthy
 * 
 * @member {string} [environmentStatus] Detailed message about with results of
 * the last check of the hostingEnvironment (App Service Environment)
 * 
 * @member {string} [resourceGroup] Resource group of the hostingEnvironment
 * (App Service Environment)
 * 
 * @member {string} [apiManagementAccountId] Api Management Account associated
 * with this Hosting Environment
 * 
 * @member {boolean} [suspended] True/false indicating whether the
 * hostingEnvironment is suspended. The environment can be suspended e.g.
 * when the management endpoint is no longer available
 * (most likely because NSG blocked the incoming traffic)
 * 
 * @member {array} [clusterSettings] Custom settings for changing the behavior
 * of the hosting environment
 * 
 */
export interface HostingEnvironment extends Resource {
  hostingEnvironmentName?: string;
  hostingEnvironmentLocation?: string;
  provisioningState?: string;
  status?: string;
  vnetName?: string;
  vnetResourceGroupName?: string;
  vnetSubnetName?: string;
  virtualNetwork?: VirtualNetworkProfile;
  internalLoadBalancingMode?: string;
  multiSize?: string;
  multiRoleCount?: number;
  workerPools?: WorkerPool[];
  ipsslAddressCount?: number;
  databaseEdition?: string;
  databaseServiceObjective?: string;
  upgradeDomains?: number;
  subscriptionId?: string;
  dnsSuffix?: string;
  lastAction?: string;
  lastActionResult?: string;
  allowedMultiSizes?: string;
  allowedWorkerSizes?: string;
  maximumNumberOfMachines?: number;
  vipMappings?: VirtualIPMapping[];
  environmentCapacities?: StampCapacity[];
  networkAccessControlList?: NetworkAccessControlEntry[];
  environmentIsHealthy?: boolean;
  environmentStatus?: string;
  resourceGroup?: string;
  apiManagementAccountId?: string;
  suspended?: boolean;
  clusterSettings?: NameValuePair[];
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkProfile class.
 * @constructor
 * Specification for using a virtual network
 *
 * @member {string} [id] Resource id of the virtual network
 * 
 * @member {string} [name] Name of the virtual network (read-only)
 * 
 * @member {string} [type] Resource type of the virtual network (read-only)
 * 
 * @member {string} [subnet] Subnet within the virtual network
 * 
 */
export interface VirtualNetworkProfile {
  id?: string;
  name?: string;
  type?: string;
  subnet?: string;
}

/**
 * @class
 * Initializes a new instance of the WorkerPool class.
 * @constructor
 * Worker pool of a hostingEnvironment (App Service Environment)
 *
 * @member {number} [workerSizeId] Worker size id for referencing this worker
 * pool
 * 
 * @member {string} [computeMode] Shared or dedicated web app hosting.
 * Possible values include: 'Shared', 'Dedicated', 'Dynamic'
 * 
 * @member {string} [workerSize] VM size of the worker pool instances
 * 
 * @member {number} [workerCount] Number of instances in the worker pool
 * 
 * @member {array} [instanceNames] Names of all instances in the worker pool
 * (read only)
 * 
 * @member {object} [sku]
 * 
 * @member {string} [sku.name] Name of the resource sku
 * 
 * @member {string} [sku.tier] Service Tier of the resource sku
 * 
 * @member {string} [sku.size] Size specifier of the resource sku
 * 
 * @member {string} [sku.family] Family code of the resource sku
 * 
 * @member {number} [sku.capacity] Current number of instances assigned to the
 * resource
 * 
 */
export interface WorkerPool extends Resource {
  workerSizeId?: number;
  computeMode?: string;
  workerSize?: string;
  workerCount?: number;
  instanceNames?: string[];
  sku?: SkuDescription;
}

/**
 * @class
 * Initializes a new instance of the VirtualIPMapping class.
 * @constructor
 * Class that represents a VIP mapping
 *
 * @member {string} [virtualIP] Virtual IP address
 * 
 * @member {number} [internalHttpPort] Internal HTTP port
 * 
 * @member {number} [internalHttpsPort] Internal HTTPS port
 * 
 * @member {boolean} [inUse] Is VIP mapping in use
 * 
 */
export interface VirtualIPMapping {
  virtualIP?: string;
  internalHttpPort?: number;
  internalHttpsPort?: number;
  inUse?: boolean;
}

/**
 * @class
 * Initializes a new instance of the StampCapacity class.
 * @constructor
 * Class containing stamp capacity information
 *
 * @member {string} [name] Name of the stamp
 * 
 * @member {number} [availableCapacity] Available capacity (# of machines,
 * bytes of storage etc...)
 * 
 * @member {number} [totalCapacity] Total capacity (# of machines, bytes of
 * storage etc...)
 * 
 * @member {string} [unit] Name of the unit
 * 
 * @member {string} [computeMode] Shared/Dedicated workers. Possible values
 * include: 'Shared', 'Dedicated', 'Dynamic'
 * 
 * @member {string} [workerSize] Size of the machines. Possible values
 * include: 'Default', 'Small', 'Medium', 'Large'
 * 
 * @member {number} [workerSizeId] Size Id of machines:
 * 0 - Small
 * 1 - Medium
 * 2 - Large
 * 
 * @member {boolean} [excludeFromCapacityAllocation] If true it includes basic
 * sites
 * Basic sites are not used for capacity allocation.
 * 
 * @member {boolean} [isApplicableForAllComputeModes] Is capacity applicable
 * for all sites?
 * 
 * @member {string} [siteMode] Shared or Dedicated
 * 
 */
export interface StampCapacity {
  name?: string;
  availableCapacity?: number;
  totalCapacity?: number;
  unit?: string;
  computeMode?: string;
  workerSize?: string;
  workerSizeId?: number;
  excludeFromCapacityAllocation?: boolean;
  isApplicableForAllComputeModes?: boolean;
  siteMode?: string;
}

/**
 * @class
 * Initializes a new instance of the NetworkAccessControlEntry class.
 * @constructor
 * @member {string} [action] Possible values include: 'Permit', 'Deny'
 * 
 * @member {string} [description]
 * 
 * @member {number} [order]
 * 
 * @member {string} [remoteSubnet]
 * 
 */
export interface NetworkAccessControlEntry {
  action?: string;
  description?: string;
  order?: number;
  remoteSubnet?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedHostingEnvironment class.
 * @constructor
 * Description of a managed hosting environment
 *
 * @member {string} [managedHostingEnvironmentName] Name of the managed
 * hosting environment
 * 
 * @member {string} [managedHostingEnvironmentLocation] Location of the
 * managed hosting environment e.g. "West US"
 * 
 * @member {string} [status] Current status of the managed hosting
 * environment. Possible values include: 'Preparing', 'Ready', 'Deleting'
 * 
 * @member {object} [virtualNetwork] Description of the managed hosting
 * environment's virtual network
 * 
 * @member {string} [virtualNetwork.id] Resource id of the virtual network
 * 
 * @member {string} [virtualNetwork.name] Name of the virtual network
 * (read-only)
 * 
 * @member {string} [virtualNetwork.type] Resource type of the virtual network
 * (read-only)
 * 
 * @member {string} [virtualNetwork.subnet] Subnet within the virtual network
 * 
 * @member {number} [ipsslAddressCount] Number of ip ssl addresses reserved
 * for the managed hosting environment
 * 
 * @member {string} [dnsSuffix] DNS suffix of the managed hosting environment
 * 
 * @member {string} [subscriptionId] Subscription of the managed hosting
 * environment (read only)
 * 
 * @member {string} [resourceGroup] Resource group of the managed hosting
 * environment (read only)
 * 
 * @member {boolean} [environmentIsHealthy] True/false indicating whether the
 * managed hosting environment is healthy
 * 
 * @member {string} [environmentStatus] Detailed message about with results of
 * the last check of the managed hosting environment
 * 
 * @member {boolean} [suspended] True/false indicating whether the managed
 * hosting environment is suspended. The environment can be suspended e.g.
 * when the management endpoint is no longer available
 * (most likely because NSG blocked the incoming traffic)
 * 
 * @member {string} [apiManagementAccount] Resource id of the api management
 * account associated with this managed hosting environment (read only)
 * 
 */
export interface ManagedHostingEnvironment extends Resource {
  managedHostingEnvironmentName?: string;
  managedHostingEnvironmentLocation?: string;
  status?: string;
  virtualNetwork?: VirtualNetworkProfile;
  ipsslAddressCount?: number;
  dnsSuffix?: string;
  subscriptionId?: string;
  resourceGroup?: string;
  environmentIsHealthy?: boolean;
  environmentStatus?: string;
  suspended?: boolean;
  apiManagementAccount?: string;
}

/**
 * @class
 * Initializes a new instance of the ResourceNameAvailabilityRequest class.
 * @constructor
 * Resource name availability request content
 *
 * @member {string} [name] Resource name to verify
 * 
 * @member {string} [type] Resource type used for verification
 * 
 * @member {boolean} [isFqdn] Is fully qualified domain name
 * 
 */
export interface ResourceNameAvailabilityRequest {
  name?: string;
  type?: string;
  isFqdn?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ResourceNameAvailability class.
 * @constructor
 * Describes if a resource name is available
 *
 * @member {boolean} [nameAvailable] True indicates name is valid and
 * available.  False indicates the name is invalid, unavailable, or both.
 * 
 * @member {string} [reason] Required if nameAvailable is false. 'Invalid'
 * indicates the name provided does not match Azure WebApp service’s naming
 * requirements. 'AlreadyExists' indicates that the name is already in use
 * and is therefore unavailable.
 * 
 * @member {string} [message]
 * 
 */
export interface ResourceNameAvailability {
  nameAvailable?: boolean;
  reason?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the DomainControlCenterSsoRequest class.
 * @constructor
 * Single sign on request information for domain management
 *
 * @member {string} [url] Url where the single sign on request is to be made
 * 
 * @member {string} [postParameterKey] Post parameter key
 * 
 * @member {string} [postParameterValue] Post parameter value. Client should
 * use 'application/x-www-form-urlencoded' encoding for this value.
 * 
 */
export interface DomainControlCenterSsoRequest {
  url?: string;
  postParameterKey?: string;
  postParameterValue?: string;
}

/**
 * @class
 * Initializes a new instance of the DomainRegistrationInput class.
 * @constructor
 * Domain registration input for validation Api
 *
 * @member {string} [domainRegistrationInputName] Name of the domain
 * 
 * @member {object} [contactAdmin] Admin contact information
 * 
 * @member {object} [contactAdmin.addressMailing] Mailing address
 * 
 * @member {string} [contactAdmin.addressMailing.address1] Address 1
 * 
 * @member {string} [contactAdmin.addressMailing.address2] Address 2
 * 
 * @member {string} [contactAdmin.addressMailing.city] City
 * 
 * @member {string} [contactAdmin.addressMailing.country] Country
 * 
 * @member {string} [contactAdmin.addressMailing.postalCode] Postal code
 * 
 * @member {string} [contactAdmin.addressMailing.state] State
 * 
 * @member {string} [contactAdmin.email] Email address
 * 
 * @member {string} [contactAdmin.fax] Fax number
 * 
 * @member {string} [contactAdmin.jobTitle] Job title
 * 
 * @member {string} [contactAdmin.nameFirst] First name
 * 
 * @member {string} [contactAdmin.nameLast] Last name
 * 
 * @member {string} [contactAdmin.nameMiddle] Middle name
 * 
 * @member {string} [contactAdmin.organization] Organization
 * 
 * @member {string} [contactAdmin.phone] Phone number
 * 
 * @member {object} [contactBilling] Billing contact information
 * 
 * @member {object} [contactBilling.addressMailing] Mailing address
 * 
 * @member {string} [contactBilling.addressMailing.address1] Address 1
 * 
 * @member {string} [contactBilling.addressMailing.address2] Address 2
 * 
 * @member {string} [contactBilling.addressMailing.city] City
 * 
 * @member {string} [contactBilling.addressMailing.country] Country
 * 
 * @member {string} [contactBilling.addressMailing.postalCode] Postal code
 * 
 * @member {string} [contactBilling.addressMailing.state] State
 * 
 * @member {string} [contactBilling.email] Email address
 * 
 * @member {string} [contactBilling.fax] Fax number
 * 
 * @member {string} [contactBilling.jobTitle] Job title
 * 
 * @member {string} [contactBilling.nameFirst] First name
 * 
 * @member {string} [contactBilling.nameLast] Last name
 * 
 * @member {string} [contactBilling.nameMiddle] Middle name
 * 
 * @member {string} [contactBilling.organization] Organization
 * 
 * @member {string} [contactBilling.phone] Phone number
 * 
 * @member {object} [contactRegistrant] Registrant contact information
 * 
 * @member {object} [contactRegistrant.addressMailing] Mailing address
 * 
 * @member {string} [contactRegistrant.addressMailing.address1] Address 1
 * 
 * @member {string} [contactRegistrant.addressMailing.address2] Address 2
 * 
 * @member {string} [contactRegistrant.addressMailing.city] City
 * 
 * @member {string} [contactRegistrant.addressMailing.country] Country
 * 
 * @member {string} [contactRegistrant.addressMailing.postalCode] Postal code
 * 
 * @member {string} [contactRegistrant.addressMailing.state] State
 * 
 * @member {string} [contactRegistrant.email] Email address
 * 
 * @member {string} [contactRegistrant.fax] Fax number
 * 
 * @member {string} [contactRegistrant.jobTitle] Job title
 * 
 * @member {string} [contactRegistrant.nameFirst] First name
 * 
 * @member {string} [contactRegistrant.nameLast] Last name
 * 
 * @member {string} [contactRegistrant.nameMiddle] Middle name
 * 
 * @member {string} [contactRegistrant.organization] Organization
 * 
 * @member {string} [contactRegistrant.phone] Phone number
 * 
 * @member {object} [contactTech] Technical contact information
 * 
 * @member {object} [contactTech.addressMailing] Mailing address
 * 
 * @member {string} [contactTech.addressMailing.address1] Address 1
 * 
 * @member {string} [contactTech.addressMailing.address2] Address 2
 * 
 * @member {string} [contactTech.addressMailing.city] City
 * 
 * @member {string} [contactTech.addressMailing.country] Country
 * 
 * @member {string} [contactTech.addressMailing.postalCode] Postal code
 * 
 * @member {string} [contactTech.addressMailing.state] State
 * 
 * @member {string} [contactTech.email] Email address
 * 
 * @member {string} [contactTech.fax] Fax number
 * 
 * @member {string} [contactTech.jobTitle] Job title
 * 
 * @member {string} [contactTech.nameFirst] First name
 * 
 * @member {string} [contactTech.nameLast] Last name
 * 
 * @member {string} [contactTech.nameMiddle] Middle name
 * 
 * @member {string} [contactTech.organization] Organization
 * 
 * @member {string} [contactTech.phone] Phone number
 * 
 * @member {string} [registrationStatus] Domain registration status. Possible
 * values include: 'Active', 'Awaiting', 'Cancelled', 'Confiscated',
 * 'Disabled', 'Excluded', 'Expired', 'Failed', 'Held', 'Locked', 'Parked',
 * 'Pending', 'Reserved', 'Reverted', 'Suspended', 'Transferred', 'Unknown',
 * 'Unlocked', 'Unparked', 'Updated', 'JsonConverterFailed'
 * 
 * @member {string} [provisioningState] Domain provisioning state. Possible
 * values include: 'Succeeded', 'Failed', 'Canceled', 'InProgress', 'Deleting'
 * 
 * @member {array} [nameServers] Name servers
 * 
 * @member {boolean} [privacy] If true then domain privacy is enabled for this
 * domain
 * 
 * @member {date} [createdTime] Domain creation timestamp
 * 
 * @member {date} [expirationTime] Domain expiration timestamp
 * 
 * @member {date} [lastRenewedTime] Timestamp when the domain was renewed last
 * time
 * 
 * @member {boolean} [autoRenew] If true then domain will renewed automatically
 * 
 * @member {boolean} [readyForDnsRecordManagement] If true then Azure can
 * assign this domain to Web Apps. This value will be true if domain
 * registration status is active and it is hosted on name servers Azure has
 * programmatic access to
 * 
 * @member {array} [managedHostNames] All hostnames derived from the domain
 * and assigned to Azure resources
 * 
 * @member {object} [consent] Legal agreement consent
 * 
 * @member {array} [consent.agreementKeys] List of applicable legal agreement
 * keys. This list can be retrieved using ListLegalAgreements Api under
 * TopLevelDomain resource
 * 
 * @member {string} [consent.agreedBy] Client IP address
 * 
 * @member {date} [consent.agreedAt] Timestamp when the agreements were
 * accepted
 * 
 * @member {array} [domainNotRenewableReasons] Reasons why domain is not
 * renewable
 * 
 */
export interface DomainRegistrationInput extends Resource {
  domainRegistrationInputName?: string;
  contactAdmin?: Contact;
  contactBilling?: Contact;
  contactRegistrant?: Contact;
  contactTech?: Contact;
  registrationStatus?: string;
  provisioningState?: string;
  nameServers?: string[];
  privacy?: boolean;
  createdTime?: Date;
  expirationTime?: Date;
  lastRenewedTime?: Date;
  autoRenew?: boolean;
  readyForDnsRecordManagement?: boolean;
  managedHostNames?: HostName[];
  consent?: DomainPurchaseConsent;
  domainNotRenewableReasons?: string[];
}

/**
 * @class
 * Initializes a new instance of the NameIdentifier class.
 * @constructor
 * Identifies an object
 *
 * @member {string} [name] Name of the object
 * 
 */
export interface NameIdentifier {
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the DomainAvailablilityCheckResult class.
 * @constructor
 * Domain availablility check result
 *
 * @member {string} [name] Name of the domain
 * 
 * @member {boolean} [available] If true then domain can be purchased using
 * CreateDomain Api
 * 
 * @member {string} [domainType] Domain type. Possible values include:
 * 'Regular', 'SoftDeleted'
 * 
 */
export interface DomainAvailablilityCheckResult {
  name?: string;
  available?: boolean;
  domainType?: string;
}

/**
 * @class
 * Initializes a new instance of the DomainRecommendationSearchParameters class.
 * @constructor
 * Domain recommendation search parameters
 *
 * @member {string} [keywords] Keywords to be used for generating domain
 * recommendations
 * 
 * @member {number} [maxDomainRecommendations] Maximum number of
 * recommendations
 * 
 */
export interface DomainRecommendationSearchParameters {
  keywords?: string;
  maxDomainRecommendations?: number;
}

/**
 * @class
 * Initializes a new instance of the CsmMoveResourceEnvelope class.
 * @constructor
 * Class containing a list of the resources that need to be moved and the
 * resource group they should be moved to
 *
 * @member {string} [targetResourceGroup]
 * 
 * @member {array} [resources]
 * 
 */
export interface CsmMoveResourceEnvelope {
  targetResourceGroup?: string;
  resources?: string[];
}

/**
 * @class
 * Initializes a new instance of the HostingEnvironmentDiagnostics class.
 * @constructor
 * Diagnostics for a hosting environment (App Service Environment)
 *
 * @member {string} [name] Name/identifier of the diagnostics
 * 
 * @member {string} [diagnosicsOutput] Diagnostics output
 * 
 */
export interface HostingEnvironmentDiagnostics {
  name?: string;
  diagnosicsOutput?: string;
}

/**
 * @class
 * Initializes a new instance of the AddressResponse class.
 * @constructor
 * Describes main public ip address and any extra vips
 *
 * @member {string} [serviceIpAddress] Main public vip
 * 
 * @member {string} [internalIpAddress] VNET internal ip address of the
 * hostingEnvironment (App Service Environment) if it is in internal
 * load-balancing mode
 * 
 * @member {array} [outboundIpAddresses] IP addresses appearing on outbound
 * connections
 * 
 * @member {array} [vipMappings] Additional vips
 * 
 */
export interface AddressResponse {
  serviceIpAddress?: string;
  internalIpAddress?: string;
  outboundIpAddresses?: string[];
  vipMappings?: VirtualIPMapping[];
}

/**
 * @class
 * Initializes a new instance of the ResourceMetric class.
 * @constructor
 * Object representing a metric for any resource
 *
 * @member {object} [name] Name of metric
 * 
 * @member {string} [name.value] metric name value
 * 
 * @member {string} [name.localizedValue] Localized metric name value
 * 
 * @member {string} [unit] Metric unit
 * 
 * @member {string} [timeGrain] Metric granularity. E.g PT1H, PT5M, P1D
 * 
 * @member {date} [startTime] Metric start time
 * 
 * @member {date} [endTime] Metric end time
 * 
 * @member {string} [resourceId] Metric resource Id
 * 
 * @member {array} [metricValues] Metric values
 * 
 * @member {array} [properties] Properties
 * 
 */
export interface ResourceMetric {
  name?: ResourceMetricName;
  unit?: string;
  timeGrain?: string;
  startTime?: Date;
  endTime?: Date;
  resourceId?: string;
  metricValues?: ResourceMetricValue[];
  properties?: KeyValuePairStringString[];
}

/**
 * @class
 * Initializes a new instance of the ResourceMetricName class.
 * @constructor
 * Name of a metric for any resource
 *
 * @member {string} [value] metric name value
 * 
 * @member {string} [localizedValue] Localized metric name value
 * 
 */
export interface ResourceMetricName {
  value?: string;
  localizedValue?: string;
}

/**
 * @class
 * Initializes a new instance of the ResourceMetricValue class.
 * @constructor
 * Value of resource metric
 *
 * @member {string} [timeStamp] Value timestamp
 * 
 * @member {number} [average] Value average
 * 
 * @member {number} [minimum] Value minimum
 * 
 * @member {number} [maximum] Value maximum
 * 
 * @member {number} [total] Value total
 * 
 * @member {number} [count] Value count
 * 
 */
export interface ResourceMetricValue {
  timeStamp?: string;
  average?: number;
  minimum?: number;
  maximum?: number;
  total?: number;
  count?: number;
}

/**
 * @class
 * Initializes a new instance of the KeyValuePairStringString class.
 * @constructor
 * @member {string} [key]
 * 
 * @member {string} [value]
 * 
 */
export interface KeyValuePairStringString {
  key?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the MetricDefinition class.
 * @constructor
 * Class repesenting metadata for the metrics
 *
 * @member {string} [metricDefinitionName] Name of the metric
 * 
 * @member {string} [unit] Unit of the metric
 * 
 * @member {string} [primaryAggregationType] Primary aggregation type
 * 
 * @member {array} [metricAvailabilities] List of time grains supported for
 * the metric together with retention period
 * 
 * @member {string} [displayName] Friendly name shown in the UI
 * 
 */
export interface MetricDefinition extends Resource {
  metricDefinitionName?: string;
  unit?: string;
  primaryAggregationType?: string;
  metricAvailabilities?: MetricAvailabilily[];
  displayName?: string;
}

/**
 * @class
 * Initializes a new instance of the MetricAvailabilily class.
 * @constructor
 * Class repesenting metrics availability and retention
 *
 * @member {string} [timeGrain] Time grain
 * 
 * @member {string} [retention] Retention period for the current
 * {Microsoft.Web.Hosting.Administration.MetricAvailabilily.TimeGrain}
 * 
 */
export interface MetricAvailabilily {
  timeGrain?: string;
  retention?: string;
}

/**
 * @class
 * Initializes a new instance of the CsmUsageQuota class.
 * @constructor
 * Usage of the quota resource
 *
 * @member {string} [unit] Units of measurement for the quota resourse
 * 
 * @member {date} [nextResetTime] Next reset time for the resource counter
 * 
 * @member {number} [currentValue] The current value of the resource counter
 * 
 * @member {number} [limit] The resource limit
 * 
 * @member {object} [name] Quota name
 * 
 * @member {string} [name.value] Non localized name
 * 
 * @member {string} [name.localizedValue] Localized name
 * 
 */
export interface CsmUsageQuota {
  unit?: string;
  nextResetTime?: Date;
  currentValue?: number;
  limit?: number;
  name?: LocalizableString;
}

/**
 * @class
 * Initializes a new instance of the LocalizableString class.
 * @constructor
 * LocalizableString object containing the name and a localized value.
 *
 * @member {string} [value] Non localized name
 * 
 * @member {string} [localizedValue] Localized name
 * 
 */
export interface LocalizableString {
  value?: string;
  localizedValue?: string;
}

/**
 * @class
 * Initializes a new instance of the Usage class.
 * @constructor
 * Class that represents usage of the quota resource.
 *
 * @member {string} [displayName] Friendly name shown in the UI
 * 
 * @member {string} [usageName] Name of the quota
 * 
 * @member {string} [resourceName] Name of the quota resource
 * 
 * @member {string} [unit] Units of measurement for the quota resource
 * 
 * @member {number} [currentValue] The current value of the resource counter
 * 
 * @member {number} [limit] The resource limit
 * 
 * @member {date} [nextResetTime] Next reset time for the resource counter
 * 
 * @member {string} [computeMode] ComputeMode used for this usage. Possible
 * values include: 'Shared', 'Dedicated', 'Dynamic'
 * 
 * @member {string} [siteMode] SiteMode used for this usage
 * 
 */
export interface Usage extends Resource {
  displayName?: string;
  usageName?: string;
  resourceName?: string;
  unit?: string;
  currentValue?: number;
  limit?: number;
  nextResetTime?: Date;
  computeMode?: string;
  siteMode?: string;
}

/**
 * @class
 * Initializes a new instance of the SkuInfo class.
 * @constructor
 * Sku discovery information
 *
 * @member {string} [resourceType] Resource type that this sku applies to
 * 
 * @member {object} [sku] Name and tier of the sku
 * 
 * @member {string} [sku.name] Name of the resource sku
 * 
 * @member {string} [sku.tier] Service Tier of the resource sku
 * 
 * @member {string} [sku.size] Size specifier of the resource sku
 * 
 * @member {string} [sku.family] Family code of the resource sku
 * 
 * @member {number} [sku.capacity] Current number of instances assigned to the
 * resource
 * 
 * @member {object} [capacity] Min, max, and default scale values of the sku
 * 
 * @member {number} [capacity.minimum] Minimum number of Workers for this App
 * Service Plan SKU
 * 
 * @member {number} [capacity.maximum] Maximum number of Workers for this App
 * Service Plan SKU
 * 
 * @member {number} [capacity.default] Default number of Workers for this App
 * Service Plan SKU
 * 
 * @member {string} [capacity.scaleType] Available scale configurations for an
 * App Service Plan
 * 
 */
export interface SkuInfo {
  resourceType?: string;
  sku?: SkuDescription;
  capacity?: SkuCapacity;
}

/**
 * @class
 * Initializes a new instance of the SkuCapacity class.
 * @constructor
 * Description of the App Service Plan scale options
 *
 * @member {number} [minimum] Minimum number of Workers for this App Service
 * Plan SKU
 * 
 * @member {number} [maximum] Maximum number of Workers for this App Service
 * Plan SKU
 * 
 * @member {number} [default] Default number of Workers for this App Service
 * Plan SKU
 * 
 * @member {string} [scaleType] Available scale configurations for an App
 * Service Plan
 * 
 */
export interface SkuCapacity {
  minimum?: number;
  maximum?: number;
  default?: number;
  scaleType?: string;
}

/**
 * @class
 * Initializes a new instance of the SourceControl class.
 * @constructor
 * Describes the Source Control OAuth Token
 *
 * @member {string} [sourceControlName] Name or Source Control Type
 * 
 * @member {string} [token] OAuth Access Token
 * 
 * @member {string} [tokenSecret] OAuth Access Token Secret
 * 
 * @member {string} [refreshToken] OAuth Refresh Token
 * 
 * @member {date} [expirationTime] OAuth Token Expiration
 * 
 */
export interface SourceControl extends Resource {
  sourceControlName?: string;
  token?: string;
  tokenSecret?: string;
  refreshToken?: string;
  expirationTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the Recommendation class.
 * @constructor
 * Represents a recommendation result generated by the recommendation engine
 *
 * @member {date} [creationTime] Timestamp when this instance was created.
 * 
 * @member {string} [recommendationId] A GUID value that each recommendation
 * object is associated with.
 * 
 * @member {string} [resourceId] Full ARM resource ID string that this
 * recommendation object is associated with.
 * 
 * @member {string} [resourceScope] Name of a resource type this
 * recommendation applies, e.g. Subscription, ServerFarm, Site.
 * 
 * @member {string} [ruleName] Unique name of the rule
 * 
 * @member {string} [displayName] UI friendly name of the rule (may not be
 * unique)
 * 
 * @member {string} [message] Localized text of recommendation, good for UI.
 * 
 * @member {string} level Level indicating how critical this recommendation
 * can impact. Possible values include: 'Critical', 'Warning', 'Information',
 * 'NonUrgentSuggestion'
 * 
 * @member {string} channels List of channels that this recommendation can
 * apply. Possible values include: 'Notification', 'Api', 'Email', 'All'
 * 
 * @member {array} [tags] The list of category tags that this recommendation
 * belongs to.
 * 
 * @member {string} [actionName] Name of action recommended by this object.
 * 
 * @member {number} [enabled] On/off flag indicating the rule is currently
 * enabled or disabled.
 * 
 * @member {date} [startTime] The beginning time of a range that the
 * recommendation refers to.
 * 
 * @member {date} [endTime] The end time of a range that the recommendation
 * refers to.
 * 
 * @member {date} [nextNotificationTime] When to notify this recommendation
 * next. Null means that this will never be notified anymore.
 * 
 * @member {date} [notificationExpirationTime] Date and time when this
 * notification expires.
 * 
 * @member {date} [notifiedTime] Last timestamp this instance was actually
 * notified. Null means that this recommendation hasn't been notified yet.
 * 
 * @member {number} [score] A metric value measured by the rule.
 * 
 */
export interface Recommendation {
  creationTime?: Date;
  recommendationId?: string;
  resourceId?: string;
  resourceScope?: string;
  ruleName?: string;
  displayName?: string;
  message?: string;
  level: string;
  channels: string;
  tags?: string[];
  actionName?: string;
  enabled?: number;
  startTime?: Date;
  endTime?: Date;
  nextNotificationTime?: Date;
  notificationExpirationTime?: Date;
  notifiedTime?: Date;
  score?: number;
}

/**
 * @class
 * Initializes a new instance of the RecommendationRule class.
 * @constructor
 * Represents a recommendation rule that the recommendation engine can perform
 *
 * @member {string} [name] Unique name of the rule
 * 
 * @member {string} [displayName] UI friendly name of the rule
 * 
 * @member {string} [message] Localized name of the rule (Good for UI)
 * 
 * @member {string} [recommendationId] Recommendation ID of an associated
 * recommendation object tied to the rule, if exists.
 * If such an object doesn't exist, it is set to null.
 * 
 * @member {string} [description] Localized detailed description of the rule
 * 
 * @member {string} [actionName] Name of action that is recommended by this
 * rule in string
 * 
 * @member {number} [enabled] On/off flag indicating the rule is currently
 * enabled or disabled.
 * 
 * @member {string} level Level of impact indicating how critical this rule
 * is. Possible values include: 'Critical', 'Warning', 'Information',
 * 'NonUrgentSuggestion'
 * 
 * @member {string} channels List of available channels that this rule
 * applies. Possible values include: 'Notification', 'Api', 'Email', 'All'
 * 
 * @member {array} [tags] An array of category tags that the rule contains.
 * 
 */
export interface RecommendationRule {
  name?: string;
  displayName?: string;
  message?: string;
  recommendationId?: string;
  description?: string;
  actionName?: string;
  enabled?: number;
  level: string;
  channels: string;
  tags?: string[];
}

/**
 * @class
 * Initializes a new instance of the VnetInfo class.
 * @constructor
 * VNETInfo contract. This contract is public and is a stripped down version
 * of VNETInfoInternal
 *
 * @member {string} [vnetResourceId] The vnet resource id
 * 
 * @member {string} [certThumbprint] The client certificate thumbprint
 * 
 * @member {string} [certBlob] A certificate file (.cer) blob containing the
 * public key of the private key used to authenticate a
 * Point-To-Site VPN connection.
 * 
 * @member {array} [routes] The routes that this virtual network connection
 * uses.
 * 
 * @member {boolean} [resyncRequired] Flag to determine if a resync is required
 * 
 * @member {string} [dnsServers] Dns servers to be used by this VNET. This
 * should be a comma-separated list of IP addresses.
 * 
 */
export interface VnetInfo extends Resource {
  vnetResourceId?: string;
  certThumbprint?: string;
  certBlob?: string;
  routes?: VnetRoute[];
  resyncRequired?: boolean;
  dnsServers?: string;
}

/**
 * @class
 * Initializes a new instance of the VnetRoute class.
 * @constructor
 * VnetRoute contract used to pass routing information for a vnet.
 *
 * @member {string} [vnetRouteName] The name of this route. This is only
 * returned by the server and does not need to be set by the client.
 * 
 * @member {string} [startAddress] The starting address for this route. This
 * may also include a CIDR notation, in which case the end address must not
 * be specified.
 * 
 * @member {string} [endAddress] The ending address for this route. If the
 * start address is specified in CIDR notation, this must be omitted.
 * 
 * @member {string} [routeType] The type of route this is:
 * DEFAULT - By default, every web app has routes to the local
 * address ranges specified by RFC1918
 * INHERITED - Routes inherited from the real Virtual Network
 * routes
 * STATIC - Static route set on the web app only
 * 
 * These values will be used for syncing a Web App's routes with
 * those from a Virtual Network. This operation will clear all DEFAULT and
 * INHERITED routes and replace them
 * with new INHERITED routes.
 * 
 */
export interface VnetRoute extends Resource {
  vnetRouteName?: string;
  startAddress?: string;
  endAddress?: string;
  routeType?: string;
}

/**
 * @class
 * Initializes a new instance of the VnetGateway class.
 * @constructor
 * The VnetGateway contract. This is used to give the vnet gateway access to
 * the VPN package.
 *
 * @member {string} [vnetName] The VNET name.
 * 
 * @member {string} [vpnPackageUri] The URI where the Vpn package can be
 * downloaded
 * 
 */
export interface VnetGateway extends Resource {
  vnetName?: string;
  vpnPackageUri?: string;
}

/**
 * @class
 * Initializes a new instance of the NetworkFeatures class.
 * @constructor
 * This is an object used to store a full view of network features (presently
 * VNET integration and Hybrid Connections)
 * for a web app.
 *
 * @member {string} [virtualNetworkName] The Vnet Name
 * 
 * @member {object} [virtualNetworkConnection] The Vnet Summary view
 * 
 * @member {string} [virtualNetworkConnection.vnetResourceId] The vnet
 * resource id
 * 
 * @member {string} [virtualNetworkConnection.certThumbprint] The client
 * certificate thumbprint
 * 
 * @member {string} [virtualNetworkConnection.certBlob] A certificate file
 * (.cer) blob containing the public key of the private key used to
 * authenticate a
 * Point-To-Site VPN connection.
 * 
 * @member {array} [virtualNetworkConnection.routes] The routes that this
 * virtual network connection uses.
 * 
 * @member {boolean} [virtualNetworkConnection.resyncRequired] Flag to
 * determine if a resync is required
 * 
 * @member {string} [virtualNetworkConnection.dnsServers] Dns servers to be
 * used by this VNET. This should be a comma-separated list of IP addresses.
 * 
 * @member {array} [hybridConnections] The Hybrid Connections Summary view
 * 
 */
export interface NetworkFeatures extends Resource {
  virtualNetworkName?: string;
  virtualNetworkConnection?: VnetInfo;
  hybridConnections?: RelayServiceConnectionEntity[];
}

/**
 * @class
 * Initializes a new instance of the RelayServiceConnectionEntity class.
 * @constructor
 * Class that represents a Biztalk Hybrid Connection
 *
 * @member {string} [entityName]
 * 
 * @member {string} [entityConnectionString]
 * 
 * @member {string} [resourceType]
 * 
 * @member {string} [resourceConnectionString]
 * 
 * @member {string} [hostname]
 * 
 * @member {number} [port]
 * 
 * @member {string} [biztalkUri]
 * 
 */
export interface RelayServiceConnectionEntity extends Resource {
  entityName?: string;
  entityConnectionString?: string;
  resourceType?: string;
  resourceConnectionString?: string;
  hostname?: string;
  port?: number;
  biztalkUri?: string;
}

/**
 * @class
 * Initializes a new instance of the CsmSlotEntity class.
 * @constructor
 * Class containing deployment slot parameters
 *
 * @member {string} [targetSlot] Set the destination deployment slot during
 * swap operation
 * 
 * @member {boolean} [preserveVnet] Get or set the flag indicating it should
 * preserve VNet to the slot during swap
 * 
 */
export interface CsmSlotEntity {
  targetSlot?: string;
  preserveVnet?: boolean;
}

/**
 * @class
 * Initializes a new instance of the SlotDifference class.
 * @constructor
 * An object describing the difference in setting values between two web app
 * slots
 *
 * @member {string} [slotDifferenceType] Indicates the type of the difference:
 * Information, Warning or Error.
 * 
 * @member {string} [settingType] The type of the settings: General,
 * AppSetting or ConnectionString
 * 
 * @member {string} [diffRule] Rule that describes how to process the
 * difference in settings during web app slot swap.
 * 
 * @member {string} [settingName] Name of the setting
 * 
 * @member {string} [valueInCurrentSlot] Value of the setting in the current
 * web app slot
 * 
 * @member {string} [valueInTargetSlot] Value of the setting in the target web
 * app slot
 * 
 * @member {string} [description] Description of the difference
 * 
 */
export interface SlotDifference extends Resource {
  slotDifferenceType?: string;
  settingType?: string;
  diffRule?: string;
  settingName?: string;
  valueInCurrentSlot?: string;
  valueInTargetSlot?: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the SlotConfigNamesResource class.
 * @constructor
 * Slot Config names azure resource
 *
 * @member {array} [connectionStringNames] List of connection string names
 * 
 * @member {array} [appSettingNames] List of application settings names
 * 
 */
export interface SlotConfigNamesResource extends Resource {
  connectionStringNames?: string[];
  appSettingNames?: string[];
}

/**
 * @class
 * Initializes a new instance of the SlotConfigNames class.
 * @constructor
 * Class containing names for connection strings and application settings to
 * be marked as sticky to the slot
 * and not moved during swap operation
 * This is valid for all deployment slots under the site
 *
 * @member {array} [connectionStringNames] List of connection string names
 * 
 * @member {array} [appSettingNames] List of application settings names
 * 
 */
export interface SlotConfigNames {
  connectionStringNames?: string[];
  appSettingNames?: string[];
}

/**
 * @class
 * Initializes a new instance of the SiteCloneability class.
 * @constructor
 * Represents whether or not a web app is cloneable
 *
 * @member {string} result Name of web app. Possible values include:
 * 'Cloneable', 'PartiallyCloneable', 'NotCloneable'
 * 
 * @member {array} [blockingFeatures] List of features enabled on web app that
 * prevent cloning
 * 
 * @member {array} [unsupportedFeatures] List of features enabled on web app
 * that are non-blocking but cannot be cloned. The web app can still be
 * cloned
 * but the features in this list will not be set up on cloned web
 * app.
 * 
 * @member {array} [blockingCharacteristics] List of blocking application
 * characteristics
 * 
 */
export interface SiteCloneability {
  result: string;
  blockingFeatures?: SiteCloneabilityCriterion[];
  unsupportedFeatures?: SiteCloneabilityCriterion[];
  blockingCharacteristics?: SiteCloneabilityCriterion[];
}

/**
 * @class
 * Initializes a new instance of the SiteCloneabilityCriterion class.
 * @constructor
 * Represents a site cloneability criterion
 *
 * @member {string} [name] Name of criterion
 * 
 * @member {string} [description] Description of criterion
 * 
 */
export interface SiteCloneabilityCriterion {
  name?: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the CsmSiteRecoveryEntity class.
 * @constructor
 * Class containting details about site recovery operation.
 *
 * @member {date} [snapshotTime] Point in time in which the site recover
 * should be attempted.
 * 
 * @member {boolean} [recoverConfig] If true, then the website's configuration
 * will be reverted to its state at SnapshotTime
 * 
 * @member {string} [siteName] [Optional] Destination web app name into which
 * web app should be recovered. This is case when new web app should be
 * created instead.
 * 
 * @member {string} [slotName] [Optional] Destination web app slot name into
 * which web app should be recovered
 * 
 */
export interface CsmSiteRecoveryEntity {
  snapshotTime?: Date;
  recoverConfig?: boolean;
  siteName?: string;
  slotName?: string;
}

/**
 * @class
 * Initializes a new instance of the DeletedSite class.
 * @constructor
 * Reports deleted site including the timestamp of operation
 *
 * @member {date} [deletedTimestamp] Time when the site was deleted
 * 
 * @member {string} [deletedSiteName] Name of web app
 * 
 * @member {string} [state] State of the web app
 * 
 * @member {array} [hostNames] Hostnames associated with web app
 * 
 * @member {string} [repositorySiteName] Name of repository site
 * 
 * @member {string} [usageState] State indicating whether web app has exceeded
 * its quota usage. Possible values include: 'Normal', 'Exceeded'
 * 
 * @member {boolean} [enabled] True if the site is enabled; otherwise, false.
 * Setting this  value to false disables the site (takes the site off line).
 * 
 * @member {array} [enabledHostNames] Hostnames for the web app that are
 * enabled. Hostnames need to be assigned and enabled. If some hostnames are
 * assigned but not enabled
 * the app is not served on those hostnames
 * 
 * @member {string} [availabilityState] Management information availability
 * state for the web app. Possible values are Normal or Limited.
 * Normal means that the site is running correctly and that
 * management information for the site is available.
 * Limited means that only partial management information for the
 * site is available and that detailed site information is unavailable.
 * Possible values include: 'Normal', 'Limited', 'DisasterRecoveryMode'
 * 
 * @member {array} [hostNameSslStates] Hostname SSL states are  used to manage
 * the SSL bindings for site's hostnames.
 * 
 * @member {string} [serverFarmId]
 * 
 * @member {date} [lastModifiedTimeUtc] Last time web app was modified in UTC
 * 
 * @member {object} [siteConfig] Configuration of web app
 * 
 * @member {number} [siteConfig.numberOfWorkers] Number of workers
 * 
 * @member {array} [siteConfig.defaultDocuments] Default documents
 * 
 * @member {string} [siteConfig.netFrameworkVersion] Net Framework Version
 * 
 * @member {string} [siteConfig.phpVersion] Version of PHP
 * 
 * @member {string} [siteConfig.pythonVersion] Version of Python
 * 
 * @member {string} [siteConfig.nodeVersion] Version of Node
 * 
 * @member {boolean} [siteConfig.requestTracingEnabled] Enable request tracing
 * 
 * @member {date} [siteConfig.requestTracingExpirationTime] Request tracing
 * expiration time
 * 
 * @member {boolean} [siteConfig.remoteDebuggingEnabled] Remote Debugging
 * Enabled
 * 
 * @member {string} [siteConfig.remoteDebuggingVersion] Remote Debugging
 * Version
 * 
 * @member {boolean} [siteConfig.httpLoggingEnabled] HTTP logging Enabled
 * 
 * @member {number} [siteConfig.logsDirectorySizeLimit] HTTP Logs Directory
 * size limit
 * 
 * @member {boolean} [siteConfig.detailedErrorLoggingEnabled] Detailed error
 * logging enabled
 * 
 * @member {string} [siteConfig.publishingUsername] Publishing user name
 * 
 * @member {string} [siteConfig.publishingPassword] Publishing password
 * 
 * @member {array} [siteConfig.appSettings] Application Settings
 * 
 * @member {array} [siteConfig.metadata] Site Metadata
 * 
 * @member {array} [siteConfig.connectionStrings] Connection strings
 * 
 * @member {array} [siteConfig.handlerMappings] Handler mappings
 * 
 * @member {string} [siteConfig.documentRoot] Document root
 * 
 * @member {string} [siteConfig.scmType] SCM type
 * 
 * @member {boolean} [siteConfig.use32BitWorkerProcess] Use 32 bit worker
 * process
 * 
 * @member {boolean} [siteConfig.webSocketsEnabled] Web socket enabled.
 * 
 * @member {boolean} [siteConfig.alwaysOn] Always On
 * 
 * @member {string} [siteConfig.javaVersion] Java version
 * 
 * @member {string} [siteConfig.javaContainer] Java container
 * 
 * @member {string} [siteConfig.javaContainerVersion] Java container version
 * 
 * @member {string} [siteConfig.appCommandLine] App Command Line to launch
 * 
 * @member {string} [siteConfig.managedPipelineMode] Managed pipeline mode.
 * Possible values include: 'Integrated', 'Classic'
 * 
 * @member {array} [siteConfig.virtualApplications] Virtual applications
 * 
 * @member {string} [siteConfig.loadBalancing] Site load balancing. Possible
 * values include: 'WeightedRoundRobin', 'LeastRequests',
 * 'LeastResponseTime', 'WeightedTotalTraffic', 'RequestHash'
 * 
 * @member {object} [siteConfig.experiments] This is work around for
 * polymophic types
 * 
 * @member {array} [siteConfig.experiments.rampUpRules] List of
 * {Microsoft.Web.Hosting.Administration.RampUpRule} objects.
 * 
 * @member {object} [siteConfig.limits] Site limits
 * 
 * @member {number} [siteConfig.limits.maxPercentageCpu] Maximum allowed CPU
 * usage percentage
 * 
 * @member {number} [siteConfig.limits.maxMemoryInMb] Maximum allowed memory
 * usage in MB
 * 
 * @member {number} [siteConfig.limits.maxDiskSizeInMb] Maximum allowed disk
 * size usage in MB
 * 
 * @member {boolean} [siteConfig.autoHealEnabled] Auto heal enabled
 * 
 * @member {object} [siteConfig.autoHealRules] Auto heal rules
 * 
 * @member {object} [siteConfig.autoHealRules.triggers] Triggers - Conditions
 * that describe when to execute the auto-heal actions
 * 
 * @member {object} [siteConfig.autoHealRules.triggers.requests] Requests -
 * Defines a rule based on total requests
 * 
 * @member {number} [siteConfig.autoHealRules.triggers.requests.count] Count
 * 
 * @member {string} [siteConfig.autoHealRules.triggers.requests.timeInterval]
 * TimeInterval
 * 
 * @member {number} [siteConfig.autoHealRules.triggers.privateBytesInKB]
 * PrivateBytesInKB - Defines a rule based on private bytes
 * 
 * @member {array} [siteConfig.autoHealRules.triggers.statusCodes] StatusCodes
 * - Defines a rule based on status codes
 * 
 * @member {object} [siteConfig.autoHealRules.triggers.slowRequests]
 * SlowRequests - Defines a rule based on request execution time
 * 
 * @member {string} [siteConfig.autoHealRules.triggers.slowRequests.timeTaken]
 * TimeTaken
 * 
 * @member {number} [siteConfig.autoHealRules.triggers.slowRequests.count]
 * Count
 * 
 * @member {string}
 * [siteConfig.autoHealRules.triggers.slowRequests.timeInterval] TimeInterval
 * 
 * @member {object} [siteConfig.autoHealRules.actions] Actions - Actions to be
 * executed when a rule is triggered
 * 
 * @member {string} [siteConfig.autoHealRules.actions.actionType] ActionType -
 * predefined action to be taken. Possible values include: 'Recycle',
 * 'LogEvent', 'CustomAction'
 * 
 * @member {object} [siteConfig.autoHealRules.actions.customAction]
 * CustomAction - custom action to be taken
 * 
 * @member {string} [siteConfig.autoHealRules.actions.customAction.exe]
 * Executable to be run
 * 
 * @member {string} [siteConfig.autoHealRules.actions.customAction.parameters]
 * Parameters for the executable
 * 
 * @member {string} [siteConfig.autoHealRules.actions.minProcessExecutionTime]
 * MinProcessExecutionTime - minimum time the process must execute
 * before taking the action
 * 
 * @member {string} [siteConfig.tracingOptions] Tracing options
 * 
 * @member {string} [siteConfig.vnetName] Vnet name
 * 
 * @member {object} [siteConfig.cors] Cross-Origin Resource Sharing (CORS)
 * settings.
 * 
 * @member {array} [siteConfig.cors.allowedOrigins] Gets or sets the list of
 * origins that should be allowed to make cross-origin
 * calls (for example: http://example.com:12345). Use "*" to allow
 * all.
 * 
 * @member {object} [siteConfig.apiDefinition] Information about the formal
 * API definition for the web app.
 * 
 * @member {string} [siteConfig.apiDefinition.url] The URL of the API
 * definition.
 * 
 * @member {string} [siteConfig.autoSwapSlotName] Auto swap slot name
 * 
 * @member {boolean} [siteConfig.localMySqlEnabled] Local mysql enabled
 * 
 * @member {array} [siteConfig.ipSecurityRestrictions] Ip Security restrictions
 * 
 * @member {array} [trafficManagerHostNames] Read-only list of Azure Traffic
 * manager hostnames associated with web app
 * 
 * @member {boolean} [premiumAppDeployed] If set indicates whether web app is
 * deployed as a premium app
 * 
 * @member {boolean} [scmSiteAlsoStopped] If set indicates whether to stop SCM
 * (KUDU) site when the web app is stopped. Default is false.
 * 
 * @member {string} [targetSwapSlot] Read-only property that specifies which
 * slot this app will swap into
 * 
 * @member {object} [hostingEnvironmentProfile] Specification for the hosting
 * environment (App Service Environment) to use for the web app
 * 
 * @member {string} [hostingEnvironmentProfile.id] Resource id of the
 * hostingEnvironment (App Service Environment)
 * 
 * @member {string} [hostingEnvironmentProfile.name] Name of the
 * hostingEnvironment (App Service Environment) (read only)
 * 
 * @member {string} [hostingEnvironmentProfile.type] Resource type of the
 * hostingEnvironment (App Service Environment) (read only)
 * 
 * @member {string} [microService]
 * 
 * @member {string} [gatewaySiteName] Name of gateway app associated with web
 * app
 * 
 * @member {boolean} [clientAffinityEnabled] Specifies if the client affinity
 * is enabled when load balancing http request for multiple instances of the
 * web app
 * 
 * @member {boolean} [clientCertEnabled] Specifies if the client certificate
 * is enabled for the web app
 * 
 * @member {boolean} [hostNamesDisabled] Specifies if the public hostnames are
 * disabled the web app.
 * If set to true the app is only accessible via API Management
 * process
 * 
 * @member {string} [outboundIpAddresses] List of comma separated IP addresses
 * that this web app uses for outbound connections. Those can be used when
 * configuring firewall rules for databases accessed by this web app.
 * 
 * @member {number} [containerSize] Size of a function container
 * 
 * @member {number} [maxNumberOfWorkers] Maximum number of workers
 * This only applies to function container
 * 
 * @member {object} [cloningInfo] This is only valid for web app creation. If
 * specified, web app is cloned from
 * a source web app
 * 
 * @member {string} [cloningInfo.correlationId] Correlation Id of cloning
 * operation. This id ties multiple cloning operations
 * together to use the same snapshot
 * 
 * @member {boolean} [cloningInfo.overwrite] Overwrite destination web app
 * 
 * @member {boolean} [cloningInfo.cloneCustomHostNames] If true, clone custom
 * hostnames from source web app
 * 
 * @member {boolean} [cloningInfo.cloneSourceControl] Clone source control
 * from source web app
 * 
 * @member {string} [cloningInfo.sourceWebAppId] ARM resource id of the source
 * web app. Web app resource id is of the form
 * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}
 * for production slots and
 * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}
 * for other slots
 * 
 * @member {string} [cloningInfo.hostingEnvironment] Hosting environment
 * 
 * @member {object} [cloningInfo.appSettingsOverrides] Application settings
 * overrides for cloned web app. If specified these settings will override
 * the settings cloned
 * from source web app. If not specified, application settings
 * from source web app are retained.
 * 
 * @member {boolean} [cloningInfo.configureLoadBalancing] If specified
 * configure load balancing for source and clone site
 * 
 * @member {string} [cloningInfo.trafficManagerProfileId] ARM resource id of
 * the traffic manager profile to use if it exists. Traffic manager resource
 * id is of the form
 * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}
 * 
 * @member {string} [cloningInfo.trafficManagerProfileName] Name of traffic
 * manager profile to create. This is only needed if traffic manager profile
 * does not already exist
 * 
 * @member {string} [resourceGroup] Resource group web app belongs to
 * 
 * @member {boolean} [isDefaultContainer] Site is a default container
 * 
 * @member {string} [defaultHostName] Default hostname of the web app
 * 
 */
export interface DeletedSite extends Resource {
  deletedTimestamp?: Date;
  deletedSiteName?: string;
  state?: string;
  hostNames?: string[];
  repositorySiteName?: string;
  usageState?: string;
  enabled?: boolean;
  enabledHostNames?: string[];
  availabilityState?: string;
  hostNameSslStates?: HostNameSslState[];
  serverFarmId?: string;
  lastModifiedTimeUtc?: Date;
  siteConfig?: SiteConfig;
  trafficManagerHostNames?: string[];
  premiumAppDeployed?: boolean;
  scmSiteAlsoStopped?: boolean;
  targetSwapSlot?: string;
  hostingEnvironmentProfile?: HostingEnvironmentProfile;
  microService?: string;
  gatewaySiteName?: string;
  clientAffinityEnabled?: boolean;
  clientCertEnabled?: boolean;
  hostNamesDisabled?: boolean;
  outboundIpAddresses?: string;
  containerSize?: number;
  maxNumberOfWorkers?: number;
  cloningInfo?: CloningInfo;
  resourceGroup?: string;
  isDefaultContainer?: boolean;
  defaultHostName?: string;
}

/**
 * @class
 * Initializes a new instance of the Deployment class.
 * @constructor
 * Represents user crendentials used for publishing activity
 *
 * @member {string} [deploymentId] Id
 * 
 * @member {number} [status] Status
 * 
 * @member {string} [message] Message
 * 
 * @member {string} [author] Author
 * 
 * @member {string} [deployer] Deployer
 * 
 * @member {string} [authorEmail] AuthorEmail
 * 
 * @member {date} [startTime] StartTime
 * 
 * @member {date} [endTime] EndTime
 * 
 * @member {boolean} [active] Active
 * 
 * @member {string} [details] Detail
 * 
 */
export interface Deployment extends Resource {
  deploymentId?: string;
  status?: number;
  message?: string;
  author?: string;
  deployer?: string;
  authorEmail?: string;
  startTime?: Date;
  endTime?: Date;
  active?: boolean;
  details?: string;
}

/**
 * @class
 * Initializes a new instance of the SiteInstance class.
 * @constructor
 * Instance of a web app
 *
 * @member {string} [siteInstanceName] Name of instance
 * 
 */
export interface SiteInstance extends Resource {
  siteInstanceName?: string;
}

/**
 * @class
 * Initializes a new instance of the HostNameBinding class.
 * @constructor
 * A host name binding object
 *
 * @member {string} [hostNameBindingName] Hostname
 * 
 * @member {string} [siteName] Web app name
 * 
 * @member {string} [domainId] Fully qualified ARM domain resource URI
 * 
 * @member {string} [azureResourceName] Azure resource name
 * 
 * @member {string} [azureResourceType] Azure resource type. Possible values
 * include: 'Website', 'TrafficManager'
 * 
 * @member {string} [customHostNameDnsRecordType] Custom DNS record type.
 * Possible values include: 'CName', 'A'
 * 
 * @member {string} [hostNameType] Host name type. Possible values include:
 * 'Verified', 'Managed'
 * 
 */
export interface HostNameBinding extends Resource {
  hostNameBindingName?: string;
  siteName?: string;
  domainId?: string;
  azureResourceName?: string;
  azureResourceType?: string;
  customHostNameDnsRecordType?: string;
  hostNameType?: string;
}

/**
 * @class
 * Initializes a new instance of the SiteSourceControl class.
 * @constructor
 * Describes the source control configuration for web app
 *
 * @member {string} [repoUrl] Repository or source control url
 * 
 * @member {string} [branch] Name of branch to use for deployment
 * 
 * @member {boolean} [isManualIntegration] Whether to manual or continuous
 * integration
 * 
 * @member {boolean} [deploymentRollbackEnabled] Whether to manual or
 * continuous integration
 * 
 * @member {boolean} [isMercurial] Mercurial or Git repository type
 * 
 */
export interface SiteSourceControl extends Resource {
  repoUrl?: string;
  branch?: string;
  isManualIntegration?: boolean;
  deploymentRollbackEnabled?: boolean;
  isMercurial?: boolean;
}

/**
 * @class
 * Initializes a new instance of the StringDictionary class.
 * @constructor
 * String dictionary resource
 *
 * @member {object} [properties] Settings
 * 
 */
export interface StringDictionary extends Resource {
  properties?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the ConnectionStringDictionary class.
 * @constructor
 * String dictionary resource
 *
 * @member {object} [properties] Connection strings
 * 
 */
export interface ConnectionStringDictionary extends Resource {
  properties?: { [propertyName: string]: ConnStringValueTypePair };
}

/**
 * @class
 * Initializes a new instance of the ConnStringValueTypePair class.
 * @constructor
 * Database connection string value to type pair
 *
 * @member {string} [value] Value of pair
 * 
 * @member {string} type Type of database. Possible values include: 'MySql',
 * 'SQLServer', 'SQLAzure', 'Custom'
 * 
 */
export interface ConnStringValueTypePair {
  value?: string;
  type: string;
}

/**
 * @class
 * Initializes a new instance of the SiteLogsConfig class.
 * @constructor
 * Configuration of Azure web site
 *
 * @member {object} [applicationLogs] Application logs configuration
 * 
 * @member {object} [applicationLogs.fileSystem] Application logs to file
 * system configuration
 * 
 * @member {string} [applicationLogs.fileSystem.level] Log level. Possible
 * values include: 'Off', 'Verbose', 'Information', 'Warning', 'Error'
 * 
 * @member {object} [applicationLogs.azureTableStorage] Application logs to
 * azure table storage configuration
 * 
 * @member {string} [applicationLogs.azureTableStorage.level] Log level.
 * Possible values include: 'Off', 'Verbose', 'Information', 'Warning',
 * 'Error'
 * 
 * @member {string} [applicationLogs.azureTableStorage.sasUrl] SAS url to an
 * azure table with add/query/delete permissions
 * 
 * @member {object} [applicationLogs.azureBlobStorage] Application logs to
 * blob storage configuration
 * 
 * @member {string} [applicationLogs.azureBlobStorage.level] Log level.
 * Possible values include: 'Off', 'Verbose', 'Information', 'Warning',
 * 'Error'
 * 
 * @member {string} [applicationLogs.azureBlobStorage.sasUrl] SAS url to a
 * azure blob container with read/write/list/delete permissions
 * 
 * @member {number} [applicationLogs.azureBlobStorage.retentionInDays]
 * Retention in days.
 * Remove blobs older than X days.
 * 0 or lower means no retention.
 * 
 * @member {object} [httpLogs] Http logs configuration
 * 
 * @member {object} [httpLogs.fileSystem] Http logs to file system
 * configuration
 * 
 * @member {number} [httpLogs.fileSystem.retentionInMb] Maximum size in
 * megabytes that http log files can use.
 * When reached old log files will be removed to make space for
 * new ones.
 * Value can range between 25 and 100.
 * 
 * @member {number} [httpLogs.fileSystem.retentionInDays] Retention in days.
 * Remove files older than X days.
 * 0 or lower means no retention.
 * 
 * @member {boolean} [httpLogs.fileSystem.enabled] Enabled
 * 
 * @member {object} [httpLogs.azureBlobStorage] Http logs to azure blob
 * storage configuration
 * 
 * @member {string} [httpLogs.azureBlobStorage.sasUrl] SAS url to a azure blob
 * container with read/write/list/delete permissions
 * 
 * @member {number} [httpLogs.azureBlobStorage.retentionInDays] Retention in
 * days.
 * Remove blobs older than X days.
 * 0 or lower means no retention.
 * 
 * @member {boolean} [httpLogs.azureBlobStorage.enabled] Enabled
 * 
 * @member {object} [failedRequestsTracing] Failed requests tracing
 * configuration
 * 
 * @member {boolean} [failedRequestsTracing.enabled] Enabled
 * 
 * @member {object} [detailedErrorMessages] Detailed error messages
 * configuration
 * 
 * @member {boolean} [detailedErrorMessages.enabled] Enabled
 * 
 */
export interface SiteLogsConfig extends Resource {
  applicationLogs?: ApplicationLogsConfig;
  httpLogs?: HttpLogsConfig;
  failedRequestsTracing?: EnabledConfig;
  detailedErrorMessages?: EnabledConfig;
}

/**
 * @class
 * Initializes a new instance of the ApplicationLogsConfig class.
 * @constructor
 * Application logs configuration
 *
 * @member {object} [fileSystem] Application logs to file system configuration
 * 
 * @member {string} [fileSystem.level] Log level. Possible values include:
 * 'Off', 'Verbose', 'Information', 'Warning', 'Error'
 * 
 * @member {object} [azureTableStorage] Application logs to azure table
 * storage configuration
 * 
 * @member {string} [azureTableStorage.level] Log level. Possible values
 * include: 'Off', 'Verbose', 'Information', 'Warning', 'Error'
 * 
 * @member {string} [azureTableStorage.sasUrl] SAS url to an azure table with
 * add/query/delete permissions
 * 
 * @member {object} [azureBlobStorage] Application logs to blob storage
 * configuration
 * 
 * @member {string} [azureBlobStorage.level] Log level. Possible values
 * include: 'Off', 'Verbose', 'Information', 'Warning', 'Error'
 * 
 * @member {string} [azureBlobStorage.sasUrl] SAS url to a azure blob
 * container with read/write/list/delete permissions
 * 
 * @member {number} [azureBlobStorage.retentionInDays] Retention in days.
 * Remove blobs older than X days.
 * 0 or lower means no retention.
 * 
 */
export interface ApplicationLogsConfig {
  fileSystem?: FileSystemApplicationLogsConfig;
  azureTableStorage?: AzureTableStorageApplicationLogsConfig;
  azureBlobStorage?: AzureBlobStorageApplicationLogsConfig;
}

/**
 * @class
 * Initializes a new instance of the FileSystemApplicationLogsConfig class.
 * @constructor
 * Application logs to file system configuration
 *
 * @member {string} [level] Log level. Possible values include: 'Off',
 * 'Verbose', 'Information', 'Warning', 'Error'
 * 
 */
export interface FileSystemApplicationLogsConfig {
  level?: string;
}

/**
 * @class
 * Initializes a new instance of the AzureTableStorageApplicationLogsConfig class.
 * @constructor
 * Application logs to azure table storage configuration
 *
 * @member {string} [level] Log level. Possible values include: 'Off',
 * 'Verbose', 'Information', 'Warning', 'Error'
 * 
 * @member {string} [sasUrl] SAS url to an azure table with add/query/delete
 * permissions
 * 
 */
export interface AzureTableStorageApplicationLogsConfig {
  level?: string;
  sasUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the AzureBlobStorageApplicationLogsConfig class.
 * @constructor
 * Application logs azure blob storage configuration
 *
 * @member {string} [level] Log level. Possible values include: 'Off',
 * 'Verbose', 'Information', 'Warning', 'Error'
 * 
 * @member {string} [sasUrl] SAS url to a azure blob container with
 * read/write/list/delete permissions
 * 
 * @member {number} [retentionInDays] Retention in days.
 * Remove blobs older than X days.
 * 0 or lower means no retention.
 * 
 */
export interface AzureBlobStorageApplicationLogsConfig {
  level?: string;
  sasUrl?: string;
  retentionInDays?: number;
}

/**
 * @class
 * Initializes a new instance of the HttpLogsConfig class.
 * @constructor
 * Http logs configuration
 *
 * @member {object} [fileSystem] Http logs to file system configuration
 * 
 * @member {number} [fileSystem.retentionInMb] Maximum size in megabytes that
 * http log files can use.
 * When reached old log files will be removed to make space for
 * new ones.
 * Value can range between 25 and 100.
 * 
 * @member {number} [fileSystem.retentionInDays] Retention in days.
 * Remove files older than X days.
 * 0 or lower means no retention.
 * 
 * @member {boolean} [fileSystem.enabled] Enabled
 * 
 * @member {object} [azureBlobStorage] Http logs to azure blob storage
 * configuration
 * 
 * @member {string} [azureBlobStorage.sasUrl] SAS url to a azure blob
 * container with read/write/list/delete permissions
 * 
 * @member {number} [azureBlobStorage.retentionInDays] Retention in days.
 * Remove blobs older than X days.
 * 0 or lower means no retention.
 * 
 * @member {boolean} [azureBlobStorage.enabled] Enabled
 * 
 */
export interface HttpLogsConfig {
  fileSystem?: FileSystemHttpLogsConfig;
  azureBlobStorage?: AzureBlobStorageHttpLogsConfig;
}

/**
 * @class
 * Initializes a new instance of the FileSystemHttpLogsConfig class.
 * @constructor
 * Http logs to file system configuration
 *
 * @member {number} [retentionInMb] Maximum size in megabytes that http log
 * files can use.
 * When reached old log files will be removed to make space for
 * new ones.
 * Value can range between 25 and 100.
 * 
 * @member {number} [retentionInDays] Retention in days.
 * Remove files older than X days.
 * 0 or lower means no retention.
 * 
 * @member {boolean} [enabled] Enabled
 * 
 */
export interface FileSystemHttpLogsConfig {
  retentionInMb?: number;
  retentionInDays?: number;
  enabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the AzureBlobStorageHttpLogsConfig class.
 * @constructor
 * Http logs to azure blob storage configuration
 *
 * @member {string} [sasUrl] SAS url to a azure blob container with
 * read/write/list/delete permissions
 * 
 * @member {number} [retentionInDays] Retention in days.
 * Remove blobs older than X days.
 * 0 or lower means no retention.
 * 
 * @member {boolean} [enabled] Enabled
 * 
 */
export interface AzureBlobStorageHttpLogsConfig {
  sasUrl?: string;
  retentionInDays?: number;
  enabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the EnabledConfig class.
 * @constructor
 * Enabled configuration
 *
 * @member {boolean} [enabled] Enabled
 * 
 */
export interface EnabledConfig {
  enabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the PremierAddOnRequest class.
 * @constructor
 * @member {string} [location] Geo region resource belongs to e.g.
 * SouthCentralUS, SouthEastAsia
 * 
 * @member {object} [tags] Tags associated with resource
 * 
 * @member {object} [plan] Azure resource manager plan
 * 
 * @member {string} [plan.name] The name
 * 
 * @member {string} [plan.publisher] The publisher
 * 
 * @member {string} [plan.product] The product
 * 
 * @member {string} [plan.promotionCode] The promotion code
 * 
 * @member {string} [plan.version] Version of product
 * 
 * @member {object} [properties] Resource specific properties
 * 
 * @member {object} [sku] Sku description of the resource
 * 
 * @member {string} [sku.name] Name of the resource sku
 * 
 * @member {string} [sku.tier] Service Tier of the resource sku
 * 
 * @member {string} [sku.size] Size specifier of the resource sku
 * 
 * @member {string} [sku.family] Family code of the resource sku
 * 
 * @member {number} [sku.capacity] Current number of instances assigned to the
 * resource
 * 
 */
export interface PremierAddOnRequest {
  location?: string;
  tags?: { [propertyName: string]: string };
  plan?: ArmPlan;
  properties?: any;
  sku?: SkuDescription;
}

/**
 * @class
 * Initializes a new instance of the BackupRequest class.
 * @constructor
 * Description of a backup which will be performed
 *
 * @member {string} [backupRequestName] Name of the backup
 * 
 * @member {boolean} [enabled] True if the backup schedule is enabled (must be
 * included in that case), false if the backup schedule should be disabled
 * 
 * @member {string} [storageAccountUrl] SAS URL to the container
 * 
 * @member {object} [backupSchedule] Schedule for the backup if it is executed
 * periodically
 * 
 * @member {number} [backupSchedule.frequencyInterval] How often should be the
 * backup executed (e.g. for weekly backup, this should be set to 7 and
 * FrequencyUnit should be set to Day)
 * 
 * @member {string} [backupSchedule.frequencyUnit] How often should be the
 * backup executed (e.g. for weekly backup, this should be set to Day and
 * FrequencyInterval should be set to 7). Possible values include: 'Day',
 * 'Hour'
 * 
 * @member {boolean} [backupSchedule.keepAtLeastOneBackup] True if the
 * retention policy should always keep at least one backup in the storage
 * account, regardless how old it is; false otherwise.
 * 
 * @member {number} [backupSchedule.retentionPeriodInDays] After how many days
 * backups should be deleted
 * 
 * @member {date} [backupSchedule.startTime] When the schedule should start
 * working
 * 
 * @member {date} [backupSchedule.lastExecutionTime] The last time when this
 * schedule was triggered
 * 
 * @member {array} [databases] Databases included in the backup
 * 
 * @member {string} [backupRequestType] Type of the backup. Possible values
 * include: 'Default', 'Clone', 'Relocation'
 * 
 */
export interface BackupRequest extends Resource {
  backupRequestName?: string;
  enabled?: boolean;
  storageAccountUrl?: string;
  backupSchedule?: BackupSchedule;
  databases?: DatabaseBackupSetting[];
  backupRequestType?: string;
}

/**
 * @class
 * Initializes a new instance of the BackupSchedule class.
 * @constructor
 * Description of a backup schedule. Describes how often should be the backup
 * performed and what should be the retention policy.
 *
 * @member {number} [frequencyInterval] How often should be the backup
 * executed (e.g. for weekly backup, this should be set to 7 and
 * FrequencyUnit should be set to Day)
 * 
 * @member {string} frequencyUnit How often should be the backup executed
 * (e.g. for weekly backup, this should be set to Day and FrequencyInterval
 * should be set to 7). Possible values include: 'Day', 'Hour'
 * 
 * @member {boolean} [keepAtLeastOneBackup] True if the retention policy
 * should always keep at least one backup in the storage account, regardless
 * how old it is; false otherwise.
 * 
 * @member {number} [retentionPeriodInDays] After how many days backups should
 * be deleted
 * 
 * @member {date} [startTime] When the schedule should start working
 * 
 * @member {date} [lastExecutionTime] The last time when this schedule was
 * triggered
 * 
 */
export interface BackupSchedule {
  frequencyInterval?: number;
  frequencyUnit: string;
  keepAtLeastOneBackup?: boolean;
  retentionPeriodInDays?: number;
  startTime?: Date;
  lastExecutionTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the DatabaseBackupSetting class.
 * @constructor
 * Note: properties are serialized in JSON format and stored in DB.
 * if new properties are added they might not be in the previous
 * data rows
 * so please handle nulls
 *
 * @member {string} [databaseType] SqlAzure / MySql
 * 
 * @member {string} [name]
 * 
 * @member {string} [connectionStringName] Contains a connection string name
 * that is linked to the SiteConfig.ConnectionStrings.
 * This is used during restore with overwrite connection strings
 * options.
 * 
 * @member {string} [connectionString] Contains a connection string to a
 * database which is being backed up/restored. If the restore should happen
 * to a new database, the database name inside is the new one.
 * 
 */
export interface DatabaseBackupSetting {
  databaseType?: string;
  name?: string;
  connectionStringName?: string;
  connectionString?: string;
}

/**
 * @class
 * Initializes a new instance of the BackupItem class.
 * @constructor
 * Backup description
 *
 * @member {number} [backupItemId] Id of the backup.
 * 
 * @member {string} [storageAccountUrl] SAS URL for the storage account
 * container which contains this backup
 * 
 * @member {string} [blobName] Name of the blob which contains data for this
 * backup
 * 
 * @member {string} [backupItemName] Name of this backup
 * 
 * @member {string} [status] Backup status. Possible values include:
 * 'InProgress', 'Failed', 'Succeeded', 'TimedOut', 'Created', 'Skipped',
 * 'PartiallySucceeded', 'DeleteInProgress', 'DeleteFailed', 'Deleted'
 * 
 * @member {number} [sizeInBytes] Size of the backup in bytes
 * 
 * @member {date} [created] Timestamp of the backup creation
 * 
 * @member {string} [log] Details regarding this backup. Might contain an
 * error message.
 * 
 * @member {array} [databases] List of databases included in the backup
 * 
 * @member {boolean} [scheduled] True if this backup has been created due to a
 * schedule being triggered.
 * 
 * @member {date} [lastRestoreTimeStamp] Timestamp of a last restore operation
 * which used this backup.
 * 
 * @member {date} [finishedTimeStamp] Timestamp when this backup finished.
 * 
 * @member {string} [correlationId] Unique correlation identifier. Please use
 * this along with the timestamp while communicating with Azure support.
 * 
 * @member {number} [websiteSizeInBytes] Size of the original web app which
 * has been backed up
 * 
 */
export interface BackupItem extends Resource {
  backupItemId?: number;
  storageAccountUrl?: string;
  blobName?: string;
  backupItemName?: string;
  status?: string;
  sizeInBytes?: number;
  created?: Date;
  log?: string;
  databases?: DatabaseBackupSetting[];
  scheduled?: boolean;
  lastRestoreTimeStamp?: Date;
  finishedTimeStamp?: Date;
  correlationId?: string;
  websiteSizeInBytes?: number;
}

/**
 * @class
 * Initializes a new instance of the RestoreRequest class.
 * @constructor
 * Description of a restore request
 *
 * @member {string} [storageAccountUrl] SAS URL to the container
 * 
 * @member {string} [blobName] Name of a blob which contains the backup
 * 
 * @member {boolean} [overwrite] True if the restore operation can overwrite
 * target site. "True" needed if trying to restore over an existing site.
 * 
 * @member {string} [siteName] Name of a site (Web App)
 * 
 * @member {array} [databases] Collection of databses which should be
 * restored. This list has to match the list of databases included in the
 * backup.
 * 
 * @member {boolean} [ignoreConflictingHostNames] Changes a logic when
 * restoring a site with custom domains. If "true", custom domains are
 * removed automatically. If "false", custom domains are added to
 * the site object when it is being restored, but that might fail
 * due to conflicts during the operation.
 * 
 * @member {string} [operationType] Operation type. Possible values include:
 * 'Default', 'Clone', 'Relocation'
 * 
 * @member {boolean} [adjustConnectionStrings] Gets or sets a flag showing if
 * SiteConfig.ConnectionStrings should be set in new site
 * 
 * @member {string} [hostingEnvironment] App Service Environment name, if
 * needed (only when restoring a site to an App Service Environment)
 * 
 */
export interface RestoreRequest extends Resource {
  storageAccountUrl?: string;
  blobName?: string;
  overwrite?: boolean;
  siteName?: string;
  databases?: DatabaseBackupSetting[];
  ignoreConflictingHostNames?: boolean;
  operationType?: string;
  adjustConnectionStrings?: boolean;
  hostingEnvironment?: string;
}

/**
 * @class
 * Initializes a new instance of the RestoreResponse class.
 * @constructor
 * Response for a restore site request
 *
 * @member {string} [operationId] When server starts the restore process, it
 * will return an OperationId identifying that particular restore operation
 * 
 */
export interface RestoreResponse extends Resource {
  operationId?: string;
}

/**
 * @class
 * Initializes a new instance of the CsmPublishingProfileOptions class.
 * @constructor
 * Publishing options for requested profile
 *
 * @member {string} [format] Name of the format. Valid values are:
 * FileZilla3
 * WebDeploy -- default
 * Ftp
 * 
 */
export interface CsmPublishingProfileOptions {
  format?: string;
}

/**
 * @class
 * Initializes a new instance of the TopLevelDomain class.
 * @constructor
 * A top level domain object
 *
 * @member {string} [topLevelDomainName] Name of the top level domain
 * 
 * @member {boolean} [privacy] If true then the top level domain supports
 * domain privacy
 * 
 */
export interface TopLevelDomain extends Resource {
  topLevelDomainName?: string;
  privacy?: boolean;
}

/**
 * @class
 * Initializes a new instance of the TopLevelDomainAgreementOption class.
 * @constructor
 * Options for retrieving the list of top level domain legal agreements
 *
 * @member {boolean} [includePrivacy] If true then the list of agreements will
 * inclue agreements for domain privacy as well.
 * 
 */
export interface TopLevelDomainAgreementOption {
  includePrivacy?: boolean;
}

/**
 * @class
 * Initializes a new instance of the TldLegalAgreement class.
 * @constructor
 * Represents a legal agreement for top level domain
 *
 * @member {string} [agreementKey] Unique identifier for the agreement
 * 
 * @member {string} [title] Agreement title
 * 
 * @member {string} [content] Agreement details
 * 
 * @member {string} [url] Url where a copy of the agreement details is hosted
 * 
 */
export interface TldLegalAgreement {
  agreementKey?: string;
  title?: string;
  content?: string;
  url?: string;
}


/**
 * @class
 * Initializes a new instance of the CertificateOrderCollection class.
 * @constructor
 * Collection of ceritificate orders
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface CertificateOrderCollection extends Array<CertificateOrder> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the CertificateOrderCertificateCollection class.
 * @constructor
 * Collection of ceritificateorder certificates
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface CertificateOrderCertificateCollection extends Array<CertificateOrderCertificate> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the CertificateCollection class.
 * @constructor
 * Collection of certificates
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface CertificateCollection extends Array<Certificate> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ClassicMobileServiceCollection class.
 * @constructor
 * Collection of Classic Mobile Services
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface ClassicMobileServiceCollection extends Array<ClassicMobileService> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the DomainCollection class.
 * @constructor
 * Collection of domains
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface DomainCollection extends Array<Domain> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the GeoRegionCollection class.
 * @constructor
 * Collection of geo regions
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface GeoRegionCollection extends Array<GeoRegion> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ServerFarmCollection class.
 * @constructor
 * Collection of serverfarms
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface ServerFarmCollection extends Array<ServerFarmWithRichSku> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SiteCollection class.
 * @constructor
 * Collection of sites
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface SiteCollection extends Array<Site> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the HostingEnvironmentCollection class.
 * @constructor
 * Collection of hosting environments (App Service Environments)
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface HostingEnvironmentCollection extends Array<HostingEnvironment> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedHostingEnvironmentCollection class.
 * @constructor
 * Collection of managed hosting environments
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface ManagedHostingEnvironmentCollection extends Array<ManagedHostingEnvironment> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the NameIdentifierCollection class.
 * @constructor
 * Collection of domain name identifiers
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface NameIdentifierCollection extends Array<NameIdentifier> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the StampCapacityCollection class.
 * @constructor
 * Collection of stamp capacities
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface StampCapacityCollection extends Array<StampCapacity> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ResourceMetricCollection class.
 * @constructor
 * Collection of metric responses
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface ResourceMetricCollection extends Array<ResourceMetric> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the CsmUsageQuotaCollection class.
 * @constructor
 * Collection of csm usage quotas
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface CsmUsageQuotaCollection extends Array<CsmUsageQuota> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the MetricDefinitionCollection class.
 * @constructor
 * Collection of metric defintions
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface MetricDefinitionCollection extends Array<MetricDefinition> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the UsageCollection class.
 * @constructor
 * Collection of usages
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface UsageCollection extends Array<Usage> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the WorkerPoolCollection class.
 * @constructor
 * Collection of worker pools
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface WorkerPoolCollection extends Array<WorkerPool> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SkuInfoCollection class.
 * @constructor
 * Collection of SkuInfos
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface SkuInfoCollection extends Array<SkuInfo> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SourceControlCollection class.
 * @constructor
 * Collection of soure controls
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface SourceControlCollection extends Array<SourceControl> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SlotDifferenceCollection class.
 * @constructor
 * Collection of Slot Differences
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface SlotDifferenceCollection extends Array<SlotDifference> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the DeletedSiteCollection class.
 * @constructor
 * Collection of deleted sites
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface DeletedSiteCollection extends Array<DeletedSite> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the DeploymentCollection class.
 * @constructor
 * Collection of app deployments
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface DeploymentCollection extends Array<Deployment> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SiteInstanceCollection class.
 * @constructor
 * Collection of site instances
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface SiteInstanceCollection extends Array<SiteInstance> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the HostNameBindingCollection class.
 * @constructor
 * Collection of host name bindings
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface HostNameBindingCollection extends Array<HostNameBinding> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the BackupItemCollection class.
 * @constructor
 * Collection of Backup Items
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface BackupItemCollection extends Array<BackupItem> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the TopLevelDomainCollection class.
 * @constructor
 * Collection of Top Level Domains
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface TopLevelDomainCollection extends Array<TopLevelDomain> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the TldLegalAgreementCollection class.
 * @constructor
 * Collection of Tld Legal Agreements
 *
 * @member {string} [nextLink] Link to next page of resources
 * 
 */
export interface TldLegalAgreementCollection extends Array<TldLegalAgreement> {
  nextLink?: string;
}

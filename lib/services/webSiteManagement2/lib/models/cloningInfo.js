/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the CloningInfo class.
 * @constructor
 * Represents information needed for cloning operation
 *
 * @member {string} [correlationId] Correlation Id of cloning operation. This
 * id ties multiple cloning operations
 * together to use the same snapshot
 * 
 * @member {boolean} [overwrite] Overwrite destination web app
 * 
 * @member {boolean} [cloneCustomHostNames] If true, clone custom hostnames
 * from source web app
 * 
 * @member {boolean} [cloneSourceControl] Clone source control from source web
 * app
 * 
 * @member {string} [sourceWebAppId] ARM resource id of the source web app.
 * Web app resource id is of the form
 * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}
 * for production slots and
 * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{siteName}/slots/{slotName}
 * for other slots
 * 
 * @member {string} [hostingEnvironment] Hosting environment
 * 
 * @member {object} [appSettingsOverrides] Application settings overrides for
 * cloned web app. If specified these settings will override the settings
 * cloned
 * from source web app. If not specified, application settings
 * from source web app are retained.
 * 
 * @member {boolean} [configureLoadBalancing] If specified configure load
 * balancing for source and clone site
 * 
 * @member {string} [trafficManagerProfileId] ARM resource id of the traffic
 * manager profile to use if it exists. Traffic manager resource id is of the
 * form
 * /subscriptions/{subId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/trafficManagerProfiles/{profileName}
 * 
 * @member {string} [trafficManagerProfileName] Name of traffic manager
 * profile to create. This is only needed if traffic manager profile does not
 * already exist
 * 
 */
function CloningInfo() {
}

/**
 * Defines the metadata of CloningInfo
 *
 * @returns {object} metadata of CloningInfo
 *
 */
CloningInfo.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'CloningInfo',
    type: {
      name: 'Composite',
      className: 'CloningInfo',
      modelProperties: {
        correlationId: {
          required: false,
          serializedName: 'correlationId',
          type: {
            name: 'String'
          }
        },
        overwrite: {
          required: false,
          serializedName: 'overwrite',
          type: {
            name: 'Boolean'
          }
        },
        cloneCustomHostNames: {
          required: false,
          serializedName: 'cloneCustomHostNames',
          type: {
            name: 'Boolean'
          }
        },
        cloneSourceControl: {
          required: false,
          serializedName: 'cloneSourceControl',
          type: {
            name: 'Boolean'
          }
        },
        sourceWebAppId: {
          required: false,
          serializedName: 'sourceWebAppId',
          type: {
            name: 'String'
          }
        },
        hostingEnvironment: {
          required: false,
          serializedName: 'hostingEnvironment',
          type: {
            name: 'String'
          }
        },
        appSettingsOverrides: {
          required: false,
          serializedName: 'appSettingsOverrides',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        configureLoadBalancing: {
          required: false,
          serializedName: 'configureLoadBalancing',
          type: {
            name: 'Boolean'
          }
        },
        trafficManagerProfileId: {
          required: false,
          serializedName: 'trafficManagerProfileId',
          type: {
            name: 'String'
          }
        },
        trafficManagerProfileName: {
          required: false,
          serializedName: 'trafficManagerProfileName',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = CloningInfo;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the ManagedHostingEnvironment class.
 * @constructor
 * Description of a managed hosting environment
 *
 * @member {string} [managedHostingEnvironmentName] Name of the managed
 * hosting environment
 * 
 * @member {string} [managedHostingEnvironmentLocation] Location of the
 * managed hosting environment e.g. "West US"
 * 
 * @member {string} [status] Current status of the managed hosting
 * environment. Possible values include: 'Preparing', 'Ready', 'Deleting'
 * 
 * @member {object} [virtualNetwork] Description of the managed hosting
 * environment's virtual network
 * 
 * @member {string} [virtualNetwork.id] Resource id of the virtual network
 * 
 * @member {string} [virtualNetwork.name] Name of the virtual network
 * (read-only)
 * 
 * @member {string} [virtualNetwork.type] Resource type of the virtual network
 * (read-only)
 * 
 * @member {string} [virtualNetwork.subnet] Subnet within the virtual network
 * 
 * @member {number} [ipsslAddressCount] Number of ip ssl addresses reserved
 * for the managed hosting environment
 * 
 * @member {string} [dnsSuffix] DNS suffix of the managed hosting environment
 * 
 * @member {string} [subscriptionId] Subscription of the managed hosting
 * environment (read only)
 * 
 * @member {string} [resourceGroup] Resource group of the managed hosting
 * environment (read only)
 * 
 * @member {boolean} [environmentIsHealthy] True/false indicating whether the
 * managed hosting environment is healthy
 * 
 * @member {string} [environmentStatus] Detailed message about with results of
 * the last check of the managed hosting environment
 * 
 * @member {boolean} [suspended] True/false indicating whether the managed
 * hosting environment is suspended. The environment can be suspended e.g.
 * when the management endpoint is no longer available
 * (most likely because NSG blocked the incoming traffic)
 * 
 * @member {string} [apiManagementAccount] Resource id of the api management
 * account associated with this managed hosting environment (read only)
 * 
 */
function ManagedHostingEnvironment() {
  ManagedHostingEnvironment['super_'].call(this);
}

util.inherits(ManagedHostingEnvironment, models['Resource']);

/**
 * Defines the metadata of ManagedHostingEnvironment
 *
 * @returns {object} metadata of ManagedHostingEnvironment
 *
 */
ManagedHostingEnvironment.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'ManagedHostingEnvironment',
    type: {
      name: 'Composite',
      className: 'ManagedHostingEnvironment',
      modelProperties: {
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        kind: {
          required: false,
          serializedName: 'kind',
          type: {
            name: 'String'
          }
        },
        location: {
          required: true,
          serializedName: 'location',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        tags: {
          required: false,
          serializedName: 'tags',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        managedHostingEnvironmentName: {
          required: false,
          serializedName: 'properties.name',
          type: {
            name: 'String'
          }
        },
        managedHostingEnvironmentLocation: {
          required: false,
          serializedName: 'properties.location',
          type: {
            name: 'String'
          }
        },
        status: {
          required: false,
          serializedName: 'properties.status',
          type: {
            name: 'Enum',
            allowedValues: [ 'Preparing', 'Ready', 'Deleting' ]
          }
        },
        virtualNetwork: {
          required: false,
          serializedName: 'properties.virtualNetwork',
          type: {
            name: 'Composite',
            className: 'VirtualNetworkProfile'
          }
        },
        ipsslAddressCount: {
          required: false,
          serializedName: 'properties.ipsslAddressCount',
          type: {
            name: 'Number'
          }
        },
        dnsSuffix: {
          required: false,
          serializedName: 'properties.dnsSuffix',
          type: {
            name: 'String'
          }
        },
        subscriptionId: {
          required: false,
          serializedName: 'properties.subscriptionId',
          type: {
            name: 'String'
          }
        },
        resourceGroup: {
          required: false,
          serializedName: 'properties.resourceGroup',
          type: {
            name: 'String'
          }
        },
        environmentIsHealthy: {
          required: false,
          serializedName: 'properties.environmentIsHealthy',
          type: {
            name: 'Boolean'
          }
        },
        environmentStatus: {
          required: false,
          serializedName: 'properties.environmentStatus',
          type: {
            name: 'String'
          }
        },
        suspended: {
          required: false,
          serializedName: 'properties.suspended',
          type: {
            name: 'Boolean'
          }
        },
        apiManagementAccount: {
          required: false,
          serializedName: 'properties.apiManagementAccount',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = ManagedHostingEnvironment;

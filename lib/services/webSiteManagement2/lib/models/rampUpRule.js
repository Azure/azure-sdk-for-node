/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the RampUpRule class.
 * @constructor
 * Routing rules for ramp up testing. This rule allows to redirect static
 * traffic % to a slot or to gradually change routing % based on performance
 *
 * @member {string} [actionHostName] Hostname of a slot to which the traffic
 * will be redirected if decided to. E.g. mysite-stage.azurewebsites.net
 * 
 * @member {number} [reroutePercentage] Percentage of the traffic which will
 * be redirected to
 * {Microsoft.Web.Hosting.Administration.RampUpRule.ActionHostName}
 * 
 * @member {number} [changeStep] [Optional] In auto ramp up scenario this is
 * the step to to add/remove from
 * {Microsoft.Web.Hosting.Administration.RampUpRule.ReroutePercentage} until
 * it reaches
 * {Microsoft.Web.Hosting.Administration.RampUpRule.MinReroutePercentage}
 * or {Microsoft.Web.Hosting.Administration.RampUpRule.MaxReroutePercentage}.
 * Site metrics are checked every N minutes specificed in
 * {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeIntervalInMinutes}.
 * Custom decision algorithm can be provided in TiPCallback site
 * extension which Url can be specified in
 * {Microsoft.Web.Hosting.Administration.RampUpRule.ChangeDecisionCallbackUrl}
 * 
 * @member {number} [changeIntervalInMinutes] [Optional] Specifies interval in
 * mimuntes to reevaluate ReroutePercentage
 * 
 * @member {number} [minReroutePercentage] [Optional] Specifies lower boundary
 * above which ReroutePercentage will stay.
 * 
 * @member {number} [maxReroutePercentage] [Optional] Specifies upper boundary
 * below which ReroutePercentage will stay.
 * 
 * @member {string} [changeDecisionCallbackUrl] Custom decision algorithm can
 * be provided in TiPCallback site extension which Url can be specified. See
 * TiPCallback site extension for the scaffold and contracts.
 * https://www.siteextensions.net/packages/TiPCallback/
 * 
 * @member {string} [name] Name of the routing rule. The recommended name
 * would be to point to the slot which will receive the traffic in the
 * experiment.
 * 
 */
function RampUpRule() {
}

/**
 * Defines the metadata of RampUpRule
 *
 * @returns {object} metadata of RampUpRule
 *
 */
RampUpRule.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'RampUpRule',
    type: {
      name: 'Composite',
      className: 'RampUpRule',
      modelProperties: {
        actionHostName: {
          required: false,
          serializedName: 'actionHostName',
          type: {
            name: 'String'
          }
        },
        reroutePercentage: {
          required: false,
          serializedName: 'reroutePercentage',
          type: {
            name: 'Number'
          }
        },
        changeStep: {
          required: false,
          serializedName: 'changeStep',
          type: {
            name: 'Number'
          }
        },
        changeIntervalInMinutes: {
          required: false,
          serializedName: 'changeIntervalInMinutes',
          type: {
            name: 'Number'
          }
        },
        minReroutePercentage: {
          required: false,
          serializedName: 'minReroutePercentage',
          type: {
            name: 'Number'
          }
        },
        maxReroutePercentage: {
          required: false,
          serializedName: 'maxReroutePercentage',
          type: {
            name: 'Number'
          }
        },
        changeDecisionCallbackUrl: {
          required: false,
          serializedName: 'changeDecisionCallbackUrl',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = RampUpRule;

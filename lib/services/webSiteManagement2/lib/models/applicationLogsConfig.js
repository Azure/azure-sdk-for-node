/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the ApplicationLogsConfig class.
 * @constructor
 * Application logs configuration
 *
 * @member {object} [fileSystem] Application logs to file system configuration
 * 
 * @member {string} [fileSystem.level] Log level. Possible values include:
 * 'Off', 'Verbose', 'Information', 'Warning', 'Error'
 * 
 * @member {object} [azureTableStorage] Application logs to azure table
 * storage configuration
 * 
 * @member {string} [azureTableStorage.level] Log level. Possible values
 * include: 'Off', 'Verbose', 'Information', 'Warning', 'Error'
 * 
 * @member {string} [azureTableStorage.sasUrl] SAS url to an azure table with
 * add/query/delete permissions
 * 
 * @member {object} [azureBlobStorage] Application logs to blob storage
 * configuration
 * 
 * @member {string} [azureBlobStorage.level] Log level. Possible values
 * include: 'Off', 'Verbose', 'Information', 'Warning', 'Error'
 * 
 * @member {string} [azureBlobStorage.sasUrl] SAS url to a azure blob
 * container with read/write/list/delete permissions
 * 
 * @member {number} [azureBlobStorage.retentionInDays] Retention in days.
 * Remove blobs older than X days.
 * 0 or lower means no retention.
 * 
 */
function ApplicationLogsConfig() {
}

/**
 * Defines the metadata of ApplicationLogsConfig
 *
 * @returns {object} metadata of ApplicationLogsConfig
 *
 */
ApplicationLogsConfig.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'ApplicationLogsConfig',
    type: {
      name: 'Composite',
      className: 'ApplicationLogsConfig',
      modelProperties: {
        fileSystem: {
          required: false,
          serializedName: 'fileSystem',
          type: {
            name: 'Composite',
            className: 'FileSystemApplicationLogsConfig'
          }
        },
        azureTableStorage: {
          required: false,
          serializedName: 'azureTableStorage',
          type: {
            name: 'Composite',
            className: 'AzureTableStorageApplicationLogsConfig'
          }
        },
        azureBlobStorage: {
          required: false,
          serializedName: 'azureBlobStorage',
          type: {
            name: 'Composite',
            className: 'AzureBlobStorageApplicationLogsConfig'
          }
        }
      }
    }
  };
};

module.exports = ApplicationLogsConfig;

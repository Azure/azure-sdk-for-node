/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the Usage class.
 * @constructor
 * Class that represents usage of the quota resource.
 *
 * @member {string} [displayName] Friendly name shown in the UI
 * 
 * @member {string} [usageName] Name of the quota
 * 
 * @member {string} [resourceName] Name of the quota resource
 * 
 * @member {string} [unit] Units of measurement for the quota resource
 * 
 * @member {number} [currentValue] The current value of the resource counter
 * 
 * @member {number} [limit] The resource limit
 * 
 * @member {date} [nextResetTime] Next reset time for the resource counter
 * 
 * @member {string} [computeMode] ComputeMode used for this usage. Possible
 * values include: 'Shared', 'Dedicated', 'Dynamic'
 * 
 * @member {string} [siteMode] SiteMode used for this usage
 * 
 */
function Usage() {
  Usage['super_'].call(this);
}

util.inherits(Usage, models['Resource']);

/**
 * Defines the metadata of Usage
 *
 * @returns {object} metadata of Usage
 *
 */
Usage.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'Usage',
    type: {
      name: 'Composite',
      className: 'Usage',
      modelProperties: {
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        kind: {
          required: false,
          serializedName: 'kind',
          type: {
            name: 'String'
          }
        },
        location: {
          required: true,
          serializedName: 'location',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        tags: {
          required: false,
          serializedName: 'tags',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        displayName: {
          required: false,
          serializedName: 'properties.displayName',
          type: {
            name: 'String'
          }
        },
        usageName: {
          required: false,
          serializedName: 'properties.name',
          type: {
            name: 'String'
          }
        },
        resourceName: {
          required: false,
          serializedName: 'properties.resourceName',
          type: {
            name: 'String'
          }
        },
        unit: {
          required: false,
          serializedName: 'properties.unit',
          type: {
            name: 'String'
          }
        },
        currentValue: {
          required: false,
          serializedName: 'properties.currentValue',
          type: {
            name: 'Number'
          }
        },
        limit: {
          required: false,
          serializedName: 'properties.limit',
          type: {
            name: 'Number'
          }
        },
        nextResetTime: {
          required: false,
          serializedName: 'properties.nextResetTime',
          type: {
            name: 'DateTime'
          }
        },
        computeMode: {
          required: false,
          serializedName: 'properties.computeMode',
          type: {
            name: 'Enum',
            allowedValues: [ 'Shared', 'Dedicated', 'Dynamic' ]
          }
        },
        siteMode: {
          required: false,
          serializedName: 'properties.siteMode',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = Usage;

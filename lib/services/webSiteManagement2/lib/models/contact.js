/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the Contact class.
 * @constructor
 * Contact information for domain registration. If 'Domain Privacy' option is
 * not selected then the contact information will be  be made publicly
 * available through the Whois directories as per ICANN requirements.
 *
 * @member {object} [addressMailing] Mailing address
 * 
 * @member {string} [addressMailing.address1] Address 1
 * 
 * @member {string} [addressMailing.address2] Address 2
 * 
 * @member {string} [addressMailing.city] City
 * 
 * @member {string} [addressMailing.country] Country
 * 
 * @member {string} [addressMailing.postalCode] Postal code
 * 
 * @member {string} [addressMailing.state] State
 * 
 * @member {string} [email] Email address
 * 
 * @member {string} [fax] Fax number
 * 
 * @member {string} [jobTitle] Job title
 * 
 * @member {string} [nameFirst] First name
 * 
 * @member {string} [nameLast] Last name
 * 
 * @member {string} [nameMiddle] Middle name
 * 
 * @member {string} [organization] Organization
 * 
 * @member {string} [phone] Phone number
 * 
 */
function Contact() {
}

/**
 * Defines the metadata of Contact
 *
 * @returns {object} metadata of Contact
 *
 */
Contact.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'Contact',
    type: {
      name: 'Composite',
      className: 'Contact',
      modelProperties: {
        addressMailing: {
          required: false,
          serializedName: 'addressMailing',
          type: {
            name: 'Composite',
            className: 'Address'
          }
        },
        email: {
          required: false,
          serializedName: 'email',
          type: {
            name: 'String'
          }
        },
        fax: {
          required: false,
          serializedName: 'fax',
          type: {
            name: 'String'
          }
        },
        jobTitle: {
          required: false,
          serializedName: 'jobTitle',
          type: {
            name: 'String'
          }
        },
        nameFirst: {
          required: false,
          serializedName: 'nameFirst',
          type: {
            name: 'String'
          }
        },
        nameLast: {
          required: false,
          serializedName: 'nameLast',
          type: {
            name: 'String'
          }
        },
        nameMiddle: {
          required: false,
          serializedName: 'nameMiddle',
          type: {
            name: 'String'
          }
        },
        organization: {
          required: false,
          serializedName: 'organization',
          type: {
            name: 'String'
          }
        },
        phone: {
          required: false,
          serializedName: 'phone',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = Contact;

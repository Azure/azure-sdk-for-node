/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the VirtualIPMapping class.
 * @constructor
 * Class that represents a VIP mapping
 *
 * @member {string} [virtualIP] Virtual IP address
 * 
 * @member {number} [internalHttpPort] Internal HTTP port
 * 
 * @member {number} [internalHttpsPort] Internal HTTPS port
 * 
 * @member {boolean} [inUse] Is VIP mapping in use
 * 
 */
function VirtualIPMapping() {
}

/**
 * Defines the metadata of VirtualIPMapping
 *
 * @returns {object} metadata of VirtualIPMapping
 *
 */
VirtualIPMapping.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'VirtualIPMapping',
    type: {
      name: 'Composite',
      className: 'VirtualIPMapping',
      modelProperties: {
        virtualIP: {
          required: false,
          serializedName: 'virtualIP',
          type: {
            name: 'String'
          }
        },
        internalHttpPort: {
          required: false,
          serializedName: 'internalHttpPort',
          type: {
            name: 'Number'
          }
        },
        internalHttpsPort: {
          required: false,
          serializedName: 'internalHttpsPort',
          type: {
            name: 'Number'
          }
        },
        inUse: {
          required: false,
          serializedName: 'inUse',
          type: {
            name: 'Boolean'
          }
        }
      }
    }
  };
};

module.exports = VirtualIPMapping;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Contains the localized display information for this particular
 * operation/action. These value will be used by several clients for (a) custom
 * role definitions for RBAC, (b) complex query filters for the event service
 * and (c) audit history/records for management operations.
 *
 */
class AvailableProviderOperationDisplay {
  /**
   * Create a AvailableProviderOperationDisplay.
   * @member {string} [provider] The localized friendly form of the resource
   * provider name - it is expected to also include the publisher/company
   * responsible. It should use Title Casing and begin with 'Microsoft' for 1st
   * party services.
   * @member {string} [resource] The localized friendly form of the resource
   * type related to this action/operation - it should match the public
   * documentation for the resource provider. It should use Title Casing - for
   * examples, please refer to the 'name' section.
   * @member {string} [operation] The localized friendly name for the
   * operation, as it should be shown to the user. It should be concise (to fit
   * in drop downs) but clear (i.e. self-documenting). It should use Title
   * Casing and include the entity/resource to which it applies.
   * @member {string} [description] The localized friendly description for the
   * operation, as it should be shown to the user. It should be thorough, yet
   * concise - it will be used in tool tips and detailed views.
   */
  constructor() {
  }

  /**
   * Defines the metadata of AvailableProviderOperationDisplay
   *
   * @returns {object} metadata of AvailableProviderOperationDisplay
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'AvailableProviderOperationDisplay',
      type: {
        name: 'Composite',
        className: 'AvailableProviderOperationDisplay',
        modelProperties: {
          provider: {
            required: false,
            serializedName: 'provider',
            type: {
              name: 'String'
            }
          },
          resource: {
            required: false,
            serializedName: 'resource',
            type: {
              name: 'String'
            }
          },
          operation: {
            required: false,
            serializedName: 'operation',
            type: {
              name: 'String'
            }
          },
          description: {
            required: false,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = AvailableProviderOperationDisplay;

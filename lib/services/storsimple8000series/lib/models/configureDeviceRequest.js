/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The mandatory device configuration request.
 *
 * @extends models['BaseModel']
 */
class ConfigureDeviceRequest extends models['BaseModel'] {
  /**
   * Create a ConfigureDeviceRequest.
   * @member {string} friendlyName The friendly name for the device.
   * @member {string} currentDeviceName The current name of the device.
   * @member {string} timeZone The device time zone. For eg: "Pacific Standard
   * Time"
   * @member {object} [dnsSettings] The secondary DNS Settings of the device.
   * @member {array} [dnsSettings.secondaryDnsServers] The list of secondary
   * DNS Server IP addresses.
   * @member {object} [networkInterfaceData0Settings] The 'Data 0' network
   * interface card settings.
   * @member {string} [networkInterfaceData0Settings.controllerZeroIp] The
   * controller 0's IPv4 address.
   * @member {string} [networkInterfaceData0Settings.controllerOneIp] The
   * controller 1's IPv4 address.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ConfigureDeviceRequest
   *
   * @returns {object} metadata of ConfigureDeviceRequest
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ConfigureDeviceRequest',
      type: {
        name: 'Composite',
        className: 'ConfigureDeviceRequest',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          kind: {
            required: false,
            serializedName: 'kind',
            type: {
              name: 'Enum',
              allowedValues: [ 'Series8000' ]
            }
          },
          friendlyName: {
            required: true,
            serializedName: 'properties.friendlyName',
            type: {
              name: 'String'
            }
          },
          currentDeviceName: {
            required: true,
            serializedName: 'properties.currentDeviceName',
            type: {
              name: 'String'
            }
          },
          timeZone: {
            required: true,
            serializedName: 'properties.timeZone',
            type: {
              name: 'String'
            }
          },
          dnsSettings: {
            required: false,
            serializedName: 'properties.dnsSettings',
            type: {
              name: 'Composite',
              className: 'SecondaryDNSSettings'
            }
          },
          networkInterfaceData0Settings: {
            required: false,
            serializedName: 'properties.networkInterfaceData0Settings',
            type: {
              name: 'Composite',
              className: 'NetworkInterfaceData0Settings'
            }
          }
        }
      }
    };
  }
}

module.exports = ConfigureDeviceRequest;

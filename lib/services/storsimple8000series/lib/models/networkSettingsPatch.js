/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Represents the patch request for the network settings of a device.
 *
 */
class NetworkSettingsPatch {
  /**
   * Create a NetworkSettingsPatch.
   * @property {object} [dnsSettings] The DNS (Domain Name System) settings of
   * device.
   * @property {string} [dnsSettings.primaryDnsServer] The primary IPv4 DNS
   * server for the device
   * @property {string} [dnsSettings.primaryIpv6DnsServer] The primary IPv6 DNS
   * server for the device
   * @property {array} [dnsSettings.secondaryDnsServers] The secondary IPv4 DNS
   * server for the device
   * @property {array} [dnsSettings.secondaryIpv6DnsServers] The secondary IPv6
   * DNS server for the device
   * @property {object} [networkAdapters] The network adapter list of device.
   * @property {array} [networkAdapters.value] The value.
   */
  constructor() {
  }

  /**
   * Defines the metadata of NetworkSettingsPatch
   *
   * @returns {object} metadata of NetworkSettingsPatch
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'NetworkSettingsPatch',
      type: {
        name: 'Composite',
        className: 'NetworkSettingsPatch',
        modelProperties: {
          dnsSettings: {
            required: false,
            serializedName: 'properties.dnsSettings',
            type: {
              name: 'Composite',
              className: 'DNSSettings'
            }
          },
          networkAdapters: {
            required: false,
            serializedName: 'properties.networkAdapters',
            type: {
              name: 'Composite',
              className: 'NetworkAdapterList'
            }
          }
        }
      }
    };
  }
}

module.exports = NetworkSettingsPatch;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Details related to the IPv4 address configuration.
 *
 */
class NicIPv4 {
  /**
   * Create a NicIPv4.
   * @member {string} [ipv4Address] The IPv4 address of the network adapter.
   * @member {string} [ipv4Netmask] The IPv4 netmask of the network adapter.
   * @member {string} [ipv4Gateway] The IPv4 gateway of the network adapter.
   * @member {string} [controller0Ipv4Address] The IPv4 address of Controller0.
   * @member {string} [controller1Ipv4Address] The IPv4 address of Controller1.
   */
  constructor() {
  }

  /**
   * Defines the metadata of NicIPv4
   *
   * @returns {object} metadata of NicIPv4
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'NicIPv4',
      type: {
        name: 'Composite',
        className: 'NicIPv4',
        modelProperties: {
          ipv4Address: {
            required: false,
            serializedName: 'ipv4Address',
            type: {
              name: 'String'
            }
          },
          ipv4Netmask: {
            required: false,
            serializedName: 'ipv4Netmask',
            type: {
              name: 'String'
            }
          },
          ipv4Gateway: {
            required: false,
            serializedName: 'ipv4Gateway',
            type: {
              name: 'String'
            }
          },
          controller0Ipv4Address: {
            required: false,
            serializedName: 'controller0Ipv4Address',
            type: {
              name: 'String'
            }
          },
          controller1Ipv4Address: {
            required: false,
            serializedName: 'controller1Ipv4Address',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = NicIPv4;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The cloud appliance.
 *
 */
class CloudAppliance {
  /**
   * Create a CloudAppliance.
   * @property {string} name The name.
   * @property {string} [vnetName] The name of the virtual network.
   * @property {string} vnetRegion The virtual network region.
   * @property {boolean} [isVnetDnsConfigured] Indicates whether virtual
   * network used is configured with DNS or not.
   * @property {boolean} [isVnetExpressConfigured] Indicates whether virtual
   * network used is configured with express route or not.
   * @property {string} [subnetName] The name of the subnet.
   * @property {string} [storageAccountName] The name of the storage account.
   * @property {string} [storageAccountType] The type of the storage account.
   * @property {string} [vmType] The type of the virtual machine.
   * @property {string} [vmImageName] The name of the virtual machine image.
   * @property {string} [modelNumber] The model number.
   */
  constructor() {
  }

  /**
   * Defines the metadata of CloudAppliance
   *
   * @returns {object} metadata of CloudAppliance
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'CloudAppliance',
      type: {
        name: 'Composite',
        className: 'CloudAppliance',
        modelProperties: {
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          vnetName: {
            required: false,
            serializedName: 'vnetName',
            type: {
              name: 'String'
            }
          },
          vnetRegion: {
            required: true,
            serializedName: 'vnetRegion',
            type: {
              name: 'String'
            }
          },
          isVnetDnsConfigured: {
            required: false,
            serializedName: 'isVnetDnsConfigured',
            type: {
              name: 'Boolean'
            }
          },
          isVnetExpressConfigured: {
            required: false,
            serializedName: 'isVnetExpressConfigured',
            type: {
              name: 'Boolean'
            }
          },
          subnetName: {
            required: false,
            serializedName: 'subnetName',
            type: {
              name: 'String'
            }
          },
          storageAccountName: {
            required: false,
            serializedName: 'storageAccountName',
            type: {
              name: 'String'
            }
          },
          storageAccountType: {
            required: false,
            serializedName: 'storageAccountType',
            type: {
              name: 'String'
            }
          },
          vmType: {
            required: false,
            serializedName: 'vmType',
            type: {
              name: 'String'
            }
          },
          vmImageName: {
            required: false,
            serializedName: 'vmImageName',
            type: {
              name: 'String'
            }
          },
          modelNumber: {
            required: false,
            serializedName: 'modelNumber',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = CloudAppliance;

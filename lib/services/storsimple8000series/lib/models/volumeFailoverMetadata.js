/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The metadata of a volume that has valid cloud snapshot.
 *
 */
class VolumeFailoverMetadata {
  /**
   * Create a VolumeFailoverMetadata.
   * @member {string} [volumeId] The path ID of the volume.
   * @member {string} [volumeType] The type of the volume. Possible values
   * include: 'Tiered', 'Archival', 'LocallyPinned'
   * @member {number} [sizeInBytes] The size of the volume in bytes at the time
   * the snapshot was taken.
   * @member {date} [backupCreatedDate] The date at which the snapshot was
   * taken.
   * @member {string} [backupElementId] The path ID of the backup-element for
   * this volume, inside the backup set.
   * @member {string} [backupId] The path ID of the backup set.
   * @member {string} [backupPolicyId] The path ID of the backup policy using
   * which the snapshot was taken.
   */
  constructor() {
  }

  /**
   * Defines the metadata of VolumeFailoverMetadata
   *
   * @returns {object} metadata of VolumeFailoverMetadata
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VolumeFailoverMetadata',
      type: {
        name: 'Composite',
        className: 'VolumeFailoverMetadata',
        modelProperties: {
          volumeId: {
            required: false,
            serializedName: 'volumeId',
            type: {
              name: 'String'
            }
          },
          volumeType: {
            required: false,
            serializedName: 'volumeType',
            type: {
              name: 'Enum',
              allowedValues: [ 'Tiered', 'Archival', 'LocallyPinned' ]
            }
          },
          sizeInBytes: {
            required: false,
            serializedName: 'sizeInBytes',
            type: {
              name: 'Number'
            }
          },
          backupCreatedDate: {
            required: false,
            serializedName: 'backupCreatedDate',
            type: {
              name: 'DateTime'
            }
          },
          backupElementId: {
            required: false,
            serializedName: 'backupElementId',
            type: {
              name: 'String'
            }
          },
          backupId: {
            required: false,
            serializedName: 'backupId',
            type: {
              name: 'String'
            }
          },
          backupPolicyId: {
            required: false,
            serializedName: 'backupPolicyId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = VolumeFailoverMetadata;

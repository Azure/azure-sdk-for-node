/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The additional device details for the service data encryption key rollover.
 *
 */
class DeviceRolloverDetails {
  /**
   * Create a DeviceRolloverDetails.
   * @member {string} [authorizationEligibility] The eligibility status of
   * device for service data encryption key rollover. Possible values include:
   * 'InEligible', 'Eligible'
   * @member {string} [authorizationStatus] The authorization status of the
   * device for service data encryption key rollover. Possible values include:
   * 'Disabled', 'Enabled'
   * @member {string} [inEligibilityReason] The reason for inEligibility of
   * device, in case it's not eligible for service data encryption key
   * rollover. Possible values include: 'DeviceNotOnline',
   * 'NotSupportedAppliance', 'RolloverPending'
   */
  constructor() {
  }

  /**
   * Defines the metadata of DeviceRolloverDetails
   *
   * @returns {object} metadata of DeviceRolloverDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DeviceRolloverDetails',
      type: {
        name: 'Composite',
        className: 'DeviceRolloverDetails',
        modelProperties: {
          authorizationEligibility: {
            required: false,
            serializedName: 'authorizationEligibility',
            type: {
              name: 'Enum',
              allowedValues: [ 'InEligible', 'Eligible' ]
            }
          },
          authorizationStatus: {
            required: false,
            serializedName: 'authorizationStatus',
            type: {
              name: 'Enum',
              allowedValues: [ 'Disabled', 'Enabled' ]
            }
          },
          inEligibilityReason: {
            required: false,
            serializedName: 'inEligibilityReason',
            type: {
              name: 'Enum',
              allowedValues: [ 'DeviceNotOnline', 'NotSupportedAppliance', 'RolloverPending' ]
            }
          }
        }
      }
    };
  }
}

module.exports = DeviceRolloverDetails;

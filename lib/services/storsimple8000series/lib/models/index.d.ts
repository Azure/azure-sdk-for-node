/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the BaseModel class.
 * @constructor
 * Represents the base class for all other ARM object models
 *
 * @member {string} [id] The path ID that uniquely identifies the object.
 * @member {string} [name] The name of the object.
 * @member {string} [type] The hierarchical type of the object.
 * @member {string} [kind] The Kind of the object. Currently only Series8000 is
 * supported. Possible values include: 'Series8000'
 */
export interface BaseModel {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
  kind?: string;
}

/**
 * @class
 * Initializes a new instance of the AccessControlRecord class.
 * @constructor
 * The access control record.
 *
 * @member {string} initiatorName The iSCSI initiator name (IQN).
 * @member {number} [volumeCount] The number of volumes using the access
 * control record.
 */
export interface AccessControlRecord extends BaseModel {
  initiatorName: string;
  readonly volumeCount?: number;
}

/**
 * @class
 * Initializes a new instance of the AcsConfiguration class.
 * @constructor
 * The ACS configuration.
 *
 * @member {string} namespace The namespace.
 * @member {string} realm The realm.
 * @member {string} serviceUrl The service URL.
 */
export interface AcsConfiguration {
  namespace: string;
  realm: string;
  serviceUrl: string;
}

/**
 * @class
 * Initializes a new instance of the AlertSource class.
 * @constructor
 * The source details at which the alert was raised
 *
 * @member {string} [name] The name of the source
 * @member {string} [timeZone] The time zone of the source
 * @member {string} [alertSourceType] The source type of the alert. Possible
 * values include: 'Resource', 'Device'
 */
export interface AlertSource {
  name?: string;
  timeZone?: string;
  alertSourceType?: string;
}

/**
 * @class
 * Initializes a new instance of the AlertErrorDetails class.
 * @constructor
 * The details of the error for which the alert was raised
 *
 * @member {string} [errorCode] The error code
 * @member {string} [errorMessage] The error message
 * @member {number} [occurences] The number of occurences
 */
export interface AlertErrorDetails {
  errorCode?: string;
  errorMessage?: string;
  occurences?: number;
}

/**
 * @class
 * Initializes a new instance of the Alert class.
 * @constructor
 * The alert.
 *
 * @member {string} title The title of the alert
 * @member {string} scope The scope of the alert. Possible values include:
 * 'Resource', 'Device'
 * @member {string} alertType The type of the alert
 * @member {date} appearedAtTime The UTC time at which the alert was raised
 * @member {date} appearedAtSourceTime The source time at which the alert was
 * raised
 * @member {date} [clearedAtTime] The UTC time at which the alert was cleared
 * @member {date} [clearedAtSourceTime] The source time at which the alert was
 * cleared
 * @member {object} source The source at which the alert was raised
 * @member {string} [source.name] The name of the source
 * @member {string} [source.timeZone] The time zone of the source
 * @member {string} [source.alertSourceType] The source type of the alert.
 * Possible values include: 'Resource', 'Device'
 * @member {string} [recommendation] The recommended action for the issue
 * raised in the alert
 * @member {string} [resolutionReason] The reason for resolving the alert
 * @member {string} severity The severity of the alert. Possible values
 * include: 'Informational', 'Warning', 'Critical'
 * @member {string} status The current status of the alert. Possible values
 * include: 'Active', 'Cleared'
 * @member {object} [errorDetails] The details of the error for which the alert
 * was raised
 * @member {string} [errorDetails.errorCode] The error code
 * @member {string} [errorDetails.errorMessage] The error message
 * @member {number} [errorDetails.occurences] The number of occurences
 * @member {object} [detailedInformation] More details about the alert
 */
export interface Alert extends BaseModel {
  title: string;
  scope: string;
  alertType: string;
  appearedAtTime: Date;
  appearedAtSourceTime: Date;
  clearedAtTime?: Date;
  clearedAtSourceTime?: Date;
  source: AlertSource;
  recommendation?: string;
  resolutionReason?: string;
  severity: string;
  status: string;
  errorDetails?: AlertErrorDetails;
  detailedInformation?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the AlertFilter class.
 * @constructor
 * The OData filters to be used for Alert
 *
 * @member {string} [status] Specifies the status of the alerts to be filtered.
 * Only 'Equality' operator is supported for this property. Possible values
 * include: 'Active', 'Cleared'
 * @member {string} [severity] Specifies the severity of the alerts to be
 * filtered. Only 'Equality' operator is supported for this property. Possible
 * values include: 'Informational', 'Warning', 'Critical'
 * @member {string} [sourceType] Specifies the source type of the alerts to be
 * filtered. Only 'Equality' operator is supported for this property. Possible
 * values include: 'Resource', 'Device'
 * @member {string} [sourceName] Specifies the source name of the alerts to be
 * filtered. Only 'Equality' operator is supported for this property.
 * @member {date} [appearedOnTime] Specifies the appeared time (in UTC) of the
 * alerts to be filtered. Only 'Greater-Than' and 'Lesser-Than' operators are
 * supported for this property.
 */
export interface AlertFilter {
  status?: string;
  severity?: string;
  sourceType?: string;
  sourceName?: string;
  appearedOnTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the AlertSettings class.
 * @constructor
 * The alert settings.
 *
 * @member {string} emailNotification Indicates whether email notification
 * enabled or not. Possible values include: 'Enabled', 'Disabled'
 * @member {string} [alertNotificationCulture] The alert notification culture.
 * @member {string} [notificationToServiceOwners] The value indicating whether
 * alert notification enabled for admin or not. Possible values include:
 * 'Enabled', 'Disabled'
 * @member {array} [additionalRecipientEmailList] The alert notification email
 * list.
 */
export interface AlertSettings extends BaseModel {
  emailNotification: string;
  alertNotificationCulture?: string;
  notificationToServiceOwners?: string;
  additionalRecipientEmailList?: string[];
}

/**
 * @class
 * Initializes a new instance of the AsymmetricEncryptedSecret class.
 * @constructor
 * Represent the secrets intended for encryption with asymmetric key pair.
 *
 * @member {string} value The value of the secret.
 * @member {string} [encryptionCertThumbprint] Thumbprint certificate that was
 * used to encrypt "Value". If the value in unencrypted, it will be null.
 * @member {string} encryptionAlgorithm The algorithm used to encrypt "Value".
 * Possible values include: 'None', 'AES256', 'RSAES_PKCS1_v_1_5'
 */
export interface AsymmetricEncryptedSecret {
  value: string;
  encryptionCertThumbprint?: string;
  encryptionAlgorithm: string;
}

/**
 * @class
 * Initializes a new instance of the AvailableProviderOperationDisplay class.
 * @constructor
 * Contains the localized display information for this particular
 * operation/action. These value will be used by several clients for (a) custom
 * role definitions for RBAC, (b) complex query filters for the event service
 * and (c) audit history/records for management operations.
 *
 * @member {string} [provider] The localized friendly form of the resource
 * provider name - it is expected to also include the publisher/company
 * responsible. It should use Title Casing and begin with 'Microsoft' for 1st
 * party services.
 * @member {string} [resource] The localized friendly form of the resource type
 * related to this action/operation - it should match the public documentation
 * for the resource provider. It should use Title Casing - for examples, please
 * refer to the 'name' section.
 * @member {string} [operation] The localized friendly name for the operation,
 * as it should be shown to the user. It should be concise (to fit in drop
 * downs) but clear (i.e. self-documenting). It should use Title Casing and
 * include the entity/resource to which it applies.
 * @member {string} [description] The localized friendly description for the
 * operation, as it should be shown to the user. It should be thorough, yet
 * concise - it will be used in tool tips and detailed views.
 */
export interface AvailableProviderOperationDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the AvailableProviderOperation class.
 * @constructor
 * Represents available provider operation.
 *
 * @member {string} [name] The name of the operation being performed on a
 * particular object. Name format:
 * "{resourceProviderNamespace}/{resourceType}/{read|write|delete|action}". Eg.
 * Microsoft.StorSimple/managers/devices/volumeContainers/read,
 * Microsoft.StorSimple/managers/devices/alerts/clearAlerts/action
 * @member {object} [display] Contains the localized display information for
 * this particular operation/action.
 * @member {string} [display.provider] The localized friendly form of the
 * resource provider name - it is expected to also include the
 * publisher/company responsible. It should use Title Casing and begin with
 * 'Microsoft' for 1st party services.
 * @member {string} [display.resource] The localized friendly form of the
 * resource type related to this action/operation - it should match the public
 * documentation for the resource provider. It should use Title Casing - for
 * examples, please refer to the 'name' section.
 * @member {string} [display.operation] The localized friendly name for the
 * operation, as it should be shown to the user. It should be concise (to fit
 * in drop downs) but clear (i.e. self-documenting). It should use Title Casing
 * and include the entity/resource to which it applies.
 * @member {string} [display.description] The localized friendly description
 * for the operation, as it should be shown to the user. It should be thorough,
 * yet concise - it will be used in tool tips and detailed views.
 * @member {string} [origin] The intended executor of the operation; governs
 * the display of the operation in the RBAC UX and the audit logs UX. Default
 * value is "user,system"
 * @member {object} [properties] Reserved for future use.
 */
export interface AvailableProviderOperation {
  name?: string;
  display?: AvailableProviderOperationDisplay;
  origin?: string;
  properties?: any;
}

/**
 * @class
 * Initializes a new instance of the BackupElement class.
 * @constructor
 * The backup element.
 *
 * @member {string} elementId The path ID that uniquely identifies the backup
 * element.
 * @member {string} elementName The name of the backup element.
 * @member {string} elementType The hierarchical type of the backup element.
 * @member {number} sizeInBytes The size in bytes.
 * @member {string} volumeName The name of the volume.
 * @member {string} volumeContainerId The path ID of the volume container.
 * @member {string} [volumeType] The volume type. Possible values include:
 * 'Tiered', 'Archival', 'LocallyPinned'
 */
export interface BackupElement {
  elementId: string;
  elementName: string;
  elementType: string;
  sizeInBytes: number;
  volumeName: string;
  volumeContainerId: string;
  volumeType?: string;
}

/**
 * @class
 * Initializes a new instance of the Backup class.
 * @constructor
 * The backup.
 *
 * @member {date} createdOn The time when the backup was created.
 * @member {number} sizeInBytes The backup size in bytes.
 * @member {string} [backupType] The type of the backup. Possible values
 * include: 'LocalSnapshot', 'CloudSnapshot'
 * @member {string} [backupJobCreationType] The backup job creation type.
 * Possible values include: 'Adhoc', 'BySchedule', 'BySSM'
 * @member {string} [backupPolicyId] The path ID of the backup policy.
 * @member {string} [ssmHostName] The StorSimple Snapshot Manager host name.
 * @member {array} elements The backup elements.
 */
export interface Backup extends BaseModel {
  createdOn: Date;
  sizeInBytes: number;
  backupType?: string;
  backupJobCreationType?: string;
  backupPolicyId?: string;
  ssmHostName?: string;
  elements: BackupElement[];
}

/**
 * @class
 * Initializes a new instance of the BackupFilter class.
 * @constructor
 * The OData filters to be used for backups.
 *
 * @member {string} [backupPolicyId] Specifies the backupPolicyId of the
 * backups to be filtered. Only 'Equality' operator is supported for this
 * property.
 * @member {string} [volumeId] Specifies the volumeId of the backups to be
 * filtered. Only 'Equality' operator is supported for this property.
 * @member {date} [createdTime] Specifies the creation time of the backups to
 * be filtered. Only 'Greater Than or Equal To' and 'Lesser Than or Equal To'
 * operators are supported for this property.
 */
export interface BackupFilter {
  backupPolicyId?: string;
  volumeId?: string;
  createdTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the BackupPolicy class.
 * @constructor
 * The backup policy.
 *
 * @member {array} volumeIds The path IDs of the volumes which are part of the
 * backup policy.
 * @member {date} [nextBackupTime] The time of the next backup for the backup
 * policy.
 * @member {date} [lastBackupTime] The time of the last backup for the backup
 * policy.
 * @member {number} [schedulesCount] The count of schedules the backup policy
 * contains.
 * @member {string} [scheduledBackupStatus] Indicates whether atleast one of
 * the schedules in the backup policy is active or not. Possible values
 * include: 'Disabled', 'Enabled'
 * @member {string} [backupPolicyCreationType] The backup policy creation type.
 * Indicates whether this was created through SaaS or through StorSimple
 * Snapshot Manager. Possible values include: 'BySaaS', 'BySSM'
 * @member {string} [ssmHostName] If the backup policy was created by
 * StorSimple Snapshot Manager, then this field indicates the hostname of the
 * StorSimple Snapshot Manager.
 */
export interface BackupPolicy extends BaseModel {
  volumeIds: string[];
  readonly nextBackupTime?: Date;
  readonly lastBackupTime?: Date;
  readonly schedulesCount?: number;
  readonly scheduledBackupStatus?: string;
  readonly backupPolicyCreationType?: string;
  readonly ssmHostName?: string;
}

/**
 * @class
 * Initializes a new instance of the ScheduleRecurrence class.
 * @constructor
 * The schedule recurrence.
 *
 * @member {string} recurrenceType The recurrence type. Possible values
 * include: 'Minutes', 'Hourly', 'Daily', 'Weekly'
 * @member {number} recurrenceValue The recurrence value.
 * @member {array} [weeklyDaysList] The week days list. Applicable only for
 * schedules of recurrence type 'weekly'.
 */
export interface ScheduleRecurrence {
  recurrenceType: string;
  recurrenceValue: number;
  weeklyDaysList?: string[];
}

/**
 * @class
 * Initializes a new instance of the BackupSchedule class.
 * @constructor
 * The backup schedule.
 *
 * @member {object} scheduleRecurrence The schedule recurrence.
 * @member {string} [scheduleRecurrence.recurrenceType] The recurrence type.
 * Possible values include: 'Minutes', 'Hourly', 'Daily', 'Weekly'
 * @member {number} [scheduleRecurrence.recurrenceValue] The recurrence value.
 * @member {array} [scheduleRecurrence.weeklyDaysList] The week days list.
 * Applicable only for schedules of recurrence type 'weekly'.
 * @member {string} backupType The type of backup which needs to be taken.
 * Possible values include: 'LocalSnapshot', 'CloudSnapshot'
 * @member {number} retentionCount The number of backups to be retained.
 * @member {date} startTime The start time of the schedule.
 * @member {string} scheduleStatus The schedule status. Possible values
 * include: 'Enabled', 'Disabled'
 * @member {date} [lastSuccessfulRun] The last successful backup run which was
 * triggered for the schedule.
 */
export interface BackupSchedule extends BaseModel {
  scheduleRecurrence: ScheduleRecurrence;
  backupType: string;
  retentionCount: number;
  startTime: Date;
  scheduleStatus: string;
  readonly lastSuccessfulRun?: Date;
}

/**
 * @class
 * Initializes a new instance of the Time class.
 * @constructor
 * The time.
 *
 * @member {number} hours The hour.
 * @member {number} minutes The minute.
 * @member {number} seconds The second.
 */
export interface Time {
  hours: number;
  minutes: number;
  seconds: number;
}

/**
 * @class
 * Initializes a new instance of the BandwidthSchedule class.
 * @constructor
 * The schedule for bandwidth setting.
 *
 * @member {object} start The start time of the schdule.
 * @member {number} [start.hours] The hour.
 * @member {number} [start.minutes] The minute.
 * @member {number} [start.seconds] The second.
 * @member {object} stop The stop time of the schedule.
 * @member {number} [stop.hours] The hour.
 * @member {number} [stop.minutes] The minute.
 * @member {number} [stop.seconds] The second.
 * @member {number} rateInMbps The rate in Mbps.
 * @member {array} days The days of the week when this schedule is applicable.
 */
export interface BandwidthSchedule {
  start: Time;
  stop: Time;
  rateInMbps: number;
  days: string[];
}

/**
 * @class
 * Initializes a new instance of the BandwidthSetting class.
 * @constructor
 * The bandwidth setting.
 *
 * @member {array} schedules The schedules.
 * @member {number} [volumeCount] The number of volumes that uses the bandwidth
 * setting.
 */
export interface BandwidthSetting extends BaseModel {
  schedules: BandwidthSchedule[];
  readonly volumeCount?: number;
}

/**
 * @class
 * Initializes a new instance of the ChapSettings class.
 * @constructor
 * The Challenge-Handshake Authentication Protocol (CHAP) settings.
 *
 * @member {string} [initiatorUser] The CHAP initiator user.
 * @member {object} [initiatorSecret] The CHAP initiator secret.
 * @member {string} [initiatorSecret.value] The value of the secret.
 * @member {string} [initiatorSecret.encryptionCertThumbprint] Thumbprint
 * certificate that was used to encrypt "Value". If the value in unencrypted,
 * it will be null.
 * @member {string} [initiatorSecret.encryptionAlgorithm] The algorithm used to
 * encrypt "Value". Possible values include: 'None', 'AES256',
 * 'RSAES_PKCS1_v_1_5'
 * @member {string} [targetUser] The CHAP target user.
 * @member {object} [targetSecret] The target secret.
 * @member {string} [targetSecret.value] The value of the secret.
 * @member {string} [targetSecret.encryptionCertThumbprint] Thumbprint
 * certificate that was used to encrypt "Value". If the value in unencrypted,
 * it will be null.
 * @member {string} [targetSecret.encryptionAlgorithm] The algorithm used to
 * encrypt "Value". Possible values include: 'None', 'AES256',
 * 'RSAES_PKCS1_v_1_5'
 */
export interface ChapSettings {
  initiatorUser?: string;
  initiatorSecret?: AsymmetricEncryptedSecret;
  targetUser?: string;
  targetSecret?: AsymmetricEncryptedSecret;
}

/**
 * @class
 * Initializes a new instance of the ClearAlertRequest class.
 * @constructor
 * The request for clearing the alert
 *
 * @member {string} [resolutionMessage] The resolution message while clearing
 * the alert
 * @member {array} alerts The list of alert IDs to be cleared
 */
export interface ClearAlertRequest {
  resolutionMessage?: string;
  alerts: string[];
}

/**
 * @class
 * Initializes a new instance of the CloneRequest class.
 * @constructor
 * The clone job request.
 *
 * @member {string} targetDeviceId The path ID of the device which will act as
 * the clone target.
 * @member {string} targetVolumeName The name of the new volume which will be
 * created and the backup will be cloned into.
 * @member {array} targetAccessControlRecordIds The list of path IDs of the
 * access control records to be associated to the new cloned volume.
 * @member {object} backupElement The backup element that is cloned.
 * @member {string} [backupElement.elementId] The path ID that uniquely
 * identifies the backup element.
 * @member {string} [backupElement.elementName] The name of the backup element.
 * @member {string} [backupElement.elementType] The hierarchical type of the
 * backup element.
 * @member {number} [backupElement.sizeInBytes] The size in bytes.
 * @member {string} [backupElement.volumeName] The name of the volume.
 * @member {string} [backupElement.volumeContainerId] The path ID of the volume
 * container.
 * @member {string} [backupElement.volumeType] The volume type. Possible values
 * include: 'Tiered', 'Archival', 'LocallyPinned'
 */
export interface CloneRequest {
  targetDeviceId: string;
  targetVolumeName: string;
  targetAccessControlRecordIds: string[];
  backupElement: BackupElement;
}

/**
 * @class
 * Initializes a new instance of the CloudAppliance class.
 * @constructor
 * The cloud appliance.
 *
 * @member {string} name The name.
 * @member {string} [vnetName] The name of the virtual network.
 * @member {string} vnetRegion The virtual network region.
 * @member {boolean} [isVnetDnsConfigured] Indicates whether virtual network
 * used is configured with DNS or not.
 * @member {boolean} [isVnetExpressConfigured] Indicates whether virtual
 * network used is configured with express route or not.
 * @member {string} [subnetName] The name of the subnet.
 * @member {string} [storageAccountName] The name of the storage account.
 * @member {string} [storageAccountType] The type of the storage account.
 * @member {string} [vmType] The type of the virtual machine.
 * @member {string} [vmImageName] The name of the virtual machine image.
 * @member {string} [modelNumber] The model number.
 */
export interface CloudAppliance {
  name: string;
  vnetName?: string;
  vnetRegion: string;
  isVnetDnsConfigured?: boolean;
  isVnetExpressConfigured?: boolean;
  subnetName?: string;
  storageAccountName?: string;
  storageAccountType?: string;
  vmType?: string;
  vmImageName?: string;
  modelNumber?: string;
}

/**
 * @class
 * Initializes a new instance of the VmImage class.
 * @constructor
 * The virtual machine image.
 *
 * @member {string} name The name.
 * @member {string} version The version.
 * @member {string} offer The offer.
 * @member {string} publisher The publisher.
 * @member {string} sku The SKU.
 */
export interface VmImage {
  name: string;
  version: string;
  offer: string;
  publisher: string;
  sku: string;
}

/**
 * @class
 * Initializes a new instance of the CloudApplianceConfiguration class.
 * @constructor
 * The cloud appliance configuration
 *
 * @member {string} modelNumber The model number.
 * @member {string} cloudPlatform The cloud platform.
 * @member {object} acsConfiguration The ACS configuration.
 * @member {string} [acsConfiguration.namespace] The namespace.
 * @member {string} [acsConfiguration.realm] The realm.
 * @member {string} [acsConfiguration.serviceUrl] The service URL.
 * @member {array} supportedStorageAccountTypes The supported storage account
 * types.
 * @member {array} supportedRegions The supported regions.
 * @member {array} supportedVmTypes The supported virtual machine types.
 * @member {array} supportedVmImages The supported virtual machine images.
 */
export interface CloudApplianceConfiguration extends BaseModel {
  modelNumber: string;
  cloudPlatform: string;
  acsConfiguration: AcsConfiguration;
  supportedStorageAccountTypes: string[];
  supportedRegions: string[];
  supportedVmTypes: string[];
  supportedVmImages: VmImage[];
}

/**
 * @class
 * Initializes a new instance of the CloudApplianceSettings class.
 * @constructor
 * The cloud appliance settings.
 *
 * @member {object} [serviceDataEncryptionKey] The service data encryption key
 * (encrypted with DAK).
 * @member {string} [serviceDataEncryptionKey.value] The value of the secret.
 * @member {string} [serviceDataEncryptionKey.encryptionCertThumbprint]
 * Thumbprint certificate that was used to encrypt "Value". If the value in
 * unencrypted, it will be null.
 * @member {string} [serviceDataEncryptionKey.encryptionAlgorithm] The
 * algorithm used to encrypt "Value". Possible values include: 'None',
 * 'AES256', 'RSAES_PKCS1_v_1_5'
 * @member {object} [channelIntegrityKey] The channel integrity key (encrypted
 * with DAK).
 * @member {string} [channelIntegrityKey.value] The value of the secret.
 * @member {string} [channelIntegrityKey.encryptionCertThumbprint] Thumbprint
 * certificate that was used to encrypt "Value". If the value in unencrypted,
 * it will be null.
 * @member {string} [channelIntegrityKey.encryptionAlgorithm] The algorithm
 * used to encrypt "Value". Possible values include: 'None', 'AES256',
 * 'RSAES_PKCS1_v_1_5'
 */
export interface CloudApplianceSettings {
  serviceDataEncryptionKey?: AsymmetricEncryptedSecret;
  channelIntegrityKey?: AsymmetricEncryptedSecret;
}

/**
 * @class
 * Initializes a new instance of the SecondaryDNSSettings class.
 * @constructor
 * The secondary DNS settings.
 *
 * @member {array} [secondaryDnsServers] The list of secondary DNS Server IP
 * addresses.
 */
export interface SecondaryDNSSettings {
  secondaryDnsServers?: string[];
}

/**
 * @class
 * Initializes a new instance of the NetworkInterfaceData0Settings class.
 * @constructor
 * The 'Data 0' network interface card settings.
 *
 * @member {string} [controllerZeroIp] The controller 0's IPv4 address.
 * @member {string} [controllerOneIp] The controller 1's IPv4 address.
 */
export interface NetworkInterfaceData0Settings {
  controllerZeroIp?: string;
  controllerOneIp?: string;
}

/**
 * @class
 * Initializes a new instance of the ConfigureDeviceRequest class.
 * @constructor
 * The mandatory device configuration request.
 *
 * @member {string} friendlyName The friendly name for the device.
 * @member {string} currentDeviceName The current name of the device.
 * @member {string} timeZone The device time zone. For eg: "Pacific Standard
 * Time"
 * @member {object} [dnsSettings] The secondary DNS Settings of the device.
 * @member {array} [dnsSettings.secondaryDnsServers] The list of secondary DNS
 * Server IP addresses.
 * @member {object} [networkInterfaceData0Settings] The 'Data 0' network
 * interface card settings.
 * @member {string} [networkInterfaceData0Settings.controllerZeroIp] The
 * controller 0's IPv4 address.
 * @member {string} [networkInterfaceData0Settings.controllerOneIp] The
 * controller 1's IPv4 address.
 */
export interface ConfigureDeviceRequest extends BaseModel {
  friendlyName: string;
  currentDeviceName: string;
  timeZone: string;
  dnsSettings?: SecondaryDNSSettings;
  networkInterfaceData0Settings?: NetworkInterfaceData0Settings;
}

/**
 * @class
 * Initializes a new instance of the ControllerPowerStateChangeRequest class.
 * @constructor
 * The controller power state change request.
 *
 * @member {string} action The power state that the request is expecting for
 * the controller of the device. Possible values include: 'Start', 'Restart',
 * 'Shutdown'
 * @member {string} activeController The active controller that the request is
 * expecting on the device. Possible values include: 'Unknown', 'None',
 * 'Controller0', 'Controller1'
 * @member {string} controller0State The controller 0's status that the request
 * is expecting on the device. Possible values include: 'NotPresent',
 * 'PoweredOff', 'Ok', 'Recovering', 'Warning', 'Failure'
 * @member {string} controller1State The controller 1's status that the request
 * is expecting on the device. Possible values include: 'NotPresent',
 * 'PoweredOff', 'Ok', 'Recovering', 'Warning', 'Failure'
 */
export interface ControllerPowerStateChangeRequest extends BaseModel {
  action: string;
  activeController: string;
  controller0State: string;
  controller1State: string;
}

/**
 * @class
 * Initializes a new instance of the DataStatistics class.
 * @constructor
 * The additional details related to the data related statistics of a job.
 * Currently applicable only for Backup, Clone and Restore jobs.
 *
 * @member {number} [totalData] The total bytes of data to be processed, as
 * part of the job.
 * @member {number} [processedData] The number of bytes of data processed till
 * now, as part of the job.
 * @member {number} [cloudData] The number of bytes of data written to cloud,
 * as part of the job.
 * @member {number} [throughput] The average throughput of data
 * processed(bytes/sec), as part of the job.
 */
export interface DataStatistics {
  totalData?: number;
  processedData?: number;
  cloudData?: number;
  throughput?: number;
}

/**
 * @class
 * Initializes a new instance of the DeviceDetails class.
 * @constructor
 * The additional device details regarding the end point count and volume
 * container count.
 *
 * @member {number} [endpointCount] The total number of endpoints that are
 * currently on the device ( i.e. number of volumes).
 * @member {number} [volumeContainerCount] The total number of volume
 * containers on the device.
 */
export interface DeviceDetails {
  endpointCount?: number;
  volumeContainerCount?: number;
}

/**
 * @class
 * Initializes a new instance of the DeviceRolloverDetails class.
 * @constructor
 * The additional device details for the service data encryption key rollover.
 *
 * @member {string} [authorizationEligibility] The eligibility status of device
 * for service data encryption key rollover. Possible values include:
 * 'InEligible', 'Eligible'
 * @member {string} [authorizationStatus] The authorization status of the
 * device for service data encryption key rollover. Possible values include:
 * 'Disabled', 'Enabled'
 * @member {string} [inEligibilityReason] The reason for inEligibility of
 * device, in case it's not eligible for service data encryption key rollover.
 * Possible values include: 'DeviceNotOnline', 'NotSupportedAppliance',
 * 'RolloverPending'
 */
export interface DeviceRolloverDetails {
  authorizationEligibility?: string;
  authorizationStatus?: string;
  inEligibilityReason?: string;
}

/**
 * @class
 * Initializes a new instance of the Device class.
 * @constructor
 * The StorSimple device.
 *
 * @member {string} friendlyName The friendly name of the device.
 * @member {date} activationTime The UTC time at which the device was activated
 * @member {string} culture The language culture setting on the device. For eg:
 * "en-US"
 * @member {string} deviceDescription The device description.
 * @member {string} deviceSoftwareVersion The version number of the software
 * running on the device.
 * @member {string} [friendlySoftwareName] The friendly name of the software
 * running on the device.
 * @member {string} deviceConfigurationStatus The current configuration status
 * of the device. Possible values include: 'Complete', 'Pending'
 * @member {string} targetIqn The target IQN.
 * @member {string} modelDescription The device model.
 * @member {string} status The current status of the device. Possible values
 * include: 'Unknown', 'Online', 'Offline', 'Deactivated', 'RequiresAttention',
 * 'MaintenanceMode', 'Creating', 'Provisioning', 'Deactivating', 'Deleted',
 * 'ReadyToSetup'
 * @member {string} serialNumber The serial number.
 * @member {string} deviceType The type of the device. Possible values include:
 * 'Invalid', 'Series8000VirtualAppliance', 'Series8000PhysicalAppliance'
 * @member {string} activeController The identifier of the active controller of
 * the device. Possible values include: 'Unknown', 'None', 'Controller0',
 * 'Controller1'
 * @member {string} friendlySoftwareVersion The device friendly software
 * version.
 * @member {number} [availableLocalStorageInBytes] The storage in bytes that is
 * available locally on the device.
 * @member {number} [availableTieredStorageInBytes] The storage in bytes that
 * is available on the device for tiered volumes.
 * @member {number} [provisionedTieredStorageInBytes] The storage in bytes that
 * has been provisioned on the device for tiered volumes.
 * @member {number} [provisionedLocalStorageInBytes] The storage in bytes used
 * for locally pinned volumes on the device (including additional local
 * reservation).
 * @member {number} [provisionedVolumeSizeInBytes] Total capacity in bytes of
 * tiered and locally pinned volumes on the device
 * @member {number} [usingStorageInBytes] The storage in bytes that is
 * currently being used on the device, including both local and cloud.
 * @member {number} [totalTieredStorageInBytes] The total tiered storage
 * available on the device in bytes.
 * @member {number} [agentGroupVersion] The device agent group version.
 * @member {number} [networkInterfaceCardCount] The number of network interface
 * cards
 * @member {string} [deviceLocation] The location of the virtual appliance.
 * @member {string} [virtualMachineApiType] The virtual machine API type.
 * Possible values include: 'Classic', 'Arm'
 * @member {object} [details] The additional device details regarding the end
 * point count and volume container count.
 * @member {number} [details.endpointCount] The total number of endpoints that
 * are currently on the device ( i.e. number of volumes).
 * @member {number} [details.volumeContainerCount] The total number of volume
 * containers on the device.
 * @member {object} [rolloverDetails] The additional device details for the
 * service data encryption key rollover.
 * @member {string} [rolloverDetails.authorizationEligibility] The eligibility
 * status of device for service data encryption key rollover. Possible values
 * include: 'InEligible', 'Eligible'
 * @member {string} [rolloverDetails.authorizationStatus] The authorization
 * status of the device for service data encryption key rollover. Possible
 * values include: 'Disabled', 'Enabled'
 * @member {string} [rolloverDetails.inEligibilityReason] The reason for
 * inEligibility of device, in case it's not eligible for service data
 * encryption key rollover. Possible values include: 'DeviceNotOnline',
 * 'NotSupportedAppliance', 'RolloverPending'
 */
export interface Device extends BaseModel {
  friendlyName: string;
  activationTime: Date;
  culture: string;
  deviceDescription: string;
  deviceSoftwareVersion: string;
  friendlySoftwareName?: string;
  deviceConfigurationStatus: string;
  targetIqn: string;
  modelDescription: string;
  status: string;
  serialNumber: string;
  deviceType: string;
  activeController: string;
  friendlySoftwareVersion: string;
  availableLocalStorageInBytes?: number;
  availableTieredStorageInBytes?: number;
  provisionedTieredStorageInBytes?: number;
  provisionedLocalStorageInBytes?: number;
  provisionedVolumeSizeInBytes?: number;
  usingStorageInBytes?: number;
  totalTieredStorageInBytes?: number;
  agentGroupVersion?: number;
  networkInterfaceCardCount?: number;
  deviceLocation?: string;
  readonly virtualMachineApiType?: string;
  details?: DeviceDetails;
  rolloverDetails?: DeviceRolloverDetails;
}

/**
 * @class
 * Initializes a new instance of the DevicePatch class.
 * @constructor
 * The device patch.
 *
 * @member {string} [deviceDescription] Short description given for the device
 */
export interface DevicePatch {
  deviceDescription?: string;
}

/**
 * @class
 * Initializes a new instance of the DimensionFilter class.
 * @constructor
 * The dimension filter.
 *
 * @member {string} [name] Specifies the dimension name. E.g.,
 * NetworkInterface. Valid values are the ones specified in the field
 * "dimensions" in the ListMetricDefinitions call. Only 'Equality' operator is
 * supported for this property.
 * @member {string} [values] Specifies the dimension value. E.g., Data0. Valid
 * values are the ones returned in the field "dimensions" in the
 * ListMetricDefinitions call. Only 'Equality' operator is supported for this
 * property.
 */
export interface DimensionFilter {
  name?: string;
  values?: string;
}

/**
 * @class
 * Initializes a new instance of the DNSSettings class.
 * @constructor
 * The DNS(Domain Name Server) settings of a device.
 *
 * @member {string} [primaryDnsServer] The primary IPv4 DNS server for the
 * device
 * @member {string} [primaryIpv6DnsServer] The primary IPv6 DNS server for the
 * device
 * @member {array} [secondaryDnsServers] The secondary IPv4 DNS server for the
 * device
 * @member {array} [secondaryIpv6DnsServers] The secondary IPv6 DNS server for
 * the device
 */
export interface DNSSettings {
  primaryDnsServer?: string;
  primaryIpv6DnsServer?: string;
  secondaryDnsServers?: string[];
  secondaryIpv6DnsServers?: string[];
}

/**
 * @class
 * Initializes a new instance of the EncryptionSettings class.
 * @constructor
 * The encryption settings.
 *
 * @member {string} encryptionStatus The encryption status to indicates if
 * encryption is enabled or not. Possible values include: 'Enabled', 'Disabled'
 * @member {string} keyRolloverStatus The key rollover status to indicates if
 * key rollover is required or not. If secret's encryption has been upgraded,
 * then it requires key rollover. Possible values include: 'Required',
 * 'NotRequired'
 */
export interface EncryptionSettings extends BaseModel {
  encryptionStatus: string;
  keyRolloverStatus: string;
}

/**
 * @class
 * Initializes a new instance of the FailoverRequest class.
 * @constructor
 * The request object for triggering a failover of volume containers, from a
 * source device to a target device.
 *
 * @member {string} [targetDeviceId] The ARM path ID of the device which will
 * act as the failover target.
 * @member {array} [volumeContainers] The list of path IDs of the volume
 * containers which needs to be failed-over to the target device.
 */
export interface FailoverRequest {
  targetDeviceId?: string;
  volumeContainers?: string[];
}

/**
 * @class
 * Initializes a new instance of the VolumeFailoverMetadata class.
 * @constructor
 * The metadata of a volume that has valid cloud snapshot.
 *
 * @member {string} [volumeId] The path ID of the volume.
 * @member {string} [volumeType] The type of the volume. Possible values
 * include: 'Tiered', 'Archival', 'LocallyPinned'
 * @member {number} [sizeInBytes] The size of the volume in bytes at the time
 * the snapshot was taken.
 * @member {date} [backupCreatedDate] The date at which the snapshot was taken.
 * @member {string} [backupElementId] The path ID of the backup-element for
 * this volume, inside the backup set.
 * @member {string} [backupId] The path ID of the backup set.
 * @member {string} [backupPolicyId] The path ID of the backup policy using
 * which the snapshot was taken.
 */
export interface VolumeFailoverMetadata {
  volumeId?: string;
  volumeType?: string;
  sizeInBytes?: number;
  backupCreatedDate?: Date;
  backupElementId?: string;
  backupId?: string;
  backupPolicyId?: string;
}

/**
 * @class
 * Initializes a new instance of the VolumeContainerFailoverMetadata class.
 * @constructor
 * The metadata of the volume container, that is being considered as part of a
 * failover set.
 *
 * @member {string} [volumeContainerId] The path ID of the volume container.
 * @member {array} [volumes] The list of metadata of volumes inside the volume
 * container, which contains valid cloud snapshots.
 */
export interface VolumeContainerFailoverMetadata {
  volumeContainerId?: string;
  volumes?: VolumeFailoverMetadata[];
}

/**
 * @class
 * Initializes a new instance of the FailoverSetEligibilityResult class.
 * @constructor
 * The eligibility result of failover set, for failover.
 *
 * @member {boolean} [isEligibleForFailover] Represents if this failover set is
 * eligible for failover or not.
 * @member {string} [errorMessage] The error message, if the failover set is
 * not eligible for failover.
 */
export interface FailoverSetEligibilityResult {
  isEligibleForFailover?: boolean;
  errorMessage?: string;
}

/**
 * @class
 * Initializes a new instance of the FailoverSet class.
 * @constructor
 * The failover set on a device.
 *
 * @member {array} [volumeContainers] The list of meta data of volume
 * containers, which are part of the failover set.
 * @member {object} [eligibilityResult] The eligibility result of the failover
 * set, for failover.
 * @member {boolean} [eligibilityResult.isEligibleForFailover] Represents if
 * this failover set is eligible for failover or not.
 * @member {string} [eligibilityResult.errorMessage] The error message, if the
 * failover set is not eligible for failover.
 */
export interface FailoverSet {
  volumeContainers?: VolumeContainerFailoverMetadata[];
  eligibilityResult?: FailoverSetEligibilityResult;
}

/**
 * @class
 * Initializes a new instance of the TargetEligibilityErrorMessage class.
 * @constructor
 * The error/warning message due to which the device is ineligible as a
 * failover target device.
 *
 * @member {string} [message] The localized error message stating the reason
 * why the device is not eligible as a target device.
 * @member {string} [resolution] The localized resolution message for the
 * error.
 * @member {string} [resultCode] The result code for the error, due to which
 * the device does not qualify as a failover target device. Possible values
 * include: 'TargetAndSourceCannotBeSameError', 'TargetIsNotOnlineError',
 * 'TargetSourceIncompatibleVersionError',
 * 'LocalToTieredVolumesConversionWarning', 'TargetInsufficientCapacityError',
 * 'TargetInsufficientLocalVolumeMemoryError',
 * 'TargetInsufficientTieredVolumeMemoryError'
 */
export interface TargetEligibilityErrorMessage {
  message?: string;
  resolution?: string;
  resultCode?: string;
}

/**
 * @class
 * Initializes a new instance of the TargetEligibilityResult class.
 * @constructor
 * The eligibility result of device, as a failover target device.
 *
 * @member {string} [eligibilityStatus] The eligibility status of device, as a
 * failover target device. Possible values include: 'NotEligible', 'Eligible'
 * @member {array} [messages] The list of error messages, if a device does not
 * qualify as a failover target device.
 */
export interface TargetEligibilityResult {
  eligibilityStatus?: string;
  messages?: TargetEligibilityErrorMessage[];
}

/**
 * @class
 * Initializes a new instance of the FailoverTarget class.
 * @constructor
 * Represents the eligibility of a device as a failover target device.
 *
 * @member {string} [deviceId] The path ID of the device.
 * @member {string} [deviceStatus] The status of the device. Possible values
 * include: 'Unknown', 'Online', 'Offline', 'Deactivated', 'RequiresAttention',
 * 'MaintenanceMode', 'Creating', 'Provisioning', 'Deactivating', 'Deleted',
 * 'ReadyToSetup'
 * @member {string} [modelDescription] The model number of the device.
 * @member {string} [deviceSoftwareVersion] The software version of the device.
 * @member {number} [dataContainersCount] The count of datacontainers on the
 * device.
 * @member {number} [volumesCount] The count of volumes on the device.
 * @member {number} [availableLocalStorageInBytes] The amount of free local
 * storage available on the device in bytes.
 * @member {number} [availableTieredStorageInBytes] The amount of free tiered
 * storage available for the device in bytes.
 * @member {string} [deviceLocation] The geo location (applicable only for
 * cloud appliances) of the device.
 * @member {string} [friendlyDeviceSoftwareVersion] The friendly name for the
 * current version of software on the device.
 * @member {object} [eligibilityResult] The eligibility result of the device,
 * as a failover target device.
 * @member {string} [eligibilityResult.eligibilityStatus] The eligibility
 * status of device, as a failover target device. Possible values include:
 * 'NotEligible', 'Eligible'
 * @member {array} [eligibilityResult.messages] The list of error messages, if
 * a device does not qualify as a failover target device.
 */
export interface FailoverTarget {
  deviceId?: string;
  deviceStatus?: string;
  modelDescription?: string;
  deviceSoftwareVersion?: string;
  dataContainersCount?: number;
  volumesCount?: number;
  availableLocalStorageInBytes?: number;
  availableTieredStorageInBytes?: number;
  deviceLocation?: string;
  friendlyDeviceSoftwareVersion?: string;
  eligibilityResult?: TargetEligibilityResult;
}

/**
 * @class
 * Initializes a new instance of the Feature class.
 * @constructor
 * The feature.
 *
 * @member {string} name The name of the feature.
 * @member {string} status The feature support status. Possible values include:
 * 'NotAvailable', 'UnsupportedDeviceVersion', 'Supported'
 */
export interface Feature {
  name: string;
  status: string;
}

/**
 * @class
 * Initializes a new instance of the FeatureFilter class.
 * @constructor
 * The OData filter to be used for features.
 *
 * @member {string} [deviceId] Specifies the device ID for which the features
 * are required. Only 'Equality' operator is supported for this property.
 */
export interface FeatureFilter {
  deviceId?: string;
}

/**
 * @class
 * Initializes a new instance of the HardwareComponent class.
 * @constructor
 * The hardware component.
 *
 * @member {string} componentId The component ID.
 * @member {string} displayName The display name of the hardware component.
 * @member {string} status The status of the hardware component. Possible
 * values include: 'Unknown', 'NotPresent', 'PoweredOff', 'Ok', 'Recovering',
 * 'Warning', 'Failure'
 * @member {string} statusDisplayName The display name of the status of
 * hardware component.
 */
export interface HardwareComponent {
  componentId: string;
  displayName: string;
  status: string;
  statusDisplayName: string;
}

/**
 * @class
 * Initializes a new instance of the HardwareComponentGroup class.
 * @constructor
 * The hardware component group.
 *
 * @member {string} displayName The display name the hardware component group.
 * @member {date} lastUpdatedTime The last updated time.
 * @member {array} components The list of hardware components.
 */
export interface HardwareComponentGroup extends BaseModel {
  displayName: string;
  lastUpdatedTime: Date;
  components: HardwareComponent[];
}

/**
 * @class
 * Initializes a new instance of the JobErrorItem class.
 * @constructor
 * The job error items.
 *
 * @member {array} [recommendations] The recommended actions.
 * @member {string} code The error code intended for programmatic access.
 * @member {string} message The error message intended to describe the error in
 * detail.
 */
export interface JobErrorItem {
  recommendations?: string[];
  code: string;
  message: string;
}

/**
 * @class
 * Initializes a new instance of the JobErrorDetails class.
 * @constructor
 * The job error details. Contains list of job error items.
 *
 * @member {array} [errorDetails] The error details.
 * @member {string} code The error code intended for programmatic access.
 * @member {string} message The error message intended to describe the error in
 * detail.
 */
export interface JobErrorDetails {
  errorDetails?: JobErrorItem[];
  code: string;
  message: string;
}

/**
 * @class
 * Initializes a new instance of the JobStage class.
 * @constructor
 * The details about the specific stage of a job.
 *
 * @member {string} [message] The message of the job stage.
 * @member {string} stageStatus The stage status. Possible values include:
 * 'Running', 'Succeeded', 'Failed', 'Canceled'
 * @member {string} [detail] The details of the stage.
 * @member {string} [errorCode] The error code of the stage if any.
 */
export interface JobStage {
  message?: string;
  stageStatus: string;
  detail?: string;
  errorCode?: string;
}

/**
 * @class
 * Initializes a new instance of the Job class.
 * @constructor
 * The job.
 *
 * @member {string} status The current status of the job. Possible values
 * include: 'Running', 'Succeeded', 'Failed', 'Canceled'
 * @member {date} [startTime] The UTC time at which the job was started.
 * @member {date} [endTime] The UTC time at which the job completed.
 * @member {number} percentComplete The percentage of the job that is already
 * complete.
 * @member {object} [error] The error details, if any, for the job.
 * @member {array} [error.errorDetails] The error details.
 * @member {string} [error.code] The error code intended for programmatic
 * access.
 * @member {string} [error.message] The error message intended to describe the
 * error in detail.
 * @member {string} jobType The type of the job. Possible values include:
 * 'ScheduledBackup', 'ManualBackup', 'RestoreBackup', 'CloneVolume',
 * 'FailoverVolumeContainers', 'CreateLocallyPinnedVolume', 'ModifyVolume',
 * 'InstallUpdates', 'SupportPackageLogs', 'CreateCloudAppliance'
 * @member {object} [dataStats] The data statistics properties of the job.
 * @member {number} [dataStats.totalData] The total bytes of data to be
 * processed, as part of the job.
 * @member {number} [dataStats.processedData] The number of bytes of data
 * processed till now, as part of the job.
 * @member {number} [dataStats.cloudData] The number of bytes of data written
 * to cloud, as part of the job.
 * @member {number} [dataStats.throughput] The average throughput of data
 * processed(bytes/sec), as part of the job.
 * @member {string} [entityLabel] The entity identifier for which the job ran.
 * @member {string} [entityType] The entity type for which the job ran.
 * @member {array} [jobStages] The job stages.
 * @member {string} [deviceId] The device ID in which the job ran.
 * @member {boolean} [isCancellable] Represents whether the job is cancellable
 * or not.
 * @member {string} [backupType] The backup type (CloudSnapshot |
 * LocalSnapshot). Applicable only for backup jobs. Possible values include:
 * 'LocalSnapshot', 'CloudSnapshot'
 * @member {string} [sourceDeviceId] The source device ID of the failover job.
 * @member {date} [backupPointInTime] The time of the backup used for the
 * failover.
 */
export interface Job extends BaseModel {
  status: string;
  startTime?: Date;
  endTime?: Date;
  percentComplete: number;
  error?: JobErrorDetails;
  jobType: string;
  dataStats?: DataStatistics;
  entityLabel?: string;
  entityType?: string;
  jobStages?: JobStage[];
  deviceId?: string;
  isCancellable?: boolean;
  backupType?: string;
  sourceDeviceId?: string;
  backupPointInTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the JobFilter class.
 * @constructor
 * The OData filter to be used for jobs.
 *
 * @member {string} [status] Specifies the status of the jobs to be filtered.
 * For e.g., "Running", "Succeeded", "Failed" or "Canceled". Only 'Equality'
 * operator is supported for this property.
 * @member {string} [jobType] Specifies the type of the jobs to be filtered.
 * For e.g., "ScheduledBackup", "ManualBackup", "RestoreBackup", "CloneVolume",
 * "FailoverVolumeContainers", "CreateLocallyPinnedVolume", "ModifyVolume",
 * "InstallUpdates", "SupportPackageLogs", or "CreateCloudAppliance". Only
 * 'Equality' operator can be used for this property.
 * @member {date} [startTime] Specifies the start time of the jobs to be
 * filtered.  Only 'Greater Than or Equal To' and 'Lesser Than or Equal To'
 * operators are supported for this property.
 */
export interface JobFilter {
  status?: string;
  jobType?: string;
  startTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the Key class.
 * @constructor
 * The key.
 *
 * @member {string} activationKey The activation key for the device.
 */
export interface Key {
  activationKey: string;
}

/**
 * @class
 * Initializes a new instance of the ListFailoverTargetsRequest class.
 * @constructor
 * The request object for fetching the list of failover targets (eligible
 * devices for failover).
 *
 * @member {array} [volumeContainers] The list of path IDs of the volume
 * containers that needs to be failed-over, for which we want to fetch the
 * eligible targets.
 */
export interface ListFailoverTargetsRequest {
  volumeContainers?: string[];
}

/**
 * @class
 * Initializes a new instance of the ManagerIntrinsicSettings class.
 * @constructor
 * Intrinsic settings which refers to the type of the Storsimple Manager.
 *
 * @member {string} type The type of StorSimple Manager. Possible values
 * include: 'GardaV1', 'HelsinkiV1'
 */
export interface ManagerIntrinsicSettings {
  type: string;
}

/**
 * @class
 * Initializes a new instance of the ManagerSku class.
 * @constructor
 * The Sku.
 *
 */
export interface ManagerSku {
}

/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * The Azure Resource.
 *
 * @member {string} [id] The resource ID.
 * @member {string} [name] The resource name.
 * @member {string} [type] The resource type.
 * @member {string} location The geo location of the resource.
 * @member {object} [tags] The tags attached to the resource.
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
  location: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the Manager class.
 * @constructor
 * The StorSimple Manager.
 *
 * @member {object} [cisIntrinsicSettings] Represents the type of StorSimple
 * Manager.
 * @member {string} [cisIntrinsicSettings.type] The type of StorSimple Manager.
 * Possible values include: 'GardaV1', 'HelsinkiV1'
 * @member {string} [provisioningState] Specifies the state of the resource as
 * it is getting provisioned. Value of "Succeeded" means the Manager was
 * successfully created.
 * @member {string} [etag] The etag of the manager.
 */
export interface Manager extends Resource {
  cisIntrinsicSettings?: ManagerIntrinsicSettings;
  provisioningState?: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagerExtendedInfo class.
 * @constructor
 * The extended info of the manager.
 *
 * @member {string} [version] The version of the extended info being persisted.
 * @member {string} integrityKey Represents the CIK of the resource.
 * @member {string} [encryptionKey] Represents the CEK of the resource.
 * @member {string} [encryptionKeyThumbprint] Represents the Cert thumbprint
 * that was used to encrypt the CEK.
 * @member {string} [portalCertificateThumbprint] Represents the portal
 * thumbprint which can be used optionally to encrypt the entire data before
 * storing it.
 * @member {string} algorithm Represents the encryption algorithm used to
 * encrypt the keys. None - if Key is saved in plain text format. Algorithm
 * name - if key is encrypted
 * @member {string} [etag] The etag of the resource.
 */
export interface ManagerExtendedInfo extends BaseModel {
  version?: string;
  integrityKey: string;
  encryptionKey?: string;
  encryptionKeyThumbprint?: string;
  portalCertificateThumbprint?: string;
  algorithm: string;
  etag?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagerPatch class.
 * @constructor
 * The StorSimple Manager patch.
 *
 * @member {object} [tags] The tags attached to the Manager.
 */
export interface ManagerPatch {
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the MetricAvailablity class.
 * @constructor
 * The metric availability.
 *
 * @member {string} [timeGrain] The aggregation interval for the metric.
 * @member {string} [retention] The retention period for the metric at the
 * specified timegrain.
 */
export interface MetricAvailablity {
  timeGrain?: string;
  retention?: string;
}

/**
 * @class
 * Initializes a new instance of the MetricData class.
 * @constructor
 * The metric data.
 *
 * @member {date} [timeStamp] The time stamp of the metric data.
 * @member {number} [sum] The sum of all samples at the time stamp.
 * @member {number} [count] The count of all samples at the time stamp.
 * @member {number} [average] The average of all samples at the time stamp.
 * @member {number} [minimum] The minimum of all samples at the time stamp.
 * @member {number} [maximum] The maximum of all samples at the time stamp.
 */
export interface MetricData {
  timeStamp?: Date;
  sum?: number;
  count?: number;
  average?: number;
  minimum?: number;
  maximum?: number;
}

/**
 * @class
 * Initializes a new instance of the MetricName class.
 * @constructor
 * The metric name.
 *
 * @member {string} [value] The metric name.
 * @member {string} [localizedValue] The localized metric name.
 */
export interface MetricName {
  value?: string;
  localizedValue?: string;
}

/**
 * @class
 * Initializes a new instance of the MetricDimension class.
 * @constructor
 * The metric dimension. It indicates the source of the metric.
 *
 * @member {string} [name] The metric dimension name.
 * @member {string} [value] The metric dimension values.
 */
export interface MetricDimension {
  name?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the MetricDefinition class.
 * @constructor
 * The monitoring metric definition.
 *
 * @member {object} [name] The metric name.
 * @member {string} [name.value] The metric name.
 * @member {string} [name.localizedValue] The localized metric name.
 * @member {string} [unit] The metric unit. Possible values include: 'Bytes',
 * 'BytesPerSecond', 'Count', 'CountPerSecond', 'Percent', 'Seconds'
 * @member {string} [primaryAggregationType] The metric aggregation type.
 * Possible values include: 'Average', 'Last', 'Maximum', 'Minimum', 'None',
 * 'Total'
 * @member {string} [resourceId] The metric source ID.
 * @member {array} [metricAvailabilities] The available metric granularities.
 * @member {array} [dimensions] The available metric dimensions.
 * @member {string} [category] The category of the metric.
 * @member {string} [type] The metric definition type.
 */
export interface MetricDefinition {
  name?: MetricName;
  unit?: string;
  primaryAggregationType?: string;
  resourceId?: string;
  metricAvailabilities?: MetricAvailablity[];
  dimensions?: MetricDimension[];
  category?: string;
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the MetricNameFilter class.
 * @constructor
 * The metric name filter, specifying the name of the metric to be filtered on.
 *
 * @member {string} [value] Specifies the metric name to be filtered on. E.g.,
 * CloudStorageUsed. Valid values are the ones returned in the field "name" in
 * the ListMetricDefinitions call. Only 'Equality' operator is supported for
 * this property.
 */
export interface MetricNameFilter {
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the MetricFilter class.
 * @constructor
 * The OData filters to be used for metrics.
 *
 * @member {object} [name] Specifies the metric name filter specifying the name
 * of the metric to be filtered on. Only 'Equality' operator is supported for
 * this property.
 * @member {string} [name.value] Specifies the metric name to be filtered on.
 * E.g., CloudStorageUsed. Valid values are the ones returned in the field
 * "name" in the ListMetricDefinitions call. Only 'Equality' operator is
 * supported for this property.
 * @member {date} [startTime] Specifies the start time of the time range to be
 * queried. Only 'Greater Than Or Equal To' operator is supported for this
 * property.
 * @member {date} [endTime] Specifies the end time of the time range to be
 * queried. Only 'Less Than Or Equal To' operator is supported for this
 * property.
 * @member {string} [timeGrain] Specifies the time granularity of the metrics
 * to be returned. E.g., "P1D". Valid values are the ones returned as the field
 * "timeGrain" in the ListMetricDefinitions call. Only 'Equality' operator is
 * supported for this property.
 * @member {string} category Specifies the category of the metrics to be
 * filtered. E.g., "CapacityUtilization". Valid values are the ones returned as
 * the field "category" in the ListMetricDefinitions call. Only 'Equality'
 * operator is supported for this property.
 * @member {object} [dimensions] Specifies the source(the dimension) of the
 * metrics to be filtered. Only 'Equality' operator is supported for this
 * property.
 * @member {string} [dimensions.name] Specifies the dimension name. E.g.,
 * NetworkInterface. Valid values are the ones specified in the field
 * "dimensions" in the ListMetricDefinitions call. Only 'Equality' operator is
 * supported for this property.
 * @member {string} [dimensions.values] Specifies the dimension value. E.g.,
 * Data0. Valid values are the ones returned in the field "dimensions" in the
 * ListMetricDefinitions call. Only 'Equality' operator is supported for this
 * property.
 */
export interface MetricFilter {
  name?: MetricNameFilter;
  startTime?: Date;
  endTime?: Date;
  timeGrain?: string;
  category: string;
  dimensions?: DimensionFilter;
}

/**
 * @class
 * Initializes a new instance of the Metrics class.
 * @constructor
 * The monitoring metric.
 *
 * @member {string} [resourceId] The ID of metric source.
 * @member {date} [startTime] The start time of the metric data.
 * @member {date} [endTime] The end time of the metric data.
 * @member {string} [timeGrain] The time granularity of the metric data.
 * @member {string} [primaryAggregation] The metric aggregation type. Possible
 * values include: 'Average', 'Last', 'Maximum', 'Minimum', 'None', 'Total'
 * @member {object} [name] The name of the metric.
 * @member {string} [name.value] The metric name.
 * @member {string} [name.localizedValue] The localized metric name.
 * @member {array} [dimensions] The metric dimensions.
 * @member {string} [unit] The unit of the metric data. Possible values
 * include: 'Bytes', 'BytesPerSecond', 'Count', 'CountPerSecond', 'Percent',
 * 'Seconds'
 * @member {string} [type] The type of the metric data.
 * @member {array} [values] The list of the metric data.
 */
export interface Metrics {
  resourceId?: string;
  startTime?: Date;
  endTime?: Date;
  timeGrain?: string;
  primaryAggregation?: string;
  name?: MetricName;
  dimensions?: MetricDimension[];
  unit?: string;
  type?: string;
  values?: MetricData[];
}

/**
 * @class
 * Initializes a new instance of the NicIPv4 class.
 * @constructor
 * Details related to the IPv4 address configuration.
 *
 * @member {string} [ipv4Address] The IPv4 address of the network adapter.
 * @member {string} [ipv4Netmask] The IPv4 netmask of the network adapter.
 * @member {string} [ipv4Gateway] The IPv4 gateway of the network adapter.
 * @member {string} [controller0Ipv4Address] The IPv4 address of Controller0.
 * @member {string} [controller1Ipv4Address] The IPv4 address of Controller1.
 */
export interface NicIPv4 {
  ipv4Address?: string;
  ipv4Netmask?: string;
  ipv4Gateway?: string;
  controller0Ipv4Address?: string;
  controller1Ipv4Address?: string;
}

/**
 * @class
 * Initializes a new instance of the NicIPv6 class.
 * @constructor
 * Details related to the IPv6 address configuration.
 *
 * @member {string} [ipv6Address] The IPv6 address of the network adapter.
 * @member {string} [ipv6Prefix] The IPv6 prefix of the network adapter.
 * @member {string} [ipv6Gateway] The IPv6 gateway of the network adapter.
 * @member {string} [controller0Ipv6Address] The IPv6 address of Controller0.
 * @member {string} [controller1Ipv6Address] The IPv6 address of Controller1.
 */
export interface NicIPv6 {
  ipv6Address?: string;
  ipv6Prefix?: string;
  ipv6Gateway?: string;
  controller0Ipv6Address?: string;
  controller1Ipv6Address?: string;
}

/**
 * @class
 * Initializes a new instance of the NetworkAdapters class.
 * @constructor
 * Represents the network adapter on device.
 *
 * @member {string} interfaceId The ID of the network adapter. Possible values
 * include: 'Invalid', 'Data0', 'Data1', 'Data2', 'Data3', 'Data4', 'Data5'
 * @member {string} netInterfaceStatus Value indicating status of network
 * adapter. Possible values include: 'Enabled', 'Disabled'
 * @member {boolean} [isDefault] Value indicating whether this instance is
 * default.
 * @member {string} iscsiAndCloudStatus Value indicating cloud and ISCSI status
 * of network adapter. Possible values include: 'Disabled', 'IscsiEnabled',
 * 'CloudEnabled', 'IscsiAndCloudEnabled'
 * @member {number} [speed] The speed of the network adapter.
 * @member {string} mode The mode of network adapter, either IPv4, IPv6 or
 * both. Possible values include: 'Invalid', 'IPV4', 'IPV6', 'BOTH'
 * @member {object} [nicIpv4Settings] The IPv4 configuration of the network
 * adapter.
 * @member {string} [nicIpv4Settings.ipv4Address] The IPv4 address of the
 * network adapter.
 * @member {string} [nicIpv4Settings.ipv4Netmask] The IPv4 netmask of the
 * network adapter.
 * @member {string} [nicIpv4Settings.ipv4Gateway] The IPv4 gateway of the
 * network adapter.
 * @member {string} [nicIpv4Settings.controller0Ipv4Address] The IPv4 address
 * of Controller0.
 * @member {string} [nicIpv4Settings.controller1Ipv4Address] The IPv4 address
 * of Controller1.
 * @member {object} [nicIpv6Settings] The IPv6 configuration of the network
 * adapter.
 * @member {string} [nicIpv6Settings.ipv6Address] The IPv6 address of the
 * network adapter.
 * @member {string} [nicIpv6Settings.ipv6Prefix] The IPv6 prefix of the network
 * adapter.
 * @member {string} [nicIpv6Settings.ipv6Gateway] The IPv6 gateway of the
 * network adapter.
 * @member {string} [nicIpv6Settings.controller0Ipv6Address] The IPv6 address
 * of Controller0.
 * @member {string} [nicIpv6Settings.controller1Ipv6Address] The IPv6 address
 * of Controller1.
 */
export interface NetworkAdapters {
  interfaceId: string;
  netInterfaceStatus: string;
  isDefault?: boolean;
  iscsiAndCloudStatus: string;
  speed?: number;
  mode: string;
  nicIpv4Settings?: NicIPv4;
  nicIpv6Settings?: NicIPv6;
}

/**
 * @class
 * Initializes a new instance of the NetworkAdapterList class.
 * @constructor
 * The collection of network adapters on the device.
 *
 * @member {array} value The value.
 */
export interface NetworkAdapterList {
  value: NetworkAdapters[];
}

/**
 * @class
 * Initializes a new instance of the WebproxySettings class.
 * @constructor
 * The web proxy settings on the device.
 *
 * @member {string} [connectionUri] The connection URI.
 * @member {string} authentication The authentication type. Possible values
 * include: 'Invalid', 'None', 'Basic', 'NTLM'
 * @member {string} username The webproxy username.
 */
export interface WebproxySettings {
  connectionUri?: string;
  authentication: string;
  username: string;
}

/**
 * @class
 * Initializes a new instance of the NetworkSettings class.
 * @constructor
 * Represents the network settings of a device.
 *
 * @member {object} dnsSettings The DNS (Domain Name System) settings of
 * device.
 * @member {string} [dnsSettings.primaryDnsServer] The primary IPv4 DNS server
 * for the device
 * @member {string} [dnsSettings.primaryIpv6DnsServer] The primary IPv6 DNS
 * server for the device
 * @member {array} [dnsSettings.secondaryDnsServers] The secondary IPv4 DNS
 * server for the device
 * @member {array} [dnsSettings.secondaryIpv6DnsServers] The secondary IPv6 DNS
 * server for the device
 * @member {object} networkAdapters The network adapter list of device.
 * @member {array} [networkAdapters.value] The value.
 * @member {object} webproxySettings The webproxy settings of device.
 * @member {string} [webproxySettings.connectionUri] The connection URI.
 * @member {string} [webproxySettings.authentication] The authentication type.
 * Possible values include: 'Invalid', 'None', 'Basic', 'NTLM'
 * @member {string} [webproxySettings.username] The webproxy username.
 */
export interface NetworkSettings extends BaseModel {
  dnsSettings: DNSSettings;
  networkAdapters: NetworkAdapterList;
  webproxySettings: WebproxySettings;
}

/**
 * @class
 * Initializes a new instance of the NetworkSettingsPatch class.
 * @constructor
 * Represents the patch request for the network settings of a device.
 *
 * @member {object} [dnsSettings] The DNS (Domain Name System) settings of
 * device.
 * @member {string} [dnsSettings.primaryDnsServer] The primary IPv4 DNS server
 * for the device
 * @member {string} [dnsSettings.primaryIpv6DnsServer] The primary IPv6 DNS
 * server for the device
 * @member {array} [dnsSettings.secondaryDnsServers] The secondary IPv4 DNS
 * server for the device
 * @member {array} [dnsSettings.secondaryIpv6DnsServers] The secondary IPv6 DNS
 * server for the device
 * @member {object} [networkAdapters] The network adapter list of device.
 * @member {array} [networkAdapters.value] The value.
 */
export interface NetworkSettingsPatch {
  dnsSettings?: DNSSettings;
  networkAdapters?: NetworkAdapterList;
}

/**
 * @class
 * Initializes a new instance of the PublicKey class.
 * @constructor
 * The public key.
 *
 * @member {string} key The key.
 */
export interface PublicKey {
  key: string;
}

/**
 * @class
 * Initializes a new instance of the RemoteManagementSettings class.
 * @constructor
 * The settings for remote management of a device.
 *
 * @member {string} remoteManagementMode The remote management mode. Possible
 * values include: 'Unknown', 'Disabled', 'HttpsEnabled', 'HttpsAndHttpEnabled'
 * @member {string} [remoteManagementCertificate] The remote management
 * certificates.
 */
export interface RemoteManagementSettings {
  remoteManagementMode: string;
  remoteManagementCertificate?: string;
}

/**
 * @class
 * Initializes a new instance of the RemoteManagementSettingsPatch class.
 * @constructor
 * The settings for updating remote management mode of the device.
 *
 * @member {string} remoteManagementMode The remote management mode. Possible
 * values include: 'Unknown', 'Disabled', 'HttpsEnabled', 'HttpsAndHttpEnabled'
 */
export interface RemoteManagementSettingsPatch {
  remoteManagementMode: string;
}

/**
 * @class
 * Initializes a new instance of the SecuritySettings class.
 * @constructor
 * The security settings of a device.
 *
 * @member {object} remoteManagementSettings The settings for remote management
 * of a device.
 * @member {string} [remoteManagementSettings.remoteManagementMode] The remote
 * management mode. Possible values include: 'Unknown', 'Disabled',
 * 'HttpsEnabled', 'HttpsAndHttpEnabled'
 * @member {string} [remoteManagementSettings.remoteManagementCertificate] The
 * remote management certificates.
 * @member {object} chapSettings The Challenge-Handshake Authentication
 * Protocol (CHAP) settings.
 * @member {string} [chapSettings.initiatorUser] The CHAP initiator user.
 * @member {object} [chapSettings.initiatorSecret] The CHAP initiator secret.
 * @member {string} [chapSettings.initiatorSecret.value] The value of the
 * secret.
 * @member {string} [chapSettings.initiatorSecret.encryptionCertThumbprint]
 * Thumbprint certificate that was used to encrypt "Value". If the value in
 * unencrypted, it will be null.
 * @member {string} [chapSettings.initiatorSecret.encryptionAlgorithm] The
 * algorithm used to encrypt "Value". Possible values include: 'None',
 * 'AES256', 'RSAES_PKCS1_v_1_5'
 * @member {string} [chapSettings.targetUser] The CHAP target user.
 * @member {object} [chapSettings.targetSecret] The target secret.
 * @member {string} [chapSettings.targetSecret.value] The value of the secret.
 * @member {string} [chapSettings.targetSecret.encryptionCertThumbprint]
 * Thumbprint certificate that was used to encrypt "Value". If the value in
 * unencrypted, it will be null.
 * @member {string} [chapSettings.targetSecret.encryptionAlgorithm] The
 * algorithm used to encrypt "Value". Possible values include: 'None',
 * 'AES256', 'RSAES_PKCS1_v_1_5'
 */
export interface SecuritySettings extends BaseModel {
  remoteManagementSettings: RemoteManagementSettings;
  chapSettings: ChapSettings;
}

/**
 * @class
 * Initializes a new instance of the SecuritySettingsPatch class.
 * @constructor
 * Represents the patch request for the security settings of a device.
 *
 * @member {object} [remoteManagementSettings] The remote management settings.
 * @member {string} [remoteManagementSettings.remoteManagementMode] The remote
 * management mode. Possible values include: 'Unknown', 'Disabled',
 * 'HttpsEnabled', 'HttpsAndHttpEnabled'
 * @member {object} [deviceAdminPassword] The device administrator password.
 * @member {string} [deviceAdminPassword.value] The value of the secret.
 * @member {string} [deviceAdminPassword.encryptionCertThumbprint] Thumbprint
 * certificate that was used to encrypt "Value". If the value in unencrypted,
 * it will be null.
 * @member {string} [deviceAdminPassword.encryptionAlgorithm] The algorithm
 * used to encrypt "Value". Possible values include: 'None', 'AES256',
 * 'RSAES_PKCS1_v_1_5'
 * @member {object} [snapshotPassword] The snapshot manager password.
 * @member {string} [snapshotPassword.value] The value of the secret.
 * @member {string} [snapshotPassword.encryptionCertThumbprint] Thumbprint
 * certificate that was used to encrypt "Value". If the value in unencrypted,
 * it will be null.
 * @member {string} [snapshotPassword.encryptionAlgorithm] The algorithm used
 * to encrypt "Value". Possible values include: 'None', 'AES256',
 * 'RSAES_PKCS1_v_1_5'
 * @member {object} [chapSettings] The device CHAP and reverse-CHAP settings.
 * @member {string} [chapSettings.initiatorUser] The CHAP initiator user.
 * @member {object} [chapSettings.initiatorSecret] The CHAP initiator secret.
 * @member {string} [chapSettings.initiatorSecret.value] The value of the
 * secret.
 * @member {string} [chapSettings.initiatorSecret.encryptionCertThumbprint]
 * Thumbprint certificate that was used to encrypt "Value". If the value in
 * unencrypted, it will be null.
 * @member {string} [chapSettings.initiatorSecret.encryptionAlgorithm] The
 * algorithm used to encrypt "Value". Possible values include: 'None',
 * 'AES256', 'RSAES_PKCS1_v_1_5'
 * @member {string} [chapSettings.targetUser] The CHAP target user.
 * @member {object} [chapSettings.targetSecret] The target secret.
 * @member {string} [chapSettings.targetSecret.value] The value of the secret.
 * @member {string} [chapSettings.targetSecret.encryptionCertThumbprint]
 * Thumbprint certificate that was used to encrypt "Value". If the value in
 * unencrypted, it will be null.
 * @member {string} [chapSettings.targetSecret.encryptionAlgorithm] The
 * algorithm used to encrypt "Value". Possible values include: 'None',
 * 'AES256', 'RSAES_PKCS1_v_1_5'
 * @member {object} [cloudApplianceSettings] The cloud appliance settings.
 * @member {object} [cloudApplianceSettings.serviceDataEncryptionKey] The
 * service data encryption key (encrypted with DAK).
 * @member {string} [cloudApplianceSettings.serviceDataEncryptionKey.value] The
 * value of the secret.
 * @member {string}
 * [cloudApplianceSettings.serviceDataEncryptionKey.encryptionCertThumbprint]
 * Thumbprint certificate that was used to encrypt "Value". If the value in
 * unencrypted, it will be null.
 * @member {string}
 * [cloudApplianceSettings.serviceDataEncryptionKey.encryptionAlgorithm] The
 * algorithm used to encrypt "Value". Possible values include: 'None',
 * 'AES256', 'RSAES_PKCS1_v_1_5'
 * @member {object} [cloudApplianceSettings.channelIntegrityKey] The channel
 * integrity key (encrypted with DAK).
 * @member {string} [cloudApplianceSettings.channelIntegrityKey.value] The
 * value of the secret.
 * @member {string}
 * [cloudApplianceSettings.channelIntegrityKey.encryptionCertThumbprint]
 * Thumbprint certificate that was used to encrypt "Value". If the value in
 * unencrypted, it will be null.
 * @member {string}
 * [cloudApplianceSettings.channelIntegrityKey.encryptionAlgorithm] The
 * algorithm used to encrypt "Value". Possible values include: 'None',
 * 'AES256', 'RSAES_PKCS1_v_1_5'
 */
export interface SecuritySettingsPatch {
  remoteManagementSettings?: RemoteManagementSettingsPatch;
  deviceAdminPassword?: AsymmetricEncryptedSecret;
  snapshotPassword?: AsymmetricEncryptedSecret;
  chapSettings?: ChapSettings;
  cloudApplianceSettings?: CloudApplianceSettings;
}

/**
 * @class
 * Initializes a new instance of the SendTestAlertEmailRequest class.
 * @constructor
 * The request for sending test alert email
 *
 * @member {array} emailList The list of email IDs to send the test alert email
 */
export interface SendTestAlertEmailRequest {
  emailList: string[];
}

/**
 * @class
 * Initializes a new instance of the StorageAccountCredential class.
 * @constructor
 * The storage account credential.
 *
 * @member {string} endPoint The storage endpoint
 * @member {string} sslStatus Signifies whether SSL needs to be enabled or not.
 * Possible values include: 'Enabled', 'Disabled'
 * @member {object} [accessKey] The details of the storage account password.
 * @member {string} [accessKey.value] The value of the secret.
 * @member {string} [accessKey.encryptionCertThumbprint] Thumbprint certificate
 * that was used to encrypt "Value". If the value in unencrypted, it will be
 * null.
 * @member {string} [accessKey.encryptionAlgorithm] The algorithm used to
 * encrypt "Value". Possible values include: 'None', 'AES256',
 * 'RSAES_PKCS1_v_1_5'
 * @member {number} [volumesCount] The count of volumes using this storage
 * account credential.
 */
export interface StorageAccountCredential extends BaseModel {
  endPoint: string;
  sslStatus: string;
  accessKey?: AsymmetricEncryptedSecret;
  readonly volumesCount?: number;
}

/**
 * @class
 * Initializes a new instance of the SymmetricEncryptedSecret class.
 * @constructor
 * Represents the secrets encrypted using Symmetric Encryption Key.
 *
 * @member {string} value The value of the secret itself. If the secret is in
 * plaintext or null then EncryptionAlgorithm will be none.
 * @member {string} [valueCertificateThumbprint] The thumbprint of the cert
 * that was used to encrypt "Value".
 * @member {string} encryptionAlgorithm The algorithm used to encrypt the
 * "Value". Possible values include: 'None', 'AES256', 'RSAES_PKCS1_v_1_5'
 */
export interface SymmetricEncryptedSecret {
  value: string;
  valueCertificateThumbprint?: string;
  encryptionAlgorithm: string;
}

/**
 * @class
 * Initializes a new instance of the TimeSettings class.
 * @constructor
 * The time settings of a device.
 *
 * @member {string} timeZone The timezone of device, like '(UTC -06:00) Central
 * America'
 * @member {string} [primaryTimeServer] The primary Network Time Protocol (NTP)
 * server name, like 'time.windows.com'.
 * @member {array} [secondaryTimeServer] The secondary Network Time Protocol
 * (NTP) server name, like 'time.contoso.com'. It's optional.
 */
export interface TimeSettings extends BaseModel {
  timeZone: string;
  primaryTimeServer?: string;
  secondaryTimeServer?: string[];
}

/**
 * @class
 * Initializes a new instance of the Updates class.
 * @constructor
 * The updates profile of a device.
 *
 * @member {boolean} [regularUpdatesAvailable] Set to 'true' if regular updates
 * are available for the device.
 * @member {boolean} [maintenanceModeUpdatesAvailable] Set to 'true' if
 * maintenance mode update available.
 * @member {boolean} [isUpdateInProgress] Indicates whether an update is in
 * progress or not.
 * @member {date} [lastUpdatedTime] The time when the last update was
 * completed.
 */
export interface Updates extends BaseModel {
  regularUpdatesAvailable?: boolean;
  maintenanceModeUpdatesAvailable?: boolean;
  isUpdateInProgress?: boolean;
  lastUpdatedTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the Volume class.
 * @constructor
 * The volume.
 *
 * @member {number} sizeInBytes The size of the volume in bytes.
 * @member {string} volumeType The type of the volume. Possible values include:
 * 'Tiered', 'Archival', 'LocallyPinned'
 * @member {string} [volumeContainerId] The ID of the volume container, in
 * which this volume is created.
 * @member {array} accessControlRecordIds The IDs of the access control
 * records, associated with the volume.
 * @member {string} volumeStatus The volume status. Possible values include:
 * 'Online', 'Offline'
 * @member {string} [operationStatus] The operation status on the volume.
 * Possible values include: 'None', 'Updating', 'Deleting', 'Restoring'
 * @member {string} [backupStatus] The backup status of the volume. Possible
 * values include: 'Enabled', 'Disabled'
 * @member {string} monitoringStatus The monitoring status of the volume.
 * Possible values include: 'Enabled', 'Disabled'
 * @member {array} [backupPolicyIds] The IDs of the backup policies, in which
 * this volume is part of.
 */
export interface Volume extends BaseModel {
  sizeInBytes: number;
  volumeType: string;
  readonly volumeContainerId?: string;
  accessControlRecordIds: string[];
  volumeStatus: string;
  readonly operationStatus?: string;
  readonly backupStatus?: string;
  monitoringStatus: string;
  readonly backupPolicyIds?: string[];
}

/**
 * @class
 * Initializes a new instance of the VolumeContainer class.
 * @constructor
 * The volume container.
 *
 * @member {object} [encryptionKey] The key used to encrypt data in the volume
 * container. It is required when property 'EncryptionStatus' is "Enabled".
 * @member {string} [encryptionKey.value] The value of the secret.
 * @member {string} [encryptionKey.encryptionCertThumbprint] Thumbprint
 * certificate that was used to encrypt "Value". If the value in unencrypted,
 * it will be null.
 * @member {string} [encryptionKey.encryptionAlgorithm] The algorithm used to
 * encrypt "Value". Possible values include: 'None', 'AES256',
 * 'RSAES_PKCS1_v_1_5'
 * @member {string} [encryptionStatus] The flag to denote whether encryption is
 * enabled or not. Possible values include: 'Enabled', 'Disabled'
 * @member {number} [volumeCount] The number of volumes in the volume
 * Container.
 * @member {string} storageAccountCredentialId The path ID of storage account
 * associated with the volume container.
 * @member {string} [ownerShipStatus] The owner ship status of the volume
 * container. Only when the status is "NotOwned", the delete operation on the
 * volume container is permitted. Possible values include: 'Owned', 'NotOwned'
 * @member {number} [bandWidthRateInMbps] The bandwidth-rate set on the volume
 * container.
 * @member {string} [bandwidthSettingId] The ID of the bandwidth setting
 * associated with the volume container.
 * @member {number} [totalCloudStorageUsageInBytes] The total cloud storage for
 * the volume container.
 */
export interface VolumeContainer extends BaseModel {
  encryptionKey?: AsymmetricEncryptedSecret;
  readonly encryptionStatus?: string;
  readonly volumeCount?: number;
  storageAccountCredentialId: string;
  readonly ownerShipStatus?: string;
  bandWidthRateInMbps?: number;
  bandwidthSettingId?: string;
  readonly totalCloudStorageUsageInBytes?: number;
}


/**
 * @class
 * Initializes a new instance of the AvailableProviderOperationList class.
 * @constructor
 * List of available provider operations.
 *
 * @member {string} [nextLink] The NextLink.
 */
export interface AvailableProviderOperationList extends Array<AvailableProviderOperation> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagerList class.
 * @constructor
 * The list of StorSimple Managers.
 *
 */
export interface ManagerList extends Array<Manager> {
}

/**
 * @class
 * Initializes a new instance of the FeatureList class.
 * @constructor
 * The collections of features.
 *
 */
export interface FeatureList extends Array<Feature> {
}

/**
 * @class
 * Initializes a new instance of the MetricList class.
 * @constructor
 * The metric list.
 *
 */
export interface MetricList extends Array<Metrics> {
}

/**
 * @class
 * Initializes a new instance of the MetricDefinitionList class.
 * @constructor
 * The list of metric definitions.
 *
 */
export interface MetricDefinitionList extends Array<MetricDefinition> {
}

/**
 * @class
 * Initializes a new instance of the AccessControlRecordList class.
 * @constructor
 * The collection of access control records.
 *
 */
export interface AccessControlRecordList extends Array<AccessControlRecord> {
}

/**
 * @class
 * Initializes a new instance of the AlertList class.
 * @constructor
 * The collection of alerts.
 *
 * @member {string} [nextLink] The URI of the next page of alerts.
 */
export interface AlertList extends Array<Alert> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the BandwidthSettingList class.
 * @constructor
 * The collection of bandwidth setting entities.
 *
 */
export interface BandwidthSettingList extends Array<BandwidthSetting> {
}

/**
 * @class
 * Initializes a new instance of the CloudApplianceConfigurationList class.
 * @constructor
 * The cloud appliance configuration list
 *
 */
export interface CloudApplianceConfigurationList extends Array<CloudApplianceConfiguration> {
}

/**
 * @class
 * Initializes a new instance of the DeviceList class.
 * @constructor
 * The collection of devices.
 *
 */
export interface DeviceList extends Array<Device> {
}

/**
 * @class
 * Initializes a new instance of the FailoverSetsList class.
 * @constructor
 * The list of failover sets.
 *
 */
export interface FailoverSetsList extends Array<FailoverSet> {
}

/**
 * @class
 * Initializes a new instance of the FailoverTargetsList class.
 * @constructor
 * The list of all devices in a resource and their eligibility status as a
 * failover target device.
 *
 */
export interface FailoverTargetsList extends Array<FailoverTarget> {
}

/**
 * @class
 * Initializes a new instance of the BackupPolicyList class.
 * @constructor
 * The collection of backup policies.
 *
 */
export interface BackupPolicyList extends Array<BackupPolicy> {
}

/**
 * @class
 * Initializes a new instance of the BackupScheduleList class.
 * @constructor
 * The backup schedule list.
 *
 */
export interface BackupScheduleList extends Array<BackupSchedule> {
}

/**
 * @class
 * Initializes a new instance of the BackupList class.
 * @constructor
 * The collection of backups.
 *
 * @member {string} [nextLink] The NextLink.
 */
export interface BackupList extends Array<Backup> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the HardwareComponentGroupList class.
 * @constructor
 * The collection of hardware component groups.
 *
 */
export interface HardwareComponentGroupList extends Array<HardwareComponentGroup> {
}

/**
 * @class
 * Initializes a new instance of the JobList class.
 * @constructor
 * The collection of jobs.
 *
 * @member {string} [nextLink] The NextLink.
 */
export interface JobList extends Array<Job> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VolumeContainerList class.
 * @constructor
 * The collection of volume container entities.
 *
 */
export interface VolumeContainerList extends Array<VolumeContainer> {
}

/**
 * @class
 * Initializes a new instance of the VolumeList class.
 * @constructor
 * The collection of volumes.
 *
 */
export interface VolumeList extends Array<Volume> {
}

/**
 * @class
 * Initializes a new instance of the StorageAccountCredentialList class.
 * @constructor
 * The collection of storage account credential entities.
 *
 */
export interface StorageAccountCredentialList extends Array<StorageAccountCredential> {
}

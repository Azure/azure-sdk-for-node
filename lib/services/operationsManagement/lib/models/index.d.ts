/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the OperationDisplay class.
 * @constructor
 * Display metadata associated with the operation.
 *
 * @member {string} [provider] Service provider: Microsoft
 * OperationsManagement.
 * @member {string} [resource] Resource on which the operation is performed
 * etc.
 * @member {string} [operation] Type of operation: get, read, delete, etc.
 */
export interface OperationDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
}

/**
 * @class
 * Initializes a new instance of the Operation class.
 * @constructor
 * Supported operation of OperationsManagement resource provider.
 *
 * @member {string} [name] Operation name: {provider}/{resource}/{operation}
 * @member {object} [display] Display metadata associated with the operation.
 * @member {string} [display.provider] Service provider: Microsoft
 * OperationsManagement.
 * @member {string} [display.resource] Resource on which the operation is
 * performed etc.
 * @member {string} [display.operation] Type of operation: get, read, delete,
 * etc.
 */
export interface Operation {
  name?: string;
  display?: OperationDisplay;
}

/**
 * @class
 * Initializes a new instance of the SolutionProperties class.
 * @constructor
 * Solution properties supported by the OperationsManagement resource provider.
 *
 * @member {string} workspaceResourceId The azure resourceId for the workspace
 * where the solution will be deployed/enabled.
 * @member {string} [provisioningState] The provisioning state for the
 * solution.
 * @member {array} [containedResources] The azure resources that will be
 * contained within the solutions. They will be locked and gets deleted
 * automatically when the solution is deleted.
 * @member {array} [referencedResources] The resources that will be referenced
 * from this solution. Deleting any of those solution out of band will break
 * the solution.
 */
export interface SolutionProperties extends BaseResource {
  workspaceResourceId: string;
  readonly provisioningState?: string;
  containedResources?: string[];
  referencedResources?: string[];
}

/**
 * @class
 * Initializes a new instance of the SolutionPlan class.
 * @constructor
 * Plan for solution object supported by the OperationsManagement resource
 * provider.
 *
 * @member {string} [name] name of the solution to be created. For Microsoft
 * published solution it should be in the format of
 * solutionType(workspaceName). SolutionType part is case sensitive. For third
 * party solution, it can be anything.
 * @member {string} [publisher] Publisher name. For gallery solution, it is
 * Microsoft.
 * @member {string} [promotionCode] promotionCode, Not really used now, can you
 * left as empty
 * @member {string} [product] name of the solution to enabled/add. For
 * Microsoft published gallery solution it should be in the format of
 * OMSGallery/<solutionType>. This is case sensitive
 */
export interface SolutionPlan {
  name?: string;
  publisher?: string;
  promotionCode?: string;
  product?: string;
}

/**
 * @class
 * Initializes a new instance of the Solution class.
 * @constructor
 * The container for solution.
 *
 * @member {string} [id] Resource ID.
 * @member {string} [name] Resource name.
 * @member {string} [type] Resource type.
 * @member {string} [location] Resource location
 * @member {object} [plan] Plan for solution object supported by the
 * OperationsManagement resource provider.
 * @member {string} [plan.name] name of the solution to be created. For
 * Microsoft published solution it should be in the format of
 * solutionType(workspaceName). SolutionType part is case sensitive. For third
 * party solution, it can be anything.
 * @member {string} [plan.publisher] Publisher name. For gallery solution, it
 * is Microsoft.
 * @member {string} [plan.promotionCode] promotionCode, Not really used now,
 * can you left as empty
 * @member {string} [plan.product] name of the solution to enabled/add. For
 * Microsoft published gallery solution it should be in the format of
 * OMSGallery/<solutionType>. This is case sensitive
 * @member {object} [properties] Properties for solution object supported by
 * the OperationsManagement resource provider.
 * @member {string} [properties.workspaceResourceId] The azure resourceId for
 * the workspace where the solution will be deployed/enabled.
 * @member {string} [properties.provisioningState] The provisioning state for
 * the solution.
 * @member {array} [properties.containedResources] The azure resources that
 * will be contained within the solutions. They will be locked and gets deleted
 * automatically when the solution is deleted.
 * @member {array} [properties.referencedResources] The resources that will be
 * referenced from this solution. Deleting any of those solution out of band
 * will break the solution.
 */
export interface Solution extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
  location?: string;
  plan?: SolutionPlan;
  properties?: SolutionProperties;
}

/**
 * @class
 * Initializes a new instance of the SolutionPropertiesList class.
 * @constructor
 * the list of solution response
 *
 * @member {array} [value] List of solution properites within the subscription.
 */
export interface SolutionPropertiesList {
  value?: Solution[];
}

/**
 * @class
 * Initializes a new instance of the CodeMessageErrorError class.
 * @constructor
 * The error details for a failed request.
 *
 * @member {string} [code] The error type.
 * @member {string} [message] The error message.
 */
export interface CodeMessageErrorError {
  code?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the CodeMessageError class.
 * @constructor
 * The error body contract.
 *
 * @member {object} [error] The error details for a failed request.
 * @member {string} [error.code] The error type.
 * @member {string} [error.message] The error message.
 */
export interface CodeMessageError {
  error?: CodeMessageErrorError;
}


/**
 * @class
 * Initializes a new instance of the OperationListResult class.
 * @constructor
 * Result of the request to list solution operations.
 *
 */
export interface OperationListResult extends Array<Operation> {
}

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure";
import * as moment from "moment";

export {

  BaseResource,
  CloudError
};

/**
 * Display metadata associated with the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft OperationsManagement.
   */
  provider?: string;
  /**
   * Resource on which the operation is performed etc.
   */
  resource?: string;
  /**
   * Type of operation: get, read, delete, etc.
   */
  operation?: string;
}

/**
 * Supported operation of OperationsManagement resource provider.
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * Display metadata associated with the operation.
   */
  display?: OperationDisplay;
}

/**
 * Solution properties supported by the OperationsManagement resource provider.
 */
export interface SolutionProperties extends BaseResource {
  /**
   * The azure resourceId for the workspace where the solution will be deployed/enabled.
   */
  workspaceResourceId: string;
  /**
   * The provisioning state for the solution.
   */
  readonly provisioningState?: string;
  /**
   * The azure resources that will be contained within the solutions. They will be locked and gets
   * deleted automatically when the solution is deleted.
   */
  containedResources?: string[];
  /**
   * The resources that will be referenced from this solution. Deleting any of those solution out
   * of band will break the solution.
   */
  referencedResources?: string[];
}

/**
 * ManagementAssociation properties supported by the OperationsManagement resource provider.
 */
export interface ManagementAssociationProperties extends BaseResource {
  /**
   * The applicationId of the appliance for this association.
   */
  applicationId: string;
}

/**
 * Parameter to pass to ARM template
 */
export interface ArmTemplateParameter {
  /**
   * name of the parameter.
   */
  name?: string;
  /**
   * value for the parameter. In Jtoken
   */
  value?: string;
}

/**
 * ManagementConfiguration properties supported by the OperationsManagement resource provider.
 */
export interface ManagementConfigurationProperties extends BaseResource {
  /**
   * The applicationId of the appliance for this Management.
   */
  applicationId?: string;
  /**
   * The type of the parent resource.
   */
  parentResourceType: string;
  /**
   * Parameters to run the ARM template
   */
  parameters: ArmTemplateParameter[];
  /**
   * The provisioning state for the ManagementConfiguration.
   */
  readonly provisioningState?: string;
  /**
   * The Json object containing the ARM template to deploy
   */
  template: any;
}

/**
 * Plan for solution object supported by the OperationsManagement resource provider.
 */
export interface SolutionPlan {
  /**
   * name of the solution to be created. For Microsoft published solution it should be in the
   * format of solutionType(workspaceName). SolutionType part is case sensitive. For third party
   * solution, it can be anything.
   */
  name?: string;
  /**
   * Publisher name. For gallery solution, it is Microsoft.
   */
  publisher?: string;
  /**
   * promotionCode, Not really used now, can you left as empty
   */
  promotionCode?: string;
  /**
   * name of the solution to enabled/add. For Microsoft published gallery solution it should be in
   * the format of OMSGallery/<solutionType>. This is case sensitive
   */
  product?: string;
}

/**
 * The container for solution.
 */
export interface Solution extends BaseResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource name.
   */
  readonly name?: string;
  /**
   * Resource type.
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location?: string;
  /**
   * Plan for solution object supported by the OperationsManagement resource provider.
   */
  plan?: SolutionPlan;
  /**
   * Properties for solution object supported by the OperationsManagement resource provider.
   */
  properties?: SolutionProperties;
}

/**
 * the list of solution response
 */
export interface SolutionPropertiesList {
  /**
   * List of solution properties within the subscription.
   */
  value?: Solution[];
}

/**
 * The container for solution.
 */
export interface ManagementAssociation extends BaseResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource name.
   */
  readonly name?: string;
  /**
   * Resource type.
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location?: string;
  /**
   * Properties for ManagementAssociation object supported by the OperationsManagement resource
   * provider.
   */
  properties?: ManagementAssociationProperties;
}

/**
 * the list of ManagementAssociation response
 */
export interface ManagementAssociationPropertiesList {
  /**
   * List of Management Association properties within the subscription.
   */
  value?: ManagementAssociation[];
}

/**
 * The container for solution.
 */
export interface ManagementConfiguration extends BaseResource {
  /**
   * Resource ID.
   */
  readonly id?: string;
  /**
   * Resource name.
   */
  readonly name?: string;
  /**
   * Resource type.
   */
  readonly type?: string;
  /**
   * Resource location
   */
  location?: string;
  /**
   * Properties for ManagementConfiguration object supported by the OperationsManagement resource
   * provider.
   */
  properties?: ManagementConfigurationProperties;
}

/**
 * the list of ManagementConfiguration response
 */
export interface ManagementConfigurationPropertiesList {
  /**
   * List of Management Configuration properties within the subscription.
   */
  value?: ManagementConfiguration[];
}

/**
 * The error details for a failed request.
 */
export interface CodeMessageErrorError {
  /**
   * The error type.
   */
  code?: string;
  /**
   * The error message.
   */
  message?: string;
}

/**
 * The error body contract.
 */
export interface CodeMessageError {
  /**
   * The error details for a failed request.
   */
  error?: CodeMessageErrorError;
}

/**
 * Result of the request to list solution operations.
 */
export interface OperationListResult extends Array<Operation> {
}

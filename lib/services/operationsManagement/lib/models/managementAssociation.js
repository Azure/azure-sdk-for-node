/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The container for solution.
 *
 * @extends models['BaseResource']
 */
class ManagementAssociation extends models['BaseResource'] {
  /**
   * Create a ManagementAssociation.
   * @property {string} [id] Resource ID.
   * @property {string} [name] Resource name.
   * @property {string} [type] Resource type.
   * @property {string} [location] Resource location
   * @property {object} [properties] Properties for ManagementAssociation
   * object supported by the OperationsManagement resource provider.
   * @property {string} [properties.applicationId] The applicationId of the
   * appliance for this association.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ManagementAssociation
   *
   * @returns {object} metadata of ManagementAssociation
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ManagementAssociation',
      type: {
        name: 'Composite',
        className: 'ManagementAssociation',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          properties: {
            required: false,
            serializedName: 'properties',
            type: {
              name: 'Composite',
              className: 'ManagementAssociationProperties'
            }
          }
        }
      }
    };
  }
}

module.exports = ManagementAssociation;

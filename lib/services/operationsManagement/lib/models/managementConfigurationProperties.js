/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * ManagementConfiguration properties supported by the OperationsManagement
 * resource provider.
 *
 * @extends models['BaseResource']
 */
class ManagementConfigurationProperties extends models['BaseResource'] {
  /**
   * Create a ManagementConfigurationProperties.
   * @property {string} [applicationId] The applicationId of the appliance for
   * this Management.
   * @property {string} parentResourceType The type of the parent resource.
   * @property {array} parameters Parameters to run the ARM template
   * @property {string} [provisioningState] The provisioning state for the
   * ManagementConfiguration.
   * @property {object} template The Json object containing the ARM template to
   * deploy
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ManagementConfigurationProperties
   *
   * @returns {object} metadata of ManagementConfigurationProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ManagementConfigurationProperties',
      type: {
        name: 'Composite',
        className: 'ManagementConfigurationProperties',
        modelProperties: {
          applicationId: {
            required: false,
            serializedName: 'applicationId',
            type: {
              name: 'String'
            }
          },
          parentResourceType: {
            required: true,
            serializedName: 'parentResourceType',
            type: {
              name: 'String'
            }
          },
          parameters: {
            required: true,
            serializedName: 'parameters',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ArmTemplateParameterElementType',
                  type: {
                    name: 'Composite',
                    className: 'ArmTemplateParameter'
                  }
              }
            }
          },
          provisioningState: {
            required: false,
            readOnly: true,
            serializedName: 'provisioningState',
            type: {
              name: 'String'
            }
          },
          template: {
            required: true,
            serializedName: 'template',
            type: {
              name: 'Object'
            }
          }
        }
      }
    };
  }
}

module.exports = ManagementConfigurationProperties;

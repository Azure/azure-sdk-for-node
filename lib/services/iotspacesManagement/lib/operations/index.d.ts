/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * IoTSpaces
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the IoTSpacesClient.
 */
export interface IoTSpaces {


    /**
     * Get the metadata of a IoTSpaces instance.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoTSpaces instance.
     *
     * @param {string} resourceName The name of the IoTSpaces instance.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<IoTSpacesDescription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.IoTSpacesDescription>>;

    /**
     * Get the metadata of a IoTSpaces instance.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoTSpaces instance.
     *
     * @param {string} resourceName The name of the IoTSpaces instance.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {IoTSpacesDescription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {IoTSpacesDescription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link IoTSpacesDescription} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.IoTSpacesDescription>;
    get(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.IoTSpacesDescription>): void;
    get(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.IoTSpacesDescription>): void;


    /**
     * Create or update the metadata of an IoTSpaces instance. The usual pattern to
     * modify a property is to retrieve the IoTSpaces instance metadata and
     * security metadata, and then combine them with the modified values in a new
     * body to update the IoTSpaces instance.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoTSpaces instance.
     *
     * @param {string} resourceName The name of the IoTSpaces instance.
     *
     * @param {object} iotSpaceDescription The IoTSpaces instance metadata and
     * security metadata.
     *
     * @param {object} [iotSpaceDescription.properties] The common properties of a
     * IoTSpaces service.
     *
     * @param {object} [iotSpaceDescription.properties.storageContainer] The
     * properties of the designated storage container.
     *
     * @param {string}
     * [iotSpaceDescription.properties.storageContainer.connectionString] The
     * connection string of the storage account.
     *
     * @param {string}
     * [iotSpaceDescription.properties.storageContainer.subscriptionId] The
     * subscription identifier of the storage account.
     *
     * @param {string}
     * [iotSpaceDescription.properties.storageContainer.resourceGroup] The name of
     * the resource group of the storage account.
     *
     * @param {string}
     * [iotSpaceDescription.properties.storageContainer.containerName] The name of
     * storage container in the storage account.
     *
     * @param {object} iotSpaceDescription.sku A valid instance SKU.
     *
     * @param {string} iotSpaceDescription.sku.name The name of the SKU. Possible
     * values include: 'F1', 'S1', 'S2', 'S3'
     *
     * @param {string} iotSpaceDescription.location The resource location.
     *
     * @param {object} [iotSpaceDescription.tags] The resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<IoTSpacesDescription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, resourceName: string, iotSpaceDescription: models.IoTSpacesDescription, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.IoTSpacesDescription>>;

    /**
     * Create or update the metadata of an IoTSpaces instance. The usual pattern to
     * modify a property is to retrieve the IoTSpaces instance metadata and
     * security metadata, and then combine them with the modified values in a new
     * body to update the IoTSpaces instance.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoTSpaces instance.
     *
     * @param {string} resourceName The name of the IoTSpaces instance.
     *
     * @param {object} iotSpaceDescription The IoTSpaces instance metadata and
     * security metadata.
     *
     * @param {object} [iotSpaceDescription.properties] The common properties of a
     * IoTSpaces service.
     *
     * @param {object} [iotSpaceDescription.properties.storageContainer] The
     * properties of the designated storage container.
     *
     * @param {string}
     * [iotSpaceDescription.properties.storageContainer.connectionString] The
     * connection string of the storage account.
     *
     * @param {string}
     * [iotSpaceDescription.properties.storageContainer.subscriptionId] The
     * subscription identifier of the storage account.
     *
     * @param {string}
     * [iotSpaceDescription.properties.storageContainer.resourceGroup] The name of
     * the resource group of the storage account.
     *
     * @param {string}
     * [iotSpaceDescription.properties.storageContainer.containerName] The name of
     * storage container in the storage account.
     *
     * @param {object} iotSpaceDescription.sku A valid instance SKU.
     *
     * @param {string} iotSpaceDescription.sku.name The name of the SKU. Possible
     * values include: 'F1', 'S1', 'S2', 'S3'
     *
     * @param {string} iotSpaceDescription.location The resource location.
     *
     * @param {object} [iotSpaceDescription.tags] The resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {IoTSpacesDescription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {IoTSpacesDescription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link IoTSpacesDescription} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, iotSpaceDescription: models.IoTSpacesDescription, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.IoTSpacesDescription>;
    createOrUpdate(resourceGroupName: string, resourceName: string, iotSpaceDescription: models.IoTSpacesDescription, callback: ServiceCallback<models.IoTSpacesDescription>): void;
    createOrUpdate(resourceGroupName: string, resourceName: string, iotSpaceDescription: models.IoTSpacesDescription, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.IoTSpacesDescription>): void;


    /**
     * Update the metadata of a IoTSpaces instance.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoTSpaces instance.
     *
     * @param {string} resourceName The name of the IoTSpaces instance.
     *
     * @param {object} iotSpacePatchDescription The IoTSpaces instance metadata and
     * security metadata.
     *
     * @param {object} [iotSpacePatchDescription.tags] Instance tags
     *
     * @param {object} [iotSpacePatchDescription.properties] The common properties
     * of an IoTSpaces service.
     *
     * @param {object} [iotSpacePatchDescription.properties.storageContainer] The
     * properties of the designated storage container.
     *
     * @param {string}
     * [iotSpacePatchDescription.properties.storageContainer.connectionString] The
     * connection string of the storage account.
     *
     * @param {string}
     * [iotSpacePatchDescription.properties.storageContainer.subscriptionId] The
     * subscription identifier of the storage account.
     *
     * @param {string}
     * [iotSpacePatchDescription.properties.storageContainer.resourceGroup] The
     * name of the resource group of the storage account.
     *
     * @param {string}
     * [iotSpacePatchDescription.properties.storageContainer.containerName] The
     * name of storage container in the storage account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<IoTSpacesDescription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, resourceName: string, iotSpacePatchDescription: models.IoTSpacesPatchDescription, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.IoTSpacesDescription>>;

    /**
     * Update the metadata of a IoTSpaces instance.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoTSpaces instance.
     *
     * @param {string} resourceName The name of the IoTSpaces instance.
     *
     * @param {object} iotSpacePatchDescription The IoTSpaces instance metadata and
     * security metadata.
     *
     * @param {object} [iotSpacePatchDescription.tags] Instance tags
     *
     * @param {object} [iotSpacePatchDescription.properties] The common properties
     * of an IoTSpaces service.
     *
     * @param {object} [iotSpacePatchDescription.properties.storageContainer] The
     * properties of the designated storage container.
     *
     * @param {string}
     * [iotSpacePatchDescription.properties.storageContainer.connectionString] The
     * connection string of the storage account.
     *
     * @param {string}
     * [iotSpacePatchDescription.properties.storageContainer.subscriptionId] The
     * subscription identifier of the storage account.
     *
     * @param {string}
     * [iotSpacePatchDescription.properties.storageContainer.resourceGroup] The
     * name of the resource group of the storage account.
     *
     * @param {string}
     * [iotSpacePatchDescription.properties.storageContainer.containerName] The
     * name of storage container in the storage account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {IoTSpacesDescription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {IoTSpacesDescription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link IoTSpacesDescription} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, resourceName: string, iotSpacePatchDescription: models.IoTSpacesPatchDescription, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.IoTSpacesDescription>;
    update(resourceGroupName: string, resourceName: string, iotSpacePatchDescription: models.IoTSpacesPatchDescription, callback: ServiceCallback<models.IoTSpacesDescription>): void;
    update(resourceGroupName: string, resourceName: string, iotSpacePatchDescription: models.IoTSpacesPatchDescription, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.IoTSpacesDescription>): void;


    /**
     * Delete an IoTSpaces instance.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoTSpaces instance.
     *
     * @param {string} resourceName The name of the IoTSpaces instance.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<IoTSpacesDescription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.IoTSpacesDescription>>;

    /**
     * Delete an IoTSpaces instance.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoTSpaces instance.
     *
     * @param {string} resourceName The name of the IoTSpaces instance.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {IoTSpacesDescription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {IoTSpacesDescription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link IoTSpacesDescription} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.IoTSpacesDescription>;
    deleteMethod(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.IoTSpacesDescription>): void;
    deleteMethod(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.IoTSpacesDescription>): void;


    /**
     * Get all the IoTSpaces instances in a subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<IoTSpacesDescriptionListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.IoTSpacesDescriptionListResult>>;

    /**
     * Get all the IoTSpaces instances in a subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {IoTSpacesDescriptionListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {IoTSpacesDescriptionListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link IoTSpacesDescriptionListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.IoTSpacesDescriptionListResult>;
    list(callback: ServiceCallback<models.IoTSpacesDescriptionListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.IoTSpacesDescriptionListResult>): void;


    /**
     * Get all the IoTSpaces instances in a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoTSpaces instance.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<IoTSpacesDescriptionListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.IoTSpacesDescriptionListResult>>;

    /**
     * Get all the IoTSpaces instances in a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoTSpaces instance.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {IoTSpacesDescriptionListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {IoTSpacesDescriptionListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link IoTSpacesDescriptionListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.IoTSpacesDescriptionListResult>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.IoTSpacesDescriptionListResult>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.IoTSpacesDescriptionListResult>): void;


    /**
     * Check if an IoTSpaces instance name is available.
     *
     * @param {object} operationInputs Set the name parameter in the
     * OperationInputs structure to the name of the IoTSpaces instance to check.
     *
     * @param {string} operationInputs.name The name of the IoTSpaces service
     * instance to check.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<IoTSpacesNameAvailabilityInfo>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    checkNameAvailabilityWithHttpOperationResponse(operationInputs: models.OperationInputs, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.IoTSpacesNameAvailabilityInfo>>;

    /**
     * Check if an IoTSpaces instance name is available.
     *
     * @param {object} operationInputs Set the name parameter in the
     * OperationInputs structure to the name of the IoTSpaces instance to check.
     *
     * @param {string} operationInputs.name The name of the IoTSpaces service
     * instance to check.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {IoTSpacesNameAvailabilityInfo} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {IoTSpacesNameAvailabilityInfo} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link IoTSpacesNameAvailabilityInfo} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    checkNameAvailability(operationInputs: models.OperationInputs, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.IoTSpacesNameAvailabilityInfo>;
    checkNameAvailability(operationInputs: models.OperationInputs, callback: ServiceCallback<models.IoTSpacesNameAvailabilityInfo>): void;
    checkNameAvailability(operationInputs: models.OperationInputs, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.IoTSpacesNameAvailabilityInfo>): void;


    /**
     * Create or update the metadata of an IoTSpaces instance. The usual pattern to
     * modify a property is to retrieve the IoTSpaces instance metadata and
     * security metadata, and then combine them with the modified values in a new
     * body to update the IoTSpaces instance.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoTSpaces instance.
     *
     * @param {string} resourceName The name of the IoTSpaces instance.
     *
     * @param {object} iotSpaceDescription The IoTSpaces instance metadata and
     * security metadata.
     *
     * @param {object} [iotSpaceDescription.properties] The common properties of a
     * IoTSpaces service.
     *
     * @param {object} [iotSpaceDescription.properties.storageContainer] The
     * properties of the designated storage container.
     *
     * @param {string}
     * [iotSpaceDescription.properties.storageContainer.connectionString] The
     * connection string of the storage account.
     *
     * @param {string}
     * [iotSpaceDescription.properties.storageContainer.subscriptionId] The
     * subscription identifier of the storage account.
     *
     * @param {string}
     * [iotSpaceDescription.properties.storageContainer.resourceGroup] The name of
     * the resource group of the storage account.
     *
     * @param {string}
     * [iotSpaceDescription.properties.storageContainer.containerName] The name of
     * storage container in the storage account.
     *
     * @param {object} iotSpaceDescription.sku A valid instance SKU.
     *
     * @param {string} iotSpaceDescription.sku.name The name of the SKU. Possible
     * values include: 'F1', 'S1', 'S2', 'S3'
     *
     * @param {string} iotSpaceDescription.location The resource location.
     *
     * @param {object} [iotSpaceDescription.tags] The resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<IoTSpacesDescription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, resourceName: string, iotSpaceDescription: models.IoTSpacesDescription, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.IoTSpacesDescription>>;

    /**
     * Create or update the metadata of an IoTSpaces instance. The usual pattern to
     * modify a property is to retrieve the IoTSpaces instance metadata and
     * security metadata, and then combine them with the modified values in a new
     * body to update the IoTSpaces instance.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoTSpaces instance.
     *
     * @param {string} resourceName The name of the IoTSpaces instance.
     *
     * @param {object} iotSpaceDescription The IoTSpaces instance metadata and
     * security metadata.
     *
     * @param {object} [iotSpaceDescription.properties] The common properties of a
     * IoTSpaces service.
     *
     * @param {object} [iotSpaceDescription.properties.storageContainer] The
     * properties of the designated storage container.
     *
     * @param {string}
     * [iotSpaceDescription.properties.storageContainer.connectionString] The
     * connection string of the storage account.
     *
     * @param {string}
     * [iotSpaceDescription.properties.storageContainer.subscriptionId] The
     * subscription identifier of the storage account.
     *
     * @param {string}
     * [iotSpaceDescription.properties.storageContainer.resourceGroup] The name of
     * the resource group of the storage account.
     *
     * @param {string}
     * [iotSpaceDescription.properties.storageContainer.containerName] The name of
     * storage container in the storage account.
     *
     * @param {object} iotSpaceDescription.sku A valid instance SKU.
     *
     * @param {string} iotSpaceDescription.sku.name The name of the SKU. Possible
     * values include: 'F1', 'S1', 'S2', 'S3'
     *
     * @param {string} iotSpaceDescription.location The resource location.
     *
     * @param {object} [iotSpaceDescription.tags] The resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {IoTSpacesDescription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {IoTSpacesDescription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link IoTSpacesDescription} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, iotSpaceDescription: models.IoTSpacesDescription, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.IoTSpacesDescription>;
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, iotSpaceDescription: models.IoTSpacesDescription, callback: ServiceCallback<models.IoTSpacesDescription>): void;
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, iotSpaceDescription: models.IoTSpacesDescription, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.IoTSpacesDescription>): void;


    /**
     * Update the metadata of a IoTSpaces instance.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoTSpaces instance.
     *
     * @param {string} resourceName The name of the IoTSpaces instance.
     *
     * @param {object} iotSpacePatchDescription The IoTSpaces instance metadata and
     * security metadata.
     *
     * @param {object} [iotSpacePatchDescription.tags] Instance tags
     *
     * @param {object} [iotSpacePatchDescription.properties] The common properties
     * of an IoTSpaces service.
     *
     * @param {object} [iotSpacePatchDescription.properties.storageContainer] The
     * properties of the designated storage container.
     *
     * @param {string}
     * [iotSpacePatchDescription.properties.storageContainer.connectionString] The
     * connection string of the storage account.
     *
     * @param {string}
     * [iotSpacePatchDescription.properties.storageContainer.subscriptionId] The
     * subscription identifier of the storage account.
     *
     * @param {string}
     * [iotSpacePatchDescription.properties.storageContainer.resourceGroup] The
     * name of the resource group of the storage account.
     *
     * @param {string}
     * [iotSpacePatchDescription.properties.storageContainer.containerName] The
     * name of storage container in the storage account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<IoTSpacesDescription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(resourceGroupName: string, resourceName: string, iotSpacePatchDescription: models.IoTSpacesPatchDescription, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.IoTSpacesDescription>>;

    /**
     * Update the metadata of a IoTSpaces instance.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoTSpaces instance.
     *
     * @param {string} resourceName The name of the IoTSpaces instance.
     *
     * @param {object} iotSpacePatchDescription The IoTSpaces instance metadata and
     * security metadata.
     *
     * @param {object} [iotSpacePatchDescription.tags] Instance tags
     *
     * @param {object} [iotSpacePatchDescription.properties] The common properties
     * of an IoTSpaces service.
     *
     * @param {object} [iotSpacePatchDescription.properties.storageContainer] The
     * properties of the designated storage container.
     *
     * @param {string}
     * [iotSpacePatchDescription.properties.storageContainer.connectionString] The
     * connection string of the storage account.
     *
     * @param {string}
     * [iotSpacePatchDescription.properties.storageContainer.subscriptionId] The
     * subscription identifier of the storage account.
     *
     * @param {string}
     * [iotSpacePatchDescription.properties.storageContainer.resourceGroup] The
     * name of the resource group of the storage account.
     *
     * @param {string}
     * [iotSpacePatchDescription.properties.storageContainer.containerName] The
     * name of storage container in the storage account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {IoTSpacesDescription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {IoTSpacesDescription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link IoTSpacesDescription} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(resourceGroupName: string, resourceName: string, iotSpacePatchDescription: models.IoTSpacesPatchDescription, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.IoTSpacesDescription>;
    beginUpdate(resourceGroupName: string, resourceName: string, iotSpacePatchDescription: models.IoTSpacesPatchDescription, callback: ServiceCallback<models.IoTSpacesDescription>): void;
    beginUpdate(resourceGroupName: string, resourceName: string, iotSpacePatchDescription: models.IoTSpacesPatchDescription, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.IoTSpacesDescription>): void;


    /**
     * Delete an IoTSpaces instance.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoTSpaces instance.
     *
     * @param {string} resourceName The name of the IoTSpaces instance.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<IoTSpacesDescription>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.IoTSpacesDescription>>;

    /**
     * Delete an IoTSpaces instance.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoTSpaces instance.
     *
     * @param {string} resourceName The name of the IoTSpaces instance.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {IoTSpacesDescription} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {IoTSpacesDescription} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link IoTSpacesDescription} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.IoTSpacesDescription>;
    beginDeleteMethod(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.IoTSpacesDescription>): void;
    beginDeleteMethod(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.IoTSpacesDescription>): void;


    /**
     * Get all the IoTSpaces instances in a subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<IoTSpacesDescriptionListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.IoTSpacesDescriptionListResult>>;

    /**
     * Get all the IoTSpaces instances in a subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {IoTSpacesDescriptionListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {IoTSpacesDescriptionListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link IoTSpacesDescriptionListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.IoTSpacesDescriptionListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.IoTSpacesDescriptionListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.IoTSpacesDescriptionListResult>): void;


    /**
     * Get all the IoTSpaces instances in a resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<IoTSpacesDescriptionListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.IoTSpacesDescriptionListResult>>;

    /**
     * Get all the IoTSpaces instances in a resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {IoTSpacesDescriptionListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {IoTSpacesDescriptionListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link IoTSpacesDescriptionListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.IoTSpacesDescriptionListResult>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.IoTSpacesDescriptionListResult>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.IoTSpacesDescriptionListResult>): void;
}

/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the IoTSpacesClient.
 */
export interface Operations {


    /**
     * Lists all of the available IoTSpaces service REST API operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists all of the available IoTSpaces service REST API operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    list(callback: ServiceCallback<models.OperationListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;


    /**
     * Lists all of the available IoTSpaces service REST API operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists all of the available IoTSpaces service REST API operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.OperationListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;
}

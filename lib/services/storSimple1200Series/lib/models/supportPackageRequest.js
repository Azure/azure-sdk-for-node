/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Support package request entity
 *
 */
class SupportPackageRequest {
  /**
   * Create a SupportPackageRequest.
   * @member {string} sdpPassKey The SDPPassKey
   * @member {string} [packageType] The support package type. Possible values
   * include: 'None', 'IncludeDefault', 'IncludeAll', 'Mini', 'Custom'
   * @member {date} [endTime] The maximum time stamp of the logs.
   * @member {date} [startTime] The minimum time stamp of the logs.
   * @member {boolean} [includeArchived] The bool which determines whether the
   * archived logs are included or not.
   * @member {string} [sourceType] The support package source type. Possible
   * values include: 'None', 'OpsTriggered', 'ClientTriggered'
   * @member {array} [customIncludeList] The list of log categories
   */
  constructor() {
  }

  /**
   * Defines the metadata of SupportPackageRequest
   *
   * @returns {object} metadata of SupportPackageRequest
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SupportPackageRequest',
      type: {
        name: 'Composite',
        className: 'SupportPackageRequest',
        modelProperties: {
          sdpPassKey: {
            required: true,
            serializedName: 'properties.sdpPassKey',
            type: {
              name: 'String'
            }
          },
          packageType: {
            required: false,
            serializedName: 'properties.packageType',
            type: {
              name: 'Enum',
              allowedValues: [ 'None', 'IncludeDefault', 'IncludeAll', 'Mini', 'Custom' ]
            }
          },
          endTime: {
            required: false,
            serializedName: 'properties.endTime',
            type: {
              name: 'DateTime'
            }
          },
          startTime: {
            required: false,
            serializedName: 'properties.startTime',
            type: {
              name: 'DateTime'
            }
          },
          includeArchived: {
            required: false,
            serializedName: 'properties.includeArchived',
            type: {
              name: 'Boolean'
            }
          },
          sourceType: {
            required: false,
            serializedName: 'properties.sourceType',
            type: {
              name: 'Enum',
              allowedValues: [ 'None', 'OpsTriggered', 'ClientTriggered' ]
            }
          },
          customIncludeList: {
            required: false,
            serializedName: 'properties.customIncludeList',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = SupportPackageRequest;

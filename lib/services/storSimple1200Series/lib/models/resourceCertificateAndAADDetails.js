/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Resource Certificate And AAD Details from IDM
 *
 */
class ResourceCertificateAndAADDetails {
  /**
   * Create a ResourceCertificateAndAADDetails.
   * @member {string} [authType] Specify the Authentication type. Possible
   * values include: 'Invalid', 'AccessControlService', 'AzureActiveDirectory'
   * @member {string} certificate Gets or sets the base64 encoded certificate
   * raw data string
   * @member {number} resourceId Gets or Sets the ResourceId
   * @member {string} aadAuthority AAD tenant authority
   * @member {string} aadTenantId AAD tenant Id
   * @member {string} servicePrincipalClientId AAD service principal clientId
   * @member {string} servicePrincipalObjectId AAD service principal ObjectId
   * @member {string} azureManagementEndpointAudience Azure Management Endpoint
   * Audience
   * @member {string} subject Certificate Subject Name
   * @member {date} validFrom Certificate Validity start Date time
   * @member {date} validTo Certificate Validity End Date time
   * @member {string} thumbprint Certificate thumbrprint
   * @member {string} friendlyName Certificate friendlyname
   * @member {string} issuer Certificate issuer
   */
  constructor() {
  }

  /**
   * Defines the metadata of ResourceCertificateAndAADDetails
   *
   * @returns {object} metadata of ResourceCertificateAndAADDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ResourceCertificateAndAADDetails',
      type: {
        name: 'Composite',
        className: 'ResourceCertificateAndAADDetails',
        modelProperties: {
          authType: {
            required: false,
            serializedName: 'authType',
            type: {
              name: 'Enum',
              allowedValues: [ 'Invalid', 'AccessControlService', 'AzureActiveDirectory' ]
            }
          },
          certificate: {
            required: true,
            serializedName: 'certificate',
            type: {
              name: 'String'
            }
          },
          resourceId: {
            required: true,
            serializedName: 'resourceId',
            type: {
              name: 'Number'
            }
          },
          aadAuthority: {
            required: true,
            serializedName: 'aadAuthority',
            type: {
              name: 'String'
            }
          },
          aadTenantId: {
            required: true,
            serializedName: 'aadTenantId',
            type: {
              name: 'String'
            }
          },
          servicePrincipalClientId: {
            required: true,
            serializedName: 'servicePrincipalClientId',
            type: {
              name: 'String'
            }
          },
          servicePrincipalObjectId: {
            required: true,
            serializedName: 'servicePrincipalObjectId',
            type: {
              name: 'String'
            }
          },
          azureManagementEndpointAudience: {
            required: true,
            serializedName: 'azureManagementEndpointAudience',
            type: {
              name: 'String'
            }
          },
          subject: {
            required: true,
            serializedName: 'subject',
            type: {
              name: 'String'
            }
          },
          validFrom: {
            required: true,
            serializedName: 'validFrom',
            type: {
              name: 'DateTime'
            }
          },
          validTo: {
            required: true,
            serializedName: 'validTo',
            type: {
              name: 'DateTime'
            }
          },
          thumbprint: {
            required: true,
            serializedName: 'thumbprint',
            type: {
              name: 'String'
            }
          },
          friendlyName: {
            required: true,
            serializedName: 'friendlyName',
            type: {
              name: 'String'
            }
          },
          issuer: {
            required: true,
            serializedName: 'issuer',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ResourceCertificateAndAADDetails;

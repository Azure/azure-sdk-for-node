/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Upload Certificate Response from IDM
 *
 * @extends models['BaseModel']
 */
class UploadCertificateResponse extends models['BaseModel'] {
  /**
   * Create a UploadCertificateResponse.
   * @member {object} resourceAADDetails Gets or sets Properties
   * @member {string} [resourceAADDetails.authType] Specify the Authentication
   * type. Possible values include: 'Invalid', 'AccessControlService',
   * 'AzureActiveDirectory'
   * @member {string} [resourceAADDetails.certificate] Gets or sets the base64
   * encoded certificate raw data string
   * @member {number} [resourceAADDetails.resourceId] Gets or Sets the
   * ResourceId
   * @member {string} [resourceAADDetails.aadAuthority] AAD tenant authority
   * @member {string} [resourceAADDetails.aadTenantId] AAD tenant Id
   * @member {string} [resourceAADDetails.servicePrincipalClientId] AAD service
   * principal clientId
   * @member {string} [resourceAADDetails.servicePrincipalObjectId] AAD service
   * principal ObjectId
   * @member {string} [resourceAADDetails.azureManagementEndpointAudience]
   * Azure Management Endpoint Audience
   * @member {string} [resourceAADDetails.subject] Certificate Subject Name
   * @member {date} [resourceAADDetails.validFrom] Certificate Validity start
   * Date time
   * @member {date} [resourceAADDetails.validTo] Certificate Validity End Date
   * time
   * @member {string} [resourceAADDetails.thumbprint] Certificate thumbrprint
   * @member {string} [resourceAADDetails.friendlyName] Certificate
   * friendlyname
   * @member {string} [resourceAADDetails.issuer] Certificate issuer
   * @member {string} [contractVersion] Constructor. Possible values include:
   * 'InvalidVersion', 'V2011_09', 'V2012_02', 'V2012_05', 'V2012_12',
   * 'V2013_04', 'V2013_10', 'V2013_11', 'V2014_04', 'V2014_06', 'V2014_07',
   * 'V2014_09', 'V2014_10', 'V2014_12', 'V2015_01', 'V2015_02', 'V2015_04',
   * 'V2015_05', 'V2015_06', 'V2015_07', 'V2015_08', 'V2015_10', 'V2015_12',
   * 'V2016_01', 'V2016_02', 'V2016_04', 'V2016_05', 'V2016_07', 'V2016_08'
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of UploadCertificateResponse
   *
   * @returns {object} metadata of UploadCertificateResponse
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'UploadCertificateResponse',
      type: {
        name: 'Composite',
        className: 'UploadCertificateResponse',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          resourceAADDetails: {
            required: true,
            serializedName: 'resourceAADDetails',
            type: {
              name: 'Composite',
              className: 'ResourceCertificateAndAADDetails'
            }
          },
          contractVersion: {
            required: false,
            readOnly: true,
            serializedName: 'contractVersion',
            type: {
              name: 'Enum',
              allowedValues: [ 'InvalidVersion', 'V2011_09', 'V2012_02', 'V2012_05', 'V2012_12', 'V2013_04', 'V2013_10', 'V2013_11', 'V2014_04', 'V2014_06', 'V2014_07', 'V2014_09', 'V2014_10', 'V2014_12', 'V2015_01', 'V2015_02', 'V2015_04', 'V2015_05', 'V2015_06', 'V2015_07', 'V2015_08', 'V2015_10', 'V2015_12', 'V2016_01', 'V2016_02', 'V2016_04', 'V2016_05', 'V2016_07', 'V2016_08' ]
            }
          }
        }
      }
    };
  }
}

module.exports = UploadCertificateResponse;

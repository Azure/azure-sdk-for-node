/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Represents a filter which is a composition of an expression and an action
 * that is executed in the pub/sub pipeline.
 *
 */
class SqlFilter {
  /**
   * Create a SqlFilter.
   * @member {string} [sqlExpression] The SQL expression. e.g. MyProperty='ABC'
   * @member {number} [compatibilityLevel] This property is reserved for future
   * use. An integer value showing the compatibility level, currently
   * hard-coded to 20. Default value: 20 .
   * @member {boolean} [requiresPreprocessing] Value that indicates whether the
   * rule action requires preprocessing. Default value: true .
   */
  constructor() {
  }

  /**
   * Defines the metadata of SqlFilter
   *
   * @returns {object} metadata of SqlFilter
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SqlFilter',
      type: {
        name: 'Composite',
        className: 'SqlFilter',
        modelProperties: {
          sqlExpression: {
            required: false,
            serializedName: 'sqlExpression',
            type: {
              name: 'String'
            }
          },
          compatibilityLevel: {
            required: false,
            readOnly: true,
            serializedName: 'compatibilityLevel',
            defaultValue: 20,
            type: {
              name: 'Number'
            }
          },
          requiresPreprocessing: {
            required: false,
            serializedName: 'requiresPreprocessing',
            defaultValue: true,
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = SqlFilter;

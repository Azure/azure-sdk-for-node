/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Subscription-level properties and limits for Data Lake Store.
 *
 */
class CapabilityInformation {
  /**
   * Create a CapabilityInformation.
   * @property {uuid} [subscriptionId] The subscription credentials that
   * uniquely identifies the subscription.
   * @property {string} [state] The subscription state. Possible values
   * include: 'Registered', 'Suspended', 'Deleted', 'Unregistered', 'Warned'
   * @property {number} [maxAccountCount] The maximum supported number of
   * accounts under this subscription.
   * @property {number} [accountCount] The current number of accounts under
   * this subscription.
   * @property {boolean} [migrationState] The Boolean value of true or false to
   * indicate the maintenance state.
   */
  constructor() {
  }

  /**
   * Defines the metadata of CapabilityInformation
   *
   * @returns {object} metadata of CapabilityInformation
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'CapabilityInformation',
      type: {
        name: 'Composite',
        className: 'CapabilityInformation',
        modelProperties: {
          subscriptionId: {
            required: false,
            readOnly: true,
            serializedName: 'subscriptionId',
            type: {
              name: 'String'
            }
          },
          state: {
            required: false,
            readOnly: true,
            serializedName: 'state',
            type: {
              name: 'String'
            }
          },
          maxAccountCount: {
            required: false,
            readOnly: true,
            serializedName: 'maxAccountCount',
            type: {
              name: 'Number'
            }
          },
          accountCount: {
            required: false,
            readOnly: true,
            serializedName: 'accountCount',
            type: {
              name: 'Number'
            }
          },
          migrationState: {
            required: false,
            readOnly: true,
            serializedName: 'migrationState',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = CapabilityInformation;

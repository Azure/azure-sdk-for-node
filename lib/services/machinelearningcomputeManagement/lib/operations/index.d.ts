/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * OperationalizationClusters
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the MachineLearningComputeManagementClient.
 */
export interface OperationalizationClusters {


    /**
     * Create or update an operationalization cluster.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} parameters Parameters supplied to create or update an
     * Operationalization cluster.
     *
     * @param {string} [parameters.description] The description of the cluster.
     *
     * @param {string} parameters.clusterType The cluster type. Possible values
     * include: 'ACS', 'Local'
     *
     * @param {object} [parameters.storageAccount] Storage Account properties.
     *
     * @param {string} [parameters.storageAccount.resourceId] ARM resource ID of
     * the Azure Storage Account to store CLI specific files. If not provided one
     * will be created. This cannot be changed once the cluster is created.
     *
     * @param {object} [parameters.containerRegistry] Container Registry
     * properties.
     *
     * @param {string} [parameters.containerRegistry.resourceId] ARM resource ID of
     * the Azure Container Registry used to store Docker images for web services in
     * the cluster. If not provided one will be created. This cannot be changed
     * once the cluster is created.
     *
     * @param {object} [parameters.containerService] Parameters for the Azure
     * Container Service cluster.
     *
     * @param {string} parameters.containerService.orchestratorType Type of
     * orchestrator. It cannot be changed once the cluster is created. Possible
     * values include: 'Kubernetes', 'None'
     *
     * @param {object} parameters.containerService.orchestratorProperties
     * Orchestrator specific properties
     *
     * @param {object}
     * parameters.containerService.orchestratorProperties.servicePrincipal The
     * Azure Service Principal used by Kubernetes
     *
     * @param {string}
     * parameters.containerService.orchestratorProperties.servicePrincipal.clientId
     * The service principal client ID
     *
     * @param {string}
     * parameters.containerService.orchestratorProperties.servicePrincipal.secret
     * The service principal secret. This is not returned in response of GET/PUT on
     * the resource. To see this please call listKeys.
     *
     * @param {array} [parameters.containerService.systemServices] The system
     * services deployed to the cluster
     *
     * @param {number} [parameters.containerService.masterCount] The number of
     * master nodes in the container service.
     *
     * @param {number} [parameters.containerService.agentCount] The number of agent
     * nodes in the Container Service. This can be changed to scale the cluster.
     *
     * @param {string} [parameters.containerService.agentVmSize] The Azure VM size
     * of the agent VM nodes. This cannot be changed once the cluster is created.
     * This list is non exhaustive; refer to
     * https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes for
     * the possible VM sizes. Possible values include: 'Standard_A0',
     * 'Standard_A1', 'Standard_A2', 'Standard_A3', 'Standard_A4', 'Standard_A5',
     * 'Standard_A6', 'Standard_A7', 'Standard_A8', 'Standard_A9', 'Standard_A10',
     * 'Standard_A11', 'Standard_D1', 'Standard_D2', 'Standard_D3', 'Standard_D4',
     * 'Standard_D11', 'Standard_D12', 'Standard_D13', 'Standard_D14',
     * 'Standard_D1_v2', 'Standard_D2_v2', 'Standard_D3_v2', 'Standard_D4_v2',
     * 'Standard_D5_v2', 'Standard_D11_v2', 'Standard_D12_v2', 'Standard_D13_v2',
     * 'Standard_D14_v2', 'Standard_G1', 'Standard_G2', 'Standard_G3',
     * 'Standard_G4', 'Standard_G5', 'Standard_DS1', 'Standard_DS2',
     * 'Standard_DS3', 'Standard_DS4', 'Standard_DS11', 'Standard_DS12',
     * 'Standard_DS13', 'Standard_DS14', 'Standard_GS1', 'Standard_GS2',
     * 'Standard_GS3', 'Standard_GS4', 'Standard_GS5'
     *
     * @param {object} [parameters.appInsights] AppInsights configuration.
     *
     * @param {string} [parameters.appInsights.resourceId] ARM resource ID of the
     * App Insights.
     *
     * @param {object} [parameters.globalServiceConfiguration] Contains global
     * configuration for the web services in the cluster.
     *
     * @param {object} [parameters.globalServiceConfiguration.additionalProperties]
     * Unmatched properties from the message are deserialized this collection
     *
     * @param {string} [parameters.globalServiceConfiguration.etag] The
     * configuartion ETag for updates.
     *
     * @param {object} [parameters.globalServiceConfiguration.ssl] The SSL
     * configuration properties
     *
     * @param {string} [parameters.globalServiceConfiguration.ssl.status] SSL
     * status. Allowed values are Enabled and Disabled. Possible values include:
     * 'Enabled', 'Disabled'
     *
     * @param {string} [parameters.globalServiceConfiguration.ssl.cert] The SSL
     * cert data in PEM format encoded as base64 string
     *
     * @param {string} [parameters.globalServiceConfiguration.ssl.key] The SSL key
     * data in PEM format encoded as base64 string. This is not returned in
     * response of GET/PUT on the resource. To see this please call listKeys API.
     *
     * @param {string} [parameters.globalServiceConfiguration.ssl.cname] The CName
     * of the certificate.
     *
     * @param {object} [parameters.globalServiceConfiguration.serviceAuth] Optional
     * global authorization keys for all user services deployed in cluster. These
     * are used if the service does not have auth keys.
     *
     * @param {string}
     * parameters.globalServiceConfiguration.serviceAuth.primaryAuthKeyHash The
     * primary auth key hash. This is not returned in response of GET/PUT on the
     * resource.. To see this please call listKeys API.
     *
     * @param {string}
     * parameters.globalServiceConfiguration.serviceAuth.secondaryAuthKeyHash The
     * secondary auth key hash. This is not returned in response of GET/PUT on the
     * resource.. To see this please call listKeys API.
     *
     * @param {object} [parameters.globalServiceConfiguration.autoScale] The
     * auto-scale configuration
     *
     * @param {string} [parameters.globalServiceConfiguration.autoScale.status] If
     * auto-scale is enabled for all services. Each service can turn it off
     * individually. Possible values include: 'Enabled', 'Disabled'
     *
     * @param {number}
     * [parameters.globalServiceConfiguration.autoScale.minReplicas] The minimum
     * number of replicas for each service.
     *
     * @param {number}
     * [parameters.globalServiceConfiguration.autoScale.maxReplicas] The maximum
     * number of replicas for each service.
     *
     * @param {number}
     * [parameters.globalServiceConfiguration.autoScale.targetUtilization] The
     * target utilization.
     *
     * @param {number}
     * [parameters.globalServiceConfiguration.autoScale.refreshPeriodInSeconds]
     * Refresh period in seconds.
     *
     * @param {string} parameters.location Specifies the location of the resource.
     *
     * @param {object} [parameters.tags] Contains resource tags defined as
     * key/value pairs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationalizationCluster>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, clusterName: string, parameters: models.OperationalizationCluster, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationalizationCluster>>;

    /**
     * Create or update an operationalization cluster.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} parameters Parameters supplied to create or update an
     * Operationalization cluster.
     *
     * @param {string} [parameters.description] The description of the cluster.
     *
     * @param {string} parameters.clusterType The cluster type. Possible values
     * include: 'ACS', 'Local'
     *
     * @param {object} [parameters.storageAccount] Storage Account properties.
     *
     * @param {string} [parameters.storageAccount.resourceId] ARM resource ID of
     * the Azure Storage Account to store CLI specific files. If not provided one
     * will be created. This cannot be changed once the cluster is created.
     *
     * @param {object} [parameters.containerRegistry] Container Registry
     * properties.
     *
     * @param {string} [parameters.containerRegistry.resourceId] ARM resource ID of
     * the Azure Container Registry used to store Docker images for web services in
     * the cluster. If not provided one will be created. This cannot be changed
     * once the cluster is created.
     *
     * @param {object} [parameters.containerService] Parameters for the Azure
     * Container Service cluster.
     *
     * @param {string} parameters.containerService.orchestratorType Type of
     * orchestrator. It cannot be changed once the cluster is created. Possible
     * values include: 'Kubernetes', 'None'
     *
     * @param {object} parameters.containerService.orchestratorProperties
     * Orchestrator specific properties
     *
     * @param {object}
     * parameters.containerService.orchestratorProperties.servicePrincipal The
     * Azure Service Principal used by Kubernetes
     *
     * @param {string}
     * parameters.containerService.orchestratorProperties.servicePrincipal.clientId
     * The service principal client ID
     *
     * @param {string}
     * parameters.containerService.orchestratorProperties.servicePrincipal.secret
     * The service principal secret. This is not returned in response of GET/PUT on
     * the resource. To see this please call listKeys.
     *
     * @param {array} [parameters.containerService.systemServices] The system
     * services deployed to the cluster
     *
     * @param {number} [parameters.containerService.masterCount] The number of
     * master nodes in the container service.
     *
     * @param {number} [parameters.containerService.agentCount] The number of agent
     * nodes in the Container Service. This can be changed to scale the cluster.
     *
     * @param {string} [parameters.containerService.agentVmSize] The Azure VM size
     * of the agent VM nodes. This cannot be changed once the cluster is created.
     * This list is non exhaustive; refer to
     * https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes for
     * the possible VM sizes. Possible values include: 'Standard_A0',
     * 'Standard_A1', 'Standard_A2', 'Standard_A3', 'Standard_A4', 'Standard_A5',
     * 'Standard_A6', 'Standard_A7', 'Standard_A8', 'Standard_A9', 'Standard_A10',
     * 'Standard_A11', 'Standard_D1', 'Standard_D2', 'Standard_D3', 'Standard_D4',
     * 'Standard_D11', 'Standard_D12', 'Standard_D13', 'Standard_D14',
     * 'Standard_D1_v2', 'Standard_D2_v2', 'Standard_D3_v2', 'Standard_D4_v2',
     * 'Standard_D5_v2', 'Standard_D11_v2', 'Standard_D12_v2', 'Standard_D13_v2',
     * 'Standard_D14_v2', 'Standard_G1', 'Standard_G2', 'Standard_G3',
     * 'Standard_G4', 'Standard_G5', 'Standard_DS1', 'Standard_DS2',
     * 'Standard_DS3', 'Standard_DS4', 'Standard_DS11', 'Standard_DS12',
     * 'Standard_DS13', 'Standard_DS14', 'Standard_GS1', 'Standard_GS2',
     * 'Standard_GS3', 'Standard_GS4', 'Standard_GS5'
     *
     * @param {object} [parameters.appInsights] AppInsights configuration.
     *
     * @param {string} [parameters.appInsights.resourceId] ARM resource ID of the
     * App Insights.
     *
     * @param {object} [parameters.globalServiceConfiguration] Contains global
     * configuration for the web services in the cluster.
     *
     * @param {object} [parameters.globalServiceConfiguration.additionalProperties]
     * Unmatched properties from the message are deserialized this collection
     *
     * @param {string} [parameters.globalServiceConfiguration.etag] The
     * configuartion ETag for updates.
     *
     * @param {object} [parameters.globalServiceConfiguration.ssl] The SSL
     * configuration properties
     *
     * @param {string} [parameters.globalServiceConfiguration.ssl.status] SSL
     * status. Allowed values are Enabled and Disabled. Possible values include:
     * 'Enabled', 'Disabled'
     *
     * @param {string} [parameters.globalServiceConfiguration.ssl.cert] The SSL
     * cert data in PEM format encoded as base64 string
     *
     * @param {string} [parameters.globalServiceConfiguration.ssl.key] The SSL key
     * data in PEM format encoded as base64 string. This is not returned in
     * response of GET/PUT on the resource. To see this please call listKeys API.
     *
     * @param {string} [parameters.globalServiceConfiguration.ssl.cname] The CName
     * of the certificate.
     *
     * @param {object} [parameters.globalServiceConfiguration.serviceAuth] Optional
     * global authorization keys for all user services deployed in cluster. These
     * are used if the service does not have auth keys.
     *
     * @param {string}
     * parameters.globalServiceConfiguration.serviceAuth.primaryAuthKeyHash The
     * primary auth key hash. This is not returned in response of GET/PUT on the
     * resource.. To see this please call listKeys API.
     *
     * @param {string}
     * parameters.globalServiceConfiguration.serviceAuth.secondaryAuthKeyHash The
     * secondary auth key hash. This is not returned in response of GET/PUT on the
     * resource.. To see this please call listKeys API.
     *
     * @param {object} [parameters.globalServiceConfiguration.autoScale] The
     * auto-scale configuration
     *
     * @param {string} [parameters.globalServiceConfiguration.autoScale.status] If
     * auto-scale is enabled for all services. Each service can turn it off
     * individually. Possible values include: 'Enabled', 'Disabled'
     *
     * @param {number}
     * [parameters.globalServiceConfiguration.autoScale.minReplicas] The minimum
     * number of replicas for each service.
     *
     * @param {number}
     * [parameters.globalServiceConfiguration.autoScale.maxReplicas] The maximum
     * number of replicas for each service.
     *
     * @param {number}
     * [parameters.globalServiceConfiguration.autoScale.targetUtilization] The
     * target utilization.
     *
     * @param {number}
     * [parameters.globalServiceConfiguration.autoScale.refreshPeriodInSeconds]
     * Refresh period in seconds.
     *
     * @param {string} parameters.location Specifies the location of the resource.
     *
     * @param {object} [parameters.tags] Contains resource tags defined as
     * key/value pairs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationalizationCluster} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationalizationCluster} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationalizationCluster} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, clusterName: string, parameters: models.OperationalizationCluster, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationalizationCluster>;
    createOrUpdate(resourceGroupName: string, clusterName: string, parameters: models.OperationalizationCluster, callback: ServiceCallback<models.OperationalizationCluster>): void;
    createOrUpdate(resourceGroupName: string, clusterName: string, parameters: models.OperationalizationCluster, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationalizationCluster>): void;


    /**
     * Gets the operationalization cluster resource view. Note that the credentials
     * are not returned by this call. Call ListKeys to get them.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationalizationCluster>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationalizationCluster>>;

    /**
     * Gets the operationalization cluster resource view. Note that the credentials
     * are not returned by this call. Call ListKeys to get them.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationalizationCluster} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationalizationCluster} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationalizationCluster} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationalizationCluster>;
    get(resourceGroupName: string, clusterName: string, callback: ServiceCallback<models.OperationalizationCluster>): void;
    get(resourceGroupName: string, clusterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationalizationCluster>): void;


    /**
     * The PATCH operation can be used to update only the tags for a cluster. Use
     * PUT operation to update other properties.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} parameters The parameters supplied to patch the cluster.
     *
     * @param {object} [parameters.tags] Gets or sets a list of key value pairs
     * that describe the resource. These tags can be used in viewing and grouping
     * this resource (across resource groups). A maximum of 15 tags can be provided
     * for a resource. Each tag must have a key no greater in length than 128
     * characters and a value no greater in length than 256 characters.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationalizationCluster>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, clusterName: string, parameters: models.OperationalizationClusterUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationalizationCluster>>;

    /**
     * The PATCH operation can be used to update only the tags for a cluster. Use
     * PUT operation to update other properties.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} parameters The parameters supplied to patch the cluster.
     *
     * @param {object} [parameters.tags] Gets or sets a list of key value pairs
     * that describe the resource. These tags can be used in viewing and grouping
     * this resource (across resource groups). A maximum of 15 tags can be provided
     * for a resource. Each tag must have a key no greater in length than 128
     * characters and a value no greater in length than 256 characters.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationalizationCluster} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationalizationCluster} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationalizationCluster} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, clusterName: string, parameters: models.OperationalizationClusterUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationalizationCluster>;
    update(resourceGroupName: string, clusterName: string, parameters: models.OperationalizationClusterUpdateParameters, callback: ServiceCallback<models.OperationalizationCluster>): void;
    update(resourceGroupName: string, clusterName: string, parameters: models.OperationalizationClusterUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationalizationCluster>): void;


    /**
     * Deletes the specified cluster.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes the specified cluster.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, clusterName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, clusterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Gets the credentials for the specified cluster such as Storage, ACR and ACS
     * credentials. This is a long running operation because it fetches keys from
     * dependencies.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationalizationClusterCredentials>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listKeysWithHttpOperationResponse(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationalizationClusterCredentials>>;

    /**
     * Gets the credentials for the specified cluster such as Storage, ACR and ACS
     * credentials. This is a long running operation because it fetches keys from
     * dependencies.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationalizationClusterCredentials} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationalizationClusterCredentials} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationalizationClusterCredentials} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listKeys(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationalizationClusterCredentials>;
    listKeys(resourceGroupName: string, clusterName: string, callback: ServiceCallback<models.OperationalizationClusterCredentials>): void;
    listKeys(resourceGroupName: string, clusterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationalizationClusterCredentials>): void;


    /**
     * Checks if updates are available for system services in the cluster.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<CheckSystemServicesUpdatesAvailableResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    checkSystemServicesUpdatesAvailableWithHttpOperationResponse(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CheckSystemServicesUpdatesAvailableResponse>>;

    /**
     * Checks if updates are available for system services in the cluster.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {CheckSystemServicesUpdatesAvailableResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {CheckSystemServicesUpdatesAvailableResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link CheckSystemServicesUpdatesAvailableResponse}
     *                      for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    checkSystemServicesUpdatesAvailable(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CheckSystemServicesUpdatesAvailableResponse>;
    checkSystemServicesUpdatesAvailable(resourceGroupName: string, clusterName: string, callback: ServiceCallback<models.CheckSystemServicesUpdatesAvailableResponse>): void;
    checkSystemServicesUpdatesAvailable(resourceGroupName: string, clusterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CheckSystemServicesUpdatesAvailableResponse>): void;


    /**
     * Updates system services in a cluster.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<UpdateSystemServicesResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateSystemServicesWithHttpOperationResponse(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.UpdateSystemServicesResponse>>;

    /**
     * Updates system services in a cluster.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {UpdateSystemServicesResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {UpdateSystemServicesResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link UpdateSystemServicesResponse} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    updateSystemServices(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.UpdateSystemServicesResponse>;
    updateSystemServices(resourceGroupName: string, clusterName: string, callback: ServiceCallback<models.UpdateSystemServicesResponse>): void;
    updateSystemServices(resourceGroupName: string, clusterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.UpdateSystemServicesResponse>): void;


    /**
     * Gets the clusters in the specified resource group.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.skiptoken] Continuation token for pagination.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PaginatedOperationalizationClustersList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { skiptoken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PaginatedOperationalizationClustersList>>;

    /**
     * Gets the clusters in the specified resource group.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.skiptoken] Continuation token for pagination.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PaginatedOperationalizationClustersList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PaginatedOperationalizationClustersList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PaginatedOperationalizationClustersList} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { skiptoken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.PaginatedOperationalizationClustersList>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.PaginatedOperationalizationClustersList>): void;
    listByResourceGroup(resourceGroupName: string, options: { skiptoken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PaginatedOperationalizationClustersList>): void;


    /**
     * Gets the operationalization clusters in the specified subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.skiptoken] Continuation token for pagination.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PaginatedOperationalizationClustersList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySubscriptionIdWithHttpOperationResponse(options?: { skiptoken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PaginatedOperationalizationClustersList>>;

    /**
     * Gets the operationalization clusters in the specified subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.skiptoken] Continuation token for pagination.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PaginatedOperationalizationClustersList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PaginatedOperationalizationClustersList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PaginatedOperationalizationClustersList} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySubscriptionId(options?: { skiptoken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.PaginatedOperationalizationClustersList>;
    listBySubscriptionId(callback: ServiceCallback<models.PaginatedOperationalizationClustersList>): void;
    listBySubscriptionId(options: { skiptoken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PaginatedOperationalizationClustersList>): void;


    /**
     * Create or update an operationalization cluster.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} parameters Parameters supplied to create or update an
     * Operationalization cluster.
     *
     * @param {string} [parameters.description] The description of the cluster.
     *
     * @param {string} parameters.clusterType The cluster type. Possible values
     * include: 'ACS', 'Local'
     *
     * @param {object} [parameters.storageAccount] Storage Account properties.
     *
     * @param {string} [parameters.storageAccount.resourceId] ARM resource ID of
     * the Azure Storage Account to store CLI specific files. If not provided one
     * will be created. This cannot be changed once the cluster is created.
     *
     * @param {object} [parameters.containerRegistry] Container Registry
     * properties.
     *
     * @param {string} [parameters.containerRegistry.resourceId] ARM resource ID of
     * the Azure Container Registry used to store Docker images for web services in
     * the cluster. If not provided one will be created. This cannot be changed
     * once the cluster is created.
     *
     * @param {object} [parameters.containerService] Parameters for the Azure
     * Container Service cluster.
     *
     * @param {string} parameters.containerService.orchestratorType Type of
     * orchestrator. It cannot be changed once the cluster is created. Possible
     * values include: 'Kubernetes', 'None'
     *
     * @param {object} parameters.containerService.orchestratorProperties
     * Orchestrator specific properties
     *
     * @param {object}
     * parameters.containerService.orchestratorProperties.servicePrincipal The
     * Azure Service Principal used by Kubernetes
     *
     * @param {string}
     * parameters.containerService.orchestratorProperties.servicePrincipal.clientId
     * The service principal client ID
     *
     * @param {string}
     * parameters.containerService.orchestratorProperties.servicePrincipal.secret
     * The service principal secret. This is not returned in response of GET/PUT on
     * the resource. To see this please call listKeys.
     *
     * @param {array} [parameters.containerService.systemServices] The system
     * services deployed to the cluster
     *
     * @param {number} [parameters.containerService.masterCount] The number of
     * master nodes in the container service.
     *
     * @param {number} [parameters.containerService.agentCount] The number of agent
     * nodes in the Container Service. This can be changed to scale the cluster.
     *
     * @param {string} [parameters.containerService.agentVmSize] The Azure VM size
     * of the agent VM nodes. This cannot be changed once the cluster is created.
     * This list is non exhaustive; refer to
     * https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes for
     * the possible VM sizes. Possible values include: 'Standard_A0',
     * 'Standard_A1', 'Standard_A2', 'Standard_A3', 'Standard_A4', 'Standard_A5',
     * 'Standard_A6', 'Standard_A7', 'Standard_A8', 'Standard_A9', 'Standard_A10',
     * 'Standard_A11', 'Standard_D1', 'Standard_D2', 'Standard_D3', 'Standard_D4',
     * 'Standard_D11', 'Standard_D12', 'Standard_D13', 'Standard_D14',
     * 'Standard_D1_v2', 'Standard_D2_v2', 'Standard_D3_v2', 'Standard_D4_v2',
     * 'Standard_D5_v2', 'Standard_D11_v2', 'Standard_D12_v2', 'Standard_D13_v2',
     * 'Standard_D14_v2', 'Standard_G1', 'Standard_G2', 'Standard_G3',
     * 'Standard_G4', 'Standard_G5', 'Standard_DS1', 'Standard_DS2',
     * 'Standard_DS3', 'Standard_DS4', 'Standard_DS11', 'Standard_DS12',
     * 'Standard_DS13', 'Standard_DS14', 'Standard_GS1', 'Standard_GS2',
     * 'Standard_GS3', 'Standard_GS4', 'Standard_GS5'
     *
     * @param {object} [parameters.appInsights] AppInsights configuration.
     *
     * @param {string} [parameters.appInsights.resourceId] ARM resource ID of the
     * App Insights.
     *
     * @param {object} [parameters.globalServiceConfiguration] Contains global
     * configuration for the web services in the cluster.
     *
     * @param {object} [parameters.globalServiceConfiguration.additionalProperties]
     * Unmatched properties from the message are deserialized this collection
     *
     * @param {string} [parameters.globalServiceConfiguration.etag] The
     * configuartion ETag for updates.
     *
     * @param {object} [parameters.globalServiceConfiguration.ssl] The SSL
     * configuration properties
     *
     * @param {string} [parameters.globalServiceConfiguration.ssl.status] SSL
     * status. Allowed values are Enabled and Disabled. Possible values include:
     * 'Enabled', 'Disabled'
     *
     * @param {string} [parameters.globalServiceConfiguration.ssl.cert] The SSL
     * cert data in PEM format encoded as base64 string
     *
     * @param {string} [parameters.globalServiceConfiguration.ssl.key] The SSL key
     * data in PEM format encoded as base64 string. This is not returned in
     * response of GET/PUT on the resource. To see this please call listKeys API.
     *
     * @param {string} [parameters.globalServiceConfiguration.ssl.cname] The CName
     * of the certificate.
     *
     * @param {object} [parameters.globalServiceConfiguration.serviceAuth] Optional
     * global authorization keys for all user services deployed in cluster. These
     * are used if the service does not have auth keys.
     *
     * @param {string}
     * parameters.globalServiceConfiguration.serviceAuth.primaryAuthKeyHash The
     * primary auth key hash. This is not returned in response of GET/PUT on the
     * resource.. To see this please call listKeys API.
     *
     * @param {string}
     * parameters.globalServiceConfiguration.serviceAuth.secondaryAuthKeyHash The
     * secondary auth key hash. This is not returned in response of GET/PUT on the
     * resource.. To see this please call listKeys API.
     *
     * @param {object} [parameters.globalServiceConfiguration.autoScale] The
     * auto-scale configuration
     *
     * @param {string} [parameters.globalServiceConfiguration.autoScale.status] If
     * auto-scale is enabled for all services. Each service can turn it off
     * individually. Possible values include: 'Enabled', 'Disabled'
     *
     * @param {number}
     * [parameters.globalServiceConfiguration.autoScale.minReplicas] The minimum
     * number of replicas for each service.
     *
     * @param {number}
     * [parameters.globalServiceConfiguration.autoScale.maxReplicas] The maximum
     * number of replicas for each service.
     *
     * @param {number}
     * [parameters.globalServiceConfiguration.autoScale.targetUtilization] The
     * target utilization.
     *
     * @param {number}
     * [parameters.globalServiceConfiguration.autoScale.refreshPeriodInSeconds]
     * Refresh period in seconds.
     *
     * @param {string} parameters.location Specifies the location of the resource.
     *
     * @param {object} [parameters.tags] Contains resource tags defined as
     * key/value pairs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationalizationCluster>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, clusterName: string, parameters: models.OperationalizationCluster, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationalizationCluster>>;

    /**
     * Create or update an operationalization cluster.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} parameters Parameters supplied to create or update an
     * Operationalization cluster.
     *
     * @param {string} [parameters.description] The description of the cluster.
     *
     * @param {string} parameters.clusterType The cluster type. Possible values
     * include: 'ACS', 'Local'
     *
     * @param {object} [parameters.storageAccount] Storage Account properties.
     *
     * @param {string} [parameters.storageAccount.resourceId] ARM resource ID of
     * the Azure Storage Account to store CLI specific files. If not provided one
     * will be created. This cannot be changed once the cluster is created.
     *
     * @param {object} [parameters.containerRegistry] Container Registry
     * properties.
     *
     * @param {string} [parameters.containerRegistry.resourceId] ARM resource ID of
     * the Azure Container Registry used to store Docker images for web services in
     * the cluster. If not provided one will be created. This cannot be changed
     * once the cluster is created.
     *
     * @param {object} [parameters.containerService] Parameters for the Azure
     * Container Service cluster.
     *
     * @param {string} parameters.containerService.orchestratorType Type of
     * orchestrator. It cannot be changed once the cluster is created. Possible
     * values include: 'Kubernetes', 'None'
     *
     * @param {object} parameters.containerService.orchestratorProperties
     * Orchestrator specific properties
     *
     * @param {object}
     * parameters.containerService.orchestratorProperties.servicePrincipal The
     * Azure Service Principal used by Kubernetes
     *
     * @param {string}
     * parameters.containerService.orchestratorProperties.servicePrincipal.clientId
     * The service principal client ID
     *
     * @param {string}
     * parameters.containerService.orchestratorProperties.servicePrincipal.secret
     * The service principal secret. This is not returned in response of GET/PUT on
     * the resource. To see this please call listKeys.
     *
     * @param {array} [parameters.containerService.systemServices] The system
     * services deployed to the cluster
     *
     * @param {number} [parameters.containerService.masterCount] The number of
     * master nodes in the container service.
     *
     * @param {number} [parameters.containerService.agentCount] The number of agent
     * nodes in the Container Service. This can be changed to scale the cluster.
     *
     * @param {string} [parameters.containerService.agentVmSize] The Azure VM size
     * of the agent VM nodes. This cannot be changed once the cluster is created.
     * This list is non exhaustive; refer to
     * https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes for
     * the possible VM sizes. Possible values include: 'Standard_A0',
     * 'Standard_A1', 'Standard_A2', 'Standard_A3', 'Standard_A4', 'Standard_A5',
     * 'Standard_A6', 'Standard_A7', 'Standard_A8', 'Standard_A9', 'Standard_A10',
     * 'Standard_A11', 'Standard_D1', 'Standard_D2', 'Standard_D3', 'Standard_D4',
     * 'Standard_D11', 'Standard_D12', 'Standard_D13', 'Standard_D14',
     * 'Standard_D1_v2', 'Standard_D2_v2', 'Standard_D3_v2', 'Standard_D4_v2',
     * 'Standard_D5_v2', 'Standard_D11_v2', 'Standard_D12_v2', 'Standard_D13_v2',
     * 'Standard_D14_v2', 'Standard_G1', 'Standard_G2', 'Standard_G3',
     * 'Standard_G4', 'Standard_G5', 'Standard_DS1', 'Standard_DS2',
     * 'Standard_DS3', 'Standard_DS4', 'Standard_DS11', 'Standard_DS12',
     * 'Standard_DS13', 'Standard_DS14', 'Standard_GS1', 'Standard_GS2',
     * 'Standard_GS3', 'Standard_GS4', 'Standard_GS5'
     *
     * @param {object} [parameters.appInsights] AppInsights configuration.
     *
     * @param {string} [parameters.appInsights.resourceId] ARM resource ID of the
     * App Insights.
     *
     * @param {object} [parameters.globalServiceConfiguration] Contains global
     * configuration for the web services in the cluster.
     *
     * @param {object} [parameters.globalServiceConfiguration.additionalProperties]
     * Unmatched properties from the message are deserialized this collection
     *
     * @param {string} [parameters.globalServiceConfiguration.etag] The
     * configuartion ETag for updates.
     *
     * @param {object} [parameters.globalServiceConfiguration.ssl] The SSL
     * configuration properties
     *
     * @param {string} [parameters.globalServiceConfiguration.ssl.status] SSL
     * status. Allowed values are Enabled and Disabled. Possible values include:
     * 'Enabled', 'Disabled'
     *
     * @param {string} [parameters.globalServiceConfiguration.ssl.cert] The SSL
     * cert data in PEM format encoded as base64 string
     *
     * @param {string} [parameters.globalServiceConfiguration.ssl.key] The SSL key
     * data in PEM format encoded as base64 string. This is not returned in
     * response of GET/PUT on the resource. To see this please call listKeys API.
     *
     * @param {string} [parameters.globalServiceConfiguration.ssl.cname] The CName
     * of the certificate.
     *
     * @param {object} [parameters.globalServiceConfiguration.serviceAuth] Optional
     * global authorization keys for all user services deployed in cluster. These
     * are used if the service does not have auth keys.
     *
     * @param {string}
     * parameters.globalServiceConfiguration.serviceAuth.primaryAuthKeyHash The
     * primary auth key hash. This is not returned in response of GET/PUT on the
     * resource.. To see this please call listKeys API.
     *
     * @param {string}
     * parameters.globalServiceConfiguration.serviceAuth.secondaryAuthKeyHash The
     * secondary auth key hash. This is not returned in response of GET/PUT on the
     * resource.. To see this please call listKeys API.
     *
     * @param {object} [parameters.globalServiceConfiguration.autoScale] The
     * auto-scale configuration
     *
     * @param {string} [parameters.globalServiceConfiguration.autoScale.status] If
     * auto-scale is enabled for all services. Each service can turn it off
     * individually. Possible values include: 'Enabled', 'Disabled'
     *
     * @param {number}
     * [parameters.globalServiceConfiguration.autoScale.minReplicas] The minimum
     * number of replicas for each service.
     *
     * @param {number}
     * [parameters.globalServiceConfiguration.autoScale.maxReplicas] The maximum
     * number of replicas for each service.
     *
     * @param {number}
     * [parameters.globalServiceConfiguration.autoScale.targetUtilization] The
     * target utilization.
     *
     * @param {number}
     * [parameters.globalServiceConfiguration.autoScale.refreshPeriodInSeconds]
     * Refresh period in seconds.
     *
     * @param {string} parameters.location Specifies the location of the resource.
     *
     * @param {object} [parameters.tags] Contains resource tags defined as
     * key/value pairs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationalizationCluster} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationalizationCluster} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationalizationCluster} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, parameters: models.OperationalizationCluster, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationalizationCluster>;
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, parameters: models.OperationalizationCluster, callback: ServiceCallback<models.OperationalizationCluster>): void;
    beginCreateOrUpdate(resourceGroupName: string, clusterName: string, parameters: models.OperationalizationCluster, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationalizationCluster>): void;


    /**
     * Deletes the specified cluster.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes the specified cluster.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, clusterName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, clusterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Updates system services in a cluster.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<UpdateSystemServicesResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateSystemServicesWithHttpOperationResponse(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.UpdateSystemServicesResponse>>;

    /**
     * Updates system services in a cluster.
     *
     * @param {string} resourceGroupName Name of the resource group in which the
     * cluster is located.
     *
     * @param {string} clusterName The name of the cluster.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {UpdateSystemServicesResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {UpdateSystemServicesResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link UpdateSystemServicesResponse} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdateSystemServices(resourceGroupName: string, clusterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.UpdateSystemServicesResponse>;
    beginUpdateSystemServices(resourceGroupName: string, clusterName: string, callback: ServiceCallback<models.UpdateSystemServicesResponse>): void;
    beginUpdateSystemServices(resourceGroupName: string, clusterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.UpdateSystemServicesResponse>): void;


    /**
     * Gets the clusters in the specified resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PaginatedOperationalizationClustersList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PaginatedOperationalizationClustersList>>;

    /**
     * Gets the clusters in the specified resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PaginatedOperationalizationClustersList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PaginatedOperationalizationClustersList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PaginatedOperationalizationClustersList} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PaginatedOperationalizationClustersList>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.PaginatedOperationalizationClustersList>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PaginatedOperationalizationClustersList>): void;


    /**
     * Gets the operationalization clusters in the specified subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PaginatedOperationalizationClustersList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySubscriptionIdNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PaginatedOperationalizationClustersList>>;

    /**
     * Gets the operationalization clusters in the specified subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PaginatedOperationalizationClustersList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PaginatedOperationalizationClustersList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PaginatedOperationalizationClustersList} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySubscriptionIdNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PaginatedOperationalizationClustersList>;
    listBySubscriptionIdNext(nextPageLink: string, callback: ServiceCallback<models.PaginatedOperationalizationClustersList>): void;
    listBySubscriptionIdNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PaginatedOperationalizationClustersList>): void;
}

/**
 * @class
 * MachineLearningCompute
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the MachineLearningComputeManagementClient.
 */
export interface MachineLearningCompute {


    /**
     * Gets all available operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AvailableOperations>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listAvailableOperationsWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AvailableOperations>>;

    /**
     * Gets all available operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AvailableOperations} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AvailableOperations} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AvailableOperations} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listAvailableOperations(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AvailableOperations>;
    listAvailableOperations(callback: ServiceCallback<models.AvailableOperations>): void;
    listAvailableOperations(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AvailableOperations>): void;
}

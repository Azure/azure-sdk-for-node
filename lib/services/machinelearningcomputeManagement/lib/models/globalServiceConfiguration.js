/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Global configuration for services in the cluster.
 *
 */
class GlobalServiceConfiguration {
  /**
   * Create a GlobalServiceConfiguration.
   * @property {string} [etag] The configuration ETag for updates.
   * @property {object} [ssl] The SSL configuration properties
   * @property {string} [ssl.status] SSL status. Allowed values are Enabled and
   * Disabled. Possible values include: 'Enabled', 'Disabled'
   * @property {string} [ssl.cert] The SSL cert data in PEM format.
   * @property {string} [ssl.key] The SSL key data in PEM format. This is not
   * returned in response of GET/PUT on the resource. To see this please call
   * listKeys API.
   * @property {string} [ssl.cname] The CName of the certificate.
   * @property {object} [serviceAuth] Optional global authorization keys for
   * all user services deployed in cluster. These are used if the service does
   * not have auth keys.
   * @property {string} [serviceAuth.primaryAuthKeyHash] The primary auth key
   * hash. This is not returned in response of GET/PUT on the resource.. To see
   * this please call listKeys API.
   * @property {string} [serviceAuth.secondaryAuthKeyHash] The secondary auth
   * key hash. This is not returned in response of GET/PUT on the resource.. To
   * see this please call listKeys API.
   * @property {object} [autoScale] The auto-scale configuration
   * @property {string} [autoScale.status] If auto-scale is enabled for all
   * services. Each service can turn it off individually. Possible values
   * include: 'Enabled', 'Disabled'
   * @property {number} [autoScale.minReplicas] The minimum number of replicas
   * for each service.
   * @property {number} [autoScale.maxReplicas] The maximum number of replicas
   * for each service.
   * @property {number} [autoScale.targetUtilization] The target utilization.
   * @property {number} [autoScale.refreshPeriodInSeconds] Refresh period in
   * seconds.
   */
  constructor() {
  }

  /**
   * Defines the metadata of GlobalServiceConfiguration
   *
   * @returns {object} metadata of GlobalServiceConfiguration
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'GlobalServiceConfiguration',
      type: {
        name: 'Composite',
        additionalProperties: {
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'ObjectElementType',
                type: {
                  name: 'Object'
                }
            }
          }
        },
        className: 'GlobalServiceConfiguration',
        modelProperties: {
          etag: {
            required: false,
            serializedName: 'etag',
            type: {
              name: 'String'
            }
          },
          ssl: {
            required: false,
            serializedName: 'ssl',
            type: {
              name: 'Composite',
              className: 'SslConfiguration'
            }
          },
          serviceAuth: {
            required: false,
            serializedName: 'serviceAuth',
            type: {
              name: 'Composite',
              className: 'ServiceAuthConfiguration'
            }
          },
          autoScale: {
            required: false,
            serializedName: 'autoScale',
            type: {
              name: 'Composite',
              className: 'AutoScaleConfiguration'
            }
          }
        }
      }
    };
  }
}

module.exports = GlobalServiceConfiguration;

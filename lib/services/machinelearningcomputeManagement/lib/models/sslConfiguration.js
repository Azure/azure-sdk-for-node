/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * SSL configuration. If configured data-plane calls to user services will be
 * exposed over SSL only.
 *
 */
class SslConfiguration {
  /**
   * Create a SslConfiguration.
   * @member {string} [status] SSL status. Allowed values are Enabled and
   * Disabled. Possible values include: 'Enabled', 'Disabled'. Default value:
   * 'Enabled' .
   * @member {string} [cert] The SSL cert data in PEM format encoded as base64
   * string
   * @member {string} [key] The SSL key data in PEM format encoded as base64
   * string. This is not returned in response of GET/PUT on the resource. To
   * see this please call listKeys API.
   * @member {string} [cname] The CName of the certificate.
   */
  constructor() {
  }

  /**
   * Defines the metadata of SslConfiguration
   *
   * @returns {object} metadata of SslConfiguration
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SslConfiguration',
      type: {
        name: 'Composite',
        className: 'SslConfiguration',
        modelProperties: {
          status: {
            required: false,
            serializedName: 'status',
            defaultValue: 'Enabled',
            type: {
              name: 'String'
            }
          },
          cert: {
            required: false,
            serializedName: 'cert',
            type: {
              name: 'String'
            }
          },
          key: {
            required: false,
            serializedName: 'key',
            type: {
              name: 'String'
            }
          },
          cname: {
            required: false,
            serializedName: 'cname',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = SslConfiguration;

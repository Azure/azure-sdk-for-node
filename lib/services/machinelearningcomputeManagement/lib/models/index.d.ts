/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure";
import * as moment from "moment";

export {

  BaseResource,
  CloudError
};

/**
 * Azure resource
 */
export interface Resource extends BaseResource {
  /**
   * Specifies the resource ID.
   */
  readonly id?: string;
  /**
   * Specifies the name of the resource.
   */
  readonly name?: string;
  /**
   * Specifies the location of the resource.
   */
  location: string;
  /**
   * Specifies the type of the resource.
   */
  readonly type?: string;
  /**
   * Contains resource tags defined as key/value pairs.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Error detail information.
 */
export interface ErrorDetail {
  /**
   * Error code.
   */
  code: string;
  /**
   * Error message.
   */
  message: string;
}

/**
 * Error response information.
 */
export interface ErrorResponse {
  /**
   * Error code.
   */
  code: string;
  /**
   * Error message.
   */
  message: string;
  /**
   * An array of error detail objects.
   */
  details?: ErrorDetail[];
}

/**
 * Wrapper for error response to follow ARM guidelines.
 */
export interface ErrorResponseWrapper {
  /**
   * The error response.
   */
  error?: ErrorResponse;
}

/**
 * Properties of Storage Account.
 */
export interface StorageAccountProperties {
  /**
   * ARM resource ID of the Azure Storage Account to store CLI specific files. If not provided one
   * will be created. This cannot be changed once the cluster is created.
   */
  resourceId?: string;
}

/**
 * Properties of Azure Container Registry.
 */
export interface ContainerRegistryProperties {
  /**
   * ARM resource ID of the Azure Container Registry used to store Docker images for web services
   * in the cluster. If not provided one will be created. This cannot be changed once the cluster
   * is created.
   */
  resourceId?: string;
}

/**
 * The Azure service principal used by Kubernetes for configuring load balancers
 */
export interface ServicePrincipalProperties {
  /**
   * The service principal client ID
   */
  clientId: string;
  /**
   * The service principal secret. This is not returned in response of GET/PUT on the resource. To
   * see this please call listKeys.
   */
  secret: string;
}

/**
 * Kubernetes cluster specific properties
 */
export interface KubernetesClusterProperties {
  /**
   * The Azure Service Principal used by Kubernetes
   */
  servicePrincipal?: ServicePrincipalProperties;
}

/**
 * Information about a system service deployed in the cluster
 */
export interface SystemService {
  /**
   * The system service type. Possible values include: 'None', 'ScoringFrontEnd', 'BatchFrontEnd'
   */
  systemServiceType: string;
  /**
   * The public IP address of the system service
   */
  readonly publicIpAddress?: string;
  /**
   * The state of the system service
   */
  readonly version?: string;
}

/**
 * Information about the container service backing the cluster
 */
export interface AcsClusterProperties {
  /**
   * The FQDN of the cluster.
   */
  readonly clusterFqdn?: string;
  /**
   * Type of orchestrator. It cannot be changed once the cluster is created. Possible values
   * include: 'Kubernetes', 'None'
   */
  orchestratorType: string;
  /**
   * Orchestrator specific properties
   */
  orchestratorProperties?: KubernetesClusterProperties;
  /**
   * The system services deployed to the cluster
   */
  systemServices?: SystemService[];
  /**
   * The number of master nodes in the container service.
   */
  masterCount?: number;
  /**
   * The number of agent nodes in the Container Service. This can be changed to scale the cluster.
   */
  agentCount?: number;
  /**
   * The Azure VM size of the agent VM nodes. This cannot be changed once the cluster is created.
   * This list is non exhaustive; refer to
   * https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes for the possible VM
   * sizes. Possible values include: 'Standard_A0', 'Standard_A1', 'Standard_A2', 'Standard_A3',
   * 'Standard_A4', 'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8', 'Standard_A9',
   * 'Standard_A10', 'Standard_A11', 'Standard_D1', 'Standard_D2', 'Standard_D3', 'Standard_D4',
   * 'Standard_D11', 'Standard_D12', 'Standard_D13', 'Standard_D14', 'Standard_D1_v2',
   * 'Standard_D2_v2', 'Standard_D3_v2', 'Standard_D4_v2', 'Standard_D5_v2', 'Standard_D11_v2',
   * 'Standard_D12_v2', 'Standard_D13_v2', 'Standard_D14_v2', 'Standard_G1', 'Standard_G2',
   * 'Standard_G3', 'Standard_G4', 'Standard_G5', 'Standard_DS1', 'Standard_DS2', 'Standard_DS3',
   * 'Standard_DS4', 'Standard_DS11', 'Standard_DS12', 'Standard_DS13', 'Standard_DS14',
   * 'Standard_GS1', 'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS5'
   */
  agentVmSize?: string;
}

/**
 * Properties of App Insights.
 */
export interface AppInsightsProperties {
  /**
   * ARM resource ID of the App Insights.
   */
  resourceId?: string;
}

/**
 * SSL configuration. If configured data-plane calls to user services will be exposed over SSL
 * only.
 */
export interface SslConfiguration {
  /**
   * SSL status. Allowed values are Enabled and Disabled. Possible values include: 'Enabled',
   * 'Disabled'
   */
  status?: string;
  /**
   * The SSL cert data in PEM format.
   */
  cert?: string;
  /**
   * The SSL key data in PEM format. This is not returned in response of GET/PUT on the resource.
   * To see this please call listKeys API.
   */
  key?: string;
  /**
   * The CName of the certificate.
   */
  cname?: string;
}

/**
 * Global service auth configuration properties. These are the data-plane authorization keys and
 * are used if a service doesn't define it's own.
 */
export interface ServiceAuthConfiguration {
  /**
   * The primary auth key hash. This is not returned in response of GET/PUT on the resource.. To
   * see this please call listKeys API.
   */
  primaryAuthKeyHash: string;
  /**
   * The secondary auth key hash. This is not returned in response of GET/PUT on the resource.. To
   * see this please call listKeys API.
   */
  secondaryAuthKeyHash: string;
}

/**
 * AutoScale configuration properties.
 */
export interface AutoScaleConfiguration {
  /**
   * If auto-scale is enabled for all services. Each service can turn it off individually. Possible
   * values include: 'Enabled', 'Disabled'
   */
  status?: string;
  /**
   * The minimum number of replicas for each service.
   */
  minReplicas?: number;
  /**
   * The maximum number of replicas for each service.
   */
  maxReplicas?: number;
  /**
   * The target utilization.
   */
  targetUtilization?: number;
  /**
   * Refresh period in seconds.
   */
  refreshPeriodInSeconds?: number;
}

/**
 * Global configuration for services in the cluster.
 */
export interface GlobalServiceConfiguration {
  /**
   * The configuration ETag for updates.
   */
  etag?: string;
  /**
   * The SSL configuration properties
   */
  ssl?: SslConfiguration;
  /**
   * Optional global authorization keys for all user services deployed in cluster. These are used
   * if the service does not have auth keys.
   */
  serviceAuth?: ServiceAuthConfiguration;
  /**
   * The auto-scale configuration
   */
  autoScale?: AutoScaleConfiguration;
  /**
   * Describes unknown properties. The value of an unknown property can be of "any" type.
   */
  [additionalPropertyName: string]: any;
}

/**
 * Instance of an Azure ML Operationalization Cluster resource.
 */
export interface OperationalizationCluster extends Resource {
  /**
   * The description of the cluster.
   */
  description?: string;
  /**
   * The date and time when the cluster was created.
   */
  readonly createdOn?: Date;
  /**
   * The date and time when the cluster was last modified.
   */
  readonly modifiedOn?: Date;
  /**
   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning,
   * Succeeded, and Failed. Possible values include: 'Unknown', 'Updating', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed', 'Canceled'
   */
  readonly provisioningState?: string;
  /**
   * List of provisioning errors reported by the resource provider.
   */
  readonly provisioningErrors?: ErrorResponseWrapper[];
  /**
   * The cluster type. Possible values include: 'ACS', 'Local'
   */
  clusterType: string;
  /**
   * Storage Account properties.
   */
  storageAccount?: StorageAccountProperties;
  /**
   * Container Registry properties.
   */
  containerRegistry?: ContainerRegistryProperties;
  /**
   * Parameters for the Azure Container Service cluster.
   */
  containerService?: AcsClusterProperties;
  /**
   * AppInsights configuration.
   */
  appInsights?: AppInsightsProperties;
  /**
   * Contains global configuration for the web services in the cluster.
   */
  globalServiceConfiguration?: GlobalServiceConfiguration;
}

/**
 * Parameters for PATCH operation on an operationalization cluster
 */
export interface OperationalizationClusterUpdateParameters {
  /**
   * Gets or sets a list of key value pairs that describe the resource. These tags can be used in
   * viewing and grouping this resource (across resource groups). A maximum of 15 tags can be
   * provided for a resource. Each tag must have a key no greater in length than 128 characters and
   * a value no greater in length than 256 characters.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * Access information for the storage account.
 */
export interface StorageAccountCredentials {
  /**
   * The ARM resource ID of the storage account.
   */
  readonly resourceId?: string;
  /**
   * The primary key of the storage account.
   */
  readonly primaryKey?: string;
  /**
   * The secondary key of the storage account.
   */
  readonly secondaryKey?: string;
}

/**
 * Information about the Azure Container Registry which contains the images deployed to the
 * cluster.
 */
export interface ContainerRegistryCredentials {
  /**
   * The ACR login server name. User name is the first part of the FQDN.
   */
  readonly loginServer?: string;
  /**
   * The ACR primary password.
   */
  readonly password?: string;
  /**
   * The ACR secondary password.
   */
  readonly password2?: string;
  /**
   * The ACR login username.
   */
  readonly username?: string;
}

/**
 * Information about the Azure Container Registry which contains the images deployed to the
 * cluster.
 */
export interface ContainerServiceCredentials {
  /**
   * The ACS kube config file.
   */
  readonly acsKubeConfig?: string;
  /**
   * Service principal configuration used by Kubernetes.
   */
  readonly servicePrincipalConfiguration?: ServicePrincipalProperties;
  /**
   * The ACR image pull secret name which was created in Kubernetes.
   */
  readonly imagePullSecretName?: string;
}

/**
 * AppInsights credentials.
 */
export interface AppInsightsCredentials {
  /**
   * The AppInsights application ID.
   */
  appId?: string;
  /**
   * The AppInsights instrumentation key. This is not returned in response of GET/PUT on the
   * resource. To see this please call listKeys API.
   */
  instrumentationKey?: string;
}

/**
 * Credentials to resources in the cluster.
 */
export interface OperationalizationClusterCredentials {
  /**
   * Credentials for the Storage Account.
   */
  storageAccount?: StorageAccountCredentials;
  /**
   * Credentials for Azure Container Registry.
   */
  containerRegistry?: ContainerRegistryCredentials;
  /**
   * Credentials for Azure Container Service.
   */
  containerService?: ContainerServiceCredentials;
  /**
   * Credentials for Azure AppInsights.
   */
  appInsights?: AppInsightsCredentials;
  /**
   * Global authorization keys for all user services deployed in cluster. These are used if the
   * service does not have auth keys.
   */
  serviceAuthConfiguration?: ServiceAuthConfiguration;
  /**
   * The SSL configuration for the services.
   */
  sslConfiguration?: SslConfiguration;
}

/**
 * Information about updates available for system services in a cluster.
 */
export interface CheckSystemServicesUpdatesAvailableResponse {
  /**
   * Yes if updates are available for the system services, No if not. Possible values include:
   * 'Yes', 'No'
   */
  readonly updatesAvailable?: string;
}

/**
 * Response of the update system services API
 */
export interface UpdateSystemServicesResponse {
  /**
   * Update status. Possible values include: 'Unknown', 'Updating', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed', 'Canceled'
   */
  readonly updateStatus?: string;
  /**
   * The date and time when the last system services update was started.
   */
  readonly updateStartedOn?: Date;
  /**
   * The date and time when the last system services update completed.
   */
  readonly updateCompletedOn?: Date;
}

/**
 * Display of the operation.
 */
export interface ResourceOperationDisplay {
  /**
   * The resource provider name.
   */
  provider?: string;
  /**
   * The resource name.
   */
  resource?: string;
  /**
   * The operation.
   */
  operation?: string;
  /**
   * The description of the operation.
   */
  description?: string;
}

/**
 * Resource operation.
 */
export interface ResourceOperation {
  /**
   * Name of this operation.
   */
  name?: string;
  /**
   * Display of the operation.
   */
  display?: ResourceOperationDisplay;
  /**
   * The operation origin.
   */
  origin?: string;
}

/**
 * Available operation list.
 */
export interface AvailableOperations {
  /**
   * An array of available operations.
   */
  value?: ResourceOperation[];
}

/**
 * Paginated list of operationalization clusters.
 */
export interface PaginatedOperationalizationClustersList extends Array<OperationalizationCluster> {
  /**
   * A continuation link (absolute URI) to the next page of results in the list.
   */
  nextLink?: string;
}

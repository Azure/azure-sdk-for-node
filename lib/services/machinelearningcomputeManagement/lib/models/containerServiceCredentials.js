/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Information about the Azure Container Registry which contains the images
 * deployed to the cluster.
 *
 */
class ContainerServiceCredentials {
  /**
   * Create a ContainerServiceCredentials.
   * @property {string} [acsKubeConfig] The ACS kube config file.
   * @property {object} [servicePrincipalConfiguration] Service principal
   * configuration used by Kubernetes.
   * @property {string} [servicePrincipalConfiguration.clientId] The service
   * principal client ID
   * @property {string} [servicePrincipalConfiguration.secret] The service
   * principal secret. This is not returned in response of GET/PUT on the
   * resource. To see this please call listKeys.
   * @property {string} [imagePullSecretName] The ACR image pull secret name
   * which was created in Kubernetes.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ContainerServiceCredentials
   *
   * @returns {object} metadata of ContainerServiceCredentials
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ContainerServiceCredentials',
      type: {
        name: 'Composite',
        className: 'ContainerServiceCredentials',
        modelProperties: {
          acsKubeConfig: {
            required: false,
            readOnly: true,
            serializedName: 'acsKubeConfig',
            type: {
              name: 'String'
            }
          },
          servicePrincipalConfiguration: {
            required: false,
            readOnly: true,
            serializedName: 'servicePrincipalConfiguration',
            type: {
              name: 'Composite',
              className: 'ServicePrincipalProperties'
            }
          },
          imagePullSecretName: {
            required: false,
            readOnly: true,
            serializedName: 'imagePullSecretName',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ContainerServiceCredentials;

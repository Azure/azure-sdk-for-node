/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The exception info
 *
 */
class EventsExceptionInfo {
  /**
   * Create a EventsExceptionInfo.
   * @member {number} [severityLevel] The severity level of the exception
   * @member {string} [problemId] The problem ID of the exception
   * @member {string} [handledAt] Indicates where the exception was handled at
   * @member {string} [assembly] The assembly which threw the exception
   * @member {string} [method] The method that threw the exception
   * @member {string} [message] The message of the exception
   * @member {string} [type] The type of the exception
   * @member {string} [outerType] The outer type of the exception
   * @member {string} [outerMethod] The outer method of the exception
   * @member {string} [outerAssembly] The outer assmebly of the exception
   * @member {string} [outerMessage] The outer message of the exception
   * @member {string} [innermostType] The inner most type of the exception
   * @member {string} [innermostMessage] The inner most message of the
   * exception
   * @member {string} [innermostMethod] The inner most method of the exception
   * @member {string} [innermostAssembly] The inner most assembly of the
   * exception
   * @member {array} [details] The details of the exception
   */
  constructor() {
  }

  /**
   * Defines the metadata of EventsExceptionInfo
   *
   * @returns {object} metadata of EventsExceptionInfo
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'eventsExceptionInfo',
      type: {
        name: 'Composite',
        className: 'EventsExceptionInfo',
        modelProperties: {
          severityLevel: {
            required: false,
            serializedName: 'severityLevel',
            type: {
              name: 'Number'
            }
          },
          problemId: {
            required: false,
            serializedName: 'problemId',
            type: {
              name: 'String'
            }
          },
          handledAt: {
            required: false,
            serializedName: 'handledAt',
            type: {
              name: 'String'
            }
          },
          assembly: {
            required: false,
            serializedName: 'assembly',
            type: {
              name: 'String'
            }
          },
          method: {
            required: false,
            serializedName: 'method',
            type: {
              name: 'String'
            }
          },
          message: {
            required: false,
            serializedName: 'message',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          outerType: {
            required: false,
            serializedName: 'outerType',
            type: {
              name: 'String'
            }
          },
          outerMethod: {
            required: false,
            serializedName: 'outerMethod',
            type: {
              name: 'String'
            }
          },
          outerAssembly: {
            required: false,
            serializedName: 'outerAssembly',
            type: {
              name: 'String'
            }
          },
          outerMessage: {
            required: false,
            serializedName: 'outerMessage',
            type: {
              name: 'String'
            }
          },
          innermostType: {
            required: false,
            serializedName: 'innermostType',
            type: {
              name: 'String'
            }
          },
          innermostMessage: {
            required: false,
            serializedName: 'innermostMessage',
            type: {
              name: 'String'
            }
          },
          innermostMethod: {
            required: false,
            serializedName: 'innermostMethod',
            type: {
              name: 'String'
            }
          },
          innermostAssembly: {
            required: false,
            serializedName: 'innermostAssembly',
            type: {
              name: 'String'
            }
          },
          details: {
            required: false,
            serializedName: 'details',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'EventsExceptionDetailElementType',
                  type: {
                    name: 'Composite',
                    className: 'EventsExceptionDetail'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = EventsExceptionInfo;

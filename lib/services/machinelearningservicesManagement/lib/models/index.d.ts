/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure";
import * as moment from "moment";

export {

  BaseResource,
  CloudError
};

/**
 * Display name of operation
 */
export interface OperationDisplay {
  /**
   * The resource provider name: Microsoft.MachineLearningExperimentation
   */
  provider?: string;
  /**
   * The resource on which the operation is performed.
   */
  resource?: string;
  /**
   * The operation that users can perform.
   */
  operation?: string;
  /**
   * The description for the operation.
   */
  description?: string;
}

/**
 * Azure Machine Learning workspace REST API operation
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}
   */
  name?: string;
  /**
   * Display name of operation
   */
  display?: OperationDisplay;
}

/**
 * Azure Resource Manager resource envelope.
 */
export interface Resource extends BaseResource {
  /**
   * Specifies the resource ID.
   */
  readonly id?: string;
  /**
   * Specifies the name of the resource.
   */
  readonly name?: string;
  /**
   * The identity of the resource.
   */
  readonly identity?: Identity;
  /**
   * Specifies the location of the resource.
   */
  location?: string;
  /**
   * Specifies the type of the resource.
   */
  readonly type?: string;
  /**
   * Contains resource tags defined as key/value pairs.
   */
  tags?: { [propertyName: string]: string };
}

/**
 * An object that represents a machine learning workspace.
 */
export interface Workspace extends Resource {
  /**
   * The immutable id associated with this workspace.
   */
  readonly workspaceId?: string;
  /**
   * The description of this workspace.
   */
  description?: string;
  /**
   * The friendly name for this workspace. This name in mutable
   */
  friendlyName?: string;
  /**
   * The creation time of the machine learning workspace in ISO8601 format.
   */
  readonly creationTime?: Date;
  /**
   * ARM id of the Batch AI workspace associated with this workspace. This cannot be changed once
   * the workspace has been created
   */
  batchaiWorkspace?: string;
  /**
   * ARM id of the key vault associated with this workspace. This cannot be changed once the
   * workspace has been created
   */
  keyVault?: string;
  /**
   * ARM id of the application insights associated with this workspace. This cannot be changed once
   * the workspace has been created
   */
  applicationInsights?: string;
  /**
   * ARM id of the container registry associated with this workspace. This cannot be changed once
   * the workspace has been created
   */
  containerRegistry?: string;
  /**
   * ARM id of the storage account associated with this workspace. This cannot be changed once the
   * workspace has been created
   */
  storageAccount?: string;
  /**
   * Url for the discovery service to identify regional endpoints for machine learning
   * experimentation services
   */
  discoveryUrl?: string;
  /**
   * The current deployment state of workspace resource. The provisioningState is to indicate
   * states for resource provisioning. Possible values include: 'Unknown', 'Updating', 'Creating',
   * 'Deleting', 'Succeeded', 'Failed', 'Canceled'
   */
  readonly provisioningState?: string;
}

/**
 * The parameters for updating a machine learning workspace.
 */
export interface WorkspaceUpdateParameters {
  /**
   * The resource tags for the machine learning workspace.
   */
  tags?: { [propertyName: string]: string };
  /**
   * The description of this workspace.
   */
  description?: string;
  /**
   * The friendly name for this workspace.
   */
  friendlyName?: string;
}

/**
 * Identity for the resource.
 */
export interface Identity {
  /**
   * The principal ID of resource identity.
   */
  readonly principalId?: string;
  /**
   * The tenant ID of resource.
   */
  readonly tenantId?: string;
  /**
   * The identity type. Possible values include: 'SystemAssigned'
   */
  type?: string;
}

export interface Password {
  readonly name?: string;
  readonly value?: string;
}

export interface RegistryListCredentialsResult {
  readonly location?: string;
  readonly username?: string;
  passwords?: Password[];
}

export interface ListWorkspaceKeysResult {
  readonly userStorageKey?: string;
  readonly userStorageResourceId?: string;
  readonly appInsightsInstrumentationKey?: string;
  readonly containerRegistryCredentials?: RegistryListCredentialsResult;
}

/**
 * Error detail information.
*/
export interface ErrorDetail {
  /**
   * Error code.
  */
  code: string;
  /**
   * Error message.
  */
  message: string;
}

/**
 * Error response information.
*/
export interface ErrorResponse {
  /**
   * Error code.
  */
  code: string;
  /**
   * Error message.
  */
  message: string;
  /**
   * An array of error detail objects.
  */
  details?: ErrorDetail[];
}

/**
 * Wrapper for error response to follow ARM guidelines.
*/
export interface MachineLearningServiceError {
  /**
   * The error response.
  */
  error?: ErrorResponse;
}

/**
 * Machine Learning compute object.
*/
export interface Compute {
  /**
   * Location for the underlying compute
  */
  computeLocation?: string;
  /**
   * The provision state of the cluster. Valid values are Unknown, Updating, Provisioning,
   * Succeeded, and Failed. Possible values include: 'Unknown', 'Updating', 'Creating', 'Deleting',
   * 'Succeeded', 'Failed', 'Canceled'
  */
  readonly provisioningState?: string;
  /**
   * The description of the Machine Learning compute.
  */
  description?: string;
  /**
   * The date and time when the compute was created.
  */
  readonly createdOn?: Date;
  /**
   * The date and time when the compute was last modified.
  */
  readonly modifiedOn?: Date;
  /**
   * ARM resource id of the compute
  */
  resourceId?: string;
  /**
   * Errors during provisioning
  */
  readonly provisioningErrors?: MachineLearningServiceError[];
  /**
   * Polymorphic Discriminator
  */
  computeType: string;
}

/**
 * Machine Learning compute object wrapped into ARM resource envelope.
*/
export interface ComputeResource extends Resource {
  /**
   * Compute properties
  */
  properties?: Compute;
}

/**
 * A system service running on a compute.
*/
export interface SystemService {
  /**
   * The type of this system service.
  */
  readonly systemServiceType?: string;
  /**
   * Public IP address
  */
  readonly publicIpAddress?: string;
  /**
   * The version for this type.
  */
  readonly version?: string;
}

/**
 * The SSL configuration for scoring
*/
export interface SslConfiguration {
  /**
   * Enable or disable SSL for scoring. Possible values include: 'Disabled', 'Enabled'
  */
  status?: string;
  /**
   * Cert data
  */
  cert?: string;
  /**
   * Key data
  */
  key?: string;
  /**
   * CNAME of the cert
  */
  cname?: string;
}

/**
 * AKS properties
*/
export interface AKSProperties {
  /**
   * Cluster full qualified domain name
  */
  clusterFqdn?: string;
  /**
   * System services
  */
  systemServices?: SystemService[];
  /**
   * Number of agents
  */
  agentCount?: number;
  /**
   * Agent virtual machine size
  */
  agentVMSize?: string;
  /**
   * SSL configuration
  */
  sslConfiguration?: SslConfiguration;
}

/**
 * A Machine Learning compute based on AKS.
*/
export interface AKS extends Compute {
  /**
   * AKS properties
  */
  properties?: AKSProperties;
}

/**
 * scale settings for BatchAI Compute
*/
export interface ScaleSettings {
  /**
   * Max number of nodes to use
  */
  maxNodeCount?: number;
  /**
   * Min number of nodes to use
  */
  minNodeCount?: number;
  /**
   * Enable or disable auto scale
  */
  autoScaleEnabled?: boolean;
}

/**
 * BatchAI properties
*/
export interface BatchAIProperties {
  /**
   * Virtual Machine Size
  */
  vmSize?: string;
  /**
   * Virtual Machine priority
  */
  vmPriority?: string;
  /**
   * Scale settings for BatchAI
  */
  scaleSettings?: ScaleSettings;
}

/**
 * A Machine Learning compute based on Azure BatchAI.
*/
export interface BatchAI extends Compute {
  /**
   * BatchAI properties
  */
  properties?: BatchAIProperties;
}

/**
 * Admin credentials for virtual machine
*/
export interface VirtualMachineSshCredentials {
  /**
   * Username of admin account
  */
  username?: string;
  /**
   * Password of admin account
  */
  password?: string;
  /**
   * Public key data
  */
  publicKeyData?: string;
  /**
   * Private key data
  */
  privateKeyData?: string;
}

export interface VirtualMachineProperties {
  /**
   * Virtual Machine size
  */
  virtualMachineSize?: string;
  /**
   * Port open for ssh connections.
  */
  sshPort?: number;
  /**
   * Public IP address of the virtual machine.
  */
  address?: string;
  /**
   * Admin credentials for virtual machine
  */
  administratorAccount?: VirtualMachineSshCredentials;
}

/**
 * A Machine Learning compute based on Azure Virtual Machines.
*/
export interface VirtualMachine extends Compute {
  properties?: VirtualMachineProperties;
}

export interface HDInsightProperties {
  /**
   * Port open for ssh connections on the master node of the cluster.
  */
  sshPort?: number;
  /**
   * Public IP address of the master node of the cluster.
  */
  address?: string;
  /**
   * Admin credentials for master node of the cluster
  */
  administratorAccount?: VirtualMachineSshCredentials;
}

/**
 * A HDInsight compute.
*/
export interface HDInsight extends Compute {
  properties?: HDInsightProperties;
}

/**
 * A DataFactory compute.
*/
export interface DataFactory extends Compute {
}

/**
 * Service principal credentials.
*/
export interface ServicePrincipalCredentials {
  /**
   * Client Id
  */
  clientId: string;
  /**
   * Client secret
  */
  clientSecret: string;
}

/**
 * Secrets related to a Machine Learning compute. Might differ for every type of compute.
*/
export interface ComputeSecrets {
  /**
   * Polymorphic Discriminator
  */
  computeType: string;
}

/**
 * Secrets related to a Machine Learning compute based on AKS.
*/
export interface AksComputeSecrets extends ComputeSecrets {
  /**
   * Content of kubeconfig file that can be used to connect to the Kubernetes cluster.
  */
  userKubeConfig?: string;
  /**
   * Content of kubeconfig file that can be used to connect to the Kubernetes cluster.
  */
  adminKubeConfig?: string;
  /**
   * Image registry pull secret.
  */
  imagePullSecretName?: string;
}

/**
 * Secrets related to a Machine Learning compute based on AKS.
*/
export interface VirtualMachineSecrets extends ComputeSecrets {
  /**
   * Admin credentials for virtual machine.
  */
  administratorAccount?: VirtualMachineSshCredentials;
}

/**
 * An array of operations supported by the resource provider.
*/
export interface OperationListResult extends Array<Operation> {
}

/**
 * The result of a request to list machine learning workspaces.
*/
export interface WorkspaceListResult extends Array<Workspace> {
  /**
   * The URI that can be used to request the next list of machine learning workspaces.
  */
  nextLink?: string;
}

/**
 * Paginated list of Machine Learning compute objects wrapped in ARM resource envelope.
*/
export interface PaginatedComputeResourcesList extends Array<ComputeResource> {
  /**
   * A continuation link (absolute URI) to the next page of results in the list.
  */
  nextLink?: string;
}

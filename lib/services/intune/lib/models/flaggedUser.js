/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the FlaggedUser class.
 * @constructor
 * Flagged user for the given tenant.
 * @member {number} [errorCount]
 * 
 * @member {string} [friendlyName]
 * 
 */
function FlaggedUser(parameters) {
  FlaggedUser['super_'].call(this, parameters);
  if (parameters !== null && parameters !== undefined) {
    if (parameters.errorCount !== undefined) {
      this.errorCount = parameters.errorCount;
    }
    if (parameters.friendlyName !== undefined) {
      this.friendlyName = parameters.friendlyName;
    }
  }    
}

util.inherits(FlaggedUser, models['Resource']);

/**
 * Validate the payload against the FlaggedUser schema
 *
 * @param {JSON} payload
 *
 */
FlaggedUser.prototype.serialize = function () {
  var payload = FlaggedUser['super_'].prototype.serialize.call(this);
  if (this['errorCount'] !== null && this['errorCount'] !== undefined) {
    if (typeof this['errorCount'] !== 'number') {
      throw new Error('this[\'errorCount\'] must be of type number.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['errorCount'] = this['errorCount'];
  }

  if (this['friendlyName'] !== null && this['friendlyName'] !== undefined) {
    if (typeof this['friendlyName'].valueOf() !== 'string') {
      throw new Error('this[\'friendlyName\'] must be of type string.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['friendlyName'] = this['friendlyName'];
  }

  return payload;
};

/**
 * Deserialize the instance to FlaggedUser schema
 *
 * @param {JSON} instance
 *
 */
FlaggedUser.prototype.deserialize = function (instance) {
  FlaggedUser['super_'].prototype.deserialize.call(this, instance);
  if (instance) {
    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['errorCount'] !== undefined) {
        this['errorCount'] = instance['properties']['errorCount'];
      }
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['friendlyName'] !== undefined) {
        this['friendlyName'] = instance['properties']['friendlyName'];
      }
    }
  }

  return this;
};

module.exports = FlaggedUser;

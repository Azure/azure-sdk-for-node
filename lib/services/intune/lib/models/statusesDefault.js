/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.15.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the StatusesDefault class.
 * @constructor
 * Default Statuses entity for the given tenant.
 * @member {number} [deployedPolicies]
 * 
 * @member {number} [enrolledUsers]
 * 
 * @member {number} [flaggedUsers]
 * 
 * @member {date} [lastModifiedTime]
 * 
 * @member {number} [policyAppliedUsers]
 * 
 * @member {string} [status]
 * 
 * @member {number} [wipeFailedApps]
 * 
 * @member {number} [wipePendingApps]
 * 
 * @member {number} [wipeSucceededApps]
 * 
 */
function StatusesDefault() {
  StatusesDefault['super_'].call(this);
}

util.inherits(StatusesDefault, models['Resource']);

/**
 * Defines the metadata of StatusesDefault
 *
 * @returns {object} metadata of StatusesDefault
 *
 */
StatusesDefault.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'StatusesDefault',
    type: {
      name: 'Composite',
      className: 'StatusesDefault',
      modelProperties: {
        id: {
          required: false,
          readOnly: true,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          readOnly: true,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          readOnly: true,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        tags: {
          required: false,
          serializedName: 'tags',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        location: {
          required: false,
          serializedName: 'location',
          type: {
            name: 'String'
          }
        },
        deployedPolicies: {
          required: false,
          readOnly: true,
          serializedName: 'properties.deployedPolicies',
          type: {
            name: 'Number'
          }
        },
        enrolledUsers: {
          required: false,
          readOnly: true,
          serializedName: 'properties.enrolledUsers',
          type: {
            name: 'Number'
          }
        },
        flaggedUsers: {
          required: false,
          readOnly: true,
          serializedName: 'properties.flaggedUsers',
          type: {
            name: 'Number'
          }
        },
        lastModifiedTime: {
          required: false,
          readOnly: true,
          serializedName: 'properties.lastModifiedTime',
          type: {
            name: 'DateTime'
          }
        },
        policyAppliedUsers: {
          required: false,
          readOnly: true,
          serializedName: 'properties.policyAppliedUsers',
          type: {
            name: 'Number'
          }
        },
        status: {
          required: false,
          readOnly: true,
          serializedName: 'properties.status',
          type: {
            name: 'String'
          }
        },
        wipeFailedApps: {
          required: false,
          readOnly: true,
          serializedName: 'properties.wipeFailedApps',
          type: {
            name: 'Number'
          }
        },
        wipePendingApps: {
          required: false,
          readOnly: true,
          serializedName: 'properties.wipePendingApps',
          type: {
            name: 'Number'
          }
        },
        wipeSucceededApps: {
          required: false,
          readOnly: true,
          serializedName: 'properties.wipeSucceededApps',
          type: {
            name: 'Number'
          }
        }
      }
    }
  };
};

module.exports = StatusesDefault;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the OperationResult class.
 * @constructor
 * OperationResult entity for Intune.
 * @member {string} friendlyName
 * 
 * @member {string} [category]
 * 
 * @member {string} [lastModifiedTime]
 * 
 * @member {string} [state]
 * 
 * @member {array} operationMetadata
 * 
 */
function OperationResult(parameters) {
  OperationResult['super_'].call(this, parameters);
  if (parameters !== null && parameters !== undefined) {
    if (parameters.friendlyName !== undefined) {
      this.friendlyName = parameters.friendlyName;
    }
    if (parameters.category !== undefined) {
      this.category = parameters.category;
    }
    if (parameters.lastModifiedTime !== undefined) {
      this.lastModifiedTime = parameters.lastModifiedTime;
    }
    if (parameters.state !== undefined) {
      this.state = parameters.state;
    }
    if (parameters.operationMetadata) {
      var tempParametersoperationMetadata = [];
      parameters.operationMetadata.forEach(function(element) {
        if (element) {
          element = new models['OperationMetadataProperties'](element);
        }
        tempParametersoperationMetadata.push(element);
      });
      this.operationMetadata = tempParametersoperationMetadata;
    }
  }    
}

util.inherits(OperationResult, models['Resource']);

/**
 * Validate the payload against the OperationResult schema
 *
 * @param {JSON} payload
 *
 */
OperationResult.prototype.serialize = function () {
  var payload = OperationResult['super_'].prototype.serialize.call(this);
  if (this['friendlyName'] === null || this['friendlyName'] === undefined || typeof this['friendlyName'].valueOf() !== 'string') {
    throw new Error('this[\'friendlyName\'] cannot be null or undefined and it must be of type string.');
  }
  if (payload['properties'] === null || payload['properties'] === undefined) {
    payload['properties'] = {};
  }
  payload['properties']['friendlyName'] = this['friendlyName'];

  if (this['category'] !== null && this['category'] !== undefined) {
    if (typeof this['category'].valueOf() !== 'string') {
      throw new Error('this[\'category\'] must be of type string.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['category'] = this['category'];
  }

  if (this['lastModifiedTime'] !== null && this['lastModifiedTime'] !== undefined) {
    if (typeof this['lastModifiedTime'].valueOf() !== 'string') {
      throw new Error('this[\'lastModifiedTime\'] must be of type string.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['lastModifiedTime'] = this['lastModifiedTime'];
  }

  if (this['state'] !== null && this['state'] !== undefined) {
    if (typeof this['state'].valueOf() !== 'string') {
      throw new Error('this[\'state\'] must be of type string.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['state'] = this['state'];
  }

  if (!util.isArray(this['operationMetadata'])) {
    throw new Error('this[\'operationMetadata\'] cannot be null or undefined and it must be of type array.');
  }
  payload['properties']['operationMetadata'] = [];
  for (var i = 0; i < this['operationMetadata'].length; i++) {
    if (this['operationMetadata'][i]) {
      if (payload['properties'] === null || payload['properties'] === undefined) {
        payload['properties'] = {};
      }
      payload['properties']['operationMetadata'][i] = this['operationMetadata'][i].serialize();
    }
  }

  return payload;
};

/**
 * Deserialize the instance to OperationResult schema
 *
 * @param {JSON} instance
 *
 */
OperationResult.prototype.deserialize = function (instance) {
  OperationResult['super_'].prototype.deserialize.call(this, instance);
  if (instance) {
    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['friendlyName'] !== undefined) {
        this['friendlyName'] = instance['properties']['friendlyName'];
      }
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['category'] !== undefined) {
        this['category'] = instance['properties']['category'];
      }
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['lastModifiedTime'] !== undefined) {
        this['lastModifiedTime'] = instance['properties']['lastModifiedTime'];
      }
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['state'] !== undefined) {
        this['state'] = instance['properties']['state'];
      }
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['operationMetadata']) {
        var tempInstancepropertiesoperationMetadata = [];
        instance['properties']['operationMetadata'].forEach(function(element1) {
          if (element1) {
            element1 = new models['OperationMetadataProperties']().deserialize(element1);
          }
          tempInstancepropertiesoperationMetadata.push(element1);
        });
        this['operationMetadata'] = tempInstancepropertiesoperationMetadata;
      }
    }
  }

  return this;
};

module.exports = OperationResult;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.13.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the Application class.
 * @constructor
 * Application entity for Intune MAM.
 * @member {string} friendlyName
 * 
 * @member {string} platform Possible values for this property include: 'ios',
 * 'android', 'windows'. Default value: ios .
 * 
 * @member {string} [appId]
 * 
 */
function Application(parameters) {
  Application['super_'].call(this, parameters);
  if (parameters !== null && parameters !== undefined) {
    if (parameters.friendlyName !== undefined) {
      this.friendlyName = parameters.friendlyName;
    }
    if (parameters.platform !== undefined) {
      this.platform = parameters.platform;
    }
    if (parameters.appId !== undefined) {
      this.appId = parameters.appId;
    }
  }    
}

util.inherits(Application, models['Resource']);

/**
 * Validate the payload against the Application schema
 *
 * @param {JSON} payload
 *
 */
Application.prototype.serialize = function () {
  var payload = Application['super_'].prototype.serialize.call(this);
  if (this['friendlyName'] === null || this['friendlyName'] === undefined || typeof this['friendlyName'].valueOf() !== 'string') {
    throw new Error('this[\'friendlyName\'] cannot be null or undefined and it must be of type string.');
  }
  if (payload['properties'] === null || payload['properties'] === undefined) {
    payload['properties'] = {};
  }
  payload['properties']['friendlyName'] = this['friendlyName'];

  if (this['platform'] === null || this['platform'] === undefined || typeof this['platform'].valueOf() !== 'string') {
    throw new Error('this[\'platform\'] cannot be null or undefined and it must be of type string.');
  }
  if (payload['properties'] === null || payload['properties'] === undefined) {
    payload['properties'] = {};
  }
  payload['properties']['platform'] = this['platform'];

  if (this['appId'] !== null && this['appId'] !== undefined) {
    if (typeof this['appId'].valueOf() !== 'string') {
      throw new Error('this[\'appId\'] must be of type string.');
    }
    if (payload['properties'] === null || payload['properties'] === undefined) {
      payload['properties'] = {};
    }
    payload['properties']['appId'] = this['appId'];
  }

  return payload;
};

/**
 * Deserialize the instance to Application schema
 *
 * @param {JSON} instance
 *
 */
Application.prototype.deserialize = function (instance) {
  Application['super_'].prototype.deserialize.call(this, instance);
  if (instance) {
    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['friendlyName'] !== undefined) {
        this['friendlyName'] = instance['properties']['friendlyName'];
      }
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['platform'] !== undefined) {
        this['platform'] = instance['properties']['platform'];
      }
    }

    if (instance['properties'] !== null && instance['properties'] !== undefined) {
      if (instance['properties']['appId'] !== undefined) {
        this['appId'] = instance['properties']['appId'];
      }
    }
  }

  return this;
};

module.exports = Application;

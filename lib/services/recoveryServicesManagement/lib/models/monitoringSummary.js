/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Summary of the replication monitoring data for this vault.
 *
 */
class MonitoringSummary {
  /**
   * Create a MonitoringSummary.
   * @member {number} [unHealthyVmCount] Count of unhealthy VMs.
   * @member {number} [unHealthyProviderCount] Count of unhealthy replication
   * providers.
   * @member {number} [eventsCount] Count of all critical warnings.
   * @member {number} [deprecatedProviderCount] Count of all deprecated
   * recovery service providers.
   * @member {number} [supportedProviderCount] Count of all the supported
   * recovery service providers.
   * @member {number} [unsupportedProviderCount] Count of all the unsupported
   * recovery service providers.
   */
  constructor() {
  }

  /**
   * Defines the metadata of MonitoringSummary
   *
   * @returns {object} metadata of MonitoringSummary
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'MonitoringSummary',
      type: {
        name: 'Composite',
        className: 'MonitoringSummary',
        modelProperties: {
          unHealthyVmCount: {
            required: false,
            serializedName: 'unHealthyVmCount',
            type: {
              name: 'Number'
            }
          },
          unHealthyProviderCount: {
            required: false,
            serializedName: 'unHealthyProviderCount',
            type: {
              name: 'Number'
            }
          },
          eventsCount: {
            required: false,
            serializedName: 'eventsCount',
            type: {
              name: 'Number'
            }
          },
          deprecatedProviderCount: {
            required: false,
            serializedName: 'deprecatedProviderCount',
            type: {
              name: 'Number'
            }
          },
          supportedProviderCount: {
            required: false,
            serializedName: 'supportedProviderCount',
            type: {
              name: 'Number'
            }
          },
          unsupportedProviderCount: {
            required: false,
            serializedName: 'unsupportedProviderCount',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = MonitoringSummary;

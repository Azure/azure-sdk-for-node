/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Replication usages of a vault.
 *
 */
class ReplicationUsage {
  /**
   * Create a ReplicationUsage.
   * @property {object} [monitoringSummary] Summary of the replication
   * monitoring data for this vault.
   * @property {number} [monitoringSummary.unHealthyVmCount] Count of unhealthy
   * VMs.
   * @property {number} [monitoringSummary.unHealthyProviderCount] Count of
   * unhealthy replication providers.
   * @property {number} [monitoringSummary.eventsCount] Count of all critical
   * warnings.
   * @property {number} [monitoringSummary.deprecatedProviderCount] Count of
   * all deprecated recovery service providers.
   * @property {number} [monitoringSummary.supportedProviderCount] Count of all
   * the supported recovery service providers.
   * @property {number} [monitoringSummary.unsupportedProviderCount] Count of
   * all the unsupported recovery service providers.
   * @property {object} [jobsSummary] Summary of the replication jobs data for
   * this vault.
   * @property {number} [jobsSummary.failedJobs] Count of failed jobs.
   * @property {number} [jobsSummary.suspendedJobs] Count of suspended jobs.
   * @property {number} [jobsSummary.inProgressJobs] Count of in-progress jobs.
   * @property {number} [protectedItemCount] Number of replication protected
   * items for this vault.
   * @property {number} [recoveryPlanCount] Number of replication recovery
   * plans for this vault.
   * @property {number} [registeredServersCount] Number of servers registered
   * to this vault.
   * @property {number} [recoveryServicesProviderAuthType] The authentication
   * type of recovery service providers in the vault.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ReplicationUsage
   *
   * @returns {object} metadata of ReplicationUsage
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ReplicationUsage',
      type: {
        name: 'Composite',
        className: 'ReplicationUsage',
        modelProperties: {
          monitoringSummary: {
            required: false,
            serializedName: 'monitoringSummary',
            type: {
              name: 'Composite',
              className: 'MonitoringSummary'
            }
          },
          jobsSummary: {
            required: false,
            serializedName: 'jobsSummary',
            type: {
              name: 'Composite',
              className: 'JobsSummary'
            }
          },
          protectedItemCount: {
            required: false,
            serializedName: 'protectedItemCount',
            type: {
              name: 'Number'
            }
          },
          recoveryPlanCount: {
            required: false,
            serializedName: 'recoveryPlanCount',
            type: {
              name: 'Number'
            }
          },
          registeredServersCount: {
            required: false,
            serializedName: 'registeredServersCount',
            type: {
              name: 'Number'
            }
          },
          recoveryServicesProviderAuthType: {
            required: false,
            serializedName: 'recoveryServicesProviderAuthType',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = ReplicationUsage;

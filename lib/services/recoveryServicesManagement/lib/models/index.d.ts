/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * ARM Resource.
 *
 * @member {string} [id] Resource Id represents the complete path to the
 * resource.
 * @member {string} [name] Resource name associated with the resource.
 * @member {string} [type] Resource type represents the complete path of the
 * form Namespace/ResourceType/ResourceType/...
 * @member {string} [eTag] Optional ETag.
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
  eTag?: string;
}

/**
 * @class
 * Initializes a new instance of the BackupStorageConfig class.
 * @constructor
 * The backup storage config.
 *
 * @member {string} [storageModelType] Storage model type. Possible values
 * include: 'Invalid', 'GeoRedundant', 'LocallyRedundant'
 * @member {string} [storageType] Storage type. Possible values include:
 * 'Invalid', 'GeoRedundant', 'LocallyRedundant'
 * @member {string} [storageTypeState] Locked or Unlocked. Once a machine is
 * registered against a resource, the storageTypeState is always Locked.
 * Possible values include: 'Invalid', 'Locked', 'Unlocked'
 */
export interface BackupStorageConfig extends Resource {
  storageModelType?: string;
  storageType?: string;
  storageTypeState?: string;
}

/**
 * @class
 * Initializes a new instance of the BackupVaultConfig class.
 * @constructor
 * Backup vault config details.
 *
 * @member {string} [storageType] Storage type. Possible values include:
 * 'Invalid', 'GeoRedundant', 'LocallyRedundant'
 * @member {string} [storageTypeState] Locked or Unlocked. Once a machine is
 * registered against a resource, the storageTypeState is always Locked.
 * Possible values include: 'Invalid', 'Locked', 'Unlocked'
 * @member {string} [enhancedSecurityState] Enabled or Disabled. Possible
 * values include: 'Invalid', 'Enabled', 'Disabled'
 */
export interface BackupVaultConfig extends Resource {
  storageType?: string;
  storageTypeState?: string;
  enhancedSecurityState?: string;
}

/**
 * @class
 * Initializes a new instance of the VaultExtendedInfoResource class.
 * @constructor
 * Vault extended information.
 *
 * @member {string} [integrityKey] Integrity key.
 * @member {string} [encryptionKey] Encryption key.
 * @member {string} [encryptionKeyThumbprint] Encryption key thumbprint.
 * @member {string} [algorithm] Algorithm.
 */
export interface VaultExtendedInfoResource extends Resource {
  integrityKey?: string;
  encryptionKey?: string;
  encryptionKeyThumbprint?: string;
  algorithm?: string;
}

/**
 * @class
 * Initializes a new instance of the Sku class.
 * @constructor
 * Identifies the unique system identifier for each Azure resource.
 *
 * @member {string} name The Sku name. Possible values include: 'Standard',
 * 'RS0'
 */
export interface Sku {
  name: string;
}

/**
 * @class
 * Initializes a new instance of the UpgradeDetails class.
 * @constructor
 * Details for upgrading vault.
 *
 * @member {string} [operationId] ID of the vault upgrade operation.
 * @member {date} [startTimeUtc] UTC time at which the upgrade operation has
 * started.
 * @member {date} [lastUpdatedTimeUtc] UTC time at which the upgrade operation
 * status was last updated.
 * @member {date} [endTimeUtc] UTC time at which the upgrade operation has
 * ended.
 * @member {string} [status] Status of the vault upgrade operation. Possible
 * values include: 'Unknown', 'InProgress', 'Upgraded', 'Failed'
 * @member {string} [message] Message to the user containing information about
 * the upgrade operation.
 * @member {string} [triggerType] The way the vault upgradation was triggered.
 * Possible values include: 'UserTriggered', 'ForcedUpgrade'
 * @member {string} [upgradedResourceId] Resource ID of the upgraded vault.
 * @member {string} [previousResourceId] Resource ID of the vault before the
 * upgrade.
 */
export interface UpgradeDetails {
  readonly operationId?: string;
  readonly startTimeUtc?: Date;
  readonly lastUpdatedTimeUtc?: Date;
  readonly endTimeUtc?: Date;
  readonly status?: string;
  readonly message?: string;
  readonly triggerType?: string;
  readonly upgradedResourceId?: string;
  readonly previousResourceId?: string;
}

/**
 * @class
 * Initializes a new instance of the VaultProperties class.
 * @constructor
 * Properties of the vault.
 *
 * @member {string} [provisioningState] Provisioning State.
 * @member {object} [upgradeDetails]
 * @member {string} [upgradeDetails.operationId] ID of the vault upgrade
 * operation.
 * @member {date} [upgradeDetails.startTimeUtc] UTC time at which the upgrade
 * operation has started.
 * @member {date} [upgradeDetails.lastUpdatedTimeUtc] UTC time at which the
 * upgrade operation status was last updated.
 * @member {date} [upgradeDetails.endTimeUtc] UTC time at which the upgrade
 * operation has ended.
 * @member {string} [upgradeDetails.status] Status of the vault upgrade
 * operation. Possible values include: 'Unknown', 'InProgress', 'Upgraded',
 * 'Failed'
 * @member {string} [upgradeDetails.message] Message to the user containing
 * information about the upgrade operation.
 * @member {string} [upgradeDetails.triggerType] The way the vault upgradation
 * was triggered. Possible values include: 'UserTriggered', 'ForcedUpgrade'
 * @member {string} [upgradeDetails.upgradedResourceId] Resource ID of the
 * upgraded vault.
 * @member {string} [upgradeDetails.previousResourceId] Resource ID of the
 * vault before the upgrade.
 */
export interface VaultProperties {
  readonly provisioningState?: string;
  upgradeDetails?: UpgradeDetails;
}

/**
 * @class
 * Initializes a new instance of the TrackedResource class.
 * @constructor
 * Tracked resource with location.
 *
 * @member {string} location Resource location.
 * @member {object} [tags] Resource tags.
 */
export interface TrackedResource extends Resource {
  location: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the Vault class.
 * @constructor
 * Resource information, as returned by the resource provider.
 *
 * @member {object} [properties]
 * @member {string} [properties.provisioningState] Provisioning State.
 * @member {object} [properties.upgradeDetails]
 * @member {string} [properties.upgradeDetails.operationId] ID of the vault
 * upgrade operation.
 * @member {date} [properties.upgradeDetails.startTimeUtc] UTC time at which
 * the upgrade operation has started.
 * @member {date} [properties.upgradeDetails.lastUpdatedTimeUtc] UTC time at
 * which the upgrade operation status was last updated.
 * @member {date} [properties.upgradeDetails.endTimeUtc] UTC time at which the
 * upgrade operation has ended.
 * @member {string} [properties.upgradeDetails.status] Status of the vault
 * upgrade operation. Possible values include: 'Unknown', 'InProgress',
 * 'Upgraded', 'Failed'
 * @member {string} [properties.upgradeDetails.message] Message to the user
 * containing information about the upgrade operation.
 * @member {string} [properties.upgradeDetails.triggerType] The way the vault
 * upgradation was triggered. Possible values include: 'UserTriggered',
 * 'ForcedUpgrade'
 * @member {string} [properties.upgradeDetails.upgradedResourceId] Resource ID
 * of the upgraded vault.
 * @member {string} [properties.upgradeDetails.previousResourceId] Resource ID
 * of the vault before the upgrade.
 * @member {object} [sku]
 * @member {string} [sku.name] The Sku name. Possible values include:
 * 'Standard', 'RS0'
 */
export interface Vault extends TrackedResource {
  properties?: VaultProperties;
  sku?: Sku;
}

/**
 * @class
 * Initializes a new instance of the RawCertificateData class.
 * @constructor
 * Raw certificate data.
 *
 * @member {string} [authType] Specifies the authentication type. Possible
 * values include: 'Invalid', 'ACS', 'AAD', 'AccessControlService',
 * 'AzureActiveDirectory'
 * @member {buffer} [certificate] The base64 encoded certificate raw data
 * string
 */
export interface RawCertificateData {
  authType?: string;
  certificate?: Buffer;
}

/**
 * @class
 * Initializes a new instance of the CertificateRequest class.
 * @constructor
 * Details of the certificate to be uploaded to the vault.
 *
 * @member {object} [properties]
 * @member {string} [properties.authType] Specifies the authentication type.
 * Possible values include: 'Invalid', 'ACS', 'AAD', 'AccessControlService',
 * 'AzureActiveDirectory'
 * @member {buffer} [properties.certificate] The base64 encoded certificate raw
 * data string
 */
export interface CertificateRequest {
  properties?: RawCertificateData;
}

/**
 * @class
 * Initializes a new instance of the ResourceCertificateDetails class.
 * @constructor
 * Certificate details representing the Vault credentials.
 *
 * @member {buffer} [certificate] The base64 encoded certificate raw data
 * string.
 * @member {string} [friendlyName] Certificate friendlyname.
 * @member {string} [issuer] Certificate issuer.
 * @member {number} [resourceId] Resource ID of the vault.
 * @member {string} [subject] Certificate Subject Name.
 * @member {string} [thumbprint] Certificate thumbprint.
 * @member {date} [validFrom] Certificate Validity start Date time.
 * @member {date} [validTo] Certificate Validity End Date time.
 * @member {string} authType Polymorphic Discriminator
 */
export interface ResourceCertificateDetails {
  certificate?: Buffer;
  friendlyName?: string;
  issuer?: string;
  resourceId?: number;
  subject?: string;
  thumbprint?: string;
  validFrom?: Date;
  validTo?: Date;
  authType: string;
}

/**
 * @class
 * Initializes a new instance of the ResourceCertificateAndAadDetails class.
 * @constructor
 * Certificate details representing the Vault credentials for AAD.
 *
 * @member {string} aadAuthority AAD tenant authority.
 * @member {string} aadTenantId AAD tenant Id.
 * @member {string} servicePrincipalClientId AAD service principal clientId.
 * @member {string} servicePrincipalObjectId AAD service principal ObjectId.
 * @member {string} azureManagementEndpointAudience Azure Management Endpoint
 * Audience.
 */
export interface ResourceCertificateAndAadDetails extends ResourceCertificateDetails {
  aadAuthority: string;
  aadTenantId: string;
  servicePrincipalClientId: string;
  servicePrincipalObjectId: string;
  azureManagementEndpointAudience: string;
}

/**
 * @class
 * Initializes a new instance of the ResourceCertificateAndAcsDetails class.
 * @constructor
 * Certificate details representing the Vault credentials for ACS.
 *
 * @member {string} globalAcsNamespace ACS namespace name - tenant for our
 * service.
 * @member {string} globalAcsHostName Acs mgmt host name to connect to.
 * @member {string} globalAcsRPRealm Global ACS namespace RP realm.
 */
export interface ResourceCertificateAndAcsDetails extends ResourceCertificateDetails {
  globalAcsNamespace: string;
  globalAcsHostName: string;
  globalAcsRPRealm: string;
}

/**
 * @class
 * Initializes a new instance of the VaultCertificateResponse class.
 * @constructor
 * Certificate corresponding to a vault that can be used by clients to register
 * themselves with the vault.
 *
 * @member {string} [name]
 * @member {string} [type]
 * @member {string} [id]
 * @member {object} [properties]
 * @member {buffer} [properties.certificate] The base64 encoded certificate raw
 * data string.
 * @member {string} [properties.friendlyName] Certificate friendlyname.
 * @member {string} [properties.issuer] Certificate issuer.
 * @member {number} [properties.resourceId] Resource ID of the vault.
 * @member {string} [properties.subject] Certificate Subject Name.
 * @member {string} [properties.thumbprint] Certificate thumbprint.
 * @member {date} [properties.validFrom] Certificate Validity start Date time.
 * @member {date} [properties.validTo] Certificate Validity End Date time.
 * @member {string} [properties.authType] Polymorphic Discriminator
 */
export interface VaultCertificateResponse {
  name?: string;
  type?: string;
  id?: string;
  properties?: ResourceCertificateDetails;
}

/**
 * @class
 * Initializes a new instance of the JobsSummary class.
 * @constructor
 * Summary of the replication job data for this vault.
 *
 * @member {number} [failedJobs] Count of failed jobs.
 * @member {number} [suspendedJobs] Count of suspended jobs.
 * @member {number} [inProgressJobs] Count of in-progress jobs.
 */
export interface JobsSummary {
  failedJobs?: number;
  suspendedJobs?: number;
  inProgressJobs?: number;
}

/**
 * @class
 * Initializes a new instance of the MonitoringSummary class.
 * @constructor
 * Summary of the replication monitoring data for this vault.
 *
 * @member {number} [unHealthyVmCount] Count of unhealthy VMs.
 * @member {number} [unHealthyProviderCount] Count of unhealthy replication
 * providers.
 * @member {number} [eventsCount] Count of all critical warnings.
 * @member {number} [deprecatedProviderCount] Count of all deprecated recovery
 * service providers.
 * @member {number} [supportedProviderCount] Count of all the supported
 * recovery service providers.
 * @member {number} [unsupportedProviderCount] Count of all the unsupported
 * recovery service providers.
 */
export interface MonitoringSummary {
  unHealthyVmCount?: number;
  unHealthyProviderCount?: number;
  eventsCount?: number;
  deprecatedProviderCount?: number;
  supportedProviderCount?: number;
  unsupportedProviderCount?: number;
}

/**
 * @class
 * Initializes a new instance of the ReplicationUsage class.
 * @constructor
 * Replication usages of a vault.
 *
 * @member {object} [monitoringSummary] Summary of the replication monitoring
 * data for this vault.
 * @member {number} [monitoringSummary.unHealthyVmCount] Count of unhealthy
 * VMs.
 * @member {number} [monitoringSummary.unHealthyProviderCount] Count of
 * unhealthy replication providers.
 * @member {number} [monitoringSummary.eventsCount] Count of all critical
 * warnings.
 * @member {number} [monitoringSummary.deprecatedProviderCount] Count of all
 * deprecated recovery service providers.
 * @member {number} [monitoringSummary.supportedProviderCount] Count of all the
 * supported recovery service providers.
 * @member {number} [monitoringSummary.unsupportedProviderCount] Count of all
 * the unsupported recovery service providers.
 * @member {object} [jobsSummary] Summary of the replication jobs data for this
 * vault.
 * @member {number} [jobsSummary.failedJobs] Count of failed jobs.
 * @member {number} [jobsSummary.suspendedJobs] Count of suspended jobs.
 * @member {number} [jobsSummary.inProgressJobs] Count of in-progress jobs.
 * @member {number} [protectedItemCount] Number of replication protected items
 * for this vault.
 * @member {number} [recoveryPlanCount] Number of replication recovery plans
 * for this vault.
 * @member {number} [registeredServersCount] Number of servers registered to
 * this vault.
 * @member {number} [recoveryServicesProviderAuthType] The authentication type
 * of recovery service providers in the vault.
 */
export interface ReplicationUsage {
  monitoringSummary?: MonitoringSummary;
  jobsSummary?: JobsSummary;
  protectedItemCount?: number;
  recoveryPlanCount?: number;
  registeredServersCount?: number;
  recoveryServicesProviderAuthType?: number;
}

/**
 * @class
 * Initializes a new instance of the ClientDiscoveryDisplay class.
 * @constructor
 * Localized display information of an operation.
 *
 * @member {string} [provider] Name of the provider for display purposes
 * @member {string} [resource] Name of the resource type for display purposes
 * @member {string} [operation] Name of the operation for display purposes
 * @member {string} [description] Description of the operation for display
 * purposes
 */
export interface ClientDiscoveryDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the ClientDiscoveryForLogSpecification class.
 * @constructor
 * Class to represent shoebox log specification in json client discovery.
 *
 * @member {string} [name] Name of the log.
 * @member {string} [displayName] Localized display name
 * @member {string} [blobDuration] Blobs created in customer storage account
 * per hour
 */
export interface ClientDiscoveryForLogSpecification {
  name?: string;
  displayName?: string;
  blobDuration?: string;
}

/**
 * @class
 * Initializes a new instance of the ClientDiscoveryForServiceSpecification class.
 * @constructor
 * Class to represent shoebox service specification in json client discovery.
 *
 * @member {array} [logSpecifications] List of log specifications of this
 * operation.
 */
export interface ClientDiscoveryForServiceSpecification {
  logSpecifications?: ClientDiscoveryForLogSpecification[];
}

/**
 * @class
 * Initializes a new instance of the ClientDiscoveryForProperties class.
 * @constructor
 * Class to represent shoebox properties in json client discovery.
 *
 * @member {object} [serviceSpecification] Operation properties.
 * @member {array} [serviceSpecification.logSpecifications] List of log
 * specifications of this operation.
 */
export interface ClientDiscoveryForProperties {
  serviceSpecification?: ClientDiscoveryForServiceSpecification;
}

/**
 * @class
 * Initializes a new instance of the ClientDiscoveryValueForSingleApi class.
 * @constructor
 * Available operation details.
 *
 * @member {string} [name] Name of the operation
 * @member {object} [display] Contains the localized display information for
 * this particular operation
 * @member {string} [display.provider] Name of the provider for display
 * purposes
 * @member {string} [display.resource] Name of the resource type for display
 * purposes
 * @member {string} [display.operation] Name of the operation for display
 * purposes
 * @member {string} [display.description] Description of the operation for
 * display purposes
 * @member {string} [origin] The intended executor of the operation;governs the
 * display of the operation in the RBAC UX and the audit logs UX
 * @member {object} [properties] Properties
 * @member {object} [properties.serviceSpecification] Operation properties.
 * @member {array} [properties.serviceSpecification.logSpecifications] List of
 * log specifications of this operation.
 */
export interface ClientDiscoveryValueForSingleApi {
  name?: string;
  display?: ClientDiscoveryDisplay;
  origin?: string;
  properties?: ClientDiscoveryForProperties;
}

/**
 * @class
 * Initializes a new instance of the NameInfo class.
 * @constructor
 * The name of usage.
 *
 * @member {string} [value] Value of usage.
 * @member {string} [localizedValue] Localized value of usage.
 */
export interface NameInfo {
  value?: string;
  localizedValue?: string;
}

/**
 * @class
 * Initializes a new instance of the VaultUsage class.
 * @constructor
 * Usages of a vault.
 *
 * @member {string} [unit] Unit of the usage. Possible values include: 'Count',
 * 'Bytes', 'Seconds', 'Percent', 'CountPerSecond', 'BytesPerSecond'
 * @member {string} [quotaPeriod] Quota period of usage.
 * @member {date} [nextResetTime] Next reset time of usage.
 * @member {number} [currentValue] Current value of usage.
 * @member {number} [limit] Limit of usage.
 * @member {object} [name] Name of usage.
 * @member {string} [name.value] Value of usage.
 * @member {string} [name.localizedValue] Localized value of usage.
 */
export interface VaultUsage {
  unit?: string;
  quotaPeriod?: string;
  nextResetTime?: Date;
  currentValue?: number;
  limit?: number;
  name?: NameInfo;
}


/**
 * @class
 * Initializes a new instance of the ReplicationUsageList class.
 * @constructor
 * Replication usages for vault.
 *
 */
export interface ReplicationUsageList extends Array<ReplicationUsage> {
}

/**
 * @class
 * Initializes a new instance of the VaultList class.
 * @constructor
 * The response model for a list of Vaults.
 *
 * @member {string} [nextLink]
 */
export interface VaultList extends Array<Vault> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ClientDiscoveryResponse class.
 * @constructor
 * Operations List response which contains list of available APIs.
 *
 * @member {string} [nextLink] NextLink of the Response.
 */
export interface ClientDiscoveryResponse extends Array<ClientDiscoveryValueForSingleApi> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VaultUsageList class.
 * @constructor
 * Usage for vault.
 *
 */
export interface VaultUsageList extends Array<VaultUsage> {
}

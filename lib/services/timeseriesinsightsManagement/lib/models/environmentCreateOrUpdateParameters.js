/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Parameters supplied to the CreateOrUpdate Environment operation.
 *
 * @extends models['CreateOrUpdateTrackedResourceProperties']
 */
class EnvironmentCreateOrUpdateParameters extends models['CreateOrUpdateTrackedResourceProperties'] {
  /**
   * Create a EnvironmentCreateOrUpdateParameters.
   * @property {object} sku The sku determines the capacity of the environment,
   * the SLA (in queries-per-minute and total capacity), and the billing rate.
   * @property {string} [sku.name] The name of this SKU. Possible values
   * include: 'S1', 'S2'
   * @property {number} [sku.capacity] The capacity of the sku. This value can
   * be changed to support scale out of environments after they have been
   * created.
   * @property {moment.duration} dataRetentionTime ISO8601 timespan specifying
   * the minimum number of days the environment's events will be available for
   * query.
   * @property {string} [storageLimitExceededBehavior] The behavior the Time
   * Series Insights service should take when the environment's capacity has
   * been exceeded. If "PauseIngress" is specified, new events will not be read
   * from the event source. If "PurgeOldData" is specified, new events will
   * continue to be read and old events will be deleted from the environment.
   * The default behavior is PurgeOldData. Possible values include:
   * 'PurgeOldData', 'PauseIngress'
   * @property {array} [partitionKeyProperties] The list of partition keys
   * according to which the data in the environment will be ordered.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of EnvironmentCreateOrUpdateParameters
   *
   * @returns {object} metadata of EnvironmentCreateOrUpdateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'EnvironmentCreateOrUpdateParameters',
      type: {
        name: 'Composite',
        className: 'EnvironmentCreateOrUpdateParameters',
        modelProperties: {
          location: {
            required: true,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          sku: {
            required: true,
            serializedName: 'sku',
            type: {
              name: 'Composite',
              className: 'Sku'
            }
          },
          dataRetentionTime: {
            required: true,
            serializedName: 'properties.dataRetentionTime',
            type: {
              name: 'TimeSpan'
            }
          },
          storageLimitExceededBehavior: {
            required: false,
            serializedName: 'properties.storageLimitExceededBehavior',
            type: {
              name: 'Enum',
              allowedValues: [ 'PurgeOldData', 'PauseIngress' ]
            }
          },
          partitionKeyProperties: {
            required: false,
            serializedName: 'properties.partitionKeyProperties',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PartitionKeyPropertyElementType',
                  type: {
                    name: 'Composite',
                    className: 'PartitionKeyProperty'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = EnvironmentCreateOrUpdateParameters;

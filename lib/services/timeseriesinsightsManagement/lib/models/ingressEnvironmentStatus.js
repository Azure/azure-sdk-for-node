/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * An object that represents the status of ingress on an environment.
 *
 */
class IngressEnvironmentStatus {
  /**
   * Create a IngressEnvironmentStatus.
   * @property {string} [state] This string represents the state of ingress
   * operations on an environment. It can be "Disabled", "Ready", "Running",
   * "Paused" or "Unknown". Possible values include: 'Disabled', 'Ready',
   * 'Running', 'Paused', 'Unknown'
   * @property {object} [stateDetails] An object that contains the details
   * about an environment's state.
   * @property {string} [stateDetails.code] Contains the code that represents
   * the reason of an environment being in a particular state. Can be used to
   * programmatically handle specific cases.
   * @property {string} [stateDetails.message] A message that describes the
   * state in detail.
   */
  constructor() {
  }

  /**
   * Defines the metadata of IngressEnvironmentStatus
   *
   * @returns {object} metadata of IngressEnvironmentStatus
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IngressEnvironmentStatus',
      type: {
        name: 'Composite',
        className: 'IngressEnvironmentStatus',
        modelProperties: {
          state: {
            required: false,
            serializedName: 'state',
            type: {
              name: 'Enum',
              allowedValues: [ 'Disabled', 'Ready', 'Running', 'Paused', 'Unknown' ]
            }
          },
          stateDetails: {
            required: false,
            serializedName: 'stateDetails',
            type: {
              name: 'Composite',
              className: 'EnvironmentStateDetails'
            }
          }
        }
      }
    };
  }
}

module.exports = IngressEnvironmentStatus;

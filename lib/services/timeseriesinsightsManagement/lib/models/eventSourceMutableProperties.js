/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * An object that represents a set of mutable event source resource properties.
 *
 */
class EventSourceMutableProperties {
  /**
   * Create a EventSourceMutableProperties.
   * @property {string} [timestampPropertyName] The event property that will be
   * used as the event source's timestamp. If a value isn't specified for
   * timestampPropertyName, or if null or empty-string is specified, the event
   * creation time will be used.
   * @property {object} [localTimestamp] An object that represents the local
   * timestamp property. It contains the format of local timestamp that needs
   * to be used and the corresponding timezone offset information. If a value
   * isn't specified for localTimestamp, or if null, then the local timestamp
   * will not be ingressed with the events.
   * @property {string} [localTimestamp.format] An enum that represents the
   * format of the local timestamp property that needs to be set. Possible
   * values include: 'Embedded', 'Iana', 'TimeSpan'
   * @property {object} [localTimestamp.timeZoneOffset] An object that
   * represents the offset information for the local timestamp format
   * specified. Should not be specified for LocalTimestampFormat - Embedded.
   * @property {string} [localTimestamp.timeZoneOffset.propertyName] The event
   * property that will be contain the offset information to calculate the
   * local timestamp. When the LocalTimestampFormat is Iana, the property name
   * will contain the name of the column which contains IANA Timezone Name (eg:
   * Americas/Los Angeles). When LocalTimestampFormat is Timespan, it contains
   * the name of property which contains values representing the offset (eg:
   * P1D or 1.00:00:00)
   */
  constructor() {
  }

  /**
   * Defines the metadata of EventSourceMutableProperties
   *
   * @returns {object} metadata of EventSourceMutableProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'EventSourceMutableProperties',
      type: {
        name: 'Composite',
        className: 'EventSourceMutableProperties',
        modelProperties: {
          timestampPropertyName: {
            required: false,
            serializedName: 'timestampPropertyName',
            type: {
              name: 'String'
            }
          },
          localTimestamp: {
            required: false,
            serializedName: 'localTimestamp',
            type: {
              name: 'Composite',
              className: 'LocalTimestamp'
            }
          }
        }
      }
    };
  }
}

module.exports = EventSourceMutableProperties;

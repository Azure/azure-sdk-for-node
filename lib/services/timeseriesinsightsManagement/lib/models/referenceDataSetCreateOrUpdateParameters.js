/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a ReferenceDataSetCreateOrUpdateParameters.
 * @extends models['CreateOrUpdateTrackedResourceProperties']
 */
class ReferenceDataSetCreateOrUpdateParameters extends models['CreateOrUpdateTrackedResourceProperties'] {
  /**
   * Create a ReferenceDataSetCreateOrUpdateParameters.
   * @property {array} keyProperties The list of key properties for the
   * reference data set.
   * @property {string} [dataStringComparisonBehavior] The reference data set
   * key comparison behavior can be set using this property. By default, the
   * value is 'Ordinal' - which means case sensitive key comparison will be
   * performed while joining reference data with events or while adding new
   * reference data. When 'OrdinalIgnoreCase' is set, case insensitive
   * comparison will be used. Possible values include: 'Ordinal',
   * 'OrdinalIgnoreCase'
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ReferenceDataSetCreateOrUpdateParameters
   *
   * @returns {object} metadata of ReferenceDataSetCreateOrUpdateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ReferenceDataSetCreateOrUpdateParameters',
      type: {
        name: 'Composite',
        className: 'ReferenceDataSetCreateOrUpdateParameters',
        modelProperties: {
          location: {
            required: true,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          keyProperties: {
            required: true,
            serializedName: 'properties.keyProperties',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ReferenceDataSetKeyPropertyElementType',
                  type: {
                    name: 'Composite',
                    className: 'ReferenceDataSetKeyProperty'
                  }
              }
            }
          },
          dataStringComparisonBehavior: {
            required: false,
            serializedName: 'properties.dataStringComparisonBehavior',
            type: {
              name: 'Enum',
              allowedValues: [ 'Ordinal', 'OrdinalIgnoreCase' ]
            }
          }
        }
      }
    };
  }
}

module.exports = ReferenceDataSetCreateOrUpdateParameters;

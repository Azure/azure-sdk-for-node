/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Properties of the IoTHub event source.
 *
 * @extends models['AzureEventSourceProperties']
 */
class IoTHubEventSourceCommonProperties extends models['AzureEventSourceProperties'] {
  /**
   * Create a IoTHubEventSourceCommonProperties.
   * @property {string} iotHubName The name of the iot hub.
   * @property {string} consumerGroupName The name of the iot hub's consumer
   * group that holds the partitions from which events will be read.
   * @property {string} keyName The name of the Shared Access Policy key that
   * grants the Time Series Insights service access to the iot hub. This shared
   * access policy key must grant 'service connect' permissions to the iot hub.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of IoTHubEventSourceCommonProperties
   *
   * @returns {object} metadata of IoTHubEventSourceCommonProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IoTHubEventSourceCommonProperties',
      type: {
        name: 'Composite',
        className: 'IoTHubEventSourceCommonProperties',
        modelProperties: {
          provisioningState: {
            required: false,
            serializedName: 'provisioningState',
            type: {
              name: 'Enum',
              allowedValues: [ 'Accepted', 'Creating', 'Updating', 'Succeeded', 'Failed', 'Deleting' ]
            }
          },
          creationTime: {
            required: false,
            readOnly: true,
            serializedName: 'creationTime',
            type: {
              name: 'DateTime'
            }
          },
          timestampPropertyName: {
            required: false,
            serializedName: 'timestampPropertyName',
            type: {
              name: 'String'
            }
          },
          eventSourceResourceId: {
            required: true,
            serializedName: 'eventSourceResourceId',
            type: {
              name: 'String'
            }
          },
          iotHubName: {
            required: true,
            serializedName: 'iotHubName',
            type: {
              name: 'String'
            }
          },
          consumerGroupName: {
            required: true,
            serializedName: 'consumerGroupName',
            type: {
              name: 'String'
            }
          },
          keyName: {
            required: true,
            serializedName: 'keyName',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = IoTHubEventSourceCommonProperties;

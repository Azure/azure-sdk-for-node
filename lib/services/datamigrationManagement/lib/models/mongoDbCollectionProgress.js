/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Describes the progress of a collection
 *
 * @extends models['MongoDbProgress']
 */
class MongoDbCollectionProgress extends models['MongoDbProgress'] {
  /**
   * Create a MongoDbCollectionProgress.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of MongoDbCollectionProgress
   *
   * @returns {object} metadata of MongoDbCollectionProgress
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Collection',
      type: {
        name: 'Composite',
        className: 'MongoDbCollectionProgress',
        modelProperties: {
          bytesCopied: {
            required: true,
            serializedName: 'bytesCopied',
            type: {
              name: 'Number'
            }
          },
          documentsCopied: {
            required: true,
            serializedName: 'documentsCopied',
            type: {
              name: 'Number'
            }
          },
          elapsedTime: {
            required: true,
            serializedName: 'elapsedTime',
            type: {
              name: 'String'
            }
          },
          errors: {
            required: true,
            serializedName: 'errors',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'MongoDbErrorElementType',
                  type: {
                    name: 'Composite',
                    className: 'MongoDbError'
                  }
              }
            }
          },
          eventsPending: {
            required: true,
            serializedName: 'eventsPending',
            type: {
              name: 'Number'
            }
          },
          eventsReplayed: {
            required: true,
            serializedName: 'eventsReplayed',
            type: {
              name: 'Number'
            }
          },
          lastEventTime: {
            required: false,
            serializedName: 'lastEventTime',
            type: {
              name: 'DateTime'
            }
          },
          lastReplayTime: {
            required: false,
            serializedName: 'lastReplayTime',
            type: {
              name: 'DateTime'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          qualifiedName: {
            required: false,
            serializedName: 'qualifiedName',
            type: {
              name: 'String'
            }
          },
          resultType: {
            required: true,
            serializedName: 'resultType',
            type: {
              name: 'String'
            }
          },
          state: {
            required: true,
            serializedName: 'state',
            type: {
              name: 'String'
            }
          },
          totalBytes: {
            required: true,
            serializedName: 'totalBytes',
            type: {
              name: 'Number'
            }
          },
          totalDocuments: {
            required: true,
            serializedName: 'totalDocuments',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = MongoDbCollectionProgress;

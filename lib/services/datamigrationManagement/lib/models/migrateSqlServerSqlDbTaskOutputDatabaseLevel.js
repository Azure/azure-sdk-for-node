/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a MigrateSqlServerSqlDbTaskOutputDatabaseLevel.
 * @extends models['MigrateSqlServerSqlDbTaskOutput']
 */
class MigrateSqlServerSqlDbTaskOutputDatabaseLevel extends models['MigrateSqlServerSqlDbTaskOutput'] {
  /**
   * Create a MigrateSqlServerSqlDbTaskOutputDatabaseLevel.
   * @property {string} [databaseName] Name of the item
   * @property {date} [startedOn] Migration start time
   * @property {date} [endedOn] Migration end time
   * @property {string} [state] Current state of migration. Possible values
   * include: 'None', 'InProgress', 'Failed', 'Warning', 'Completed',
   * 'Skipped', 'Stopped'
   * @property {string} [stage] Migration stage that this database is in.
   * Possible values include: 'None', 'Initialize', 'Backup', 'FileCopy',
   * 'Restore', 'Completed'
   * @property {string} [statusMessage] Status message
   * @property {string} [message] Migration progress message
   * @property {number} [numberOfObjects] Number of objects
   * @property {number} [numberOfObjectsCompleted] Number of successfully
   * completed objects
   * @property {number} [errorCount] Number of database/object errors.
   * @property {string} [errorPrefix] Wildcard string prefix to use for
   * querying all errors of the item
   * @property {string} [resultPrefix] Wildcard string prefix to use for
   * querying all sub-tem results of the item
   * @property {array} [exceptionsAndWarnings] Migration exceptions and
   * warnings.
   * @property {object} [objectSummary] Summary of object results in the
   * migration
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of MigrateSqlServerSqlDbTaskOutputDatabaseLevel
   *
   * @returns {object} metadata of MigrateSqlServerSqlDbTaskOutputDatabaseLevel
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DatabaseLevelOutput',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'resultType',
          clientName: 'resultType'
        },
        uberParent: 'MigrateSqlServerSqlDbTaskOutput',
        className: 'MigrateSqlServerSqlDbTaskOutputDatabaseLevel',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          resultType: {
            required: true,
            serializedName: 'resultType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          databaseName: {
            required: false,
            readOnly: true,
            serializedName: 'databaseName',
            type: {
              name: 'String'
            }
          },
          startedOn: {
            required: false,
            readOnly: true,
            serializedName: 'startedOn',
            type: {
              name: 'DateTime'
            }
          },
          endedOn: {
            required: false,
            readOnly: true,
            serializedName: 'endedOn',
            type: {
              name: 'DateTime'
            }
          },
          state: {
            required: false,
            readOnly: true,
            serializedName: 'state',
            type: {
              name: 'String'
            }
          },
          stage: {
            required: false,
            readOnly: true,
            serializedName: 'stage',
            type: {
              name: 'String'
            }
          },
          statusMessage: {
            required: false,
            readOnly: true,
            serializedName: 'statusMessage',
            type: {
              name: 'String'
            }
          },
          message: {
            required: false,
            readOnly: true,
            serializedName: 'message',
            type: {
              name: 'String'
            }
          },
          numberOfObjects: {
            required: false,
            readOnly: true,
            serializedName: 'numberOfObjects',
            type: {
              name: 'Number'
            }
          },
          numberOfObjectsCompleted: {
            required: false,
            readOnly: true,
            serializedName: 'numberOfObjectsCompleted',
            type: {
              name: 'Number'
            }
          },
          errorCount: {
            required: false,
            readOnly: true,
            serializedName: 'errorCount',
            type: {
              name: 'Number'
            }
          },
          errorPrefix: {
            required: false,
            readOnly: true,
            serializedName: 'errorPrefix',
            type: {
              name: 'String'
            }
          },
          resultPrefix: {
            required: false,
            readOnly: true,
            serializedName: 'resultPrefix',
            type: {
              name: 'String'
            }
          },
          exceptionsAndWarnings: {
            required: false,
            readOnly: true,
            serializedName: 'exceptionsAndWarnings',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ReportableExceptionElementType',
                  type: {
                    name: 'Composite',
                    className: 'ReportableException'
                  }
              }
            }
          },
          objectSummary: {
            required: false,
            readOnly: true,
            serializedName: 'objectSummary',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'DataItemMigrationSummaryResultElementType',
                  type: {
                    name: 'Composite',
                    className: 'DataItemMigrationSummaryResult'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = MigrateSqlServerSqlDbTaskOutputDatabaseLevel;

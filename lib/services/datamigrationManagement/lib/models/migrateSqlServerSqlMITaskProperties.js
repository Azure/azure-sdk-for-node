/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Properties for task that migrates SQL Server databases to Azure SQL Database
 * Managed Instance
 *
 * @extends models['ProjectTaskProperties']
 */
class MigrateSqlServerSqlMITaskProperties extends models['ProjectTaskProperties'] {
  /**
   * Create a MigrateSqlServerSqlMITaskProperties.
   * @property {object} [input] Task input
   * @property {array} [input.selectedDatabases] Databases to migrate
   * @property {array} [input.selectedLogins] Logins to migrate.
   * @property {array} [input.selectedAgentJobs] Agent Jobs to migrate.
   * @property {object} [input.backupFileShare] Backup file share information
   * for all selected databases.
   * @property {string} [input.backupFileShare.userName] User name credential
   * to connect to the share location
   * @property {string} [input.backupFileShare.password] Password credential
   * used to connect to the share location.
   * @property {string} [input.backupFileShare.path] The folder path for this
   * share.
   * @property {object} [input.backupBlobShare] SAS URI of Azure Storage
   * Account Container to be used for storing backup files.
   * @property {string} [input.backupBlobShare.sasUri] SAS URI of Azure Storage
   * Account Container.
   * @property {string} [input.backupMode] Backup Mode to specify whether to
   * use existing backup or create new backup. If using existing backups,
   * backup file paths are required to be provided in selectedDatabases.
   * Possible values include: 'CreateBackup', 'ExistingBackup'
   * @property {array} [output] Task output. This is ignored if submitted.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of MigrateSqlServerSqlMITaskProperties
   *
   * @returns {object} metadata of MigrateSqlServerSqlMITaskProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Migrate.SqlServer.AzureSqlDbMI',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'taskType',
          clientName: 'taskType'
        },
        uberParent: 'ProjectTaskProperties',
        className: 'MigrateSqlServerSqlMITaskProperties',
        modelProperties: {
          errors: {
            required: false,
            readOnly: true,
            serializedName: 'errors',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ODataErrorElementType',
                  type: {
                    name: 'Composite',
                    className: 'ODataError'
                  }
              }
            }
          },
          state: {
            required: false,
            readOnly: true,
            serializedName: 'state',
            type: {
              name: 'String'
            }
          },
          commands: {
            required: false,
            readOnly: true,
            serializedName: 'commands',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'CommandPropertiesElementType',
                  type: {
                    name: 'Composite',
                    polymorphicDiscriminator: {
                      serializedName: 'commandType',
                      clientName: 'commandType'
                    },
                    uberParent: 'CommandProperties',
                    className: 'CommandProperties'
                  }
              }
            }
          },
          clientData: {
            required: false,
            serializedName: 'clientData',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          taskType: {
            required: true,
            serializedName: 'taskType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          input: {
            required: false,
            serializedName: 'input',
            type: {
              name: 'Composite',
              className: 'MigrateSqlServerSqlMITaskInput'
            }
          },
          output: {
            required: false,
            readOnly: true,
            serializedName: 'output',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MigrateSqlServerSqlMITaskOutputElementType',
                  type: {
                    name: 'Composite',
                    polymorphicDiscriminator: {
                      serializedName: 'resultType',
                      clientName: 'resultType'
                    },
                    uberParent: 'MigrateSqlServerSqlMITaskOutput',
                    className: 'MigrateSqlServerSqlMITaskOutput'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = MigrateSqlServerSqlMITaskProperties;

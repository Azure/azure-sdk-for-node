/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Describes a database or collection within a MongoDB data source
 *
 */
class MongoDbObjectInfo {
  /**
   * Create a MongoDbObjectInfo.
   * @member {number} averageDocumentSize The average document size, or -1 if
   * the average size is unknown
   * @member {number} dataSize The estimated total data size, in bytes, or -1
   * if the size is unknown.
   * @member {number} documentCount The estimated total number of documents, or
   * -1 if the document count is unknown
   * @member {string} name The unqualified name of the database or collection
   * @member {string} qualifiedName The qualified name of the database or
   * collection. For a collection, this is the database-qualified name.
   */
  constructor() {
  }

  /**
   * Defines the metadata of MongoDbObjectInfo
   *
   * @returns {object} metadata of MongoDbObjectInfo
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'MongoDbObjectInfo',
      type: {
        name: 'Composite',
        className: 'MongoDbObjectInfo',
        modelProperties: {
          averageDocumentSize: {
            required: true,
            serializedName: 'averageDocumentSize',
            type: {
              name: 'Number'
            }
          },
          dataSize: {
            required: true,
            serializedName: 'dataSize',
            type: {
              name: 'Number'
            }
          },
          documentCount: {
            required: true,
            serializedName: 'documentCount',
            type: {
              name: 'Number'
            }
          },
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          qualifiedName: {
            required: true,
            serializedName: 'qualifiedName',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = MongoDbObjectInfo;

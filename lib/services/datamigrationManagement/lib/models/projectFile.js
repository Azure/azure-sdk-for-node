/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * A file resource
 *
 * @extends models['Resource']
 */
class ProjectFile extends models['Resource'] {
  /**
   * Create a ProjectFile.
   * @property {string} [etag] HTTP strong entity tag value. This is ignored if
   * submitted.
   * @property {object} [properties] Custom file properties
   * @property {string} [properties.extension] Optional File extension. If
   * submitted it should not have a leading period and must match the extension
   * from filePath.
   * @property {string} [properties.filePath] Relative path of this file
   * resource. This property can be set when creating or updating the file
   * resource.
   * @property {date} [properties.lastModified] Modification DateTime.
   * @property {string} [properties.mediaType] File content type. This property
   * can be modified to reflect the file content type.
   * @property {number} [properties.size] File size.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ProjectFile
   *
   * @returns {object} metadata of ProjectFile
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ProjectFile',
      type: {
        name: 'Composite',
        className: 'ProjectFile',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          etag: {
            required: false,
            serializedName: 'etag',
            type: {
              name: 'String'
            }
          },
          properties: {
            required: false,
            serializedName: 'properties',
            type: {
              name: 'Composite',
              className: 'ProjectFileProperties'
            }
          }
        }
      }
    };
  }
}

module.exports = ProjectFile;

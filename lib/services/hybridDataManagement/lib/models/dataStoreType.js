/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Data Store Type.
 *
 * @extends models['DmsBaseObject']
 */
class DataStoreType extends models['DmsBaseObject'] {
  /**
   * Create a DataStoreType.
   * @property {string} [repositoryType] Arm type for the manager resource to
   * which the data source type is associated. This is optional.
   * @property {string} state State of the data store type. Possible values
   * include: 'Disabled', 'Enabled', 'Supported'
   * @property {array} [supportedDataServicesAsSink] Supported data services
   * where it can be used as a sink.
   * @property {array} [supportedDataServicesAsSource] Supported data services
   * where it can be used as a source.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of DataStoreType
   *
   * @returns {object} metadata of DataStoreType
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DataStoreType',
      type: {
        name: 'Composite',
        className: 'DataStoreType',
        modelProperties: {
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          repositoryType: {
            required: false,
            serializedName: 'properties.repositoryType',
            type: {
              name: 'String'
            }
          },
          state: {
            required: true,
            serializedName: 'properties.state',
            type: {
              name: 'Enum',
              allowedValues: [ 'Disabled', 'Enabled', 'Supported' ]
            }
          },
          supportedDataServicesAsSink: {
            required: false,
            serializedName: 'properties.supportedDataServicesAsSink',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          supportedDataServicesAsSource: {
            required: false,
            serializedName: 'properties.supportedDataServicesAsSource',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = DataStoreType;

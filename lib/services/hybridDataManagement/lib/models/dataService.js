/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Data Service.
 *
 * @extends models['DmsBaseObject']
 */
class DataService extends models['DmsBaseObject'] {
  /**
   * Create a DataService.
   * @property {string} state State of the data service. Possible values
   * include: 'Disabled', 'Enabled', 'Supported'
   * @property {array} [supportedDataSinkTypes] Supported data store types
   * which can be used as a sink.
   * @property {array} [supportedDataSourceTypes] Supported data store types
   * which can be used as a source.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of DataService
   *
   * @returns {object} metadata of DataService
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DataService',
      type: {
        name: 'Composite',
        className: 'DataService',
        modelProperties: {
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          state: {
            required: true,
            serializedName: 'properties.state',
            type: {
              name: 'Enum',
              allowedValues: [ 'Disabled', 'Enabled', 'Supported' ]
            }
          },
          supportedDataSinkTypes: {
            required: false,
            serializedName: 'properties.supportedDataSinkTypes',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          supportedDataSourceTypes: {
            required: false,
            serializedName: 'properties.supportedDataSourceTypes',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = DataService;

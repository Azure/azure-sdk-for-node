/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * A reservation transaction summary resource.
 *
 * @extends models['Resource']
 */
class TransactionsSummary extends models['Resource'] {
  /**
   * Create a TransactionsSummary.
   * @property {string} [kind] The kind of transaction. Choices are all and
   * reservation. Possible values include: 'all', 'reservation'
   * @property {date} [date] The date of reservation transaction.
   * @property {string} [invoice] Invoice number or 'pending' if not invoiced.
   * @property {string} [orderId] The reservation order id.
   * @property {string} [orderName] The reservation order name.
   * @property {string} [productTypeId] The product type id.
   * @property {string} [productType] The type of product.
   * @property {string} [productDescription] Product description.
   * @property {string} [transactionType] Transaction types. Possible values
   * include: 'Purchase', 'Usage Charge'
   * @property {object} [transactionAmount] Last charge associated with the
   * purchase.
   * @property {string} [transactionAmount.currency] The currency for the
   * amount value.
   * @property {number} [transactionAmount.value] Amount value.
   * @property {number} [quantity] Purchase quantity.
   * @property {string} [invoiceSectionId] Invoice section id to which this
   * product belongs.
   * @property {string} [invoiceSectionName] Invoice section name to which this
   * product belongs.
   * @property {string} [billingProfileId] Billing Profile id to which this
   * product belongs.
   * @property {string} [billingProfileName] Billing Profile name to which this
   * product belongs.
   * @property {string} [subscriptionId] The subscription id.
   * @property {string} [subscriptionName] The subscription name.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of TransactionsSummary
   *
   * @returns {object} metadata of TransactionsSummary
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TransactionsSummary',
      type: {
        name: 'Composite',
        className: 'TransactionsSummary',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          kind: {
            required: false,
            serializedName: 'properties.kind',
            type: {
              name: 'String'
            }
          },
          date: {
            required: false,
            readOnly: true,
            serializedName: 'properties.date',
            type: {
              name: 'DateTime'
            }
          },
          invoice: {
            required: false,
            readOnly: true,
            serializedName: 'properties.invoice',
            type: {
              name: 'String'
            }
          },
          orderId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.orderId',
            type: {
              name: 'String'
            }
          },
          orderName: {
            required: false,
            readOnly: true,
            serializedName: 'properties.orderName',
            type: {
              name: 'String'
            }
          },
          productTypeId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.productTypeId',
            type: {
              name: 'String'
            }
          },
          productType: {
            required: false,
            readOnly: true,
            serializedName: 'properties.productType',
            type: {
              name: 'String'
            }
          },
          productDescription: {
            required: false,
            readOnly: true,
            serializedName: 'properties.productDescription',
            type: {
              name: 'String'
            }
          },
          transactionType: {
            required: false,
            serializedName: 'properties.transactionType',
            type: {
              name: 'String'
            }
          },
          transactionAmount: {
            required: false,
            readOnly: true,
            serializedName: 'properties.transactionAmount',
            type: {
              name: 'Composite',
              className: 'Amount'
            }
          },
          quantity: {
            required: false,
            readOnly: true,
            serializedName: 'properties.quantity',
            type: {
              name: 'Number'
            }
          },
          invoiceSectionId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.invoiceSectionId',
            type: {
              name: 'String'
            }
          },
          invoiceSectionName: {
            required: false,
            readOnly: true,
            serializedName: 'properties.invoiceSectionName',
            type: {
              name: 'String'
            }
          },
          billingProfileId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.billingProfileId',
            type: {
              name: 'String'
            }
          },
          billingProfileName: {
            required: false,
            readOnly: true,
            serializedName: 'properties.billingProfileName',
            type: {
              name: 'String'
            }
          },
          subscriptionId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.subscriptionId',
            type: {
              name: 'String'
            }
          },
          subscriptionName: {
            required: false,
            readOnly: true,
            serializedName: 'properties.subscriptionName',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = TransactionsSummary;

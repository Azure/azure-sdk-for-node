/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * An invoice resource can be used download a PDF version of an invoice.
 *
 * @extends models['Resource']
 */
class Invoice extends models['Resource'] {
  /**
   * Create a Invoice.
   * @property {object} [downloadUrl] A secure link to download the PDF version
   * of an invoice. The link will cease to work after its expiry time is
   * reached.
   * @property {date} [downloadUrl.expiryTime] The time in UTC at which this
   * download URL will expire.
   * @property {string} [downloadUrl.url] The URL to the PDF file.
   * @property {date} [invoicePeriodStartDate] The start of the date range
   * covered by the invoice.
   * @property {date} [invoicePeriodEndDate] The end of the date range covered
   * by the invoice.
   * @property {array} [billingPeriodIds] Array of billing period ids that the
   * invoice is attributed to.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of Invoice
   *
   * @returns {object} metadata of Invoice
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Invoice',
      type: {
        name: 'Composite',
        className: 'Invoice',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          downloadUrl: {
            required: false,
            serializedName: 'properties.downloadUrl',
            type: {
              name: 'Composite',
              className: 'DownloadUrl'
            }
          },
          invoicePeriodStartDate: {
            required: false,
            readOnly: true,
            serializedName: 'properties.invoicePeriodStartDate',
            type: {
              name: 'Date'
            }
          },
          invoicePeriodEndDate: {
            required: false,
            readOnly: true,
            serializedName: 'properties.invoicePeriodEndDate',
            type: {
              name: 'Date'
            }
          },
          billingPeriodIds: {
            required: false,
            readOnly: true,
            serializedName: 'properties.billingPeriodIds',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = Invoice;

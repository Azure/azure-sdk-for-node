/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * A product summary resource.
 *
 * @extends models['Resource']
 */
class ProductSummary extends models['Resource'] {
  /**
   * Create a ProductSummary.
   * @property {string} [displayName] The display name of the product.
   * @property {date} [purchaseDate] The date of purchase.
   * @property {string} [productTypeId] The product type id.
   * @property {string} [productType] The type of product.
   * @property {string} [status] Product status. Possible values include:
   * 'Active', 'Inactive', 'PastDue', 'Expiring', 'Expired', 'Disabled',
   * 'Cancelled', 'AutoRenew'
   * @property {date} [endDate] end date.
   * @property {string} [billingFrequency] Billing frequency. Possible values
   * include: 'OneTime', 'Monthly', 'UsageBased'
   * @property {object} [lastCharge] Last month charges.
   * @property {string} [lastCharge.currency] The currency for the amount
   * value.
   * @property {number} [lastCharge.value] Amount value.
   * @property {date} [lastChargeDate] The date of the last charge.
   * @property {number} [quantity] The purchased product quantity.
   * @property {string} [skuId] Sku Id.
   * @property {string} [skuDescription] Sku description.
   * @property {string} [availabilityId] Availability Id.
   * @property {string} [parentProductId] Parent Product Id.
   * @property {string} [invoiceSectionId] Invoice section id to which this
   * product belongs.
   * @property {string} [invoiceSectionName] Invoice section name to which this
   * product belongs.
   * @property {string} [billingProfileId] Billing Profile id to which this
   * product belongs.
   * @property {string} [billingProfileName] Billing Profile name to which this
   * product belongs.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ProductSummary
   *
   * @returns {object} metadata of ProductSummary
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ProductSummary',
      type: {
        name: 'Composite',
        className: 'ProductSummary',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          displayName: {
            required: false,
            readOnly: true,
            serializedName: 'properties.displayName',
            type: {
              name: 'String'
            }
          },
          purchaseDate: {
            required: false,
            readOnly: true,
            serializedName: 'properties.purchaseDate',
            type: {
              name: 'DateTime'
            }
          },
          productTypeId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.productTypeId',
            type: {
              name: 'String'
            }
          },
          productType: {
            required: false,
            readOnly: true,
            serializedName: 'properties.productType',
            type: {
              name: 'String'
            }
          },
          status: {
            required: false,
            serializedName: 'properties.status',
            type: {
              name: 'String'
            }
          },
          endDate: {
            required: false,
            readOnly: true,
            serializedName: 'properties.endDate',
            type: {
              name: 'DateTime'
            }
          },
          billingFrequency: {
            required: false,
            serializedName: 'properties.billingFrequency',
            type: {
              name: 'String'
            }
          },
          lastCharge: {
            required: false,
            readOnly: true,
            serializedName: 'properties.lastCharge',
            type: {
              name: 'Composite',
              className: 'Amount'
            }
          },
          lastChargeDate: {
            required: false,
            readOnly: true,
            serializedName: 'properties.lastChargeDate',
            type: {
              name: 'DateTime'
            }
          },
          quantity: {
            required: false,
            readOnly: true,
            serializedName: 'properties.quantity',
            type: {
              name: 'Number'
            }
          },
          skuId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.skuId',
            type: {
              name: 'String'
            }
          },
          skuDescription: {
            required: false,
            readOnly: true,
            serializedName: 'properties.skuDescription',
            type: {
              name: 'String'
            }
          },
          availabilityId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.availabilityId',
            type: {
              name: 'String'
            }
          },
          parentProductId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.parentProductId',
            type: {
              name: 'String'
            }
          },
          invoiceSectionId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.invoiceSectionId',
            type: {
              name: 'String'
            }
          },
          invoiceSectionName: {
            required: false,
            readOnly: true,
            serializedName: 'properties.invoiceSectionName',
            type: {
              name: 'String'
            }
          },
          billingProfileId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.billingProfileId',
            type: {
              name: 'String'
            }
          },
          billingProfileName: {
            required: false,
            readOnly: true,
            serializedName: 'properties.billingProfileName',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ProductSummary;

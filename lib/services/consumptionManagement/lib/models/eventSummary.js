/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * An event summary resource.
 *
 * @extends models['Resource']
 */
class EventSummary extends models['Resource'] {
  /**
   * Create a EventSummary.
   * @property {date} [transactionDate] Transaction Date.
   * @property {string} [description] Transaction description.
   * @property {object} [newCredit] New Credit.
   * @property {string} [newCredit.currency] The currency for the amount value.
   * @property {number} [newCredit.value] Amount value.
   * @property {object} [adjustments] Credit Adjustments.
   * @property {string} [adjustments.currency] The currency for the amount
   * value.
   * @property {number} [adjustments.value] Amount value.
   * @property {object} [creditExpired] Credit Expired.
   * @property {string} [creditExpired.currency] The currency for the amount
   * value.
   * @property {number} [creditExpired.value] Amount value.
   * @property {object} [charges] Credit Eligible Charges.
   * @property {string} [charges.currency] The currency for the amount value.
   * @property {number} [charges.value] Amount value.
   * @property {object} [closedBalance] Closed Balance.
   * @property {string} [closedBalance.currency] The currency for the amount
   * value.
   * @property {number} [closedBalance.value] Amount value.
   * @property {string} [eventType] The type of event. Possible values include:
   * 'NewCredit', 'ExpiredCredit', 'SettledCharges'
   * @property {string} [invoiceNumber] Invoice Number.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of EventSummary
   *
   * @returns {object} metadata of EventSummary
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'EventSummary',
      type: {
        name: 'Composite',
        className: 'EventSummary',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            readOnly: true,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          transactionDate: {
            required: false,
            readOnly: true,
            serializedName: 'properties.transactionDate',
            type: {
              name: 'DateTime'
            }
          },
          description: {
            required: false,
            readOnly: true,
            serializedName: 'properties.description',
            type: {
              name: 'String'
            }
          },
          newCredit: {
            required: false,
            readOnly: true,
            serializedName: 'properties.newCredit',
            type: {
              name: 'Composite',
              className: 'Amount'
            }
          },
          adjustments: {
            required: false,
            readOnly: true,
            serializedName: 'properties.adjustments',
            type: {
              name: 'Composite',
              className: 'Amount'
            }
          },
          creditExpired: {
            required: false,
            readOnly: true,
            serializedName: 'properties.creditExpired',
            type: {
              name: 'Composite',
              className: 'Amount'
            }
          },
          charges: {
            required: false,
            readOnly: true,
            serializedName: 'properties.charges',
            type: {
              name: 'Composite',
              className: 'Amount'
            }
          },
          closedBalance: {
            required: false,
            readOnly: true,
            serializedName: 'properties.closedBalance',
            type: {
              name: 'Composite',
              className: 'Amount'
            }
          },
          eventType: {
            required: false,
            serializedName: 'properties.eventType',
            type: {
              name: 'String'
            }
          },
          invoiceNumber: {
            required: false,
            readOnly: true,
            serializedName: 'properties.invoiceNumber',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = EventSummary;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * A management group aggregated cost resource.
 *
 * @extends models['Resource']
 */
class ManagementGroupAggregatedCostResult extends models['Resource'] {
  /**
   * Create a ManagementGroupAggregatedCostResult.
   * @property {string} [billingPeriodId] The id of the billing period resource
   * that the aggregated cost belongs to.
   * @property {date} [usageStart] The start of the date time range covered by
   * aggregated cost.
   * @property {date} [usageEnd] The end of the date time range covered by the
   * aggregated cost.
   * @property {number} [azureCharges] Azure Charges.
   * @property {number} [marketplaceCharges] Marketplace Charges.
   * @property {number} [chargesBilledSeparately] Charges Billed Separately.
   * @property {string} [currency] The ISO currency in which the meter is
   * charged, for example, USD.
   * @property {array} [children] Children of a management group
   * @property {array} [includedSubscriptions] List of subscription Guids
   * included in the calculation of aggregated cost
   * @property {array} [excludedSubscriptions] List of subscription Guids
   * excluded from the calculation of aggregated cost
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ManagementGroupAggregatedCostResult
   *
   * @returns {object} metadata of ManagementGroupAggregatedCostResult
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ManagementGroupAggregatedCostResult',
      type: {
        name: 'Composite',
        className: 'ManagementGroupAggregatedCostResult',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            readOnly: true,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          billingPeriodId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.billingPeriodId',
            type: {
              name: 'String'
            }
          },
          usageStart: {
            required: false,
            readOnly: true,
            serializedName: 'properties.usageStart',
            type: {
              name: 'DateTime'
            }
          },
          usageEnd: {
            required: false,
            readOnly: true,
            serializedName: 'properties.usageEnd',
            type: {
              name: 'DateTime'
            }
          },
          azureCharges: {
            required: false,
            readOnly: true,
            serializedName: 'properties.azureCharges',
            type: {
              name: 'Number'
            }
          },
          marketplaceCharges: {
            required: false,
            readOnly: true,
            serializedName: 'properties.marketplaceCharges',
            type: {
              name: 'Number'
            }
          },
          chargesBilledSeparately: {
            required: false,
            readOnly: true,
            serializedName: 'properties.chargesBilledSeparately',
            type: {
              name: 'Number'
            }
          },
          currency: {
            required: false,
            readOnly: true,
            serializedName: 'properties.currency',
            type: {
              name: 'String'
            }
          },
          children: {
            required: false,
            serializedName: 'properties.children',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ManagementGroupAggregatedCostResultElementType',
                  type: {
                    name: 'Composite',
                    className: 'ManagementGroupAggregatedCostResult'
                  }
              }
            }
          },
          includedSubscriptions: {
            required: false,
            serializedName: 'properties.includedSubscriptions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          excludedSubscriptions: {
            required: false,
            serializedName: 'properties.excludedSubscriptions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = ManagementGroupAggregatedCostResult;

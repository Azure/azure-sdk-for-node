/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure";
import * as moment from "moment";

export {

  BaseResource,
  CloudError
};

/**
 * The attributes associated with legacy enrollment
 */
export interface EnrollmentPolicies {
  /**
   * The accountOwnerViewCharges flag for Enrollment
   */
  readonly accountOwnerViewCharges?: boolean;
  /**
   * The departmentAdminViewCharges flag for Enrollment
   */
  readonly departmentAdminViewCharges?: boolean;
  /**
   * The marketplaces flag for Enrollment
   */
  readonly marketplacesEnabled?: boolean;
  /**
   * The reserved instances flag for Enrollment
   */
  readonly reservedInstancesEnabled?: boolean;
}

/**
 * Current entity level details
 */
export interface Enrollment {
  /**
   * Enrollment Start Date
   */
  readonly startDate?: Date;
  /**
   * Enrollment End Date
   */
  readonly endDate?: Date;
  /**
   * The currency associated with enrollment
   */
  readonly currency?: string;
  /**
   * The channel for Enrollment
   */
  readonly channel?: string;
  /**
   * The attributes associated with legacy enrollment.
   */
  readonly policies?: EnrollmentPolicies;
  /**
   * The language for Enrollment
   */
  readonly language?: string;
  /**
   * The countryCode for Enrollment
   */
  readonly countryCode?: string;
  /**
   * Enrollment status
   */
  readonly status?: string;
  /**
   * Enrollment billing cycle
   */
  readonly billingCylce?: string;
}

/**
 * The Resource model definition.
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id.
   */
  readonly id?: string;
  /**
   * Resource name.
   */
  readonly name?: string;
  /**
   * Resource type.
   */
  readonly type?: string;
  /**
   * Resource tags.
   */
  readonly tags?: { [propertyName: string]: string };
}

/**
 * A department resource.
 */
export interface Department extends Resource {
  /**
   * The name for department.
   */
  departmentName?: string;
  /**
   * The cost center name.
   */
  costCenter?: string;
  /**
   * The status for department.
   */
  status?: string;
  /**
   * Associated enrollment accounts. By default this is not populated, unless it's specified in
   * $expand.
   */
  enrollmentAccounts?: EnrollmentAccount[];
}

/**
 * An account resource.
 */
export interface EnrollmentAccount extends Resource {
  /**
   * The account name.
   */
  accountName?: string;
  /**
   * The cost center name.
   */
  costCenter?: string;
  /**
   * The account owner
   */
  accountOwner?: string;
  /**
   * The status for account.
   */
  status?: string;
  /**
   * Account Start Date
   */
  startDate?: Date;
  /**
   * Account End Date
   */
  endDate?: Date;
  /**
   * Associated department. By default this is not populated, unless it's specified in $expand.
   */
  department?: Department;
}

/**
 * Address details.
 */
export interface Address {
  /**
   * Address Line1.
   */
  addressLine1?: string;
  /**
   * Address Line2.
   */
  addressLine2?: string;
  /**
   * Address Line3.
   */
  addressLine3?: string;
  /**
   * Address City.
   */
  city?: string;
  /**
   * Address Region.
   */
  region?: string;
  /**
   * Country code uses ISO2, 2-digit format..
   */
  country?: string;
  /**
   * Postal Code.
   */
  postalCode?: string;
  /**
   * Phone Number.
   */
  phoneNumber?: string;
}

/**
 * A billing profile resource.
 */
export interface BillingProfile extends Resource {
  /**
   * The billing profile name.
   */
  displayName?: string;
  /**
   * Purchase order number.
   */
  poNumber?: string;
  /**
   * Billing address.
   */
  billingAddress?: Address;
  /**
   * Billing contact.
   */
  readonly billingContact?: string;
  /**
   * Email invoice.
   */
  readonly emailInvoice?: boolean;
  /**
   * Invoice day.
   */
  readonly invoiceDay?: number;
  /**
   * Currency on the billing profile.
   */
  readonly currency?: string;
}

/**
 * An InvoiceSection resource.
 */
export interface InvoiceSection extends Resource {
  /**
   * The name of the InvoiceSection.
   */
  displayName?: string;
  /**
   * The billing profiles associated to the billing account.
   */
  billingProfiles?: BillingProfile[];
}

/**
 * A billing account resource.
 */
export interface BillingAccount extends Resource {
  /**
   * The Company this billing account belongs to.
   */
  readonly company?: string;
  /**
   * The billing account Type. Possible values include: 'CommerceRoot', 'Enrollment'
   */
  readonly accountType?: string;
  /**
   * The address associated with billing account.
   */
  address?: Address;
  /**
   * The ISO currency, for example, USD.
   */
  readonly defaultCurrency?: string;
  /**
   * The country associated with billing account.
   */
  readonly country?: string;
  /**
   * Agreements associated with billing account
   */
  readonly agreements?: string;
  /**
   * The invoiceSections associated to the billing account.
   */
  readonly invoiceSections?: InvoiceSection[];
  /**
   * The billing profiles associated to the billing account.
   */
  readonly billingProfiles?: BillingProfile[];
  /**
   * The details about the associated legacy enrollment. By default this is not populated, unless
   * it's specified in $expand.
   */
  readonly enrollmentDetails?: Enrollment;
  /**
   * The departments associated to the enrollment.
   */
  readonly departments?: Department[];
  /**
   * The accounts associated to the enrollment.
   */
  readonly enrollmentAccounts?: EnrollmentAccount[];
}

/**
 * Object to represent monetary quantities.
 */
export interface Amount {
  /**
   * The currency for the amount value.
   */
  readonly currency?: string;
  /**
   * Amount value.
   */
  readonly value?: number;
}

/**
 * Download response of Pricesheets.
 */
export interface PricesheetDownloadResponse extends Resource {
  /**
   * The URL to the PDF file.
   */
  readonly downloadUrl?: string;
  /**
   * The time in UTC at which this download URL will expire.
   */
  readonly expiryTime?: string;
}

/**
 * The start and end date for a budget.
 */
export interface BudgetTimePeriod {
  /**
   * The start date for the budget.
   */
  startDate: Date;
  /**
   * The end date for the budget. If not provided, we default this to 10 years from the start date.
   */
  endDate?: Date;
}

/**
 * The current amount of cost which is being tracked for a budget.
 */
export interface CurrentSpend {
  /**
   * The total amount of cost which is being tracked by the budget.
   */
  readonly amount?: number;
  /**
   * The unit of measure for the budget amount.
   */
  readonly unit?: string;
}

/**
 * The notification associated with a budget.
 */
export interface Notification {
  /**
   * The notification is enabled or not.
   */
  enabled: boolean;
  /**
   * The comparison operator. Possible values include: 'EqualTo', 'GreaterThan',
   * 'GreaterThanOrEqualTo'
   */
  operator: string;
  /**
   * Threshold value associated with a notification. Notification is sent when the cost exceeded
   * the threshold. It is always percent and has to be between 0 and 1000.
   */
  threshold: number;
  /**
   * Email addresses to send the budget notification to when the threshold is exceeded.
   */
  contactEmails: string[];
  /**
   * Contact roles to send the budget notification to when the threshold is exceeded.
   */
  contactRoles?: string[];
}

/**
 * The Resource model definition.
 */
export interface ProxyResource extends BaseResource {
  /**
   * Resource Id.
   */
  readonly id?: string;
  /**
   * Resource name.
   */
  readonly name?: string;
  /**
   * Resource type.
   */
  readonly type?: string;
  /**
   * eTag of the resource. To handle concurrent update scenario, this field will be used to
   * determine whether the user is updating the latest version or not.
   */
  eTag?: string;
}

/**
 * A budget resource.
 */
export interface Budget extends ProxyResource {
  /**
   * The total amount of cost to track with the budget
   */
  amount: number;
  /**
   * The time covered by a budget. Tracking of the amount will be reset based on the time grain.
   * Possible values include: 'Monthly', 'Quarterly', 'Annually'
   */
  timeGrain: string;
  /**
   * Has start and end date of the budget. The start date must be first of the month and should be
   * less than the end date. Budget start date must be on or after June 1, 2017. Future start date
   * should not be more than three months. Past start date should  be selected within the timegrain
   * period. There are no restrictions on the end date.
   */
  timePeriod: BudgetTimePeriod;
  /**
   * The current amount of cost which is being tracked for a budget.
   */
  readonly currentSpend?: CurrentSpend;
  /**
   * Dictionary of notifications associated with the budget. Budget can have up to five
   * notifications.
   */
  notifications?: { [propertyName: string]: Notification };
}

/**
 * Summary of credit balances.
 */
export interface CreditBalanceSummary {
  /**
   * Estimated balance.
   */
  readonly estimatedBalance?: Amount;
  /**
   * Current balance.
   */
  readonly currentBalance?: Amount;
}

/**
 * A credit summary resource.
 */
export interface CreditSummary extends Resource {
  /**
   * Summary of balances associated with this credit summary.
   */
  balanceSummary?: CreditBalanceSummary;
  /**
   * Pending Credit Adjustments.
   */
  readonly pendingCreditAdjustments?: Amount;
  /**
   * Expired Credit.
   */
  readonly expiredCredit?: Amount;
  /**
   * Pending Eligible Charges.
   */
  readonly pendingEligibleCharges?: Amount;
}

/**
 * An event summary resource.
 */
export interface EventSummary extends Resource {
  /**
   * Transaction Date.
   */
  readonly transactionDate?: Date;
  /**
   * Transaction description.
   */
  readonly description?: string;
  /**
   * New Credit.
   */
  readonly newCredit?: Amount;
  /**
   * Credit Adjustments.
   */
  readonly adjustments?: Amount;
  /**
   * Credit Expired.
   */
  readonly creditExpired?: Amount;
  /**
   * Credit Eligible Charges.
   */
  readonly charges?: Amount;
  /**
   * Closed Balance.
   */
  readonly closedBalance?: Amount;
  /**
   * The type of event. Possible values include: 'NewCredit', 'ExpiredCredit', 'SettledCharges'
   */
  eventType?: string;
  /**
   * Invoice Number.
   */
  readonly invoiceNumber?: string;
}

/**
 * Result of listing event summary.
 */
export interface Events {
  /**
   * The list of event summary.
   */
  readonly value?: EventSummary[];
}

/**
 * A lot summary resource.
 */
export interface LotSummary extends Resource {
  /**
   * Original Amount.
   */
  readonly originalAmount?: Amount;
  /**
   * Closed Balance.
   */
  readonly closedBalance?: Amount;
  /**
   * Lot source. Possible values include: 'PurchasedCredit', 'PromotionalCredit'
   */
  readonly source?: string;
  /**
   * Start Date.
   */
  readonly startDate?: Date;
  /**
   * Expiration Date.
   */
  readonly expirationDate?: Date;
  /**
   * PO Number.
   */
  readonly poNumber?: string;
}

/**
 * Result of listing lot summary.
 */
export interface Lots {
  /**
   * The list of lot summary.
   */
  readonly value?: LotSummary[];
}

/**
 * A charge summary resource by billing account.
 */
export interface ChargeSummaryByBillingAccount extends Resource {
  /**
   * The id of the billing period resource that the usage belongs to.
   */
  readonly billingPeriodId?: string;
  /**
   * Billing period start date.
   */
  readonly usageStart?: string;
  /**
   * Billing period end date.
   */
  readonly usageEnd?: string;
  /**
   * Azure Charges.
   */
  readonly azureCharges?: Amount;
  /**
   * Charges Billed separately.
   */
  readonly chargesBilledSeparately?: Amount;
  /**
   * Marketplace Charges.
   */
  readonly marketplaceCharges?: Amount;
  /**
   * The id of the billing account resource that the charge belongs to.
   */
  readonly billingAccountId?: string;
  /**
   * The id of the billing profile resource that the charge belongs to.
   */
  readonly billingProfileId?: string;
  /**
   * The id of the invoice section resource that the charge belongs to.
   */
  readonly invoiceSectionId?: string;
}

/**
 * Result of listing charge summary by billing account. It contains a list of available change
 * summaries in reverse chronological order by billing period.
 */
export interface ChargesListByBillingAccount {
  /**
   * The list of charge summary by billing account.
   */
  readonly value?: ChargeSummaryByBillingAccount[];
}

/**
 * A charge summary resource by billing profile.
 */
export interface ChargeSummaryByBillingProfile extends Resource {
  /**
   * The id of the billing period resource that the usage belongs to.
   */
  readonly billingPeriodId?: string;
  /**
   * Billing period start date.
   */
  readonly usageStart?: string;
  /**
   * Billing period end date.
   */
  readonly usageEnd?: string;
  /**
   * Azure Charges.
   */
  readonly azureCharges?: Amount;
  /**
   * Charges Billed separately.
   */
  readonly chargesBilledSeparately?: Amount;
  /**
   * Marketplace Charges.
   */
  readonly marketplaceCharges?: Amount;
  /**
   * The id of the billing account resource that the charge belongs to.
   */
  readonly billingAccountId?: string;
  /**
   * The id of the billing profile resource that the charge belongs to.
   */
  readonly billingProfileId?: string;
  /**
   * The id of the invoice section resource that the charge belongs to.
   */
  readonly invoiceSectionId?: string;
}

/**
 * Result of listing charge summary by billing profile. It contains a list of available change
 * summaries in reverse chronological order by billing period.
 */
export interface ChargesListByBillingProfile {
  /**
   * The list of charge summary by billing profile.
   */
  readonly value?: ChargeSummaryByBillingProfile[];
}

/**
 * A charge summary resource by invoiceSection.
 */
export interface ChargeSummaryByInvoiceSection extends Resource {
  /**
   * The id of the billing period resource that the usage belongs to.
   */
  readonly billingPeriodId?: string;
  /**
   * Billing period start date.
   */
  readonly usageStart?: string;
  /**
   * Billing period end date.
   */
  readonly usageEnd?: string;
  /**
   * Azure Charges.
   */
  readonly azureCharges?: Amount;
  /**
   * Charges Billed separately.
   */
  readonly chargesBilledSeparately?: Amount;
  /**
   * Marketplace Charges.
   */
  readonly marketplaceCharges?: Amount;
  /**
   * The id of the billing account resource that the charge belongs to.
   */
  readonly billingAccountId?: string;
  /**
   * The id of the billing profile resource that the charge belongs to.
   */
  readonly billingProfileId?: string;
  /**
   * The id of the invoice section resource that the charge belongs to.
   */
  readonly invoiceSectionId?: string;
}

/**
 * Result of listing charge summary by invoiceSection. It contains a list of available change
 * summaries in reverse chronological order by billing period.
 */
export interface ChargesListByInvoiceSection {
  /**
   * The list of charge summary by invoiceSection.
   */
  readonly value?: ChargeSummaryByInvoiceSection[];
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.Consumption.
   */
  readonly provider?: string;
  /**
   * Resource on which the operation is performed: UsageDetail, etc.
   */
  readonly resource?: string;
  /**
   * Operation type: Read, write, delete, etc.
   */
  readonly operation?: string;
}

/**
 * A Consumption REST API operation.
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}.
   */
  readonly name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * The details of the error.
 */
export interface ErrorDetails {
  /**
   * Error code.
   */
  readonly code?: string;
  /**
   * Error message indicating why the operation failed.
   */
  readonly message?: string;
}

/**
 * Error response indicates that the service is not able to process the incoming request. The
 * reason is provided in the error message.
 */
export interface ErrorResponse {
  /**
   * The details of the error.
   */
  error?: ErrorDetails;
}

/**
 * Result of listing budgets. It contains a list of available budgets in the scope provided.
 */
export interface BudgetsListResult extends Array<Budget> {
}

/**
 * Result of listing consumption operations. It contains a list of operations and a URL link to get
 * the next set of results.
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   */
  readonly nextLink?: string;
}

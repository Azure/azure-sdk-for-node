/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure";
import * as moment from "moment";

export {

  BaseResource,
  CloudError
};

/**
 * The start and end date for a budget.
 */
export interface BudgetTimePeriod {
  /**
   * The start date for the budget.
   */
  startDate: Date;
  /**
   * The end date for the budget. If not provided, we default this to 10 years from the start date.
   */
  endDate?: Date;
}

/**
 * The current amount of cost which is being tracked for a budget.
 */
export interface CurrentSpend {
  /**
   * The total amount of cost which is being tracked by the budget.
   */
  readonly amount?: number;
  /**
   * The unit of measure for the budget amount.
   */
  readonly unit?: string;
}

/**
 * The notification associated with a budget.
 */
export interface Notification {
  /**
   * The notification is enabled or not.
   */
  enabled: boolean;
  /**
   * The comparison operator. Possible values include: 'EqualTo', 'GreaterThan',
   * 'GreaterThanOrEqualTo'
   */
  operator: string;
  /**
   * Threshold value associated with a notification. Notification is sent when the cost exceeded
   * the threshold. It is always percent and has to be between 0 and 1000.
   */
  threshold: number;
  /**
   * Email addresses to send the budget notification to when the threshold is exceeded.
   */
  contactEmails: string[];
  /**
   * Contact roles to send the budget notification to when the threshold is exceeded.
   */
  contactRoles?: string[];
}

/**
 * The Resource model definition.
 */
export interface ProxyResource extends BaseResource {
  /**
   * Resource Id.
   */
  readonly id?: string;
  /**
   * Resource name.
   */
  readonly name?: string;
  /**
   * Resource type.
   */
  readonly type?: string;
  /**
   * eTag of the resource. To handle concurrent update scenario, this field will be used to
   * determine whether the user is updating the latest version or not.
   */
  eTag?: string;
}

/**
 * A budget resource.
 */
export interface Budget extends ProxyResource {
  /**
   * The total amount of cost to track with the budget
   */
  amount: number;
  /**
   * The time covered by a budget. Tracking of the amount will be reset based on the time grain.
   * Possible values include: 'Monthly', 'Quarterly', 'Annually'
   */
  timeGrain: string;
  /**
   * Has start and end date of the budget. The start date must be first of the month and should be
   * less than the end date. Budget start date must be on or after June 1, 2017. Future start date
   * should not be more than three months. Past start date should  be selected within the timegrain
   * period. There are no restrictions on the end date.
   */
  timePeriod: BudgetTimePeriod;
  /**
   * The current amount of cost which is being tracked for a budget.
   */
  readonly currentSpend?: CurrentSpend;
  /**
   * Dictionary of notifications associated with the budget. Budget can have up to five
   * notifications.
   */
  notifications?: { [propertyName: string]: Notification };
}

/**
 * The object that represents the operation.
 */
export interface OperationDisplay {
  /**
   * Service provider: Microsoft.Consumption.
   */
  readonly provider?: string;
  /**
   * Resource on which the operation is performed: UsageDetail, etc.
   */
  readonly resource?: string;
  /**
   * Operation type: Read, write, delete, etc.
   */
  readonly operation?: string;
}

/**
 * A Consumption REST API operation.
 */
export interface Operation {
  /**
   * Operation name: {provider}/{resource}/{operation}.
   */
  readonly name?: string;
  /**
   * The object that represents the operation.
   */
  display?: OperationDisplay;
}

/**
 * The details of the error.
 */
export interface ErrorDetails {
  /**
   * Error code.
   */
  readonly code?: string;
  /**
   * Error message indicating why the operation failed.
   */
  readonly message?: string;
}

/**
 * Error response indicates that the service is not able to process the incoming request. The
 * reason is provided in the error message.
 */
export interface ErrorResponse {
  /**
   * The details of the error.
   */
  error?: ErrorDetails;
}

/**
 * Result of listing budgets. It contains a list of available budgets in the scope provided.
 */
export interface BudgetsListResult extends Array<Budget> {
}

/**
 * Result of listing consumption operations. It contains a list of operations and a URL link to get
 * the next set of results.
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   */
  readonly nextLink?: string;
}

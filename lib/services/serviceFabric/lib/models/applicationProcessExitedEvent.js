/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Process Exited event.
 *
 * @extends models['ApplicationEvent']
 */
class ApplicationProcessExitedEvent extends models['ApplicationEvent'] {
  /**
   * Create a ApplicationProcessExitedEvent.
   * @member {string} serviceName Name of Service.
   * @member {string} servicePackageName Name of Service package.
   * @member {string} servicePackageActivationId Activation Id of Service
   * package.
   * @member {boolean} isExclusive Indicates IsExclusive flag.
   * @member {string} codePackageName Name of Code package.
   * @member {string} entryPointType Type of EntryPoint.
   * @member {string} exeName Name of executable.
   * @member {number} processId Process Id.
   * @member {string} hostId Host Id.
   * @member {number} exitCode Exit code of process.
   * @member {boolean} unexpectedTermination Indicates if termination is
   * unexpected.
   * @member {date} startTime Start time of process.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ApplicationProcessExitedEvent
   *
   * @returns {object} metadata of ApplicationProcessExitedEvent
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ApplicationProcessExited',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'Kind',
          clientName: 'kind'
        },
        uberParent: 'FabricEvent',
        className: 'ApplicationProcessExitedEvent',
        modelProperties: {
          eventInstanceId: {
            required: true,
            serializedName: 'EventInstanceId',
            type: {
              name: 'String'
            }
          },
          category: {
            required: false,
            serializedName: 'Category',
            type: {
              name: 'String'
            }
          },
          timeStamp: {
            required: true,
            serializedName: 'TimeStamp',
            type: {
              name: 'DateTime'
            }
          },
          hasCorrelatedEvents: {
            required: false,
            serializedName: 'HasCorrelatedEvents',
            type: {
              name: 'Boolean'
            }
          },
          kind: {
            required: true,
            serializedName: 'Kind',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          applicationId: {
            required: true,
            serializedName: 'ApplicationId',
            type: {
              name: 'String'
            }
          },
          serviceName: {
            required: true,
            serializedName: 'ServiceName',
            type: {
              name: 'String'
            }
          },
          servicePackageName: {
            required: true,
            serializedName: 'ServicePackageName',
            type: {
              name: 'String'
            }
          },
          servicePackageActivationId: {
            required: true,
            serializedName: 'ServicePackageActivationId',
            type: {
              name: 'String'
            }
          },
          isExclusive: {
            required: true,
            serializedName: 'IsExclusive',
            type: {
              name: 'Boolean'
            }
          },
          codePackageName: {
            required: true,
            serializedName: 'CodePackageName',
            type: {
              name: 'String'
            }
          },
          entryPointType: {
            required: true,
            serializedName: 'EntryPointType',
            type: {
              name: 'String'
            }
          },
          exeName: {
            required: true,
            serializedName: 'ExeName',
            type: {
              name: 'String'
            }
          },
          processId: {
            required: true,
            serializedName: 'ProcessId',
            type: {
              name: 'Number'
            }
          },
          hostId: {
            required: true,
            serializedName: 'HostId',
            type: {
              name: 'String'
            }
          },
          exitCode: {
            required: true,
            serializedName: 'ExitCode',
            type: {
              name: 'Number'
            }
          },
          unexpectedTermination: {
            required: true,
            serializedName: 'UnexpectedTermination',
            type: {
              name: 'Boolean'
            }
          },
          startTime: {
            required: true,
            serializedName: 'StartTime',
            type: {
              name: 'DateTime'
            }
          }
        }
      }
    };
  }
}

module.exports = ApplicationProcessExitedEvent;

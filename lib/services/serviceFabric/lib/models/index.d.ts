/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */


/**
 * @class
 * Initializes a new instance of the RegisterClusterPackage class.
 * @constructor
 * The package of the register cluster
 *
 * @member {string} [codeFilePath] The path of the code file
 *
 * @member {string} [clusterManifestFilePath] The relative path of the cluster
 * manifest file
 *
 */
export interface RegisterClusterPackage {
  codeFilePath?: string;
  clusterManifestFilePath?: string;
}

/**
 * @class
 * Initializes a new instance of the UnregisterClusterPackage class.
 * @constructor
 * The package of the unregister cluster
 *
 * @member {string} [codeVersion] The version of the code
 *
 * @member {string} [configVersion] The version of the config
 *
 */
export interface UnregisterClusterPackage {
  codeVersion?: string;
  configVersion?: string;
}

/**
 * @class
 * Initializes a new instance of the NodeId class.
 * @constructor
 * The id
 *
 * @member {string} [id]
 *
 */
export interface NodeId {
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the NodeNodeDeactivationInfo class.
 * @constructor
 * The info of the deactivation info
 *
 * @member {string} [nodeDeactivationIntent] Possible values include:
 * 'Invalid', 'Pause', 'Restart', 'RemoveData'
 *
 * @member {string} [nodeDeactivationStatus] Possible values include:
 * 'Invalid', 'SafetyCheckInProgress', 'SafetyCheckComplete', 'Completed'
 *
 */
export interface NodeNodeDeactivationInfo {
  nodeDeactivationIntent?: string;
  nodeDeactivationStatus?: string;
}

/**
 * @class
 * Initializes a new instance of the Node class.
 * @constructor
 * The node
 *
 * @member {string} [name]
 *
 * @member {string} [ipAddressOrFQDN]
 *
 * @member {string} [type]
 *
 * @member {string} [codeVersion]
 *
 * @member {string} [configVersion]
 *
 * @member {string} [nodeStatus] Possible values include: 'Invalid', 'Up',
 * 'Down', 'Enabling', 'Disabling', 'Disabled', 'Unknown', 'Removed'
 *
 * @member {string} [nodeUpTimeInSeconds]
 *
 * @member {string} [healthState] Possible values include: 'Invalid', 'Ok',
 * 'Warning', 'Error', 'Unknown'
 *
 * @member {boolean} [isSeedNode]
 *
 * @member {string} [upgradeDomain]
 *
 * @member {string} [faultDomain]
 *
 * @member {object} [id] The id
 *
 * @member {string} [id.id]
 *
 * @member {string} [instanceId]
 *
 * @member {object} [nodeDeactivationInfo] The info of the deactivation info
 *
 * @member {string} [nodeDeactivationInfo.nodeDeactivationIntent] Possible
 * values include: 'Invalid', 'Pause', 'Restart', 'RemoveData'
 *
 * @member {string} [nodeDeactivationInfo.nodeDeactivationStatus] Possible
 * values include: 'Invalid', 'SafetyCheckInProgress', 'SafetyCheckComplete',
 * 'Completed'
 *
 */
export interface Node {
  name?: string;
  ipAddressOrFQDN?: string;
  type?: string;
  codeVersion?: string;
  configVersion?: string;
  nodeStatus?: string;
  nodeUpTimeInSeconds?: string;
  healthState?: string;
  isSeedNode?: boolean;
  upgradeDomain?: string;
  faultDomain?: string;
  id?: NodeId;
  instanceId?: string;
  nodeDeactivationInfo?: NodeNodeDeactivationInfo;
}

/**
 * @class
 * Initializes a new instance of the NodeList class.
 * @constructor
 * The list of the node
 *
 * @member {string} [continuationToken]
 *
 * @member {array} [items]
 *
 */
export interface NodeList {
  continuationToken?: string;
  items?: Node[];
}

/**
 * @class
 * Initializes a new instance of the HealthReport class.
 * @constructor
 * The report of the health
 *
 * @member {string} [sourceId]
 *
 * @member {string} [property]
 *
 * @member {string} [healthState] Possible values include: 'Invalid', 'Ok',
 * 'Warning', 'Error', 'Unknown'
 *
 * @member {string} [description]
 *
 * @member {string} [timeToLiveInMilliSeconds]
 *
 * @member {string} [sequenceNumber]
 *
 * @member {boolean} [removeWhenExpired]
 *
 */
export interface HealthReport {
  sourceId?: string;
  property?: string;
  healthState?: string;
  description?: string;
  timeToLiveInMilliSeconds?: string;
  sequenceNumber?: string;
  removeWhenExpired?: boolean;
}

/**
 * @class
 * Initializes a new instance of the NodeHealthReport class.
 * @constructor
 * The report of the node health
 *
 */
export interface NodeHealthReport extends HealthReport {
}

/**
 * @class
 * Initializes a new instance of the DisableNode class.
 * @constructor
 * The node
 *
 * @member {string} [deactivationIntent] Possible values include: 'Pause',
 * 'Restart', 'RemoveData', 'RemoveNode'
 *
 */
export interface DisableNode {
  deactivationIntent?: string;
}

/**
 * @class
 * Initializes a new instance of the HealthEvent class.
 * @constructor
 * The event of the health
 *
 * @member {string} [sourceId]
 *
 * @member {string} [property]
 *
 * @member {string} [healthState] Possible values include: 'Invalid', 'Ok',
 * 'Warning', 'Error', 'Unknown'
 *
 * @member {string} [timeToLiveInMilliSeconds]
 *
 * @member {string} [description]
 *
 * @member {string} [sequenceNumber]
 *
 * @member {boolean} [removeWhenExpired]
 *
 * @member {string} [sourceUtcTimestamp]
 *
 * @member {string} [lastModifiedUtcTimestamp]
 *
 * @member {boolean} [isExpired]
 *
 * @member {string} [lastOkTransitionAt]
 *
 * @member {string} [lastWarningTransitionAt]
 *
 * @member {string} [lastErrorTransitionAt]
 *
 */
export interface HealthEvent {
  sourceId?: string;
  property?: string;
  healthState?: string;
  timeToLiveInMilliSeconds?: string;
  description?: string;
  sequenceNumber?: string;
  removeWhenExpired?: boolean;
  sourceUtcTimestamp?: string;
  lastModifiedUtcTimestamp?: string;
  isExpired?: boolean;
  lastOkTransitionAt?: string;
  lastWarningTransitionAt?: string;
  lastErrorTransitionAt?: string;
}

/**
 * @class
 * Initializes a new instance of the HealthEvaluation class.
 * @constructor
 * The evauation of the health
 *
 * @member {string} [description]
 *
 * @member {string} [aggregatedHealthState] Possible values include: 'Invalid',
 * 'Ok', 'Warning', 'Error', 'Unknown'
 *
 * @member {string} kind Polymorphic Discriminator
 *
 */
export interface HealthEvaluation {
  description?: string;
  aggregatedHealthState?: string;
  kind: string;
}

/**
 * @class
 * Initializes a new instance of the UnhealthyEvaluation class.
 * @constructor
 * The evaluation of the unhealthy
 *
 * @member {object} [healthEvaluation]
 *
 * @member {string} [healthEvaluation.description]
 *
 * @member {string} [healthEvaluation.aggregatedHealthState] Possible values
 * include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'
 *
 * @member {string} [healthEvaluation.kind] Polymorphic Discriminator
 *
 */
export interface UnhealthyEvaluation {
  healthEvaluation?: HealthEvaluation;
}

/**
 * @class
 * Initializes a new instance of the EventHealthEvaluation class.
 * @constructor
 * The evaluation of the event health
 *
 * @member {object} [unhealthyEvent]
 *
 * @member {string} [unhealthyEvent.sourceId]
 *
 * @member {string} [unhealthyEvent.property]
 *
 * @member {string} [unhealthyEvent.healthState] Possible values include:
 * 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'
 *
 * @member {string} [unhealthyEvent.timeToLiveInMilliSeconds]
 *
 * @member {string} [unhealthyEvent.description]
 *
 * @member {string} [unhealthyEvent.sequenceNumber]
 *
 * @member {boolean} [unhealthyEvent.removeWhenExpired]
 *
 * @member {string} [unhealthyEvent.sourceUtcTimestamp]
 *
 * @member {string} [unhealthyEvent.lastModifiedUtcTimestamp]
 *
 * @member {boolean} [unhealthyEvent.isExpired]
 *
 * @member {string} [unhealthyEvent.lastOkTransitionAt]
 *
 * @member {string} [unhealthyEvent.lastWarningTransitionAt]
 *
 * @member {string} [unhealthyEvent.lastErrorTransitionAt]
 *
 * @member {boolean} [considerWarningAsError]
 *
 */
export interface EventHealthEvaluation extends HealthEvaluation {
  unhealthyEvent?: HealthEvent;
  considerWarningAsError?: boolean;
}

/**
 * @class
 * Initializes a new instance of the PartitionsHealthEvaluation class.
 * @constructor
 * The evaluation of the partitions health
 *
 * @member {array} [unhealthyEvaluations]
 *
 * @member {number} [totalCount]
 *
 * @member {number} [maxPercentUnhealthyPartitionsPerService]
 *
 */
export interface PartitionsHealthEvaluation extends HealthEvaluation {
  unhealthyEvaluations?: UnhealthyEvaluation[];
  totalCount?: number;
  maxPercentUnhealthyPartitionsPerService?: number;
}

/**
 * @class
 * Initializes a new instance of the ReplicasHealthEvaluation class.
 * @constructor
 * The evaluation of the replicas health
 *
 * @member {array} [unhealthyEvaluations]
 *
 * @member {number} [totalCount]
 *
 * @member {number} [maxPercentUnhealthyPartitionsPerService]
 *
 */
export interface ReplicasHealthEvaluation extends HealthEvaluation {
  unhealthyEvaluations?: UnhealthyEvaluation[];
  totalCount?: number;
  maxPercentUnhealthyPartitionsPerService?: number;
}

/**
 * @class
 * Initializes a new instance of the DeployedServicePackagesHealthEvaluation class.
 * @constructor
 * The evaluation of the deployed service packages health
 *
 * @member {array} [unhealthyEvaluations]
 *
 * @member {number} [totalCount]
 *
 */
export interface DeployedServicePackagesHealthEvaluation extends HealthEvaluation {
  unhealthyEvaluations?: UnhealthyEvaluation[];
  totalCount?: number;
}

/**
 * @class
 * Initializes a new instance of the DeployedApplicationsHealthEvaluation class.
 * @constructor
 * The evaluation of the deployed applications health
 *
 * @member {array} [unhealthyEvaluations]
 *
 * @member {number} [totalCount]
 *
 * @member {number} [maxPercentUnhealthyDeployedApplications]
 *
 */
export interface DeployedApplicationsHealthEvaluation extends HealthEvaluation {
  unhealthyEvaluations?: UnhealthyEvaluation[];
  totalCount?: number;
  maxPercentUnhealthyDeployedApplications?: number;
}

/**
 * @class
 * Initializes a new instance of the ServicesHealthEvaluation class.
 * @constructor
 * The evaluation of the services health
 *
 * @member {string} [serviceTypeName]
 *
 * @member {array} [unhealthyEvaluations]
 *
 * @member {number} [totalCount]
 *
 * @member {number} [maxPercentUnhealthyServices]
 *
 */
export interface ServicesHealthEvaluation extends HealthEvaluation {
  serviceTypeName?: string;
  unhealthyEvaluations?: UnhealthyEvaluation[];
  totalCount?: number;
  maxPercentUnhealthyServices?: number;
}

/**
 * @class
 * Initializes a new instance of the NodesHealthEvaluation class.
 * @constructor
 * The evaluation of the nodes health
 *
 * @member {array} [unhealthyEvaluations]
 *
 * @member {number} [totalCount]
 *
 * @member {number} [maxPercentUnhealthyNodes]
 *
 */
export interface NodesHealthEvaluation extends HealthEvaluation {
  unhealthyEvaluations?: UnhealthyEvaluation[];
  totalCount?: number;
  maxPercentUnhealthyNodes?: number;
}

/**
 * @class
 * Initializes a new instance of the ApplicationsHealthEvaluation class.
 * @constructor
 * The evaluation of the applications health
 *
 * @member {array} [unhealthyEvaluations]
 *
 * @member {number} [totalCount]
 *
 * @member {number} [maxPercentUnhealthyApplications]
 *
 */
export interface ApplicationsHealthEvaluation extends HealthEvaluation {
  unhealthyEvaluations?: UnhealthyEvaluation[];
  totalCount?: number;
  maxPercentUnhealthyApplications?: number;
}

/**
 * @class
 * Initializes a new instance of the UpgradeDomainNodesHealthEvaluation class.
 * @constructor
 * The evaluation of the upgrade domain nodes health
 *
 * @member {string} [upgradeDomainName]
 *
 * @member {array} [unhealthyEvaluations]
 *
 * @member {number} [totalCount]
 *
 * @member {number} [maxPercentUnhealthyNodes]
 *
 */
export interface UpgradeDomainNodesHealthEvaluation extends HealthEvaluation {
  upgradeDomainName?: string;
  unhealthyEvaluations?: UnhealthyEvaluation[];
  totalCount?: number;
  maxPercentUnhealthyNodes?: number;
}

/**
 * @class
 * Initializes a new instance of the UpgradeDomainDeployedApplicationsHealthEvaluation class.
 * @constructor
 * The evaluation of the upgrade domain deployed applications health
 *
 * @member {string} [upgradeDomainName]
 *
 * @member {array} [unhealthyEvaluations]
 *
 * @member {number} [totalCount]
 *
 * @member {number} [maxPercentUnhealthyDeployedApplications]
 *
 */
export interface UpgradeDomainDeployedApplicationsHealthEvaluation extends HealthEvaluation {
  upgradeDomainName?: string;
  unhealthyEvaluations?: UnhealthyEvaluation[];
  totalCount?: number;
  maxPercentUnhealthyDeployedApplications?: number;
}

/**
 * @class
 * Initializes a new instance of the SystemApplicationHealthEvaluation class.
 * @constructor
 * The evaluation of the system application health
 *
 * @member {array} [unhealthyEvaluations]
 *
 */
export interface SystemApplicationHealthEvaluation extends HealthEvaluation {
  unhealthyEvaluations?: UnhealthyEvaluation[];
}

/**
 * @class
 * Initializes a new instance of the PartitionHealthEvaluation class.
 * @constructor
 * The evaluation of the partition health
 *
 * @member {string} [partitionId]
 *
 * @member {array} [unhealthyEvaluations]
 *
 */
export interface PartitionHealthEvaluation extends HealthEvaluation {
  partitionId?: string;
  unhealthyEvaluations?: UnhealthyEvaluation[];
}

/**
 * @class
 * Initializes a new instance of the ReplicaHealthEvaluation class.
 * @constructor
 * The evaluation of the replica health
 *
 * @member {string} [partitionId]
 *
 * @member {string} [replicaOrInstanceId]
 *
 * @member {array} [unhealthyEvaluations]
 *
 */
export interface ReplicaHealthEvaluation extends HealthEvaluation {
  partitionId?: string;
  replicaOrInstanceId?: string;
  unhealthyEvaluations?: UnhealthyEvaluation[];
}

/**
 * @class
 * Initializes a new instance of the DeployedServicePackageHealthEvaluation class.
 * @constructor
 * The evaluation of the deployed service package health
 *
 * @member {string} [applicationName]
 *
 * @member {string} [nodeName]
 *
 * @member {string} [serviceManifestName]
 *
 * @member {array} [unhealthyEvaluations]
 *
 */
export interface DeployedServicePackageHealthEvaluation extends HealthEvaluation {
  applicationName?: string;
  nodeName?: string;
  serviceManifestName?: string;
  unhealthyEvaluations?: UnhealthyEvaluation[];
}

/**
 * @class
 * Initializes a new instance of the DeployedApplicationHealthEvaluation class.
 * @constructor
 * The evaluation of the deployed application health
 *
 * @member {string} [applicationName]
 *
 * @member {string} [nodeName]
 *
 * @member {array} [unhealthyEvaluations]
 *
 */
export interface DeployedApplicationHealthEvaluation extends HealthEvaluation {
  applicationName?: string;
  nodeName?: string;
  unhealthyEvaluations?: UnhealthyEvaluation[];
}

/**
 * @class
 * Initializes a new instance of the ServiceHealthEvaluation class.
 * @constructor
 * The evaluation of the service health
 *
 * @member {string} [serviceName]
 *
 * @member {array} [unhealthyEvaluations]
 *
 */
export interface ServiceHealthEvaluation extends HealthEvaluation {
  serviceName?: string;
  unhealthyEvaluations?: UnhealthyEvaluation[];
}

/**
 * @class
 * Initializes a new instance of the NodeHealthEvaluation class.
 * @constructor
 * The evaluation of the node health
 *
 * @member {string} [nodeName]
 *
 * @member {array} [unhealthyEvaluations]
 *
 */
export interface NodeHealthEvaluation extends HealthEvaluation {
  nodeName?: string;
  unhealthyEvaluations?: UnhealthyEvaluation[];
}

/**
 * @class
 * Initializes a new instance of the ApplicationHealthEvaluation class.
 * @constructor
 * The evaluation of the application health
 *
 * @member {string} [serviceName]
 *
 * @member {array} [unhealthyEvaluations]
 *
 */
export interface ApplicationHealthEvaluation extends HealthEvaluation {
  serviceName?: string;
  unhealthyEvaluations?: UnhealthyEvaluation[];
}

/**
 * @class
 * Initializes a new instance of the DeltaNodesCheckHealthEvaluation class.
 * @constructor
 * The evaluation of the delta nodes check health
 *
 * @member {array} [unhealthyEvaluations]
 *
 * @member {number} [baselineErrorCount]
 *
 * @member {number} [baselineTotalCount]
 *
 * @member {number} [totalCount]
 *
 * @member {number} [maxPercentDeltaUnhealthyNodes]
 *
 */
export interface DeltaNodesCheckHealthEvaluation extends HealthEvaluation {
  unhealthyEvaluations?: UnhealthyEvaluation[];
  baselineErrorCount?: number;
  baselineTotalCount?: number;
  totalCount?: number;
  maxPercentDeltaUnhealthyNodes?: number;
}

/**
 * @class
 * Initializes a new instance of the UpgradeDomainDeltaNodesCheckHealthEvaluation class.
 * @constructor
 * The evaluation of the upgrade domain delta nodes check health
 *
 * @member {string} [upgradeDomainName]
 *
 * @member {array} [unhealthyEvaluations]
 *
 * @member {number} [baselineErrorCount]
 *
 * @member {number} [baselineTotalCount]
 *
 * @member {number} [totalCount]
 *
 * @member {number} [maxPercentUpgradeDomainDeltaUnhealthyNodes]
 *
 */
export interface UpgradeDomainDeltaNodesCheckHealthEvaluation extends HealthEvaluation {
  upgradeDomainName?: string;
  unhealthyEvaluations?: UnhealthyEvaluation[];
  baselineErrorCount?: number;
  baselineTotalCount?: number;
  totalCount?: number;
  maxPercentUpgradeDomainDeltaUnhealthyNodes?: number;
}

/**
 * @class
 * Initializes a new instance of the RegisterApplicationType class.
 * @constructor
 * The type of the register application
 *
 * @member {string} [applicationTypeBuildPath]
 *
 */
export interface RegisterApplicationType {
  applicationTypeBuildPath?: string;
}

/**
 * @class
 * Initializes a new instance of the UnregisterApplicationType class.
 * @constructor
 * The type of the unregister application
 *
 * @member {string} [applicationTypeVersion]
 *
 */
export interface UnregisterApplicationType {
  applicationTypeVersion?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationTypeHealthEvaluation class.
 * @constructor
 * The evaluation of the application type health
 *
 * @member {string} [applicationTypeName]
 *
 * @member {array} [unhealthyEvaluations]
 *
 * @member {number} [totalCount]
 *
 * @member {number} [maxPercentUnhealthyApplications]
 *
 */
export interface ApplicationTypeHealthEvaluation extends HealthEvaluation {
  applicationTypeName?: string;
  unhealthyEvaluations?: UnhealthyEvaluation[];
  totalCount?: number;
  maxPercentUnhealthyApplications?: number;
}

/**
 * @class
 * Initializes a new instance of the NodeHealth class.
 * @constructor
 * The health of the node
 *
 * @member {array} [healthEvents]
 *
 * @member {string} [aggregatedHealthState] Possible values include: 'Invalid',
 * 'Ok', 'Warning', 'Error', 'Unknown'
 *
 * @member {string} [name]
 *
 */
export interface NodeHealth {
  healthEvents?: HealthEvent[];
  aggregatedHealthState?: string;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the DeployedApplication class.
 * @constructor
 * The application of the deployed
 *
 * @member {string} [id]
 *
 * @member {string} [name]
 *
 * @member {string} [typeName]
 *
 * @member {string} [status]
 *
 * @member {string} [workDirectory]
 *
 * @member {string} [logDirectory]
 *
 * @member {string} [tempDirectory]
 *
 */
export interface DeployedApplication {
  id?: string;
  name?: string;
  typeName?: string;
  status?: string;
  workDirectory?: string;
  logDirectory?: string;
  tempDirectory?: string;
}

/**
 * @class
 * Initializes a new instance of the DeployedApplicationHealthReport class.
 * @constructor
 * The report of the deployed application health
 *
 */
export interface DeployedApplicationHealthReport extends HealthReport {
}

/**
 * @class
 * Initializes a new instance of the DeployedServicePackageHealthState class.
 * @constructor
 * The state of the deployed service package health
 *
 * @member {string} [applicationName]
 *
 * @member {string} [serviceManifestName]
 *
 * @member {string} [nodeName]
 *
 * @member {string} [aggregatedHealthState] Possible values include: 'Invalid',
 * 'Ok', 'Warning', 'Error', 'Unknown'
 *
 */
export interface DeployedServicePackageHealthState {
  applicationName?: string;
  serviceManifestName?: string;
  nodeName?: string;
  aggregatedHealthState?: string;
}

/**
 * @class
 * Initializes a new instance of the DeployedApplicationHealth class.
 * @constructor
 * The health of the deployed application
 *
 * @member {array} [healthEvents]
 *
 * @member {string} [aggregatedHealthState] Possible values include: 'Invalid',
 * 'Ok', 'Warning', 'Error', 'Unknown'
 *
 * @member {string} [unhealthyEvaluations]
 *
 * @member {string} [name]
 *
 * @member {string} [nodeName]
 *
 * @member {object} [deployedServicePackageHealthStates]
 *
 * @member {string} [deployedServicePackageHealthStates.applicationName]
 *
 * @member {string} [deployedServicePackageHealthStates.serviceManifestName]
 *
 * @member {string} [deployedServicePackageHealthStates.nodeName]
 *
 * @member {string} [deployedServicePackageHealthStates.aggregatedHealthState]
 * Possible values include: 'Invalid', 'Ok', 'Warning', 'Error', 'Unknown'
 *
 */
export interface DeployedApplicationHealth {
  healthEvents?: HealthEvent[];
  aggregatedHealthState?: string;
  unhealthyEvaluations?: string;
  name?: string;
  nodeName?: string;
  deployedServicePackageHealthStates?: DeployedServicePackageHealthState;
}

/**
 * @class
 * Initializes a new instance of the NodeLoadMetricInformation class.
 * @constructor
 * The information of the node load metric
 *
 * @member {string} [name]
 *
 * @member {string} [nodeCapacity]
 *
 * @member {string} [nodeLoad]
 *
 * @member {string} [nodeRemainingCapacity]
 *
 * @member {boolean} [isCapacityViolation]
 *
 * @member {string} [nodeBufferedCapacity]
 *
 * @member {string} [nodeRemainingBufferedCapacity]
 *
 */
export interface NodeLoadMetricInformation {
  name?: string;
  nodeCapacity?: string;
  nodeLoad?: string;
  nodeRemainingCapacity?: string;
  isCapacityViolation?: boolean;
  nodeBufferedCapacity?: string;
  nodeRemainingBufferedCapacity?: string;
}

/**
 * @class
 * Initializes a new instance of the NodeLoadInformation class.
 * @constructor
 * The information of the node load
 *
 * @member {string} [nodeName]
 *
 * @member {object} [nodeLoadMetricInformation]
 *
 * @member {string} [nodeLoadMetricInformation.name]
 *
 * @member {string} [nodeLoadMetricInformation.nodeCapacity]
 *
 * @member {string} [nodeLoadMetricInformation.nodeLoad]
 *
 * @member {string} [nodeLoadMetricInformation.nodeRemainingCapacity]
 *
 * @member {boolean} [nodeLoadMetricInformation.isCapacityViolation]
 *
 * @member {string} [nodeLoadMetricInformation.nodeBufferedCapacity]
 *
 * @member {string} [nodeLoadMetricInformation.nodeRemainingBufferedCapacity]
 *
 */
export interface NodeLoadInformation {
  nodeName?: string;
  nodeLoadMetricInformation?: NodeLoadMetricInformation;
}

/**
 * @class
 * Initializes a new instance of the CodePackageEntryPointStatistics class.
 * @constructor
 * The statistics of the code package entry point
 *
 * @member {number} [lastExitCode]
 *
 * @member {string} [lastActivationTime]
 *
 * @member {string} [lastExitTime]
 *
 * @member {string} [lastSuccessfulActivationTime]
 *
 * @member {string} [lastSuccessfulExitTime]
 *
 * @member {number} [activationFailureCount]
 *
 * @member {number} [continuousActivationFailureCount]
 *
 * @member {number} [exitFailureCount]
 *
 * @member {number} [continuousExitFailureCount]
 *
 * @member {number} [activationCount]
 *
 * @member {number} [exitCount]
 *
 */
export interface CodePackageEntryPointStatistics {
  lastExitCode?: number;
  lastActivationTime?: string;
  lastExitTime?: string;
  lastSuccessfulActivationTime?: string;
  lastSuccessfulExitTime?: string;
  activationFailureCount?: number;
  continuousActivationFailureCount?: number;
  exitFailureCount?: number;
  continuousExitFailureCount?: number;
  activationCount?: number;
  exitCount?: number;
}

/**
 * @class
 * Initializes a new instance of the EntryPoint class.
 * @constructor
 * The point of the entry
 *
 * @member {number} [entryPointLocation]
 *
 * @member {number} [processId]
 *
 * @member {number} [runAsUserName]
 *
 * @member {number} [nextActivationTime]
 *
 * @member {string} [status]
 *
 * @member {object} [codePackageEntryPointStatistics]
 *
 * @member {number} [codePackageEntryPointStatistics.lastExitCode]
 *
 * @member {string} [codePackageEntryPointStatistics.lastActivationTime]
 *
 * @member {string} [codePackageEntryPointStatistics.lastExitTime]
 *
 * @member {string}
 * [codePackageEntryPointStatistics.lastSuccessfulActivationTime]
 *
 * @member {string} [codePackageEntryPointStatistics.lastSuccessfulExitTime]
 *
 * @member {number} [codePackageEntryPointStatistics.activationFailureCount]
 *
 * @member {number}
 * [codePackageEntryPointStatistics.continuousActivationFailureCount]
 *
 * @member {number} [codePackageEntryPointStatistics.exitFailureCount]
 *
 * @member {number}
 * [codePackageEntryPointStatistics.continuousExitFailureCount]
 *
 * @member {number} [codePackageEntryPointStatistics.activationCount]
 *
 * @member {number} [codePackageEntryPointStatistics.exitCount]
 *
 */
export interface EntryPoint {
  entryPointLocation?: number;
  processId?: number;
  runAsUserName?: number;
  nextActivationTime?: number;
  status?: string;
  codePackageEntryPointStatistics?: CodePackageEntryPointStatistics;
}

/**
 * @class
 * Initializes a new instance of the DeployedCodePackage class.
 * @constructor
 * The package of the deployed code
 *
 * @member {string} [name]
 *
 * @member {string} [version]
 *
 * @member {string} [serviceManifestName]
 *
 * @member {string} [status]
 *
 * @member {string} [runFrequencyInterval]
 *
 * @member {object} [setupEntryPoint]
 *
 * @member {number} [setupEntryPoint.entryPointLocation]
 *
 * @member {number} [setupEntryPoint.processId]
 *
 * @member {number} [setupEntryPoint.runAsUserName]
 *
 * @member {number} [setupEntryPoint.nextActivationTime]
 *
 * @member {string} [setupEntryPoint.status]
 *
 * @member {object} [setupEntryPoint.codePackageEntryPointStatistics]
 *
 * @member {number}
 * [setupEntryPoint.codePackageEntryPointStatistics.lastExitCode]
 *
 * @member {string}
 * [setupEntryPoint.codePackageEntryPointStatistics.lastActivationTime]
 *
 * @member {string}
 * [setupEntryPoint.codePackageEntryPointStatistics.lastExitTime]
 *
 * @member {string}
 * [setupEntryPoint.codePackageEntryPointStatistics.lastSuccessfulActivationTime]
 *
 * @member {string}
 * [setupEntryPoint.codePackageEntryPointStatistics.lastSuccessfulExitTime]
 *
 * @member {number}
 * [setupEntryPoint.codePackageEntryPointStatistics.activationFailureCount]
 *
 * @member {number}
 * [setupEntryPoint.codePackageEntryPointStatistics.continuousActivationFailureCount]
 *
 * @member {number}
 * [setupEntryPoint.codePackageEntryPointStatistics.exitFailureCount]
 *
 * @member {number}
 * [setupEntryPoint.codePackageEntryPointStatistics.continuousExitFailureCount]
 *
 * @member {number}
 * [setupEntryPoint.codePackageEntryPointStatistics.activationCount]
 *
 * @member {number} [setupEntryPoint.codePackageEntryPointStatistics.exitCount]
 *
 * @member {object} [mainEntryPoint]
 *
 * @member {number} [mainEntryPoint.entryPointLocation]
 *
 * @member {number} [mainEntryPoint.processId]
 *
 * @member {number} [mainEntryPoint.runAsUserName]
 *
 * @member {number} [mainEntryPoint.nextActivationTime]
 *
 * @member {string} [mainEntryPoint.status]
 *
 * @member {object} [mainEntryPoint.codePackageEntryPointStatistics]
 *
 * @member {number}
 * [mainEntryPoint.codePackageEntryPointStatistics.lastExitCode]
 *
 * @member {string}
 * [mainEntryPoint.codePackageEntryPointStatistics.lastActivationTime]
 *
 * @member {string}
 * [mainEntryPoint.codePackageEntryPointStatistics.lastExitTime]
 *
 * @member {string}
 * [mainEntryPoint.codePackageEntryPointStatistics.lastSuccessfulActivationTime]
 *
 * @member {string}
 * [mainEntryPoint.codePackageEntryPointStatistics.lastSuccessfulExitTime]
 *
 * @member {number}
 * [mainEntryPoint.codePackageEntryPointStatistics.activationFailureCount]
 *
 * @member {number}
 * [mainEntryPoint.codePackageEntryPointStatistics.continuousActivationFailureCount]
 *
 * @member {number}
 * [mainEntryPoint.codePackageEntryPointStatistics.exitFailureCount]
 *
 * @member {number}
 * [mainEntryPoint.codePackageEntryPointStatistics.continuousExitFailureCount]
 *
 * @member {number}
 * [mainEntryPoint.codePackageEntryPointStatistics.activationCount]
 *
 * @member {number} [mainEntryPoint.codePackageEntryPointStatistics.exitCount]
 *
 * @member {boolean} [hasSetupEntryPoint]
 *
 */
export interface DeployedCodePackage {
  name?: string;
  version?: string;
  serviceManifestName?: string;
  status?: string;
  runFrequencyInterval?: string;
  setupEntryPoint?: EntryPoint;
  mainEntryPoint?: EntryPoint;
  hasSetupEntryPoint?: boolean;
}

/**
 * @class
 * Initializes a new instance of the DeployedReplica class.
 * @constructor
 * The replica of the deployed
 *
 * @member {string} [serviceKind] Possible values include: 'Invalid',
 * 'Stateless', 'Stateful'
 *
 * @member {string} [serviceName]
 *
 * @member {string} [serviceTypeName]
 *
 * @member {string} [serviceManifestVersion]
 *
 * @member {string} [serviceManifestName]
 *
 * @member {string} [codePackageName]
 *
 * @member {string} [partitionId]
 *
 * @member {string} [instanceId]
 *
 * @member {string} [replicaId]
 *
 * @member {string} [replicaRole] Possible values include: 'Invalid', 'None',
 * 'Primary', 'IdleSecondary', 'ActiveSecondary'
 *
 * @member {string} [replicaStatus] Possible values include: 'Invalid',
 * 'InBuild', 'Standby', 'Ready', 'Down', 'Dropped'
 *
 * @member {string} [address]
 *
 */
export interface DeployedReplica {
  serviceKind?: string;
  serviceName?: string;
  serviceTypeName?: string;
  serviceManifestVersion?: string;
  serviceManifestName?: string;
  codePackageName?: string;
  partitionId?: string;
  instanceId?: string;
  replicaId?: string;
  replicaRole?: string;
  replicaStatus?: string;
  address?: string;
}

/**
 * @class
 * Initializes a new instance of the DeployedReplicaDetailReplicatorStatusReplicationQueueStatus class.
 * @constructor
 * The status of the replication queue
 *
 * @member {string} [queueUtilizationPercentage]
 *
 * @member {string} [queueMemorySize]
 *
 * @member {string} [firstSequenceNumber]
 *
 * @member {string} [completedSequenceNumber]
 *
 * @member {string} [committedSequenceNumber]
 *
 * @member {string} [lastSequenceNumber]
 *
 */
export interface DeployedReplicaDetailReplicatorStatusReplicationQueueStatus {
  queueUtilizationPercentage?: string;
  queueMemorySize?: string;
  firstSequenceNumber?: string;
  completedSequenceNumber?: string;
  committedSequenceNumber?: string;
  lastSequenceNumber?: string;
}

/**
 * @class
 * Initializes a new instance of the DeployedReplicaDetailReplicatorStatus class.
 * @constructor
 * The status of the replicator
 *
 * @member {number} [kind]
 *
 * @member {object} [replicationQueueStatus] The status of the replication
 * queue
 *
 * @member {string} [replicationQueueStatus.queueUtilizationPercentage]
 *
 * @member {string} [replicationQueueStatus.queueMemorySize]
 *
 * @member {string} [replicationQueueStatus.firstSequenceNumber]
 *
 * @member {string} [replicationQueueStatus.completedSequenceNumber]
 *
 * @member {string} [replicationQueueStatus.committedSequenceNumber]
 *
 * @member {string} [replicationQueueStatus.lastSequenceNumber]
 *
 */
export interface DeployedReplicaDetailReplicatorStatus {
  kind?: number;
  replicationQueueStatus?: DeployedReplicaDetailReplicatorStatusReplicationQueueStatus;
}

/**
 * @class
 * Initializes a new instance of the DeployedReplicaDetail class.
 * @constructor
 * The detail of the deployed replica
 *
 * @member {string} [serviceKind] Possible values include: 'Invalid',
 * 'Stateless', 'Stateful'
 *
 * @member {string} [serviceName]
 *
 * @member {string} [partitionId]
 *
 * @member {number} [currentServiceOperation]
 *
 * @member {number} [currentReplicatorOperation]
 *
 * @member {string} [currentServiceOperationStartTimeUtc]
 *
 * @member {string} [instanceId]
 *
 * @member {string} [replicaId]
 *
 * @member {number} [readStatus]
 *
 * @member {number} [writeStatus]
 *
 * @member {object} [replicatorStatus] The status of the replicator
 *
 * @member {number} [replicatorStatus.kind]
 *
 * @member {object} [replicatorStatus.replicationQueueStatus] The status of the
 * replication queue
 *
 * @member {string}
 * [replicatorStatus.replicationQueueStatus.queueUtilizationPercentage]
 *
 * @member {string} [replicatorStatus.replicationQueueStatus.queueMemorySize]
 *
 * @member {string}
 * [replicatorStatus.replicationQueueStatus.firstSequenceNumber]
 *
 * @member {string}
 * [replicatorStatus.replicationQueueStatus.completedSequenceNumber]
 *
 * @member {string}
 * [replicatorStatus.replicationQueueStatus.committedSequenceNumber]
 *
 * @member {string}
 * [replicatorStatus.replicationQueueStatus.lastSequenceNumber]
 *
 */
export interface DeployedReplicaDetail {
  serviceKind?: string;
  serviceName?: string;
  partitionId?: string;
  currentServiceOperation?: number;
  currentReplicatorOperation?: number;
  currentServiceOperationStartTimeUtc?: string;
  instanceId?: string;
  replicaId?: string;
  readStatus?: number;
  writeStatus?: number;
  replicatorStatus?: DeployedReplicaDetailReplicatorStatus;
}

/**
 * @class
 * Initializes a new instance of the DeployedServicePackage class.
 * @constructor
 * The package of the deployed service
 *
 * @member {string} [name]
 *
 * @member {string} [version]
 *
 * @member {string} [status]
 *
 */
export interface DeployedServicePackage {
  name?: string;
  version?: string;
  status?: string;
}

/**
 * @class
 * Initializes a new instance of the DeployedServicePackageHealth class.
 * @constructor
 * The health of the deployed service package
 *
 * @member {string} [applicationName]
 *
 * @member {string} [serviceManifestName]
 *
 * @member {string} [nodeName]
 *
 * @member {array} [healthEvents]
 *
 * @member {string} [aggregatedHealthState] Possible values include: 'Invalid',
 * 'Ok', 'Warning', 'Error', 'Unknown'
 *
 */
export interface DeployedServicePackageHealth {
  applicationName?: string;
  serviceManifestName?: string;
  nodeName?: string;
  healthEvents?: HealthEvent[];
  aggregatedHealthState?: string;
}

/**
 * @class
 * Initializes a new instance of the DeployedServiceType class.
 * @constructor
 * The type of the deploye service
 *
 * @member {string} [serviceTypeName]
 *
 * @member {string} [codePackageName]
 *
 * @member {string} [serviceManifestName]
 *
 * @member {string} [status]
 *
 */
export interface DeployedServiceType {
  serviceTypeName?: string;
  codePackageName?: string;
  serviceManifestName?: string;
  status?: string;
}

/**
 * @class
 * Initializes a new instance of the DeployedServiceHealthReport class.
 * @constructor
 * The report of the deployed service package health
 *
 */
export interface DeployedServiceHealthReport extends HealthReport {
}

/**
 * @class
 * Initializes a new instance of the ApplicationTypeDefaultParameterListItem class.
 * @constructor
 * The list of the default parameter
 *
 * @member {string} [key]
 *
 * @member {string} [value]
 *
 */
export interface ApplicationTypeDefaultParameterListItem {
  key?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationType class.
 * @constructor
 * The type of the application
 *
 * @member {string} [name]
 *
 * @member {string} [version]
 *
 * @member {array} [defaultParameterList]
 *
 */
export interface ApplicationType {
  name?: string;
  version?: string;
  defaultParameterList?: ApplicationTypeDefaultParameterListItem[];
}

/**
 * @class
 * Initializes a new instance of the ServiceManifest class.
 * @constructor
 * The manifest of the service
 *
 * @member {string} [manifest]
 *
 */
export interface ServiceManifest {
  manifest?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceTypeServiceTypeDescription class.
 * @constructor
 * The description of the service type
 *
 * @member {boolean} [isStateful]
 *
 * @member {string} [serviceTypeName]
 *
 * @member {string} [placementConstraints]
 *
 * @member {boolean} [hasPersistedState]
 *
 */
export interface ServiceTypeServiceTypeDescription {
  isStateful?: boolean;
  serviceTypeName?: string;
  placementConstraints?: string;
  hasPersistedState?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ServiceType class.
 * @constructor
 * The type of the service
 *
 * @member {object} [serviceTypeDescription] The description of the service
 * type
 *
 * @member {boolean} [serviceTypeDescription.isStateful]
 *
 * @member {string} [serviceTypeDescription.serviceTypeName]
 *
 * @member {string} [serviceTypeDescription.placementConstraints]
 *
 * @member {boolean} [serviceTypeDescription.hasPersistedState]
 *
 * @member {string} [serviceManifestVersion]
 *
 * @member {string} [serviceManifestName]
 *
 * @member {boolean} [isServiceGroup]
 *
 */
export interface ServiceType {
  serviceTypeDescription?: ServiceTypeServiceTypeDescription;
  serviceManifestVersion?: string;
  serviceManifestName?: string;
  isServiceGroup?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ApplicationParametersItem class.
 * @constructor
 * The parameters
 *
 * @member {string} [key]
 *
 * @member {string} [value]
 *
 */
export interface ApplicationParametersItem {
  key?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the Application class.
 * @constructor
 * The application
 *
 * @member {string} [id]
 *
 * @member {string} [name]
 *
 * @member {string} [typeName]
 *
 * @member {string} [typeVersion]
 *
 * @member {string} [status]
 *
 * @member {array} [parameters]
 *
 * @member {string} [healthState] Possible values include: 'Invalid', 'Ok',
 * 'Warning', 'Error', 'Unknown'
 *
 */
export interface Application {
  id?: string;
  name?: string;
  typeName?: string;
  typeVersion?: string;
  status?: string;
  parameters?: ApplicationParametersItem[];
  healthState?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationList class.
 * @constructor
 * The list of the application
 *
 * @member {string} [continuationToken]
 *
 * @member {array} [items]
 *
 */
export interface ApplicationList {
  continuationToken?: string;
  items?: Application[];
}

/**
 * @class
 * Initializes a new instance of the ApplicationDescriptionParameterListItem class.
 * @constructor
 * The list of the parameter
 *
 * @member {string} [key]
 *
 * @member {string} [value]
 *
 */
export interface ApplicationDescriptionParameterListItem {
  key?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationDescription class.
 * @constructor
 * The description of the application
 *
 * @member {string} [name]
 *
 * @member {string} [typeName]
 *
 * @member {string} [typeVersion]
 *
 * @member {array} [parameterList]
 *
 */
export interface ApplicationDescription {
  name?: string;
  typeName?: string;
  typeVersion?: string;
  parameterList?: ApplicationDescriptionParameterListItem[];
}

/**
 * @class
 * Initializes a new instance of the ApplicationManifest class.
 * @constructor
 * The manifest of the application
 *
 * @member {string} [manifest]
 *
 */
export interface ApplicationManifest {
  manifest?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationHealthReport class.
 * @constructor
 * The report of the application health
 *
 */
export interface ApplicationHealthReport extends HealthReport {
}

/**
 * @class
 * Initializes a new instance of the Service class.
 * @constructor
 * The service
 *
 * @member {string} [id]
 *
 * @member {string} [serviceKind] Possible values include: 'Invalid',
 * 'Stateless', 'Stateful'
 *
 * @member {string} [name]
 *
 * @member {string} [typeName]
 *
 * @member {string} [manifestVersion]
 *
 * @member {boolean} [hasPersistedState]
 *
 * @member {string} [healthState] Possible values include: 'Invalid', 'Ok',
 * 'Warning', 'Error', 'Unknown'
 *
 * @member {string} [serviceStatus] Possible values include: 'Invalid',
 * 'Active', 'Upgrading', 'Deleting', 'Creating', 'Faile'
 *
 * @member {boolean} [isServiceGroup]
 *
 */
export interface Service {
  id?: string;
  serviceKind?: string;
  name?: string;
  typeName?: string;
  manifestVersion?: string;
  hasPersistedState?: boolean;
  healthState?: string;
  serviceStatus?: string;
  isServiceGroup?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ServiceList class.
 * @constructor
 * The list of the service
 *
 * @member {string} [continuationToken]
 *
 * @member {array} [items]
 *
 */
export interface ServiceList {
  continuationToken?: string;
  items?: Service[];
}

/**
 * @class
 * Initializes a new instance of the ServiceHealthReport class.
 * @constructor
 * The report of the service health
 *
 */
export interface ServiceHealthReport extends HealthReport {
}

/**
 * @class
 * Initializes a new instance of the PartitionDescription class.
 * @constructor
 * The description of the partition
 *
 * @member {string} [partitionScheme] Possible values include: 'Invalid',
 * 'Singleton', 'UniformInt64', 'Named'
 *
 * @member {number} [count]
 *
 * @member {array} [names]
 *
 * @member {string} [lowKey]
 *
 * @member {string} [highKey]
 *
 */
export interface PartitionDescription {
  partitionScheme?: string;
  count?: number;
  names?: string[];
  lowKey?: string;
  highKey?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceGroupMemberDescription class.
 * @constructor
 * The description of the service group member
 *
 * @member {string} [serviceName]
 *
 * @member {string} [serviceTypeName]
 *
 * @member {string} [serviceKind] Possible values include: 'Invalid',
 * 'Stateless', 'Stateful'
 *
 */
export interface ServiceGroupMemberDescription {
  serviceName?: string;
  serviceTypeName?: string;
  serviceKind?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceCorrelationDescription class.
 * @constructor
 * The description of the service correlation
 *
 * @member {string} [serviceName]
 *
 * @member {string} [serviceCorrelationScheme] Possible values include:
 * 'Invalid', 'Affinity', 'AlignedAffinity', 'NonAlignedAffinity'
 *
 */
export interface ServiceCorrelationDescription {
  serviceName?: string;
  serviceCorrelationScheme?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceGroupDescription class.
 * @constructor
 * The description of the service group
 *
 * @member {string} [applicationName]
 *
 * @member {string} [serviceName]
 *
 * @member {string} [serviceTypeName]
 *
 * @member {object} [partitionDescription]
 *
 * @member {string} [partitionDescription.partitionScheme] Possible values
 * include: 'Invalid', 'Singleton', 'UniformInt64', 'Named'
 *
 * @member {number} [partitionDescription.count]
 *
 * @member {array} [partitionDescription.names]
 *
 * @member {string} [partitionDescription.lowKey]
 *
 * @member {string} [partitionDescription.highKey]
 *
 * @member {string} [placementConstraints]
 *
 * @member {object} [correlationScheme]
 *
 * @member {string} [correlationScheme.serviceName]
 *
 * @member {string} [correlationScheme.serviceCorrelationScheme] Possible
 * values include: 'Invalid', 'Affinity', 'AlignedAffinity',
 * 'NonAlignedAffinity'
 *
 * @member {object} [serviceLoadMetrics]
 *
 * @member {string} [serviceLoadMetrics.serviceName]
 *
 * @member {string} [serviceLoadMetrics.serviceCorrelationScheme] Possible
 * values include: 'Invalid', 'Affinity', 'AlignedAffinity',
 * 'NonAlignedAffinity'
 *
 * @member {object} [servicePlacementPolicies]
 *
 * @member {string} [servicePlacementPolicies.serviceName]
 *
 * @member {string} [servicePlacementPolicies.serviceCorrelationScheme]
 * Possible values include: 'Invalid', 'Affinity', 'AlignedAffinity',
 * 'NonAlignedAffinity'
 *
 * @member {number} [flags]
 *
 * @member {array} [serviceGroupMemberDescription]
 *
 * @member {string} serviceKind Polymorphic Discriminator
 *
 */
export interface ServiceGroupDescription {
  applicationName?: string;
  serviceName?: string;
  serviceTypeName?: string;
  partitionDescription?: PartitionDescription;
  placementConstraints?: string;
  correlationScheme?: ServiceCorrelationDescription;
  serviceLoadMetrics?: ServiceCorrelationDescription;
  servicePlacementPolicies?: ServiceCorrelationDescription;
  flags?: number;
  serviceGroupMemberDescription?: ServiceGroupMemberDescription[];
  serviceKind: string;
}

/**
 * @class
 * Initializes a new instance of the StatelessServiceGroupDescription class.
 * @constructor
 * The description of the stateless service group
 *
 * @member {number} [instanceCount]
 *
 */
export interface StatelessServiceGroupDescription extends ServiceGroupDescription {
  instanceCount?: number;
}

/**
 * @class
 * Initializes a new instance of the StatefulServiceGroupDescription class.
 * @constructor
 * The description of the stateful service group
 *
 * @member {number} [targetReplicaSetSize]
 *
 * @member {number} [minReplicaSetSize]
 *
 * @member {boolean} [hasPersistedState]
 *
 * @member {number} [replicaRestartWaitDurationSeconds]
 *
 * @member {number} [quorumLossWaitDurationSeconds]
 *
 * @member {number} [standByReplicaKeepDurationSeconds]
 *
 * @member {string} [defaultMoveCost] Possible values include: 'Zero', 'Low',
 * 'Medium', 'High'
 *
 * @member {boolean} [isDefaultMoveCostSpecified]
 *
 */
export interface StatefulServiceGroupDescription extends ServiceGroupDescription {
  targetReplicaSetSize?: number;
  minReplicaSetSize?: number;
  hasPersistedState?: boolean;
  replicaRestartWaitDurationSeconds?: number;
  quorumLossWaitDurationSeconds?: number;
  standByReplicaKeepDurationSeconds?: number;
  defaultMoveCost?: string;
  isDefaultMoveCostSpecified?: boolean;
}

/**
 * @class
 * Initializes a new instance of the CreateServiceGroupDescription class.
 * @constructor
 * The description of the create service group
 *
 * @member {string} [applicationName]
 *
 * @member {string} [serviceName]
 *
 * @member {string} [serviceTypeName]
 *
 * @member {object} [partitionDescription]
 *
 * @member {string} [partitionDescription.partitionScheme] Possible values
 * include: 'Invalid', 'Singleton', 'UniformInt64', 'Named'
 *
 * @member {number} [partitionDescription.count]
 *
 * @member {array} [partitionDescription.names]
 *
 * @member {string} [partitionDescription.lowKey]
 *
 * @member {string} [partitionDescription.highKey]
 *
 * @member {string} [placementConstraints]
 *
 * @member {object} [correlationScheme]
 *
 * @member {string} [correlationScheme.serviceName]
 *
 * @member {string} [correlationScheme.serviceCorrelationScheme] Possible
 * values include: 'Invalid', 'Affinity', 'AlignedAffinity',
 * 'NonAlignedAffinity'
 *
 * @member {object} [serviceLoadMetrics]
 *
 * @member {string} [serviceLoadMetrics.serviceName]
 *
 * @member {string} [serviceLoadMetrics.serviceCorrelationScheme] Possible
 * values include: 'Invalid', 'Affinity', 'AlignedAffinity',
 * 'NonAlignedAffinity'
 *
 * @member {object} [servicePlacementPolicies]
 *
 * @member {string} [servicePlacementPolicies.serviceName]
 *
 * @member {string} [servicePlacementPolicies.serviceCorrelationScheme]
 * Possible values include: 'Invalid', 'Affinity', 'AlignedAffinity',
 * 'NonAlignedAffinity'
 *
 * @member {number} [flags]
 *
 * @member {array} [serviceGroupMemberDescription]
 *
 * @member {string} serviceKind Polymorphic Discriminator
 *
 */
export interface CreateServiceGroupDescription {
  applicationName?: string;
  serviceName?: string;
  serviceTypeName?: string;
  partitionDescription?: PartitionDescription;
  placementConstraints?: string;
  correlationScheme?: ServiceCorrelationDescription;
  serviceLoadMetrics?: ServiceCorrelationDescription;
  servicePlacementPolicies?: ServiceCorrelationDescription;
  flags?: number;
  serviceGroupMemberDescription?: ServiceGroupMemberDescription[];
  serviceKind: string;
}

/**
 * @class
 * Initializes a new instance of the StatelessCreateServiceGroupDescription class.
 * @constructor
 * The description of the stateless create service group
 *
 * @member {number} [instanceCount]
 *
 */
export interface StatelessCreateServiceGroupDescription extends CreateServiceGroupDescription {
  instanceCount?: number;
}

/**
 * @class
 * Initializes a new instance of the StatefulCreateServiceGroupDescription class.
 * @constructor
 * The description of the stateful create service group
 *
 * @member {number} [targetReplicaSetSize]
 *
 * @member {number} [minReplicaSetSize]
 *
 * @member {boolean} [hasPersistedState]
 *
 * @member {number} [replicaRestartWaitDurationSeconds]
 *
 * @member {number} [quorumLossWaitDurationSeconds]
 *
 * @member {number} [standByReplicaKeepDurationSeconds]
 *
 * @member {string} [defaultMoveCost] Possible values include: 'Zero', 'Low',
 * 'Medium', 'High'
 *
 * @member {boolean} [isDefaultMoveCostSpecified]
 *
 */
export interface StatefulCreateServiceGroupDescription extends CreateServiceGroupDescription {
  targetReplicaSetSize?: number;
  minReplicaSetSize?: number;
  hasPersistedState?: boolean;
  replicaRestartWaitDurationSeconds?: number;
  quorumLossWaitDurationSeconds?: number;
  standByReplicaKeepDurationSeconds?: number;
  defaultMoveCost?: string;
  isDefaultMoveCostSpecified?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ServiceGroupMember class.
 * @constructor
 * The member of the service group
 *
 * @member {string} [name]
 *
 * @member {array} [serviceGroupMemberDescription]
 *
 */
export interface ServiceGroupMember {
  name?: string;
  serviceGroupMemberDescription?: ServiceGroupMemberDescription[];
}

/**
 * @class
 * Initializes a new instance of the ApplicationHealthServiceHealthStatesItem class.
 * @constructor
 * The states of the service health
 *
 * @member {string} [serviceName]
 *
 * @member {string} [aggregatedHealthState] Possible values include: 'Invalid',
 * 'Ok', 'Warning', 'Error', 'Unknown'
 *
 */
export interface ApplicationHealthServiceHealthStatesItem {
  serviceName?: string;
  aggregatedHealthState?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationHealthDeployedApplicationHealthStatesItem class.
 * @constructor
 * The states of the deployed application health
 *
 * @member {string} [applicationName]
 *
 * @member {string} [nodeName]
 *
 * @member {string} [aggregatedHealthState] Possible values include: 'Invalid',
 * 'Ok', 'Warning', 'Error', 'Unknown'
 *
 */
export interface ApplicationHealthDeployedApplicationHealthStatesItem {
  applicationName?: string;
  nodeName?: string;
  aggregatedHealthState?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationHealth class.
 * @constructor
 * The health of the application
 *
 * @member {array} [healthEvents]
 *
 * @member {string} [aggregatedHealthState] Possible values include: 'Invalid',
 * 'Ok', 'Warning', 'Error', 'Unknown'
 *
 * @member {string} [unhealthyEvaluations]
 *
 * @member {string} [name]
 *
 * @member {array} [serviceHealthStates]
 *
 * @member {array} [deployedApplicationHealthStates]
 *
 */
export interface ApplicationHealth {
  healthEvents?: HealthEvent[];
  aggregatedHealthState?: string;
  unhealthyEvaluations?: string;
  name?: string;
  serviceHealthStates?: ApplicationHealthServiceHealthStatesItem[];
  deployedApplicationHealthStates?: ApplicationHealthDeployedApplicationHealthStatesItem[];
}

/**
 * @class
 * Initializes a new instance of the ClusterUpgradeHealthPolicy class.
 * @constructor
 * The upgrade health policy of the cluster
 *
 * @member {number} [maxPercentDeltaUnhealthyNodes] The max percent of the
 * delta unhealthy nodes, values are [0-100]
 *
 * @member {number} [maxPercentUpgradeDomainDeltaUnhealthyNodes] The max
 * percent of the upgrade domain delta unhealthy nodes, values are [0-100]
 *
 */
export interface ClusterUpgradeHealthPolicy {
  maxPercentDeltaUnhealthyNodes?: number;
  maxPercentUpgradeDomainDeltaUnhealthyNodes?: number;
}

/**
 * @class
 * Initializes a new instance of the ApplicationHealthPolicyMap class.
 * @constructor
 * The application health policy of the cluster
 *
 * @member {boolean} [considerWarningAsError] The boolean of the consider
 * warning as error
 *
 * @member {number} [maxPercentUnhealthyDeployedApplications] The max percent
 * of the unhealthy deployed applications
 *
 * @member {number} [defaultServiceTypeHealthPolicy] The policy of the default
 * service type health
 *
 * @member {number} [maxPercentUnhealthyServices] The policy of the default
 * service type health
 *
 * @member {number} [maxPercentUnhealthyPartitionsPerService] The max percent
 * unhealthy partitions per service
 *
 * @member {number} [maxPercentUnhealthyReplicasPerPartition] The max percent
 * unhealthy replicas per partition
 *
 */
export interface ApplicationHealthPolicyMap {
  considerWarningAsError?: boolean;
  maxPercentUnhealthyDeployedApplications?: number;
  defaultServiceTypeHealthPolicy?: number;
  maxPercentUnhealthyServices?: number;
  maxPercentUnhealthyPartitionsPerService?: number;
  maxPercentUnhealthyReplicasPerPartition?: number;
}

/**
 * @class
 * Initializes a new instance of the StartClusterUpgrade class.
 * @constructor
 * The description of the start cluster upgrade
 *
 * @member {string} [configVersion] The version of the config
 *
 * @member {string} [codeVersion] The version of the code
 *
 * @member {string} [upgradeKind] The kind of the upgrade
 *
 * @member {string} [rollingUpgradeMode] The mode of the rolling upgrade.
 * Possible values include: 'Invalid', 'UnmonitoredAuto', 'UnmonitoredManual',
 * 'Monitored'
 *
 * @member {number} [upgradeReplicaSetCheckTimeoutInSeconds] The seconds of the
 * upgrade replica set check timeout
 *
 * @member {boolean} [forceRestart] The flag of the force restart
 *
 * @member {boolean} [enableDeltaHealthEvaluation] The evaluation of the enable
 * delta health
 *
 * @member {object} [monitoringPolicy] The policy of the monitoring
 *
 * @member {object} [clusterUpgradeHealthPolicy] The policy of the cluster
 * upgrade health
 *
 * @member {number} [clusterUpgradeHealthPolicy.maxPercentDeltaUnhealthyNodes]
 * The max percent of the delta unhealthy nodes, values are [0-100]
 *
 * @member {number}
 * [clusterUpgradeHealthPolicy.maxPercentUpgradeDomainDeltaUnhealthyNodes] The
 * max percent of the upgrade domain delta unhealthy nodes, values are [0-100]
 *
 * @member {object} [applicationHealthPolicyMap] The map of the application
 * health policy
 *
 * @member {boolean} [applicationHealthPolicyMap.considerWarningAsError] The
 * boolean of the consider warning as error
 *
 * @member {number}
 * [applicationHealthPolicyMap.maxPercentUnhealthyDeployedApplications] The max
 * percent of the unhealthy deployed applications
 *
 * @member {number} [applicationHealthPolicyMap.defaultServiceTypeHealthPolicy]
 * The policy of the default service type health
 *
 * @member {number} [applicationHealthPolicyMap.maxPercentUnhealthyServices]
 * The policy of the default service type health
 *
 * @member {number}
 * [applicationHealthPolicyMap.maxPercentUnhealthyPartitionsPerService] The max
 * percent unhealthy partitions per service
 *
 * @member {number}
 * [applicationHealthPolicyMap.maxPercentUnhealthyReplicasPerPartition] The max
 * percent unhealthy replicas per partition
 *
 */
export interface StartClusterUpgrade {
  configVersion?: string;
  codeVersion?: string;
  upgradeKind?: string;
  rollingUpgradeMode?: string;
  upgradeReplicaSetCheckTimeoutInSeconds?: number;
  forceRestart?: boolean;
  enableDeltaHealthEvaluation?: boolean;
  monitoringPolicy?: any;
  clusterUpgradeHealthPolicy?: ClusterUpgradeHealthPolicy;
  applicationHealthPolicyMap?: ApplicationHealthPolicyMap;
}

/**
 * @class
 * Initializes a new instance of the ApplicationUpgradeCurrentUpgradeDomainProgress class.
 * @constructor
 * The progress of the current upgrade domain
 *
 * @member {string} [domainName]
 *
 * @member {string} [nodeUpgradeProgressList]
 *
 */
export interface ApplicationUpgradeCurrentUpgradeDomainProgress {
  domainName?: string;
  nodeUpgradeProgressList?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationUpgradeDeployedApplicationHealthStates class.
 * @constructor
 * The states of the deployed application health
 *
 * @member {string} [domainName]
 *
 * @member {string} [nodeUpgradeProgressList]
 *
 */
export interface ApplicationUpgradeDeployedApplicationHealthStates {
  domainName?: string;
  nodeUpgradeProgressList?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationUpgrade class.
 * @constructor
 * The upgrade of the application
 *
 * @member {string} [name]
 *
 * @member {string} [typeName]
 *
 * @member {string} [targetApplicationTypeVersion]
 *
 * @member {string} [upgradeDomains]
 *
 * @member {string} [upgradeState] Possible values include: 'Invalid',
 * 'RollingBackInProgress', 'RollingBackCompleted', 'RollingForwardPending',
 * 'RollingForwardInProgress', 'RollingForwardCompleted'
 *
 * @member {string} [nextUpgradeDomain]
 *
 * @member {string} [rollingUpgradeMode] Possible values include: 'Invalid',
 * 'UnmonitoredAuto', 'UnmonitoredManual', 'Monitored'
 *
 * @member {string} [upgradeDurationInMilliseconds]
 *
 * @member {string} [upgradeDomainDurationInMilliseconds]
 *
 * @member {string} [unhealthyEvaluations]
 *
 * @member {object} [currentUpgradeDomainProgress] The progress of the current
 * upgrade domain
 *
 * @member {string} [currentUpgradeDomainProgress.domainName]
 *
 * @member {string} [currentUpgradeDomainProgress.nodeUpgradeProgressList]
 *
 * @member {string} [startTimestampUtc]
 *
 * @member {string} [failureTimestampUtc]
 *
 * @member {string} [failureReason] Possible values include: 'Invalid',
 * 'Interrupted', 'HealthCheck', 'UpgradeDomainTimeout',
 * 'OverallUpgradeTimeout'
 *
 * @member {object} [deployedApplicationHealthStates] The states of the
 * deployed application health
 *
 * @member {string} [deployedApplicationHealthStates.domainName]
 *
 * @member {string} [deployedApplicationHealthStates.nodeUpgradeProgressList]
 *
 */
export interface ApplicationUpgrade {
  name?: string;
  typeName?: string;
  targetApplicationTypeVersion?: string;
  upgradeDomains?: string;
  upgradeState?: string;
  nextUpgradeDomain?: string;
  rollingUpgradeMode?: string;
  upgradeDurationInMilliseconds?: string;
  upgradeDomainDurationInMilliseconds?: string;
  unhealthyEvaluations?: string;
  currentUpgradeDomainProgress?: ApplicationUpgradeCurrentUpgradeDomainProgress;
  startTimestampUtc?: string;
  failureTimestampUtc?: string;
  failureReason?: string;
  deployedApplicationHealthStates?: ApplicationUpgradeDeployedApplicationHealthStates;
}

/**
 * @class
 * Initializes a new instance of the ServiceLoadMetricDescription class.
 * @constructor
 * The description of the service load metric
 *
 * @member {string} [name]
 *
 * @member {string} [serviceLoadMetricWeight] Possible values include: 'Zero',
 * 'Low', 'Medium', 'High'
 *
 * @member {number} [primaryDefaultLoad]
 *
 * @member {number} [secondaryDefaultLoad]
 *
 */
export interface ServiceLoadMetricDescription {
  name?: string;
  serviceLoadMetricWeight?: string;
  primaryDefaultLoad?: number;
  secondaryDefaultLoad?: number;
}

/**
 * @class
 * Initializes a new instance of the ServicePlacementPolicyDescription class.
 * @constructor
 * The description of the service placement policy
 *
 * @member {string} [type]
 *
 */
export interface ServicePlacementPolicyDescription {
  type?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceDescription class.
 * @constructor
 * The description of the service
 *
 * @member {string} [applicationName]
 *
 * @member {string} [serviceName]
 *
 * @member {string} [serviceTypeName]
 *
 * @member {object} [partitionDescription]
 *
 * @member {string} [partitionDescription.partitionScheme] Possible values
 * include: 'Invalid', 'Singleton', 'UniformInt64', 'Named'
 *
 * @member {number} [partitionDescription.count]
 *
 * @member {array} [partitionDescription.names]
 *
 * @member {string} [partitionDescription.lowKey]
 *
 * @member {string} [partitionDescription.highKey]
 *
 * @member {string} [placementConstraints]
 *
 * @member {object} [correlationScheme]
 *
 * @member {string} [correlationScheme.serviceName]
 *
 * @member {string} [correlationScheme.serviceCorrelationScheme] Possible
 * values include: 'Invalid', 'Affinity', 'AlignedAffinity',
 * 'NonAlignedAffinity'
 *
 * @member {object} [serviceLoadMetrics]
 *
 * @member {string} [serviceLoadMetrics.serviceName]
 *
 * @member {string} [serviceLoadMetrics.serviceCorrelationScheme] Possible
 * values include: 'Invalid', 'Affinity', 'AlignedAffinity',
 * 'NonAlignedAffinity'
 *
 * @member {object} [servicePlacementPolicies]
 *
 * @member {string} [servicePlacementPolicies.serviceName]
 *
 * @member {string} [servicePlacementPolicies.serviceCorrelationScheme]
 * Possible values include: 'Invalid', 'Affinity', 'AlignedAffinity',
 * 'NonAlignedAffinity'
 *
 * @member {number} [flags]
 *
 * @member {string} serviceKind Polymorphic Discriminator
 *
 */
export interface ServiceDescription {
  applicationName?: string;
  serviceName?: string;
  serviceTypeName?: string;
  partitionDescription?: PartitionDescription;
  placementConstraints?: string;
  correlationScheme?: ServiceCorrelationDescription;
  serviceLoadMetrics?: ServiceCorrelationDescription;
  servicePlacementPolicies?: ServiceCorrelationDescription;
  flags?: number;
  serviceKind: string;
}

/**
 * @class
 * Initializes a new instance of the StatelessServiceDescription class.
 * @constructor
 * The description of the stateless service
 *
 * @member {number} [instanceCount]
 *
 */
export interface StatelessServiceDescription extends ServiceDescription {
  instanceCount?: number;
}

/**
 * @class
 * Initializes a new instance of the StatefulServiceDescription class.
 * @constructor
 * The description of the stateful service
 *
 * @member {number} [targetReplicaSetSize]
 *
 * @member {number} [minReplicaSetSize]
 *
 * @member {boolean} [hasPersistedState]
 *
 * @member {number} [replicaRestartWaitDurationSeconds]
 *
 * @member {number} [quorumLossWaitDurationSeconds]
 *
 * @member {number} [standByReplicaKeepDurationSeconds]
 *
 * @member {string} [defaultMoveCost] Possible values include: 'Zero', 'Low',
 * 'Medium', 'High'
 *
 * @member {boolean} [isDefaultMoveCostSpecified]
 *
 */
export interface StatefulServiceDescription extends ServiceDescription {
  targetReplicaSetSize?: number;
  minReplicaSetSize?: number;
  hasPersistedState?: boolean;
  replicaRestartWaitDurationSeconds?: number;
  quorumLossWaitDurationSeconds?: number;
  standByReplicaKeepDurationSeconds?: number;
  defaultMoveCost?: string;
  isDefaultMoveCostSpecified?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ServiceDescriptionTemplate class.
 * @constructor
 * The template of the service description
 *
 * @member {string} [serviceName]
 *
 * @member {string} [serviceTypeName]
 *
 */
export interface ServiceDescriptionTemplate {
  serviceName?: string;
  serviceTypeName?: string;
}

/**
 * @class
 * Initializes a new instance of the CreateServiceDescription class.
 * @constructor
 * The description of the create service
 *
 * @member {string} [applicationName]
 *
 * @member {string} [serviceName]
 *
 * @member {string} [serviceTypeName]
 *
 * @member {object} [partitionDescription]
 *
 * @member {string} [partitionDescription.partitionScheme] Possible values
 * include: 'Invalid', 'Singleton', 'UniformInt64', 'Named'
 *
 * @member {number} [partitionDescription.count]
 *
 * @member {array} [partitionDescription.names]
 *
 * @member {string} [partitionDescription.lowKey]
 *
 * @member {string} [partitionDescription.highKey]
 *
 * @member {string} [placementConstraints]
 *
 * @member {object} [correlationScheme]
 *
 * @member {string} [correlationScheme.serviceName]
 *
 * @member {string} [correlationScheme.serviceCorrelationScheme] Possible
 * values include: 'Invalid', 'Affinity', 'AlignedAffinity',
 * 'NonAlignedAffinity'
 *
 * @member {object} [serviceLoadMetrics]
 *
 * @member {string} [serviceLoadMetrics.serviceName]
 *
 * @member {string} [serviceLoadMetrics.serviceCorrelationScheme] Possible
 * values include: 'Invalid', 'Affinity', 'AlignedAffinity',
 * 'NonAlignedAffinity'
 *
 * @member {object} [servicePlacementPolicies]
 *
 * @member {string} [servicePlacementPolicies.serviceName]
 *
 * @member {string} [servicePlacementPolicies.serviceCorrelationScheme]
 * Possible values include: 'Invalid', 'Affinity', 'AlignedAffinity',
 * 'NonAlignedAffinity'
 *
 * @member {number} [flags]
 *
 * @member {string} serviceKind Polymorphic Discriminator
 *
 */
export interface CreateServiceDescription {
  applicationName?: string;
  serviceName?: string;
  serviceTypeName?: string;
  partitionDescription?: PartitionDescription;
  placementConstraints?: string;
  correlationScheme?: ServiceCorrelationDescription;
  serviceLoadMetrics?: ServiceCorrelationDescription;
  servicePlacementPolicies?: ServiceCorrelationDescription;
  flags?: number;
  serviceKind: string;
}

/**
 * @class
 * Initializes a new instance of the StatelessCreateServiceDescription class.
 * @constructor
 * The description of the stateless create service
 *
 * @member {number} [instanceCount]
 *
 */
export interface StatelessCreateServiceDescription extends CreateServiceDescription {
  instanceCount?: number;
}

/**
 * @class
 * Initializes a new instance of the StatefulCreateServiceDescription class.
 * @constructor
 * The description of the stateful create service
 *
 * @member {number} [targetReplicaSetSize]
 *
 * @member {number} [minReplicaSetSize]
 *
 * @member {boolean} [hasPersistedState]
 *
 * @member {number} [replicaRestartWaitDurationSeconds]
 *
 * @member {number} [quorumLossWaitDurationSeconds]
 *
 * @member {number} [standByReplicaKeepDurationSeconds]
 *
 * @member {string} [defaultMoveCost] Possible values include: 'Zero', 'Low',
 * 'Medium', 'High'
 *
 * @member {boolean} [isDefaultMoveCostSpecified]
 *
 */
export interface StatefulCreateServiceDescription extends CreateServiceDescription {
  targetReplicaSetSize?: number;
  minReplicaSetSize?: number;
  hasPersistedState?: boolean;
  replicaRestartWaitDurationSeconds?: number;
  quorumLossWaitDurationSeconds?: number;
  standByReplicaKeepDurationSeconds?: number;
  defaultMoveCost?: string;
  isDefaultMoveCostSpecified?: boolean;
}

/**
 * @class
 * Initializes a new instance of the UpdateServiceDescription class.
 * @constructor
 * The description of the update service
 *
 * @member {number} [flags]
 *
 * @member {string} serviceKind Polymorphic Discriminator
 *
 */
export interface UpdateServiceDescription {
  flags?: number;
  serviceKind: string;
}

/**
 * @class
 * Initializes a new instance of the StatelessUpdateServiceDescription class.
 * @constructor
 * The description of the stateless update service
 *
 * @member {number} [instanceCount]
 *
 */
export interface StatelessUpdateServiceDescription extends UpdateServiceDescription {
  instanceCount?: number;
}

/**
 * @class
 * Initializes a new instance of the StatefulUpdateServiceDescription class.
 * @constructor
 * The description of the stateful update service
 *
 * @member {number} [targetReplicaSetSize]
 *
 * @member {number} [minReplicaSetSize]
 *
 * @member {number} [replicaRestartWaitDurationInMilliseconds]
 *
 * @member {number} [quorumLossWaitDurationInMilliseconds]
 *
 * @member {number} [standByReplicaKeepDurationInMilliseconds]
 *
 */
export interface StatefulUpdateServiceDescription extends UpdateServiceDescription {
  targetReplicaSetSize?: number;
  minReplicaSetSize?: number;
  replicaRestartWaitDurationInMilliseconds?: number;
  quorumLossWaitDurationInMilliseconds?: number;
  standByReplicaKeepDurationInMilliseconds?: number;
}

/**
 * @class
 * Initializes a new instance of the UpdateServiceGroupDescription class.
 * @constructor
 * The description of the update service group
 *
 * @member {number} [flags]
 *
 * @member {string} serviceKind Polymorphic Discriminator
 *
 */
export interface UpdateServiceGroupDescription {
  flags?: number;
  serviceKind: string;
}

/**
 * @class
 * Initializes a new instance of the StatelessUpdateServiceGroupDescription class.
 * @constructor
 * The description of the stateless update service group
 *
 * @member {number} [instanceCount]
 *
 */
export interface StatelessUpdateServiceGroupDescription extends UpdateServiceGroupDescription {
  instanceCount?: number;
}

/**
 * @class
 * Initializes a new instance of the StatefulUpdateServiceGroupDescription class.
 * @constructor
 * The description of the stateful update service group
 *
 * @member {number} [targetReplicaSetSize]
 *
 * @member {number} [minReplicaSetSize]
 *
 * @member {number} [replicaRestartWaitDurationInMilliseconds]
 *
 * @member {number} [quorumLossWaitDurationInMilliseconds]
 *
 * @member {number} [standByReplicaKeepDurationInMilliseconds]
 *
 */
export interface StatefulUpdateServiceGroupDescription extends UpdateServiceGroupDescription {
  targetReplicaSetSize?: number;
  minReplicaSetSize?: number;
  replicaRestartWaitDurationInMilliseconds?: number;
  quorumLossWaitDurationInMilliseconds?: number;
  standByReplicaKeepDurationInMilliseconds?: number;
}

/**
 * @class
 * Initializes a new instance of the ServiceHealthPartitionHealthStatesItem class.
 * @constructor
 * The states of the partition health
 *
 * @member {string} [partitionId]
 *
 * @member {string} [aggregatedHealthState] Possible values include: 'Invalid',
 * 'Ok', 'Warning', 'Error', 'Unknown'
 *
 */
export interface ServiceHealthPartitionHealthStatesItem {
  partitionId?: string;
  aggregatedHealthState?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceHealth class.
 * @constructor
 * The health of the service
 *
 * @member {array} [healthEvents]
 *
 * @member {string} [aggregatedHealthState] Possible values include: 'Invalid',
 * 'Ok', 'Warning', 'Error', 'Unknown'
 *
 * @member {string} [name]
 *
 * @member {array} [partitionHealthStates]
 *
 */
export interface ServiceHealth {
  healthEvents?: HealthEvent[];
  aggregatedHealthState?: string;
  name?: string;
  partitionHealthStates?: ServiceHealthPartitionHealthStatesItem[];
}

/**
 * @class
 * Initializes a new instance of the PartitionInformation class.
 * @constructor
 * The information of the partition
 *
 * @member {string} [servicePartitionKind] Possible values include: 'Invalid',
 * 'Singleton', 'Int64Range', 'Named'
 *
 * @member {string} [id]
 *
 * @member {array} [name]
 *
 * @member {string} [lowKey]
 *
 * @member {string} [highKey]
 *
 */
export interface PartitionInformation {
  servicePartitionKind?: string;
  id?: string;
  name?: string[];
  lowKey?: string;
  highKey?: string;
}

/**
 * @class
 * Initializes a new instance of the PartitionCurrentConfigurationEpoch class.
 * @constructor
 * The epoch of the current configuration
 *
 * @member {string} [configurationVersion]
 *
 * @member {string} [dataLossVersion]
 *
 */
export interface PartitionCurrentConfigurationEpoch {
  configurationVersion?: string;
  dataLossVersion?: string;
}

/**
 * @class
 * Initializes a new instance of the Partition class.
 * @constructor
 * The partition
 *
 * @member {string} [serviceKind] Possible values include: 'Invalid',
 * 'Stateless', 'Stateful'
 *
 * @member {object} [partitionInformation]
 *
 * @member {string} [partitionInformation.servicePartitionKind] Possible values
 * include: 'Invalid', 'Singleton', 'Int64Range', 'Named'
 *
 * @member {string} [partitionInformation.id]
 *
 * @member {array} [partitionInformation.name]
 *
 * @member {string} [partitionInformation.lowKey]
 *
 * @member {string} [partitionInformation.highKey]
 *
 * @member {number} [instanceCount]
 *
 * @member {number} [targetReplicaSetSize]
 *
 * @member {number} [minReplicaSetSize]
 *
 * @member {string} [healthState] Possible values include: 'Invalid', 'Ok',
 * 'Warning', 'Error', 'Unknown'
 *
 * @member {string} [partitionStatus] Possible values include: 'Invalid',
 * 'Ready', 'NotReady', 'InQuorumLoss', 'Reconfiguring', 'Deleting'
 *
 * @member {object} [currentConfigurationEpoch] The epoch of the current
 * configuration
 *
 * @member {string} [currentConfigurationEpoch.configurationVersion]
 *
 * @member {string} [currentConfigurationEpoch.dataLossVersion]
 *
 */
export interface Partition {
  serviceKind?: string;
  partitionInformation?: PartitionInformation;
  instanceCount?: number;
  targetReplicaSetSize?: number;
  minReplicaSetSize?: number;
  healthState?: string;
  partitionStatus?: string;
  currentConfigurationEpoch?: PartitionCurrentConfigurationEpoch;
}

/**
 * @class
 * Initializes a new instance of the PartitionList class.
 * @constructor
 * The list of the partition
 *
 * @member {string} [continuationToken]
 *
 * @member {array} [items]
 *
 */
export interface PartitionList {
  continuationToken?: string;
  items?: Partition[];
}

/**
 * @class
 * Initializes a new instance of the PartitionHealthReport class.
 * @constructor
 * The report of the partition health
 *
 */
export interface PartitionHealthReport extends HealthReport {
}

/**
 * @class
 * Initializes a new instance of the Replica class.
 * @constructor
 * The replica
 *
 * @member {string} [serviceKind] Possible values include: 'Invalid',
 * 'Stateless', 'Stateful'
 *
 * @member {string} [instanceId]
 *
 * @member {string} [replicaId]
 *
 * @member {string} [replicaRole] Possible values include: 'Invalid', 'None',
 * 'Primary', 'IdleSecondary', 'ActiveSecondary'
 *
 * @member {string} [replicaStatus] Possible values include: 'Invalid',
 * 'InBuild', 'Standby', 'Ready', 'Down', 'Dropped'
 *
 * @member {string} [healthState] Possible values include: 'Invalid', 'Ok',
 * 'Warning', 'Error', 'Unknown'
 *
 * @member {string} [address]
 *
 * @member {string} [nodeName]
 *
 * @member {string} [lastInBuildDurationInSeconds]
 *
 */
export interface Replica {
  serviceKind?: string;
  instanceId?: string;
  replicaId?: string;
  replicaRole?: string;
  replicaStatus?: string;
  healthState?: string;
  address?: string;
  nodeName?: string;
  lastInBuildDurationInSeconds?: string;
}

/**
 * @class
 * Initializes a new instance of the ReplicaList class.
 * @constructor
 * The list of the replica
 *
 * @member {string} [continuationToken]
 *
 * @member {array} [items]
 *
 */
export interface ReplicaList {
  continuationToken?: string;
  items?: Replica[];
}

/**
 * @class
 * Initializes a new instance of the ReplicaHealthReport class.
 * @constructor
 * The report of the replica health
 *
 */
export interface ReplicaHealthReport extends HealthReport {
}

/**
 * @class
 * Initializes a new instance of the PartitionHealthReplicaHealthStatesItem class.
 * @constructor
 * The states of the replica health
 *
 * @member {number} [healthEvents]
 *
 * @member {string} [partitionId]
 *
 * @member {string} [replicaId]
 *
 * @member {string} [aggregatedHealthState] Possible values include: 'Invalid',
 * 'Ok', 'Warning', 'Error', 'Unknown'
 *
 */
export interface PartitionHealthReplicaHealthStatesItem {
  healthEvents?: number;
  partitionId?: string;
  replicaId?: string;
  aggregatedHealthState?: string;
}

/**
 * @class
 * Initializes a new instance of the PartitionHealth class.
 * @constructor
 * The health of the partition
 *
 * @member {array} [healthEvents]
 *
 * @member {string} [aggregatedHealthState] Possible values include: 'Invalid',
 * 'Ok', 'Warning', 'Error', 'Unknown'
 *
 * @member {string} [partitionId]
 *
 * @member {array} [replicaHealthStates]
 *
 */
export interface PartitionHealth {
  healthEvents?: HealthEvent[];
  aggregatedHealthState?: string;
  partitionId?: string;
  replicaHealthStates?: PartitionHealthReplicaHealthStatesItem[];
}

/**
 * @class
 * Initializes a new instance of the ReplicaHealth class.
 * @constructor
 * The health of the replica
 *
 * @member {string} [serviceKind] Possible values include: 'Invalid',
 * 'Stateless', 'Stateful'
 *
 * @member {string} [partitionId]
 *
 * @member {string} [replicaId]
 *
 * @member {array} [healthEvents]
 *
 * @member {string} [aggregatedHealthState] Possible values include: 'Invalid',
 * 'Ok', 'Warning', 'Error', 'Unknown'
 *
 */
export interface ReplicaHealth {
  serviceKind?: string;
  partitionId?: string;
  replicaId?: string;
  healthEvents?: HealthEvent[];
  aggregatedHealthState?: string;
}

/**
 * @class
 * Initializes a new instance of the PartitionLoadInformation class.
 * @constructor
 * The information of the partition load
 *
 * @member {string} [partitionId]
 *
 * @member {array} [primaryLoadMetricReports]
 *
 * @member {array} [secondaryLoadMetricReports]
 *
 */
export interface PartitionLoadInformation {
  partitionId?: string;
  primaryLoadMetricReports?: string[];
  secondaryLoadMetricReports?: string[];
}

/**
 * @class
 * Initializes a new instance of the ReplicaLoadInformation class.
 * @constructor
 * The information of the replica load
 *
 * @member {string} [partitionId]
 *
 * @member {string} [replicaOrInstanceId]
 *
 * @member {array} [reportedLoad]
 *
 */
export interface ReplicaLoadInformation {
  partitionId?: string;
  replicaOrInstanceId?: string;
  reportedLoad?: string[];
}

/**
 * @class
 * Initializes a new instance of the LoadMetricInformationMinNodeLoadId class.
 * @constructor
 * The id of the min node
 *
 * @member {string} [id]
 *
 */
export interface LoadMetricInformationMinNodeLoadId {
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the LoadMetricInformationMaxNodeLoadId class.
 * @constructor
 * The id of the max node load
 *
 * @member {string} [id]
 *
 */
export interface LoadMetricInformationMaxNodeLoadId {
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the LoadMetricInformation class.
 * @constructor
 * The information of the load metric
 *
 * @member {string} [name]
 *
 * @member {boolean} [isBalancedBefore]
 *
 * @member {boolean} [isBalancedAfter]
 *
 * @member {number} [deviationBefore]
 *
 * @member {number} [deviationAfter]
 *
 * @member {number} [balancingThreshold]
 *
 * @member {string} [action]
 *
 * @member {number} [activityThreshold]
 *
 * @member {string} [clusterCapacity]
 *
 * @member {string} [clusterLoad]
 *
 * @member {string} [remainingUnbufferedCapacity]
 *
 * @member {number} [nodeBufferPercentage]
 *
 * @member {string} [bufferedCapacity]
 *
 * @member {string} [remainingBufferedCapacity]
 *
 * @member {boolean} [isClusterCapacityViolation]
 *
 * @member {string} [minNodeLoadValue]
 *
 * @member {object} [minNodeLoadId] The id of the min node
 *
 * @member {string} [minNodeLoadId.id]
 *
 * @member {string} [maxNodeLoadValue]
 *
 * @member {object} [maxNodeLoadId] The id of the max node load
 *
 * @member {string} [maxNodeLoadId.id]
 *
 */
export interface LoadMetricInformation {
  name?: string;
  isBalancedBefore?: boolean;
  isBalancedAfter?: boolean;
  deviationBefore?: number;
  deviationAfter?: number;
  balancingThreshold?: number;
  action?: string;
  activityThreshold?: number;
  clusterCapacity?: string;
  clusterLoad?: string;
  remainingUnbufferedCapacity?: string;
  nodeBufferPercentage?: number;
  bufferedCapacity?: string;
  remainingBufferedCapacity?: string;
  isClusterCapacityViolation?: boolean;
  minNodeLoadValue?: string;
  minNodeLoadId?: LoadMetricInformationMinNodeLoadId;
  maxNodeLoadValue?: string;
  maxNodeLoadId?: LoadMetricInformationMaxNodeLoadId;
}

/**
 * @class
 * Initializes a new instance of the ClusterHealthReport class.
 * @constructor
 * The report of the cluster health
 *
 */
export interface ClusterHealthReport extends HealthReport {
}

/**
 * @class
 * Initializes a new instance of the ClusterLoadInformation class.
 * @constructor
 * The information of the cluster load
 *
 * @member {string} [lastBalancingStartTimeUtc]
 *
 * @member {string} [lastBalancingEndTimeUtc]
 *
 * @member {array} [loadMetricInformation]
 *
 */
export interface ClusterLoadInformation {
  lastBalancingStartTimeUtc?: string;
  lastBalancingEndTimeUtc?: string;
  loadMetricInformation?: LoadMetricInformation[];
}

/**
 * @class
 * Initializes a new instance of the ClusterHealthNodeHealthStatesItemId class.
 * @constructor
 * The id
 *
 * @member {string} [id]
 *
 */
export interface ClusterHealthNodeHealthStatesItemId {
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the ClusterHealthNodeHealthStatesItem class.
 * @constructor
 * The states of tehe node health
 *
 * @member {string} [name]
 *
 * @member {object} [id] The id
 *
 * @member {string} [id.id]
 *
 * @member {string} [aggregatedHealthState] Possible values include: 'Invalid',
 * 'Ok', 'Warning', 'Error', 'Unknown'
 *
 */
export interface ClusterHealthNodeHealthStatesItem {
  name?: string;
  id?: ClusterHealthNodeHealthStatesItemId;
  aggregatedHealthState?: string;
}

/**
 * @class
 * Initializes a new instance of the ClusterHealthApplicationHealthStateItem class.
 * @constructor
 * The state of the application health
 *
 * @member {string} [name]
 *
 * @member {string} [aggregatedHealthState] Possible values include: 'Invalid',
 * 'Ok', 'Warning', 'Error', 'Unknown'
 *
 */
export interface ClusterHealthApplicationHealthStateItem {
  name?: string;
  aggregatedHealthState?: string;
}

/**
 * @class
 * Initializes a new instance of the ClusterHealth class.
 * @constructor
 * The health of the cluster
 *
 * @member {array} [healthEvents]
 *
 * @member {string} [aggregatedHealthState] Possible values include: 'Invalid',
 * 'Ok', 'Warning', 'Error', 'Unknown'
 *
 * @member {array} [unhealthyEvaluations]
 *
 * @member {array} [nodeHealthStates]
 *
 * @member {array} [applicationHealthState]
 *
 */
export interface ClusterHealth {
  healthEvents?: HealthEvent[];
  aggregatedHealthState?: string;
  unhealthyEvaluations?: UnhealthyEvaluation[];
  nodeHealthStates?: ClusterHealthNodeHealthStatesItem[];
  applicationHealthState?: ClusterHealthApplicationHealthStateItem[];
}

/**
 * @class
 * Initializes a new instance of the MonitoringPolicy class.
 * @constructor
 * The policy of the monitoring
 *
 * @member {string} [failureAction]
 *
 * @member {string} [healthCheckWaitDurationInMilliseconds]
 *
 * @member {string} [healthCheckStableDurationInMilliseconds]
 *
 * @member {string} [healthCheckRetryTimeoutInMilliseconds]
 *
 * @member {string} [upgradeTimeoutInMilliseconds]
 *
 * @member {string} [upgradeDomainTimeoutInMilliseconds]
 *
 */
export interface MonitoringPolicy {
  failureAction?: string;
  healthCheckWaitDurationInMilliseconds?: string;
  healthCheckStableDurationInMilliseconds?: string;
  healthCheckRetryTimeoutInMilliseconds?: string;
  upgradeTimeoutInMilliseconds?: string;
  upgradeDomainTimeoutInMilliseconds?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicationHealthPolicyDefaultServiceTypeHealthPolicy class.
 * @constructor
 * The policy of the default service type health
 *
 * @member {number} [maxPercentUnhealthyServices]
 *
 * @member {number} [maxPercentUnhealthyPartitionsPerService]
 *
 * @member {number} [maxPercentUnhealthyReplicasPerPartition]
 *
 */
export interface ApplicationHealthPolicyDefaultServiceTypeHealthPolicy {
  maxPercentUnhealthyServices?: number;
  maxPercentUnhealthyPartitionsPerService?: number;
  maxPercentUnhealthyReplicasPerPartition?: number;
}

/**
 * @class
 * Initializes a new instance of the ApplicationHealthPolicy class.
 * @constructor
 * The policy of the application health
 *
 * @member {boolean} [considerWarningAsError]
 *
 * @member {number} [maxPercentUnhealthyDeployedApplications]
 *
 * @member {object} [defaultServiceTypeHealthPolicy] The policy of the default
 * service type health
 *
 * @member {number}
 * [defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices]
 *
 * @member {number}
 * [defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService]
 *
 * @member {number}
 * [defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition]
 *
 */
export interface ApplicationHealthPolicy {
  considerWarningAsError?: boolean;
  maxPercentUnhealthyDeployedApplications?: number;
  defaultServiceTypeHealthPolicy?: ApplicationHealthPolicyDefaultServiceTypeHealthPolicy;
}

/**
 * @class
 * Initializes a new instance of the StartApplicationUpgradeParametersItem class.
 * @constructor
 * The parameters
 *
 * @member {string} [key]
 *
 * @member {string} [value]
 *
 */
export interface StartApplicationUpgradeParametersItem {
  key?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the StartApplicationUpgrade class.
 * @constructor
 * The description of the start application upgrade
 *
 * @member {string} [name]
 *
 * @member {string} [targetApplicationTypeVersion]
 *
 * @member {array} [parameters]
 *
 * @member {string} [upgradeKind] Possible values include: 'Invalid', 'Rolling'
 *
 * @member {string} [rollingUpgradeMode] Possible values include: 'Invalid',
 * 'UnmonitoredAuto', 'UnmonitoredManual', 'Monitored'
 *
 * @member {number} [upgradeReplicaSetCheckTimeoutInSeconds]
 *
 * @member {boolean} [forceRestart]
 *
 * @member {object} [monitoringPolicy]
 *
 * @member {string} [monitoringPolicy.failureAction]
 *
 * @member {string} [monitoringPolicy.healthCheckWaitDurationInMilliseconds]
 *
 * @member {string} [monitoringPolicy.healthCheckStableDurationInMilliseconds]
 *
 * @member {string} [monitoringPolicy.healthCheckRetryTimeoutInMilliseconds]
 *
 * @member {string} [monitoringPolicy.upgradeTimeoutInMilliseconds]
 *
 * @member {string} [monitoringPolicy.upgradeDomainTimeoutInMilliseconds]
 *
 * @member {object} [applicationHealthPolicy]
 *
 * @member {boolean} [applicationHealthPolicy.considerWarningAsError]
 *
 * @member {number}
 * [applicationHealthPolicy.maxPercentUnhealthyDeployedApplications]
 *
 * @member {object} [applicationHealthPolicy.defaultServiceTypeHealthPolicy]
 * The policy of the default service type health
 *
 * @member {number}
 * [applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices]
 *
 * @member {number}
 * [applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService]
 *
 * @member {number}
 * [applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition]
 *
 */
export interface StartApplicationUpgrade {
  name?: string;
  targetApplicationTypeVersion?: string;
  parameters?: StartApplicationUpgradeParametersItem[];
  upgradeKind?: string;
  rollingUpgradeMode?: string;
  upgradeReplicaSetCheckTimeoutInSeconds?: number;
  forceRestart?: boolean;
  monitoringPolicy?: MonitoringPolicy;
  applicationHealthPolicy?: ApplicationHealthPolicy;
}

/**
 * @class
 * Initializes a new instance of the UpdateDescription class.
 * @constructor
 * The description of the update
 *
 * @member {string} [rollingUpgradeMode] The mode of the rolling upgrade.
 * Possible values include: 'Invalid', 'UnmonitoredAuto', 'UnmonitoredManual',
 * 'Monitored'
 *
 * @member {boolean} [forceRestart] The flag of the force restart
 *
 * @member {string} [failureAction] The action of the failure
 *
 * @member {number} [upgradeReplicaSetCheckTimeoutInSeconds] The seconds of the
 * upgrade replica set check timeout
 *
 * @member {string} [healthCheckWaitDurationInMilliseconds] The seconds of the
 * health check wait duration
 *
 * @member {string} [healthCheckStableDurationInMilliseconds] The seconds of
 * the health check stable duration
 *
 * @member {string} [healthCheckRetryTimeoutInMilliseconds] The milliseconds of
 * the health check retry timeout
 *
 * @member {string} [upgradeTimeoutInMilliseconds] The milliseconds of the
 * upgrade timeout
 *
 * @member {string} [upgradeDomainTimeoutInMilliseconds] The milliseconds of
 * the upgrade domain timeout
 *
 */
export interface UpdateDescription {
  rollingUpgradeMode?: string;
  forceRestart?: boolean;
  failureAction?: string;
  upgradeReplicaSetCheckTimeoutInSeconds?: number;
  healthCheckWaitDurationInMilliseconds?: string;
  healthCheckStableDurationInMilliseconds?: string;
  healthCheckRetryTimeoutInMilliseconds?: string;
  upgradeTimeoutInMilliseconds?: string;
  upgradeDomainTimeoutInMilliseconds?: string;
}

/**
 * @class
 * Initializes a new instance of the ClusterHealthPolicy class.
 * @constructor
 * The policy of the cluster health
 *
 * @member {string} [rollingUpgradeMode] The mode of the rolling upgrade.
 * Possible values include: 'Invalid', 'UnmonitoredAuto', 'UnmonitoredManual',
 * 'Monitored'
 *
 * @member {boolean} [forceRestart] The flag of the force restart
 *
 * @member {string} [failureAction] The action of the failure
 *
 * @member {number} [upgradeReplicaSetCheckTimeoutInSeconds] The seconds of the
 * upgrade replica set check timeout
 *
 * @member {string} [healthCheckWaitDurationInMilliseconds] The milliseconds of
 * the health check wait duration
 *
 * @member {string} [healthCheckStableDurationInMilliseconds] The milliseconds
 * of the health check stable duration
 *
 * @member {string} [healthCheckRetryTimeoutInMilliseconds] The milliseconds of
 * the health check retry timeout
 *
 * @member {string} [upgradeTimeoutInMilliseconds] The milliseconds of the
 * upgrade timeout
 *
 * @member {string} [upgradeDomainTimeoutInMilliseconds] The milliseconds of
 * the upgrade domain timeout
 *
 */
export interface ClusterHealthPolicy {
  rollingUpgradeMode?: string;
  forceRestart?: boolean;
  failureAction?: string;
  upgradeReplicaSetCheckTimeoutInSeconds?: number;
  healthCheckWaitDurationInMilliseconds?: string;
  healthCheckStableDurationInMilliseconds?: string;
  healthCheckRetryTimeoutInMilliseconds?: string;
  upgradeTimeoutInMilliseconds?: string;
  upgradeDomainTimeoutInMilliseconds?: string;
}

/**
 * @class
 * Initializes a new instance of the UpdateClusterUpgrade class.
 * @constructor
 * The description of the update cluster upgrade
 *
 * @member {string} [upgradeKind] The kind of the upgrade
 *
 * @member {object} [updateDescription] The description of the update
 *
 * @member {string} [updateDescription.rollingUpgradeMode] The mode of the
 * rolling upgrade. Possible values include: 'Invalid', 'UnmonitoredAuto',
 * 'UnmonitoredManual', 'Monitored'
 *
 * @member {boolean} [updateDescription.forceRestart] The flag of the force
 * restart
 *
 * @member {string} [updateDescription.failureAction] The action of the failure
 *
 * @member {number} [updateDescription.upgradeReplicaSetCheckTimeoutInSeconds]
 * The seconds of the upgrade replica set check timeout
 *
 * @member {string} [updateDescription.healthCheckWaitDurationInMilliseconds]
 * The seconds of the health check wait duration
 *
 * @member {string} [updateDescription.healthCheckStableDurationInMilliseconds]
 * The seconds of the health check stable duration
 *
 * @member {string} [updateDescription.healthCheckRetryTimeoutInMilliseconds]
 * The milliseconds of the health check retry timeout
 *
 * @member {string} [updateDescription.upgradeTimeoutInMilliseconds] The
 * milliseconds of the upgrade timeout
 *
 * @member {string} [updateDescription.upgradeDomainTimeoutInMilliseconds] The
 * milliseconds of the upgrade domain timeout
 *
 * @member {object} [clusterHealthPolicy] The policy of the cluster health
 *
 * @member {string} [clusterHealthPolicy.rollingUpgradeMode] The mode of the
 * rolling upgrade. Possible values include: 'Invalid', 'UnmonitoredAuto',
 * 'UnmonitoredManual', 'Monitored'
 *
 * @member {boolean} [clusterHealthPolicy.forceRestart] The flag of the force
 * restart
 *
 * @member {string} [clusterHealthPolicy.failureAction] The action of the
 * failure
 *
 * @member {number}
 * [clusterHealthPolicy.upgradeReplicaSetCheckTimeoutInSeconds] The seconds of
 * the upgrade replica set check timeout
 *
 * @member {string} [clusterHealthPolicy.healthCheckWaitDurationInMilliseconds]
 * The milliseconds of the health check wait duration
 *
 * @member {string}
 * [clusterHealthPolicy.healthCheckStableDurationInMilliseconds] The
 * milliseconds of the health check stable duration
 *
 * @member {string} [clusterHealthPolicy.healthCheckRetryTimeoutInMilliseconds]
 * The milliseconds of the health check retry timeout
 *
 * @member {string} [clusterHealthPolicy.upgradeTimeoutInMilliseconds] The
 * milliseconds of the upgrade timeout
 *
 * @member {string} [clusterHealthPolicy.upgradeDomainTimeoutInMilliseconds]
 * The milliseconds of the upgrade domain timeout
 *
 * @member {boolean} [enableDeltaHealthEvaluations] The evaluations of the
 * enable delta health
 *
 */
export interface UpdateClusterUpgrade {
  upgradeKind?: string;
  updateDescription?: UpdateDescription;
  clusterHealthPolicy?: ClusterHealthPolicy;
  enableDeltaHealthEvaluations?: boolean;
}

/**
 * @class
 * Initializes a new instance of the UpdateApplicationUpgrade class.
 * @constructor
 * The description of the update application upgrade
 *
 * @member {string} [name]
 *
 * @member {string} [upgradeKind]
 *
 * @member {object} [updateDescription]
 *
 * @member {string} [updateDescription.rollingUpgradeMode] The mode of the
 * rolling upgrade. Possible values include: 'Invalid', 'UnmonitoredAuto',
 * 'UnmonitoredManual', 'Monitored'
 *
 * @member {boolean} [updateDescription.forceRestart] The flag of the force
 * restart
 *
 * @member {string} [updateDescription.failureAction] The action of the failure
 *
 * @member {number} [updateDescription.upgradeReplicaSetCheckTimeoutInSeconds]
 * The seconds of the upgrade replica set check timeout
 *
 * @member {string} [updateDescription.healthCheckWaitDurationInMilliseconds]
 * The seconds of the health check wait duration
 *
 * @member {string} [updateDescription.healthCheckStableDurationInMilliseconds]
 * The seconds of the health check stable duration
 *
 * @member {string} [updateDescription.healthCheckRetryTimeoutInMilliseconds]
 * The milliseconds of the health check retry timeout
 *
 * @member {string} [updateDescription.upgradeTimeoutInMilliseconds] The
 * milliseconds of the upgrade timeout
 *
 * @member {string} [updateDescription.upgradeDomainTimeoutInMilliseconds] The
 * milliseconds of the upgrade domain timeout
 *
 * @member {object} [applicationHealthPolicy]
 *
 * @member {boolean} [applicationHealthPolicy.considerWarningAsError]
 *
 * @member {number}
 * [applicationHealthPolicy.maxPercentUnhealthyDeployedApplications]
 *
 * @member {object} [applicationHealthPolicy.defaultServiceTypeHealthPolicy]
 * The policy of the default service type health
 *
 * @member {number}
 * [applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyServices]
 *
 * @member {number}
 * [applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyPartitionsPerService]
 *
 * @member {number}
 * [applicationHealthPolicy.defaultServiceTypeHealthPolicy.maxPercentUnhealthyReplicasPerPartition]
 *
 */
export interface UpdateApplicationUpgrade {
  name?: string;
  upgradeKind?: string;
  updateDescription?: UpdateDescription;
  applicationHealthPolicy?: ApplicationHealthPolicy;
}

/**
 * @class
 * Initializes a new instance of the ResumeClusterUpgrade class.
 * @constructor
 * The upgrade of the resume cluster
 *
 * @member {string} [upgradeDomain]
 *
 */
export interface ResumeClusterUpgrade {
  upgradeDomain?: string;
}

/**
 * @class
 * Initializes a new instance of the ResumeApplicationUpgrade class.
 * @constructor
 * The upgrade of the resume application
 *
 * @member {string} [upgradeDomainName]
 *
 */
export interface ResumeApplicationUpgrade {
  upgradeDomainName?: string;
}

/**
 * @class
 * Initializes a new instance of the ResolvedServicePartitionEndpointsItem class.
 * @constructor
 * The endpoints
 *
 * @member {number} [kind]
 *
 * @member {string} [address]
 *
 */
export interface ResolvedServicePartitionEndpointsItem {
  kind?: number;
  address?: string;
}

/**
 * @class
 * Initializes a new instance of the ResolvedServicePartition class.
 * @constructor
 * The partition of the resolved service
 *
 * @member {string} [name]
 *
 * @member {object} [partitionInformation]
 *
 * @member {string} [partitionInformation.servicePartitionKind] Possible values
 * include: 'Invalid', 'Singleton', 'Int64Range', 'Named'
 *
 * @member {string} [partitionInformation.id]
 *
 * @member {array} [partitionInformation.name]
 *
 * @member {string} [partitionInformation.lowKey]
 *
 * @member {string} [partitionInformation.highKey]
 *
 * @member {array} [endpoints]
 *
 * @member {string} [version]
 *
 */
export interface ResolvedServicePartition {
  name?: string;
  partitionInformation?: PartitionInformation;
  endpoints?: ResolvedServicePartitionEndpointsItem[];
  version?: string;
}

/**
 * @class
 * Initializes a new instance of the ClusterUpgradeProgressCurrentUpgradeDomainProgress class.
 * @constructor
 * The progress of the current upgrade domain
 *
 * @member {string} [domainName]
 *
 * @member {string} [nodeUpgradeProgressList]
 *
 */
export interface ClusterUpgradeProgressCurrentUpgradeDomainProgress {
  domainName?: string;
  nodeUpgradeProgressList?: string;
}

/**
 * @class
 * Initializes a new instance of the ClusterUpgradeProgressUpgradeDomainProgressAtFailure class.
 * @constructor
 * The failure of the upgrade domain progress at
 *
 * @member {string} [domainName]
 *
 * @member {string} [nodeUpgradeProgressList]
 *
 */
export interface ClusterUpgradeProgressUpgradeDomainProgressAtFailure {
  domainName?: string;
  nodeUpgradeProgressList?: string;
}

/**
 * @class
 * Initializes a new instance of the ClusterUpgradeProgress class.
 * @constructor
 * The progress of the cluster upgrade
 *
 * @member {string} [codeVersion]
 *
 * @member {string} [configVersion]
 *
 * @member {array} [upgradeDomains]
 *
 * @member {string} [upgradeState] Possible values include: 'Invalid',
 * 'RollingBackInProgress', 'RollingBackCompleted', 'RollingForwardPending',
 * 'RollingForwardInProgress', 'RollingForwardCompleted'
 *
 * @member {string} [nextUpgradeDomain]
 *
 * @member {string} [rollingUpgradeMode] Possible values include: 'Invalid',
 * 'UnmonitoredAuto', 'UnmonitoredManual', 'Monitored'
 *
 * @member {string} [upgradeDurationInMilliseconds]
 *
 * @member {string} [upgradeDomainDurationInMilliseconds]
 *
 * @member {array} [unhealthyEvaluations]
 *
 * @member {object} [currentUpgradeDomainProgress] The progress of the current
 * upgrade domain
 *
 * @member {string} [currentUpgradeDomainProgress.domainName]
 *
 * @member {string} [currentUpgradeDomainProgress.nodeUpgradeProgressList]
 *
 * @member {string} [startTimestampUtc]
 *
 * @member {string} [failureTimestampUtc]
 *
 * @member {string} [failureReason] Possible values include: 'Invalid',
 * 'Interrupted', 'HealthCheck', 'UpgradeDomainTimeout',
 * 'OverallUpgradeTimeout'
 *
 * @member {object} [upgradeDomainProgressAtFailure] The failure of the upgrade
 * domain progress at
 *
 * @member {string} [upgradeDomainProgressAtFailure.domainName]
 *
 * @member {string} [upgradeDomainProgressAtFailure.nodeUpgradeProgressList]
 *
 */
export interface ClusterUpgradeProgress {
  codeVersion?: string;
  configVersion?: string;
  upgradeDomains?: string[];
  upgradeState?: string;
  nextUpgradeDomain?: string;
  rollingUpgradeMode?: string;
  upgradeDurationInMilliseconds?: string;
  upgradeDomainDurationInMilliseconds?: string;
  unhealthyEvaluations?: UnhealthyEvaluation[];
  currentUpgradeDomainProgress?: ClusterUpgradeProgressCurrentUpgradeDomainProgress;
  startTimestampUtc?: string;
  failureTimestampUtc?: string;
  failureReason?: string;
  upgradeDomainProgressAtFailure?: ClusterUpgradeProgressUpgradeDomainProgressAtFailure;
}

/**
 * @class
 * Initializes a new instance of the ErrorModelError class.
 * @constructor
 * The error
 *
 * @member {string} [code]
 *
 * @member {string} [message]
 *
 */
export interface ErrorModelError {
  code?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorModel class.
 * @constructor
 * The model of the error
 *
 * @member {object} [error] The error
 *
 * @member {string} [error.code]
 *
 * @member {string} [error.message]
 *
 */
export interface ErrorModel {
  error?: ErrorModelError;
}

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Information about a stateless instance running in a code package. Please
 * note that DeployedServiceReplicaQueryResult will contain duplicate data like
 * ServiceKind, ServiceName, PartitionId and InstanceId.
 *
 * @extends models['DeployedServiceReplicaDetailInfo']
 */
class DeployedStatelessServiceInstanceDetailInfo extends models['DeployedServiceReplicaDetailInfo'] {
  /**
   * Create a DeployedStatelessServiceInstanceDetailInfo.
   * @member {string} [instanceId]
   * @member {object} [deployedServiceReplicaQueryResult]
   * @member {string} [deployedServiceReplicaQueryResult.instanceId]
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of DeployedStatelessServiceInstanceDetailInfo
   *
   * @returns {object} metadata of DeployedStatelessServiceInstanceDetailInfo
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Stateless',
      type: {
        name: 'Composite',
        className: 'DeployedStatelessServiceInstanceDetailInfo',
        modelProperties: {
          serviceName: {
            required: false,
            serializedName: 'ServiceName',
            type: {
              name: 'String'
            }
          },
          partitionId: {
            required: false,
            serializedName: 'PartitionId',
            type: {
              name: 'String'
            }
          },
          currentServiceOperation: {
            required: false,
            serializedName: 'CurrentServiceOperation',
            type: {
              name: 'String'
            }
          },
          currentServiceOperationStartTimeUtc: {
            required: false,
            serializedName: 'CurrentServiceOperationStartTimeUtc',
            type: {
              name: 'DateTime'
            }
          },
          reportedLoad: {
            required: false,
            serializedName: 'ReportedLoad',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'LoadMetricReportInfoElementType',
                  type: {
                    name: 'Composite',
                    className: 'LoadMetricReportInfo'
                  }
              }
            }
          },
          serviceKind: {
            required: true,
            serializedName: 'ServiceKind',
            type: {
              name: 'String'
            }
          },
          instanceId: {
            required: false,
            serializedName: 'InstanceId',
            type: {
              name: 'String'
            }
          },
          deployedServiceReplicaQueryResult: {
            required: false,
            serializedName: 'DeployedServiceReplicaQueryResult',
            type: {
              name: 'Composite',
              className: 'DeployedStatelessServiceInstanceInfo'
            }
          }
        }
      }
    };
  }
}

module.exports = DeployedStatelessServiceInstanceDetailInfo;

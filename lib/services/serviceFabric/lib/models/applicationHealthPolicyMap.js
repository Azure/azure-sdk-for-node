/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the ApplicationHealthPolicyMap class.
 * @constructor
 * The application health policy of the cluster
 *
 * @member {boolean} [considerWarningAsError] The boolean of the consider
 * warning as error
 *
 * @member {number} [maxPercentUnhealthyDeployedApplications] The max percent
 * of the unhealthy deployed applications
 *
 * @member {number} [defaultServiceTypeHealthPolicy] The policy of the default
 * service type health
 *
 * @member {number} [maxPercentUnhealthyServices] The policy of the default
 * service type health
 *
 * @member {number} [maxPercentUnhealthyPartitionsPerService] The max percent
 * unhealthy partitions per service
 *
 * @member {number} [maxPercentUnhealthyReplicasPerPartition] The max percent
 * unhealthy replicas per partition
 *
 */
function ApplicationHealthPolicyMap() {
}

/**
 * Defines the metadata of ApplicationHealthPolicyMap
 *
 * @returns {object} metadata of ApplicationHealthPolicyMap
 *
 */
ApplicationHealthPolicyMap.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'ApplicationHealthPolicyMap',
    type: {
      name: 'Composite',
      className: 'ApplicationHealthPolicyMap',
      modelProperties: {
        considerWarningAsError: {
          required: false,
          serializedName: 'ConsiderWarningAsError',
          type: {
            name: 'Boolean'
          }
        },
        maxPercentUnhealthyDeployedApplications: {
          required: false,
          serializedName: 'MaxPercentUnhealthyDeployedApplications',
          type: {
            name: 'Number'
          }
        },
        defaultServiceTypeHealthPolicy: {
          required: false,
          serializedName: 'DefaultServiceTypeHealthPolicy',
          type: {
            name: 'Number'
          }
        },
        maxPercentUnhealthyServices: {
          required: false,
          serializedName: 'MaxPercentUnhealthyServices',
          type: {
            name: 'Number'
          }
        },
        maxPercentUnhealthyPartitionsPerService: {
          required: false,
          serializedName: 'MaxPercentUnhealthyPartitionsPerService',
          type: {
            name: 'Number'
          }
        },
        maxPercentUnhealthyReplicasPerPartition: {
          required: false,
          serializedName: 'MaxPercentUnhealthyReplicasPerPartition',
          type: {
            name: 'Number'
          }
        }
      }
    }
  };
};

module.exports = ApplicationHealthPolicyMap;

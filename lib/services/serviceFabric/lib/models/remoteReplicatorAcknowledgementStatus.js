/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Provides details about the remote replicators from the primary replicator's
 * point of view.
 *
 */
class RemoteReplicatorAcknowledgementStatus {
  /**
   * Create a RemoteReplicatorAcknowledgementStatus.
   * @member {object} [replicationStreamAcknowledgementDetail]
   * @member {string}
   * [replicationStreamAcknowledgementDetail.averageReceiveDuration] Represents
   * the average duration it takes for the remote replicator to receive an
   * operation.
   * @member {string}
   * [replicationStreamAcknowledgementDetail.averageApplyDuration] Represents
   * the average duration it takes for the remote replicator to apply an
   * operation. This usually entails writing the operation to disk.
   * @member {string} [replicationStreamAcknowledgementDetail.notReceivedCount]
   * Represents the number of operations not yet received by a remote
   * replicator.
   * @member {string}
   * [replicationStreamAcknowledgementDetail.receivedAndNotAppliedCount]
   * Represents the number of operations received and not yet applied by a
   * remote replicator.
   * @member {object} [copyStreamAcknowledgementDetail]
   * @member {string} [copyStreamAcknowledgementDetail.averageReceiveDuration]
   * Represents the average duration it takes for the remote replicator to
   * receive an operation.
   * @member {string} [copyStreamAcknowledgementDetail.averageApplyDuration]
   * Represents the average duration it takes for the remote replicator to
   * apply an operation. This usually entails writing the operation to disk.
   * @member {string} [copyStreamAcknowledgementDetail.notReceivedCount]
   * Represents the number of operations not yet received by a remote
   * replicator.
   * @member {string}
   * [copyStreamAcknowledgementDetail.receivedAndNotAppliedCount] Represents
   * the number of operations received and not yet applied by a remote
   * replicator.
   */
  constructor() {
  }

  /**
   * Defines the metadata of RemoteReplicatorAcknowledgementStatus
   *
   * @returns {object} metadata of RemoteReplicatorAcknowledgementStatus
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RemoteReplicatorAcknowledgementStatus',
      type: {
        name: 'Composite',
        className: 'RemoteReplicatorAcknowledgementStatus',
        modelProperties: {
          replicationStreamAcknowledgementDetail: {
            required: false,
            serializedName: 'ReplicationStreamAcknowledgementDetail',
            type: {
              name: 'Composite',
              className: 'RemoteReplicatorAcknowledgementDetail'
            }
          },
          copyStreamAcknowledgementDetail: {
            required: false,
            serializedName: 'CopyStreamAcknowledgementDetail',
            type: {
              name: 'Composite',
              className: 'RemoteReplicatorAcknowledgementDetail'
            }
          }
        }
      }
    };
  }
}

module.exports = RemoteReplicatorAcknowledgementStatus;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Describes the parameters for monitoring an upgrade in Monitored mode.
 *
 */
class MonitoringPolicyDescription {
  /**
   * Create a MonitoringPolicyDescription.
   * @member {string} [failureAction] Possible values include: 'Invalid',
   * 'Rollback', 'Manual'
   * @member {string} [healthCheckWaitDurationInMilliseconds]
   * @member {string} [healthCheckStableDurationInMilliseconds]
   * @member {string} [healthCheckRetryTimeoutInMilliseconds]
   * @member {string} [upgradeTimeoutInMilliseconds]
   * @member {string} [upgradeDomainTimeoutInMilliseconds]
   */
  constructor() {
  }

  /**
   * Defines the metadata of MonitoringPolicyDescription
   *
   * @returns {object} metadata of MonitoringPolicyDescription
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'MonitoringPolicyDescription',
      type: {
        name: 'Composite',
        className: 'MonitoringPolicyDescription',
        modelProperties: {
          failureAction: {
            required: false,
            serializedName: 'FailureAction',
            type: {
              name: 'String'
            }
          },
          healthCheckWaitDurationInMilliseconds: {
            required: false,
            serializedName: 'HealthCheckWaitDurationInMilliseconds',
            type: {
              name: 'String'
            }
          },
          healthCheckStableDurationInMilliseconds: {
            required: false,
            serializedName: 'HealthCheckStableDurationInMilliseconds',
            type: {
              name: 'String'
            }
          },
          healthCheckRetryTimeoutInMilliseconds: {
            required: false,
            serializedName: 'HealthCheckRetryTimeoutInMilliseconds',
            type: {
              name: 'String'
            }
          },
          upgradeTimeoutInMilliseconds: {
            required: false,
            serializedName: 'UpgradeTimeoutInMilliseconds',
            type: {
              name: 'String'
            }
          },
          upgradeDomainTimeoutInMilliseconds: {
            required: false,
            serializedName: 'UpgradeDomainTimeoutInMilliseconds',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = MonitoringPolicyDescription;

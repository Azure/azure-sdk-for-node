/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Information about a Service Fabric application.
 *
 */
class ApplicationInfo {
  /**
   * Create a ApplicationInfo.
   * @member {string} [id]
   * @member {string} [name]
   * @member {string} [typeName]
   * @member {string} [typeVersion]
   * @member {string} [status] Possible values include: 'Invalid', 'Ready',
   * 'Upgrading', 'Creating', 'Deleting', 'Failed'
   * @member {array} [parameters]
   * @member {string} [healthState] Possible values include: 'Invalid', 'Ok',
   * 'Warning', 'Error', 'Unknown'
   * @member {string} [applicationDefinitionKind] Possible values include:
   * 'Invalid', 'ServiceFabricApplicationDescription', 'Compose'
   */
  constructor() {
  }

  /**
   * Defines the metadata of ApplicationInfo
   *
   * @returns {object} metadata of ApplicationInfo
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ApplicationInfo',
      type: {
        name: 'Composite',
        className: 'ApplicationInfo',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'Id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'Name',
            type: {
              name: 'String'
            }
          },
          typeName: {
            required: false,
            serializedName: 'TypeName',
            type: {
              name: 'String'
            }
          },
          typeVersion: {
            required: false,
            serializedName: 'TypeVersion',
            type: {
              name: 'String'
            }
          },
          status: {
            required: false,
            serializedName: 'Status',
            type: {
              name: 'String'
            }
          },
          parameters: {
            required: false,
            serializedName: 'Parameters',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ApplicationParameterElementType',
                  type: {
                    name: 'Composite',
                    className: 'ApplicationParameter'
                  }
              }
            }
          },
          healthState: {
            required: false,
            serializedName: 'HealthState',
            type: {
              name: 'String'
            }
          },
          applicationDefinitionKind: {
            required: false,
            serializedName: 'ApplicationDefinitionKind',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ApplicationInfo;

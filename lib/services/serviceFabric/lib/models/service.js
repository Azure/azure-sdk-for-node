/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the Service class.
 * @constructor
 * @member {string} [id]
 * 
 * @member {number} [serviceKind]
 * 
 * @member {string} [name]
 * 
 * @member {string} [typeName]
 * 
 * @member {string} [manifestVersion]
 * 
 * @member {boolean} [hasPersistedState]
 * 
 * @member {number} [healthState]
 * 
 * @member {number} [serviceStatus]
 * 
 * @member {boolean} [isServiceGroup]
 * 
 */
function Service() {
}

/**
 * Defines the metadata of Service
 *
 * @returns {object} metadata of Service
 *
 */
Service.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'Service',
    type: {
      name: 'Composite',
      className: 'Service',
      modelProperties: {
        id: {
          required: false,
          serializedName: 'Id',
          type: {
            name: 'String'
          }
        },
        serviceKind: {
          required: false,
          serializedName: 'ServiceKind',
          type: {
            name: 'Number'
          }
        },
        name: {
          required: false,
          serializedName: 'Name',
          type: {
            name: 'String'
          }
        },
        typeName: {
          required: false,
          serializedName: 'TypeName',
          type: {
            name: 'String'
          }
        },
        manifestVersion: {
          required: false,
          serializedName: 'ManifestVersion',
          type: {
            name: 'String'
          }
        },
        hasPersistedState: {
          required: false,
          serializedName: 'HasPersistedState',
          type: {
            name: 'Boolean'
          }
        },
        healthState: {
          required: false,
          serializedName: 'HealthState',
          type: {
            name: 'Number'
          }
        },
        serviceStatus: {
          required: false,
          serializedName: 'ServiceStatus',
          type: {
            name: 'Number'
          }
        },
        isServiceGroup: {
          required: false,
          serializedName: 'IsServiceGroup',
          type: {
            name: 'Boolean'
          }
        }
      }
    }
  };
};

module.exports = Service;

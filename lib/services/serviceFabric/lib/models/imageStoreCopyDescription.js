/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Information about how to copy image store content from one image store
 * relative path to another image store relative path.
 *
 */
class ImageStoreCopyDescription {
  /**
   * Create a ImageStoreCopyDescription.
   * @member {string} remoteSource The relative path of source image store
   * content to be copied from.
   * @member {string} remoteDestination The relative path of destination image
   * store content to be copied to.
   * @member {array} [skipFiles] The list of the file names to be skipped for
   * copying.
   * @member {boolean} [checkMarkFile] Indicates whether to check mark file
   * during copying. The property is true if checking mark file is required,
   * false otherwise. The mark file is used to check whether the folder is well
   * constructed. If the property is true and mark file does not exist, the
   * copy is skipped.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ImageStoreCopyDescription
   *
   * @returns {object} metadata of ImageStoreCopyDescription
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ImageStoreCopyDescription',
      type: {
        name: 'Composite',
        className: 'ImageStoreCopyDescription',
        modelProperties: {
          remoteSource: {
            required: true,
            serializedName: 'RemoteSource',
            type: {
              name: 'String'
            }
          },
          remoteDestination: {
            required: true,
            serializedName: 'RemoteDestination',
            type: {
              name: 'String'
            }
          },
          skipFiles: {
            required: false,
            serializedName: 'SkipFiles',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          checkMarkFile: {
            required: false,
            serializedName: 'CheckMarkFile',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = ImageStoreCopyDescription;

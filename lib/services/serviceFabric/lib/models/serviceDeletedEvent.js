/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Service Deleted event.
 *
 * @extends models['ServiceEvent']
 */
class ServiceDeletedEvent extends models['ServiceEvent'] {
  /**
   * Create a ServiceDeletedEvent.
   * @member {string} serviceTypeName Service type name.
   * @member {string} applicationName Application name.
   * @member {string} applicationTypeName Application type name.
   * @member {number} serviceInstance Id of Service instance.
   * @member {boolean} isStateful Indicates if Service is stateful.
   * @member {number} partitionCount Number of partitions.
   * @member {number} targetReplicaSetSize Size of target replicas set.
   * @member {number} minReplicaSetSize Minimum size of replicas set.
   * @member {string} servicePackageVersion Version of Service package.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ServiceDeletedEvent
   *
   * @returns {object} metadata of ServiceDeletedEvent
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ServiceDeleted',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'Kind',
          clientName: 'kind'
        },
        uberParent: 'FabricEvent',
        className: 'ServiceDeletedEvent',
        modelProperties: {
          eventInstanceId: {
            required: true,
            serializedName: 'EventInstanceId',
            type: {
              name: 'String'
            }
          },
          category: {
            required: false,
            serializedName: 'Category',
            type: {
              name: 'String'
            }
          },
          timeStamp: {
            required: true,
            serializedName: 'TimeStamp',
            type: {
              name: 'DateTime'
            }
          },
          hasCorrelatedEvents: {
            required: false,
            serializedName: 'HasCorrelatedEvents',
            type: {
              name: 'Boolean'
            }
          },
          kind: {
            required: true,
            serializedName: 'Kind',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          serviceId: {
            required: true,
            serializedName: 'ServiceId',
            type: {
              name: 'String'
            }
          },
          serviceTypeName: {
            required: true,
            serializedName: 'ServiceTypeName',
            type: {
              name: 'String'
            }
          },
          applicationName: {
            required: true,
            serializedName: 'ApplicationName',
            type: {
              name: 'String'
            }
          },
          applicationTypeName: {
            required: true,
            serializedName: 'ApplicationTypeName',
            type: {
              name: 'String'
            }
          },
          serviceInstance: {
            required: true,
            serializedName: 'ServiceInstance',
            type: {
              name: 'Number'
            }
          },
          isStateful: {
            required: true,
            serializedName: 'IsStateful',
            type: {
              name: 'Boolean'
            }
          },
          partitionCount: {
            required: true,
            serializedName: 'PartitionCount',
            type: {
              name: 'Number'
            }
          },
          targetReplicaSetSize: {
            required: true,
            serializedName: 'TargetReplicaSetSize',
            type: {
              name: 'Number'
            }
          },
          minReplicaSetSize: {
            required: true,
            serializedName: 'MinReplicaSetSize',
            type: {
              name: 'Number'
            }
          },
          servicePackageVersion: {
            required: true,
            serializedName: 'ServicePackageVersion',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ServiceDeletedEvent;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

/* jshint latedef:false */
/* jshint forin:false */
/* jshint noempty:false */

'use strict';

exports.AadMetadata = require('./aadMetadata');
exports.AadMetadataObject = require('./aadMetadataObject');
exports.EntityHealthState = require('./entityHealthState');
exports.ServiceHealthState = require('./serviceHealthState');
exports.DeployedApplicationHealthState = require('./deployedApplicationHealthState');
exports.EntityHealth = require('./entityHealth');
exports.ApplicationHealth = require('./applicationHealth');
exports.HealthEvaluation = require('./healthEvaluation');
exports.HealthEvaluationWrapper = require('./healthEvaluationWrapper');
exports.ApplicationHealthEvaluation = require('./applicationHealthEvaluation');
exports.ServiceTypeHealthPolicy = require('./serviceTypeHealthPolicy');
exports.ServiceTypeHealthPolicyMapItem = require('./serviceTypeHealthPolicyMapItem');
exports.ApplicationHealthPolicy = require('./applicationHealthPolicy');
exports.ApplicationHealthPolicyMapItem = require('./applicationHealthPolicyMapItem');
exports.ApplicationHealthPolicies = require('./applicationHealthPolicies');
exports.ApplicationHealthState = require('./applicationHealthState');
exports.EntityHealthStateChunk = require('./entityHealthStateChunk');
exports.ReplicaHealthStateChunk = require('./replicaHealthStateChunk');
exports.ReplicaHealthStateChunkList = require('./replicaHealthStateChunkList');
exports.PartitionHealthStateChunk = require('./partitionHealthStateChunk');
exports.PartitionHealthStateChunkList = require('./partitionHealthStateChunkList');
exports.ServiceHealthStateChunk = require('./serviceHealthStateChunk');
exports.ServiceHealthStateChunkList = require('./serviceHealthStateChunkList');
exports.DeployedServicePackageHealthStateChunk = require('./deployedServicePackageHealthStateChunk');
exports.DeployedServicePackageHealthStateChunkList = require('./deployedServicePackageHealthStateChunkList');
exports.DeployedApplicationHealthStateChunk = require('./deployedApplicationHealthStateChunk');
exports.DeployedApplicationHealthStateChunkList = require('./deployedApplicationHealthStateChunkList');
exports.ApplicationHealthStateChunk = require('./applicationHealthStateChunk');
exports.EntityHealthStateChunkList = require('./entityHealthStateChunkList');
exports.ApplicationHealthStateChunkList = require('./applicationHealthStateChunkList');
exports.ReplicaHealthStateFilter = require('./replicaHealthStateFilter');
exports.PartitionHealthStateFilter = require('./partitionHealthStateFilter');
exports.ServiceHealthStateFilter = require('./serviceHealthStateFilter');
exports.DeployedServicePackageHealthStateFilter = require('./deployedServicePackageHealthStateFilter');
exports.DeployedApplicationHealthStateFilter = require('./deployedApplicationHealthStateFilter');
exports.ApplicationHealthStateFilter = require('./applicationHealthStateFilter');
exports.ApplicationParameter = require('./applicationParameter');
exports.ApplicationInfo = require('./applicationInfo');
exports.ApplicationMetricDescription = require('./applicationMetricDescription');
exports.ApplicationLoadInfo = require('./applicationLoadInfo');
exports.ApplicationNameInfo = require('./applicationNameInfo');
exports.ApplicationsHealthEvaluation = require('./applicationsHealthEvaluation');
exports.ApplicationTypeApplicationsHealthEvaluation = require('./applicationTypeApplicationsHealthEvaluation');
exports.ApplicationTypeHealthPolicyMapItem = require('./applicationTypeHealthPolicyMapItem');
exports.ApplicationTypeInfo = require('./applicationTypeInfo');
exports.PagedApplicationTypeInfoList = require('./pagedApplicationTypeInfoList');
exports.ApplicationTypeManifest = require('./applicationTypeManifest');
exports.MonitoringPolicyDescription = require('./monitoringPolicyDescription');
exports.ApplicationUpgradeDescription = require('./applicationUpgradeDescription');
exports.UpgradeDomainInfo = require('./upgradeDomainInfo');
exports.SafetyCheck = require('./safetyCheck');
exports.SafetyCheckWrapper = require('./safetyCheckWrapper');
exports.NodeUpgradeProgressInfo = require('./nodeUpgradeProgressInfo');
exports.CurrentUpgradeDomainProgressInfo = require('./currentUpgradeDomainProgressInfo');
exports.FailureUpgradeDomainProgressInfo = require('./failureUpgradeDomainProgressInfo');
exports.ApplicationUpgradeProgressInfo = require('./applicationUpgradeProgressInfo');
exports.ClusterConfiguration = require('./clusterConfiguration');
exports.NodeId = require('./nodeId');
exports.NodeHealthState = require('./nodeHealthState');
exports.ClusterHealth = require('./clusterHealth');
exports.NodeHealthStateChunk = require('./nodeHealthStateChunk');
exports.NodeHealthStateChunkList = require('./nodeHealthStateChunkList');
exports.ClusterHealthChunk = require('./clusterHealthChunk');
exports.NodeHealthStateFilter = require('./nodeHealthStateFilter');
exports.ClusterHealthPolicy = require('./clusterHealthPolicy');
exports.ClusterHealthChunkQueryDescription = require('./clusterHealthChunkQueryDescription');
exports.ClusterHealthPolicies = require('./clusterHealthPolicies');
exports.ClusterManifest = require('./clusterManifest');
exports.DeactivationIntentDescription = require('./deactivationIntentDescription');
exports.DeltaNodesCheckHealthEvaluation = require('./deltaNodesCheckHealthEvaluation');
exports.DeployedServicePackageHealthState = require('./deployedServicePackageHealthState');
exports.DeployedApplicationHealth = require('./deployedApplicationHealth');
exports.DeployedApplicationHealthEvaluation = require('./deployedApplicationHealthEvaluation');
exports.DeployedApplicationInfo = require('./deployedApplicationInfo');
exports.DeployedApplicationsHealthEvaluation = require('./deployedApplicationsHealthEvaluation');
exports.DeployedServicePackageHealth = require('./deployedServicePackageHealth');
exports.DeployedServicePackageHealthEvaluation = require('./deployedServicePackageHealthEvaluation');
exports.DeployedServicePackagesHealthEvaluation = require('./deployedServicePackagesHealthEvaluation');
exports.DeployedServiceReplicaInfo = require('./deployedServiceReplicaInfo');
exports.ReconfigurationInformation = require('./reconfigurationInformation');
exports.DeployedStatefulServiceReplicaInfo = require('./deployedStatefulServiceReplicaInfo');
exports.DeployedStatelessServiceInstanceInfo = require('./deployedStatelessServiceInstanceInfo');
exports.HealthInformation = require('./healthInformation');
exports.HealthEvent = require('./healthEvent');
exports.HealthStateCount = require('./healthStateCount');
exports.EntityKindHealthStateCount = require('./entityKindHealthStateCount');
exports.HealthStatistics = require('./healthStatistics');
exports.Epoch = require('./epoch');
exports.EventHealthEvaluation = require('./eventHealthEvaluation');
exports.FabricCodeVersionInfo = require('./fabricCodeVersionInfo');
exports.FabricConfigVersionInfo = require('./fabricConfigVersionInfo');
exports.FabricErrorError = require('./fabricErrorError');
exports.FabricError = require('./fabricError');
exports.ClusterConfigurationUpgradeStatusInfo = require('./clusterConfigurationUpgradeStatusInfo');
exports.PartitionInformation = require('./partitionInformation');
exports.Int64RangePartitionInformation = require('./int64RangePartitionInformation');
exports.NamedPartitionInformation = require('./namedPartitionInformation');
exports.NodeDeactivationTaskId = require('./nodeDeactivationTaskId');
exports.NodeDeactivationTask = require('./nodeDeactivationTask');
exports.NodeDeactivationInfo = require('./nodeDeactivationInfo');
exports.NodeHealth = require('./nodeHealth');
exports.NodeHealthEvaluation = require('./nodeHealthEvaluation');
exports.NodeInfo = require('./nodeInfo');
exports.NodeLoadMetricInformation = require('./nodeLoadMetricInformation');
exports.NodeLoadInfo = require('./nodeLoadInfo');
exports.NodesHealthEvaluation = require('./nodesHealthEvaluation');
exports.PagedApplicationInfoList = require('./pagedApplicationInfoList');
exports.PagedNodeInfoList = require('./pagedNodeInfoList');
exports.ServicePartitionInfo = require('./servicePartitionInfo');
exports.PagedServicePartitionInfoList = require('./pagedServicePartitionInfoList');
exports.ReplicaInfo = require('./replicaInfo');
exports.PagedReplicaInfoList = require('./pagedReplicaInfoList');
exports.ServiceInfo = require('./serviceInfo');
exports.PagedServiceInfoList = require('./pagedServiceInfoList');
exports.ReplicaHealthState = require('./replicaHealthState');
exports.PartitionHealth = require('./partitionHealth');
exports.PartitionHealthEvaluation = require('./partitionHealthEvaluation');
exports.PartitionHealthState = require('./partitionHealthState');
exports.ProvisionFabricDescription = require('./provisionFabricDescription');
exports.UnprovisionFabricDescription = require('./unprovisionFabricDescription');
exports.ResumeClusterUpgradeDescription = require('./resumeClusterUpgradeDescription');
exports.ClusterUpgradeHealthPolicyObject = require('./clusterUpgradeHealthPolicyObject');
exports.StartClusterUpgradeDescription = require('./startClusterUpgradeDescription');
exports.RollingUpgradeUpdateDescription = require('./rollingUpgradeUpdateDescription');
exports.UpdateClusterUpgradeDescription = require('./updateClusterUpgradeDescription');
exports.PartitionSafetyCheck = require('./partitionSafetyCheck');
exports.EnsureAvailabilitySafetyCheck = require('./ensureAvailabilitySafetyCheck');
exports.EnsurePartitionQurumSafetyCheck = require('./ensurePartitionQurumSafetyCheck');
exports.SeedNodeSafetyCheck = require('./seedNodeSafetyCheck');
exports.PartitionsHealthEvaluation = require('./partitionsHealthEvaluation');
exports.ReplicaHealth = require('./replicaHealth');
exports.ReplicaHealthEvaluation = require('./replicaHealthEvaluation');
exports.ReplicasHealthEvaluation = require('./replicasHealthEvaluation');
exports.RestartNodeDescription = require('./restartNodeDescription');
exports.ServiceFromTemplateDescription = require('./serviceFromTemplateDescription');
exports.ServiceHealthEvaluation = require('./serviceHealthEvaluation');
exports.ServiceHealth = require('./serviceHealth');
exports.ServiceNameInfo = require('./serviceNameInfo');
exports.ServicePlacementPolicyDescription = require('./servicePlacementPolicyDescription');
exports.ServicePlacementInvalidDomainPolicyDescription = require('./servicePlacementInvalidDomainPolicyDescription');
exports.ServicePlacementNonPartiallyPlaceServicePolicyDescription = require('./servicePlacementNonPartiallyPlaceServicePolicyDescription');
exports.ServicePlacementPreferPrimaryDomainPolicyDescription = require('./servicePlacementPreferPrimaryDomainPolicyDescription');
exports.ServicePlacementRequiredDomainPolicyDescription = require('./servicePlacementRequiredDomainPolicyDescription');
exports.ServicePlacementRequireDomainDistributionPolicyDescription = require('./servicePlacementRequireDomainDistributionPolicyDescription');
exports.ServicesHealthEvaluation = require('./servicesHealthEvaluation');
exports.ServiceTypeExtensionDescription = require('./serviceTypeExtensionDescription');
exports.ServiceTypeDescription = require('./serviceTypeDescription');
exports.ServiceTypeInfo = require('./serviceTypeInfo');
exports.ServiceTypeManifest = require('./serviceTypeManifest');
exports.SingletonPartitionInformation = require('./singletonPartitionInformation');
exports.StatefulServiceInfo = require('./statefulServiceInfo');
exports.StatefulServicePartitionInfo = require('./statefulServicePartitionInfo');
exports.StatefulServiceReplicaHealth = require('./statefulServiceReplicaHealth');
exports.StatefulServiceReplicaHealthState = require('./statefulServiceReplicaHealthState');
exports.StatefulServiceTypeDescription = require('./statefulServiceTypeDescription');
exports.StatelessServiceInfo = require('./statelessServiceInfo');
exports.StatelessServiceInstanceHealth = require('./statelessServiceInstanceHealth');
exports.StatelessServiceInstanceHealthState = require('./statelessServiceInstanceHealthState');
exports.StatelessServicePartitionInfo = require('./statelessServicePartitionInfo');
exports.StatelessServiceTypeDescription = require('./statelessServiceTypeDescription');
exports.SystemApplicationHealthEvaluation = require('./systemApplicationHealthEvaluation');
exports.UpgradeDomainDeltaNodesCheckHealthEvaluation = require('./upgradeDomainDeltaNodesCheckHealthEvaluation');
exports.UpgradeDomainNodesHealthEvaluation = require('./upgradeDomainNodesHealthEvaluation');
exports.WaitForInbuildReplicaSafetyCheck = require('./waitForInbuildReplicaSafetyCheck');
exports.WaitForPrimaryPlacementSafetyCheck = require('./waitForPrimaryPlacementSafetyCheck');
exports.WaitForPrimarySwapSafetyCheck = require('./waitForPrimarySwapSafetyCheck');
exports.WaitForReconfigurationSafetyCheck = require('./waitForReconfigurationSafetyCheck');
exports.LoadMetricReport = require('./loadMetricReport');
exports.PartitionLoadInformation = require('./partitionLoadInformation');
exports.StatefulServiceReplicaInfo = require('./statefulServiceReplicaInfo');
exports.StatelessServiceInstanceInfo = require('./statelessServiceInstanceInfo');
exports.ClusterUpgradeDescriptionObject = require('./clusterUpgradeDescriptionObject');
exports.FailedUpgradeDomainProgressObject = require('./failedUpgradeDomainProgressObject');
exports.ClusterUpgradeProgressObject = require('./clusterUpgradeProgressObject');
exports.ClusterConfigurationUpgradeDescription = require('./clusterConfigurationUpgradeDescription');
exports.ApplicationTypeImageStorePath = require('./applicationTypeImageStorePath');
exports.ApplicationTypeImageStoreVersion = require('./applicationTypeImageStoreVersion');
exports.CodePackageEntryPointStatistics = require('./codePackageEntryPointStatistics');
exports.CodePackageEntryPoint = require('./codePackageEntryPoint');
exports.DeployedCodePackageInfo = require('./deployedCodePackageInfo');
exports.ChaosContextMapItem = require('./chaosContextMapItem');
exports.ChaosContext = require('./chaosContext');
exports.ChaosParameters = require('./chaosParameters');
exports.ChaosEvent = require('./chaosEvent');
exports.ChaosEventWrapper = require('./chaosEventWrapper');
exports.ChaosReport = require('./chaosReport');
exports.ExecutingFaultsChaosEvent = require('./executingFaultsChaosEvent');
exports.StartedChaosEvent = require('./startedChaosEvent');
exports.StoppedChaosEvent = require('./stoppedChaosEvent');
exports.TestErrorChaosEvent = require('./testErrorChaosEvent');
exports.ValidationFailedChaosEvent = require('./validationFailedChaosEvent');
exports.WaitingChaosEvent = require('./waitingChaosEvent');
exports.ApplicationCapacityDescription = require('./applicationCapacityDescription');
exports.ApplicationDescription = require('./applicationDescription');
exports.ComposeDeploymentStatusInfo = require('./composeDeploymentStatusInfo');
exports.RegistryCredential = require('./registryCredential');
exports.ComposeDeploymentUpgradeDescription = require('./composeDeploymentUpgradeDescription');
exports.ComposeDeploymentUpgradeProgressInfo = require('./composeDeploymentUpgradeProgressInfo');
exports.PagedComposeDeploymentStatusInfoList = require('./pagedComposeDeploymentStatusInfoList');
exports.CreateComposeDeploymentDescription = require('./createComposeDeploymentDescription');
exports.DeployedServicePackageInfo = require('./deployedServicePackageInfo');
exports.ServiceCorrelationDescription = require('./serviceCorrelationDescription');
exports.ServiceLoadMetricDescription = require('./serviceLoadMetricDescription');
exports.PartitionSchemeDescription = require('./partitionSchemeDescription');
exports.NamedPartitionSchemeDescription = require('./namedPartitionSchemeDescription');
exports.SingletonPartitionSchemeDescription = require('./singletonPartitionSchemeDescription');
exports.UniformInt64RangePartitionSchemeDescription = require('./uniformInt64RangePartitionSchemeDescription');
exports.ServiceDescription = require('./serviceDescription');
exports.StatefulServiceDescription = require('./statefulServiceDescription');
exports.StatelessServiceDescription = require('./statelessServiceDescription');
exports.ReplicatorQueueStatus = require('./replicatorQueueStatus');
exports.ReplicatorStatus = require('./replicatorStatus');
exports.RemoteReplicatorAcknowledgementDetail = require('./remoteReplicatorAcknowledgementDetail');
exports.RemoteReplicatorAcknowledgementStatus = require('./remoteReplicatorAcknowledgementStatus');
exports.RemoteReplicatorStatus = require('./remoteReplicatorStatus');
exports.PrimaryReplicatorStatus = require('./primaryReplicatorStatus');
exports.SecondaryReplicatorStatus = require('./secondaryReplicatorStatus');
exports.SecondaryActiveReplicatorStatus = require('./secondaryActiveReplicatorStatus');
exports.SecondaryIdleReplicatorStatus = require('./secondaryIdleReplicatorStatus');
exports.LoadMetricReportInfo = require('./loadMetricReportInfo');
exports.DeployedServiceReplicaDetailInfo = require('./deployedServiceReplicaDetailInfo');
exports.ReplicaStatusBase = require('./replicaStatusBase');
exports.KeyValueStoreReplicaStatus = require('./keyValueStoreReplicaStatus');
exports.DeployedStatefulServiceReplicaDetailInfo = require('./deployedStatefulServiceReplicaDetailInfo');
exports.DeployedStatelessServiceInstanceDetailInfo = require('./deployedStatelessServiceInstanceDetailInfo');
exports.ServiceUpdateDescription = require('./serviceUpdateDescription');
exports.StatefulServiceUpdateDescription = require('./statefulServiceUpdateDescription');
exports.StatelessServiceUpdateDescription = require('./statelessServiceUpdateDescription');
exports.FileVersion = require('./fileVersion');
exports.FileInfo = require('./fileInfo');
exports.FolderInfo = require('./folderInfo');
exports.ImageStoreContent = require('./imageStoreContent');
exports.ImageStoreCopyDescription = require('./imageStoreCopyDescription');
exports.RestartDeployedCodePackageDescription = require('./restartDeployedCodePackageDescription');
exports.DeployedServiceTypeInfo = require('./deployedServiceTypeInfo');
exports.ResolvedServiceEndpoint = require('./resolvedServiceEndpoint');
exports.ResolvedServicePartition = require('./resolvedServicePartition');
exports.SelectedPartition = require('./selectedPartition');
exports.InvokeDataLossResult = require('./invokeDataLossResult');
exports.InvokeQuorumLossResult = require('./invokeQuorumLossResult');
exports.NodeResult = require('./nodeResult');
exports.NodeTransitionResult = require('./nodeTransitionResult');
exports.NodeTransitionProgress = require('./nodeTransitionProgress');
exports.OperationStatus = require('./operationStatus');
exports.PartitionDataLossProgress = require('./partitionDataLossProgress');
exports.PartitionQuorumLossProgress = require('./partitionQuorumLossProgress');
exports.RestartPartitionResult = require('./restartPartitionResult');
exports.PartitionRestartProgress = require('./partitionRestartProgress');
exports.PackageSharingPolicyInfo = require('./packageSharingPolicyInfo');
exports.DeployServicePackageToNodeDescription = require('./deployServicePackageToNodeDescription');
exports.ResumeApplicationUpgradeDescription = require('./resumeApplicationUpgradeDescription');
exports.ApplicationUpgradeUpdateDescription = require('./applicationUpgradeUpdateDescription');
exports.NodeImpact = require('./nodeImpact');
exports.RepairImpactDescriptionBase = require('./repairImpactDescriptionBase');
exports.NodeRepairImpactDescription = require('./nodeRepairImpactDescription');
exports.RepairTargetDescriptionBase = require('./repairTargetDescriptionBase');
exports.NodeRepairTargetDescription = require('./nodeRepairTargetDescription');
exports.RepairTaskHistory = require('./repairTaskHistory');
exports.RepairTask = require('./repairTask');
exports.RepairTaskApproveDescription = require('./repairTaskApproveDescription');
exports.RepairTaskCancelDescription = require('./repairTaskCancelDescription');
exports.RepairTaskDeleteDescription = require('./repairTaskDeleteDescription');
exports.RepairTaskUpdateHealthPolicyDescription = require('./repairTaskUpdateHealthPolicyDescription');
exports.RepairTaskUpdateInfo = require('./repairTaskUpdateInfo');
exports.discriminators = {
  'HealthEvaluation' : exports.HealthEvaluation,
  'HealthEvaluation.Application' : exports.ApplicationHealthEvaluation,
  'HealthEvaluation.Applications' : exports.ApplicationsHealthEvaluation,
  'HealthEvaluation.ApplicationTypeApplications' : exports.ApplicationTypeApplicationsHealthEvaluation,
  'SafetyCheck' : exports.SafetyCheck,
  'HealthEvaluation.DeltaNodesCheck' : exports.DeltaNodesCheckHealthEvaluation,
  'HealthEvaluation.DeployedApplication' : exports.DeployedApplicationHealthEvaluation,
  'HealthEvaluation.DeployedApplications' : exports.DeployedApplicationsHealthEvaluation,
  'HealthEvaluation.DeployedServicePackage' : exports.DeployedServicePackageHealthEvaluation,
  'HealthEvaluation.DeployedServicePackages' : exports.DeployedServicePackagesHealthEvaluation,
  'DeployedServiceReplicaInfo' : exports.DeployedServiceReplicaInfo,
  'DeployedServiceReplicaInfo.Stateful' : exports.DeployedStatefulServiceReplicaInfo,
  'DeployedServiceReplicaInfo.Stateless' : exports.DeployedStatelessServiceInstanceInfo,
  'HealthEvaluation.Event' : exports.EventHealthEvaluation,
  'PartitionInformation.Int64Range' : exports.Int64RangePartitionInformation,
  'PartitionInformation.Named' : exports.NamedPartitionInformation,
  'HealthEvaluation.Node' : exports.NodeHealthEvaluation,
  'HealthEvaluation.Nodes' : exports.NodesHealthEvaluation,
  'PartitionInformation' : exports.PartitionInformation,
  'ServicePartitionInfo' : exports.ServicePartitionInfo,
  'ReplicaInfo' : exports.ReplicaInfo,
  'ServiceInfo' : exports.ServiceInfo,
  'EntityHealthState.ReplicaHealthState' : exports.ReplicaHealthState,
  'HealthEvaluation.Partition' : exports.PartitionHealthEvaluation,
  'SafetyCheck.PartitionSafetyCheck' : exports.PartitionSafetyCheck,
  'SafetyCheck.EnsureAvailability' : exports.EnsureAvailabilitySafetyCheck,
  'SafetyCheck.EnsurePartitionQuorum' : exports.EnsurePartitionQurumSafetyCheck,
  'SafetyCheck.EnsureSeedNodeQuorum' : exports.SeedNodeSafetyCheck,
  'HealthEvaluation.Partitions' : exports.PartitionsHealthEvaluation,
  'EntityHealth.ReplicaHealth' : exports.ReplicaHealth,
  'HealthEvaluation.Replica' : exports.ReplicaHealthEvaluation,
  'HealthEvaluation.Replicas' : exports.ReplicasHealthEvaluation,
  'HealthEvaluation.Service' : exports.ServiceHealthEvaluation,
  'ServicePlacementPolicyDescription.InvalidDomain' : exports.ServicePlacementInvalidDomainPolicyDescription,
  'ServicePlacementPolicyDescription.NonPartiallyPlaceService' : exports.ServicePlacementNonPartiallyPlaceServicePolicyDescription,
  'ServicePlacementPolicyDescription' : exports.ServicePlacementPolicyDescription,
  'ServicePlacementPolicyDescription.PreferPrimaryDomain' : exports.ServicePlacementPreferPrimaryDomainPolicyDescription,
  'ServicePlacementPolicyDescription.RequireDomain' : exports.ServicePlacementRequiredDomainPolicyDescription,
  'ServicePlacementPolicyDescription.RequireDomainDistribution' : exports.ServicePlacementRequireDomainDistributionPolicyDescription,
  'HealthEvaluation.Services' : exports.ServicesHealthEvaluation,
  'ServiceTypeDescription' : exports.ServiceTypeDescription,
  'PartitionInformation.Singleton' : exports.SingletonPartitionInformation,
  'ServiceInfo.Stateful' : exports.StatefulServiceInfo,
  'ServicePartitionInfo.Stateful' : exports.StatefulServicePartitionInfo,
  'EntityHealth.Stateful' : exports.StatefulServiceReplicaHealth,
  'EntityHealthState.Stateful' : exports.StatefulServiceReplicaHealthState,
  'ServiceTypeDescription.Stateful' : exports.StatefulServiceTypeDescription,
  'ServiceInfo.Stateless' : exports.StatelessServiceInfo,
  'EntityHealth.Stateless' : exports.StatelessServiceInstanceHealth,
  'EntityHealthState.Stateless' : exports.StatelessServiceInstanceHealthState,
  'ServicePartitionInfo.Stateless' : exports.StatelessServicePartitionInfo,
  'ServiceTypeDescription.Stateless' : exports.StatelessServiceTypeDescription,
  'HealthEvaluation.SystemApplication' : exports.SystemApplicationHealthEvaluation,
  'HealthEvaluation.UpgradeDomainDeltaNodesCheck' : exports.UpgradeDomainDeltaNodesCheckHealthEvaluation,
  'HealthEvaluation.UpgradeDomainNodes' : exports.UpgradeDomainNodesHealthEvaluation,
  'SafetyCheck.WaitForInbuildReplica' : exports.WaitForInbuildReplicaSafetyCheck,
  'SafetyCheck.WaitForPrimaryPlacement' : exports.WaitForPrimaryPlacementSafetyCheck,
  'SafetyCheck.WaitForPrimarySwap' : exports.WaitForPrimarySwapSafetyCheck,
  'SafetyCheck.WaitForReconfiguration' : exports.WaitForReconfigurationSafetyCheck,
  'ReplicaInfo.Stateful' : exports.StatefulServiceReplicaInfo,
  'ReplicaInfo.Stateless' : exports.StatelessServiceInstanceInfo,
  'ChaosEvent' : exports.ChaosEvent,
  'ChaosEvent.ExecutingFaults' : exports.ExecutingFaultsChaosEvent,
  'ChaosEvent.Started' : exports.StartedChaosEvent,
  'ChaosEvent.Stopped' : exports.StoppedChaosEvent,
  'ChaosEvent.TestError' : exports.TestErrorChaosEvent,
  'ChaosEvent.ValidationFailed' : exports.ValidationFailedChaosEvent,
  'ChaosEvent.Waiting' : exports.WaitingChaosEvent,
  'PartitionSchemeDescription' : exports.PartitionSchemeDescription,
  'PartitionSchemeDescription.Named' : exports.NamedPartitionSchemeDescription,
  'PartitionSchemeDescription.Singleton' : exports.SingletonPartitionSchemeDescription,
  'PartitionSchemeDescription.UniformInt64Range' : exports.UniformInt64RangePartitionSchemeDescription,
  'ServiceDescription' : exports.ServiceDescription,
  'ServiceDescription.Stateful' : exports.StatefulServiceDescription,
  'ServiceDescription.Stateless' : exports.StatelessServiceDescription,
  'ReplicatorStatus' : exports.ReplicatorStatus,
  'ReplicatorStatus.Primary' : exports.PrimaryReplicatorStatus,
  'ReplicatorStatus.SecondaryReplicatorStatus' : exports.SecondaryReplicatorStatus,
  'ReplicatorStatus.ActiveSecondary' : exports.SecondaryActiveReplicatorStatus,
  'ReplicatorStatus.IdleSecondary' : exports.SecondaryIdleReplicatorStatus,
  'DeployedServiceReplicaDetailInfo' : exports.DeployedServiceReplicaDetailInfo,
  'ReplicaStatusBase.KeyValueStore' : exports.KeyValueStoreReplicaStatus,
  'DeployedServiceReplicaDetailInfo.Stateful' : exports.DeployedStatefulServiceReplicaDetailInfo,
  'DeployedServiceReplicaDetailInfo.Stateless' : exports.DeployedStatelessServiceInstanceDetailInfo,
  'ReplicaStatusBase' : exports.ReplicaStatusBase,
  'ServiceUpdateDescription' : exports.ServiceUpdateDescription,
  'ServiceUpdateDescription.Stateful' : exports.StatefulServiceUpdateDescription,
  'ServiceUpdateDescription.Stateless' : exports.StatelessServiceUpdateDescription,
  'RepairImpactDescriptionBase.Node' : exports.NodeRepairImpactDescription,
  'RepairTargetDescriptionBase.Node' : exports.NodeRepairTargetDescription,
  'RepairImpactDescriptionBase' : exports.RepairImpactDescriptionBase,
  'RepairTargetDescriptionBase' : exports.RepairTargetDescriptionBase
};

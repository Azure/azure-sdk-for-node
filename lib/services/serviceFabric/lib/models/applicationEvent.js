/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Represents the base for all Application Events.
 *
 * @extends models['FabricEvent']
 */
class ApplicationEvent extends models['FabricEvent'] {
  /**
   * Create a ApplicationEvent.
   * @member {string} applicationId The identity of the application. This is an
   * encoded representation of the application name. This is used in the REST
   * APIs to identify the application resource.
   * Starting in version 6.0, hierarchical names are delimited with the "\~"
   * character. For example, if the application name is "fabric:/myapp/app1",
   * the application identity would be "myapp\~app1" in 6.0+ and "myapp/app1"
   * in previous versions.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ApplicationEvent
   *
   * @returns {object} metadata of ApplicationEvent
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ApplicationEvent',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'Kind',
          clientName: 'kind'
        },
        uberParent: 'FabricEvent',
        className: 'ApplicationEvent',
        modelProperties: {
          eventInstanceId: {
            required: true,
            serializedName: 'EventInstanceId',
            type: {
              name: 'String'
            }
          },
          category: {
            required: false,
            serializedName: 'Category',
            type: {
              name: 'String'
            }
          },
          timeStamp: {
            required: true,
            serializedName: 'TimeStamp',
            type: {
              name: 'DateTime'
            }
          },
          hasCorrelatedEvents: {
            required: false,
            serializedName: 'HasCorrelatedEvents',
            type: {
              name: 'Boolean'
            }
          },
          kind: {
            required: true,
            serializedName: 'Kind',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          applicationId: {
            required: true,
            serializedName: 'ApplicationId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ApplicationEvent;

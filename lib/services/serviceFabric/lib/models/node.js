/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the Node class.
 * @constructor
 * @member {string} [name]
 * 
 * @member {string} [ipAddressOrFQDN]
 * 
 * @member {string} [type]
 * 
 * @member {string} [codeVersion]
 * 
 * @member {string} [configVersion]
 * 
 * @member {number} [nodeStatus]
 * 
 * @member {string} [nodeUpTimeInSeconds]
 * 
 * @member {number} [healthState]
 * 
 * @member {boolean} [isSeedNode]
 * 
 * @member {string} [upgradeDomain]
 * 
 * @member {string} [faultDomain]
 * 
 * @member {object} [id]
 * 
 * @member {string} [id.id]
 * 
 * @member {string} [instanceId]
 * 
 * @member {object} [nodeDeactivationInfo]
 * 
 * @member {number} [nodeDeactivationInfo.nodeDeactivationIntent]
 * 
 * @member {number} [nodeDeactivationInfo.nodeDeactivationStatus]
 * 
 */
function Node() {
}

/**
 * Defines the metadata of Node
 *
 * @returns {object} metadata of Node
 *
 */
Node.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'Node',
    type: {
      name: 'Composite',
      className: 'Node',
      modelProperties: {
        name: {
          required: false,
          serializedName: 'Name',
          type: {
            name: 'String'
          }
        },
        ipAddressOrFQDN: {
          required: false,
          serializedName: 'IpAddressOrFQDN',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          serializedName: 'Type',
          type: {
            name: 'String'
          }
        },
        codeVersion: {
          required: false,
          serializedName: 'CodeVersion',
          type: {
            name: 'String'
          }
        },
        configVersion: {
          required: false,
          serializedName: 'ConfigVersion',
          type: {
            name: 'String'
          }
        },
        nodeStatus: {
          required: false,
          serializedName: 'NodeStatus',
          type: {
            name: 'Number'
          }
        },
        nodeUpTimeInSeconds: {
          required: false,
          serializedName: 'NodeUpTimeInSeconds',
          type: {
            name: 'String'
          }
        },
        healthState: {
          required: false,
          serializedName: 'HealthState',
          type: {
            name: 'Number'
          }
        },
        isSeedNode: {
          required: false,
          serializedName: 'IsSeedNode',
          type: {
            name: 'Boolean'
          }
        },
        upgradeDomain: {
          required: false,
          serializedName: 'UpgradeDomain',
          type: {
            name: 'String'
          }
        },
        faultDomain: {
          required: false,
          serializedName: 'FaultDomain',
          type: {
            name: 'String'
          }
        },
        id: {
          required: false,
          serializedName: 'Id',
          type: {
            name: 'Composite',
            className: 'NodeId'
          }
        },
        instanceId: {
          required: false,
          serializedName: 'InstanceId',
          type: {
            name: 'String'
          }
        },
        nodeDeactivationInfo: {
          required: false,
          serializedName: 'NodeDeactivationInfo',
          type: {
            name: 'Composite',
            className: 'NodeNodeDeactivationInfo'
          }
        }
      }
    }
  };
};

module.exports = Node;

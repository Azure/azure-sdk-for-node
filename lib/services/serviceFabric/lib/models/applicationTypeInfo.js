/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Information about an application type.
 *
 */
class ApplicationTypeInfo {
  /**
   * Create a ApplicationTypeInfo.
   * @member {string} [name]
   * @member {string} [version]
   * @member {array} [defaultParameterList]
   * @member {string} [status] Possible values include: 'Invalid',
   * 'Provisioning', 'Available', 'Unprovisioning', 'Failed'
   * @member {string} [statusDetails]
   * @member {string} [applicationTypeDefinitionKind] Possible values include:
   * 'Invalid', 'ServiceFabricApplicationPackage', 'Compose'
   */
  constructor() {
  }

  /**
   * Defines the metadata of ApplicationTypeInfo
   *
   * @returns {object} metadata of ApplicationTypeInfo
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ApplicationTypeInfo',
      type: {
        name: 'Composite',
        className: 'ApplicationTypeInfo',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'Name',
            type: {
              name: 'String'
            }
          },
          version: {
            required: false,
            serializedName: 'Version',
            type: {
              name: 'String'
            }
          },
          defaultParameterList: {
            required: false,
            serializedName: 'DefaultParameterList',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ApplicationParameterElementType',
                  type: {
                    name: 'Composite',
                    className: 'ApplicationParameter'
                  }
              }
            }
          },
          status: {
            required: false,
            serializedName: 'Status',
            type: {
              name: 'String'
            }
          },
          statusDetails: {
            required: false,
            serializedName: 'StatusDetails',
            type: {
              name: 'String'
            }
          },
          applicationTypeDefinitionKind: {
            required: false,
            serializedName: 'ApplicationTypeDefinitionKind',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ApplicationTypeInfo;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Identifies the Service Fabric stateful partition which is being backed up.
 *
 * @extends models['BackupEntity']
 */
class PartitionBackupEntity extends models['BackupEntity'] {
  /**
   * Create a PartitionBackupEntity.
   * @member {string} [serviceName] The full name of the service with 'fabric:'
   * URI scheme.
   * @member {uuid} [partitionId] The partition ID indentifying the partition.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of PartitionBackupEntity
   *
   * @returns {object} metadata of PartitionBackupEntity
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Partition',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'EntityKind',
          clientName: 'entityKind'
        },
        uberParent: 'BackupEntity',
        className: 'PartitionBackupEntity',
        modelProperties: {
          entityKind: {
            required: true,
            serializedName: 'EntityKind',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          serviceName: {
            required: false,
            serializedName: 'ServiceName',
            type: {
              name: 'String'
            }
          },
          partitionId: {
            required: false,
            serializedName: 'PartitionId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = PartitionBackupEntity;

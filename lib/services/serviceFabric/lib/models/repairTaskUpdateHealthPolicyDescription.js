/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Describes a request to update the health policy of a repair task.
 *
 * This type supports the Service Fabric platform; it is not meant to be used
 * directly from your code.
 *
 *
 */
class RepairTaskUpdateHealthPolicyDescription {
  /**
   * Create a RepairTaskUpdateHealthPolicyDescription.
   * @member {string} taskId The ID of the repair task to be updated.
   * @member {string} [version] The current version number of the repair task.
   * If non-zero, then the request will only succeed if this value matches the
   * actual current value of the repair task. If zero, then no version check is
   * performed.
   * @member {boolean} [performPreparingHealthCheck] A boolean indicating if
   * health check is to be performed in the Preparing stage of the repair task.
   * If not specified the existing value should not be altered. Otherwise,
   * specify the desired new value.
   * @member {boolean} [performRestoringHealthCheck] A boolean indicating if
   * health check is to be performed in the Restoring stage of the repair task.
   * If not specified the existing value should not be altered. Otherwise,
   * specify the desired new value.
   */
  constructor() {
  }

  /**
   * Defines the metadata of RepairTaskUpdateHealthPolicyDescription
   *
   * @returns {object} metadata of RepairTaskUpdateHealthPolicyDescription
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RepairTaskUpdateHealthPolicyDescription',
      type: {
        name: 'Composite',
        className: 'RepairTaskUpdateHealthPolicyDescription',
        modelProperties: {
          taskId: {
            required: true,
            serializedName: 'TaskId',
            type: {
              name: 'String'
            }
          },
          version: {
            required: false,
            serializedName: 'Version',
            type: {
              name: 'String'
            }
          },
          performPreparingHealthCheck: {
            required: false,
            serializedName: 'PerformPreparingHealthCheck',
            type: {
              name: 'Boolean'
            }
          },
          performRestoringHealthCheck: {
            required: false,
            serializedName: 'PerformRestoringHealthCheck',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = RepairTaskUpdateHealthPolicyDescription;

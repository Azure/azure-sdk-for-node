/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Information about the upgrading node and its status
 *
 */
class NodeUpgradeProgressInfo {
  /**
   * Create a NodeUpgradeProgressInfo.
   * @member {string} [nodeName]
   * @member {string} [upgradePhase] Possible values include: 'Invalid',
   * 'PreUpgradeSafetyCheck', 'Upgrading', 'PostUpgradeSafetyCheck'
   * @member {array} [pendingSafetyChecks]
   */
  constructor() {
  }

  /**
   * Defines the metadata of NodeUpgradeProgressInfo
   *
   * @returns {object} metadata of NodeUpgradeProgressInfo
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'NodeUpgradeProgressInfo',
      type: {
        name: 'Composite',
        className: 'NodeUpgradeProgressInfo',
        modelProperties: {
          nodeName: {
            required: false,
            serializedName: 'NodeName',
            type: {
              name: 'String'
            }
          },
          upgradePhase: {
            required: false,
            serializedName: 'UpgradePhase',
            type: {
              name: 'String'
            }
          },
          pendingSafetyChecks: {
            required: false,
            serializedName: 'PendingSafetyChecks',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'SafetyCheckWrapperElementType',
                  type: {
                    name: 'Composite',
                    className: 'SafetyCheckWrapper'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = NodeUpgradeProgressInfo;

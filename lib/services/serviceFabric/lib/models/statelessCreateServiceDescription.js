/*
 * Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the StatelessCreateServiceDescription class.
 * @constructor
 * @member {number} [instanceCount]
 * 
 */
function StatelessCreateServiceDescription() {
  StatelessCreateServiceDescription['super_'].call(this);
}

util.inherits(StatelessCreateServiceDescription, models['ServiceDescription']);

/**
 * Defines the metadata of StatelessCreateServiceDescription
 *
 * @returns {object} metadata of StatelessCreateServiceDescription
 *
 */
StatelessCreateServiceDescription.prototype.mapper = function () {
  return {
    required: false,
    serializedName: '1',
    type: {
      name: 'Composite',
      className: 'StatelessCreateServiceDescription',
      modelProperties: {
        applicationName: {
          required: false,
          serializedName: 'ApplicationName',
          type: {
            name: 'String'
          }
        },
        serviceName: {
          required: false,
          serializedName: 'ServiceName',
          type: {
            name: 'String'
          }
        },
        serviceTypeName: {
          required: false,
          serializedName: 'ServiceTypeName',
          type: {
            name: 'String'
          }
        },
        partitionDescription: {
          required: false,
          serializedName: 'PartitionDescription',
          type: {
            name: 'Composite',
            className: 'PartitionDescription'
          }
        },
        placementConstraints: {
          required: false,
          serializedName: 'PlacementConstraints',
          type: {
            name: 'String'
          }
        },
        correlationScheme: {
          required: false,
          serializedName: 'CorrelationScheme',
          type: {
            name: 'Composite',
            className: 'ServiceCorrelationDescription'
          }
        },
        serviceLoadMetrics: {
          required: false,
          serializedName: 'ServiceLoadMetrics',
          type: {
            name: 'Composite',
            className: 'ServiceCorrelationDescription'
          }
        },
        servicePlacementPolicies: {
          required: false,
          serializedName: 'ServicePlacementPolicies',
          type: {
            name: 'Composite',
            className: 'ServiceCorrelationDescription'
          }
        },
        flags: {
          required: false,
          serializedName: 'Flags',
          type: {
            name: 'Number'
          }
        },
        ServiceKind: {
          required: true,
          serializedName: 'ServiceKind',
          type: {
            name: 'String'
          }
        },
        instanceCount: {
          required: false,
          serializedName: 'InstanceCount',
          type: {
            name: 'Number'
          }
        }
      }
    }
  };
};

module.exports = StatelessCreateServiceDescription;

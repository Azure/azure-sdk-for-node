/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the NodeHealthReport class.
 * @constructor
 * The report of the node health
 *
 */
function NodeHealthReport() {
  NodeHealthReport['super_'].call(this);
}

util.inherits(NodeHealthReport, models['HealthReport']);

/**
 * Defines the metadata of NodeHealthReport
 *
 * @returns {object} metadata of NodeHealthReport
 *
 */
NodeHealthReport.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'NodeHealthReport',
    type: {
      name: 'Composite',
      className: 'NodeHealthReport',
      modelProperties: {
        sourceId: {
          required: false,
          serializedName: 'SourceId',
          type: {
            name: 'String'
          }
        },
        property: {
          required: false,
          serializedName: 'Property',
          type: {
            name: 'String'
          }
        },
        healthState: {
          required: false,
          serializedName: 'HealthState',
          type: {
            name: 'String'
          }
        },
        description: {
          required: false,
          serializedName: 'Description',
          type: {
            name: 'String'
          }
        },
        timeToLiveInMilliSeconds: {
          required: false,
          serializedName: 'TimeToLiveInMilliSeconds',
          type: {
            name: 'String'
          }
        },
        sequenceNumber: {
          required: false,
          serializedName: 'SequenceNumber',
          type: {
            name: 'String'
          }
        },
        removeWhenExpired: {
          required: false,
          serializedName: 'RemoveWhenExpired',
          type: {
            name: 'Boolean'
          }
        }
      }
    }
  };
};

module.exports = NodeHealthReport;

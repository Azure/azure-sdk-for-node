/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Description of a namespace resource.
 *
 * @extends models['ResourceNamespacePatch']
 */
class RelayUpdateParameters extends models['ResourceNamespacePatch'] {
  /**
   * Create a RelayUpdateParameters.
   * @property {object} [sku] SKU of the namespace.
   * @property {string} [sku.tier] The tier of this SKU. Possible values
   * include: 'Standard'
   * @property {string} [provisioningState] Possible values include: 'Created',
   * 'Succeeded', 'Deleted', 'Failed', 'Updating', 'Unknown'
   * @property {date} [createdAt] The time the namespace was created.
   * @property {date} [updatedAt] The time the namespace was updated.
   * @property {string} [serviceBusEndpoint] Endpoint you can use to perform
   * Service Bus operations.
   * @property {string} [metricId] Identifier for Azure Insights metrics.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of RelayUpdateParameters
   *
   * @returns {object} metadata of RelayUpdateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RelayUpdateParameters',
      type: {
        name: 'Composite',
        className: 'RelayUpdateParameters',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          sku: {
            required: false,
            serializedName: 'sku',
            type: {
              name: 'Composite',
              className: 'Sku'
            }
          },
          provisioningState: {
            required: false,
            readOnly: true,
            serializedName: 'properties.provisioningState',
            type: {
              name: 'Enum',
              allowedValues: [ 'Created', 'Succeeded', 'Deleted', 'Failed', 'Updating', 'Unknown' ]
            }
          },
          createdAt: {
            required: false,
            readOnly: true,
            serializedName: 'properties.createdAt',
            type: {
              name: 'DateTime'
            }
          },
          updatedAt: {
            required: false,
            readOnly: true,
            serializedName: 'properties.updatedAt',
            type: {
              name: 'DateTime'
            }
          },
          serviceBusEndpoint: {
            required: false,
            readOnly: true,
            serializedName: 'properties.serviceBusEndpoint',
            type: {
              name: 'String'
            }
          },
          metricId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.metricId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = RelayUpdateParameters;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Policy evaluation details.
 *
 */
class PolicyEvaluationDetails {
  /**
   * Create a PolicyEvaluationDetails.
   * @property {array} [evaluatedExpressions] Details of the evaluated
   * expressions.
   * @property {object} [ifNotExistsDetails] Evaluation details of IfNotExists
   * effect.
   * @property {string} [ifNotExistsDetails.resourceId] ID of the last
   * evaluated resource for IfNotExists effect.
   * @property {number} [ifNotExistsDetails.totalResources] Total number of
   * resources to which the existence condition is applicable.
   */
  constructor() {
  }

  /**
   * Defines the metadata of PolicyEvaluationDetails
   *
   * @returns {object} metadata of PolicyEvaluationDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PolicyEvaluationDetails',
      type: {
        name: 'Composite',
        className: 'PolicyEvaluationDetails',
        modelProperties: {
          evaluatedExpressions: {
            required: false,
            serializedName: 'evaluatedExpressions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ExpressionEvaluationDetailsElementType',
                  type: {
                    name: 'Composite',
                    className: 'ExpressionEvaluationDetails'
                  }
              }
            }
          },
          ifNotExistsDetails: {
            required: false,
            serializedName: 'ifNotExistsDetails',
            type: {
              name: 'Composite',
              className: 'IfNotExistsEvaluationDetails'
            }
          }
        }
      }
    };
  }
}

module.exports = PolicyEvaluationDetails;

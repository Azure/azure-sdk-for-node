/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Evaluation details of policy language expressions.
 *
 */
class ExpressionEvaluationDetails {
  /**
   * Create a ExpressionEvaluationDetails.
   * @property {string} [result] Evaluation result.
   * @property {string} [expression] Expression evaluated.
   * @property {string} [path] Property path if the expression is a field or an
   * alias.
   * @property {object} [expressionValue] Value of the expression.
   * @property {object} [targetValue] Target value to be compared with the
   * expression value.
   * @property {string} [operator] Operator to compare the expression value and
   * the target value.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ExpressionEvaluationDetails
   *
   * @returns {object} metadata of ExpressionEvaluationDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ExpressionEvaluationDetails',
      type: {
        name: 'Composite',
        className: 'ExpressionEvaluationDetails',
        modelProperties: {
          result: {
            required: false,
            serializedName: 'result',
            type: {
              name: 'String'
            }
          },
          expression: {
            required: false,
            serializedName: 'expression',
            type: {
              name: 'String'
            }
          },
          path: {
            required: false,
            serializedName: 'path',
            type: {
              name: 'String'
            }
          },
          expressionValue: {
            required: false,
            serializedName: 'expressionValue',
            type: {
              name: 'Object'
            }
          },
          targetValue: {
            required: false,
            serializedName: 'targetValue',
            type: {
              name: 'Object'
            }
          },
          operator: {
            required: false,
            serializedName: 'operator',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ExpressionEvaluationDetails;

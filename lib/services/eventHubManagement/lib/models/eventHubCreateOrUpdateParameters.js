/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the EventHubCreateOrUpdateParameters class.
 * @constructor
 * Parameters supplied to the Create Or Update Event Hub operation.
 *
 * @member {string} location Location of the resource.
 *
 * @member {string} [type] ARM type of the namespace.
 *
 * @member {string} [name] Name of the Event Hub.
 *
 * @member {date} [createdAt] Exact time the Event Hub was created.
 *
 * @member {number} [messageRetentionInDays] Number of days to retain the
 * events for this Event Hub.
 *
 * @member {number} [partitionCount] Number of partitions created for the Event
 * Hub.
 *
 * @member {array} [partitionIds] Current number of shards on the Event Hub.
 *
 * @member {string} [status] Enumerates the possible values for the status of
 * the Event Hub. Possible values include: 'Active', 'Disabled', 'Restoring',
 * 'SendDisabled', 'ReceiveDisabled', 'Creating', 'Deleting', 'Renaming',
 * 'Unknown'
 *
 * @member {date} [updatedAt] The exact time the message was updated.
 *
 */
class EventHubCreateOrUpdateParameters {
  constructor() {
  }

  /**
   * Defines the metadata of EventHubCreateOrUpdateParameters
   *
   * @returns {object} metadata of EventHubCreateOrUpdateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'EventHubCreateOrUpdateParameters',
      type: {
        name: 'Composite',
        className: 'EventHubCreateOrUpdateParameters',
        modelProperties: {
          location: {
            required: true,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          createdAt: {
            required: false,
            readOnly: true,
            serializedName: 'properties.createdAt',
            type: {
              name: 'DateTime'
            }
          },
          messageRetentionInDays: {
            required: false,
            serializedName: 'properties.messageRetentionInDays',
            type: {
              name: 'Number'
            }
          },
          partitionCount: {
            required: false,
            serializedName: 'properties.partitionCount',
            type: {
              name: 'Number'
            }
          },
          partitionIds: {
            required: false,
            readOnly: true,
            serializedName: 'properties.partitionIds',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          status: {
            required: false,
            serializedName: 'properties.status',
            type: {
              name: 'Enum',
              allowedValues: [ 'Active', 'Disabled', 'Restoring', 'SendDisabled', 'ReceiveDisabled', 'Creating', 'Deleting', 'Renaming', 'Unknown' ]
            }
          },
          updatedAt: {
            required: false,
            readOnly: true,
            serializedName: 'properties.updatedAt',
            type: {
              name: 'DateTime'
            }
          }
        }
      }
    };
  }
}

module.exports = EventHubCreateOrUpdateParameters;

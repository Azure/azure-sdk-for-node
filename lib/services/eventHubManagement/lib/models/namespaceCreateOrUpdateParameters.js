/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the NamespaceCreateOrUpdateParameters class.
 * @constructor
 * Parameters supplied to the Create Or Update Namespace operation.
 *
 * @member {string} location Namespace location.
 *
 * @member {object} [sku]
 *
 * @member {string} [sku.name] Name of this SKU. Possible values include:
 * 'Basic', 'Standard'
 *
 * @member {string} [sku.tier] The billing tier of this particular SKU.
 * Possible values include: 'Basic', 'Standard', 'Premium'
 *
 * @member {number} [sku.capacity] The Event Hubs throughput units.
 *
 * @member {object} [tags] Namespace tags.
 *
 * @member {string} [provisioningState] Provisioning state of the namespace.
 *
 * @member {date} [createdAt] The time the namespace was created.
 *
 * @member {date} [updatedAt] The time the namespace was updated.
 *
 * @member {string} [serviceBusEndpoint] Endpoint you can use to perform
 * Service Bus operations.
 *
 */
function NamespaceCreateOrUpdateParameters() {
}

/**
 * Defines the metadata of NamespaceCreateOrUpdateParameters
 *
 * @returns {object} metadata of NamespaceCreateOrUpdateParameters
 *
 */
NamespaceCreateOrUpdateParameters.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'NamespaceCreateOrUpdateParameters',
    type: {
      name: 'Composite',
      className: 'NamespaceCreateOrUpdateParameters',
      modelProperties: {
        location: {
          required: true,
          serializedName: 'location',
          type: {
            name: 'String'
          }
        },
        sku: {
          required: false,
          serializedName: 'sku',
          type: {
            name: 'Composite',
            className: 'Sku'
          }
        },
        tags: {
          required: false,
          serializedName: 'tags',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        provisioningState: {
          required: false,
          serializedName: 'properties.provisioningState',
          type: {
            name: 'String'
          }
        },
        createdAt: {
          required: false,
          serializedName: 'properties.createdAt',
          type: {
            name: 'DateTime'
          }
        },
        updatedAt: {
          required: false,
          serializedName: 'properties.updatedAt',
          type: {
            name: 'DateTime'
          }
        },
        serviceBusEndpoint: {
          required: false,
          serializedName: 'properties.serviceBusEndpoint',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = NamespaceCreateOrUpdateParameters;

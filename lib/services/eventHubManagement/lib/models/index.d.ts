/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import * as msRestAzure from 'ms-rest-azure';
exports.BaseResource = msRestAzure.BaseResource;
exports.CloudError = msRestAzure.CloudError;

/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * @member {string} [id] Resource Id
 * 
 * @member {string} [name] Resource name
 * 
 * @member {string} [type] Resource type
 * 
 * @member {string} location Resource location
 * 
 * @member {object} [tags] Resource tags
 * 
 */
export interface Resource extends BaseResource {
  id?: string;
  name?: string;
  type?: string;
  location: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the NamespaceCreateOrUpdateParameters class.
 * @constructor
 * Parameters supplied to the CreateOrUpdate Namespace operation.
 *
 * @member {string} location Namespace location.
 * 
 * @member {object} [sku]
 * 
 * @member {string} [sku.name] Name of this Sku. Possible values include:
 * 'Basic', 'Standard', 'Premium'
 * 
 * @member {string} [sku.tier] The tier of this particular SKU. Possible
 * values include: 'Basic', 'Standard', 'Premium'
 * 
 * @member {number} [sku.capacity] The eventhub throughput units
 * 
 * @member {object} [tags] Namespace tags.
 * 
 * @member {string} [provisioningState] Provisioning state of the Namespace.
 * 
 * @member {string} [status] State of the namespace. Possible values include:
 * 'Unknown', 'Creating', 'Created', 'Activating', 'Enabling', 'Active',
 * 'Disabling', 'Disabled', 'SoftDeleting', 'SoftDeleted', 'Removing',
 * 'Removed', 'Failed'
 * 
 * @member {date} [createdAt] The time the namespace was created.
 * 
 * @member {date} [updatedAt] The time the namespace was updated.
 * 
 * @member {string} [serviceBusEndpoint] Endpoint you can use to perform
 * ServiceBus operations.
 * 
 * @member {boolean} [createACSNamespace] Indicates whether to create ACS
 * namespace.
 * 
 * @member {boolean} [enabled] Specifies whether this instance is enabled.
 * 
 */
export interface NamespaceCreateOrUpdateParameters {
  location: string;
  sku?: Sku;
  tags?: { [propertyName: string]: string };
  provisioningState?: string;
  status?: string;
  createdAt?: Date;
  updatedAt?: Date;
  serviceBusEndpoint?: string;
  createACSNamespace?: boolean;
  enabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the Sku class.
 * @constructor
 * Sku of the Namespace.
 *
 * @member {string} [name] Name of this Sku. Possible values include: 'Basic',
 * 'Standard', 'Premium'
 * 
 * @member {string} tier The tier of this particular SKU. Possible values
 * include: 'Basic', 'Standard', 'Premium'
 * 
 * @member {number} [capacity] The eventhub throughput units
 * 
 */
export interface Sku {
  name?: string;
  tier: string;
  capacity?: number;
}

/**
 * @class
 * Initializes a new instance of the NamespaceResource class.
 * @constructor
 * Description of a Namespace resource.
 *
 * @member {object} [sku]
 * 
 * @member {string} [sku.name] Name of this Sku. Possible values include:
 * 'Basic', 'Standard', 'Premium'
 * 
 * @member {string} [sku.tier] The tier of this particular SKU. Possible
 * values include: 'Basic', 'Standard', 'Premium'
 * 
 * @member {number} [sku.capacity] The eventhub throughput units
 * 
 * @member {string} [provisioningState] Provisioning state of the Namespace.
 * 
 * @member {string} [status] State of the namespace. Possible values include:
 * 'Unknown', 'Creating', 'Created', 'Activating', 'Enabling', 'Active',
 * 'Disabling', 'Disabled', 'SoftDeleting', 'SoftDeleted', 'Removing',
 * 'Removed', 'Failed'
 * 
 * @member {date} [createdAt] The time the namespace was created.
 * 
 * @member {date} [updatedAt] The time the namespace was updated.
 * 
 * @member {string} [serviceBusEndpoint] Endpoint you can use to perform
 * ServiceBus operations.
 * 
 * @member {boolean} [createACSNamespace] Indicates whether to create ACS
 * namespace.
 * 
 * @member {boolean} [enabled] Specifies whether this instance is enabled.
 * 
 */
export interface NamespaceResource extends Resource {
  sku?: Sku;
  provisioningState?: string;
  status?: string;
  createdAt?: Date;
  updatedAt?: Date;
  serviceBusEndpoint?: string;
  createACSNamespace?: boolean;
  enabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the SharedAccessAuthorizationRuleCreateOrUpdateParameters class.
 * @constructor
 * Parameters supplied to the CreateOrUpdate  AuthorizationRules.
 *
 * @member {string} [location] data center location.
 * 
 * @member {string} [name] Name of the AuthorizationRule.
 * 
 * @member {array} rights The rights associated with the rule.
 * 
 */
export interface SharedAccessAuthorizationRuleCreateOrUpdateParameters {
  location?: string;
  name?: string;
  rights: string[];
}

/**
 * @class
 * Initializes a new instance of the SharedAccessAuthorizationRuleResource class.
 * @constructor
 * Description of a Namespace AuthorizationRules.
 *
 * @member {array} rights The rights associated with the rule.
 * 
 */
export interface SharedAccessAuthorizationRuleResource extends Resource {
  rights: string[];
}

/**
 * @class
 * Initializes a new instance of the ResourceListKeys class.
 * @constructor
 * Namespace/EventHub Connection String
 *
 * @member {string} [primaryConnectionString] PrimaryConnectionString of the
 * created Namespace AuthorizationRule.
 * 
 * @member {string} [secondaryConnectionString] SecondaryConnectionString of
 * the created Namespace AuthorizationRule
 * 
 * @member {string} [primaryKey] A base64-encoded 256-bit primary key for
 * signing and validating the SAS token
 * 
 * @member {string} [secondaryKey] A base64-encoded 256-bit primary key for
 * signing and validating the SAS token
 * 
 * @member {string} [keyName] A string that describes the authorization rule
 * 
 */
export interface ResourceListKeys {
  primaryConnectionString?: string;
  secondaryConnectionString?: string;
  primaryKey?: string;
  secondaryKey?: string;
  keyName?: string;
}

/**
 * @class
 * Initializes a new instance of the RegenerateKeysParameters class.
 * @constructor
 * Parameters supplied to the Regenerate Auth Rule.
 *
 * @member {string} [policykey] Key that needs to be regenerated . Possible
 * values include: 'PrimaryKey', 'SecondaryKey'
 * 
 */
export interface RegenerateKeysParameters {
  policykey?: string;
}

/**
 * @class
 * Initializes a new instance of the EventHubCreateOrUpdateParameters class.
 * @constructor
 * Parameters supplied to the CreateOrUpdate EventHub operation.
 *
 * @member {string} location Location of the resource.
 * 
 * @member {string} [type] ARM type of the namespace.
 * 
 * @member {string} [name] Name of the Event Hub.
 * 
 * @member {object} [properties]
 * 
 * @member {date} [properties.createdAt] Exact time the Event was created.
 * 
 * @member {number} [properties.messageRetentionInDays] Number of days to
 * retain the events for this Event Hub.
 * 
 * @member {number} [properties.partitionCount] Number of partitions created
 * for EventHub.
 * 
 * @member {array} [properties.partitionIds] Current number of shards on the
 * Event Hub.
 * 
 * @member {string} [properties.status] Enumerates the possible values for the
 * status of the EventHub. Possible values include: 'Active', 'Disabled',
 * 'Restoring', 'SendDisabled', 'ReceiveDisabled', 'Creating', 'Deleting',
 * 'Renaming', 'Unknown'
 * 
 * @member {date} [properties.updatedAt] The exact time the message has been
 * updated.
 * 
 */
export interface EventHubCreateOrUpdateParameters {
  location: string;
  type?: string;
  name?: string;
  properties?: EventHubProperties;
}

/**
 * @class
 * Initializes a new instance of the EventHubProperties class.
 * @constructor
 * @member {date} [createdAt] Exact time the Event was created.
 * 
 * @member {number} [messageRetentionInDays] Number of days to retain the
 * events for this Event Hub.
 * 
 * @member {number} [partitionCount] Number of partitions created for EventHub.
 * 
 * @member {array} [partitionIds] Current number of shards on the Event Hub.
 * 
 * @member {string} [status] Enumerates the possible values for the status of
 * the EventHub. Possible values include: 'Active', 'Disabled', 'Restoring',
 * 'SendDisabled', 'ReceiveDisabled', 'Creating', 'Deleting', 'Renaming',
 * 'Unknown'
 * 
 * @member {date} [updatedAt] The exact time the message has been updated.
 * 
 */
export interface EventHubProperties {
  createdAt?: Date;
  messageRetentionInDays?: number;
  partitionCount?: number;
  partitionIds?: string[];
  status?: string;
  updatedAt?: Date;
}

/**
 * @class
 * Initializes a new instance of the EventHubResource class.
 * @constructor
 * Description of EventHub Resource.
 *
 * @member {date} [createdAt] Exact time the Event was created.
 * 
 * @member {number} [messageRetentionInDays] Number of days to retain the
 * events for this Event Hub.
 * 
 * @member {number} [partitionCount] Number of partitions created for EventHub.
 * 
 * @member {array} [partitionIds] Current number of shards on the Event Hub.
 * 
 * @member {string} [status] Enumerates the possible values for the status of
 * the EventHub. Possible values include: 'Active', 'Disabled', 'Restoring',
 * 'SendDisabled', 'ReceiveDisabled', 'Creating', 'Deleting', 'Renaming',
 * 'Unknown'
 * 
 * @member {date} [updatedAt] The exact time the message has been updated.
 * 
 */
export interface EventHubResource extends Resource {
  createdAt?: Date;
  messageRetentionInDays?: number;
  partitionCount?: number;
  partitionIds?: string[];
  status?: string;
  updatedAt?: Date;
}

/**
 * @class
 * Initializes a new instance of the ConsumerGroupCreateOrUpdateParameters class.
 * @constructor
 * Parameters supplied to the CreateOrUpdate Consumer Group operation.
 *
 * @member {string} location Location of the resource.
 * 
 * @member {string} [type] ARM type of the namespace.
 * 
 * @member {string} [name] Name of the consumer group.
 * 
 * @member {date} [createdAt] Exact time the message was created.
 * 
 * @member {string} [eventHubPath] The path of the event hub.
 * 
 * @member {date} [updatedAt] The exact time the message has been updated.
 * 
 * @member {string} [userMetadata] The user metadata.
 * 
 */
export interface ConsumerGroupCreateOrUpdateParameters {
  location: string;
  type?: string;
  name?: string;
  createdAt?: Date;
  eventHubPath?: string;
  updatedAt?: Date;
  userMetadata?: string;
}

/**
 * @class
 * Initializes a new instance of the ConsumerGroupResource class.
 * @constructor
 * Description of Consumer Group Resource.
 *
 * @member {date} [createdAt] Exact time the message was created.
 * 
 * @member {string} [eventHubPath] The path of the event hub.
 * 
 * @member {date} [updatedAt] The exact time the message has been updated.
 * 
 * @member {string} [userMetadata] The user metadata.
 * 
 */
export interface ConsumerGroupResource extends Resource {
  createdAt?: Date;
  eventHubPath?: string;
  updatedAt?: Date;
  userMetadata?: string;
}


/**
 * @class
 * Initializes a new instance of the NamespaceListResult class.
 * @constructor
 * The response of the List Namespace operation.
 *
 * @member {string} [nextLink] Link to the next set of results. Not empty if
 * Value contains incomplete list of Namespaces
 * 
 */
export interface NamespaceListResult extends Array<NamespaceResource> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SharedAccessAuthorizationRuleListResult class.
 * @constructor
 * The response of the List Namespace operation.
 *
 * @member {string} [nextLink] Link to the next set of results. Not empty if
 * Value contains incomplete list of AuthorizationRules
 * 
 */
export interface SharedAccessAuthorizationRuleListResult extends Array<SharedAccessAuthorizationRuleResource> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the EventHubListResult class.
 * @constructor
 * The response of the List EventHub operation.
 *
 * @member {string} [nextLink] Link to the next set of results. Not empty if
 * Value contains incomplete list of EventHub
 * 
 */
export interface EventHubListResult extends Array<EventHubResource> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ConsumerGroupListResult class.
 * @constructor
 * The response of the List Consumer Group operation.
 *
 * @member {string} [nextLink] Link to the next set of results. Not empty if
 * Value contains incomplete list of Consumer Group
 * 
 */
export interface ConsumerGroupListResult extends Array<ConsumerGroupResource> {
  nextLink?: string;
}

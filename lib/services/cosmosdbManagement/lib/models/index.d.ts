/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the ConsistencyPolicy class.
 * @constructor
 * The consistency policy for the Cosmos DB database account.
 *
 * @member {string} defaultConsistencyLevel The default consistency level and
 * configuration settings of the Cosmos DB account. Possible values include:
 * 'Eventual', 'Session', 'BoundedStaleness', 'Strong', 'ConsistentPrefix'
 * @member {number} [maxStalenessPrefix] When used with the Bounded Staleness
 * consistency level, this value represents the number of stale requests
 * tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when
 * defaultConsistencyPolicy is set to 'BoundedStaleness'.
 * @member {number} [maxIntervalInSeconds] When used with the Bounded Staleness
 * consistency level, this value represents the time amount of staleness (in
 * seconds) tolerated. Accepted range for this value is 1 - 100. Required when
 * defaultConsistencyPolicy is set to 'BoundedStaleness'.
 */
export interface ConsistencyPolicy {
  defaultConsistencyLevel: string;
  maxStalenessPrefix?: number;
  maxIntervalInSeconds?: number;
}

/**
 * @class
 * Initializes a new instance of the Location class.
 * @constructor
 * A region in which the Azure Cosmos DB database account is deployed.
 *
 * @member {string} [id] The unique identifier of the region within the
 * database account. Example: &lt;accountName&gt;-&lt;locationName&gt;.
 * @member {string} [locationName] The name of the region.
 * @member {string} [documentEndpoint] The connection endpoint for the specific
 * region. Example:
 * https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/
 * @member {string} [provisioningState]
 * @member {number} [failoverPriority] The failover priority of the region. A
 * failover priority of 0 indicates a write region. The maximum value for a
 * failover priority = (total number of regions - 1). Failover priority values
 * must be unique for each of the regions in which the database account exists.
 */
export interface Location {
  readonly id?: string;
  locationName?: string;
  readonly documentEndpoint?: string;
  provisioningState?: string;
  failoverPriority?: number;
}

/**
 * @class
 * Initializes a new instance of the FailoverPolicy class.
 * @constructor
 * The failover policy for a given region of a database account.
 *
 * @member {string} [id] The unique identifier of the region in which the
 * database account replicates to. Example:
 * &lt;accountName&gt;-&lt;locationName&gt;.
 * @member {string} [locationName] The name of the region in which the database
 * account exists.
 * @member {number} [failoverPriority] The failover priority of the region. A
 * failover priority of 0 indicates a write region. The maximum value for a
 * failover priority = (total number of regions - 1). Failover priority values
 * must be unique for each of the regions in which the database account exists.
 */
export interface FailoverPolicy {
  readonly id?: string;
  locationName?: string;
  failoverPriority?: number;
}

/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * A database account resource.
 *
 * @member {string} [id] The unique resource identifier of the database
 * account.
 * @member {string} [name] The name of the database account.
 * @member {string} [type] The type of Azure resource.
 * @member {string} location The location of the resource group to which the
 * resource belongs.
 * @member {object} [tags]
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
  location: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the DatabaseAccount class.
 * @constructor
 * An Azure Cosmos DB database account.
 *
 * @member {string} [kind] Indicates the type of database account. This can
 * only be set at database account creation. Possible values include:
 * 'GlobalDocumentDB', 'MongoDB', 'Parse'. Default value: 'GlobalDocumentDB' .
 * @member {string} [provisioningState]
 * @member {string} [documentEndpoint] The connection endpoint for the Cosmos
 * DB database account.
 * @member {string} [databaseAccountOfferType] The offer type for the Cosmos DB
 * database account. Default value: Standard. Possible values include:
 * 'Standard'
 * @member {string} [ipRangeFilter] Cosmos DB Firewall Support: This value
 * specifies the set of IP addresses or IP address ranges in CIDR form to be
 * included as the allowed list of client IPs for a given database account. IP
 * addresses/ranges must be comma separated and must not contain any spaces.
 * @member {boolean} [enableAutomaticFailover] Enables automatic failover of
 * the write region in the rare event that the region is unavailable due to an
 * outage. Automatic failover will result in a new write region for the account
 * and is chosen based on the failover priorities configured for the account.
 * @member {object} [consistencyPolicy] The consistency policy for the Cosmos
 * DB database account.
 * @member {string} [consistencyPolicy.defaultConsistencyLevel] The default
 * consistency level and configuration settings of the Cosmos DB account.
 * Possible values include: 'Eventual', 'Session', 'BoundedStaleness',
 * 'Strong', 'ConsistentPrefix'
 * @member {number} [consistencyPolicy.maxStalenessPrefix] When used with the
 * Bounded Staleness consistency level, this value represents the number of
 * stale requests tolerated. Accepted range for this value is 1 –
 * 2,147,483,647. Required when defaultConsistencyPolicy is set to
 * 'BoundedStaleness'.
 * @member {number} [consistencyPolicy.maxIntervalInSeconds] When used with the
 * Bounded Staleness consistency level, this value represents the time amount
 * of staleness (in seconds) tolerated. Accepted range for this value is 1 -
 * 100. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
 * @member {array} [writeLocations] An array that contains the write location
 * for the Cosmos DB account.
 * @member {array} [readLocations] An array that contains of the read locations
 * enabled for the Cosmos DB account.
 * @member {array} [failoverPolicies] An array that contains the regions
 * ordered by their failover priorities.
 */
export interface DatabaseAccount extends Resource {
  kind?: string;
  provisioningState?: string;
  readonly documentEndpoint?: string;
  readonly databaseAccountOfferType?: string;
  ipRangeFilter?: string;
  enableAutomaticFailover?: boolean;
  consistencyPolicy?: ConsistencyPolicy;
  readonly writeLocations?: Location[];
  readonly readLocations?: Location[];
  readonly failoverPolicies?: FailoverPolicy[];
}

/**
 * @class
 * Initializes a new instance of the FailoverPolicies class.
 * @constructor
 * The list of new failover policies for the failover priority change.
 *
 * @member {array} [failoverPolicies] List of failover policies.
 */
export interface FailoverPolicies {
  failoverPolicies?: FailoverPolicy[];
}

/**
 * @class
 * Initializes a new instance of the DatabaseAccountCreateUpdateParameters class.
 * @constructor
 * Parameters to create and update Cosmos DB database accounts.
 *
 * @member {string} [kind] Indicates the type of database account. This can
 * only be set at database account creation. Possible values include:
 * 'GlobalDocumentDB', 'MongoDB', 'Parse'. Default value: 'GlobalDocumentDB' .
 * @member {object} [consistencyPolicy] The consistency policy for the Cosmos
 * DB account.
 * @member {string} [consistencyPolicy.defaultConsistencyLevel] The default
 * consistency level and configuration settings of the Cosmos DB account.
 * Possible values include: 'Eventual', 'Session', 'BoundedStaleness',
 * 'Strong', 'ConsistentPrefix'
 * @member {number} [consistencyPolicy.maxStalenessPrefix] When used with the
 * Bounded Staleness consistency level, this value represents the number of
 * stale requests tolerated. Accepted range for this value is 1 –
 * 2,147,483,647. Required when defaultConsistencyPolicy is set to
 * 'BoundedStaleness'.
 * @member {number} [consistencyPolicy.maxIntervalInSeconds] When used with the
 * Bounded Staleness consistency level, this value represents the time amount
 * of staleness (in seconds) tolerated. Accepted range for this value is 1 -
 * 100. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.
 * @member {array} locations An array that contains the georeplication
 * locations enabled for the Cosmos DB account.
 * @member {string} [ipRangeFilter] Cosmos DB Firewall Support: This value
 * specifies the set of IP addresses or IP address ranges in CIDR form to be
 * included as the allowed list of client IPs for a given database account. IP
 * addresses/ranges must be comma separated and must not contain any spaces.
 * @member {boolean} [enableAutomaticFailover] Enables automatic failover of
 * the write region in the rare event that the region is unavailable due to an
 * outage. Automatic failover will result in a new write region for the account
 * and is chosen based on the failover priorities configured for the account.
 */
export interface DatabaseAccountCreateUpdateParameters extends Resource {
  kind?: string;
  consistencyPolicy?: ConsistencyPolicy;
  locations: Location[];
  ipRangeFilter?: string;
  enableAutomaticFailover?: boolean;
}

/**
 * @class
 * Initializes a new instance of the DatabaseAccountPatchParameters class.
 * @constructor
 * Parameters for patching Azure Cosmos DB database account properties.
 *
 * @member {object} [tags]
 */
export interface DatabaseAccountPatchParameters {
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the DatabaseAccountListReadOnlyKeysResult class.
 * @constructor
 * The read-only access keys for the given database account.
 *
 * @member {string} [primaryReadonlyMasterKey] Base 64 encoded value of the
 * primary read-only key.
 * @member {string} [secondaryReadonlyMasterKey] Base 64 encoded value of the
 * secondary read-only key.
 */
export interface DatabaseAccountListReadOnlyKeysResult {
  readonly primaryReadonlyMasterKey?: string;
  readonly secondaryReadonlyMasterKey?: string;
}

/**
 * @class
 * Initializes a new instance of the DatabaseAccountListKeysResult class.
 * @constructor
 * The access keys for the given database account.
 *
 * @member {string} [primaryMasterKey] Base 64 encoded value of the primary
 * read-write key.
 * @member {string} [secondaryMasterKey] Base 64 encoded value of the secondary
 * read-write key.
 * @member {string} [primaryReadonlyMasterKey] Base 64 encoded value of the
 * primary read-only key.
 * @member {string} [secondaryReadonlyMasterKey] Base 64 encoded value of the
 * secondary read-only key.
 */
export interface DatabaseAccountListKeysResult {
  readonly primaryMasterKey?: string;
  readonly secondaryMasterKey?: string;
  readonly primaryReadonlyMasterKey?: string;
  readonly secondaryReadonlyMasterKey?: string;
}

/**
 * @class
 * Initializes a new instance of the DatabaseAccountConnectionString class.
 * @constructor
 * Connection string for the Cosmos DB account
 *
 * @member {string} [connectionString] Value of the connection string
 * @member {string} [description] Description of the connection string
 */
export interface DatabaseAccountConnectionString {
  readonly connectionString?: string;
  readonly description?: string;
}

/**
 * @class
 * Initializes a new instance of the DatabaseAccountListConnectionStringsResult class.
 * @constructor
 * The connection strings for the given database account.
 *
 * @member {array} [connectionStrings] An array that contains the connection
 * strings for the Cosmos DB account.
 */
export interface DatabaseAccountListConnectionStringsResult {
  connectionStrings?: DatabaseAccountConnectionString[];
}

/**
 * @class
 * Initializes a new instance of the DatabaseAccountRegenerateKeyParameters class.
 * @constructor
 * Parameters to regenerate the keys within the database account.
 *
 * @member {string} keyKind The access key to regenerate. Possible values
 * include: 'primary', 'secondary', 'primaryReadonly', 'secondaryReadonly'
 */
export interface DatabaseAccountRegenerateKeyParameters {
  keyKind: string;
}

/**
 * @class
 * Initializes a new instance of the OperationDisplay class.
 * @constructor
 * The object that represents the operation.
 *
 * @member {string} [provider] Service provider: Microsoft.ResourceProvider
 * @member {string} [resource] Resource on which the operation is performed:
 * Profile, endpoint, etc.
 * @member {string} [operation] Operation type: Read, write, delete, etc.
 * @member {string} [description] Description of operation
 */
export interface OperationDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the Operation class.
 * @constructor
 * REST API operation
 *
 * @member {string} [name] Operation name: {provider}/{resource}/{operation}
 * @member {object} [display] The object that represents the operation.
 * @member {string} [display.provider] Service provider:
 * Microsoft.ResourceProvider
 * @member {string} [display.resource] Resource on which the operation is
 * performed: Profile, endpoint, etc.
 * @member {string} [display.operation] Operation type: Read, write, delete,
 * etc.
 * @member {string} [display.description] Description of operation
 */
export interface Operation {
  name?: string;
  display?: OperationDisplay;
}


/**
 * @class
 * Initializes a new instance of the DatabaseAccountsListResult class.
 * @constructor
 * The List operation response, that contains the database accounts and their
 * properties.
 *
 */
export interface DatabaseAccountsListResult extends Array<DatabaseAccount> {
}

/**
 * @class
 * Initializes a new instance of the OperationListResult class.
 * @constructor
 * Result of the request to list Resource Provider operations. It contains a
 * list of operations and a URL link to get the next set of results.
 *
 * @member {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 */
export interface OperationListResult extends Array<Operation> {
  nextLink?: string;
}

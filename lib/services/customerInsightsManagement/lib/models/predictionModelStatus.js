/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The prediction model status.
 *
 */
class PredictionModelStatus {
  /**
   * Create a PredictionModelStatus.
   * @member {string} [tenantId] The hub name.
   * @member {string} [predictionName] The prediction name.
   * @member {string} [predictionGuidId] The prediction GUID ID.
   * @member {string} status Prediction model life cycle.  When prediction is
   * in PendingModelConfirmation status, it is allowed to update the status to
   * PendingFeaturing or Active through API. Possible values include: 'New',
   * 'Provisioning', 'ProvisioningFailed', 'PendingDiscovering', 'Discovering',
   * 'PendingFeaturing', 'Featuring', 'FeaturingFailed', 'PendingTraining',
   * 'Training', 'TrainingFailed', 'Evaluating', 'EvaluatingFailed',
   * 'PendingModelConfirmation', 'Active', 'Deleted', 'HumanIntervention',
   * 'Failed'
   * @member {string} [message] The model status message.
   * @member {number} [trainingSetCount] Count of the training set.
   * @member {number} [testSetCount] Count of the test set.
   * @member {number} [validationSetCount] Count of the validation set.
   * @member {number} [trainingAccuracy] The training accuracy.
   * @member {number} [signalsUsed] The singnas used.
   * @member {string} [modelVersion] Version of the model.
   */
  constructor() {
  }

  /**
   * Defines the metadata of PredictionModelStatus
   *
   * @returns {object} metadata of PredictionModelStatus
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PredictionModelStatus',
      type: {
        name: 'Composite',
        className: 'PredictionModelStatus',
        modelProperties: {
          tenantId: {
            required: false,
            readOnly: true,
            serializedName: 'tenantId',
            type: {
              name: 'String'
            }
          },
          predictionName: {
            required: false,
            readOnly: true,
            serializedName: 'predictionName',
            type: {
              name: 'String'
            }
          },
          predictionGuidId: {
            required: false,
            readOnly: true,
            serializedName: 'predictionGuidId',
            type: {
              name: 'String'
            }
          },
          status: {
            required: true,
            serializedName: 'status',
            type: {
              name: 'String'
            }
          },
          message: {
            required: false,
            readOnly: true,
            serializedName: 'message',
            type: {
              name: 'String'
            }
          },
          trainingSetCount: {
            required: false,
            readOnly: true,
            serializedName: 'trainingSetCount',
            type: {
              name: 'Number'
            }
          },
          testSetCount: {
            required: false,
            readOnly: true,
            serializedName: 'testSetCount',
            type: {
              name: 'Number'
            }
          },
          validationSetCount: {
            required: false,
            readOnly: true,
            serializedName: 'validationSetCount',
            type: {
              name: 'Number'
            }
          },
          trainingAccuracy: {
            required: false,
            readOnly: true,
            serializedName: 'trainingAccuracy',
            type: {
              name: 'Number'
            }
          },
          signalsUsed: {
            required: false,
            readOnly: true,
            serializedName: 'signalsUsed',
            type: {
              name: 'Number'
            }
          },
          modelVersion: {
            required: false,
            readOnly: true,
            serializedName: 'modelVersion',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = PredictionModelStatus;

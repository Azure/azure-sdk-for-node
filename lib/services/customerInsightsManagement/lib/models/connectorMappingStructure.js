/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Connector mapping property structure.
 *
 */
class ConnectorMappingStructure {
  /**
   * Create a ConnectorMappingStructure.
   * @property {string} propertyName The property name of the mapping entity.
   * @property {string} columnName The column name of the import file.
   * @property {string} [customFormatSpecifier] Custom format specifier for
   * input parsing.
   * @property {boolean} [isEncrypted] Indicates if the column is encrypted.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ConnectorMappingStructure
   *
   * @returns {object} metadata of ConnectorMappingStructure
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ConnectorMappingStructure',
      type: {
        name: 'Composite',
        className: 'ConnectorMappingStructure',
        modelProperties: {
          propertyName: {
            required: true,
            serializedName: 'propertyName',
            type: {
              name: 'String'
            }
          },
          columnName: {
            required: true,
            serializedName: 'columnName',
            type: {
              name: 'String'
            }
          },
          customFormatSpecifier: {
            required: false,
            serializedName: 'customFormatSpecifier',
            type: {
              name: 'String'
            }
          },
          isEncrypted: {
            required: false,
            serializedName: 'isEncrypted',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = ConnectorMappingStructure;

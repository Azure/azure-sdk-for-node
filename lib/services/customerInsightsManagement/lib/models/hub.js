/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Hub resource.
 *
 * @extends models['Resource']
 */
class Hub extends models['Resource'] {
  /**
   * Create a Hub.
   * @member {string} [apiEndpoint] API endpoint URL of the hub.
   * @member {string} [webEndpoint] Web endpoint URL of the hub.
   * @member {string} [provisioningState] Provisioning state of the hub.
   * @member {number} [tenantFeatures] The bit flags for enabled hub features.
   * Bit 0 is set to 1 indicates graph is enabled, or disabled if set to 0. Bit
   * 1 is set to 1 indicates the hub is disabled, or enabled if set to 0.
   * @member {object} [hubBillingInfo] Billing settings of the hub.
   * @member {string} [hubBillingInfo.skuName] The sku name.
   * @member {number} [hubBillingInfo.minUnits] The minimum number of units
   * will be billed. One unit is 10,000 Profiles and 100,000 Interactions.
   * @member {number} [hubBillingInfo.maxUnits] The maximum number of units can
   * be used.  One unit is 10,000 Profiles and 100,000 Interactions.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of Hub
   *
   * @returns {object} metadata of Hub
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Hub',
      type: {
        name: 'Composite',
        className: 'Hub',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          apiEndpoint: {
            required: false,
            readOnly: true,
            serializedName: 'properties.apiEndpoint',
            type: {
              name: 'String'
            }
          },
          webEndpoint: {
            required: false,
            readOnly: true,
            serializedName: 'properties.webEndpoint',
            type: {
              name: 'String'
            }
          },
          provisioningState: {
            required: false,
            readOnly: true,
            serializedName: 'properties.provisioningState',
            type: {
              name: 'String'
            }
          },
          tenantFeatures: {
            required: false,
            serializedName: 'properties.tenantFeatures',
            type: {
              name: 'Number'
            }
          },
          hubBillingInfo: {
            required: false,
            serializedName: 'properties.hubBillingInfo',
            type: {
              name: 'Composite',
              className: 'HubBillingInfoFormat'
            }
          }
        }
      }
    };
  }
}

module.exports = Hub;

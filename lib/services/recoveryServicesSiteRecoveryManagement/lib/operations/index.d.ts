/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface Operations {


    /**
     * @summary Returns the list of available operations.
     *
     * Operation to return the list of available operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationsDiscoveryCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationsDiscoveryCollection>>;

    /**
     * @summary Returns the list of available operations.
     *
     * Operation to return the list of available operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationsDiscoveryCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationsDiscoveryCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationsDiscoveryCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationsDiscoveryCollection>;
    list(callback: ServiceCallback<models.OperationsDiscoveryCollection>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationsDiscoveryCollection>): void;


    /**
     * @summary Returns the list of available operations.
     *
     * Operation to return the list of available operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationsDiscoveryCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationsDiscoveryCollection>>;

    /**
     * @summary Returns the list of available operations.
     *
     * Operation to return the list of available operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationsDiscoveryCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationsDiscoveryCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationsDiscoveryCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationsDiscoveryCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.OperationsDiscoveryCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationsDiscoveryCollection>): void;
}

/**
 * @class
 * ReplicationAlertSettings
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationAlertSettings {


    /**
     * @summary Gets the list of configured email notification(alert)
     * configurations.
     *
     * Gets the list of email notification(alert) configurations for the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AlertCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AlertCollection>>;

    /**
     * @summary Gets the list of configured email notification(alert)
     * configurations.
     *
     * Gets the list of email notification(alert) configurations for the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AlertCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AlertCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AlertCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AlertCollection>;
    list(callback: ServiceCallback<models.AlertCollection>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AlertCollection>): void;


    /**
     * @summary Gets an email notification(alert) configuration.
     *
     * Gets the details of the specified email notification(alert) configuration.
     *
     * @param {string} alertSettingName The name of the email notification
     * configuration.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Alert>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(alertSettingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Alert>>;

    /**
     * @summary Gets an email notification(alert) configuration.
     *
     * Gets the details of the specified email notification(alert) configuration.
     *
     * @param {string} alertSettingName The name of the email notification
     * configuration.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Alert} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Alert} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Alert} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(alertSettingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Alert>;
    get(alertSettingName: string, callback: ServiceCallback<models.Alert>): void;
    get(alertSettingName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Alert>): void;


    /**
     * @summary Configures email notifications for this vault.
     *
     * Create or update an email notification(alert) configuration.
     *
     * @param {string} alertSettingName The name of the email notification(alert)
     * configuration.
     *
     * @param {object} request The input to configure the email
     * notification(alert).
     *
     * @param {object} [request.properties] The properties of a configure alert
     * request.
     *
     * @param {string} [request.properties.sendToOwners] A value indicating whether
     * to send email to subscription administrator.
     *
     * @param {array} [request.properties.customEmailAddresses] The custom email
     * address for sending emails.
     *
     * @param {string} [request.properties.locale] The locale for the email
     * notification.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Alert>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(alertSettingName: string, request: models.ConfigureAlertRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Alert>>;

    /**
     * @summary Configures email notifications for this vault.
     *
     * Create or update an email notification(alert) configuration.
     *
     * @param {string} alertSettingName The name of the email notification(alert)
     * configuration.
     *
     * @param {object} request The input to configure the email
     * notification(alert).
     *
     * @param {object} [request.properties] The properties of a configure alert
     * request.
     *
     * @param {string} [request.properties.sendToOwners] A value indicating whether
     * to send email to subscription administrator.
     *
     * @param {array} [request.properties.customEmailAddresses] The custom email
     * address for sending emails.
     *
     * @param {string} [request.properties.locale] The locale for the email
     * notification.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Alert} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Alert} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Alert} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(alertSettingName: string, request: models.ConfigureAlertRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Alert>;
    create(alertSettingName: string, request: models.ConfigureAlertRequest, callback: ServiceCallback<models.Alert>): void;
    create(alertSettingName: string, request: models.ConfigureAlertRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Alert>): void;


    /**
     * @summary Gets the list of configured email notification(alert)
     * configurations.
     *
     * Gets the list of email notification(alert) configurations for the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AlertCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AlertCollection>>;

    /**
     * @summary Gets the list of configured email notification(alert)
     * configurations.
     *
     * Gets the list of email notification(alert) configurations for the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AlertCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AlertCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AlertCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AlertCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.AlertCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AlertCollection>): void;
}

/**
 * @class
 * ReplicationEvents
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationEvents {


    /**
     * @summary Gets the list of Azure Site Recovery events.
     *
     * Gets the list of Azure Site Recovery events for the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<EventCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.EventCollection>>;

    /**
     * @summary Gets the list of Azure Site Recovery events.
     *
     * Gets the list of Azure Site Recovery events for the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {EventCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {EventCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link EventCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.EventCollection>;
    list(callback: ServiceCallback<models.EventCollection>): void;
    list(options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EventCollection>): void;


    /**
     * @summary Get the details of an Azure Site recovery event.
     *
     * The operation to get the details of an Azure Site recovery event.
     *
     * @param {string} eventName The name of the Azure Site Recovery event.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Event>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(eventName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Event>>;

    /**
     * @summary Get the details of an Azure Site recovery event.
     *
     * The operation to get the details of an Azure Site recovery event.
     *
     * @param {string} eventName The name of the Azure Site Recovery event.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Event} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Event} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Event} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(eventName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Event>;
    get(eventName: string, callback: ServiceCallback<models.Event>): void;
    get(eventName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Event>): void;


    /**
     * @summary Gets the list of Azure Site Recovery events.
     *
     * Gets the list of Azure Site Recovery events for the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<EventCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.EventCollection>>;

    /**
     * @summary Gets the list of Azure Site Recovery events.
     *
     * Gets the list of Azure Site Recovery events for the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {EventCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {EventCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link EventCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.EventCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.EventCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EventCollection>): void;
}

/**
 * @class
 * ReplicationFabrics
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationFabrics {


    /**
     * @summary Gets the list of ASR fabrics
     *
     * Gets a list of the Azure Site Recovery fabrics in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FabricCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FabricCollection>>;

    /**
     * @summary Gets the list of ASR fabrics
     *
     * Gets a list of the Azure Site Recovery fabrics in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FabricCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FabricCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FabricCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FabricCollection>;
    list(callback: ServiceCallback<models.FabricCollection>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FabricCollection>): void;


    /**
     * @summary Gets the details of an ASR fabric.
     *
     * Gets the details of an Azure Site Recovery fabric.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Fabric>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Fabric>>;

    /**
     * @summary Gets the details of an ASR fabric.
     *
     * Gets the details of an Azure Site Recovery fabric.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Fabric} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Fabric} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Fabric} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Fabric>;
    get(fabricName: string, callback: ServiceCallback<models.Fabric>): void;
    get(fabricName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Fabric>): void;


    /**
     * @summary Creates an Azure Site Recovery fabric.
     *
     * The operation to create an Azure Site Recovery fabric (for e.g. Hyper-V
     * site)
     *
     * @param {string} fabricName Name of the ASR fabric.
     *
     * @param {object} input Fabric creation input.
     *
     * @param {object} [input.properties] Fabric creation input.
     *
     * @param {object} [input.properties.customDetails] Fabric provider specific
     * creation input.
     *
     * @param {string} input.properties.customDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Fabric>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(fabricName: string, input: models.FabricCreationInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Fabric>>;

    /**
     * @summary Creates an Azure Site Recovery fabric.
     *
     * The operation to create an Azure Site Recovery fabric (for e.g. Hyper-V
     * site)
     *
     * @param {string} fabricName Name of the ASR fabric.
     *
     * @param {object} input Fabric creation input.
     *
     * @param {object} [input.properties] Fabric creation input.
     *
     * @param {object} [input.properties.customDetails] Fabric provider specific
     * creation input.
     *
     * @param {string} input.properties.customDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Fabric} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Fabric} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Fabric} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(fabricName: string, input: models.FabricCreationInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Fabric>;
    create(fabricName: string, input: models.FabricCreationInput, callback: ServiceCallback<models.Fabric>): void;
    create(fabricName: string, input: models.FabricCreationInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Fabric>): void;


    /**
     * @summary Purges the site.
     *
     * The operation to purge(force delete) an Azure Site Recovery fabric.
     *
     * @param {string} fabricName ASR fabric to purge.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    purgeWithHttpOperationResponse(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Purges the site.
     *
     * The operation to purge(force delete) an Azure Site Recovery fabric.
     *
     * @param {string} fabricName ASR fabric to purge.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    purge(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    purge(fabricName: string, callback: ServiceCallback<void>): void;
    purge(fabricName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Checks the consistency of the ASR fabric.
     *
     * The operation to perform a consistency check on the fabric.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Fabric>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    checkConsistencyWithHttpOperationResponse(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Fabric>>;

    /**
     * @summary Checks the consistency of the ASR fabric.
     *
     * The operation to perform a consistency check on the fabric.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Fabric} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Fabric} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Fabric} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    checkConsistency(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Fabric>;
    checkConsistency(fabricName: string, callback: ServiceCallback<models.Fabric>): void;
    checkConsistency(fabricName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Fabric>): void;


    /**
     * @summary Migrates the site to AAD.
     *
     * The operation to migrate an Azure Site Recovery fabric to AAD.
     *
     * @param {string} fabricName ASR fabric to migrate.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    migrateToAadWithHttpOperationResponse(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Migrates the site to AAD.
     *
     * The operation to migrate an Azure Site Recovery fabric to AAD.
     *
     * @param {string} fabricName ASR fabric to migrate.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    migrateToAad(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    migrateToAad(fabricName: string, callback: ServiceCallback<void>): void;
    migrateToAad(fabricName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Perform failover of the process server.
     *
     * The operation to move replications from a process server to another process
     * server.
     *
     * @param {string} fabricName The name of the fabric containing the process
     * server.
     *
     * @param {object} failoverProcessServerRequest The input to the failover
     * process server operation.
     *
     * @param {object} [failoverProcessServerRequest.properties] The properties of
     * the PS Failover request.
     *
     * @param {string} [failoverProcessServerRequest.properties.containerName] The
     * container identifier.
     *
     * @param {string}
     * [failoverProcessServerRequest.properties.sourceProcessServerId] The source
     * process server.
     *
     * @param {string}
     * [failoverProcessServerRequest.properties.targetProcessServerId] The new
     * process server.
     *
     * @param {array} [failoverProcessServerRequest.properties.vmsToMigrate] The
     * VMS to migrate.
     *
     * @param {string} [failoverProcessServerRequest.properties.updateType] A value
     * for failover type. It can be systemlevel/serverlevel
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Fabric>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    reassociateGatewayWithHttpOperationResponse(fabricName: string, failoverProcessServerRequest: models.FailoverProcessServerRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Fabric>>;

    /**
     * @summary Perform failover of the process server.
     *
     * The operation to move replications from a process server to another process
     * server.
     *
     * @param {string} fabricName The name of the fabric containing the process
     * server.
     *
     * @param {object} failoverProcessServerRequest The input to the failover
     * process server operation.
     *
     * @param {object} [failoverProcessServerRequest.properties] The properties of
     * the PS Failover request.
     *
     * @param {string} [failoverProcessServerRequest.properties.containerName] The
     * container identifier.
     *
     * @param {string}
     * [failoverProcessServerRequest.properties.sourceProcessServerId] The source
     * process server.
     *
     * @param {string}
     * [failoverProcessServerRequest.properties.targetProcessServerId] The new
     * process server.
     *
     * @param {array} [failoverProcessServerRequest.properties.vmsToMigrate] The
     * VMS to migrate.
     *
     * @param {string} [failoverProcessServerRequest.properties.updateType] A value
     * for failover type. It can be systemlevel/serverlevel
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Fabric} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Fabric} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Fabric} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    reassociateGateway(fabricName: string, failoverProcessServerRequest: models.FailoverProcessServerRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Fabric>;
    reassociateGateway(fabricName: string, failoverProcessServerRequest: models.FailoverProcessServerRequest, callback: ServiceCallback<models.Fabric>): void;
    reassociateGateway(fabricName: string, failoverProcessServerRequest: models.FailoverProcessServerRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Fabric>): void;


    /**
     * @summary Deletes the site.
     *
     * The operation to delete or remove an Azure Site Recovery fabric.
     *
     * @param {string} fabricName ASR fabric to delete
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Deletes the site.
     *
     * The operation to delete or remove an Azure Site Recovery fabric.
     *
     * @param {string} fabricName ASR fabric to delete
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(fabricName: string, callback: ServiceCallback<void>): void;
    deleteMethod(fabricName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Renews certificate for the fabric.
     *
     * Renews the connection certificate for the ASR replication fabric.
     *
     * @param {string} fabricName fabric name to renew certs for.
     *
     * @param {object} renewCertificateParameter Renew certificate input.
     *
     * @param {object} [renewCertificateParameter.properties] Renew certificate
     * input properties.
     *
     * @param {string} [renewCertificateParameter.properties.renewCertificateType]
     * Renew certificate type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Fabric>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    renewCertificateWithHttpOperationResponse(fabricName: string, renewCertificateParameter: models.RenewCertificateInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Fabric>>;

    /**
     * @summary Renews certificate for the fabric.
     *
     * Renews the connection certificate for the ASR replication fabric.
     *
     * @param {string} fabricName fabric name to renew certs for.
     *
     * @param {object} renewCertificateParameter Renew certificate input.
     *
     * @param {object} [renewCertificateParameter.properties] Renew certificate
     * input properties.
     *
     * @param {string} [renewCertificateParameter.properties.renewCertificateType]
     * Renew certificate type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Fabric} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Fabric} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Fabric} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    renewCertificate(fabricName: string, renewCertificateParameter: models.RenewCertificateInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Fabric>;
    renewCertificate(fabricName: string, renewCertificateParameter: models.RenewCertificateInput, callback: ServiceCallback<models.Fabric>): void;
    renewCertificate(fabricName: string, renewCertificateParameter: models.RenewCertificateInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Fabric>): void;


    /**
     * @summary Creates an Azure Site Recovery fabric.
     *
     * The operation to create an Azure Site Recovery fabric (for e.g. Hyper-V
     * site)
     *
     * @param {string} fabricName Name of the ASR fabric.
     *
     * @param {object} input Fabric creation input.
     *
     * @param {object} [input.properties] Fabric creation input.
     *
     * @param {object} [input.properties.customDetails] Fabric provider specific
     * creation input.
     *
     * @param {string} input.properties.customDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Fabric>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateWithHttpOperationResponse(fabricName: string, input: models.FabricCreationInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Fabric>>;

    /**
     * @summary Creates an Azure Site Recovery fabric.
     *
     * The operation to create an Azure Site Recovery fabric (for e.g. Hyper-V
     * site)
     *
     * @param {string} fabricName Name of the ASR fabric.
     *
     * @param {object} input Fabric creation input.
     *
     * @param {object} [input.properties] Fabric creation input.
     *
     * @param {object} [input.properties.customDetails] Fabric provider specific
     * creation input.
     *
     * @param {string} input.properties.customDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Fabric} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Fabric} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Fabric} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreate(fabricName: string, input: models.FabricCreationInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Fabric>;
    beginCreate(fabricName: string, input: models.FabricCreationInput, callback: ServiceCallback<models.Fabric>): void;
    beginCreate(fabricName: string, input: models.FabricCreationInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Fabric>): void;


    /**
     * @summary Purges the site.
     *
     * The operation to purge(force delete) an Azure Site Recovery fabric.
     *
     * @param {string} fabricName ASR fabric to purge.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginPurgeWithHttpOperationResponse(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Purges the site.
     *
     * The operation to purge(force delete) an Azure Site Recovery fabric.
     *
     * @param {string} fabricName ASR fabric to purge.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginPurge(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginPurge(fabricName: string, callback: ServiceCallback<void>): void;
    beginPurge(fabricName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Checks the consistency of the ASR fabric.
     *
     * The operation to perform a consistency check on the fabric.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Fabric>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCheckConsistencyWithHttpOperationResponse(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Fabric>>;

    /**
     * @summary Checks the consistency of the ASR fabric.
     *
     * The operation to perform a consistency check on the fabric.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Fabric} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Fabric} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Fabric} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCheckConsistency(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Fabric>;
    beginCheckConsistency(fabricName: string, callback: ServiceCallback<models.Fabric>): void;
    beginCheckConsistency(fabricName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Fabric>): void;


    /**
     * @summary Migrates the site to AAD.
     *
     * The operation to migrate an Azure Site Recovery fabric to AAD.
     *
     * @param {string} fabricName ASR fabric to migrate.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginMigrateToAadWithHttpOperationResponse(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Migrates the site to AAD.
     *
     * The operation to migrate an Azure Site Recovery fabric to AAD.
     *
     * @param {string} fabricName ASR fabric to migrate.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginMigrateToAad(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginMigrateToAad(fabricName: string, callback: ServiceCallback<void>): void;
    beginMigrateToAad(fabricName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Perform failover of the process server.
     *
     * The operation to move replications from a process server to another process
     * server.
     *
     * @param {string} fabricName The name of the fabric containing the process
     * server.
     *
     * @param {object} failoverProcessServerRequest The input to the failover
     * process server operation.
     *
     * @param {object} [failoverProcessServerRequest.properties] The properties of
     * the PS Failover request.
     *
     * @param {string} [failoverProcessServerRequest.properties.containerName] The
     * container identifier.
     *
     * @param {string}
     * [failoverProcessServerRequest.properties.sourceProcessServerId] The source
     * process server.
     *
     * @param {string}
     * [failoverProcessServerRequest.properties.targetProcessServerId] The new
     * process server.
     *
     * @param {array} [failoverProcessServerRequest.properties.vmsToMigrate] The
     * VMS to migrate.
     *
     * @param {string} [failoverProcessServerRequest.properties.updateType] A value
     * for failover type. It can be systemlevel/serverlevel
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Fabric>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginReassociateGatewayWithHttpOperationResponse(fabricName: string, failoverProcessServerRequest: models.FailoverProcessServerRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Fabric>>;

    /**
     * @summary Perform failover of the process server.
     *
     * The operation to move replications from a process server to another process
     * server.
     *
     * @param {string} fabricName The name of the fabric containing the process
     * server.
     *
     * @param {object} failoverProcessServerRequest The input to the failover
     * process server operation.
     *
     * @param {object} [failoverProcessServerRequest.properties] The properties of
     * the PS Failover request.
     *
     * @param {string} [failoverProcessServerRequest.properties.containerName] The
     * container identifier.
     *
     * @param {string}
     * [failoverProcessServerRequest.properties.sourceProcessServerId] The source
     * process server.
     *
     * @param {string}
     * [failoverProcessServerRequest.properties.targetProcessServerId] The new
     * process server.
     *
     * @param {array} [failoverProcessServerRequest.properties.vmsToMigrate] The
     * VMS to migrate.
     *
     * @param {string} [failoverProcessServerRequest.properties.updateType] A value
     * for failover type. It can be systemlevel/serverlevel
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Fabric} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Fabric} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Fabric} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginReassociateGateway(fabricName: string, failoverProcessServerRequest: models.FailoverProcessServerRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Fabric>;
    beginReassociateGateway(fabricName: string, failoverProcessServerRequest: models.FailoverProcessServerRequest, callback: ServiceCallback<models.Fabric>): void;
    beginReassociateGateway(fabricName: string, failoverProcessServerRequest: models.FailoverProcessServerRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Fabric>): void;


    /**
     * @summary Deletes the site.
     *
     * The operation to delete or remove an Azure Site Recovery fabric.
     *
     * @param {string} fabricName ASR fabric to delete
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Deletes the site.
     *
     * The operation to delete or remove an Azure Site Recovery fabric.
     *
     * @param {string} fabricName ASR fabric to delete
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(fabricName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(fabricName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Renews certificate for the fabric.
     *
     * Renews the connection certificate for the ASR replication fabric.
     *
     * @param {string} fabricName fabric name to renew certs for.
     *
     * @param {object} renewCertificateParameter Renew certificate input.
     *
     * @param {object} [renewCertificateParameter.properties] Renew certificate
     * input properties.
     *
     * @param {string} [renewCertificateParameter.properties.renewCertificateType]
     * Renew certificate type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Fabric>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginRenewCertificateWithHttpOperationResponse(fabricName: string, renewCertificateParameter: models.RenewCertificateInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Fabric>>;

    /**
     * @summary Renews certificate for the fabric.
     *
     * Renews the connection certificate for the ASR replication fabric.
     *
     * @param {string} fabricName fabric name to renew certs for.
     *
     * @param {object} renewCertificateParameter Renew certificate input.
     *
     * @param {object} [renewCertificateParameter.properties] Renew certificate
     * input properties.
     *
     * @param {string} [renewCertificateParameter.properties.renewCertificateType]
     * Renew certificate type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Fabric} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Fabric} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Fabric} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginRenewCertificate(fabricName: string, renewCertificateParameter: models.RenewCertificateInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Fabric>;
    beginRenewCertificate(fabricName: string, renewCertificateParameter: models.RenewCertificateInput, callback: ServiceCallback<models.Fabric>): void;
    beginRenewCertificate(fabricName: string, renewCertificateParameter: models.RenewCertificateInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Fabric>): void;


    /**
     * @summary Gets the list of ASR fabrics
     *
     * Gets a list of the Azure Site Recovery fabrics in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FabricCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FabricCollection>>;

    /**
     * @summary Gets the list of ASR fabrics
     *
     * Gets a list of the Azure Site Recovery fabrics in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FabricCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FabricCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FabricCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FabricCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.FabricCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FabricCollection>): void;
}

/**
 * @class
 * ReplicationLogicalNetworks
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationLogicalNetworks {


    /**
     * @summary Gets the list of logical networks under a fabric.
     *
     * Lists all the logical networks of the Azure Site Recovery fabric
     *
     * @param {string} fabricName Server Id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<LogicalNetworkCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationFabricsWithHttpOperationResponse(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.LogicalNetworkCollection>>;

    /**
     * @summary Gets the list of logical networks under a fabric.
     *
     * Lists all the logical networks of the Azure Site Recovery fabric
     *
     * @param {string} fabricName Server Id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {LogicalNetworkCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {LogicalNetworkCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link LogicalNetworkCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationFabrics(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.LogicalNetworkCollection>;
    listByReplicationFabrics(fabricName: string, callback: ServiceCallback<models.LogicalNetworkCollection>): void;
    listByReplicationFabrics(fabricName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LogicalNetworkCollection>): void;


    /**
     * @summary Gets a logical network with specified server id and logical network
     * name.
     *
     * Gets the details of a logical network.
     *
     * @param {string} fabricName Server Id.
     *
     * @param {string} logicalNetworkName Logical network name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<LogicalNetwork>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(fabricName: string, logicalNetworkName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.LogicalNetwork>>;

    /**
     * @summary Gets a logical network with specified server id and logical network
     * name.
     *
     * Gets the details of a logical network.
     *
     * @param {string} fabricName Server Id.
     *
     * @param {string} logicalNetworkName Logical network name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {LogicalNetwork} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {LogicalNetwork} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link LogicalNetwork} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(fabricName: string, logicalNetworkName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.LogicalNetwork>;
    get(fabricName: string, logicalNetworkName: string, callback: ServiceCallback<models.LogicalNetwork>): void;
    get(fabricName: string, logicalNetworkName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LogicalNetwork>): void;


    /**
     * @summary Gets the list of logical networks under a fabric.
     *
     * Lists all the logical networks of the Azure Site Recovery fabric
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<LogicalNetworkCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationFabricsNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.LogicalNetworkCollection>>;

    /**
     * @summary Gets the list of logical networks under a fabric.
     *
     * Lists all the logical networks of the Azure Site Recovery fabric
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {LogicalNetworkCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {LogicalNetworkCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link LogicalNetworkCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationFabricsNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.LogicalNetworkCollection>;
    listByReplicationFabricsNext(nextPageLink: string, callback: ServiceCallback<models.LogicalNetworkCollection>): void;
    listByReplicationFabricsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LogicalNetworkCollection>): void;
}

/**
 * @class
 * ReplicationNetworks
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationNetworks {


    /**
     * @summary Gets the list of networks under a fabric.
     *
     * Lists the networks available for a fabric.
     *
     * @param {string} fabricName Fabric name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationFabricsWithHttpOperationResponse(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkCollection>>;

    /**
     * @summary Gets the list of networks under a fabric.
     *
     * Lists the networks available for a fabric.
     *
     * @param {string} fabricName Fabric name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationFabrics(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkCollection>;
    listByReplicationFabrics(fabricName: string, callback: ServiceCallback<models.NetworkCollection>): void;
    listByReplicationFabrics(fabricName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkCollection>): void;


    /**
     * @summary Gets a network with specified server id and network name.
     *
     * Gets the details of a network.
     *
     * @param {string} fabricName Server Id.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Network>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(fabricName: string, networkName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Network>>;

    /**
     * @summary Gets a network with specified server id and network name.
     *
     * Gets the details of a network.
     *
     * @param {string} fabricName Server Id.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Network} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Network} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Network} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(fabricName: string, networkName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Network>;
    get(fabricName: string, networkName: string, callback: ServiceCallback<models.Network>): void;
    get(fabricName: string, networkName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Network>): void;


    /**
     * @summary Gets the list of networks. View-only API.
     *
     * Lists the networks available in a vault
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkCollection>>;

    /**
     * @summary Gets the list of networks. View-only API.
     *
     * Lists the networks available in a vault
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkCollection>;
    list(callback: ServiceCallback<models.NetworkCollection>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkCollection>): void;


    /**
     * @summary Gets the list of networks under a fabric.
     *
     * Lists the networks available for a fabric.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationFabricsNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkCollection>>;

    /**
     * @summary Gets the list of networks under a fabric.
     *
     * Lists the networks available for a fabric.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationFabricsNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkCollection>;
    listByReplicationFabricsNext(nextPageLink: string, callback: ServiceCallback<models.NetworkCollection>): void;
    listByReplicationFabricsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkCollection>): void;


    /**
     * @summary Gets the list of networks. View-only API.
     *
     * Lists the networks available in a vault
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkCollection>>;

    /**
     * @summary Gets the list of networks. View-only API.
     *
     * Lists the networks available in a vault
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.NetworkCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkCollection>): void;
}

/**
 * @class
 * ReplicationNetworkMappings
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationNetworkMappings {


    /**
     * @summary Gets all the network mappings under a network.
     *
     * Lists all ASR network mappings for the specified network.
     *
     * @param {string} fabricName Primary fabric name.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkMappingCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationNetworksWithHttpOperationResponse(fabricName: string, networkName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkMappingCollection>>;

    /**
     * @summary Gets all the network mappings under a network.
     *
     * Lists all ASR network mappings for the specified network.
     *
     * @param {string} fabricName Primary fabric name.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkMappingCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkMappingCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkMappingCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationNetworks(fabricName: string, networkName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkMappingCollection>;
    listByReplicationNetworks(fabricName: string, networkName: string, callback: ServiceCallback<models.NetworkMappingCollection>): void;
    listByReplicationNetworks(fabricName: string, networkName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkMappingCollection>): void;


    /**
     * @summary Gets network mapping by name.
     *
     * Gets the details of an ASR network mapping
     *
     * @param {string} fabricName Primary fabric name.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {string} networkMappingName Network mapping name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkMapping>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(fabricName: string, networkName: string, networkMappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkMapping>>;

    /**
     * @summary Gets network mapping by name.
     *
     * Gets the details of an ASR network mapping
     *
     * @param {string} fabricName Primary fabric name.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {string} networkMappingName Network mapping name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkMapping} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkMapping} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkMapping} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(fabricName: string, networkName: string, networkMappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkMapping>;
    get(fabricName: string, networkName: string, networkMappingName: string, callback: ServiceCallback<models.NetworkMapping>): void;
    get(fabricName: string, networkName: string, networkMappingName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkMapping>): void;


    /**
     * @summary Creates network mapping.
     *
     * The operation to create an ASR network mapping.
     *
     * @param {string} fabricName Primary fabric name.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {string} networkMappingName Network mapping name.
     *
     * @param {object} input Create network mapping input.
     *
     * @param {object} [input.properties] Input properties for creating network
     * mapping.
     *
     * @param {string} [input.properties.recoveryFabricName] Recovery fabric Name.
     *
     * @param {string} [input.properties.recoveryNetworkId] Recovery network Id.
     *
     * @param {object} [input.properties.fabricSpecificDetails] Fabric specific
     * input properties.
     *
     * @param {string} input.properties.fabricSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkMapping>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(fabricName: string, networkName: string, networkMappingName: string, input: models.CreateNetworkMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkMapping>>;

    /**
     * @summary Creates network mapping.
     *
     * The operation to create an ASR network mapping.
     *
     * @param {string} fabricName Primary fabric name.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {string} networkMappingName Network mapping name.
     *
     * @param {object} input Create network mapping input.
     *
     * @param {object} [input.properties] Input properties for creating network
     * mapping.
     *
     * @param {string} [input.properties.recoveryFabricName] Recovery fabric Name.
     *
     * @param {string} [input.properties.recoveryNetworkId] Recovery network Id.
     *
     * @param {object} [input.properties.fabricSpecificDetails] Fabric specific
     * input properties.
     *
     * @param {string} input.properties.fabricSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkMapping} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkMapping} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkMapping} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(fabricName: string, networkName: string, networkMappingName: string, input: models.CreateNetworkMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkMapping>;
    create(fabricName: string, networkName: string, networkMappingName: string, input: models.CreateNetworkMappingInput, callback: ServiceCallback<models.NetworkMapping>): void;
    create(fabricName: string, networkName: string, networkMappingName: string, input: models.CreateNetworkMappingInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkMapping>): void;


    /**
     * @summary Delete network mapping.
     *
     * The operation to delete a network mapping.
     *
     * @param {string} fabricName Primary fabric name.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {string} networkMappingName ARM Resource Name for network mapping.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(fabricName: string, networkName: string, networkMappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Delete network mapping.
     *
     * The operation to delete a network mapping.
     *
     * @param {string} fabricName Primary fabric name.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {string} networkMappingName ARM Resource Name for network mapping.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(fabricName: string, networkName: string, networkMappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(fabricName: string, networkName: string, networkMappingName: string, callback: ServiceCallback<void>): void;
    deleteMethod(fabricName: string, networkName: string, networkMappingName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Updates network mapping.
     *
     * The operation to update an ASR network mapping.
     *
     * @param {string} fabricName Primary fabric name.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {string} networkMappingName Network mapping name.
     *
     * @param {object} input Update network mapping input.
     *
     * @param {object} [input.properties] The input properties needed to update
     * network mapping.
     *
     * @param {string} [input.properties.recoveryFabricName] Recovery fabric name.
     *
     * @param {string} [input.properties.recoveryNetworkId] Recovery network Id.
     *
     * @param {object} [input.properties.fabricSpecificDetails] Fabrics specific
     * input network Id.
     *
     * @param {string} input.properties.fabricSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkMapping>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(fabricName: string, networkName: string, networkMappingName: string, input: models.UpdateNetworkMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkMapping>>;

    /**
     * @summary Updates network mapping.
     *
     * The operation to update an ASR network mapping.
     *
     * @param {string} fabricName Primary fabric name.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {string} networkMappingName Network mapping name.
     *
     * @param {object} input Update network mapping input.
     *
     * @param {object} [input.properties] The input properties needed to update
     * network mapping.
     *
     * @param {string} [input.properties.recoveryFabricName] Recovery fabric name.
     *
     * @param {string} [input.properties.recoveryNetworkId] Recovery network Id.
     *
     * @param {object} [input.properties.fabricSpecificDetails] Fabrics specific
     * input network Id.
     *
     * @param {string} input.properties.fabricSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkMapping} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkMapping} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkMapping} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(fabricName: string, networkName: string, networkMappingName: string, input: models.UpdateNetworkMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkMapping>;
    update(fabricName: string, networkName: string, networkMappingName: string, input: models.UpdateNetworkMappingInput, callback: ServiceCallback<models.NetworkMapping>): void;
    update(fabricName: string, networkName: string, networkMappingName: string, input: models.UpdateNetworkMappingInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkMapping>): void;


    /**
     * @summary Gets all the network mappings under a vault.
     *
     * Lists all ASR network mappings in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkMappingCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkMappingCollection>>;

    /**
     * @summary Gets all the network mappings under a vault.
     *
     * Lists all ASR network mappings in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkMappingCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkMappingCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkMappingCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkMappingCollection>;
    list(callback: ServiceCallback<models.NetworkMappingCollection>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkMappingCollection>): void;


    /**
     * @summary Creates network mapping.
     *
     * The operation to create an ASR network mapping.
     *
     * @param {string} fabricName Primary fabric name.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {string} networkMappingName Network mapping name.
     *
     * @param {object} input Create network mapping input.
     *
     * @param {object} [input.properties] Input properties for creating network
     * mapping.
     *
     * @param {string} [input.properties.recoveryFabricName] Recovery fabric Name.
     *
     * @param {string} [input.properties.recoveryNetworkId] Recovery network Id.
     *
     * @param {object} [input.properties.fabricSpecificDetails] Fabric specific
     * input properties.
     *
     * @param {string} input.properties.fabricSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkMapping>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateWithHttpOperationResponse(fabricName: string, networkName: string, networkMappingName: string, input: models.CreateNetworkMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkMapping>>;

    /**
     * @summary Creates network mapping.
     *
     * The operation to create an ASR network mapping.
     *
     * @param {string} fabricName Primary fabric name.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {string} networkMappingName Network mapping name.
     *
     * @param {object} input Create network mapping input.
     *
     * @param {object} [input.properties] Input properties for creating network
     * mapping.
     *
     * @param {string} [input.properties.recoveryFabricName] Recovery fabric Name.
     *
     * @param {string} [input.properties.recoveryNetworkId] Recovery network Id.
     *
     * @param {object} [input.properties.fabricSpecificDetails] Fabric specific
     * input properties.
     *
     * @param {string} input.properties.fabricSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkMapping} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkMapping} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkMapping} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreate(fabricName: string, networkName: string, networkMappingName: string, input: models.CreateNetworkMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkMapping>;
    beginCreate(fabricName: string, networkName: string, networkMappingName: string, input: models.CreateNetworkMappingInput, callback: ServiceCallback<models.NetworkMapping>): void;
    beginCreate(fabricName: string, networkName: string, networkMappingName: string, input: models.CreateNetworkMappingInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkMapping>): void;


    /**
     * @summary Delete network mapping.
     *
     * The operation to delete a network mapping.
     *
     * @param {string} fabricName Primary fabric name.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {string} networkMappingName ARM Resource Name for network mapping.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(fabricName: string, networkName: string, networkMappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Delete network mapping.
     *
     * The operation to delete a network mapping.
     *
     * @param {string} fabricName Primary fabric name.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {string} networkMappingName ARM Resource Name for network mapping.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(fabricName: string, networkName: string, networkMappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(fabricName: string, networkName: string, networkMappingName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(fabricName: string, networkName: string, networkMappingName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Updates network mapping.
     *
     * The operation to update an ASR network mapping.
     *
     * @param {string} fabricName Primary fabric name.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {string} networkMappingName Network mapping name.
     *
     * @param {object} input Update network mapping input.
     *
     * @param {object} [input.properties] The input properties needed to update
     * network mapping.
     *
     * @param {string} [input.properties.recoveryFabricName] Recovery fabric name.
     *
     * @param {string} [input.properties.recoveryNetworkId] Recovery network Id.
     *
     * @param {object} [input.properties.fabricSpecificDetails] Fabrics specific
     * input network Id.
     *
     * @param {string} input.properties.fabricSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkMapping>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(fabricName: string, networkName: string, networkMappingName: string, input: models.UpdateNetworkMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkMapping>>;

    /**
     * @summary Updates network mapping.
     *
     * The operation to update an ASR network mapping.
     *
     * @param {string} fabricName Primary fabric name.
     *
     * @param {string} networkName Primary network name.
     *
     * @param {string} networkMappingName Network mapping name.
     *
     * @param {object} input Update network mapping input.
     *
     * @param {object} [input.properties] The input properties needed to update
     * network mapping.
     *
     * @param {string} [input.properties.recoveryFabricName] Recovery fabric name.
     *
     * @param {string} [input.properties.recoveryNetworkId] Recovery network Id.
     *
     * @param {object} [input.properties.fabricSpecificDetails] Fabrics specific
     * input network Id.
     *
     * @param {string} input.properties.fabricSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkMapping} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkMapping} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkMapping} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(fabricName: string, networkName: string, networkMappingName: string, input: models.UpdateNetworkMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkMapping>;
    beginUpdate(fabricName: string, networkName: string, networkMappingName: string, input: models.UpdateNetworkMappingInput, callback: ServiceCallback<models.NetworkMapping>): void;
    beginUpdate(fabricName: string, networkName: string, networkMappingName: string, input: models.UpdateNetworkMappingInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkMapping>): void;


    /**
     * @summary Gets all the network mappings under a network.
     *
     * Lists all ASR network mappings for the specified network.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkMappingCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationNetworksNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkMappingCollection>>;

    /**
     * @summary Gets all the network mappings under a network.
     *
     * Lists all ASR network mappings for the specified network.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkMappingCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkMappingCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkMappingCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationNetworksNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkMappingCollection>;
    listByReplicationNetworksNext(nextPageLink: string, callback: ServiceCallback<models.NetworkMappingCollection>): void;
    listByReplicationNetworksNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkMappingCollection>): void;


    /**
     * @summary Gets all the network mappings under a vault.
     *
     * Lists all ASR network mappings in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<NetworkMappingCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.NetworkMappingCollection>>;

    /**
     * @summary Gets all the network mappings under a vault.
     *
     * Lists all ASR network mappings in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {NetworkMappingCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {NetworkMappingCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link NetworkMappingCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.NetworkMappingCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.NetworkMappingCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.NetworkMappingCollection>): void;
}

/**
 * @class
 * ReplicationProtectionContainers
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationProtectionContainers {


    /**
     * @summary Gets the list of protection container for a fabric.
     *
     * Lists the protection containers in the specified fabric.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationFabricsWithHttpOperationResponse(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerCollection>>;

    /**
     * @summary Gets the list of protection container for a fabric.
     *
     * Lists the protection containers in the specified fabric.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationFabrics(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerCollection>;
    listByReplicationFabrics(fabricName: string, callback: ServiceCallback<models.ProtectionContainerCollection>): void;
    listByReplicationFabrics(fabricName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerCollection>): void;


    /**
     * @summary Gets the protection container details.
     *
     * Gets the details of a protection container.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainer>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(fabricName: string, protectionContainerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainer>>;

    /**
     * @summary Gets the protection container details.
     *
     * Gets the details of a protection container.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainer} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainer} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainer} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(fabricName: string, protectionContainerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainer>;
    get(fabricName: string, protectionContainerName: string, callback: ServiceCallback<models.ProtectionContainer>): void;
    get(fabricName: string, protectionContainerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainer>): void;


    /**
     * @summary Create a protection container.
     *
     * Operation to create a protection container.
     *
     * @param {string} fabricName Unique fabric ARM name.
     *
     * @param {string} protectionContainerName Unique protection container ARM
     * name.
     *
     * @param {object} creationInput Creation input.
     *
     * @param {object} [creationInput.properties] Create protection container input
     * properties.
     *
     * @param {array} [creationInput.properties.providerSpecificInput] Provider
     * specific inputs for container creation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainer>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(fabricName: string, protectionContainerName: string, creationInput: models.CreateProtectionContainerInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainer>>;

    /**
     * @summary Create a protection container.
     *
     * Operation to create a protection container.
     *
     * @param {string} fabricName Unique fabric ARM name.
     *
     * @param {string} protectionContainerName Unique protection container ARM
     * name.
     *
     * @param {object} creationInput Creation input.
     *
     * @param {object} [creationInput.properties] Create protection container input
     * properties.
     *
     * @param {array} [creationInput.properties.providerSpecificInput] Provider
     * specific inputs for container creation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainer} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainer} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainer} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(fabricName: string, protectionContainerName: string, creationInput: models.CreateProtectionContainerInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainer>;
    create(fabricName: string, protectionContainerName: string, creationInput: models.CreateProtectionContainerInput, callback: ServiceCallback<models.ProtectionContainer>): void;
    create(fabricName: string, protectionContainerName: string, creationInput: models.CreateProtectionContainerInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainer>): void;


    /**
     * @summary Adds a protectable item to the replication protection container.
     *
     * The operation to a add a protectable item to a protection container(Add
     * physical server.)
     *
     * @param {string} fabricName The name of the fabric.
     *
     * @param {string} protectionContainerName The name of the protection
     * container.
     *
     * @param {object} discoverProtectableItemRequest The request object to add a
     * protectable item.
     *
     * @param {object} [discoverProtectableItemRequest.properties] The properties
     * of a discover protectable item request.
     *
     * @param {string} [discoverProtectableItemRequest.properties.friendlyName] The
     * friendly name of the physical machine.
     *
     * @param {string} [discoverProtectableItemRequest.properties.ipAddress] The IP
     * address of the physical machine to be discovered.
     *
     * @param {string} [discoverProtectableItemRequest.properties.osType] The OS
     * type on the physical machine.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainer>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    discoverProtectableItemWithHttpOperationResponse(fabricName: string, protectionContainerName: string, discoverProtectableItemRequest: models.DiscoverProtectableItemRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainer>>;

    /**
     * @summary Adds a protectable item to the replication protection container.
     *
     * The operation to a add a protectable item to a protection container(Add
     * physical server.)
     *
     * @param {string} fabricName The name of the fabric.
     *
     * @param {string} protectionContainerName The name of the protection
     * container.
     *
     * @param {object} discoverProtectableItemRequest The request object to add a
     * protectable item.
     *
     * @param {object} [discoverProtectableItemRequest.properties] The properties
     * of a discover protectable item request.
     *
     * @param {string} [discoverProtectableItemRequest.properties.friendlyName] The
     * friendly name of the physical machine.
     *
     * @param {string} [discoverProtectableItemRequest.properties.ipAddress] The IP
     * address of the physical machine to be discovered.
     *
     * @param {string} [discoverProtectableItemRequest.properties.osType] The OS
     * type on the physical machine.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainer} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainer} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainer} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    discoverProtectableItem(fabricName: string, protectionContainerName: string, discoverProtectableItemRequest: models.DiscoverProtectableItemRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainer>;
    discoverProtectableItem(fabricName: string, protectionContainerName: string, discoverProtectableItemRequest: models.DiscoverProtectableItemRequest, callback: ServiceCallback<models.ProtectionContainer>): void;
    discoverProtectableItem(fabricName: string, protectionContainerName: string, discoverProtectableItemRequest: models.DiscoverProtectableItemRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainer>): void;


    /**
     * @summary Removes a protection container.
     *
     * Operation to remove a protection container.
     *
     * @param {string} fabricName Unique fabric ARM name.
     *
     * @param {string} protectionContainerName Unique protection container ARM
     * name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(fabricName: string, protectionContainerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Removes a protection container.
     *
     * Operation to remove a protection container.
     *
     * @param {string} fabricName Unique fabric ARM name.
     *
     * @param {string} protectionContainerName Unique protection container ARM
     * name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(fabricName: string, protectionContainerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(fabricName: string, protectionContainerName: string, callback: ServiceCallback<void>): void;
    deleteMethod(fabricName: string, protectionContainerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Switches protection from one container to another or one
     * replication provider to another.
     *
     * Operation to switch protection from one container to another or one
     * replication provider to another.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {object} switchInput Switch protection input.
     *
     * @param {object} [switchInput.properties] Switch protection properties
     *
     * @param {string} [switchInput.properties.replicationProtectedItemName] The
     * unique replication protected item name.
     *
     * @param {object} [switchInput.properties.providerSpecificDetails] Provider
     * specific switch protection input.
     *
     * @param {string} switchInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainer>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    switchProtectionWithHttpOperationResponse(fabricName: string, protectionContainerName: string, switchInput: models.SwitchProtectionInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainer>>;

    /**
     * @summary Switches protection from one container to another or one
     * replication provider to another.
     *
     * Operation to switch protection from one container to another or one
     * replication provider to another.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {object} switchInput Switch protection input.
     *
     * @param {object} [switchInput.properties] Switch protection properties
     *
     * @param {string} [switchInput.properties.replicationProtectedItemName] The
     * unique replication protected item name.
     *
     * @param {object} [switchInput.properties.providerSpecificDetails] Provider
     * specific switch protection input.
     *
     * @param {string} switchInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainer} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainer} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainer} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    switchProtection(fabricName: string, protectionContainerName: string, switchInput: models.SwitchProtectionInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainer>;
    switchProtection(fabricName: string, protectionContainerName: string, switchInput: models.SwitchProtectionInput, callback: ServiceCallback<models.ProtectionContainer>): void;
    switchProtection(fabricName: string, protectionContainerName: string, switchInput: models.SwitchProtectionInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainer>): void;


    /**
     * @summary Gets the list of all protection containers in a vault.
     *
     * Lists the protection containers in a vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerCollection>>;

    /**
     * @summary Gets the list of all protection containers in a vault.
     *
     * Lists the protection containers in a vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerCollection>;
    list(callback: ServiceCallback<models.ProtectionContainerCollection>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerCollection>): void;


    /**
     * @summary Create a protection container.
     *
     * Operation to create a protection container.
     *
     * @param {string} fabricName Unique fabric ARM name.
     *
     * @param {string} protectionContainerName Unique protection container ARM
     * name.
     *
     * @param {object} creationInput Creation input.
     *
     * @param {object} [creationInput.properties] Create protection container input
     * properties.
     *
     * @param {array} [creationInput.properties.providerSpecificInput] Provider
     * specific inputs for container creation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainer>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateWithHttpOperationResponse(fabricName: string, protectionContainerName: string, creationInput: models.CreateProtectionContainerInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainer>>;

    /**
     * @summary Create a protection container.
     *
     * Operation to create a protection container.
     *
     * @param {string} fabricName Unique fabric ARM name.
     *
     * @param {string} protectionContainerName Unique protection container ARM
     * name.
     *
     * @param {object} creationInput Creation input.
     *
     * @param {object} [creationInput.properties] Create protection container input
     * properties.
     *
     * @param {array} [creationInput.properties.providerSpecificInput] Provider
     * specific inputs for container creation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainer} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainer} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainer} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreate(fabricName: string, protectionContainerName: string, creationInput: models.CreateProtectionContainerInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainer>;
    beginCreate(fabricName: string, protectionContainerName: string, creationInput: models.CreateProtectionContainerInput, callback: ServiceCallback<models.ProtectionContainer>): void;
    beginCreate(fabricName: string, protectionContainerName: string, creationInput: models.CreateProtectionContainerInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainer>): void;


    /**
     * @summary Adds a protectable item to the replication protection container.
     *
     * The operation to a add a protectable item to a protection container(Add
     * physical server.)
     *
     * @param {string} fabricName The name of the fabric.
     *
     * @param {string} protectionContainerName The name of the protection
     * container.
     *
     * @param {object} discoverProtectableItemRequest The request object to add a
     * protectable item.
     *
     * @param {object} [discoverProtectableItemRequest.properties] The properties
     * of a discover protectable item request.
     *
     * @param {string} [discoverProtectableItemRequest.properties.friendlyName] The
     * friendly name of the physical machine.
     *
     * @param {string} [discoverProtectableItemRequest.properties.ipAddress] The IP
     * address of the physical machine to be discovered.
     *
     * @param {string} [discoverProtectableItemRequest.properties.osType] The OS
     * type on the physical machine.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainer>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDiscoverProtectableItemWithHttpOperationResponse(fabricName: string, protectionContainerName: string, discoverProtectableItemRequest: models.DiscoverProtectableItemRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainer>>;

    /**
     * @summary Adds a protectable item to the replication protection container.
     *
     * The operation to a add a protectable item to a protection container(Add
     * physical server.)
     *
     * @param {string} fabricName The name of the fabric.
     *
     * @param {string} protectionContainerName The name of the protection
     * container.
     *
     * @param {object} discoverProtectableItemRequest The request object to add a
     * protectable item.
     *
     * @param {object} [discoverProtectableItemRequest.properties] The properties
     * of a discover protectable item request.
     *
     * @param {string} [discoverProtectableItemRequest.properties.friendlyName] The
     * friendly name of the physical machine.
     *
     * @param {string} [discoverProtectableItemRequest.properties.ipAddress] The IP
     * address of the physical machine to be discovered.
     *
     * @param {string} [discoverProtectableItemRequest.properties.osType] The OS
     * type on the physical machine.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainer} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainer} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainer} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDiscoverProtectableItem(fabricName: string, protectionContainerName: string, discoverProtectableItemRequest: models.DiscoverProtectableItemRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainer>;
    beginDiscoverProtectableItem(fabricName: string, protectionContainerName: string, discoverProtectableItemRequest: models.DiscoverProtectableItemRequest, callback: ServiceCallback<models.ProtectionContainer>): void;
    beginDiscoverProtectableItem(fabricName: string, protectionContainerName: string, discoverProtectableItemRequest: models.DiscoverProtectableItemRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainer>): void;


    /**
     * @summary Removes a protection container.
     *
     * Operation to remove a protection container.
     *
     * @param {string} fabricName Unique fabric ARM name.
     *
     * @param {string} protectionContainerName Unique protection container ARM
     * name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(fabricName: string, protectionContainerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Removes a protection container.
     *
     * Operation to remove a protection container.
     *
     * @param {string} fabricName Unique fabric ARM name.
     *
     * @param {string} protectionContainerName Unique protection container ARM
     * name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(fabricName: string, protectionContainerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(fabricName: string, protectionContainerName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(fabricName: string, protectionContainerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Switches protection from one container to another or one
     * replication provider to another.
     *
     * Operation to switch protection from one container to another or one
     * replication provider to another.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {object} switchInput Switch protection input.
     *
     * @param {object} [switchInput.properties] Switch protection properties
     *
     * @param {string} [switchInput.properties.replicationProtectedItemName] The
     * unique replication protected item name.
     *
     * @param {object} [switchInput.properties.providerSpecificDetails] Provider
     * specific switch protection input.
     *
     * @param {string} switchInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainer>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginSwitchProtectionWithHttpOperationResponse(fabricName: string, protectionContainerName: string, switchInput: models.SwitchProtectionInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainer>>;

    /**
     * @summary Switches protection from one container to another or one
     * replication provider to another.
     *
     * Operation to switch protection from one container to another or one
     * replication provider to another.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {object} switchInput Switch protection input.
     *
     * @param {object} [switchInput.properties] Switch protection properties
     *
     * @param {string} [switchInput.properties.replicationProtectedItemName] The
     * unique replication protected item name.
     *
     * @param {object} [switchInput.properties.providerSpecificDetails] Provider
     * specific switch protection input.
     *
     * @param {string} switchInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainer} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainer} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainer} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginSwitchProtection(fabricName: string, protectionContainerName: string, switchInput: models.SwitchProtectionInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainer>;
    beginSwitchProtection(fabricName: string, protectionContainerName: string, switchInput: models.SwitchProtectionInput, callback: ServiceCallback<models.ProtectionContainer>): void;
    beginSwitchProtection(fabricName: string, protectionContainerName: string, switchInput: models.SwitchProtectionInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainer>): void;


    /**
     * @summary Gets the list of protection container for a fabric.
     *
     * Lists the protection containers in the specified fabric.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationFabricsNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerCollection>>;

    /**
     * @summary Gets the list of protection container for a fabric.
     *
     * Lists the protection containers in the specified fabric.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationFabricsNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerCollection>;
    listByReplicationFabricsNext(nextPageLink: string, callback: ServiceCallback<models.ProtectionContainerCollection>): void;
    listByReplicationFabricsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerCollection>): void;


    /**
     * @summary Gets the list of all protection containers in a vault.
     *
     * Lists the protection containers in a vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerCollection>>;

    /**
     * @summary Gets the list of all protection containers in a vault.
     *
     * Lists the protection containers in a vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ProtectionContainerCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerCollection>): void;
}

/**
 * @class
 * ReplicationMigrationItems
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationMigrationItems {


    /**
     * @summary Gets the list of migration items in the protection container.
     *
     * Gets the list of ASR migration items in the protection container.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationItemCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationProtectionContainersWithHttpOperationResponse(fabricName: string, protectionContainerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationItemCollection>>;

    /**
     * @summary Gets the list of migration items in the protection container.
     *
     * Gets the list of ASR migration items in the protection container.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationItemCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationItemCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationItemCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationProtectionContainers(fabricName: string, protectionContainerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationItemCollection>;
    listByReplicationProtectionContainers(fabricName: string, protectionContainerName: string, callback: ServiceCallback<models.MigrationItemCollection>): void;
    listByReplicationProtectionContainers(fabricName: string, protectionContainerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationItemCollection>): void;


    /**
     * @summary Gets the details of a migration item.
     *
     * @param {string} fabricName Fabric unique name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(fabricName: string, protectionContainerName: string, migrationItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationItem>>;

    /**
     * @summary Gets the details of a migration item.
     *
     * @param {string} fabricName Fabric unique name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationItem} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(fabricName: string, protectionContainerName: string, migrationItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationItem>;
    get(fabricName: string, protectionContainerName: string, migrationItemName: string, callback: ServiceCallback<models.MigrationItem>): void;
    get(fabricName: string, protectionContainerName: string, migrationItemName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationItem>): void;


    /**
     * @summary Enables migration.
     *
     * The operation to create an ASR migration item (enable migration).
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} input Enable migration input.
     *
     * @param {object} input.properties Enable migration input properties.
     *
     * @param {string} input.properties.policyId The policy Id.
     *
     * @param {object} input.properties.providerSpecificDetails The provider
     * specific details.
     *
     * @param {string} input.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(fabricName: string, protectionContainerName: string, migrationItemName: string, input: models.EnableMigrationInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationItem>>;

    /**
     * @summary Enables migration.
     *
     * The operation to create an ASR migration item (enable migration).
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} input Enable migration input.
     *
     * @param {object} input.properties Enable migration input properties.
     *
     * @param {string} input.properties.policyId The policy Id.
     *
     * @param {object} input.properties.providerSpecificDetails The provider
     * specific details.
     *
     * @param {string} input.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationItem} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(fabricName: string, protectionContainerName: string, migrationItemName: string, input: models.EnableMigrationInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationItem>;
    create(fabricName: string, protectionContainerName: string, migrationItemName: string, input: models.EnableMigrationInput, callback: ServiceCallback<models.MigrationItem>): void;
    create(fabricName: string, protectionContainerName: string, migrationItemName: string, input: models.EnableMigrationInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationItem>): void;


    /**
     * @summary Delete the migration item.
     *
     * The operation to delete an ASR migration item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.deleteOption] The delete option.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(fabricName: string, protectionContainerName: string, migrationItemName: string, options?: { deleteOption? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Delete the migration item.
     *
     * The operation to delete an ASR migration item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.deleteOption] The delete option.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(fabricName: string, protectionContainerName: string, migrationItemName: string, options?: { deleteOption? : string, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(fabricName: string, protectionContainerName: string, migrationItemName: string, callback: ServiceCallback<void>): void;
    deleteMethod(fabricName: string, protectionContainerName: string, migrationItemName: string, options: { deleteOption? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Updates migration item.
     *
     * The operation to update the recovery settings of an ASR migration item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} input Update migration item input.
     *
     * @param {object} [input.properties] Update migration item input properties.
     *
     * @param {object} input.properties.providerSpecificDetails The provider
     * specific input to update migration item.
     *
     * @param {string} input.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(fabricName: string, protectionContainerName: string, migrationItemName: string, input: models.UpdateMigrationItemInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationItem>>;

    /**
     * @summary Updates migration item.
     *
     * The operation to update the recovery settings of an ASR migration item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} input Update migration item input.
     *
     * @param {object} [input.properties] Update migration item input properties.
     *
     * @param {object} input.properties.providerSpecificDetails The provider
     * specific input to update migration item.
     *
     * @param {string} input.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationItem} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(fabricName: string, protectionContainerName: string, migrationItemName: string, input: models.UpdateMigrationItemInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationItem>;
    update(fabricName: string, protectionContainerName: string, migrationItemName: string, input: models.UpdateMigrationItemInput, callback: ServiceCallback<models.MigrationItem>): void;
    update(fabricName: string, protectionContainerName: string, migrationItemName: string, input: models.UpdateMigrationItemInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationItem>): void;


    /**
     * @summary Migrate item.
     *
     * The operation to initiate migration of the item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} migrateInput Migrate input.
     *
     * @param {object} migrateInput.properties Migrate input properties.
     *
     * @param {object} migrateInput.properties.providerSpecificDetails The provider
     * specific details.
     *
     * @param {string} migrateInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    migrateWithHttpOperationResponse(fabricName: string, protectionContainerName: string, migrationItemName: string, migrateInput: models.MigrateInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationItem>>;

    /**
     * @summary Migrate item.
     *
     * The operation to initiate migration of the item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} migrateInput Migrate input.
     *
     * @param {object} migrateInput.properties Migrate input properties.
     *
     * @param {object} migrateInput.properties.providerSpecificDetails The provider
     * specific details.
     *
     * @param {string} migrateInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationItem} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    migrate(fabricName: string, protectionContainerName: string, migrationItemName: string, migrateInput: models.MigrateInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationItem>;
    migrate(fabricName: string, protectionContainerName: string, migrationItemName: string, migrateInput: models.MigrateInput, callback: ServiceCallback<models.MigrationItem>): void;
    migrate(fabricName: string, protectionContainerName: string, migrationItemName: string, migrateInput: models.MigrateInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationItem>): void;


    /**
     * @summary Test migrate item.
     *
     * The operation to initiate test migration of the item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} testMigrateInput Test migrate input.
     *
     * @param {object} testMigrateInput.properties Test migrate input properties.
     *
     * @param {object} testMigrateInput.properties.providerSpecificDetails The
     * provider specific details.
     *
     * @param {string}
     * testMigrateInput.properties.providerSpecificDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    testMigrateWithHttpOperationResponse(fabricName: string, protectionContainerName: string, migrationItemName: string, testMigrateInput: models.TestMigrateInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationItem>>;

    /**
     * @summary Test migrate item.
     *
     * The operation to initiate test migration of the item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} testMigrateInput Test migrate input.
     *
     * @param {object} testMigrateInput.properties Test migrate input properties.
     *
     * @param {object} testMigrateInput.properties.providerSpecificDetails The
     * provider specific details.
     *
     * @param {string}
     * testMigrateInput.properties.providerSpecificDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationItem} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    testMigrate(fabricName: string, protectionContainerName: string, migrationItemName: string, testMigrateInput: models.TestMigrateInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationItem>;
    testMigrate(fabricName: string, protectionContainerName: string, migrationItemName: string, testMigrateInput: models.TestMigrateInput, callback: ServiceCallback<models.MigrationItem>): void;
    testMigrate(fabricName: string, protectionContainerName: string, migrationItemName: string, testMigrateInput: models.TestMigrateInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationItem>): void;


    /**
     * @summary Test migrate cleanup.
     *
     * The operation to initiate test migrate cleanup.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} testMigrateCleanupInput Test migrate cleanup input.
     *
     * @param {object} testMigrateCleanupInput.properties Test migrate cleanup
     * input properties.
     *
     * @param {string} [testMigrateCleanupInput.properties.comments] Test migrate
     * cleanup comments.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    testMigrateCleanupWithHttpOperationResponse(fabricName: string, protectionContainerName: string, migrationItemName: string, testMigrateCleanupInput: models.TestMigrateCleanupInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationItem>>;

    /**
     * @summary Test migrate cleanup.
     *
     * The operation to initiate test migrate cleanup.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} testMigrateCleanupInput Test migrate cleanup input.
     *
     * @param {object} testMigrateCleanupInput.properties Test migrate cleanup
     * input properties.
     *
     * @param {string} [testMigrateCleanupInput.properties.comments] Test migrate
     * cleanup comments.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationItem} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    testMigrateCleanup(fabricName: string, protectionContainerName: string, migrationItemName: string, testMigrateCleanupInput: models.TestMigrateCleanupInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationItem>;
    testMigrateCleanup(fabricName: string, protectionContainerName: string, migrationItemName: string, testMigrateCleanupInput: models.TestMigrateCleanupInput, callback: ServiceCallback<models.MigrationItem>): void;
    testMigrateCleanup(fabricName: string, protectionContainerName: string, migrationItemName: string, testMigrateCleanupInput: models.TestMigrateCleanupInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationItem>): void;


    /**
     * @summary Gets the list of migration items in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.skipToken] The pagination token.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationItemCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { skipToken? : string, filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationItemCollection>>;

    /**
     * @summary Gets the list of migration items in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.skipToken] The pagination token.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationItemCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationItemCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationItemCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { skipToken? : string, filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationItemCollection>;
    list(callback: ServiceCallback<models.MigrationItemCollection>): void;
    list(options: { skipToken? : string, filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationItemCollection>): void;


    /**
     * @summary Enables migration.
     *
     * The operation to create an ASR migration item (enable migration).
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} input Enable migration input.
     *
     * @param {object} input.properties Enable migration input properties.
     *
     * @param {string} input.properties.policyId The policy Id.
     *
     * @param {object} input.properties.providerSpecificDetails The provider
     * specific details.
     *
     * @param {string} input.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateWithHttpOperationResponse(fabricName: string, protectionContainerName: string, migrationItemName: string, input: models.EnableMigrationInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationItem>>;

    /**
     * @summary Enables migration.
     *
     * The operation to create an ASR migration item (enable migration).
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} input Enable migration input.
     *
     * @param {object} input.properties Enable migration input properties.
     *
     * @param {string} input.properties.policyId The policy Id.
     *
     * @param {object} input.properties.providerSpecificDetails The provider
     * specific details.
     *
     * @param {string} input.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationItem} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreate(fabricName: string, protectionContainerName: string, migrationItemName: string, input: models.EnableMigrationInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationItem>;
    beginCreate(fabricName: string, protectionContainerName: string, migrationItemName: string, input: models.EnableMigrationInput, callback: ServiceCallback<models.MigrationItem>): void;
    beginCreate(fabricName: string, protectionContainerName: string, migrationItemName: string, input: models.EnableMigrationInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationItem>): void;


    /**
     * @summary Delete the migration item.
     *
     * The operation to delete an ASR migration item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.deleteOption] The delete option.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(fabricName: string, protectionContainerName: string, migrationItemName: string, options?: { deleteOption? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Delete the migration item.
     *
     * The operation to delete an ASR migration item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.deleteOption] The delete option.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(fabricName: string, protectionContainerName: string, migrationItemName: string, options?: { deleteOption? : string, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(fabricName: string, protectionContainerName: string, migrationItemName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(fabricName: string, protectionContainerName: string, migrationItemName: string, options: { deleteOption? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Updates migration item.
     *
     * The operation to update the recovery settings of an ASR migration item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} input Update migration item input.
     *
     * @param {object} [input.properties] Update migration item input properties.
     *
     * @param {object} input.properties.providerSpecificDetails The provider
     * specific input to update migration item.
     *
     * @param {string} input.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(fabricName: string, protectionContainerName: string, migrationItemName: string, input: models.UpdateMigrationItemInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationItem>>;

    /**
     * @summary Updates migration item.
     *
     * The operation to update the recovery settings of an ASR migration item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} input Update migration item input.
     *
     * @param {object} [input.properties] Update migration item input properties.
     *
     * @param {object} input.properties.providerSpecificDetails The provider
     * specific input to update migration item.
     *
     * @param {string} input.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationItem} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(fabricName: string, protectionContainerName: string, migrationItemName: string, input: models.UpdateMigrationItemInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationItem>;
    beginUpdate(fabricName: string, protectionContainerName: string, migrationItemName: string, input: models.UpdateMigrationItemInput, callback: ServiceCallback<models.MigrationItem>): void;
    beginUpdate(fabricName: string, protectionContainerName: string, migrationItemName: string, input: models.UpdateMigrationItemInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationItem>): void;


    /**
     * @summary Migrate item.
     *
     * The operation to initiate migration of the item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} migrateInput Migrate input.
     *
     * @param {object} migrateInput.properties Migrate input properties.
     *
     * @param {object} migrateInput.properties.providerSpecificDetails The provider
     * specific details.
     *
     * @param {string} migrateInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginMigrateWithHttpOperationResponse(fabricName: string, protectionContainerName: string, migrationItemName: string, migrateInput: models.MigrateInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationItem>>;

    /**
     * @summary Migrate item.
     *
     * The operation to initiate migration of the item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} migrateInput Migrate input.
     *
     * @param {object} migrateInput.properties Migrate input properties.
     *
     * @param {object} migrateInput.properties.providerSpecificDetails The provider
     * specific details.
     *
     * @param {string} migrateInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationItem} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginMigrate(fabricName: string, protectionContainerName: string, migrationItemName: string, migrateInput: models.MigrateInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationItem>;
    beginMigrate(fabricName: string, protectionContainerName: string, migrationItemName: string, migrateInput: models.MigrateInput, callback: ServiceCallback<models.MigrationItem>): void;
    beginMigrate(fabricName: string, protectionContainerName: string, migrationItemName: string, migrateInput: models.MigrateInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationItem>): void;


    /**
     * @summary Test migrate item.
     *
     * The operation to initiate test migration of the item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} testMigrateInput Test migrate input.
     *
     * @param {object} testMigrateInput.properties Test migrate input properties.
     *
     * @param {object} testMigrateInput.properties.providerSpecificDetails The
     * provider specific details.
     *
     * @param {string}
     * testMigrateInput.properties.providerSpecificDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginTestMigrateWithHttpOperationResponse(fabricName: string, protectionContainerName: string, migrationItemName: string, testMigrateInput: models.TestMigrateInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationItem>>;

    /**
     * @summary Test migrate item.
     *
     * The operation to initiate test migration of the item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} testMigrateInput Test migrate input.
     *
     * @param {object} testMigrateInput.properties Test migrate input properties.
     *
     * @param {object} testMigrateInput.properties.providerSpecificDetails The
     * provider specific details.
     *
     * @param {string}
     * testMigrateInput.properties.providerSpecificDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationItem} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginTestMigrate(fabricName: string, protectionContainerName: string, migrationItemName: string, testMigrateInput: models.TestMigrateInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationItem>;
    beginTestMigrate(fabricName: string, protectionContainerName: string, migrationItemName: string, testMigrateInput: models.TestMigrateInput, callback: ServiceCallback<models.MigrationItem>): void;
    beginTestMigrate(fabricName: string, protectionContainerName: string, migrationItemName: string, testMigrateInput: models.TestMigrateInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationItem>): void;


    /**
     * @summary Test migrate cleanup.
     *
     * The operation to initiate test migrate cleanup.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} testMigrateCleanupInput Test migrate cleanup input.
     *
     * @param {object} testMigrateCleanupInput.properties Test migrate cleanup
     * input properties.
     *
     * @param {string} [testMigrateCleanupInput.properties.comments] Test migrate
     * cleanup comments.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginTestMigrateCleanupWithHttpOperationResponse(fabricName: string, protectionContainerName: string, migrationItemName: string, testMigrateCleanupInput: models.TestMigrateCleanupInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationItem>>;

    /**
     * @summary Test migrate cleanup.
     *
     * The operation to initiate test migrate cleanup.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} testMigrateCleanupInput Test migrate cleanup input.
     *
     * @param {object} testMigrateCleanupInput.properties Test migrate cleanup
     * input properties.
     *
     * @param {string} [testMigrateCleanupInput.properties.comments] Test migrate
     * cleanup comments.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationItem} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginTestMigrateCleanup(fabricName: string, protectionContainerName: string, migrationItemName: string, testMigrateCleanupInput: models.TestMigrateCleanupInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationItem>;
    beginTestMigrateCleanup(fabricName: string, protectionContainerName: string, migrationItemName: string, testMigrateCleanupInput: models.TestMigrateCleanupInput, callback: ServiceCallback<models.MigrationItem>): void;
    beginTestMigrateCleanup(fabricName: string, protectionContainerName: string, migrationItemName: string, testMigrateCleanupInput: models.TestMigrateCleanupInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationItem>): void;


    /**
     * @summary Gets the list of migration items in the protection container.
     *
     * Gets the list of ASR migration items in the protection container.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationItemCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationProtectionContainersNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationItemCollection>>;

    /**
     * @summary Gets the list of migration items in the protection container.
     *
     * Gets the list of ASR migration items in the protection container.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationItemCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationItemCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationItemCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationProtectionContainersNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationItemCollection>;
    listByReplicationProtectionContainersNext(nextPageLink: string, callback: ServiceCallback<models.MigrationItemCollection>): void;
    listByReplicationProtectionContainersNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationItemCollection>): void;


    /**
     * @summary Gets the list of migration items in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationItemCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationItemCollection>>;

    /**
     * @summary Gets the list of migration items in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationItemCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationItemCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationItemCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationItemCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.MigrationItemCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationItemCollection>): void;
}

/**
 * @class
 * MigrationRecoveryPoints
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface MigrationRecoveryPoints {


    /**
     * @summary Gets the recovery points for a migration item.
     *
     * @param {string} fabricName Fabric unique name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationRecoveryPointCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationMigrationItemsWithHttpOperationResponse(fabricName: string, protectionContainerName: string, migrationItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationRecoveryPointCollection>>;

    /**
     * @summary Gets the recovery points for a migration item.
     *
     * @param {string} fabricName Fabric unique name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationRecoveryPointCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationRecoveryPointCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationRecoveryPointCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationMigrationItems(fabricName: string, protectionContainerName: string, migrationItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationRecoveryPointCollection>;
    listByReplicationMigrationItems(fabricName: string, protectionContainerName: string, migrationItemName: string, callback: ServiceCallback<models.MigrationRecoveryPointCollection>): void;
    listByReplicationMigrationItems(fabricName: string, protectionContainerName: string, migrationItemName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationRecoveryPointCollection>): void;


    /**
     * @summary Gets a recovery point for a migration item.
     *
     * @param {string} fabricName Fabric unique name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {string} migrationRecoveryPointName The migration recovery point
     * name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationRecoveryPoint>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(fabricName: string, protectionContainerName: string, migrationItemName: string, migrationRecoveryPointName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationRecoveryPoint>>;

    /**
     * @summary Gets a recovery point for a migration item.
     *
     * @param {string} fabricName Fabric unique name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} migrationItemName Migration item name.
     *
     * @param {string} migrationRecoveryPointName The migration recovery point
     * name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationRecoveryPoint} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationRecoveryPoint} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationRecoveryPoint} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(fabricName: string, protectionContainerName: string, migrationItemName: string, migrationRecoveryPointName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationRecoveryPoint>;
    get(fabricName: string, protectionContainerName: string, migrationItemName: string, migrationRecoveryPointName: string, callback: ServiceCallback<models.MigrationRecoveryPoint>): void;
    get(fabricName: string, protectionContainerName: string, migrationItemName: string, migrationRecoveryPointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationRecoveryPoint>): void;


    /**
     * @summary Gets the recovery points for a migration item.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<MigrationRecoveryPointCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationMigrationItemsNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.MigrationRecoveryPointCollection>>;

    /**
     * @summary Gets the recovery points for a migration item.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {MigrationRecoveryPointCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {MigrationRecoveryPointCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link MigrationRecoveryPointCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationMigrationItemsNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.MigrationRecoveryPointCollection>;
    listByReplicationMigrationItemsNext(nextPageLink: string, callback: ServiceCallback<models.MigrationRecoveryPointCollection>): void;
    listByReplicationMigrationItemsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.MigrationRecoveryPointCollection>): void;
}

/**
 * @class
 * ReplicationProtectableItems
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationProtectableItems {


    /**
     * @summary Gets the list of protectable items.
     *
     * Lists the protectable items in a protection container.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectableItemCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationProtectionContainersWithHttpOperationResponse(fabricName: string, protectionContainerName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectableItemCollection>>;

    /**
     * @summary Gets the list of protectable items.
     *
     * Lists the protectable items in a protection container.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectableItemCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectableItemCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectableItemCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationProtectionContainers(fabricName: string, protectionContainerName: string, options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectableItemCollection>;
    listByReplicationProtectionContainers(fabricName: string, protectionContainerName: string, callback: ServiceCallback<models.ProtectableItemCollection>): void;
    listByReplicationProtectionContainers(fabricName: string, protectionContainerName: string, options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectableItemCollection>): void;


    /**
     * @summary Gets the details of a protectable item.
     *
     * The operation to get the details of a protectable item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} protectableItemName Protectable item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectableItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(fabricName: string, protectionContainerName: string, protectableItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectableItem>>;

    /**
     * @summary Gets the details of a protectable item.
     *
     * The operation to get the details of a protectable item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} protectableItemName Protectable item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectableItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectableItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectableItem} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(fabricName: string, protectionContainerName: string, protectableItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectableItem>;
    get(fabricName: string, protectionContainerName: string, protectableItemName: string, callback: ServiceCallback<models.ProtectableItem>): void;
    get(fabricName: string, protectionContainerName: string, protectableItemName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectableItem>): void;


    /**
     * @summary Gets the list of protectable items.
     *
     * Lists the protectable items in a protection container.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectableItemCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationProtectionContainersNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectableItemCollection>>;

    /**
     * @summary Gets the list of protectable items.
     *
     * Lists the protectable items in a protection container.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectableItemCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectableItemCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectableItemCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationProtectionContainersNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectableItemCollection>;
    listByReplicationProtectionContainersNext(nextPageLink: string, callback: ServiceCallback<models.ProtectableItemCollection>): void;
    listByReplicationProtectionContainersNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectableItemCollection>): void;
}

/**
 * @class
 * ReplicationProtectedItems
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationProtectedItems {


    /**
     * @summary Gets the list of Replication protected items.
     *
     * Gets the list of ASR replication protected items in the protection
     * container.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItemCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationProtectionContainersWithHttpOperationResponse(fabricName: string, protectionContainerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItemCollection>>;

    /**
     * @summary Gets the list of Replication protected items.
     *
     * Gets the list of ASR replication protected items in the protection
     * container.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItemCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItemCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItemCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationProtectionContainers(fabricName: string, protectionContainerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItemCollection>;
    listByReplicationProtectionContainers(fabricName: string, protectionContainerName: string, callback: ServiceCallback<models.ReplicationProtectedItemCollection>): void;
    listByReplicationProtectionContainers(fabricName: string, protectionContainerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItemCollection>): void;


    /**
     * @summary Gets the details of a Replication protected item.
     *
     * Gets the details of an ASR replication protected item.
     *
     * @param {string} fabricName Fabric unique name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Gets the details of a Replication protected item.
     *
     * Gets the details of an ASR replication protected item.
     *
     * @param {string} fabricName Fabric unique name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    get(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    get(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Enables protection.
     *
     * The operation to create an ASR replication protected item (Enable
     * replication).
     *
     * @param {string} fabricName Name of the fabric.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName A name for the replication
     * protected item.
     *
     * @param {object} input Enable Protection Input.
     *
     * @param {object} [input.properties] Enable protection input properties.
     *
     * @param {string} [input.properties.policyId] The Policy Id.
     *
     * @param {string} [input.properties.protectableItemId] The protectable item
     * Id.
     *
     * @param {object} [input.properties.providerSpecificDetails] The
     * ReplicationProviderInput. For HyperVReplicaAzure provider, it will be
     * AzureEnableProtectionInput object. For San provider, it will be
     * SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be
     * null.
     *
     * @param {string} input.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, input: models.EnableProtectionInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Enables protection.
     *
     * The operation to create an ASR replication protected item (Enable
     * replication).
     *
     * @param {string} fabricName Name of the fabric.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName A name for the replication
     * protected item.
     *
     * @param {object} input Enable Protection Input.
     *
     * @param {object} [input.properties] Enable protection input properties.
     *
     * @param {string} [input.properties.policyId] The Policy Id.
     *
     * @param {string} [input.properties.protectableItemId] The protectable item
     * Id.
     *
     * @param {object} [input.properties.providerSpecificDetails] The
     * ReplicationProviderInput. For HyperVReplicaAzure provider, it will be
     * AzureEnableProtectionInput object. For San provider, it will be
     * SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be
     * null.
     *
     * @param {string} input.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, input: models.EnableProtectionInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    create(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, input: models.EnableProtectionInput, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    create(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, input: models.EnableProtectionInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Purges protection.
     *
     * The operation to delete or purge a replication protected item. This
     * operation will force delete the replication protected item. Use the remove
     * operation on replication protected item to perform a clean disable
     * replication for the item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    purgeWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Purges protection.
     *
     * The operation to delete or purge a replication protected item. This
     * operation will force delete the replication protected item. Use the remove
     * operation on replication protected item to perform a clean disable
     * replication for the item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    purge(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    purge(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, callback: ServiceCallback<void>): void;
    purge(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Updates protection.
     *
     * The operation to update the recovery settings of an ASR replication
     * protected item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} updateProtectionInput Update protection input.
     *
     * @param {object} [updateProtectionInput.properties] Update replication
     * protected item properties.
     *
     * @param {string} [updateProtectionInput.properties.recoveryAzureVMName]
     * Target azure VM name given by the user.
     *
     * @param {string} [updateProtectionInput.properties.recoveryAzureVMSize]
     * Target Azure Vm size.
     *
     * @param {string}
     * [updateProtectionInput.properties.selectedRecoveryAzureNetworkId] Target
     * Azure Network Id.
     *
     * @param {string} [updateProtectionInput.properties.selectedSourceNicId] The
     * selected source nic Id which will be used as the primary nic during
     * failover.
     *
     * @param {string} [updateProtectionInput.properties.enableRdpOnTargetOption]
     * The selected option to enable RDP\SSH on target vm after failover. String
     * value of {SrsDataContract.EnableRDPOnTargetOption} enum.
     *
     * @param {array} [updateProtectionInput.properties.vmNics] The list of vm nic
     * details.
     *
     * @param {string} [updateProtectionInput.properties.licenseType] License type.
     * Possible values include: 'NotSpecified', 'NoLicenseType', 'WindowsServer'
     *
     * @param {string} [updateProtectionInput.properties.recoveryAvailabilitySetId]
     * The target availability set id.
     *
     * @param {object} [updateProtectionInput.properties.providerSpecificDetails]
     * The provider specific input to update replication protected item.
     *
     * @param {string}
     * updateProtectionInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, updateProtectionInput: models.UpdateReplicationProtectedItemInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Updates protection.
     *
     * The operation to update the recovery settings of an ASR replication
     * protected item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} updateProtectionInput Update protection input.
     *
     * @param {object} [updateProtectionInput.properties] Update replication
     * protected item properties.
     *
     * @param {string} [updateProtectionInput.properties.recoveryAzureVMName]
     * Target azure VM name given by the user.
     *
     * @param {string} [updateProtectionInput.properties.recoveryAzureVMSize]
     * Target Azure Vm size.
     *
     * @param {string}
     * [updateProtectionInput.properties.selectedRecoveryAzureNetworkId] Target
     * Azure Network Id.
     *
     * @param {string} [updateProtectionInput.properties.selectedSourceNicId] The
     * selected source nic Id which will be used as the primary nic during
     * failover.
     *
     * @param {string} [updateProtectionInput.properties.enableRdpOnTargetOption]
     * The selected option to enable RDP\SSH on target vm after failover. String
     * value of {SrsDataContract.EnableRDPOnTargetOption} enum.
     *
     * @param {array} [updateProtectionInput.properties.vmNics] The list of vm nic
     * details.
     *
     * @param {string} [updateProtectionInput.properties.licenseType] License type.
     * Possible values include: 'NotSpecified', 'NoLicenseType', 'WindowsServer'
     *
     * @param {string} [updateProtectionInput.properties.recoveryAvailabilitySetId]
     * The target availability set id.
     *
     * @param {object} [updateProtectionInput.properties.providerSpecificDetails]
     * The provider specific input to update replication protected item.
     *
     * @param {string}
     * updateProtectionInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, updateProtectionInput: models.UpdateReplicationProtectedItemInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    update(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, updateProtectionInput: models.UpdateReplicationProtectedItemInput, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    update(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, updateProtectionInput: models.UpdateReplicationProtectedItemInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Change or apply recovery point.
     *
     * The operation to change the recovery point of a failed over replication
     * protected item.
     *
     * @param {string} fabricName The ARM fabric name.
     *
     * @param {string} protectionContainerName The protection container name.
     *
     * @param {string} replicatedProtectedItemName The replicated protected item's
     * name.
     *
     * @param {object} applyRecoveryPointInput The ApplyRecoveryPointInput.
     *
     * @param {object} [applyRecoveryPointInput.properties] The input properties to
     * apply recovery point.
     *
     * @param {string} [applyRecoveryPointInput.properties.recoveryPointId] The
     * recovery point Id.
     *
     * @param {object} [applyRecoveryPointInput.properties.providerSpecificDetails]
     * Provider specific input for applying recovery point.
     *
     * @param {string}
     * applyRecoveryPointInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    applyRecoveryPointWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, applyRecoveryPointInput: models.ApplyRecoveryPointInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Change or apply recovery point.
     *
     * The operation to change the recovery point of a failed over replication
     * protected item.
     *
     * @param {string} fabricName The ARM fabric name.
     *
     * @param {string} protectionContainerName The protection container name.
     *
     * @param {string} replicatedProtectedItemName The replicated protected item's
     * name.
     *
     * @param {object} applyRecoveryPointInput The ApplyRecoveryPointInput.
     *
     * @param {object} [applyRecoveryPointInput.properties] The input properties to
     * apply recovery point.
     *
     * @param {string} [applyRecoveryPointInput.properties.recoveryPointId] The
     * recovery point Id.
     *
     * @param {object} [applyRecoveryPointInput.properties.providerSpecificDetails]
     * Provider specific input for applying recovery point.
     *
     * @param {string}
     * applyRecoveryPointInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    applyRecoveryPoint(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, applyRecoveryPointInput: models.ApplyRecoveryPointInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    applyRecoveryPoint(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, applyRecoveryPointInput: models.ApplyRecoveryPointInput, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    applyRecoveryPoint(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, applyRecoveryPointInput: models.ApplyRecoveryPointInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Execute commit failover
     *
     * Operation to commit the failover of the replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    failoverCommitWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Execute commit failover
     *
     * Operation to commit the failover of the replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    failoverCommit(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    failoverCommit(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    failoverCommit(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Execute planned failover
     *
     * Operation to initiate a planned failover of the replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} failoverInput Disable protection input.
     *
     * @param {object} [failoverInput.properties] Planned failover input properties
     *
     * @param {string} [failoverInput.properties.failoverDirection] Failover
     * direction.
     *
     * @param {object} [failoverInput.properties.providerSpecificDetails] Provider
     * specific settings
     *
     * @param {string}
     * failoverInput.properties.providerSpecificDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    plannedFailoverWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.PlannedFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Execute planned failover
     *
     * Operation to initiate a planned failover of the replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} failoverInput Disable protection input.
     *
     * @param {object} [failoverInput.properties] Planned failover input properties
     *
     * @param {string} [failoverInput.properties.failoverDirection] Failover
     * direction.
     *
     * @param {object} [failoverInput.properties.providerSpecificDetails] Provider
     * specific settings
     *
     * @param {string}
     * failoverInput.properties.providerSpecificDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    plannedFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.PlannedFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    plannedFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.PlannedFailoverInput, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    plannedFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.PlannedFailoverInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Disables protection.
     *
     * The operation to disable replication on a replication protected item. This
     * will also remove the item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} disableProtectionInput Disable protection input.
     *
     * @param {object} [disableProtectionInput.properties] Disable protection input
     * properties.
     *
     * @param {string} [disableProtectionInput.properties.disableProtectionReason]
     * Disable protection reason. It can have values
     * NotSpecified/MigrationComplete. Possible values include: 'NotSpecified',
     * 'MigrationComplete'
     *
     * @param {object} [disableProtectionInput.properties.replicationProviderInput]
     * Replication provider specific input.
     *
     * @param {string}
     * disableProtectionInput.properties.replicationProviderInput.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, disableProtectionInput: models.DisableProtectionInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Disables protection.
     *
     * The operation to disable replication on a replication protected item. This
     * will also remove the item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} disableProtectionInput Disable protection input.
     *
     * @param {object} [disableProtectionInput.properties] Disable protection input
     * properties.
     *
     * @param {string} [disableProtectionInput.properties.disableProtectionReason]
     * Disable protection reason. It can have values
     * NotSpecified/MigrationComplete. Possible values include: 'NotSpecified',
     * 'MigrationComplete'
     *
     * @param {object} [disableProtectionInput.properties.replicationProviderInput]
     * Replication provider specific input.
     *
     * @param {string}
     * disableProtectionInput.properties.replicationProviderInput.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, disableProtectionInput: models.DisableProtectionInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, disableProtectionInput: models.DisableProtectionInput, callback: ServiceCallback<void>): void;
    deleteMethod(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, disableProtectionInput: models.DisableProtectionInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Resynchronize or repair replication.
     *
     * The operation to start resynchronize/repair replication for a replication
     * protected item requiring resynchronization.
     *
     * @param {string} fabricName The name of the fabric.
     *
     * @param {string} protectionContainerName The name of the container.
     *
     * @param {string} replicatedProtectedItemName The name of the replication
     * protected item.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    repairReplicationWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Resynchronize or repair replication.
     *
     * The operation to start resynchronize/repair replication for a replication
     * protected item requiring resynchronization.
     *
     * @param {string} fabricName The name of the fabric.
     *
     * @param {string} protectionContainerName The name of the container.
     *
     * @param {string} replicatedProtectedItemName The name of the replication
     * protected item.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    repairReplication(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    repairReplication(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    repairReplication(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Execute Reverse Replication\Reprotect
     *
     * Operation to reprotect or reverse replicate a failed over replication
     * protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} rrInput Disable protection input.
     *
     * @param {object} [rrInput.properties] Reverse replication properties
     *
     * @param {string} [rrInput.properties.failoverDirection] Failover direction.
     *
     * @param {object} [rrInput.properties.providerSpecificDetails] Provider
     * specific reverse replication input.
     *
     * @param {string} rrInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    reprotectWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, rrInput: models.ReverseReplicationInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Execute Reverse Replication\Reprotect
     *
     * Operation to reprotect or reverse replicate a failed over replication
     * protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} rrInput Disable protection input.
     *
     * @param {object} [rrInput.properties] Reverse replication properties
     *
     * @param {string} [rrInput.properties.failoverDirection] Failover direction.
     *
     * @param {object} [rrInput.properties.providerSpecificDetails] Provider
     * specific reverse replication input.
     *
     * @param {string} rrInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    reprotect(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, rrInput: models.ReverseReplicationInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    reprotect(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, rrInput: models.ReverseReplicationInput, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    reprotect(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, rrInput: models.ReverseReplicationInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Execute test failover
     *
     * Operation to perform a test failover of the replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} failoverInput Test failover input.
     *
     * @param {object} [failoverInput.properties] Planned failover input properties
     *
     * @param {string} [failoverInput.properties.failoverDirection] Failover
     * direction.
     *
     * @param {string} [failoverInput.properties.networkType] Network type to be
     * used for test failover.
     *
     * @param {string} [failoverInput.properties.networkId] The id of the network
     * to be used for test failover
     *
     * @param {string} [failoverInput.properties.skipTestFailoverCleanup] A value
     * indicating whether the test failover cleanup is to be skipped.
     *
     * @param {object} [failoverInput.properties.providerSpecificDetails] Provider
     * specific settings
     *
     * @param {string}
     * failoverInput.properties.providerSpecificDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    testFailoverWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.TestFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Execute test failover
     *
     * Operation to perform a test failover of the replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} failoverInput Test failover input.
     *
     * @param {object} [failoverInput.properties] Planned failover input properties
     *
     * @param {string} [failoverInput.properties.failoverDirection] Failover
     * direction.
     *
     * @param {string} [failoverInput.properties.networkType] Network type to be
     * used for test failover.
     *
     * @param {string} [failoverInput.properties.networkId] The id of the network
     * to be used for test failover
     *
     * @param {string} [failoverInput.properties.skipTestFailoverCleanup] A value
     * indicating whether the test failover cleanup is to be skipped.
     *
     * @param {object} [failoverInput.properties.providerSpecificDetails] Provider
     * specific settings
     *
     * @param {string}
     * failoverInput.properties.providerSpecificDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    testFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.TestFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    testFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.TestFailoverInput, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    testFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.TestFailoverInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Execute test failover cleanup.
     *
     * Operation to clean up the test failover of a replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} cleanupInput Test failover cleanup input.
     *
     * @param {object} cleanupInput.properties Test failover cleanup input
     * properties.
     *
     * @param {string} [cleanupInput.properties.comments] Test failover cleanup
     * comments.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    testFailoverCleanupWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, cleanupInput: models.TestFailoverCleanupInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Execute test failover cleanup.
     *
     * Operation to clean up the test failover of a replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} cleanupInput Test failover cleanup input.
     *
     * @param {object} cleanupInput.properties Test failover cleanup input
     * properties.
     *
     * @param {string} [cleanupInput.properties.comments] Test failover cleanup
     * comments.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    testFailoverCleanup(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, cleanupInput: models.TestFailoverCleanupInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    testFailoverCleanup(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, cleanupInput: models.TestFailoverCleanupInput, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    testFailoverCleanup(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, cleanupInput: models.TestFailoverCleanupInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Execute unplanned failover
     *
     * Operation to initiate a failover of the replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} failoverInput Disable protection input.
     *
     * @param {object} [failoverInput.properties] Planned failover input properties
     *
     * @param {string} [failoverInput.properties.failoverDirection] Failover
     * direction.
     *
     * @param {string} [failoverInput.properties.sourceSiteOperations] Source site
     * operations status
     *
     * @param {object} [failoverInput.properties.providerSpecificDetails] Provider
     * specific settings
     *
     * @param {string}
     * failoverInput.properties.providerSpecificDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    unplannedFailoverWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.UnplannedFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Execute unplanned failover
     *
     * Operation to initiate a failover of the replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} failoverInput Disable protection input.
     *
     * @param {object} [failoverInput.properties] Planned failover input properties
     *
     * @param {string} [failoverInput.properties.failoverDirection] Failover
     * direction.
     *
     * @param {string} [failoverInput.properties.sourceSiteOperations] Source site
     * operations status
     *
     * @param {object} [failoverInput.properties.providerSpecificDetails] Provider
     * specific settings
     *
     * @param {string}
     * failoverInput.properties.providerSpecificDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    unplannedFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.UnplannedFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    unplannedFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.UnplannedFailoverInput, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    unplannedFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.UnplannedFailoverInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Update the mobility service on a protected item.
     *
     * The operation to update(push update) the installed mobility service software
     * on a replication protected item to the latest available version.
     *
     * @param {string} fabricName The name of the fabric containing the protected
     * item.
     *
     * @param {string} protectionContainerName The name of the container containing
     * the protected item.
     *
     * @param {string} replicationProtectedItemName The name of the protected item
     * on which the agent is to be updated.
     *
     * @param {object} updateMobilityServiceRequest Request to update the mobility
     * service on the protected item.
     *
     * @param {object} [updateMobilityServiceRequest.properties] The properties of
     * the update mobility service request.
     *
     * @param {string} [updateMobilityServiceRequest.properties.runAsAccountId] The
     * CS run as account Id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateMobilityServiceWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicationProtectedItemName: string, updateMobilityServiceRequest: models.UpdateMobilityServiceRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Update the mobility service on a protected item.
     *
     * The operation to update(push update) the installed mobility service software
     * on a replication protected item to the latest available version.
     *
     * @param {string} fabricName The name of the fabric containing the protected
     * item.
     *
     * @param {string} protectionContainerName The name of the container containing
     * the protected item.
     *
     * @param {string} replicationProtectedItemName The name of the protected item
     * on which the agent is to be updated.
     *
     * @param {object} updateMobilityServiceRequest Request to update the mobility
     * service on the protected item.
     *
     * @param {object} [updateMobilityServiceRequest.properties] The properties of
     * the update mobility service request.
     *
     * @param {string} [updateMobilityServiceRequest.properties.runAsAccountId] The
     * CS run as account Id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    updateMobilityService(fabricName: string, protectionContainerName: string, replicationProtectedItemName: string, updateMobilityServiceRequest: models.UpdateMobilityServiceRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    updateMobilityService(fabricName: string, protectionContainerName: string, replicationProtectedItemName: string, updateMobilityServiceRequest: models.UpdateMobilityServiceRequest, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    updateMobilityService(fabricName: string, protectionContainerName: string, replicationProtectedItemName: string, updateMobilityServiceRequest: models.UpdateMobilityServiceRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Gets the list of replication protected items.
     *
     * Gets the list of ASR replication protected items in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.skipToken] The pagination token. Possible values:
     * "FabricId" or "FabricId_CloudId" or null
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItemCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { skipToken? : string, filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItemCollection>>;

    /**
     * @summary Gets the list of replication protected items.
     *
     * Gets the list of ASR replication protected items in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.skipToken] The pagination token. Possible values:
     * "FabricId" or "FabricId_CloudId" or null
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItemCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItemCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItemCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { skipToken? : string, filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItemCollection>;
    list(callback: ServiceCallback<models.ReplicationProtectedItemCollection>): void;
    list(options: { skipToken? : string, filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItemCollection>): void;


    /**
     * @summary Enables protection.
     *
     * The operation to create an ASR replication protected item (Enable
     * replication).
     *
     * @param {string} fabricName Name of the fabric.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName A name for the replication
     * protected item.
     *
     * @param {object} input Enable Protection Input.
     *
     * @param {object} [input.properties] Enable protection input properties.
     *
     * @param {string} [input.properties.policyId] The Policy Id.
     *
     * @param {string} [input.properties.protectableItemId] The protectable item
     * Id.
     *
     * @param {object} [input.properties.providerSpecificDetails] The
     * ReplicationProviderInput. For HyperVReplicaAzure provider, it will be
     * AzureEnableProtectionInput object. For San provider, it will be
     * SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be
     * null.
     *
     * @param {string} input.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, input: models.EnableProtectionInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Enables protection.
     *
     * The operation to create an ASR replication protected item (Enable
     * replication).
     *
     * @param {string} fabricName Name of the fabric.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName A name for the replication
     * protected item.
     *
     * @param {object} input Enable Protection Input.
     *
     * @param {object} [input.properties] Enable protection input properties.
     *
     * @param {string} [input.properties.policyId] The Policy Id.
     *
     * @param {string} [input.properties.protectableItemId] The protectable item
     * Id.
     *
     * @param {object} [input.properties.providerSpecificDetails] The
     * ReplicationProviderInput. For HyperVReplicaAzure provider, it will be
     * AzureEnableProtectionInput object. For San provider, it will be
     * SanEnableProtectionInput object. For HyperVReplicaAzure provider, it can be
     * null.
     *
     * @param {string} input.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreate(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, input: models.EnableProtectionInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    beginCreate(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, input: models.EnableProtectionInput, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    beginCreate(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, input: models.EnableProtectionInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Purges protection.
     *
     * The operation to delete or purge a replication protected item. This
     * operation will force delete the replication protected item. Use the remove
     * operation on replication protected item to perform a clean disable
     * replication for the item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginPurgeWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Purges protection.
     *
     * The operation to delete or purge a replication protected item. This
     * operation will force delete the replication protected item. Use the remove
     * operation on replication protected item to perform a clean disable
     * replication for the item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginPurge(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginPurge(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, callback: ServiceCallback<void>): void;
    beginPurge(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Updates protection.
     *
     * The operation to update the recovery settings of an ASR replication
     * protected item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} updateProtectionInput Update protection input.
     *
     * @param {object} [updateProtectionInput.properties] Update replication
     * protected item properties.
     *
     * @param {string} [updateProtectionInput.properties.recoveryAzureVMName]
     * Target azure VM name given by the user.
     *
     * @param {string} [updateProtectionInput.properties.recoveryAzureVMSize]
     * Target Azure Vm size.
     *
     * @param {string}
     * [updateProtectionInput.properties.selectedRecoveryAzureNetworkId] Target
     * Azure Network Id.
     *
     * @param {string} [updateProtectionInput.properties.selectedSourceNicId] The
     * selected source nic Id which will be used as the primary nic during
     * failover.
     *
     * @param {string} [updateProtectionInput.properties.enableRdpOnTargetOption]
     * The selected option to enable RDP\SSH on target vm after failover. String
     * value of {SrsDataContract.EnableRDPOnTargetOption} enum.
     *
     * @param {array} [updateProtectionInput.properties.vmNics] The list of vm nic
     * details.
     *
     * @param {string} [updateProtectionInput.properties.licenseType] License type.
     * Possible values include: 'NotSpecified', 'NoLicenseType', 'WindowsServer'
     *
     * @param {string} [updateProtectionInput.properties.recoveryAvailabilitySetId]
     * The target availability set id.
     *
     * @param {object} [updateProtectionInput.properties.providerSpecificDetails]
     * The provider specific input to update replication protected item.
     *
     * @param {string}
     * updateProtectionInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, updateProtectionInput: models.UpdateReplicationProtectedItemInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Updates protection.
     *
     * The operation to update the recovery settings of an ASR replication
     * protected item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} updateProtectionInput Update protection input.
     *
     * @param {object} [updateProtectionInput.properties] Update replication
     * protected item properties.
     *
     * @param {string} [updateProtectionInput.properties.recoveryAzureVMName]
     * Target azure VM name given by the user.
     *
     * @param {string} [updateProtectionInput.properties.recoveryAzureVMSize]
     * Target Azure Vm size.
     *
     * @param {string}
     * [updateProtectionInput.properties.selectedRecoveryAzureNetworkId] Target
     * Azure Network Id.
     *
     * @param {string} [updateProtectionInput.properties.selectedSourceNicId] The
     * selected source nic Id which will be used as the primary nic during
     * failover.
     *
     * @param {string} [updateProtectionInput.properties.enableRdpOnTargetOption]
     * The selected option to enable RDP\SSH on target vm after failover. String
     * value of {SrsDataContract.EnableRDPOnTargetOption} enum.
     *
     * @param {array} [updateProtectionInput.properties.vmNics] The list of vm nic
     * details.
     *
     * @param {string} [updateProtectionInput.properties.licenseType] License type.
     * Possible values include: 'NotSpecified', 'NoLicenseType', 'WindowsServer'
     *
     * @param {string} [updateProtectionInput.properties.recoveryAvailabilitySetId]
     * The target availability set id.
     *
     * @param {object} [updateProtectionInput.properties.providerSpecificDetails]
     * The provider specific input to update replication protected item.
     *
     * @param {string}
     * updateProtectionInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, updateProtectionInput: models.UpdateReplicationProtectedItemInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    beginUpdate(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, updateProtectionInput: models.UpdateReplicationProtectedItemInput, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    beginUpdate(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, updateProtectionInput: models.UpdateReplicationProtectedItemInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Change or apply recovery point.
     *
     * The operation to change the recovery point of a failed over replication
     * protected item.
     *
     * @param {string} fabricName The ARM fabric name.
     *
     * @param {string} protectionContainerName The protection container name.
     *
     * @param {string} replicatedProtectedItemName The replicated protected item's
     * name.
     *
     * @param {object} applyRecoveryPointInput The ApplyRecoveryPointInput.
     *
     * @param {object} [applyRecoveryPointInput.properties] The input properties to
     * apply recovery point.
     *
     * @param {string} [applyRecoveryPointInput.properties.recoveryPointId] The
     * recovery point Id.
     *
     * @param {object} [applyRecoveryPointInput.properties.providerSpecificDetails]
     * Provider specific input for applying recovery point.
     *
     * @param {string}
     * applyRecoveryPointInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginApplyRecoveryPointWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, applyRecoveryPointInput: models.ApplyRecoveryPointInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Change or apply recovery point.
     *
     * The operation to change the recovery point of a failed over replication
     * protected item.
     *
     * @param {string} fabricName The ARM fabric name.
     *
     * @param {string} protectionContainerName The protection container name.
     *
     * @param {string} replicatedProtectedItemName The replicated protected item's
     * name.
     *
     * @param {object} applyRecoveryPointInput The ApplyRecoveryPointInput.
     *
     * @param {object} [applyRecoveryPointInput.properties] The input properties to
     * apply recovery point.
     *
     * @param {string} [applyRecoveryPointInput.properties.recoveryPointId] The
     * recovery point Id.
     *
     * @param {object} [applyRecoveryPointInput.properties.providerSpecificDetails]
     * Provider specific input for applying recovery point.
     *
     * @param {string}
     * applyRecoveryPointInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginApplyRecoveryPoint(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, applyRecoveryPointInput: models.ApplyRecoveryPointInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    beginApplyRecoveryPoint(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, applyRecoveryPointInput: models.ApplyRecoveryPointInput, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    beginApplyRecoveryPoint(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, applyRecoveryPointInput: models.ApplyRecoveryPointInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Execute commit failover
     *
     * Operation to commit the failover of the replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginFailoverCommitWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Execute commit failover
     *
     * Operation to commit the failover of the replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginFailoverCommit(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    beginFailoverCommit(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    beginFailoverCommit(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Execute planned failover
     *
     * Operation to initiate a planned failover of the replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} failoverInput Disable protection input.
     *
     * @param {object} [failoverInput.properties] Planned failover input properties
     *
     * @param {string} [failoverInput.properties.failoverDirection] Failover
     * direction.
     *
     * @param {object} [failoverInput.properties.providerSpecificDetails] Provider
     * specific settings
     *
     * @param {string}
     * failoverInput.properties.providerSpecificDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginPlannedFailoverWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.PlannedFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Execute planned failover
     *
     * Operation to initiate a planned failover of the replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} failoverInput Disable protection input.
     *
     * @param {object} [failoverInput.properties] Planned failover input properties
     *
     * @param {string} [failoverInput.properties.failoverDirection] Failover
     * direction.
     *
     * @param {object} [failoverInput.properties.providerSpecificDetails] Provider
     * specific settings
     *
     * @param {string}
     * failoverInput.properties.providerSpecificDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginPlannedFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.PlannedFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    beginPlannedFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.PlannedFailoverInput, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    beginPlannedFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.PlannedFailoverInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Disables protection.
     *
     * The operation to disable replication on a replication protected item. This
     * will also remove the item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} disableProtectionInput Disable protection input.
     *
     * @param {object} [disableProtectionInput.properties] Disable protection input
     * properties.
     *
     * @param {string} [disableProtectionInput.properties.disableProtectionReason]
     * Disable protection reason. It can have values
     * NotSpecified/MigrationComplete. Possible values include: 'NotSpecified',
     * 'MigrationComplete'
     *
     * @param {object} [disableProtectionInput.properties.replicationProviderInput]
     * Replication provider specific input.
     *
     * @param {string}
     * disableProtectionInput.properties.replicationProviderInput.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, disableProtectionInput: models.DisableProtectionInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Disables protection.
     *
     * The operation to disable replication on a replication protected item. This
     * will also remove the item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} disableProtectionInput Disable protection input.
     *
     * @param {object} [disableProtectionInput.properties] Disable protection input
     * properties.
     *
     * @param {string} [disableProtectionInput.properties.disableProtectionReason]
     * Disable protection reason. It can have values
     * NotSpecified/MigrationComplete. Possible values include: 'NotSpecified',
     * 'MigrationComplete'
     *
     * @param {object} [disableProtectionInput.properties.replicationProviderInput]
     * Replication provider specific input.
     *
     * @param {string}
     * disableProtectionInput.properties.replicationProviderInput.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, disableProtectionInput: models.DisableProtectionInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, disableProtectionInput: models.DisableProtectionInput, callback: ServiceCallback<void>): void;
    beginDeleteMethod(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, disableProtectionInput: models.DisableProtectionInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Resynchronize or repair replication.
     *
     * The operation to start resynchronize/repair replication for a replication
     * protected item requiring resynchronization.
     *
     * @param {string} fabricName The name of the fabric.
     *
     * @param {string} protectionContainerName The name of the container.
     *
     * @param {string} replicatedProtectedItemName The name of the replication
     * protected item.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginRepairReplicationWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Resynchronize or repair replication.
     *
     * The operation to start resynchronize/repair replication for a replication
     * protected item requiring resynchronization.
     *
     * @param {string} fabricName The name of the fabric.
     *
     * @param {string} protectionContainerName The name of the container.
     *
     * @param {string} replicatedProtectedItemName The name of the replication
     * protected item.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginRepairReplication(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    beginRepairReplication(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    beginRepairReplication(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Execute Reverse Replication\Reprotect
     *
     * Operation to reprotect or reverse replicate a failed over replication
     * protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} rrInput Disable protection input.
     *
     * @param {object} [rrInput.properties] Reverse replication properties
     *
     * @param {string} [rrInput.properties.failoverDirection] Failover direction.
     *
     * @param {object} [rrInput.properties.providerSpecificDetails] Provider
     * specific reverse replication input.
     *
     * @param {string} rrInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginReprotectWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, rrInput: models.ReverseReplicationInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Execute Reverse Replication\Reprotect
     *
     * Operation to reprotect or reverse replicate a failed over replication
     * protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} rrInput Disable protection input.
     *
     * @param {object} [rrInput.properties] Reverse replication properties
     *
     * @param {string} [rrInput.properties.failoverDirection] Failover direction.
     *
     * @param {object} [rrInput.properties.providerSpecificDetails] Provider
     * specific reverse replication input.
     *
     * @param {string} rrInput.properties.providerSpecificDetails.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginReprotect(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, rrInput: models.ReverseReplicationInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    beginReprotect(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, rrInput: models.ReverseReplicationInput, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    beginReprotect(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, rrInput: models.ReverseReplicationInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Execute test failover
     *
     * Operation to perform a test failover of the replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} failoverInput Test failover input.
     *
     * @param {object} [failoverInput.properties] Planned failover input properties
     *
     * @param {string} [failoverInput.properties.failoverDirection] Failover
     * direction.
     *
     * @param {string} [failoverInput.properties.networkType] Network type to be
     * used for test failover.
     *
     * @param {string} [failoverInput.properties.networkId] The id of the network
     * to be used for test failover
     *
     * @param {string} [failoverInput.properties.skipTestFailoverCleanup] A value
     * indicating whether the test failover cleanup is to be skipped.
     *
     * @param {object} [failoverInput.properties.providerSpecificDetails] Provider
     * specific settings
     *
     * @param {string}
     * failoverInput.properties.providerSpecificDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginTestFailoverWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.TestFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Execute test failover
     *
     * Operation to perform a test failover of the replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} failoverInput Test failover input.
     *
     * @param {object} [failoverInput.properties] Planned failover input properties
     *
     * @param {string} [failoverInput.properties.failoverDirection] Failover
     * direction.
     *
     * @param {string} [failoverInput.properties.networkType] Network type to be
     * used for test failover.
     *
     * @param {string} [failoverInput.properties.networkId] The id of the network
     * to be used for test failover
     *
     * @param {string} [failoverInput.properties.skipTestFailoverCleanup] A value
     * indicating whether the test failover cleanup is to be skipped.
     *
     * @param {object} [failoverInput.properties.providerSpecificDetails] Provider
     * specific settings
     *
     * @param {string}
     * failoverInput.properties.providerSpecificDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginTestFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.TestFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    beginTestFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.TestFailoverInput, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    beginTestFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.TestFailoverInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Execute test failover cleanup.
     *
     * Operation to clean up the test failover of a replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} cleanupInput Test failover cleanup input.
     *
     * @param {object} cleanupInput.properties Test failover cleanup input
     * properties.
     *
     * @param {string} [cleanupInput.properties.comments] Test failover cleanup
     * comments.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginTestFailoverCleanupWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, cleanupInput: models.TestFailoverCleanupInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Execute test failover cleanup.
     *
     * Operation to clean up the test failover of a replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} cleanupInput Test failover cleanup input.
     *
     * @param {object} cleanupInput.properties Test failover cleanup input
     * properties.
     *
     * @param {string} [cleanupInput.properties.comments] Test failover cleanup
     * comments.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginTestFailoverCleanup(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, cleanupInput: models.TestFailoverCleanupInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    beginTestFailoverCleanup(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, cleanupInput: models.TestFailoverCleanupInput, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    beginTestFailoverCleanup(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, cleanupInput: models.TestFailoverCleanupInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Execute unplanned failover
     *
     * Operation to initiate a failover of the replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} failoverInput Disable protection input.
     *
     * @param {object} [failoverInput.properties] Planned failover input properties
     *
     * @param {string} [failoverInput.properties.failoverDirection] Failover
     * direction.
     *
     * @param {string} [failoverInput.properties.sourceSiteOperations] Source site
     * operations status
     *
     * @param {object} [failoverInput.properties.providerSpecificDetails] Provider
     * specific settings
     *
     * @param {string}
     * failoverInput.properties.providerSpecificDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUnplannedFailoverWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.UnplannedFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Execute unplanned failover
     *
     * Operation to initiate a failover of the replication protected item.
     *
     * @param {string} fabricName Unique fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} failoverInput Disable protection input.
     *
     * @param {object} [failoverInput.properties] Planned failover input properties
     *
     * @param {string} [failoverInput.properties.failoverDirection] Failover
     * direction.
     *
     * @param {string} [failoverInput.properties.sourceSiteOperations] Source site
     * operations status
     *
     * @param {object} [failoverInput.properties.providerSpecificDetails] Provider
     * specific settings
     *
     * @param {string}
     * failoverInput.properties.providerSpecificDetails.instanceType Polymorphic
     * Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUnplannedFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.UnplannedFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    beginUnplannedFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.UnplannedFailoverInput, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    beginUnplannedFailover(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, failoverInput: models.UnplannedFailoverInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Update the mobility service on a protected item.
     *
     * The operation to update(push update) the installed mobility service software
     * on a replication protected item to the latest available version.
     *
     * @param {string} fabricName The name of the fabric containing the protected
     * item.
     *
     * @param {string} protectionContainerName The name of the container containing
     * the protected item.
     *
     * @param {string} replicationProtectedItemName The name of the protected item
     * on which the agent is to be updated.
     *
     * @param {object} updateMobilityServiceRequest Request to update the mobility
     * service on the protected item.
     *
     * @param {object} [updateMobilityServiceRequest.properties] The properties of
     * the update mobility service request.
     *
     * @param {string} [updateMobilityServiceRequest.properties.runAsAccountId] The
     * CS run as account Id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItem>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateMobilityServiceWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicationProtectedItemName: string, updateMobilityServiceRequest: models.UpdateMobilityServiceRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItem>>;

    /**
     * @summary Update the mobility service on a protected item.
     *
     * The operation to update(push update) the installed mobility service software
     * on a replication protected item to the latest available version.
     *
     * @param {string} fabricName The name of the fabric containing the protected
     * item.
     *
     * @param {string} protectionContainerName The name of the container containing
     * the protected item.
     *
     * @param {string} replicationProtectedItemName The name of the protected item
     * on which the agent is to be updated.
     *
     * @param {object} updateMobilityServiceRequest Request to update the mobility
     * service on the protected item.
     *
     * @param {object} [updateMobilityServiceRequest.properties] The properties of
     * the update mobility service request.
     *
     * @param {string} [updateMobilityServiceRequest.properties.runAsAccountId] The
     * CS run as account Id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItem} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItem} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItem} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdateMobilityService(fabricName: string, protectionContainerName: string, replicationProtectedItemName: string, updateMobilityServiceRequest: models.UpdateMobilityServiceRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItem>;
    beginUpdateMobilityService(fabricName: string, protectionContainerName: string, replicationProtectedItemName: string, updateMobilityServiceRequest: models.UpdateMobilityServiceRequest, callback: ServiceCallback<models.ReplicationProtectedItem>): void;
    beginUpdateMobilityService(fabricName: string, protectionContainerName: string, replicationProtectedItemName: string, updateMobilityServiceRequest: models.UpdateMobilityServiceRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItem>): void;


    /**
     * @summary Gets the list of Replication protected items.
     *
     * Gets the list of ASR replication protected items in the protection
     * container.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItemCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationProtectionContainersNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItemCollection>>;

    /**
     * @summary Gets the list of Replication protected items.
     *
     * Gets the list of ASR replication protected items in the protection
     * container.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItemCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItemCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItemCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationProtectionContainersNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItemCollection>;
    listByReplicationProtectionContainersNext(nextPageLink: string, callback: ServiceCallback<models.ReplicationProtectedItemCollection>): void;
    listByReplicationProtectionContainersNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItemCollection>): void;


    /**
     * @summary Gets the list of replication protected items.
     *
     * Gets the list of ASR replication protected items in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ReplicationProtectedItemCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ReplicationProtectedItemCollection>>;

    /**
     * @summary Gets the list of replication protected items.
     *
     * Gets the list of ASR replication protected items in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ReplicationProtectedItemCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ReplicationProtectedItemCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ReplicationProtectedItemCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ReplicationProtectedItemCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ReplicationProtectedItemCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ReplicationProtectedItemCollection>): void;
}

/**
 * @class
 * RecoveryPoints
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface RecoveryPoints {


    /**
     * @summary Get recovery points for a replication protected item.
     *
     * Lists the available recovery points for a replication protected item.
     *
     * @param {string} fabricName The fabric name.
     *
     * @param {string} protectionContainerName The protection container name.
     *
     * @param {string} replicatedProtectedItemName The replication protected item's
     * name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPointCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationProtectedItemsWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPointCollection>>;

    /**
     * @summary Get recovery points for a replication protected item.
     *
     * Lists the available recovery points for a replication protected item.
     *
     * @param {string} fabricName The fabric name.
     *
     * @param {string} protectionContainerName The protection container name.
     *
     * @param {string} replicatedProtectedItemName The replication protected item's
     * name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPointCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPointCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPointCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationProtectedItems(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPointCollection>;
    listByReplicationProtectedItems(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, callback: ServiceCallback<models.RecoveryPointCollection>): void;
    listByReplicationProtectedItems(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPointCollection>): void;


    /**
     * @summary Get a recovery point.
     *
     * Get the details of specified recovery point.
     *
     * @param {string} fabricName The fabric name.
     *
     * @param {string} protectionContainerName The protection container name.
     *
     * @param {string} replicatedProtectedItemName The replication protected item's
     * name.
     *
     * @param {string} recoveryPointName The recovery point name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPoint>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, recoveryPointName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPoint>>;

    /**
     * @summary Get a recovery point.
     *
     * Get the details of specified recovery point.
     *
     * @param {string} fabricName The fabric name.
     *
     * @param {string} protectionContainerName The protection container name.
     *
     * @param {string} replicatedProtectedItemName The replication protected item's
     * name.
     *
     * @param {string} recoveryPointName The recovery point name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPoint} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPoint} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPoint} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, recoveryPointName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPoint>;
    get(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, recoveryPointName: string, callback: ServiceCallback<models.RecoveryPoint>): void;
    get(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, recoveryPointName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPoint>): void;


    /**
     * @summary Get recovery points for a replication protected item.
     *
     * Lists the available recovery points for a replication protected item.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPointCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationProtectedItemsNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPointCollection>>;

    /**
     * @summary Get recovery points for a replication protected item.
     *
     * Lists the available recovery points for a replication protected item.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPointCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPointCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPointCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationProtectedItemsNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPointCollection>;
    listByReplicationProtectedItemsNext(nextPageLink: string, callback: ServiceCallback<models.RecoveryPointCollection>): void;
    listByReplicationProtectedItemsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPointCollection>): void;
}

/**
 * @class
 * TargetComputeSizes
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface TargetComputeSizes {


    /**
     * @summary Gets the list of target compute sizes for the replication protected
     * item.
     *
     * Lists the available target compute sizes for a replication protected item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<TargetComputeSizeCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationProtectedItemsWithHttpOperationResponse(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TargetComputeSizeCollection>>;

    /**
     * @summary Gets the list of target compute sizes for the replication protected
     * item.
     *
     * Lists the available target compute sizes for a replication protected item.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName protection container name.
     *
     * @param {string} replicatedProtectedItemName Replication protected item name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {TargetComputeSizeCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {TargetComputeSizeCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link TargetComputeSizeCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationProtectedItems(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.TargetComputeSizeCollection>;
    listByReplicationProtectedItems(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, callback: ServiceCallback<models.TargetComputeSizeCollection>): void;
    listByReplicationProtectedItems(fabricName: string, protectionContainerName: string, replicatedProtectedItemName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TargetComputeSizeCollection>): void;


    /**
     * @summary Gets the list of target compute sizes for the replication protected
     * item.
     *
     * Lists the available target compute sizes for a replication protected item.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<TargetComputeSizeCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationProtectedItemsNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.TargetComputeSizeCollection>>;

    /**
     * @summary Gets the list of target compute sizes for the replication protected
     * item.
     *
     * Lists the available target compute sizes for a replication protected item.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {TargetComputeSizeCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {TargetComputeSizeCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link TargetComputeSizeCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationProtectedItemsNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.TargetComputeSizeCollection>;
    listByReplicationProtectedItemsNext(nextPageLink: string, callback: ServiceCallback<models.TargetComputeSizeCollection>): void;
    listByReplicationProtectedItemsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.TargetComputeSizeCollection>): void;
}

/**
 * @class
 * ReplicationProtectionContainerMappings
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationProtectionContainerMappings {


    /**
     * @summary Gets the list of protection container mappings for a protection
     * container.
     *
     * Lists the protection container mappings for a protection container.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerMappingCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationProtectionContainersWithHttpOperationResponse(fabricName: string, protectionContainerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerMappingCollection>>;

    /**
     * @summary Gets the list of protection container mappings for a protection
     * container.
     *
     * Lists the protection container mappings for a protection container.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerMappingCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerMappingCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerMappingCollection} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationProtectionContainers(fabricName: string, protectionContainerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerMappingCollection>;
    listByReplicationProtectionContainers(fabricName: string, protectionContainerName: string, callback: ServiceCallback<models.ProtectionContainerMappingCollection>): void;
    listByReplicationProtectionContainers(fabricName: string, protectionContainerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerMappingCollection>): void;


    /**
     * @summary Gets a protection container mapping/
     *
     * Gets the details of a protection container mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection Container mapping name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerMapping>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(fabricName: string, protectionContainerName: string, mappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerMapping>>;

    /**
     * @summary Gets a protection container mapping/
     *
     * Gets the details of a protection container mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection Container mapping name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerMapping} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerMapping} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerMapping} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(fabricName: string, protectionContainerName: string, mappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerMapping>;
    get(fabricName: string, protectionContainerName: string, mappingName: string, callback: ServiceCallback<models.ProtectionContainerMapping>): void;
    get(fabricName: string, protectionContainerName: string, mappingName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerMapping>): void;


    /**
     * @summary Create protection container mapping.
     *
     * The operation to create a protection container mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection container mapping name.
     *
     * @param {object} creationInput Mapping creation input.
     *
     * @param {object} [creationInput.properties] Configure protection input
     * properties.
     *
     * @param {string} [creationInput.properties.targetProtectionContainerId] The
     * target unique protection container name.
     *
     * @param {string} [creationInput.properties.policyId] Applicable policy.
     *
     * @param {object} [creationInput.properties.providerSpecificInput] Provider
     * specific input for pairing.
     *
     * @param {string} creationInput.properties.providerSpecificInput.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerMapping>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(fabricName: string, protectionContainerName: string, mappingName: string, creationInput: models.CreateProtectionContainerMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerMapping>>;

    /**
     * @summary Create protection container mapping.
     *
     * The operation to create a protection container mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection container mapping name.
     *
     * @param {object} creationInput Mapping creation input.
     *
     * @param {object} [creationInput.properties] Configure protection input
     * properties.
     *
     * @param {string} [creationInput.properties.targetProtectionContainerId] The
     * target unique protection container name.
     *
     * @param {string} [creationInput.properties.policyId] Applicable policy.
     *
     * @param {object} [creationInput.properties.providerSpecificInput] Provider
     * specific input for pairing.
     *
     * @param {string} creationInput.properties.providerSpecificInput.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerMapping} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerMapping} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerMapping} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(fabricName: string, protectionContainerName: string, mappingName: string, creationInput: models.CreateProtectionContainerMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerMapping>;
    create(fabricName: string, protectionContainerName: string, mappingName: string, creationInput: models.CreateProtectionContainerMappingInput, callback: ServiceCallback<models.ProtectionContainerMapping>): void;
    create(fabricName: string, protectionContainerName: string, mappingName: string, creationInput: models.CreateProtectionContainerMappingInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerMapping>): void;


    /**
     * @summary Purge protection container mapping.
     *
     * The operation to purge(force delete) a protection container mapping
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection container mapping name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    purgeWithHttpOperationResponse(fabricName: string, protectionContainerName: string, mappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Purge protection container mapping.
     *
     * The operation to purge(force delete) a protection container mapping
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection container mapping name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    purge(fabricName: string, protectionContainerName: string, mappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    purge(fabricName: string, protectionContainerName: string, mappingName: string, callback: ServiceCallback<void>): void;
    purge(fabricName: string, protectionContainerName: string, mappingName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Update protection container mapping.
     *
     * The operation to update protection container mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection container mapping name.
     *
     * @param {object} updateInput Mapping update input.
     *
     * @param {object} [updateInput.properties] Update protection container mapping
     * input properties.
     *
     * @param {object} [updateInput.properties.providerSpecificInput] Provider
     * specific input for updating protection container mapping.
     *
     * @param {string} updateInput.properties.providerSpecificInput.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerMapping>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(fabricName: string, protectionContainerName: string, mappingName: string, updateInput: models.UpdateProtectionContainerMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerMapping>>;

    /**
     * @summary Update protection container mapping.
     *
     * The operation to update protection container mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection container mapping name.
     *
     * @param {object} updateInput Mapping update input.
     *
     * @param {object} [updateInput.properties] Update protection container mapping
     * input properties.
     *
     * @param {object} [updateInput.properties.providerSpecificInput] Provider
     * specific input for updating protection container mapping.
     *
     * @param {string} updateInput.properties.providerSpecificInput.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerMapping} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerMapping} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerMapping} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(fabricName: string, protectionContainerName: string, mappingName: string, updateInput: models.UpdateProtectionContainerMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerMapping>;
    update(fabricName: string, protectionContainerName: string, mappingName: string, updateInput: models.UpdateProtectionContainerMappingInput, callback: ServiceCallback<models.ProtectionContainerMapping>): void;
    update(fabricName: string, protectionContainerName: string, mappingName: string, updateInput: models.UpdateProtectionContainerMappingInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerMapping>): void;


    /**
     * @summary Remove protection container mapping.
     *
     * The operation to delete or remove a protection container mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection container mapping name.
     *
     * @param {object} removalInput Removal input.
     *
     * @param {object} [removalInput.properties] Configure protection input
     * properties.
     *
     * @param {object} [removalInput.properties.providerSpecificInput] Provider
     * specific input for unpairing.
     *
     * @param {string} [removalInput.properties.providerSpecificInput.instanceType]
     * The class type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(fabricName: string, protectionContainerName: string, mappingName: string, removalInput: models.RemoveProtectionContainerMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Remove protection container mapping.
     *
     * The operation to delete or remove a protection container mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection container mapping name.
     *
     * @param {object} removalInput Removal input.
     *
     * @param {object} [removalInput.properties] Configure protection input
     * properties.
     *
     * @param {object} [removalInput.properties.providerSpecificInput] Provider
     * specific input for unpairing.
     *
     * @param {string} [removalInput.properties.providerSpecificInput.instanceType]
     * The class type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(fabricName: string, protectionContainerName: string, mappingName: string, removalInput: models.RemoveProtectionContainerMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(fabricName: string, protectionContainerName: string, mappingName: string, removalInput: models.RemoveProtectionContainerMappingInput, callback: ServiceCallback<void>): void;
    deleteMethod(fabricName: string, protectionContainerName: string, mappingName: string, removalInput: models.RemoveProtectionContainerMappingInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Gets the list of all protection container mappings in a vault.
     *
     * Lists the protection container mappings in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerMappingCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerMappingCollection>>;

    /**
     * @summary Gets the list of all protection container mappings in a vault.
     *
     * Lists the protection container mappings in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerMappingCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerMappingCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerMappingCollection} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerMappingCollection>;
    list(callback: ServiceCallback<models.ProtectionContainerMappingCollection>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerMappingCollection>): void;


    /**
     * @summary Create protection container mapping.
     *
     * The operation to create a protection container mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection container mapping name.
     *
     * @param {object} creationInput Mapping creation input.
     *
     * @param {object} [creationInput.properties] Configure protection input
     * properties.
     *
     * @param {string} [creationInput.properties.targetProtectionContainerId] The
     * target unique protection container name.
     *
     * @param {string} [creationInput.properties.policyId] Applicable policy.
     *
     * @param {object} [creationInput.properties.providerSpecificInput] Provider
     * specific input for pairing.
     *
     * @param {string} creationInput.properties.providerSpecificInput.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerMapping>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateWithHttpOperationResponse(fabricName: string, protectionContainerName: string, mappingName: string, creationInput: models.CreateProtectionContainerMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerMapping>>;

    /**
     * @summary Create protection container mapping.
     *
     * The operation to create a protection container mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection container mapping name.
     *
     * @param {object} creationInput Mapping creation input.
     *
     * @param {object} [creationInput.properties] Configure protection input
     * properties.
     *
     * @param {string} [creationInput.properties.targetProtectionContainerId] The
     * target unique protection container name.
     *
     * @param {string} [creationInput.properties.policyId] Applicable policy.
     *
     * @param {object} [creationInput.properties.providerSpecificInput] Provider
     * specific input for pairing.
     *
     * @param {string} creationInput.properties.providerSpecificInput.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerMapping} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerMapping} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerMapping} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreate(fabricName: string, protectionContainerName: string, mappingName: string, creationInput: models.CreateProtectionContainerMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerMapping>;
    beginCreate(fabricName: string, protectionContainerName: string, mappingName: string, creationInput: models.CreateProtectionContainerMappingInput, callback: ServiceCallback<models.ProtectionContainerMapping>): void;
    beginCreate(fabricName: string, protectionContainerName: string, mappingName: string, creationInput: models.CreateProtectionContainerMappingInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerMapping>): void;


    /**
     * @summary Purge protection container mapping.
     *
     * The operation to purge(force delete) a protection container mapping
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection container mapping name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginPurgeWithHttpOperationResponse(fabricName: string, protectionContainerName: string, mappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Purge protection container mapping.
     *
     * The operation to purge(force delete) a protection container mapping
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection container mapping name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginPurge(fabricName: string, protectionContainerName: string, mappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginPurge(fabricName: string, protectionContainerName: string, mappingName: string, callback: ServiceCallback<void>): void;
    beginPurge(fabricName: string, protectionContainerName: string, mappingName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Update protection container mapping.
     *
     * The operation to update protection container mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection container mapping name.
     *
     * @param {object} updateInput Mapping update input.
     *
     * @param {object} [updateInput.properties] Update protection container mapping
     * input properties.
     *
     * @param {object} [updateInput.properties.providerSpecificInput] Provider
     * specific input for updating protection container mapping.
     *
     * @param {string} updateInput.properties.providerSpecificInput.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerMapping>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(fabricName: string, protectionContainerName: string, mappingName: string, updateInput: models.UpdateProtectionContainerMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerMapping>>;

    /**
     * @summary Update protection container mapping.
     *
     * The operation to update protection container mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection container mapping name.
     *
     * @param {object} updateInput Mapping update input.
     *
     * @param {object} [updateInput.properties] Update protection container mapping
     * input properties.
     *
     * @param {object} [updateInput.properties.providerSpecificInput] Provider
     * specific input for updating protection container mapping.
     *
     * @param {string} updateInput.properties.providerSpecificInput.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerMapping} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerMapping} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerMapping} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(fabricName: string, protectionContainerName: string, mappingName: string, updateInput: models.UpdateProtectionContainerMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerMapping>;
    beginUpdate(fabricName: string, protectionContainerName: string, mappingName: string, updateInput: models.UpdateProtectionContainerMappingInput, callback: ServiceCallback<models.ProtectionContainerMapping>): void;
    beginUpdate(fabricName: string, protectionContainerName: string, mappingName: string, updateInput: models.UpdateProtectionContainerMappingInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerMapping>): void;


    /**
     * @summary Remove protection container mapping.
     *
     * The operation to delete or remove a protection container mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection container mapping name.
     *
     * @param {object} removalInput Removal input.
     *
     * @param {object} [removalInput.properties] Configure protection input
     * properties.
     *
     * @param {object} [removalInput.properties.providerSpecificInput] Provider
     * specific input for unpairing.
     *
     * @param {string} [removalInput.properties.providerSpecificInput.instanceType]
     * The class type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(fabricName: string, protectionContainerName: string, mappingName: string, removalInput: models.RemoveProtectionContainerMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Remove protection container mapping.
     *
     * The operation to delete or remove a protection container mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} protectionContainerName Protection container name.
     *
     * @param {string} mappingName Protection container mapping name.
     *
     * @param {object} removalInput Removal input.
     *
     * @param {object} [removalInput.properties] Configure protection input
     * properties.
     *
     * @param {object} [removalInput.properties.providerSpecificInput] Provider
     * specific input for unpairing.
     *
     * @param {string} [removalInput.properties.providerSpecificInput.instanceType]
     * The class type.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(fabricName: string, protectionContainerName: string, mappingName: string, removalInput: models.RemoveProtectionContainerMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(fabricName: string, protectionContainerName: string, mappingName: string, removalInput: models.RemoveProtectionContainerMappingInput, callback: ServiceCallback<void>): void;
    beginDeleteMethod(fabricName: string, protectionContainerName: string, mappingName: string, removalInput: models.RemoveProtectionContainerMappingInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Gets the list of protection container mappings for a protection
     * container.
     *
     * Lists the protection container mappings for a protection container.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerMappingCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationProtectionContainersNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerMappingCollection>>;

    /**
     * @summary Gets the list of protection container mappings for a protection
     * container.
     *
     * Lists the protection container mappings for a protection container.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerMappingCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerMappingCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerMappingCollection} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationProtectionContainersNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerMappingCollection>;
    listByReplicationProtectionContainersNext(nextPageLink: string, callback: ServiceCallback<models.ProtectionContainerMappingCollection>): void;
    listByReplicationProtectionContainersNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerMappingCollection>): void;


    /**
     * @summary Gets the list of all protection container mappings in a vault.
     *
     * Lists the protection container mappings in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProtectionContainerMappingCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProtectionContainerMappingCollection>>;

    /**
     * @summary Gets the list of all protection container mappings in a vault.
     *
     * Lists the protection container mappings in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProtectionContainerMappingCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProtectionContainerMappingCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProtectionContainerMappingCollection} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProtectionContainerMappingCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ProtectionContainerMappingCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProtectionContainerMappingCollection>): void;
}

/**
 * @class
 * ReplicationRecoveryServicesProviders
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationRecoveryServicesProviders {


    /**
     * @summary Gets the list of registered recovery services providers for the
     * fabric.
     *
     * Lists the registered recovery services providers for the specified fabric.
     *
     * @param {string} fabricName Fabric name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryServicesProviderCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationFabricsWithHttpOperationResponse(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryServicesProviderCollection>>;

    /**
     * @summary Gets the list of registered recovery services providers for the
     * fabric.
     *
     * Lists the registered recovery services providers for the specified fabric.
     *
     * @param {string} fabricName Fabric name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryServicesProviderCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryServicesProviderCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryServicesProviderCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationFabrics(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryServicesProviderCollection>;
    listByReplicationFabrics(fabricName: string, callback: ServiceCallback<models.RecoveryServicesProviderCollection>): void;
    listByReplicationFabrics(fabricName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryServicesProviderCollection>): void;


    /**
     * @summary Gets the details of a recovery services provider.
     *
     * Gets the details of registered recovery services provider.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryServicesProvider>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(fabricName: string, providerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryServicesProvider>>;

    /**
     * @summary Gets the details of a recovery services provider.
     *
     * Gets the details of registered recovery services provider.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryServicesProvider} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryServicesProvider} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryServicesProvider} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(fabricName: string, providerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryServicesProvider>;
    get(fabricName: string, providerName: string, callback: ServiceCallback<models.RecoveryServicesProvider>): void;
    get(fabricName: string, providerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryServicesProvider>): void;


    /**
     * @summary Adds a recovery services provider.
     *
     * The operation to add a recovery services provider.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name.
     *
     * @param {object} addProviderInput Add provider input.
     *
     * @param {object} addProviderInput.properties The properties of an add
     * provider request.
     *
     * @param {string} addProviderInput.properties.machineName The name of the
     * machine where the provider is getting added.
     *
     * @param {object} addProviderInput.properties.authenticationIdentityInput The
     * identity provider input for DRA authentication.
     *
     * @param {object} addProviderInput.properties.resourceAccessIdentityInput The
     * identity provider input for resource access.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.tenantId The tenant
     * Id for the service principal with which the on-premise management/data plane
     * components would communicate with our Azure services.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.applicationId The
     * application/client Id for the service principal with which the on-premise
     * management/data plane components would communicate with our Azure services.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.objectId The object
     * Id of the service principal with which the on-premise management/data plane
     * components would communicate with our Azure services.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.audience The
     * intended Audience of the service principal with which the on-premise
     * management/data plane components would communicate with our Azure services.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.aadAuthority The
     * base authority for Azure Active Directory authentication.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryServicesProvider>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(fabricName: string, providerName: string, addProviderInput: models.AddRecoveryServicesProviderInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryServicesProvider>>;

    /**
     * @summary Adds a recovery services provider.
     *
     * The operation to add a recovery services provider.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name.
     *
     * @param {object} addProviderInput Add provider input.
     *
     * @param {object} addProviderInput.properties The properties of an add
     * provider request.
     *
     * @param {string} addProviderInput.properties.machineName The name of the
     * machine where the provider is getting added.
     *
     * @param {object} addProviderInput.properties.authenticationIdentityInput The
     * identity provider input for DRA authentication.
     *
     * @param {object} addProviderInput.properties.resourceAccessIdentityInput The
     * identity provider input for resource access.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.tenantId The tenant
     * Id for the service principal with which the on-premise management/data plane
     * components would communicate with our Azure services.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.applicationId The
     * application/client Id for the service principal with which the on-premise
     * management/data plane components would communicate with our Azure services.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.objectId The object
     * Id of the service principal with which the on-premise management/data plane
     * components would communicate with our Azure services.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.audience The
     * intended Audience of the service principal with which the on-premise
     * management/data plane components would communicate with our Azure services.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.aadAuthority The
     * base authority for Azure Active Directory authentication.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryServicesProvider} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryServicesProvider} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryServicesProvider} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(fabricName: string, providerName: string, addProviderInput: models.AddRecoveryServicesProviderInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryServicesProvider>;
    create(fabricName: string, providerName: string, addProviderInput: models.AddRecoveryServicesProviderInput, callback: ServiceCallback<models.RecoveryServicesProvider>): void;
    create(fabricName: string, providerName: string, addProviderInput: models.AddRecoveryServicesProviderInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryServicesProvider>): void;


    /**
     * @summary Purges recovery service provider from fabric
     *
     * The operation to purge(force delete) a recovery services provider from the
     * vault.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    purgeWithHttpOperationResponse(fabricName: string, providerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Purges recovery service provider from fabric
     *
     * The operation to purge(force delete) a recovery services provider from the
     * vault.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    purge(fabricName: string, providerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    purge(fabricName: string, providerName: string, callback: ServiceCallback<void>): void;
    purge(fabricName: string, providerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Refresh details from the recovery services provider.
     *
     * The operation to refresh the information from the recovery services
     * provider.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryServicesProvider>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    refreshProviderWithHttpOperationResponse(fabricName: string, providerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryServicesProvider>>;

    /**
     * @summary Refresh details from the recovery services provider.
     *
     * The operation to refresh the information from the recovery services
     * provider.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryServicesProvider} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryServicesProvider} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryServicesProvider} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    refreshProvider(fabricName: string, providerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryServicesProvider>;
    refreshProvider(fabricName: string, providerName: string, callback: ServiceCallback<models.RecoveryServicesProvider>): void;
    refreshProvider(fabricName: string, providerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryServicesProvider>): void;


    /**
     * @summary Deletes provider from fabric. Note: Deleting provider for any
     * fabric other than SingleHost is unsupported. To maintain backward
     * compatibility for released clients the object "deleteRspInput" is used (if
     * the object is empty we assume that it is old client and continue the old
     * behavior).
     *
     * The operation to removes/delete(unregister) a recovery services provider
     * from the vault
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(fabricName: string, providerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Deletes provider from fabric. Note: Deleting provider for any
     * fabric other than SingleHost is unsupported. To maintain backward
     * compatibility for released clients the object "deleteRspInput" is used (if
     * the object is empty we assume that it is old client and continue the old
     * behavior).
     *
     * The operation to removes/delete(unregister) a recovery services provider
     * from the vault
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(fabricName: string, providerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(fabricName: string, providerName: string, callback: ServiceCallback<void>): void;
    deleteMethod(fabricName: string, providerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Gets the list of registered recovery services providers in the
     * vault. This is a view only api.
     *
     * Lists the registered recovery services providers in the vault
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryServicesProviderCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryServicesProviderCollection>>;

    /**
     * @summary Gets the list of registered recovery services providers in the
     * vault. This is a view only api.
     *
     * Lists the registered recovery services providers in the vault
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryServicesProviderCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryServicesProviderCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryServicesProviderCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryServicesProviderCollection>;
    list(callback: ServiceCallback<models.RecoveryServicesProviderCollection>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryServicesProviderCollection>): void;


    /**
     * @summary Adds a recovery services provider.
     *
     * The operation to add a recovery services provider.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name.
     *
     * @param {object} addProviderInput Add provider input.
     *
     * @param {object} addProviderInput.properties The properties of an add
     * provider request.
     *
     * @param {string} addProviderInput.properties.machineName The name of the
     * machine where the provider is getting added.
     *
     * @param {object} addProviderInput.properties.authenticationIdentityInput The
     * identity provider input for DRA authentication.
     *
     * @param {object} addProviderInput.properties.resourceAccessIdentityInput The
     * identity provider input for resource access.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.tenantId The tenant
     * Id for the service principal with which the on-premise management/data plane
     * components would communicate with our Azure services.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.applicationId The
     * application/client Id for the service principal with which the on-premise
     * management/data plane components would communicate with our Azure services.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.objectId The object
     * Id of the service principal with which the on-premise management/data plane
     * components would communicate with our Azure services.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.audience The
     * intended Audience of the service principal with which the on-premise
     * management/data plane components would communicate with our Azure services.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.aadAuthority The
     * base authority for Azure Active Directory authentication.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryServicesProvider>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateWithHttpOperationResponse(fabricName: string, providerName: string, addProviderInput: models.AddRecoveryServicesProviderInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryServicesProvider>>;

    /**
     * @summary Adds a recovery services provider.
     *
     * The operation to add a recovery services provider.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name.
     *
     * @param {object} addProviderInput Add provider input.
     *
     * @param {object} addProviderInput.properties The properties of an add
     * provider request.
     *
     * @param {string} addProviderInput.properties.machineName The name of the
     * machine where the provider is getting added.
     *
     * @param {object} addProviderInput.properties.authenticationIdentityInput The
     * identity provider input for DRA authentication.
     *
     * @param {object} addProviderInput.properties.resourceAccessIdentityInput The
     * identity provider input for resource access.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.tenantId The tenant
     * Id for the service principal with which the on-premise management/data plane
     * components would communicate with our Azure services.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.applicationId The
     * application/client Id for the service principal with which the on-premise
     * management/data plane components would communicate with our Azure services.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.objectId The object
     * Id of the service principal with which the on-premise management/data plane
     * components would communicate with our Azure services.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.audience The
     * intended Audience of the service principal with which the on-premise
     * management/data plane components would communicate with our Azure services.
     *
     * @param {string}
     * addProviderInput.properties.resourceAccessIdentityInput.aadAuthority The
     * base authority for Azure Active Directory authentication.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryServicesProvider} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryServicesProvider} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryServicesProvider} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreate(fabricName: string, providerName: string, addProviderInput: models.AddRecoveryServicesProviderInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryServicesProvider>;
    beginCreate(fabricName: string, providerName: string, addProviderInput: models.AddRecoveryServicesProviderInput, callback: ServiceCallback<models.RecoveryServicesProvider>): void;
    beginCreate(fabricName: string, providerName: string, addProviderInput: models.AddRecoveryServicesProviderInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryServicesProvider>): void;


    /**
     * @summary Purges recovery service provider from fabric
     *
     * The operation to purge(force delete) a recovery services provider from the
     * vault.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginPurgeWithHttpOperationResponse(fabricName: string, providerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Purges recovery service provider from fabric
     *
     * The operation to purge(force delete) a recovery services provider from the
     * vault.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginPurge(fabricName: string, providerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginPurge(fabricName: string, providerName: string, callback: ServiceCallback<void>): void;
    beginPurge(fabricName: string, providerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Refresh details from the recovery services provider.
     *
     * The operation to refresh the information from the recovery services
     * provider.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryServicesProvider>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginRefreshProviderWithHttpOperationResponse(fabricName: string, providerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryServicesProvider>>;

    /**
     * @summary Refresh details from the recovery services provider.
     *
     * The operation to refresh the information from the recovery services
     * provider.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryServicesProvider} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryServicesProvider} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryServicesProvider} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginRefreshProvider(fabricName: string, providerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryServicesProvider>;
    beginRefreshProvider(fabricName: string, providerName: string, callback: ServiceCallback<models.RecoveryServicesProvider>): void;
    beginRefreshProvider(fabricName: string, providerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryServicesProvider>): void;


    /**
     * @summary Deletes provider from fabric. Note: Deleting provider for any
     * fabric other than SingleHost is unsupported. To maintain backward
     * compatibility for released clients the object "deleteRspInput" is used (if
     * the object is empty we assume that it is old client and continue the old
     * behavior).
     *
     * The operation to removes/delete(unregister) a recovery services provider
     * from the vault
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(fabricName: string, providerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Deletes provider from fabric. Note: Deleting provider for any
     * fabric other than SingleHost is unsupported. To maintain backward
     * compatibility for released clients the object "deleteRspInput" is used (if
     * the object is empty we assume that it is old client and continue the old
     * behavior).
     *
     * The operation to removes/delete(unregister) a recovery services provider
     * from the vault
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} providerName Recovery services provider name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(fabricName: string, providerName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(fabricName: string, providerName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(fabricName: string, providerName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Gets the list of registered recovery services providers for the
     * fabric.
     *
     * Lists the registered recovery services providers for the specified fabric.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryServicesProviderCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationFabricsNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryServicesProviderCollection>>;

    /**
     * @summary Gets the list of registered recovery services providers for the
     * fabric.
     *
     * Lists the registered recovery services providers for the specified fabric.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryServicesProviderCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryServicesProviderCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryServicesProviderCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationFabricsNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryServicesProviderCollection>;
    listByReplicationFabricsNext(nextPageLink: string, callback: ServiceCallback<models.RecoveryServicesProviderCollection>): void;
    listByReplicationFabricsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryServicesProviderCollection>): void;


    /**
     * @summary Gets the list of registered recovery services providers in the
     * vault. This is a view only api.
     *
     * Lists the registered recovery services providers in the vault
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryServicesProviderCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryServicesProviderCollection>>;

    /**
     * @summary Gets the list of registered recovery services providers in the
     * vault. This is a view only api.
     *
     * Lists the registered recovery services providers in the vault
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryServicesProviderCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryServicesProviderCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryServicesProviderCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryServicesProviderCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.RecoveryServicesProviderCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryServicesProviderCollection>): void;
}

/**
 * @class
 * ReplicationStorageClassifications
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationStorageClassifications {


    /**
     * @summary Gets the list of storage classification objects under a fabric.
     *
     * Lists the storage classifications available in the specified fabric.
     *
     * @param {string} fabricName Site name of interest.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageClassificationCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationFabricsWithHttpOperationResponse(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageClassificationCollection>>;

    /**
     * @summary Gets the list of storage classification objects under a fabric.
     *
     * Lists the storage classifications available in the specified fabric.
     *
     * @param {string} fabricName Site name of interest.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageClassificationCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageClassificationCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageClassificationCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationFabrics(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageClassificationCollection>;
    listByReplicationFabrics(fabricName: string, callback: ServiceCallback<models.StorageClassificationCollection>): void;
    listByReplicationFabrics(fabricName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageClassificationCollection>): void;


    /**
     * @summary Gets the details of a storage classification.
     *
     * Gets the details of the specified storage classification.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} storageClassificationName Storage classification name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageClassification>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(fabricName: string, storageClassificationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageClassification>>;

    /**
     * @summary Gets the details of a storage classification.
     *
     * Gets the details of the specified storage classification.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} storageClassificationName Storage classification name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageClassification} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageClassification} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageClassification} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(fabricName: string, storageClassificationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageClassification>;
    get(fabricName: string, storageClassificationName: string, callback: ServiceCallback<models.StorageClassification>): void;
    get(fabricName: string, storageClassificationName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageClassification>): void;


    /**
     * @summary Gets the list of storage classification objects under a vault.
     *
     * Lists the storage classifications in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageClassificationCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageClassificationCollection>>;

    /**
     * @summary Gets the list of storage classification objects under a vault.
     *
     * Lists the storage classifications in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageClassificationCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageClassificationCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageClassificationCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageClassificationCollection>;
    list(callback: ServiceCallback<models.StorageClassificationCollection>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageClassificationCollection>): void;


    /**
     * @summary Gets the list of storage classification objects under a fabric.
     *
     * Lists the storage classifications available in the specified fabric.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageClassificationCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationFabricsNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageClassificationCollection>>;

    /**
     * @summary Gets the list of storage classification objects under a fabric.
     *
     * Lists the storage classifications available in the specified fabric.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageClassificationCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageClassificationCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageClassificationCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationFabricsNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageClassificationCollection>;
    listByReplicationFabricsNext(nextPageLink: string, callback: ServiceCallback<models.StorageClassificationCollection>): void;
    listByReplicationFabricsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageClassificationCollection>): void;


    /**
     * @summary Gets the list of storage classification objects under a vault.
     *
     * Lists the storage classifications in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageClassificationCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageClassificationCollection>>;

    /**
     * @summary Gets the list of storage classification objects under a vault.
     *
     * Lists the storage classifications in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageClassificationCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageClassificationCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageClassificationCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageClassificationCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.StorageClassificationCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageClassificationCollection>): void;
}

/**
 * @class
 * ReplicationStorageClassificationMappings
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationStorageClassificationMappings {


    /**
     * @summary Gets the list of storage classification mappings objects under a
     * storage.
     *
     * Lists the storage classification mappings for the fabric.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} storageClassificationName Storage classification name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageClassificationMappingCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationStorageClassificationsWithHttpOperationResponse(fabricName: string, storageClassificationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageClassificationMappingCollection>>;

    /**
     * @summary Gets the list of storage classification mappings objects under a
     * storage.
     *
     * Lists the storage classification mappings for the fabric.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} storageClassificationName Storage classification name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageClassificationMappingCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageClassificationMappingCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageClassificationMappingCollection} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationStorageClassifications(fabricName: string, storageClassificationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageClassificationMappingCollection>;
    listByReplicationStorageClassifications(fabricName: string, storageClassificationName: string, callback: ServiceCallback<models.StorageClassificationMappingCollection>): void;
    listByReplicationStorageClassifications(fabricName: string, storageClassificationName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageClassificationMappingCollection>): void;


    /**
     * @summary Gets the details of a storage classification mapping.
     *
     * Gets the details of the specified storage classification mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} storageClassificationName Storage classification name.
     *
     * @param {string} storageClassificationMappingName Storage classification
     * mapping name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageClassificationMapping>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageClassificationMapping>>;

    /**
     * @summary Gets the details of a storage classification mapping.
     *
     * Gets the details of the specified storage classification mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} storageClassificationName Storage classification name.
     *
     * @param {string} storageClassificationMappingName Storage classification
     * mapping name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageClassificationMapping} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageClassificationMapping} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageClassificationMapping} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageClassificationMapping>;
    get(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, callback: ServiceCallback<models.StorageClassificationMapping>): void;
    get(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageClassificationMapping>): void;


    /**
     * @summary Create storage classification mapping.
     *
     * The operation to create a storage classification mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} storageClassificationName Storage classification name.
     *
     * @param {string} storageClassificationMappingName Storage classification
     * mapping name.
     *
     * @param {object} pairingInput Pairing input.
     *
     * @param {object} [pairingInput.properties] Storage mapping input properties.
     *
     * @param {string} [pairingInput.properties.targetStorageClassificationId] The
     * ID of the storage object.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageClassificationMapping>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, pairingInput: models.StorageClassificationMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageClassificationMapping>>;

    /**
     * @summary Create storage classification mapping.
     *
     * The operation to create a storage classification mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} storageClassificationName Storage classification name.
     *
     * @param {string} storageClassificationMappingName Storage classification
     * mapping name.
     *
     * @param {object} pairingInput Pairing input.
     *
     * @param {object} [pairingInput.properties] Storage mapping input properties.
     *
     * @param {string} [pairingInput.properties.targetStorageClassificationId] The
     * ID of the storage object.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageClassificationMapping} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageClassificationMapping} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageClassificationMapping} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, pairingInput: models.StorageClassificationMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageClassificationMapping>;
    create(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, pairingInput: models.StorageClassificationMappingInput, callback: ServiceCallback<models.StorageClassificationMapping>): void;
    create(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, pairingInput: models.StorageClassificationMappingInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageClassificationMapping>): void;


    /**
     * @summary Delete a storage classification mapping.
     *
     * The operation to delete a storage classification mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} storageClassificationName Storage classification name.
     *
     * @param {string} storageClassificationMappingName Storage classification
     * mapping name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Delete a storage classification mapping.
     *
     * The operation to delete a storage classification mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} storageClassificationName Storage classification name.
     *
     * @param {string} storageClassificationMappingName Storage classification
     * mapping name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, callback: ServiceCallback<void>): void;
    deleteMethod(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Gets the list of storage classification mappings objects under a
     * vault.
     *
     * Lists the storage classification mappings in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageClassificationMappingCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageClassificationMappingCollection>>;

    /**
     * @summary Gets the list of storage classification mappings objects under a
     * vault.
     *
     * Lists the storage classification mappings in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageClassificationMappingCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageClassificationMappingCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageClassificationMappingCollection} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageClassificationMappingCollection>;
    list(callback: ServiceCallback<models.StorageClassificationMappingCollection>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageClassificationMappingCollection>): void;


    /**
     * @summary Create storage classification mapping.
     *
     * The operation to create a storage classification mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} storageClassificationName Storage classification name.
     *
     * @param {string} storageClassificationMappingName Storage classification
     * mapping name.
     *
     * @param {object} pairingInput Pairing input.
     *
     * @param {object} [pairingInput.properties] Storage mapping input properties.
     *
     * @param {string} [pairingInput.properties.targetStorageClassificationId] The
     * ID of the storage object.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageClassificationMapping>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateWithHttpOperationResponse(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, pairingInput: models.StorageClassificationMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageClassificationMapping>>;

    /**
     * @summary Create storage classification mapping.
     *
     * The operation to create a storage classification mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} storageClassificationName Storage classification name.
     *
     * @param {string} storageClassificationMappingName Storage classification
     * mapping name.
     *
     * @param {object} pairingInput Pairing input.
     *
     * @param {object} [pairingInput.properties] Storage mapping input properties.
     *
     * @param {string} [pairingInput.properties.targetStorageClassificationId] The
     * ID of the storage object.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageClassificationMapping} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageClassificationMapping} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageClassificationMapping} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreate(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, pairingInput: models.StorageClassificationMappingInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageClassificationMapping>;
    beginCreate(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, pairingInput: models.StorageClassificationMappingInput, callback: ServiceCallback<models.StorageClassificationMapping>): void;
    beginCreate(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, pairingInput: models.StorageClassificationMappingInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageClassificationMapping>): void;


    /**
     * @summary Delete a storage classification mapping.
     *
     * The operation to delete a storage classification mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} storageClassificationName Storage classification name.
     *
     * @param {string} storageClassificationMappingName Storage classification
     * mapping name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Delete a storage classification mapping.
     *
     * The operation to delete a storage classification mapping.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} storageClassificationName Storage classification name.
     *
     * @param {string} storageClassificationMappingName Storage classification
     * mapping name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(fabricName: string, storageClassificationName: string, storageClassificationMappingName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Gets the list of storage classification mappings objects under a
     * storage.
     *
     * Lists the storage classification mappings for the fabric.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageClassificationMappingCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationStorageClassificationsNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageClassificationMappingCollection>>;

    /**
     * @summary Gets the list of storage classification mappings objects under a
     * storage.
     *
     * Lists the storage classification mappings for the fabric.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageClassificationMappingCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageClassificationMappingCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageClassificationMappingCollection} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationStorageClassificationsNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageClassificationMappingCollection>;
    listByReplicationStorageClassificationsNext(nextPageLink: string, callback: ServiceCallback<models.StorageClassificationMappingCollection>): void;
    listByReplicationStorageClassificationsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageClassificationMappingCollection>): void;


    /**
     * @summary Gets the list of storage classification mappings objects under a
     * vault.
     *
     * Lists the storage classification mappings in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StorageClassificationMappingCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StorageClassificationMappingCollection>>;

    /**
     * @summary Gets the list of storage classification mappings objects under a
     * vault.
     *
     * Lists the storage classification mappings in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StorageClassificationMappingCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StorageClassificationMappingCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StorageClassificationMappingCollection} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StorageClassificationMappingCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.StorageClassificationMappingCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StorageClassificationMappingCollection>): void;
}

/**
 * @class
 * ReplicationvCenters
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationvCenters {


    /**
     * @summary Gets the list of vCenter registered under a fabric.
     *
     * Lists the vCenter servers registered in a fabric.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VCenterCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationFabricsWithHttpOperationResponse(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VCenterCollection>>;

    /**
     * @summary Gets the list of vCenter registered under a fabric.
     *
     * Lists the vCenter servers registered in a fabric.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VCenterCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VCenterCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VCenterCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationFabrics(fabricName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VCenterCollection>;
    listByReplicationFabrics(fabricName: string, callback: ServiceCallback<models.VCenterCollection>): void;
    listByReplicationFabrics(fabricName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VCenterCollection>): void;


    /**
     * @summary Gets the details of a vCenter.
     *
     * Gets the details of a registered vCenter server(Add vCenter server.)
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} vCenterName vCenter name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VCenter>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(fabricName: string, vCenterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VCenter>>;

    /**
     * @summary Gets the details of a vCenter.
     *
     * Gets the details of a registered vCenter server(Add vCenter server.)
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} vCenterName vCenter name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VCenter} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VCenter} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VCenter} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(fabricName: string, vCenterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VCenter>;
    get(fabricName: string, vCenterName: string, callback: ServiceCallback<models.VCenter>): void;
    get(fabricName: string, vCenterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VCenter>): void;


    /**
     * @summary Add vCenter.
     *
     * The operation to create a vCenter object..
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} vCenterName vCenter name.
     *
     * @param {object} addVCenterRequest The input to the add vCenter operation.
     *
     * @param {object} [addVCenterRequest.properties] The properties of an add
     * vCenter request.
     *
     * @param {string} [addVCenterRequest.properties.friendlyName] The friendly
     * name of the vCenter.
     *
     * @param {string} [addVCenterRequest.properties.ipAddress] The IP address of
     * the vCenter to be discovered.
     *
     * @param {string} [addVCenterRequest.properties.processServerId] The process
     * server Id from where the discovery is orchestrated.
     *
     * @param {string} [addVCenterRequest.properties.port] The port number for
     * discovery.
     *
     * @param {string} [addVCenterRequest.properties.runAsAccountId] The account Id
     * which has privileges to discover the vCenter.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VCenter>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(fabricName: string, vCenterName: string, addVCenterRequest: models.AddVCenterRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VCenter>>;

    /**
     * @summary Add vCenter.
     *
     * The operation to create a vCenter object..
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} vCenterName vCenter name.
     *
     * @param {object} addVCenterRequest The input to the add vCenter operation.
     *
     * @param {object} [addVCenterRequest.properties] The properties of an add
     * vCenter request.
     *
     * @param {string} [addVCenterRequest.properties.friendlyName] The friendly
     * name of the vCenter.
     *
     * @param {string} [addVCenterRequest.properties.ipAddress] The IP address of
     * the vCenter to be discovered.
     *
     * @param {string} [addVCenterRequest.properties.processServerId] The process
     * server Id from where the discovery is orchestrated.
     *
     * @param {string} [addVCenterRequest.properties.port] The port number for
     * discovery.
     *
     * @param {string} [addVCenterRequest.properties.runAsAccountId] The account Id
     * which has privileges to discover the vCenter.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VCenter} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VCenter} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VCenter} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(fabricName: string, vCenterName: string, addVCenterRequest: models.AddVCenterRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VCenter>;
    create(fabricName: string, vCenterName: string, addVCenterRequest: models.AddVCenterRequest, callback: ServiceCallback<models.VCenter>): void;
    create(fabricName: string, vCenterName: string, addVCenterRequest: models.AddVCenterRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VCenter>): void;


    /**
     * @summary Remove vCenter operation.
     *
     * The operation to remove(unregister) a registered vCenter server from the
     * vault.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} vCenterName vCenter name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(fabricName: string, vCenterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Remove vCenter operation.
     *
     * The operation to remove(unregister) a registered vCenter server from the
     * vault.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} vCenterName vCenter name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(fabricName: string, vCenterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(fabricName: string, vCenterName: string, callback: ServiceCallback<void>): void;
    deleteMethod(fabricName: string, vCenterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Update vCenter operation.
     *
     * The operation to update a registered vCenter.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} vCenterName vCenter name
     *
     * @param {object} updateVCenterRequest The input to the update vCenter
     * operation.
     *
     * @param {object} [updateVCenterRequest.properties] The update VCenter Request
     * Properties.
     *
     * @param {string} [updateVCenterRequest.properties.friendlyName] The friendly
     * name of the vCenter.
     *
     * @param {string} [updateVCenterRequest.properties.ipAddress] The IP address
     * of the vCenter to be discovered.
     *
     * @param {string} [updateVCenterRequest.properties.processServerId] The
     * process server Id from where the update can be orchestrated.
     *
     * @param {string} [updateVCenterRequest.properties.port] The port number for
     * discovery.
     *
     * @param {string} [updateVCenterRequest.properties.runAsAccountId] The CS
     * account Id which has privileges to update the vCenter.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VCenter>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(fabricName: string, vCenterName: string, updateVCenterRequest: models.UpdateVCenterRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VCenter>>;

    /**
     * @summary Update vCenter operation.
     *
     * The operation to update a registered vCenter.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} vCenterName vCenter name
     *
     * @param {object} updateVCenterRequest The input to the update vCenter
     * operation.
     *
     * @param {object} [updateVCenterRequest.properties] The update VCenter Request
     * Properties.
     *
     * @param {string} [updateVCenterRequest.properties.friendlyName] The friendly
     * name of the vCenter.
     *
     * @param {string} [updateVCenterRequest.properties.ipAddress] The IP address
     * of the vCenter to be discovered.
     *
     * @param {string} [updateVCenterRequest.properties.processServerId] The
     * process server Id from where the update can be orchestrated.
     *
     * @param {string} [updateVCenterRequest.properties.port] The port number for
     * discovery.
     *
     * @param {string} [updateVCenterRequest.properties.runAsAccountId] The CS
     * account Id which has privileges to update the vCenter.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VCenter} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VCenter} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VCenter} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(fabricName: string, vCenterName: string, updateVCenterRequest: models.UpdateVCenterRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VCenter>;
    update(fabricName: string, vCenterName: string, updateVCenterRequest: models.UpdateVCenterRequest, callback: ServiceCallback<models.VCenter>): void;
    update(fabricName: string, vCenterName: string, updateVCenterRequest: models.UpdateVCenterRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VCenter>): void;


    /**
     * @summary Gets the list of vCenter registered under the vault.
     *
     * Lists the vCenter servers registered in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VCenterCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VCenterCollection>>;

    /**
     * @summary Gets the list of vCenter registered under the vault.
     *
     * Lists the vCenter servers registered in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VCenterCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VCenterCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VCenterCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VCenterCollection>;
    list(callback: ServiceCallback<models.VCenterCollection>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VCenterCollection>): void;


    /**
     * @summary Add vCenter.
     *
     * The operation to create a vCenter object..
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} vCenterName vCenter name.
     *
     * @param {object} addVCenterRequest The input to the add vCenter operation.
     *
     * @param {object} [addVCenterRequest.properties] The properties of an add
     * vCenter request.
     *
     * @param {string} [addVCenterRequest.properties.friendlyName] The friendly
     * name of the vCenter.
     *
     * @param {string} [addVCenterRequest.properties.ipAddress] The IP address of
     * the vCenter to be discovered.
     *
     * @param {string} [addVCenterRequest.properties.processServerId] The process
     * server Id from where the discovery is orchestrated.
     *
     * @param {string} [addVCenterRequest.properties.port] The port number for
     * discovery.
     *
     * @param {string} [addVCenterRequest.properties.runAsAccountId] The account Id
     * which has privileges to discover the vCenter.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VCenter>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateWithHttpOperationResponse(fabricName: string, vCenterName: string, addVCenterRequest: models.AddVCenterRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VCenter>>;

    /**
     * @summary Add vCenter.
     *
     * The operation to create a vCenter object..
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} vCenterName vCenter name.
     *
     * @param {object} addVCenterRequest The input to the add vCenter operation.
     *
     * @param {object} [addVCenterRequest.properties] The properties of an add
     * vCenter request.
     *
     * @param {string} [addVCenterRequest.properties.friendlyName] The friendly
     * name of the vCenter.
     *
     * @param {string} [addVCenterRequest.properties.ipAddress] The IP address of
     * the vCenter to be discovered.
     *
     * @param {string} [addVCenterRequest.properties.processServerId] The process
     * server Id from where the discovery is orchestrated.
     *
     * @param {string} [addVCenterRequest.properties.port] The port number for
     * discovery.
     *
     * @param {string} [addVCenterRequest.properties.runAsAccountId] The account Id
     * which has privileges to discover the vCenter.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VCenter} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VCenter} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VCenter} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreate(fabricName: string, vCenterName: string, addVCenterRequest: models.AddVCenterRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VCenter>;
    beginCreate(fabricName: string, vCenterName: string, addVCenterRequest: models.AddVCenterRequest, callback: ServiceCallback<models.VCenter>): void;
    beginCreate(fabricName: string, vCenterName: string, addVCenterRequest: models.AddVCenterRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VCenter>): void;


    /**
     * @summary Remove vCenter operation.
     *
     * The operation to remove(unregister) a registered vCenter server from the
     * vault.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} vCenterName vCenter name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(fabricName: string, vCenterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Remove vCenter operation.
     *
     * The operation to remove(unregister) a registered vCenter server from the
     * vault.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} vCenterName vCenter name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(fabricName: string, vCenterName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(fabricName: string, vCenterName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(fabricName: string, vCenterName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Update vCenter operation.
     *
     * The operation to update a registered vCenter.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} vCenterName vCenter name
     *
     * @param {object} updateVCenterRequest The input to the update vCenter
     * operation.
     *
     * @param {object} [updateVCenterRequest.properties] The update VCenter Request
     * Properties.
     *
     * @param {string} [updateVCenterRequest.properties.friendlyName] The friendly
     * name of the vCenter.
     *
     * @param {string} [updateVCenterRequest.properties.ipAddress] The IP address
     * of the vCenter to be discovered.
     *
     * @param {string} [updateVCenterRequest.properties.processServerId] The
     * process server Id from where the update can be orchestrated.
     *
     * @param {string} [updateVCenterRequest.properties.port] The port number for
     * discovery.
     *
     * @param {string} [updateVCenterRequest.properties.runAsAccountId] The CS
     * account Id which has privileges to update the vCenter.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VCenter>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(fabricName: string, vCenterName: string, updateVCenterRequest: models.UpdateVCenterRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VCenter>>;

    /**
     * @summary Update vCenter operation.
     *
     * The operation to update a registered vCenter.
     *
     * @param {string} fabricName Fabric name.
     *
     * @param {string} vCenterName vCenter name
     *
     * @param {object} updateVCenterRequest The input to the update vCenter
     * operation.
     *
     * @param {object} [updateVCenterRequest.properties] The update VCenter Request
     * Properties.
     *
     * @param {string} [updateVCenterRequest.properties.friendlyName] The friendly
     * name of the vCenter.
     *
     * @param {string} [updateVCenterRequest.properties.ipAddress] The IP address
     * of the vCenter to be discovered.
     *
     * @param {string} [updateVCenterRequest.properties.processServerId] The
     * process server Id from where the update can be orchestrated.
     *
     * @param {string} [updateVCenterRequest.properties.port] The port number for
     * discovery.
     *
     * @param {string} [updateVCenterRequest.properties.runAsAccountId] The CS
     * account Id which has privileges to update the vCenter.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VCenter} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VCenter} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VCenter} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(fabricName: string, vCenterName: string, updateVCenterRequest: models.UpdateVCenterRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VCenter>;
    beginUpdate(fabricName: string, vCenterName: string, updateVCenterRequest: models.UpdateVCenterRequest, callback: ServiceCallback<models.VCenter>): void;
    beginUpdate(fabricName: string, vCenterName: string, updateVCenterRequest: models.UpdateVCenterRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VCenter>): void;


    /**
     * @summary Gets the list of vCenter registered under a fabric.
     *
     * Lists the vCenter servers registered in a fabric.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VCenterCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByReplicationFabricsNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VCenterCollection>>;

    /**
     * @summary Gets the list of vCenter registered under a fabric.
     *
     * Lists the vCenter servers registered in a fabric.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VCenterCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VCenterCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VCenterCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByReplicationFabricsNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VCenterCollection>;
    listByReplicationFabricsNext(nextPageLink: string, callback: ServiceCallback<models.VCenterCollection>): void;
    listByReplicationFabricsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VCenterCollection>): void;


    /**
     * @summary Gets the list of vCenter registered under the vault.
     *
     * Lists the vCenter servers registered in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VCenterCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VCenterCollection>>;

    /**
     * @summary Gets the list of vCenter registered under the vault.
     *
     * Lists the vCenter servers registered in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VCenterCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VCenterCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VCenterCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VCenterCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.VCenterCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VCenterCollection>): void;
}

/**
 * @class
 * ReplicationJobs
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationJobs {


    /**
     * @summary Gets the list of jobs.
     *
     * Gets the list of Azure Site Recovery Jobs for the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobCollection>>;

    /**
     * @summary Gets the list of jobs.
     *
     * Gets the list of Azure Site Recovery Jobs for the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] OData filter options.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { filter? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.JobCollection>;
    list(callback: ServiceCallback<models.JobCollection>): void;
    list(options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobCollection>): void;


    /**
     * @summary Gets the job details.
     *
     * Get the details of an Azure Site Recovery job.
     *
     * @param {string} jobName Job identifier
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Job>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Job>>;

    /**
     * @summary Gets the job details.
     *
     * Get the details of an Azure Site Recovery job.
     *
     * @param {string} jobName Job identifier
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Job} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Job} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Job} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Job>;
    get(jobName: string, callback: ServiceCallback<models.Job>): void;
    get(jobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Job>): void;


    /**
     * @summary Cancels the specified job.
     *
     * The operation to cancel an Azure Site Recovery job.
     *
     * @param {string} jobName Job identifier.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Job>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    cancelWithHttpOperationResponse(jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Job>>;

    /**
     * @summary Cancels the specified job.
     *
     * The operation to cancel an Azure Site Recovery job.
     *
     * @param {string} jobName Job identifier.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Job} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Job} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Job} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    cancel(jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Job>;
    cancel(jobName: string, callback: ServiceCallback<models.Job>): void;
    cancel(jobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Job>): void;


    /**
     * @summary Restarts the specified job.
     *
     * The operation to restart an Azure Site Recovery job.
     *
     * @param {string} jobName Job identifier.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Job>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    restartWithHttpOperationResponse(jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Job>>;

    /**
     * @summary Restarts the specified job.
     *
     * The operation to restart an Azure Site Recovery job.
     *
     * @param {string} jobName Job identifier.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Job} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Job} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Job} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    restart(jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Job>;
    restart(jobName: string, callback: ServiceCallback<models.Job>): void;
    restart(jobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Job>): void;


    /**
     * @summary Resumes the specified job.
     *
     * The operation to resume an Azure Site Recovery job
     *
     * @param {string} jobName Job identifier.
     *
     * @param {object} resumeJobParams Resume rob comments.
     *
     * @param {object} [resumeJobParams.properties] Resume job properties.
     *
     * @param {string} [resumeJobParams.properties.comments] Resume job comments.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Job>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    resumeWithHttpOperationResponse(jobName: string, resumeJobParams: models.ResumeJobParams, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Job>>;

    /**
     * @summary Resumes the specified job.
     *
     * The operation to resume an Azure Site Recovery job
     *
     * @param {string} jobName Job identifier.
     *
     * @param {object} resumeJobParams Resume rob comments.
     *
     * @param {object} [resumeJobParams.properties] Resume job properties.
     *
     * @param {string} [resumeJobParams.properties.comments] Resume job comments.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Job} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Job} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Job} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    resume(jobName: string, resumeJobParams: models.ResumeJobParams, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Job>;
    resume(jobName: string, resumeJobParams: models.ResumeJobParams, callback: ServiceCallback<models.Job>): void;
    resume(jobName: string, resumeJobParams: models.ResumeJobParams, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Job>): void;


    /**
     * @summary Exports the details of the Azure Site Recovery jobs of the vault.
     *
     * The operation to export the details of the Azure Site Recovery jobs of the
     * vault.
     *
     * @param {object} jobQueryParameter job query filter.
     *
     * @param {string} [jobQueryParameter.startTime] Date time to get jobs from.
     *
     * @param {string} [jobQueryParameter.endTime] Date time to get jobs up to.
     *
     * @param {string} [jobQueryParameter.fabricId] The Id of the fabric to search
     * jobs under.
     *
     * @param {string} [jobQueryParameter.affectedObjectTypes] The type of objects.
     *
     * @param {string} [jobQueryParameter.jobStatus] The states of the job to be
     * filtered can be in.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Job>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    exportMethodWithHttpOperationResponse(jobQueryParameter: models.JobQueryParameter, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Job>>;

    /**
     * @summary Exports the details of the Azure Site Recovery jobs of the vault.
     *
     * The operation to export the details of the Azure Site Recovery jobs of the
     * vault.
     *
     * @param {object} jobQueryParameter job query filter.
     *
     * @param {string} [jobQueryParameter.startTime] Date time to get jobs from.
     *
     * @param {string} [jobQueryParameter.endTime] Date time to get jobs up to.
     *
     * @param {string} [jobQueryParameter.fabricId] The Id of the fabric to search
     * jobs under.
     *
     * @param {string} [jobQueryParameter.affectedObjectTypes] The type of objects.
     *
     * @param {string} [jobQueryParameter.jobStatus] The states of the job to be
     * filtered can be in.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Job} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Job} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Job} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    exportMethod(jobQueryParameter: models.JobQueryParameter, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Job>;
    exportMethod(jobQueryParameter: models.JobQueryParameter, callback: ServiceCallback<models.Job>): void;
    exportMethod(jobQueryParameter: models.JobQueryParameter, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Job>): void;


    /**
     * @summary Cancels the specified job.
     *
     * The operation to cancel an Azure Site Recovery job.
     *
     * @param {string} jobName Job identifier.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Job>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCancelWithHttpOperationResponse(jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Job>>;

    /**
     * @summary Cancels the specified job.
     *
     * The operation to cancel an Azure Site Recovery job.
     *
     * @param {string} jobName Job identifier.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Job} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Job} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Job} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCancel(jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Job>;
    beginCancel(jobName: string, callback: ServiceCallback<models.Job>): void;
    beginCancel(jobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Job>): void;


    /**
     * @summary Restarts the specified job.
     *
     * The operation to restart an Azure Site Recovery job.
     *
     * @param {string} jobName Job identifier.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Job>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginRestartWithHttpOperationResponse(jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Job>>;

    /**
     * @summary Restarts the specified job.
     *
     * The operation to restart an Azure Site Recovery job.
     *
     * @param {string} jobName Job identifier.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Job} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Job} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Job} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginRestart(jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Job>;
    beginRestart(jobName: string, callback: ServiceCallback<models.Job>): void;
    beginRestart(jobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Job>): void;


    /**
     * @summary Resumes the specified job.
     *
     * The operation to resume an Azure Site Recovery job
     *
     * @param {string} jobName Job identifier.
     *
     * @param {object} resumeJobParams Resume rob comments.
     *
     * @param {object} [resumeJobParams.properties] Resume job properties.
     *
     * @param {string} [resumeJobParams.properties.comments] Resume job comments.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Job>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginResumeWithHttpOperationResponse(jobName: string, resumeJobParams: models.ResumeJobParams, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Job>>;

    /**
     * @summary Resumes the specified job.
     *
     * The operation to resume an Azure Site Recovery job
     *
     * @param {string} jobName Job identifier.
     *
     * @param {object} resumeJobParams Resume rob comments.
     *
     * @param {object} [resumeJobParams.properties] Resume job properties.
     *
     * @param {string} [resumeJobParams.properties.comments] Resume job comments.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Job} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Job} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Job} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginResume(jobName: string, resumeJobParams: models.ResumeJobParams, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Job>;
    beginResume(jobName: string, resumeJobParams: models.ResumeJobParams, callback: ServiceCallback<models.Job>): void;
    beginResume(jobName: string, resumeJobParams: models.ResumeJobParams, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Job>): void;


    /**
     * @summary Exports the details of the Azure Site Recovery jobs of the vault.
     *
     * The operation to export the details of the Azure Site Recovery jobs of the
     * vault.
     *
     * @param {object} jobQueryParameter job query filter.
     *
     * @param {string} [jobQueryParameter.startTime] Date time to get jobs from.
     *
     * @param {string} [jobQueryParameter.endTime] Date time to get jobs up to.
     *
     * @param {string} [jobQueryParameter.fabricId] The Id of the fabric to search
     * jobs under.
     *
     * @param {string} [jobQueryParameter.affectedObjectTypes] The type of objects.
     *
     * @param {string} [jobQueryParameter.jobStatus] The states of the job to be
     * filtered can be in.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Job>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginExportMethodWithHttpOperationResponse(jobQueryParameter: models.JobQueryParameter, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Job>>;

    /**
     * @summary Exports the details of the Azure Site Recovery jobs of the vault.
     *
     * The operation to export the details of the Azure Site Recovery jobs of the
     * vault.
     *
     * @param {object} jobQueryParameter job query filter.
     *
     * @param {string} [jobQueryParameter.startTime] Date time to get jobs from.
     *
     * @param {string} [jobQueryParameter.endTime] Date time to get jobs up to.
     *
     * @param {string} [jobQueryParameter.fabricId] The Id of the fabric to search
     * jobs under.
     *
     * @param {string} [jobQueryParameter.affectedObjectTypes] The type of objects.
     *
     * @param {string} [jobQueryParameter.jobStatus] The states of the job to be
     * filtered can be in.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Job} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Job} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Job} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginExportMethod(jobQueryParameter: models.JobQueryParameter, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Job>;
    beginExportMethod(jobQueryParameter: models.JobQueryParameter, callback: ServiceCallback<models.Job>): void;
    beginExportMethod(jobQueryParameter: models.JobQueryParameter, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Job>): void;


    /**
     * @summary Gets the list of jobs.
     *
     * Gets the list of Azure Site Recovery Jobs for the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobCollection>>;

    /**
     * @summary Gets the list of jobs.
     *
     * Gets the list of Azure Site Recovery Jobs for the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JobCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.JobCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobCollection>): void;
}

/**
 * @class
 * ReplicationPolicies
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationPolicies {


    /**
     * @summary Gets the list of replication policies
     *
     * Lists the replication policies for a vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PolicyCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PolicyCollection>>;

    /**
     * @summary Gets the list of replication policies
     *
     * Lists the replication policies for a vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PolicyCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PolicyCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PolicyCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PolicyCollection>;
    list(callback: ServiceCallback<models.PolicyCollection>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PolicyCollection>): void;


    /**
     * @summary Gets the requested policy.
     *
     * Gets the details of a replication policy.
     *
     * @param {string} policyName Replication policy name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Policy>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Policy>>;

    /**
     * @summary Gets the requested policy.
     *
     * Gets the details of a replication policy.
     *
     * @param {string} policyName Replication policy name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Policy} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Policy} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Policy} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Policy>;
    get(policyName: string, callback: ServiceCallback<models.Policy>): void;
    get(policyName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Policy>): void;


    /**
     * @summary Creates the policy.
     *
     * The operation to create a replication policy
     *
     * @param {string} policyName Replication policy name
     *
     * @param {object} input Create policy input
     *
     * @param {object} [input.properties] Policy creation properties.
     *
     * @param {object} [input.properties.providerSpecificInput] The
     * ReplicationProviderSettings.
     *
     * @param {string} input.properties.providerSpecificInput.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Policy>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(policyName: string, input: models.CreatePolicyInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Policy>>;

    /**
     * @summary Creates the policy.
     *
     * The operation to create a replication policy
     *
     * @param {string} policyName Replication policy name
     *
     * @param {object} input Create policy input
     *
     * @param {object} [input.properties] Policy creation properties.
     *
     * @param {object} [input.properties.providerSpecificInput] The
     * ReplicationProviderSettings.
     *
     * @param {string} input.properties.providerSpecificInput.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Policy} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Policy} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Policy} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(policyName: string, input: models.CreatePolicyInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Policy>;
    create(policyName: string, input: models.CreatePolicyInput, callback: ServiceCallback<models.Policy>): void;
    create(policyName: string, input: models.CreatePolicyInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Policy>): void;


    /**
     * @summary Delete the policy.
     *
     * The operation to delete a replication policy.
     *
     * @param {string} policyName Replication policy name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Delete the policy.
     *
     * The operation to delete a replication policy.
     *
     * @param {string} policyName Replication policy name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(policyName: string, callback: ServiceCallback<void>): void;
    deleteMethod(policyName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Updates the policy.
     *
     * The operation to update a replication policy.
     *
     * @param {string} policyName Policy Id.
     *
     * @param {object} input Update Policy Input
     *
     * @param {object} [input.properties] The ReplicationProviderSettings.
     *
     * @param {object} [input.properties.replicationProviderSettings] The
     * ReplicationProviderSettings.
     *
     * @param {string} input.properties.replicationProviderSettings.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Policy>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(policyName: string, input: models.UpdatePolicyInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Policy>>;

    /**
     * @summary Updates the policy.
     *
     * The operation to update a replication policy.
     *
     * @param {string} policyName Policy Id.
     *
     * @param {object} input Update Policy Input
     *
     * @param {object} [input.properties] The ReplicationProviderSettings.
     *
     * @param {object} [input.properties.replicationProviderSettings] The
     * ReplicationProviderSettings.
     *
     * @param {string} input.properties.replicationProviderSettings.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Policy} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Policy} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Policy} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(policyName: string, input: models.UpdatePolicyInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Policy>;
    update(policyName: string, input: models.UpdatePolicyInput, callback: ServiceCallback<models.Policy>): void;
    update(policyName: string, input: models.UpdatePolicyInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Policy>): void;


    /**
     * @summary Creates the policy.
     *
     * The operation to create a replication policy
     *
     * @param {string} policyName Replication policy name
     *
     * @param {object} input Create policy input
     *
     * @param {object} [input.properties] Policy creation properties.
     *
     * @param {object} [input.properties.providerSpecificInput] The
     * ReplicationProviderSettings.
     *
     * @param {string} input.properties.providerSpecificInput.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Policy>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateWithHttpOperationResponse(policyName: string, input: models.CreatePolicyInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Policy>>;

    /**
     * @summary Creates the policy.
     *
     * The operation to create a replication policy
     *
     * @param {string} policyName Replication policy name
     *
     * @param {object} input Create policy input
     *
     * @param {object} [input.properties] Policy creation properties.
     *
     * @param {object} [input.properties.providerSpecificInput] The
     * ReplicationProviderSettings.
     *
     * @param {string} input.properties.providerSpecificInput.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Policy} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Policy} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Policy} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreate(policyName: string, input: models.CreatePolicyInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Policy>;
    beginCreate(policyName: string, input: models.CreatePolicyInput, callback: ServiceCallback<models.Policy>): void;
    beginCreate(policyName: string, input: models.CreatePolicyInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Policy>): void;


    /**
     * @summary Delete the policy.
     *
     * The operation to delete a replication policy.
     *
     * @param {string} policyName Replication policy name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Delete the policy.
     *
     * The operation to delete a replication policy.
     *
     * @param {string} policyName Replication policy name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(policyName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(policyName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(policyName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Updates the policy.
     *
     * The operation to update a replication policy.
     *
     * @param {string} policyName Policy Id.
     *
     * @param {object} input Update Policy Input
     *
     * @param {object} [input.properties] The ReplicationProviderSettings.
     *
     * @param {object} [input.properties.replicationProviderSettings] The
     * ReplicationProviderSettings.
     *
     * @param {string} input.properties.replicationProviderSettings.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Policy>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(policyName: string, input: models.UpdatePolicyInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Policy>>;

    /**
     * @summary Updates the policy.
     *
     * The operation to update a replication policy.
     *
     * @param {string} policyName Policy Id.
     *
     * @param {object} input Update Policy Input
     *
     * @param {object} [input.properties] The ReplicationProviderSettings.
     *
     * @param {object} [input.properties.replicationProviderSettings] The
     * ReplicationProviderSettings.
     *
     * @param {string} input.properties.replicationProviderSettings.instanceType
     * Polymorphic Discriminator
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Policy} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Policy} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Policy} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(policyName: string, input: models.UpdatePolicyInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Policy>;
    beginUpdate(policyName: string, input: models.UpdatePolicyInput, callback: ServiceCallback<models.Policy>): void;
    beginUpdate(policyName: string, input: models.UpdatePolicyInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Policy>): void;


    /**
     * @summary Gets the list of replication policies
     *
     * Lists the replication policies for a vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PolicyCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PolicyCollection>>;

    /**
     * @summary Gets the list of replication policies
     *
     * Lists the replication policies for a vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PolicyCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PolicyCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PolicyCollection} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PolicyCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.PolicyCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PolicyCollection>): void;
}

/**
 * @class
 * ReplicationRecoveryPlans
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationRecoveryPlans {


    /**
     * @summary Gets the list of recovery plans.
     *
     * Lists the recovery plans in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlanCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlanCollection>>;

    /**
     * @summary Gets the list of recovery plans.
     *
     * Lists the recovery plans in the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlanCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlanCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlanCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlanCollection>;
    list(callback: ServiceCallback<models.RecoveryPlanCollection>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlanCollection>): void;


    /**
     * @summary Gets the requested recovery plan.
     *
     * Gets the details of the recovery plan.
     *
     * @param {string} recoveryPlanName Name of the recovery plan.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(recoveryPlanName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Gets the requested recovery plan.
     *
     * Gets the details of the recovery plan.
     *
     * @param {string} recoveryPlanName Name of the recovery plan.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(recoveryPlanName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    get(recoveryPlanName: string, callback: ServiceCallback<models.RecoveryPlan>): void;
    get(recoveryPlanName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Creates a recovery plan with the given details.
     *
     * The operation to create a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Recovery Plan creation input.
     *
     * @param {object} input.properties Recovery plan creation properties.
     *
     * @param {string} input.properties.primaryFabricId The primary fabric Id.
     *
     * @param {string} input.properties.recoveryFabricId The recovery fabric Id.
     *
     * @param {string} [input.properties.failoverDeploymentModel] The failover
     * deployment model. Possible values include: 'NotApplicable', 'Classic',
     * 'ResourceManager'
     *
     * @param {array} input.properties.groups The recovery plan groups.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(recoveryPlanName: string, input: models.CreateRecoveryPlanInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Creates a recovery plan with the given details.
     *
     * The operation to create a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Recovery Plan creation input.
     *
     * @param {object} input.properties Recovery plan creation properties.
     *
     * @param {string} input.properties.primaryFabricId The primary fabric Id.
     *
     * @param {string} input.properties.recoveryFabricId The recovery fabric Id.
     *
     * @param {string} [input.properties.failoverDeploymentModel] The failover
     * deployment model. Possible values include: 'NotApplicable', 'Classic',
     * 'ResourceManager'
     *
     * @param {array} input.properties.groups The recovery plan groups.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(recoveryPlanName: string, input: models.CreateRecoveryPlanInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    create(recoveryPlanName: string, input: models.CreateRecoveryPlanInput, callback: ServiceCallback<models.RecoveryPlan>): void;
    create(recoveryPlanName: string, input: models.CreateRecoveryPlanInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Deletes the specified recovery plan.
     *
     * Delete a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(recoveryPlanName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Deletes the specified recovery plan.
     *
     * Delete a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(recoveryPlanName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(recoveryPlanName: string, callback: ServiceCallback<void>): void;
    deleteMethod(recoveryPlanName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Updates the given recovery plan.
     *
     * The operation to update a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Update recovery plan input
     *
     * @param {object} [input.properties] Recovery plan update properties.
     *
     * @param {array} [input.properties.groups] The recovery plan groups.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(recoveryPlanName: string, input: models.UpdateRecoveryPlanInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Updates the given recovery plan.
     *
     * The operation to update a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Update recovery plan input
     *
     * @param {object} [input.properties] Recovery plan update properties.
     *
     * @param {array} [input.properties.groups] The recovery plan groups.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(recoveryPlanName: string, input: models.UpdateRecoveryPlanInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    update(recoveryPlanName: string, input: models.UpdateRecoveryPlanInput, callback: ServiceCallback<models.RecoveryPlan>): void;
    update(recoveryPlanName: string, input: models.UpdateRecoveryPlanInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Execute commit failover of the recovery plan.
     *
     * The operation to commit the fail over of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    failoverCommitWithHttpOperationResponse(recoveryPlanName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Execute commit failover of the recovery plan.
     *
     * The operation to commit the fail over of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    failoverCommit(recoveryPlanName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    failoverCommit(recoveryPlanName: string, callback: ServiceCallback<models.RecoveryPlan>): void;
    failoverCommit(recoveryPlanName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Execute planned failover of the recovery plan.
     *
     * The operation to start the planned failover of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Failover input.
     *
     * @param {object} input.properties The recovery plan planned failover input
     * properties.
     *
     * @param {string} input.properties.failoverDirection The failover direction.
     * Possible values include: 'PrimaryToRecovery', 'RecoveryToPrimary'
     *
     * @param {array} [input.properties.providerSpecificDetails] The provider
     * specific properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    plannedFailoverWithHttpOperationResponse(recoveryPlanName: string, input: models.RecoveryPlanPlannedFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Execute planned failover of the recovery plan.
     *
     * The operation to start the planned failover of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Failover input.
     *
     * @param {object} input.properties The recovery plan planned failover input
     * properties.
     *
     * @param {string} input.properties.failoverDirection The failover direction.
     * Possible values include: 'PrimaryToRecovery', 'RecoveryToPrimary'
     *
     * @param {array} [input.properties.providerSpecificDetails] The provider
     * specific properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    plannedFailover(recoveryPlanName: string, input: models.RecoveryPlanPlannedFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    plannedFailover(recoveryPlanName: string, input: models.RecoveryPlanPlannedFailoverInput, callback: ServiceCallback<models.RecoveryPlan>): void;
    plannedFailover(recoveryPlanName: string, input: models.RecoveryPlanPlannedFailoverInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Execute reprotect of the recovery plan.
     *
     * The operation to reprotect(reverse replicate) a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    reprotectWithHttpOperationResponse(recoveryPlanName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Execute reprotect of the recovery plan.
     *
     * The operation to reprotect(reverse replicate) a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    reprotect(recoveryPlanName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    reprotect(recoveryPlanName: string, callback: ServiceCallback<models.RecoveryPlan>): void;
    reprotect(recoveryPlanName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Execute test failover of the recovery plan.
     *
     * The operation to start the test failover of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Failover input.
     *
     * @param {object} input.properties The recovery plan test failover input
     * properties.
     *
     * @param {string} input.properties.failoverDirection The failover direction.
     * Possible values include: 'PrimaryToRecovery', 'RecoveryToPrimary'
     *
     * @param {string} input.properties.networkType The network type to be used for
     * test failover.
     *
     * @param {string} [input.properties.networkId] The Id of the network to be
     * used for test failover.
     *
     * @param {string} [input.properties.skipTestFailoverCleanup] A value
     * indicating whether the test failover cleanup is to be skipped.
     *
     * @param {array} [input.properties.providerSpecificDetails] The provider
     * specific properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    testFailoverWithHttpOperationResponse(recoveryPlanName: string, input: models.RecoveryPlanTestFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Execute test failover of the recovery plan.
     *
     * The operation to start the test failover of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Failover input.
     *
     * @param {object} input.properties The recovery plan test failover input
     * properties.
     *
     * @param {string} input.properties.failoverDirection The failover direction.
     * Possible values include: 'PrimaryToRecovery', 'RecoveryToPrimary'
     *
     * @param {string} input.properties.networkType The network type to be used for
     * test failover.
     *
     * @param {string} [input.properties.networkId] The Id of the network to be
     * used for test failover.
     *
     * @param {string} [input.properties.skipTestFailoverCleanup] A value
     * indicating whether the test failover cleanup is to be skipped.
     *
     * @param {array} [input.properties.providerSpecificDetails] The provider
     * specific properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    testFailover(recoveryPlanName: string, input: models.RecoveryPlanTestFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    testFailover(recoveryPlanName: string, input: models.RecoveryPlanTestFailoverInput, callback: ServiceCallback<models.RecoveryPlan>): void;
    testFailover(recoveryPlanName: string, input: models.RecoveryPlanTestFailoverInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Execute test failover cleanup of the recovery plan.
     *
     * The operation to cleanup test failover of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Test failover cleanup input.
     *
     * @param {object} input.properties The recovery plan test failover cleanup
     * input properties.
     *
     * @param {string} [input.properties.comments] The test failover cleanup
     * comments.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    testFailoverCleanupWithHttpOperationResponse(recoveryPlanName: string, input: models.RecoveryPlanTestFailoverCleanupInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Execute test failover cleanup of the recovery plan.
     *
     * The operation to cleanup test failover of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Test failover cleanup input.
     *
     * @param {object} input.properties The recovery plan test failover cleanup
     * input properties.
     *
     * @param {string} [input.properties.comments] The test failover cleanup
     * comments.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    testFailoverCleanup(recoveryPlanName: string, input: models.RecoveryPlanTestFailoverCleanupInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    testFailoverCleanup(recoveryPlanName: string, input: models.RecoveryPlanTestFailoverCleanupInput, callback: ServiceCallback<models.RecoveryPlan>): void;
    testFailoverCleanup(recoveryPlanName: string, input: models.RecoveryPlanTestFailoverCleanupInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Execute unplanned failover of the recovery plan.
     *
     * The operation to start the failover of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Failover input.
     *
     * @param {object} input.properties The recovery plan unplanned failover input
     * properties.
     *
     * @param {string} input.properties.failoverDirection The failover direction.
     * Possible values include: 'PrimaryToRecovery', 'RecoveryToPrimary'
     *
     * @param {string} input.properties.sourceSiteOperations A value indicating
     * whether source site operations are required. Possible values include:
     * 'Required', 'NotRequired'
     *
     * @param {array} [input.properties.providerSpecificDetails] The provider
     * specific properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    unplannedFailoverWithHttpOperationResponse(recoveryPlanName: string, input: models.RecoveryPlanUnplannedFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Execute unplanned failover of the recovery plan.
     *
     * The operation to start the failover of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Failover input.
     *
     * @param {object} input.properties The recovery plan unplanned failover input
     * properties.
     *
     * @param {string} input.properties.failoverDirection The failover direction.
     * Possible values include: 'PrimaryToRecovery', 'RecoveryToPrimary'
     *
     * @param {string} input.properties.sourceSiteOperations A value indicating
     * whether source site operations are required. Possible values include:
     * 'Required', 'NotRequired'
     *
     * @param {array} [input.properties.providerSpecificDetails] The provider
     * specific properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    unplannedFailover(recoveryPlanName: string, input: models.RecoveryPlanUnplannedFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    unplannedFailover(recoveryPlanName: string, input: models.RecoveryPlanUnplannedFailoverInput, callback: ServiceCallback<models.RecoveryPlan>): void;
    unplannedFailover(recoveryPlanName: string, input: models.RecoveryPlanUnplannedFailoverInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Creates a recovery plan with the given details.
     *
     * The operation to create a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Recovery Plan creation input.
     *
     * @param {object} input.properties Recovery plan creation properties.
     *
     * @param {string} input.properties.primaryFabricId The primary fabric Id.
     *
     * @param {string} input.properties.recoveryFabricId The recovery fabric Id.
     *
     * @param {string} [input.properties.failoverDeploymentModel] The failover
     * deployment model. Possible values include: 'NotApplicable', 'Classic',
     * 'ResourceManager'
     *
     * @param {array} input.properties.groups The recovery plan groups.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateWithHttpOperationResponse(recoveryPlanName: string, input: models.CreateRecoveryPlanInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Creates a recovery plan with the given details.
     *
     * The operation to create a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Recovery Plan creation input.
     *
     * @param {object} input.properties Recovery plan creation properties.
     *
     * @param {string} input.properties.primaryFabricId The primary fabric Id.
     *
     * @param {string} input.properties.recoveryFabricId The recovery fabric Id.
     *
     * @param {string} [input.properties.failoverDeploymentModel] The failover
     * deployment model. Possible values include: 'NotApplicable', 'Classic',
     * 'ResourceManager'
     *
     * @param {array} input.properties.groups The recovery plan groups.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreate(recoveryPlanName: string, input: models.CreateRecoveryPlanInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    beginCreate(recoveryPlanName: string, input: models.CreateRecoveryPlanInput, callback: ServiceCallback<models.RecoveryPlan>): void;
    beginCreate(recoveryPlanName: string, input: models.CreateRecoveryPlanInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Deletes the specified recovery plan.
     *
     * Delete a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(recoveryPlanName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * @summary Deletes the specified recovery plan.
     *
     * Delete a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(recoveryPlanName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(recoveryPlanName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(recoveryPlanName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * @summary Updates the given recovery plan.
     *
     * The operation to update a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Update recovery plan input
     *
     * @param {object} [input.properties] Recovery plan update properties.
     *
     * @param {array} [input.properties.groups] The recovery plan groups.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(recoveryPlanName: string, input: models.UpdateRecoveryPlanInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Updates the given recovery plan.
     *
     * The operation to update a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Update recovery plan input
     *
     * @param {object} [input.properties] Recovery plan update properties.
     *
     * @param {array} [input.properties.groups] The recovery plan groups.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(recoveryPlanName: string, input: models.UpdateRecoveryPlanInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    beginUpdate(recoveryPlanName: string, input: models.UpdateRecoveryPlanInput, callback: ServiceCallback<models.RecoveryPlan>): void;
    beginUpdate(recoveryPlanName: string, input: models.UpdateRecoveryPlanInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Execute commit failover of the recovery plan.
     *
     * The operation to commit the fail over of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginFailoverCommitWithHttpOperationResponse(recoveryPlanName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Execute commit failover of the recovery plan.
     *
     * The operation to commit the fail over of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginFailoverCommit(recoveryPlanName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    beginFailoverCommit(recoveryPlanName: string, callback: ServiceCallback<models.RecoveryPlan>): void;
    beginFailoverCommit(recoveryPlanName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Execute planned failover of the recovery plan.
     *
     * The operation to start the planned failover of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Failover input.
     *
     * @param {object} input.properties The recovery plan planned failover input
     * properties.
     *
     * @param {string} input.properties.failoverDirection The failover direction.
     * Possible values include: 'PrimaryToRecovery', 'RecoveryToPrimary'
     *
     * @param {array} [input.properties.providerSpecificDetails] The provider
     * specific properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginPlannedFailoverWithHttpOperationResponse(recoveryPlanName: string, input: models.RecoveryPlanPlannedFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Execute planned failover of the recovery plan.
     *
     * The operation to start the planned failover of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Failover input.
     *
     * @param {object} input.properties The recovery plan planned failover input
     * properties.
     *
     * @param {string} input.properties.failoverDirection The failover direction.
     * Possible values include: 'PrimaryToRecovery', 'RecoveryToPrimary'
     *
     * @param {array} [input.properties.providerSpecificDetails] The provider
     * specific properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginPlannedFailover(recoveryPlanName: string, input: models.RecoveryPlanPlannedFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    beginPlannedFailover(recoveryPlanName: string, input: models.RecoveryPlanPlannedFailoverInput, callback: ServiceCallback<models.RecoveryPlan>): void;
    beginPlannedFailover(recoveryPlanName: string, input: models.RecoveryPlanPlannedFailoverInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Execute reprotect of the recovery plan.
     *
     * The operation to reprotect(reverse replicate) a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginReprotectWithHttpOperationResponse(recoveryPlanName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Execute reprotect of the recovery plan.
     *
     * The operation to reprotect(reverse replicate) a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginReprotect(recoveryPlanName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    beginReprotect(recoveryPlanName: string, callback: ServiceCallback<models.RecoveryPlan>): void;
    beginReprotect(recoveryPlanName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Execute test failover of the recovery plan.
     *
     * The operation to start the test failover of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Failover input.
     *
     * @param {object} input.properties The recovery plan test failover input
     * properties.
     *
     * @param {string} input.properties.failoverDirection The failover direction.
     * Possible values include: 'PrimaryToRecovery', 'RecoveryToPrimary'
     *
     * @param {string} input.properties.networkType The network type to be used for
     * test failover.
     *
     * @param {string} [input.properties.networkId] The Id of the network to be
     * used for test failover.
     *
     * @param {string} [input.properties.skipTestFailoverCleanup] A value
     * indicating whether the test failover cleanup is to be skipped.
     *
     * @param {array} [input.properties.providerSpecificDetails] The provider
     * specific properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginTestFailoverWithHttpOperationResponse(recoveryPlanName: string, input: models.RecoveryPlanTestFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Execute test failover of the recovery plan.
     *
     * The operation to start the test failover of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Failover input.
     *
     * @param {object} input.properties The recovery plan test failover input
     * properties.
     *
     * @param {string} input.properties.failoverDirection The failover direction.
     * Possible values include: 'PrimaryToRecovery', 'RecoveryToPrimary'
     *
     * @param {string} input.properties.networkType The network type to be used for
     * test failover.
     *
     * @param {string} [input.properties.networkId] The Id of the network to be
     * used for test failover.
     *
     * @param {string} [input.properties.skipTestFailoverCleanup] A value
     * indicating whether the test failover cleanup is to be skipped.
     *
     * @param {array} [input.properties.providerSpecificDetails] The provider
     * specific properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginTestFailover(recoveryPlanName: string, input: models.RecoveryPlanTestFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    beginTestFailover(recoveryPlanName: string, input: models.RecoveryPlanTestFailoverInput, callback: ServiceCallback<models.RecoveryPlan>): void;
    beginTestFailover(recoveryPlanName: string, input: models.RecoveryPlanTestFailoverInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Execute test failover cleanup of the recovery plan.
     *
     * The operation to cleanup test failover of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Test failover cleanup input.
     *
     * @param {object} input.properties The recovery plan test failover cleanup
     * input properties.
     *
     * @param {string} [input.properties.comments] The test failover cleanup
     * comments.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginTestFailoverCleanupWithHttpOperationResponse(recoveryPlanName: string, input: models.RecoveryPlanTestFailoverCleanupInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Execute test failover cleanup of the recovery plan.
     *
     * The operation to cleanup test failover of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Test failover cleanup input.
     *
     * @param {object} input.properties The recovery plan test failover cleanup
     * input properties.
     *
     * @param {string} [input.properties.comments] The test failover cleanup
     * comments.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginTestFailoverCleanup(recoveryPlanName: string, input: models.RecoveryPlanTestFailoverCleanupInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    beginTestFailoverCleanup(recoveryPlanName: string, input: models.RecoveryPlanTestFailoverCleanupInput, callback: ServiceCallback<models.RecoveryPlan>): void;
    beginTestFailoverCleanup(recoveryPlanName: string, input: models.RecoveryPlanTestFailoverCleanupInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Execute unplanned failover of the recovery plan.
     *
     * The operation to start the failover of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Failover input.
     *
     * @param {object} input.properties The recovery plan unplanned failover input
     * properties.
     *
     * @param {string} input.properties.failoverDirection The failover direction.
     * Possible values include: 'PrimaryToRecovery', 'RecoveryToPrimary'
     *
     * @param {string} input.properties.sourceSiteOperations A value indicating
     * whether source site operations are required. Possible values include:
     * 'Required', 'NotRequired'
     *
     * @param {array} [input.properties.providerSpecificDetails] The provider
     * specific properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlan>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUnplannedFailoverWithHttpOperationResponse(recoveryPlanName: string, input: models.RecoveryPlanUnplannedFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlan>>;

    /**
     * @summary Execute unplanned failover of the recovery plan.
     *
     * The operation to start the failover of a recovery plan.
     *
     * @param {string} recoveryPlanName Recovery plan name.
     *
     * @param {object} input Failover input.
     *
     * @param {object} input.properties The recovery plan unplanned failover input
     * properties.
     *
     * @param {string} input.properties.failoverDirection The failover direction.
     * Possible values include: 'PrimaryToRecovery', 'RecoveryToPrimary'
     *
     * @param {string} input.properties.sourceSiteOperations A value indicating
     * whether source site operations are required. Possible values include:
     * 'Required', 'NotRequired'
     *
     * @param {array} [input.properties.providerSpecificDetails] The provider
     * specific properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlan} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlan} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlan} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUnplannedFailover(recoveryPlanName: string, input: models.RecoveryPlanUnplannedFailoverInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlan>;
    beginUnplannedFailover(recoveryPlanName: string, input: models.RecoveryPlanUnplannedFailoverInput, callback: ServiceCallback<models.RecoveryPlan>): void;
    beginUnplannedFailover(recoveryPlanName: string, input: models.RecoveryPlanUnplannedFailoverInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlan>): void;


    /**
     * @summary Gets the list of recovery plans.
     *
     * Lists the recovery plans in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecoveryPlanCollection>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecoveryPlanCollection>>;

    /**
     * @summary Gets the list of recovery plans.
     *
     * Lists the recovery plans in the vault.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecoveryPlanCollection} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecoveryPlanCollection} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecoveryPlanCollection} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecoveryPlanCollection>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.RecoveryPlanCollection>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecoveryPlanCollection>): void;
}

/**
 * @class
 * ReplicationVaultHealth
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the SiteRecoveryManagementClient.
 */
export interface ReplicationVaultHealth {


    /**
     * @summary Gets the health summary for the vault.
     *
     * Gets the health details of the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VaultHealthDetails>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VaultHealthDetails>>;

    /**
     * @summary Gets the health summary for the vault.
     *
     * Gets the health details of the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VaultHealthDetails} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VaultHealthDetails} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VaultHealthDetails} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VaultHealthDetails>;
    get(callback: ServiceCallback<models.VaultHealthDetails>): void;
    get(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VaultHealthDetails>): void;


    /**
     * @summary Refreshes health summary of the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VaultHealthDetails>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    refreshWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VaultHealthDetails>>;

    /**
     * @summary Refreshes health summary of the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VaultHealthDetails} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VaultHealthDetails} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VaultHealthDetails} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    refresh(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VaultHealthDetails>;
    refresh(callback: ServiceCallback<models.VaultHealthDetails>): void;
    refresh(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VaultHealthDetails>): void;


    /**
     * @summary Refreshes health summary of the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VaultHealthDetails>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginRefreshWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VaultHealthDetails>>;

    /**
     * @summary Refreshes health summary of the vault.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VaultHealthDetails} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VaultHealthDetails} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VaultHealthDetails} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginRefresh(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VaultHealthDetails>;
    beginRefresh(callback: ServiceCallback<models.VaultHealthDetails>): void;
    beginRefresh(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VaultHealthDetails>): void;
}

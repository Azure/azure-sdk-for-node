/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Replication protected item custom data details.
 *
 */
class ReplicationProtectedItemProperties {
  /**
   * Create a ReplicationProtectedItemProperties.
   * @property {string} [friendlyName] The name.
   * @property {string} [protectedItemType] The type of protected item type.
   * @property {string} [protectableItemId] The protected item ARM Id.
   * @property {string} [recoveryServicesProviderId] The recovery provider ARM
   * Id.
   * @property {string} [primaryFabricFriendlyName] The friendly name of the
   * primary fabric.
   * @property {string} [primaryFabricProvider] The fabric provider of the
   * primary fabric.
   * @property {string} [recoveryFabricFriendlyName] The friendly name of
   * recovery fabric.
   * @property {string} [recoveryFabricId] The Arm Id of recovery fabric.
   * @property {string} [primaryProtectionContainerFriendlyName] The name of
   * primary protection container friendly name.
   * @property {string} [recoveryProtectionContainerFriendlyName] The name of
   * recovery container friendly name.
   * @property {string} [protectionState] The protection status.
   * @property {string} [protectionStateDescription] The protection state
   * description.
   * @property {string} [activeLocation] The Current active location of the PE.
   * @property {string} [testFailoverState] The Test failover state.
   * @property {string} [testFailoverStateDescription] The Test failover state
   * description.
   * @property {array} [allowedOperations] The allowed operations on the
   * Replication protected item.
   * @property {string} [replicationHealth] The consolidated protection health
   * for the VM taking any issues with SRS as well as all the replication units
   * associated with the VM's replication group into account. This is a string
   * representation of the ProtectionHealth enumeration.
   * @property {string} [failoverHealth] The consolidated failover health for
   * the VM.
   * @property {array} [healthErrors] List of health errors.
   * @property {string} [policyId] The ID of Policy governing this PE.
   * @property {string} [policyFriendlyName] The name of Policy governing this
   * PE.
   * @property {date} [lastSuccessfulFailoverTime] The Last successful failover
   * time.
   * @property {date} [lastSuccessfulTestFailoverTime] The Last successful test
   * failover time.
   * @property {object} [currentScenario] The current scenario.
   * @property {string} [currentScenario.scenarioName] Scenario name.
   * @property {string} [currentScenario.jobId] ARM Id of the job being
   * executed.
   * @property {date} [currentScenario.startTime] Start time of the workflow.
   * @property {string} [failoverRecoveryPointId] The recovery point ARM Id to
   * which the Vm was failed over.
   * @property {object} [providerSpecificDetails] The Replication provider
   * custom settings.
   * @property {string} [providerSpecificDetails.instanceType] Polymorphic
   * Discriminator
   * @property {string} [recoveryContainerId] The recovery container Id.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ReplicationProtectedItemProperties
   *
   * @returns {object} metadata of ReplicationProtectedItemProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ReplicationProtectedItemProperties',
      type: {
        name: 'Composite',
        className: 'ReplicationProtectedItemProperties',
        modelProperties: {
          friendlyName: {
            required: false,
            serializedName: 'friendlyName',
            type: {
              name: 'String'
            }
          },
          protectedItemType: {
            required: false,
            serializedName: 'protectedItemType',
            type: {
              name: 'String'
            }
          },
          protectableItemId: {
            required: false,
            serializedName: 'protectableItemId',
            type: {
              name: 'String'
            }
          },
          recoveryServicesProviderId: {
            required: false,
            serializedName: 'recoveryServicesProviderId',
            type: {
              name: 'String'
            }
          },
          primaryFabricFriendlyName: {
            required: false,
            serializedName: 'primaryFabricFriendlyName',
            type: {
              name: 'String'
            }
          },
          primaryFabricProvider: {
            required: false,
            serializedName: 'primaryFabricProvider',
            type: {
              name: 'String'
            }
          },
          recoveryFabricFriendlyName: {
            required: false,
            serializedName: 'recoveryFabricFriendlyName',
            type: {
              name: 'String'
            }
          },
          recoveryFabricId: {
            required: false,
            serializedName: 'recoveryFabricId',
            type: {
              name: 'String'
            }
          },
          primaryProtectionContainerFriendlyName: {
            required: false,
            serializedName: 'primaryProtectionContainerFriendlyName',
            type: {
              name: 'String'
            }
          },
          recoveryProtectionContainerFriendlyName: {
            required: false,
            serializedName: 'recoveryProtectionContainerFriendlyName',
            type: {
              name: 'String'
            }
          },
          protectionState: {
            required: false,
            serializedName: 'protectionState',
            type: {
              name: 'String'
            }
          },
          protectionStateDescription: {
            required: false,
            serializedName: 'protectionStateDescription',
            type: {
              name: 'String'
            }
          },
          activeLocation: {
            required: false,
            serializedName: 'activeLocation',
            type: {
              name: 'String'
            }
          },
          testFailoverState: {
            required: false,
            serializedName: 'testFailoverState',
            type: {
              name: 'String'
            }
          },
          testFailoverStateDescription: {
            required: false,
            serializedName: 'testFailoverStateDescription',
            type: {
              name: 'String'
            }
          },
          allowedOperations: {
            required: false,
            serializedName: 'allowedOperations',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          replicationHealth: {
            required: false,
            serializedName: 'replicationHealth',
            type: {
              name: 'String'
            }
          },
          failoverHealth: {
            required: false,
            serializedName: 'failoverHealth',
            type: {
              name: 'String'
            }
          },
          healthErrors: {
            required: false,
            serializedName: 'healthErrors',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'HealthErrorElementType',
                  type: {
                    name: 'Composite',
                    className: 'HealthError'
                  }
              }
            }
          },
          policyId: {
            required: false,
            serializedName: 'policyId',
            type: {
              name: 'String'
            }
          },
          policyFriendlyName: {
            required: false,
            serializedName: 'policyFriendlyName',
            type: {
              name: 'String'
            }
          },
          lastSuccessfulFailoverTime: {
            required: false,
            serializedName: 'lastSuccessfulFailoverTime',
            type: {
              name: 'DateTime'
            }
          },
          lastSuccessfulTestFailoverTime: {
            required: false,
            serializedName: 'lastSuccessfulTestFailoverTime',
            type: {
              name: 'DateTime'
            }
          },
          currentScenario: {
            required: false,
            serializedName: 'currentScenario',
            type: {
              name: 'Composite',
              className: 'CurrentScenarioDetails'
            }
          },
          failoverRecoveryPointId: {
            required: false,
            serializedName: 'failoverRecoveryPointId',
            type: {
              name: 'String'
            }
          },
          providerSpecificDetails: {
            required: false,
            serializedName: 'providerSpecificDetails',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'instanceType',
                clientName: 'instanceType'
              },
              uberParent: 'ReplicationProviderSpecificSettings',
              className: 'ReplicationProviderSpecificSettings'
            }
          },
          recoveryContainerId: {
            required: false,
            serializedName: 'recoveryContainerId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ReplicationProtectedItemProperties;

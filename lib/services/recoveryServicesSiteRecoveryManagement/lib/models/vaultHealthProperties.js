/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * class to define the health summary of the Vault.
 *
 */
class VaultHealthProperties {
  /**
   * Create a VaultHealthProperties.
   * @member {array} [vaultErrors] The list of errors on the vault.
   * @member {object} [protectedItemsHealth] The list of the health detail of
   * the protected items in the vault.
   * @member {number} [protectedItemsHealth.resourceCount] The count of total
   * resources umder the container.
   * @member {array} [protectedItemsHealth.issues] The list of summary of
   * health errors across the resources under the container.
   * @member {object} [fabricsHealth] The list of the health detail of the
   * fabrics in the vault.
   * @member {number} [fabricsHealth.resourceCount] The count of total
   * resources umder the container.
   * @member {array} [fabricsHealth.issues] The list of summary of health
   * errors across the resources under the container.
   */
  constructor() {
  }

  /**
   * Defines the metadata of VaultHealthProperties
   *
   * @returns {object} metadata of VaultHealthProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VaultHealthProperties',
      type: {
        name: 'Composite',
        className: 'VaultHealthProperties',
        modelProperties: {
          vaultErrors: {
            required: false,
            serializedName: 'vaultErrors',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'HealthErrorElementType',
                  type: {
                    name: 'Composite',
                    className: 'HealthError'
                  }
              }
            }
          },
          protectedItemsHealth: {
            required: false,
            serializedName: 'protectedItemsHealth',
            type: {
              name: 'Composite',
              className: 'ResourceHealthSummary'
            }
          },
          fabricsHealth: {
            required: false,
            serializedName: 'fabricsHealth',
            type: {
              name: 'Composite',
              className: 'ResourceHealthSummary'
            }
          }
        }
      }
    };
  }
}

module.exports = VaultHealthProperties;

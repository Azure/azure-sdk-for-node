/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Recovery plan custom details.
 *
 */
class RecoveryPlanProperties {
  /**
   * Create a RecoveryPlanProperties.
   * @property {string} [friendlyName] The friendly name.
   * @property {string} [primaryFabricId] The primary fabric Id.
   * @property {string} [primaryFabricFriendlyName] The primary fabric friendly
   * name.
   * @property {string} [recoveryFabricId] The recovery fabric Id.
   * @property {string} [recoveryFabricFriendlyName] The recovery fabric
   * friendly name.
   * @property {string} [failoverDeploymentModel] The failover deployment
   * model.
   * @property {array} [replicationProviders] The list of replication
   * providers.
   * @property {array} [allowedOperations] The list of allowed operations.
   * @property {date} [lastPlannedFailoverTime] The start time of the last
   * planned failover.
   * @property {date} [lastUnplannedFailoverTime] The start time of the last
   * unplanned failover.
   * @property {date} [lastTestFailoverTime] The start time of the last test
   * failover.
   * @property {object} [currentScenario] The current scenario details.
   * @property {string} [currentScenario.scenarioName] Scenario name.
   * @property {string} [currentScenario.jobId] ARM Id of the job being
   * executed.
   * @property {date} [currentScenario.startTime] Start time of the workflow.
   * @property {string} [currentScenarioStatus] The recovery plan status.
   * @property {string} [currentScenarioStatusDescription] The recovery plan
   * status description.
   * @property {array} [groups] The recovery plan groups.
   */
  constructor() {
  }

  /**
   * Defines the metadata of RecoveryPlanProperties
   *
   * @returns {object} metadata of RecoveryPlanProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RecoveryPlanProperties',
      type: {
        name: 'Composite',
        className: 'RecoveryPlanProperties',
        modelProperties: {
          friendlyName: {
            required: false,
            serializedName: 'friendlyName',
            type: {
              name: 'String'
            }
          },
          primaryFabricId: {
            required: false,
            serializedName: 'primaryFabricId',
            type: {
              name: 'String'
            }
          },
          primaryFabricFriendlyName: {
            required: false,
            serializedName: 'primaryFabricFriendlyName',
            type: {
              name: 'String'
            }
          },
          recoveryFabricId: {
            required: false,
            serializedName: 'recoveryFabricId',
            type: {
              name: 'String'
            }
          },
          recoveryFabricFriendlyName: {
            required: false,
            serializedName: 'recoveryFabricFriendlyName',
            type: {
              name: 'String'
            }
          },
          failoverDeploymentModel: {
            required: false,
            serializedName: 'failoverDeploymentModel',
            type: {
              name: 'String'
            }
          },
          replicationProviders: {
            required: false,
            serializedName: 'replicationProviders',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          allowedOperations: {
            required: false,
            serializedName: 'allowedOperations',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          lastPlannedFailoverTime: {
            required: false,
            serializedName: 'lastPlannedFailoverTime',
            type: {
              name: 'DateTime'
            }
          },
          lastUnplannedFailoverTime: {
            required: false,
            serializedName: 'lastUnplannedFailoverTime',
            type: {
              name: 'DateTime'
            }
          },
          lastTestFailoverTime: {
            required: false,
            serializedName: 'lastTestFailoverTime',
            type: {
              name: 'DateTime'
            }
          },
          currentScenario: {
            required: false,
            serializedName: 'currentScenario',
            type: {
              name: 'Composite',
              className: 'CurrentScenarioDetails'
            }
          },
          currentScenarioStatus: {
            required: false,
            serializedName: 'currentScenarioStatus',
            type: {
              name: 'String'
            }
          },
          currentScenarioStatusDescription: {
            required: false,
            serializedName: 'currentScenarioStatusDescription',
            type: {
              name: 'String'
            }
          },
          groups: {
            required: false,
            serializedName: 'groups',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'RecoveryPlanGroupElementType',
                  type: {
                    name: 'Composite',
                    className: 'RecoveryPlanGroup'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = RecoveryPlanProperties;

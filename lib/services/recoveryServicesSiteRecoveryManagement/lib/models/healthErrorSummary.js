/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * class to define the summary of the health error details.
 *
 */
class HealthErrorSummary {
  /**
   * Create a HealthErrorSummary.
   * @property {string} [summaryCode] The code of the health error.
   * @property {string} [category] The category of the health error. Possible
   * values include: 'None', 'Replication', 'TestFailover', 'Configuration',
   * 'FabricInfrastructure', 'VersionExpiry', 'AgentAutoUpdate'
   * @property {string} [severity] Severity of error. Possible values include:
   * 'NONE', 'Warning', 'Error', 'Info'
   * @property {string} [summaryMessage] The summary message of the health
   * error.
   * @property {string} [affectedResourceType] The type of affected ARM
   * resource.
   * @property {string} [affectedResourceSubtype] The sub type of any
   * subcomponent within the ARM resource that this might be applicable. Value
   * remains null if not applicable.
   * @property {array} [affectedResourceCorrelationIds] The list of affected
   * resource correlation Ids. This can be used to uniquely identify the count
   * of items affected by a specific category and severity as well as count of
   * item affected by an specific issue.
   */
  constructor() {
  }

  /**
   * Defines the metadata of HealthErrorSummary
   *
   * @returns {object} metadata of HealthErrorSummary
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'HealthErrorSummary',
      type: {
        name: 'Composite',
        className: 'HealthErrorSummary',
        modelProperties: {
          summaryCode: {
            required: false,
            serializedName: 'summaryCode',
            type: {
              name: 'String'
            }
          },
          category: {
            required: false,
            serializedName: 'category',
            type: {
              name: 'String'
            }
          },
          severity: {
            required: false,
            serializedName: 'severity',
            type: {
              name: 'String'
            }
          },
          summaryMessage: {
            required: false,
            serializedName: 'summaryMessage',
            type: {
              name: 'String'
            }
          },
          affectedResourceType: {
            required: false,
            serializedName: 'affectedResourceType',
            type: {
              name: 'String'
            }
          },
          affectedResourceSubtype: {
            required: false,
            serializedName: 'affectedResourceSubtype',
            type: {
              name: 'String'
            }
          },
          affectedResourceCorrelationIds: {
            required: false,
            serializedName: 'affectedResourceCorrelationIds',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = HealthErrorSummary;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Hyper-V Replica Azure specific input for creating a protection profile.
 *
 * @extends models['PolicyProviderSpecificInput']
 */
class HyperVReplicaAzurePolicyInput extends models['PolicyProviderSpecificInput'] {
  /**
   * Create a HyperVReplicaAzurePolicyInput.
   * @member {number} [recoveryPointHistoryDuration] The duration (in hours) to
   * which point the recovery history needs to be maintained.
   * @member {number} [applicationConsistentSnapshotFrequencyInHours] The
   * interval (in hours) at which Hyper-V Replica should create an application
   * consistent snapshot within the VM.
   * @member {number} [replicationInterval] The replication interval.
   * @member {string} [onlineReplicationStartTime] The scheduled start time for
   * the initial replication. If this parameter is Null, the initial
   * replication starts immediately.
   * @member {string} [encryption] A value indicating whether encryption needs
   * to be enabled for Vms in this cloud.
   * @member {array} [storageAccounts] The list of storage accounts to which
   * the VMs in the primary cloud can replicate to.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of HyperVReplicaAzurePolicyInput
   *
   * @returns {object} metadata of HyperVReplicaAzurePolicyInput
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'HyperVReplicaAzure',
      type: {
        name: 'Composite',
        className: 'HyperVReplicaAzurePolicyInput',
        modelProperties: {
          instanceType: {
            required: true,
            serializedName: 'instanceType',
            type: {
              name: 'String'
            }
          },
          recoveryPointHistoryDuration: {
            required: false,
            serializedName: 'recoveryPointHistoryDuration',
            type: {
              name: 'Number'
            }
          },
          applicationConsistentSnapshotFrequencyInHours: {
            required: false,
            serializedName: 'applicationConsistentSnapshotFrequencyInHours',
            type: {
              name: 'Number'
            }
          },
          replicationInterval: {
            required: false,
            serializedName: 'replicationInterval',
            type: {
              name: 'Number'
            }
          },
          onlineReplicationStartTime: {
            required: false,
            serializedName: 'onlineReplicationStartTime',
            type: {
              name: 'String'
            }
          },
          encryption: {
            required: false,
            serializedName: 'encryption',
            type: {
              name: 'String'
            }
          },
          storageAccounts: {
            required: false,
            serializedName: 'storageAccounts',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = HyperVReplicaAzurePolicyInput;

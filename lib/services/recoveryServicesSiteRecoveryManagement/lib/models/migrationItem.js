/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Migration item.
 *
 * @extends models['Resource']
 */
class MigrationItem extends models['Resource'] {
  /**
   * Create a MigrationItem.
   * @property {object} [properties] The migration item properties.
   * @property {string} [properties.machineName] The on-premise virtual machine
   * name.
   * @property {string} [properties.policyId] The ARM Id of policy governing
   * this item.
   * @property {string} [properties.policyFriendlyName] The name of policy
   * governing this item.
   * @property {string} [properties.recoveryServicesProviderId] The recovery
   * services provider ARM Id.
   * @property {string} [properties.migrationState] The migration status.
   * Possible values include: 'None', 'EnableMigrationInProgress',
   * 'EnableMigrationFailed', 'DisableMigrationInProgress',
   * 'DisableMigrationFailed', 'InitialSeedingInProgress',
   * 'InitialSeedingFailed', 'Replicating', 'MigrationInProgress',
   * 'MigrationSucceeded', 'MigrationFailed'
   * @property {string} [properties.migrationStateDescription] The migration
   * state description.
   * @property {string} [properties.testMigrateState] The test migrate state.
   * Possible values include: 'None', 'TestMigrationInProgress',
   * 'TestMigrationSucceeded', 'TestMigrationFailed',
   * 'TestMigrationCleanupInProgress'
   * @property {string} [properties.testMigrateStateDescription] The test
   * migrate state description.
   * @property {string} [properties.health] The consolidated health.
   * @property {array} [properties.healthErrors] The list of health errors.
   * @property {array} [properties.allowedOperations] The allowed operations on
   * the migration item, based on the current migration state of the item.
   * @property {object} [properties.currentJob] The current job details.
   * @property {string} [properties.currentJob.jobName] The job name.
   * @property {string} [properties.currentJob.jobId] The ARM Id of the job
   * being executed.
   * @property {date} [properties.currentJob.startTime] The start time of the
   * job.
   * @property {object} [properties.providerSpecificDetails] The migration
   * provider custom settings.
   * @property {string} [properties.providerSpecificDetails.instanceType]
   * Polymorphic Discriminator
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of MigrationItem
   *
   * @returns {object} metadata of MigrationItem
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'MigrationItem',
      type: {
        name: 'Composite',
        className: 'MigrationItem',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          properties: {
            required: false,
            serializedName: 'properties',
            type: {
              name: 'Composite',
              className: 'MigrationItemProperties'
            }
          }
        }
      }
    };
  }
}

module.exports = MigrationItem;

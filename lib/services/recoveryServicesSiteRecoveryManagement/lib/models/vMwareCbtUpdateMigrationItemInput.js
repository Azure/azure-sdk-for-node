/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * VMwareCbt specific update migration item input.
 *
 * @extends models['UpdateMigrationItemProviderSpecificInput']
 */
class VMwareCbtUpdateMigrationItemInput extends models['UpdateMigrationItemProviderSpecificInput'] {
  /**
   * Create a VMwareCbtUpdateMigrationItemInput.
   * @property {string} [targetVmName] The target VM name.
   * @property {string} [targetVmSize] The target VM size.
   * @property {string} [targetResourceGroupId] The target resource group ARM
   * Id.
   * @property {string} [targetAvailabilitySetId] The target availability set
   * ARM Id.
   * @property {string} [targetBootDiagnosticsStorageAccountId] The target boot
   * diagnostics storage account ARM Id.
   * @property {string} [targetNetworkId] The target network ARM Id.
   * @property {array} [vmNics] The list of NIC details.
   * @property {string} [licenseType] The license type. Possible values
   * include: 'NotSpecified', 'NoLicenseType', 'WindowsServer'
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of VMwareCbtUpdateMigrationItemInput
   *
   * @returns {object} metadata of VMwareCbtUpdateMigrationItemInput
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VMwareCbt',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'instanceType',
          clientName: 'instanceType'
        },
        uberParent: 'UpdateMigrationItemProviderSpecificInput',
        className: 'VMwareCbtUpdateMigrationItemInput',
        modelProperties: {
          instanceType: {
            required: true,
            serializedName: 'instanceType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          targetVmName: {
            required: false,
            serializedName: 'targetVmName',
            type: {
              name: 'String'
            }
          },
          targetVmSize: {
            required: false,
            serializedName: 'targetVmSize',
            type: {
              name: 'String'
            }
          },
          targetResourceGroupId: {
            required: false,
            serializedName: 'targetResourceGroupId',
            type: {
              name: 'String'
            }
          },
          targetAvailabilitySetId: {
            required: false,
            serializedName: 'targetAvailabilitySetId',
            type: {
              name: 'String'
            }
          },
          targetBootDiagnosticsStorageAccountId: {
            required: false,
            serializedName: 'targetBootDiagnosticsStorageAccountId',
            type: {
              name: 'String'
            }
          },
          targetNetworkId: {
            required: false,
            serializedName: 'targetNetworkId',
            type: {
              name: 'String'
            }
          },
          vmNics: {
            required: false,
            serializedName: 'vmNics',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'VMwareCbtNicInputElementType',
                  type: {
                    name: 'Composite',
                    className: 'VMwareCbtNicInput'
                  }
              }
            }
          },
          licenseType: {
            required: false,
            serializedName: 'licenseType',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = VMwareCbtUpdateMigrationItemInput;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * VMwareCbt container mapping input.
 *
 * @extends models['ReplicationProviderSpecificContainerMappingInput']
 */
class VMwareCbtContainerMappingInput extends models['ReplicationProviderSpecificContainerMappingInput'] {
  /**
   * Create a VMwareCbtContainerMappingInput.
   * @property {string} keyVaultId The target key vault ARM Id.
   * @property {string} keyVaultUri The target key vault URL.
   * @property {string} storageAccountId The storage account ARM Id.
   * @property {string} storageAccountSasSecretName The secret name of the
   * storage account.
   * @property {string} serviceBusConnectionStringSecretName The secret name of
   * the service bus connection string.
   * @property {string} targetLocation The target location.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of VMwareCbtContainerMappingInput
   *
   * @returns {object} metadata of VMwareCbtContainerMappingInput
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VMwareCbt',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'instanceType',
          clientName: 'instanceType'
        },
        uberParent: 'ReplicationProviderSpecificContainerMappingInput',
        className: 'VMwareCbtContainerMappingInput',
        modelProperties: {
          instanceType: {
            required: true,
            serializedName: 'instanceType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          keyVaultId: {
            required: true,
            serializedName: 'keyVaultId',
            type: {
              name: 'String'
            }
          },
          keyVaultUri: {
            required: true,
            serializedName: 'keyVaultUri',
            type: {
              name: 'String'
            }
          },
          storageAccountId: {
            required: true,
            serializedName: 'storageAccountId',
            type: {
              name: 'String'
            }
          },
          storageAccountSasSecretName: {
            required: true,
            serializedName: 'storageAccountSasSecretName',
            type: {
              name: 'String'
            }
          },
          serviceBusConnectionStringSecretName: {
            required: true,
            serializedName: 'serviceBusConnectionStringSecretName',
            type: {
              name: 'String'
            }
          },
          targetLocation: {
            required: true,
            serializedName: 'targetLocation',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = VMwareCbtContainerMappingInput;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * ARM internal error class for providing additional debug data.
 *
 */
class ARMInnerError {
  /**
   * Create a ARMInnerError.
   * @member {string} [trace] Gets complete stack trace of the exception.
   * @member {string} [source] Gets exception source.
   * @member {object} [methodStatus] Gets data related to method which threw
   * the exception.
   * @member {string} [methodStatus.isVirtual] Gets a value indicating whether
   * called method was virtual
   * @member {array} [methodStatus.parameters] Gets parameter list passed to
   * method.
   * @member {string} [methodStatus.containsGenericParameters] Gets a value
   * indicating whether method container generic params.
   * @member {string} [cloudId] Gets cloud Id in exception.
   * @member {string} [hVHostId] Gets hyperV host ID.
   * @member {string} [hVClusterId] Gets hyperV cluster Id.
   * @member {string} [networkId] Gets network Id.
   * @member {string} [vmId] Gets Vm Id.
   * @member {string} [fabricId] Gets Fabric Id.
   * @member {string} [liveId] Gets Live Id of the caller.
   * @member {string} [containerId] Gets container Id of the caller.
   * @member {string} [resourceId] Gets resource id used in the call.
   * @member {string} [resourceName] Gets caller resource name.
   * @member {string} [subscriptionId] Gets subscription Id.
   * @member {string} [serializedSRSLogContext] Gets serialized SRS log
   * context.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ARMInnerError
   *
   * @returns {object} metadata of ARMInnerError
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ARMInnerError',
      type: {
        name: 'Composite',
        className: 'ARMInnerError',
        modelProperties: {
          trace: {
            required: false,
            serializedName: 'trace',
            type: {
              name: 'String'
            }
          },
          source: {
            required: false,
            serializedName: 'source',
            type: {
              name: 'String'
            }
          },
          methodStatus: {
            required: false,
            serializedName: 'methodStatus',
            type: {
              name: 'Composite',
              className: 'MethodCallStatus'
            }
          },
          cloudId: {
            required: false,
            serializedName: 'cloudId',
            type: {
              name: 'String'
            }
          },
          hVHostId: {
            required: false,
            serializedName: 'hVHostId',
            type: {
              name: 'String'
            }
          },
          hVClusterId: {
            required: false,
            serializedName: 'hVClusterId',
            type: {
              name: 'String'
            }
          },
          networkId: {
            required: false,
            serializedName: 'networkId',
            type: {
              name: 'String'
            }
          },
          vmId: {
            required: false,
            serializedName: 'vmId',
            type: {
              name: 'String'
            }
          },
          fabricId: {
            required: false,
            serializedName: 'fabricId',
            type: {
              name: 'String'
            }
          },
          liveId: {
            required: false,
            serializedName: 'liveId',
            type: {
              name: 'String'
            }
          },
          containerId: {
            required: false,
            serializedName: 'containerId',
            type: {
              name: 'String'
            }
          },
          resourceId: {
            required: false,
            serializedName: 'resourceId',
            type: {
              name: 'String'
            }
          },
          resourceName: {
            required: false,
            serializedName: 'resourceName',
            type: {
              name: 'String'
            }
          },
          subscriptionId: {
            required: false,
            serializedName: 'subscriptionId',
            type: {
              name: 'String'
            }
          },
          serializedSRSLogContext: {
            required: false,
            serializedName: 'serializedSRSLogContext',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ARMInnerError;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * A2A protected disk details.
 *
 */
class A2AProtectedDiskDetails {
  /**
   * Create a A2AProtectedDiskDetails.
   * @member {string} [diskUri] The disk uri.
   * @member {string} [recoveryAzureStorageAccountId] The recovery disk storage
   * account.
   * @member {string} [primaryDiskAzureStorageAccountId] The primary disk
   * storage account.
   * @member {string} [recoveryDiskUri] Recovery disk uri.
   * @member {string} [diskName] The disk name.
   * @member {number} [diskCapacityInBytes] The disk capacity in bytes.
   * @member {string} [primaryStagingAzureStorageAccountId] The primary staging
   * storage account.
   * @member {string} [diskType] The type of disk.
   * @member {boolean} [resyncRequired] A value indicating whether resync is
   * required for this disk.
   * @member {number} [monitoringPercentageCompletion] The percentage of the
   * monitoring job. The type of the monitoring job is defined by
   * MonitoringJobType property.
   * @member {string} [monitoringJobType] The type of the monitoring job. The
   * progress is contained in MonitoringPercentageCompletion property.
   * @member {number} [dataPendingInStagingStorageAccountInMB] The data pending
   * for replication in MB at staging account.
   * @member {number} [dataPendingAtSourceAgentInMB] The data pending at source
   * virtual machine in MB.
   * @member {boolean} [isDiskEncrypted] A value indicating whether vm has
   * encrypted os disk or not.
   * @member {string} [secretIdentifier] The secret URL / identifier (BEK).
   * @member {string} [dekKeyVaultArmId] The KeyVault resource id for secret
   * (BEK).
   * @member {boolean} [isDiskKeyEncrypted] A value indicating whether disk key
   * got encrypted or not.
   * @member {string} [keyIdentifier] The key URL / identifier (KEK).
   * @member {string} [kekKeyVaultArmId] The KeyVault resource id for key
   * (KEK).
   */
  constructor() {
  }

  /**
   * Defines the metadata of A2AProtectedDiskDetails
   *
   * @returns {object} metadata of A2AProtectedDiskDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'A2AProtectedDiskDetails',
      type: {
        name: 'Composite',
        className: 'A2AProtectedDiskDetails',
        modelProperties: {
          diskUri: {
            required: false,
            serializedName: 'diskUri',
            type: {
              name: 'String'
            }
          },
          recoveryAzureStorageAccountId: {
            required: false,
            serializedName: 'recoveryAzureStorageAccountId',
            type: {
              name: 'String'
            }
          },
          primaryDiskAzureStorageAccountId: {
            required: false,
            serializedName: 'primaryDiskAzureStorageAccountId',
            type: {
              name: 'String'
            }
          },
          recoveryDiskUri: {
            required: false,
            serializedName: 'recoveryDiskUri',
            type: {
              name: 'String'
            }
          },
          diskName: {
            required: false,
            serializedName: 'diskName',
            type: {
              name: 'String'
            }
          },
          diskCapacityInBytes: {
            required: false,
            serializedName: 'diskCapacityInBytes',
            type: {
              name: 'Number'
            }
          },
          primaryStagingAzureStorageAccountId: {
            required: false,
            serializedName: 'primaryStagingAzureStorageAccountId',
            type: {
              name: 'String'
            }
          },
          diskType: {
            required: false,
            serializedName: 'diskType',
            type: {
              name: 'String'
            }
          },
          resyncRequired: {
            required: false,
            serializedName: 'resyncRequired',
            type: {
              name: 'Boolean'
            }
          },
          monitoringPercentageCompletion: {
            required: false,
            serializedName: 'monitoringPercentageCompletion',
            type: {
              name: 'Number'
            }
          },
          monitoringJobType: {
            required: false,
            serializedName: 'monitoringJobType',
            type: {
              name: 'String'
            }
          },
          dataPendingInStagingStorageAccountInMB: {
            required: false,
            serializedName: 'dataPendingInStagingStorageAccountInMB',
            type: {
              name: 'Number'
            }
          },
          dataPendingAtSourceAgentInMB: {
            required: false,
            serializedName: 'dataPendingAtSourceAgentInMB',
            type: {
              name: 'Number'
            }
          },
          isDiskEncrypted: {
            required: false,
            serializedName: 'isDiskEncrypted',
            type: {
              name: 'Boolean'
            }
          },
          secretIdentifier: {
            required: false,
            serializedName: 'secretIdentifier',
            type: {
              name: 'String'
            }
          },
          dekKeyVaultArmId: {
            required: false,
            serializedName: 'dekKeyVaultArmId',
            type: {
              name: 'String'
            }
          },
          isDiskKeyEncrypted: {
            required: false,
            serializedName: 'isDiskKeyEncrypted',
            type: {
              name: 'Boolean'
            }
          },
          keyIdentifier: {
            required: false,
            serializedName: 'keyIdentifier',
            type: {
              name: 'String'
            }
          },
          kekKeyVaultArmId: {
            required: false,
            serializedName: 'kekKeyVaultArmId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = A2AProtectedDiskDetails;

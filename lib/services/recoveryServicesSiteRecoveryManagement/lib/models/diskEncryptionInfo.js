/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Recovery disk encryption info (BEK and KEK).
 *
 */
class DiskEncryptionInfo {
  /**
   * Create a DiskEncryptionInfo.
   * @property {object} [diskEncryptionKeyInfo] The recovery KeyVault reference
   * for secret.
   * @property {string} [diskEncryptionKeyInfo.secretIdentifier] The secret url
   * / identifier.
   * @property {string} [diskEncryptionKeyInfo.keyVaultResourceArmId] The
   * KeyVault resource ARM id for secret.
   * @property {object} [keyEncryptionKeyInfo] The recovery KeyVault reference
   * for key.
   * @property {string} [keyEncryptionKeyInfo.keyIdentifier] The key url /
   * identifier.
   * @property {string} [keyEncryptionKeyInfo.keyVaultResourceArmId] The
   * KeyVault resource ARM id for key.
   */
  constructor() {
  }

  /**
   * Defines the metadata of DiskEncryptionInfo
   *
   * @returns {object} metadata of DiskEncryptionInfo
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DiskEncryptionInfo',
      type: {
        name: 'Composite',
        className: 'DiskEncryptionInfo',
        modelProperties: {
          diskEncryptionKeyInfo: {
            required: false,
            serializedName: 'diskEncryptionKeyInfo',
            type: {
              name: 'Composite',
              className: 'DiskEncryptionKeyInfo'
            }
          },
          keyEncryptionKeyInfo: {
            required: false,
            serializedName: 'keyEncryptionKeyInfo',
            type: {
              name: 'Composite',
              className: 'KeyEncryptionKeyInfo'
            }
          }
        }
      }
    };
  }
}

module.exports = DiskEncryptionInfo;

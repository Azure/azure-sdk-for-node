/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * VMWare Azure specific protection profile Input.
 *
 * @extends models['PolicyProviderSpecificInput']
 */
class InMageAzureV2PolicyInput extends models['PolicyProviderSpecificInput'] {
  /**
   * Create a InMageAzureV2PolicyInput.
   * @member {number} [recoveryPointThresholdInMinutes] The recovery point
   * threshold in minutes.
   * @member {number} [recoveryPointHistory] The duration in minutes until
   * which the recovery points need to be stored.
   * @member {number} [crashConsistentFrequencyInMinutes] The crash consistent
   * snapshot frequency (in minutes).
   * @member {number} [appConsistentFrequencyInMinutes] The app consistent
   * snapshot frequency (in minutes).
   * @member {string} multiVmSyncStatus A value indicating whether multi-VM
   * sync has to be enabled. Value should be 'Enabled' or 'Disabled'. Possible
   * values include: 'Enable', 'Disable'
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of InMageAzureV2PolicyInput
   *
   * @returns {object} metadata of InMageAzureV2PolicyInput
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'InMageAzureV2',
      type: {
        name: 'Composite',
        className: 'InMageAzureV2PolicyInput',
        modelProperties: {
          instanceType: {
            required: true,
            serializedName: 'instanceType',
            type: {
              name: 'String'
            }
          },
          recoveryPointThresholdInMinutes: {
            required: false,
            serializedName: 'recoveryPointThresholdInMinutes',
            type: {
              name: 'Number'
            }
          },
          recoveryPointHistory: {
            required: false,
            serializedName: 'recoveryPointHistory',
            type: {
              name: 'Number'
            }
          },
          crashConsistentFrequencyInMinutes: {
            required: false,
            serializedName: 'crashConsistentFrequencyInMinutes',
            type: {
              name: 'Number'
            }
          },
          appConsistentFrequencyInMinutes: {
            required: false,
            serializedName: 'appConsistentFrequencyInMinutes',
            type: {
              name: 'Number'
            }
          },
          multiVmSyncStatus: {
            required: true,
            serializedName: 'multiVmSyncStatus',
            type: {
              name: 'Enum',
              allowedValues: [ 'Enable', 'Disable' ]
            }
          }
        }
      }
    };
  }
}

module.exports = InMageAzureV2PolicyInput;

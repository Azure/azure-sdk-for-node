/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Store the fabric details specific to the VMware fabric.
 *
 * @extends models['FabricSpecificDetails']
 */
class VMwareDetails extends models['FabricSpecificDetails'] {
  /**
   * Create a VMwareDetails.
   * @property {array} [processServers] The list of Process Servers associated
   * with the fabric.
   * @property {array} [masterTargetServers] The list of Master Target servers
   * associated with the fabric.
   * @property {array} [runAsAccounts] The list of run as accounts created on
   * the server.
   * @property {string} [replicationPairCount] The number of replication pairs
   * configured in this CS.
   * @property {string} [processServerCount] The number of process servers.
   * @property {string} [agentCount] The number of source and target servers
   * configured to talk to this CS.
   * @property {string} [protectedServers] The number of protected servers.
   * @property {string} [systemLoad] The percentage of the system load.
   * @property {string} [systemLoadStatus] The system load status.
   * @property {string} [cpuLoad] The percentage of the CPU load.
   * @property {string} [cpuLoadStatus] The CPU load status.
   * @property {number} [totalMemoryInBytes] The total memory.
   * @property {number} [availableMemoryInBytes] The available memory.
   * @property {string} [memoryUsageStatus] The memory usage status.
   * @property {number} [totalSpaceInBytes] The total space.
   * @property {number} [availableSpaceInBytes] The available space.
   * @property {string} [spaceUsageStatus] The space usage status.
   * @property {string} [webLoad] The web load.
   * @property {string} [webLoadStatus] The web load status.
   * @property {string} [databaseServerLoad] The database server load.
   * @property {string} [databaseServerLoadStatus] The database server load
   * status.
   * @property {string} [csServiceStatus] The CS service status.
   * @property {string} [ipAddress] The IP address.
   * @property {string} [agentVersion] The agent Version.
   * @property {string} [hostName] The host name.
   * @property {date} [lastHeartbeat] The last heartbeat received from CS
   * server.
   * @property {string} [versionStatus] Version status
   * @property {date} [sslCertExpiryDate] CS SSL cert expiry date.
   * @property {number} [sslCertExpiryRemainingDays] CS SSL cert expiry date.
   * @property {string} [psTemplateVersion] PS template version.
   * @property {date} [agentExpiryDate] Agent expiry date.
   * @property {object} [agentVersionDetails] The agent version details.
   * @property {string} [agentVersionDetails.version] The agent version.
   * @property {date} [agentVersionDetails.expiryDate] Version expiry date.
   * @property {string} [agentVersionDetails.status] A value indicating whether
   * security update required. Possible values include: 'Supported',
   * 'NotSupported', 'Deprecated', 'UpdateRequired', 'SecurityUpdateRequired'
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of VMwareDetails
   *
   * @returns {object} metadata of VMwareDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VMware',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'instanceType',
          clientName: 'instanceType'
        },
        uberParent: 'FabricSpecificDetails',
        className: 'VMwareDetails',
        modelProperties: {
          instanceType: {
            required: true,
            serializedName: 'instanceType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          processServers: {
            required: false,
            serializedName: 'processServers',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ProcessServerElementType',
                  type: {
                    name: 'Composite',
                    className: 'ProcessServer'
                  }
              }
            }
          },
          masterTargetServers: {
            required: false,
            serializedName: 'masterTargetServers',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MasterTargetServerElementType',
                  type: {
                    name: 'Composite',
                    className: 'MasterTargetServer'
                  }
              }
            }
          },
          runAsAccounts: {
            required: false,
            serializedName: 'runAsAccounts',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'RunAsAccountElementType',
                  type: {
                    name: 'Composite',
                    className: 'RunAsAccount'
                  }
              }
            }
          },
          replicationPairCount: {
            required: false,
            serializedName: 'replicationPairCount',
            type: {
              name: 'String'
            }
          },
          processServerCount: {
            required: false,
            serializedName: 'processServerCount',
            type: {
              name: 'String'
            }
          },
          agentCount: {
            required: false,
            serializedName: 'agentCount',
            type: {
              name: 'String'
            }
          },
          protectedServers: {
            required: false,
            serializedName: 'protectedServers',
            type: {
              name: 'String'
            }
          },
          systemLoad: {
            required: false,
            serializedName: 'systemLoad',
            type: {
              name: 'String'
            }
          },
          systemLoadStatus: {
            required: false,
            serializedName: 'systemLoadStatus',
            type: {
              name: 'String'
            }
          },
          cpuLoad: {
            required: false,
            serializedName: 'cpuLoad',
            type: {
              name: 'String'
            }
          },
          cpuLoadStatus: {
            required: false,
            serializedName: 'cpuLoadStatus',
            type: {
              name: 'String'
            }
          },
          totalMemoryInBytes: {
            required: false,
            serializedName: 'totalMemoryInBytes',
            type: {
              name: 'Number'
            }
          },
          availableMemoryInBytes: {
            required: false,
            serializedName: 'availableMemoryInBytes',
            type: {
              name: 'Number'
            }
          },
          memoryUsageStatus: {
            required: false,
            serializedName: 'memoryUsageStatus',
            type: {
              name: 'String'
            }
          },
          totalSpaceInBytes: {
            required: false,
            serializedName: 'totalSpaceInBytes',
            type: {
              name: 'Number'
            }
          },
          availableSpaceInBytes: {
            required: false,
            serializedName: 'availableSpaceInBytes',
            type: {
              name: 'Number'
            }
          },
          spaceUsageStatus: {
            required: false,
            serializedName: 'spaceUsageStatus',
            type: {
              name: 'String'
            }
          },
          webLoad: {
            required: false,
            serializedName: 'webLoad',
            type: {
              name: 'String'
            }
          },
          webLoadStatus: {
            required: false,
            serializedName: 'webLoadStatus',
            type: {
              name: 'String'
            }
          },
          databaseServerLoad: {
            required: false,
            serializedName: 'databaseServerLoad',
            type: {
              name: 'String'
            }
          },
          databaseServerLoadStatus: {
            required: false,
            serializedName: 'databaseServerLoadStatus',
            type: {
              name: 'String'
            }
          },
          csServiceStatus: {
            required: false,
            serializedName: 'csServiceStatus',
            type: {
              name: 'String'
            }
          },
          ipAddress: {
            required: false,
            serializedName: 'ipAddress',
            type: {
              name: 'String'
            }
          },
          agentVersion: {
            required: false,
            serializedName: 'agentVersion',
            type: {
              name: 'String'
            }
          },
          hostName: {
            required: false,
            serializedName: 'hostName',
            type: {
              name: 'String'
            }
          },
          lastHeartbeat: {
            required: false,
            serializedName: 'lastHeartbeat',
            type: {
              name: 'DateTime'
            }
          },
          versionStatus: {
            required: false,
            serializedName: 'versionStatus',
            type: {
              name: 'String'
            }
          },
          sslCertExpiryDate: {
            required: false,
            serializedName: 'sslCertExpiryDate',
            type: {
              name: 'DateTime'
            }
          },
          sslCertExpiryRemainingDays: {
            required: false,
            serializedName: 'sslCertExpiryRemainingDays',
            type: {
              name: 'Number'
            }
          },
          psTemplateVersion: {
            required: false,
            serializedName: 'psTemplateVersion',
            type: {
              name: 'String'
            }
          },
          agentExpiryDate: {
            required: false,
            serializedName: 'agentExpiryDate',
            type: {
              name: 'DateTime'
            }
          },
          agentVersionDetails: {
            required: false,
            serializedName: 'agentVersionDetails',
            type: {
              name: 'Composite',
              className: 'VersionDetails'
            }
          }
        }
      }
    };
  }
}

module.exports = VMwareDetails;

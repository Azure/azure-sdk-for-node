/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Protection container mapping object.
 *
 * @extends models['Resource']
 */
class ProtectionContainerMapping extends models['Resource'] {
  /**
   * Create a ProtectionContainerMapping.
   * @property {object} [properties] The custom data.
   * @property {string} [properties.targetProtectionContainerId] Paired
   * protection container ARM ID.
   * @property {string} [properties.targetProtectionContainerFriendlyName]
   * Friendly name of paired container.
   * @property {object} [properties.providerSpecificDetails] Provider specific
   * provider details.
   * @property {string} [properties.providerSpecificDetails.instanceType]
   * Polymorphic Discriminator
   * @property {string} [properties.health] Health of pairing.
   * @property {array} [properties.healthErrorDetails] Health error.
   * @property {string} [properties.policyId] Policy ARM Id.
   * @property {string} [properties.state] Association Status
   * @property {string} [properties.sourceProtectionContainerFriendlyName]
   * Friendly name of source protection container.
   * @property {string} [properties.sourceFabricFriendlyName] Friendly name of
   * source fabric.
   * @property {string} [properties.targetFabricFriendlyName] Friendly name of
   * target fabric.
   * @property {string} [properties.policyFriendlyName] Friendly name of
   * replication policy.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ProtectionContainerMapping
   *
   * @returns {object} metadata of ProtectionContainerMapping
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ProtectionContainerMapping',
      type: {
        name: 'Composite',
        className: 'ProtectionContainerMapping',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          properties: {
            required: false,
            serializedName: 'properties',
            type: {
              name: 'Composite',
              className: 'ProtectionContainerMappingProperties'
            }
          }
        }
      }
    };
  }
}

module.exports = ProtectionContainerMapping;

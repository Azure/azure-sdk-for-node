/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Recovery plan details.
 *
 * @extends models['Resource']
 */
class RecoveryPlan extends models['Resource'] {
  /**
   * Create a RecoveryPlan.
   * @property {object} [properties] The custom details.
   * @property {string} [properties.friendlyName] The friendly name.
   * @property {string} [properties.primaryFabricId] The primary fabric Id.
   * @property {string} [properties.primaryFabricFriendlyName] The primary
   * fabric friendly name.
   * @property {string} [properties.recoveryFabricId] The recovery fabric Id.
   * @property {string} [properties.recoveryFabricFriendlyName] The recovery
   * fabric friendly name.
   * @property {string} [properties.failoverDeploymentModel] The failover
   * deployment model.
   * @property {array} [properties.replicationProviders] The list of
   * replication providers.
   * @property {array} [properties.allowedOperations] The list of allowed
   * operations.
   * @property {date} [properties.lastPlannedFailoverTime] The start time of
   * the last planned failover.
   * @property {date} [properties.lastUnplannedFailoverTime] The start time of
   * the last unplanned failover.
   * @property {date} [properties.lastTestFailoverTime] The start time of the
   * last test failover.
   * @property {object} [properties.currentScenario] The current scenario
   * details.
   * @property {string} [properties.currentScenario.scenarioName] Scenario
   * name.
   * @property {string} [properties.currentScenario.jobId] ARM Id of the job
   * being executed.
   * @property {date} [properties.currentScenario.startTime] Start time of the
   * workflow.
   * @property {string} [properties.currentScenarioStatus] The recovery plan
   * status.
   * @property {string} [properties.currentScenarioStatusDescription] The
   * recovery plan status description.
   * @property {array} [properties.groups] The recovery plan groups.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of RecoveryPlan
   *
   * @returns {object} metadata of RecoveryPlan
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RecoveryPlan',
      type: {
        name: 'Composite',
        className: 'RecoveryPlan',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          properties: {
            required: false,
            serializedName: 'properties',
            type: {
              name: 'Composite',
              className: 'RecoveryPlanProperties'
            }
          }
        }
      }
    };
  }
}

module.exports = RecoveryPlan;

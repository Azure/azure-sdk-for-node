/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * VMware Azure specific enable protection input.
 *
 * @extends models['EnableProtectionProviderSpecificInput']
 */
class InMageAzureV2EnableProtectionInput extends models['EnableProtectionProviderSpecificInput'] {
  /**
   * Create a InMageAzureV2EnableProtectionInput.
   * @member {string} [masterTargetId] The Master target Id.
   * @member {string} [processServerId] The Process Server Id.
   * @member {string} storageAccountId The storage account name.
   * @member {string} [runAsAccountId] The CS account Id.
   * @member {string} [multiVmGroupId] The multi vm group Id.
   * @member {string} [multiVmGroupName] The multi vm group name.
   * @member {array} [disksToInclude] The disks to include list.
   * @member {string} [targetAzureNetworkId] The selected target Azure network
   * Id.
   * @member {string} [targetAzureSubnetId] The selected target Azure subnet
   * Id.
   * @member {string} [enableRDPOnTargetOption] The selected option to enable
   * RDP\SSH on target vm after failover. String value of
   * {SrsDataContract.EnableRDPOnTargetOption} enum.
   * @member {string} [targetAzureVmName] The target azure Vm Name.
   * @member {string} [logStorageAccountId] The storage account to be used for
   * logging during replication.
   * @member {string} [targetAzureV1ResourceGroupId] The Id of the target
   * resource group (for classic deployment) in which the failover VM is to be
   * created.
   * @member {string} [targetAzureV2ResourceGroupId] The Id of the target
   * resource group (for resource manager deployment) in which the failover VM
   * is to be created.
   * @member {string} [useManagedDisks] A value indicating whether managed
   * disks should be used during failover.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of InMageAzureV2EnableProtectionInput
   *
   * @returns {object} metadata of InMageAzureV2EnableProtectionInput
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'InMageAzureV2',
      type: {
        name: 'Composite',
        className: 'InMageAzureV2EnableProtectionInput',
        modelProperties: {
          instanceType: {
            required: true,
            serializedName: 'instanceType',
            type: {
              name: 'String'
            }
          },
          masterTargetId: {
            required: false,
            serializedName: 'masterTargetId',
            type: {
              name: 'String'
            }
          },
          processServerId: {
            required: false,
            serializedName: 'processServerId',
            type: {
              name: 'String'
            }
          },
          storageAccountId: {
            required: true,
            serializedName: 'storageAccountId',
            type: {
              name: 'String'
            }
          },
          runAsAccountId: {
            required: false,
            serializedName: 'runAsAccountId',
            type: {
              name: 'String'
            }
          },
          multiVmGroupId: {
            required: false,
            serializedName: 'multiVmGroupId',
            type: {
              name: 'String'
            }
          },
          multiVmGroupName: {
            required: false,
            serializedName: 'multiVmGroupName',
            type: {
              name: 'String'
            }
          },
          disksToInclude: {
            required: false,
            serializedName: 'disksToInclude',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          targetAzureNetworkId: {
            required: false,
            serializedName: 'targetAzureNetworkId',
            type: {
              name: 'String'
            }
          },
          targetAzureSubnetId: {
            required: false,
            serializedName: 'targetAzureSubnetId',
            type: {
              name: 'String'
            }
          },
          enableRDPOnTargetOption: {
            required: false,
            serializedName: 'enableRDPOnTargetOption',
            type: {
              name: 'String'
            }
          },
          targetAzureVmName: {
            required: false,
            serializedName: 'targetAzureVmName',
            type: {
              name: 'String'
            }
          },
          logStorageAccountId: {
            required: false,
            serializedName: 'logStorageAccountId',
            type: {
              name: 'String'
            }
          },
          targetAzureV1ResourceGroupId: {
            required: false,
            serializedName: 'targetAzureV1ResourceGroupId',
            type: {
              name: 'String'
            }
          },
          targetAzureV2ResourceGroupId: {
            required: false,
            serializedName: 'targetAzureV2ResourceGroupId',
            type: {
              name: 'String'
            }
          },
          useManagedDisks: {
            required: false,
            serializedName: 'useManagedDisks',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = InMageAzureV2EnableProtectionInput;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Details of a Master Target Server.
 *
 */
class MasterTargetServer {
  /**
   * Create a MasterTargetServer.
   * @member {string} [id] The server Id.
   * @member {string} [ipAddress] The IP address of the server.
   * @member {string} [name] The server name.
   * @member {string} [osType] The OS type of the server.
   * @member {string} [agentVersion] The version of the scout component on the
   * server.
   * @member {date} [lastHeartbeat] The last heartbeat received from the
   * server.
   * @member {string} [versionStatus] Version status
   * @member {array} [retentionVolumes] The retention volumes of Master target
   * Server.
   * @member {array} [dataStores] The list of data stores in the fabric.
   * @member {array} [validationErrors] Validation errors.
   * @member {array} [healthErrors] Health errors.
   * @member {number} [diskCount] Disk count of the master target.
   * @member {string} [osVersion] OS Version of the master target.
   * @member {date} [agentExpiryDate] Agent expiry date.
   * @member {string} [marsAgentVersion] MARS agent version.
   * @member {date} [marsAgentExpiryDate] MARS agent expiry date.
   * @member {object} [agentVersionDetails] Agent version details.
   * @member {string} [agentVersionDetails.version] The agent version.
   * @member {date} [agentVersionDetails.expiryDate] Version expiry date.
   * @member {string} [agentVersionDetails.status] A value indicating whether
   * security update required. Possible values include: 'Supported',
   * 'NotSupported', 'Deprecated', 'UpdateRequired', 'SecurityUpdateRequired'
   * @member {object} [marsAgentVersionDetails] Mars agent version details.
   * @member {string} [marsAgentVersionDetails.version] The agent version.
   * @member {date} [marsAgentVersionDetails.expiryDate] Version expiry date.
   * @member {string} [marsAgentVersionDetails.status] A value indicating
   * whether security update required. Possible values include: 'Supported',
   * 'NotSupported', 'Deprecated', 'UpdateRequired', 'SecurityUpdateRequired'
   */
  constructor() {
  }

  /**
   * Defines the metadata of MasterTargetServer
   *
   * @returns {object} metadata of MasterTargetServer
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'MasterTargetServer',
      type: {
        name: 'Composite',
        className: 'MasterTargetServer',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          ipAddress: {
            required: false,
            serializedName: 'ipAddress',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          osType: {
            required: false,
            serializedName: 'osType',
            type: {
              name: 'String'
            }
          },
          agentVersion: {
            required: false,
            serializedName: 'agentVersion',
            type: {
              name: 'String'
            }
          },
          lastHeartbeat: {
            required: false,
            serializedName: 'lastHeartbeat',
            type: {
              name: 'DateTime'
            }
          },
          versionStatus: {
            required: false,
            serializedName: 'versionStatus',
            type: {
              name: 'String'
            }
          },
          retentionVolumes: {
            required: false,
            serializedName: 'retentionVolumes',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'RetentionVolumeElementType',
                  type: {
                    name: 'Composite',
                    className: 'RetentionVolume'
                  }
              }
            }
          },
          dataStores: {
            required: false,
            serializedName: 'dataStores',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'DataStoreElementType',
                  type: {
                    name: 'Composite',
                    className: 'DataStore'
                  }
              }
            }
          },
          validationErrors: {
            required: false,
            serializedName: 'validationErrors',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'HealthErrorElementType',
                  type: {
                    name: 'Composite',
                    className: 'HealthError'
                  }
              }
            }
          },
          healthErrors: {
            required: false,
            serializedName: 'healthErrors',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'HealthErrorElementType',
                  type: {
                    name: 'Composite',
                    className: 'HealthError'
                  }
              }
            }
          },
          diskCount: {
            required: false,
            serializedName: 'diskCount',
            type: {
              name: 'Number'
            }
          },
          osVersion: {
            required: false,
            serializedName: 'osVersion',
            type: {
              name: 'String'
            }
          },
          agentExpiryDate: {
            required: false,
            serializedName: 'agentExpiryDate',
            type: {
              name: 'DateTime'
            }
          },
          marsAgentVersion: {
            required: false,
            serializedName: 'marsAgentVersion',
            type: {
              name: 'String'
            }
          },
          marsAgentExpiryDate: {
            required: false,
            serializedName: 'marsAgentExpiryDate',
            type: {
              name: 'DateTime'
            }
          },
          agentVersionDetails: {
            required: false,
            serializedName: 'agentVersionDetails',
            type: {
              name: 'Composite',
              className: 'VersionDetails'
            }
          },
          marsAgentVersionDetails: {
            required: false,
            serializedName: 'marsAgentVersionDetails',
            type: {
              name: 'Composite',
              className: 'VersionDetails'
            }
          }
        }
      }
    };
  }
}

module.exports = MasterTargetServer;

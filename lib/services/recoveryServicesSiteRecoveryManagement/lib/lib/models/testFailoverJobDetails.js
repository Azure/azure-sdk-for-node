/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * This class represents the details for a test failover job.
 *
 * @extends models['JobDetails']
 */
class TestFailoverJobDetails extends models['JobDetails'] {
  /**
   * Create a TestFailoverJobDetails.
   * @member {string} [testFailoverStatus] The test failover status.
   * @member {string} [comments] The test failover comments.
   * @member {string} [networkName] The test network name.
   * @member {string} [networkFriendlyName] The test network friendly name.
   * @member {string} [networkType] The test network type (see
   * TestFailoverInput enum for possible values).
   * @member {array} [protectedItemDetails] The test VM details.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of TestFailoverJobDetails
   *
   * @returns {object} metadata of TestFailoverJobDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TestFailoverJobDetails',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'instanceType',
          clientName: 'instanceType'
        },
        uberParent: 'JobDetails',
        className: 'TestFailoverJobDetails',
        modelProperties: {
          affectedObjectDetails: {
            required: false,
            serializedName: 'affectedObjectDetails',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          instanceType: {
            required: true,
            serializedName: 'instanceType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          testFailoverStatus: {
            required: false,
            serializedName: 'testFailoverStatus',
            type: {
              name: 'String'
            }
          },
          comments: {
            required: false,
            serializedName: 'comments',
            type: {
              name: 'String'
            }
          },
          networkName: {
            required: false,
            serializedName: 'networkName',
            type: {
              name: 'String'
            }
          },
          networkFriendlyName: {
            required: false,
            serializedName: 'networkFriendlyName',
            type: {
              name: 'String'
            }
          },
          networkType: {
            required: false,
            serializedName: 'networkType',
            type: {
              name: 'String'
            }
          },
          protectedItemDetails: {
            required: false,
            serializedName: 'protectedItemDetails',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'FailoverReplicationProtectedItemDetailsElementType',
                  type: {
                    name: 'Composite',
                    className: 'FailoverReplicationProtectedItemDetails'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = TestFailoverJobDetails;

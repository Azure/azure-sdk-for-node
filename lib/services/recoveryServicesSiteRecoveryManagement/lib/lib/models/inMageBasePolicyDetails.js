/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Base class for the policies of providers using InMage replication.
 *
 * @extends models['PolicyProviderSpecificDetails']
 */
class InMageBasePolicyDetails extends models['PolicyProviderSpecificDetails'] {
  /**
   * Create a InMageBasePolicyDetails.
   * @member {number} [recoveryPointThresholdInMinutes] The recovery point
   * threshold in minutes.
   * @member {number} [recoveryPointHistory] The duration in minutes until
   * which the recovery points need to be stored.
   * @member {number} [appConsistentFrequencyInMinutes] The app consistent
   * snapshot frequency in minutes.
   * @member {string} [multiVmSyncStatus] A value indicating whether multi-VM
   * sync has to be enabled.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of InMageBasePolicyDetails
   *
   * @returns {object} metadata of InMageBasePolicyDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'InMageBasePolicyDetails',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'instanceType',
          clientName: 'instanceType'
        },
        uberParent: 'PolicyProviderSpecificDetails',
        className: 'InMageBasePolicyDetails',
        modelProperties: {
          instanceType: {
            required: true,
            serializedName: 'instanceType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          recoveryPointThresholdInMinutes: {
            required: false,
            serializedName: 'recoveryPointThresholdInMinutes',
            type: {
              name: 'Number'
            }
          },
          recoveryPointHistory: {
            required: false,
            serializedName: 'recoveryPointHistory',
            type: {
              name: 'Number'
            }
          },
          appConsistentFrequencyInMinutes: {
            required: false,
            serializedName: 'appConsistentFrequencyInMinutes',
            type: {
              name: 'Number'
            }
          },
          multiVmSyncStatus: {
            required: false,
            serializedName: 'multiVmSyncStatus',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = InMageBasePolicyDetails;

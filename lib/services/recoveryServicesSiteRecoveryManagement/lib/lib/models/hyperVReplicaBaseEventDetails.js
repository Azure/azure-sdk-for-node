/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Abstract model class for event details of a HyperVReplica E2E event.
 *
 * @extends models['EventProviderSpecificDetails']
 */
class HyperVReplicaBaseEventDetails extends models['EventProviderSpecificDetails'] {
  /**
   * Create a HyperVReplicaBaseEventDetails.
   * @member {string} [containerName] The container friendly name.
   * @member {string} [fabricName] The fabric friendly name.
   * @member {string} [remoteContainerName] The remote container name.
   * @member {string} [remoteFabricName] The remote fabric name.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of HyperVReplicaBaseEventDetails
   *
   * @returns {object} metadata of HyperVReplicaBaseEventDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'HyperVReplicaBaseEventDetails',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'instanceType',
          clientName: 'instanceType'
        },
        uberParent: 'EventProviderSpecificDetails',
        className: 'HyperVReplicaBaseEventDetails',
        modelProperties: {
          instanceType: {
            required: true,
            serializedName: 'instanceType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          containerName: {
            required: false,
            serializedName: 'containerName',
            type: {
              name: 'String'
            }
          },
          fabricName: {
            required: false,
            serializedName: 'fabricName',
            type: {
              name: 'String'
            }
          },
          remoteContainerName: {
            required: false,
            serializedName: 'remoteContainerName',
            type: {
              name: 'String'
            }
          },
          remoteFabricName: {
            required: false,
            serializedName: 'remoteFabricName',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = HyperVReplicaBaseEventDetails;

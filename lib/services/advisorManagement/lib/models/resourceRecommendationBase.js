/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Advisor Recommendation.
 *
 */
class ResourceRecommendationBase {
  /**
   * Create a ResourceRecommendationBase.
   * @member {string} [id] The fully qualified recommendation ID, for example
   * /subscriptions/subscriptionId/resourceGroups/resourceGroup1/providers/Microsoft.ClassicCompute/virtualMachines/vm1/providers/Microsoft.Advisor/recommendations/recommendationGUID.
   * @member {string} [name] The name of recommendation.
   * @member {string} [category] The category of the recommendation. Possible
   * values include: 'HighAvailability', 'Security', 'Performance', 'Cost'
   * @member {string} [impact] The business impact of the recommendation.
   * Possible values include: 'High', 'Medium', 'Low'
   * @member {string} [impactedField] The resource type identified by Advisor.
   * @member {string} [impactedValue] The resource identified by Advisor.
   * @member {date} [lastUpdated] The most recent time that Advisor checked the
   * validity of the recommendation.
   * @member {object} [metadata] The recommendation metadata.
   * @member {string} [recommendationTypeId] The recommendation-type GUID.
   * @member {string} [risk] The potential risk of not implementing the
   * recommendation. Possible values include: 'Error', 'Warning', 'None'
   * @member {object} [shortDescription] A summary of the recommendation.
   * @member {string} [shortDescription.problem] The issue or opportunity
   * identified by the recommendation.
   * @member {string} [shortDescription.solution] The remediation action
   * suggested by the recommendation.
   * @member {array} [suppressionIds] The list of snoozed and dismissed rules
   * for the recommendation.
   * @member {string} [type] The recommendation type:
   * Microsoft.Advisor/recommendations.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ResourceRecommendationBase
   *
   * @returns {object} metadata of ResourceRecommendationBase
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ResourceRecommendationBase',
      type: {
        name: 'Composite',
        className: 'ResourceRecommendationBase',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          category: {
            required: false,
            serializedName: 'properties.category',
            type: {
              name: 'String'
            }
          },
          impact: {
            required: false,
            serializedName: 'properties.impact',
            type: {
              name: 'String'
            }
          },
          impactedField: {
            required: false,
            serializedName: 'properties.impactedField',
            type: {
              name: 'String'
            }
          },
          impactedValue: {
            required: false,
            serializedName: 'properties.impactedValue',
            type: {
              name: 'String'
            }
          },
          lastUpdated: {
            required: false,
            serializedName: 'properties.lastUpdated',
            type: {
              name: 'DateTime'
            }
          },
          metadata: {
            required: false,
            serializedName: 'properties.metadata',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'ObjectElementType',
                  type: {
                    name: 'Object'
                  }
              }
            }
          },
          recommendationTypeId: {
            required: false,
            serializedName: 'properties.recommendationTypeId',
            type: {
              name: 'String'
            }
          },
          risk: {
            required: false,
            serializedName: 'properties.risk',
            type: {
              name: 'String'
            }
          },
          shortDescription: {
            required: false,
            serializedName: 'properties.shortDescription',
            type: {
              name: 'Composite',
              className: 'ShortDescription'
            }
          },
          suppressionIds: {
            required: false,
            serializedName: 'suppressionIds',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'UuidElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ResourceRecommendationBase;

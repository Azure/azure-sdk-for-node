/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Recommendations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AdvisorManagementClient.
 */
export interface Recommendations {


    /**
     * Initiates the recommendation generation or computation process for a
     * subscription. This operation is asynchronous. The generated recommendations
     * are stored in a cache in the Advisor service.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    generateWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Initiates the recommendation generation or computation process for a
     * subscription. This operation is asynchronous. The generated recommendations
     * are stored in a cache in the Advisor service.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    generate(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    generate(callback: ServiceCallback<void>): void;
    generate(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieves the status of the recommendation computation or generation
     * process. Invoke this API after calling the generation recommendation. The
     * URI of this API is returned in the Location field of the response header.
     *
     * @param {uuid} operationId The operation ID, which can be found from the
     * Location field in the generate recommendation response header.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getGenerateStatusWithHttpOperationResponse(operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Retrieves the status of the recommendation computation or generation
     * process. Invoke this API after calling the generation recommendation. The
     * URI of this API is returned in the Location field of the response header.
     *
     * @param {uuid} operationId The operation ID, which can be found from the
     * Location field in the generate recommendation response header.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getGenerateStatus(operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    getGenerateStatus(operationId: string, callback: ServiceCallback<void>): void;
    getGenerateStatus(operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Obtains cached recommendations for a subscription. The recommendations are
     * generated or computed by invoking generateRecommendations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply to the recommendations.
     *
     * @param {number} [options.top] The number of recommendations per page if a
     * paged version of this API is being used.
     *
     * @param {string} [options.skipToken] The page-continuation token to use with
     * a paged version of this API.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ResourceRecommendationBaseListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { filter? : string, top? : number, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ResourceRecommendationBaseListResult>>;

    /**
     * Obtains cached recommendations for a subscription. The recommendations are
     * generated or computed by invoking generateRecommendations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.filter] The filter to apply to the recommendations.
     *
     * @param {number} [options.top] The number of recommendations per page if a
     * paged version of this API is being used.
     *
     * @param {string} [options.skipToken] The page-continuation token to use with
     * a paged version of this API.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ResourceRecommendationBaseListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ResourceRecommendationBaseListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ResourceRecommendationBaseListResult} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { filter? : string, top? : number, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.ResourceRecommendationBaseListResult>;
    list(callback: ServiceCallback<models.ResourceRecommendationBaseListResult>): void;
    list(options: { filter? : string, top? : number, skipToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ResourceRecommendationBaseListResult>): void;


    /**
     * Obtains details of a cached recommendation.
     *
     * @param {string} resourceUri The fully qualified Azure Resource Manager
     * identifier of the resource to which the recommendation applies.
     *
     * @param {string} recommendationId The recommendation ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ResourceRecommendationBase>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceUri: string, recommendationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ResourceRecommendationBase>>;

    /**
     * Obtains details of a cached recommendation.
     *
     * @param {string} resourceUri The fully qualified Azure Resource Manager
     * identifier of the resource to which the recommendation applies.
     *
     * @param {string} recommendationId The recommendation ID.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ResourceRecommendationBase} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ResourceRecommendationBase} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ResourceRecommendationBase} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceUri: string, recommendationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ResourceRecommendationBase>;
    get(resourceUri: string, recommendationId: string, callback: ServiceCallback<models.ResourceRecommendationBase>): void;
    get(resourceUri: string, recommendationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ResourceRecommendationBase>): void;


    /**
     * Obtains cached recommendations for a subscription. The recommendations are
     * generated or computed by invoking generateRecommendations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ResourceRecommendationBaseListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ResourceRecommendationBaseListResult>>;

    /**
     * Obtains cached recommendations for a subscription. The recommendations are
     * generated or computed by invoking generateRecommendations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ResourceRecommendationBaseListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ResourceRecommendationBaseListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ResourceRecommendationBaseListResult} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ResourceRecommendationBaseListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ResourceRecommendationBaseListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ResourceRecommendationBaseListResult>): void;
}

/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AdvisorManagementClient.
 */
export interface Operations {


    /**
     * Lists all the available Advisor REST API operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationEntityListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationEntityListResult>>;

    /**
     * Lists all the available Advisor REST API operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationEntityListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationEntityListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationEntityListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationEntityListResult>;
    list(callback: ServiceCallback<models.OperationEntityListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationEntityListResult>): void;


    /**
     * Lists all the available Advisor REST API operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationEntityListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationEntityListResult>>;

    /**
     * Lists all the available Advisor REST API operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationEntityListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationEntityListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationEntityListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationEntityListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.OperationEntityListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationEntityListResult>): void;
}

/**
 * @class
 * Suppressions
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AdvisorManagementClient.
 */
export interface Suppressions {


    /**
     * Obtains the details of a suppression.
     *
     * @param {string} resourceUri The fully qualified Azure Resource Manager
     * identifier of the resource to which the recommendation applies.
     *
     * @param {string} recommendationId The recommendation ID.
     *
     * @param {string} name The name of the suppression.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SuppressionContract>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceUri: string, recommendationId: string, name: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SuppressionContract>>;

    /**
     * Obtains the details of a suppression.
     *
     * @param {string} resourceUri The fully qualified Azure Resource Manager
     * identifier of the resource to which the recommendation applies.
     *
     * @param {string} recommendationId The recommendation ID.
     *
     * @param {string} name The name of the suppression.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SuppressionContract} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SuppressionContract} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SuppressionContract} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceUri: string, recommendationId: string, name: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SuppressionContract>;
    get(resourceUri: string, recommendationId: string, name: string, callback: ServiceCallback<models.SuppressionContract>): void;
    get(resourceUri: string, recommendationId: string, name: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SuppressionContract>): void;


    /**
     * Enables the snoozed or dismissed attribute of a recommendation. The snoozed
     * or dismissed attribute is referred to as a suppression. Use this API to
     * create or update the snoozed or dismissed status of a recommendation.
     *
     * @param {string} resourceUri The fully qualified Azure Resource Manager
     * identifier of the resource to which the recommendation applies.
     *
     * @param {string} recommendationId The recommendation ID.
     *
     * @param {string} name The name of the suppression.
     *
     * @param {object} suppressionContract The snoozed or dismissed attribute; for
     * example, the snooze duration.
     *
     * @param {string} [suppressionContract.suppressionId] The GUID of the
     * suppression.
     *
     * @param {string} [suppressionContract.ttl] The duration for which the
     * suppression is valid.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SuppressionContract>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceUri: string, recommendationId: string, name: string, suppressionContract: models.SuppressionContract, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SuppressionContract>>;

    /**
     * Enables the snoozed or dismissed attribute of a recommendation. The snoozed
     * or dismissed attribute is referred to as a suppression. Use this API to
     * create or update the snoozed or dismissed status of a recommendation.
     *
     * @param {string} resourceUri The fully qualified Azure Resource Manager
     * identifier of the resource to which the recommendation applies.
     *
     * @param {string} recommendationId The recommendation ID.
     *
     * @param {string} name The name of the suppression.
     *
     * @param {object} suppressionContract The snoozed or dismissed attribute; for
     * example, the snooze duration.
     *
     * @param {string} [suppressionContract.suppressionId] The GUID of the
     * suppression.
     *
     * @param {string} [suppressionContract.ttl] The duration for which the
     * suppression is valid.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SuppressionContract} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SuppressionContract} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SuppressionContract} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceUri: string, recommendationId: string, name: string, suppressionContract: models.SuppressionContract, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SuppressionContract>;
    create(resourceUri: string, recommendationId: string, name: string, suppressionContract: models.SuppressionContract, callback: ServiceCallback<models.SuppressionContract>): void;
    create(resourceUri: string, recommendationId: string, name: string, suppressionContract: models.SuppressionContract, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SuppressionContract>): void;


    /**
     * Enables the activation of a snoozed or dismissed recommendation. The snoozed
     * or dismissed attribute of a recommendation is referred to as a suppression.
     *
     * @param {string} resourceUri The fully qualified Azure Resource Manager
     * identifier of the resource to which the recommendation applies.
     *
     * @param {string} recommendationId The recommendation ID.
     *
     * @param {string} name The name of the suppression.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceUri: string, recommendationId: string, name: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Enables the activation of a snoozed or dismissed recommendation. The snoozed
     * or dismissed attribute of a recommendation is referred to as a suppression.
     *
     * @param {string} resourceUri The fully qualified Azure Resource Manager
     * identifier of the resource to which the recommendation applies.
     *
     * @param {string} recommendationId The recommendation ID.
     *
     * @param {string} name The name of the suppression.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceUri: string, recommendationId: string, name: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceUri: string, recommendationId: string, name: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceUri: string, recommendationId: string, name: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Retrieves the list of snoozed or dismissed suppressions for a subscription.
     * The snoozed or dismissed attribute of a recommendation is referred to as a
     * suppression.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {number} [options.top] The number of suppressions per page if a paged
     * version of this API is being used.
     *
     * @param {string} [options.skipToken] The page-continuation token to use with
     * a paged version of this API.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SuppressionContractListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { top? : number, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SuppressionContractListResult>>;

    /**
     * Retrieves the list of snoozed or dismissed suppressions for a subscription.
     * The snoozed or dismissed attribute of a recommendation is referred to as a
     * suppression.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {number} [options.top] The number of suppressions per page if a paged
     * version of this API is being used.
     *
     * @param {string} [options.skipToken] The page-continuation token to use with
     * a paged version of this API.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SuppressionContractListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SuppressionContractListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SuppressionContractListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { top? : number, skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.SuppressionContractListResult>;
    list(callback: ServiceCallback<models.SuppressionContractListResult>): void;
    list(options: { top? : number, skipToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SuppressionContractListResult>): void;


    /**
     * Retrieves the list of snoozed or dismissed suppressions for a subscription.
     * The snoozed or dismissed attribute of a recommendation is referred to as a
     * suppression.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SuppressionContractListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SuppressionContractListResult>>;

    /**
     * Retrieves the list of snoozed or dismissed suppressions for a subscription.
     * The snoozed or dismissed attribute of a recommendation is referred to as a
     * suppression.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SuppressionContractListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SuppressionContractListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SuppressionContractListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SuppressionContractListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.SuppressionContractListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SuppressionContractListResult>): void;
}

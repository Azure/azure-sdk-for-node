/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The presentation time range, this is asset related and not recommended for
 * Account Filter.
 *
 */
class PresentationTimeRange {
  /**
   * Create a PresentationTimeRange.
   * @property {number} startTimestamp The absolute start time boundary.
   * @property {number} endTimestamp The absolute end time boundary.
   * @property {number} presentationWindowDuration The relative to end sliding
   * window.
   * @property {number} liveBackoffDuration The relative to end right edge.
   * @property {number} timescale The time scale of time stamps.
   * @property {boolean} forceEndTimestamp The indicator of forcing exsiting of
   * end time stamp.
   */
  constructor() {
  }

  /**
   * Defines the metadata of PresentationTimeRange
   *
   * @returns {object} metadata of PresentationTimeRange
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PresentationTimeRange',
      type: {
        name: 'Composite',
        className: 'PresentationTimeRange',
        modelProperties: {
          startTimestamp: {
            required: true,
            serializedName: 'startTimestamp',
            type: {
              name: 'Number'
            }
          },
          endTimestamp: {
            required: true,
            serializedName: 'endTimestamp',
            type: {
              name: 'Number'
            }
          },
          presentationWindowDuration: {
            required: true,
            serializedName: 'presentationWindowDuration',
            type: {
              name: 'Number'
            }
          },
          liveBackoffDuration: {
            required: true,
            serializedName: 'liveBackoffDuration',
            type: {
              name: 'Number'
            }
          },
          timescale: {
            required: true,
            serializedName: 'timescale',
            type: {
              name: 'Number'
            }
          },
          forceEndTimestamp: {
            required: true,
            serializedName: 'forceEndTimestamp',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = PresentationTimeRange;

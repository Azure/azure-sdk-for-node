/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The class to specify one track property condition.
 *
 */
class FilterTrackPropertyCondition {
  /**
   * Create a FilterTrackPropertyCondition.
   * @property {string} property The track property type. Possible values
   * include: 'Unknown', 'Type', 'Name', 'Language', 'FourCC', 'Bitrate'
   * @property {string} value The track proprty value.
   * @property {string} operation The track property condition operation.
   * Possible values include: 'Equal', 'NotEqual'
   */
  constructor() {
  }

  /**
   * Defines the metadata of FilterTrackPropertyCondition
   *
   * @returns {object} metadata of FilterTrackPropertyCondition
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'FilterTrackPropertyCondition',
      type: {
        name: 'Composite',
        className: 'FilterTrackPropertyCondition',
        modelProperties: {
          property: {
            required: true,
            serializedName: 'property',
            type: {
              name: 'Enum',
              allowedValues: [ 'Unknown', 'Type', 'Name', 'Language', 'FourCC', 'Bitrate' ]
            }
          },
          value: {
            required: true,
            serializedName: 'value',
            type: {
              name: 'String'
            }
          },
          operation: {
            required: true,
            serializedName: 'operation',
            type: {
              name: 'Enum',
              allowedValues: [ 'Equal', 'NotEqual' ]
            }
          }
        }
      }
    };
  }
}

module.exports = FilterTrackPropertyCondition;

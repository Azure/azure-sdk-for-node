/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Servers
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AnalysisServicesManagementClient.
 */
export interface Servers {


    /**
     * Gets details about the specified Analysis Services server.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be a minimum of 3 characters, and a maximum of 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AnalysisServicesServer>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getDetailsWithHttpOperationResponse(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AnalysisServicesServer>>;

    /**
     * Gets details about the specified Analysis Services server.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be a minimum of 3 characters, and a maximum of 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AnalysisServicesServer} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AnalysisServicesServer} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AnalysisServicesServer} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    getDetails(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AnalysisServicesServer>;
    getDetails(resourceGroupName: string, serverName: string, callback: ServiceCallback<models.AnalysisServicesServer>): void;
    getDetails(resourceGroupName: string, serverName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AnalysisServicesServer>): void;


    /**
     * Provisions the specified Analysis Services server based on the configuration
     * specified in the request.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be a minimum of 3 characters, and a maximum of 63.
     *
     * @param {object} serverParameters Contains the information used to provision
     * the Analysis Services server.
     *
     * @param {object} [serverParameters.asAdministrators] A collection of AS
     * server administrators
     *
     * @param {array} [serverParameters.asAdministrators.members] An array of
     * administrator user identities.
     *
     * @param {string} [serverParameters.backupBlobContainerUri] The SAS container
     * URI to the backup container.
     *
     * @param {object} [serverParameters.gatewayDetails] The gateway details
     * configured for the AS server.
     *
     * @param {string} [serverParameters.gatewayDetails.gatewayResourceId] Gateway
     * resource to be associated with the server.
     *
     * @param {object} [serverParameters.ipV4FirewallSettings] The firewall
     * settings for the AS server.
     *
     * @param {array} [serverParameters.ipV4FirewallSettings.firewallRules] An
     * array of firewall rules.
     *
     * @param {string} [serverParameters.ipV4FirewallSettings.enablePowerBIService]
     * The indicator of enableing PBI service.
     *
     * @param {string} [serverParameters.querypoolConnectionMode] How the
     * read-write server's participation in the query pool is controlled.<br/>It
     * can have the following values: <ul><li>readOnly - indicates that the
     * read-write server is intended not to participate in query
     * operations</li><li>all - indicates that the read-write server can
     * participate in query operations</li></ul>Specifying readOnly when capacity
     * is 1 results in error. Possible values include: 'All', 'ReadOnly'
     *
     * @param {string} serverParameters.location Location of the Analysis Services
     * resource.
     *
     * @param {object} serverParameters.sku The SKU of the Analysis Services
     * resource.
     *
     * @param {string} serverParameters.sku.name Name of the SKU level.
     *
     * @param {string} [serverParameters.sku.tier] The name of the Azure pricing
     * tier to which the SKU applies. Possible values include: 'Development',
     * 'Basic', 'Standard'
     *
     * @param {number} [serverParameters.sku.capacity] The number of instances in
     * the read only query pool.
     *
     * @param {object} [serverParameters.tags] Key-value pairs of additional
     * resource provisioning properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AnalysisServicesServer>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroupName: string, serverName: string, serverParameters: models.AnalysisServicesServer, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AnalysisServicesServer>>;

    /**
     * Provisions the specified Analysis Services server based on the configuration
     * specified in the request.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be a minimum of 3 characters, and a maximum of 63.
     *
     * @param {object} serverParameters Contains the information used to provision
     * the Analysis Services server.
     *
     * @param {object} [serverParameters.asAdministrators] A collection of AS
     * server administrators
     *
     * @param {array} [serverParameters.asAdministrators.members] An array of
     * administrator user identities.
     *
     * @param {string} [serverParameters.backupBlobContainerUri] The SAS container
     * URI to the backup container.
     *
     * @param {object} [serverParameters.gatewayDetails] The gateway details
     * configured for the AS server.
     *
     * @param {string} [serverParameters.gatewayDetails.gatewayResourceId] Gateway
     * resource to be associated with the server.
     *
     * @param {object} [serverParameters.ipV4FirewallSettings] The firewall
     * settings for the AS server.
     *
     * @param {array} [serverParameters.ipV4FirewallSettings.firewallRules] An
     * array of firewall rules.
     *
     * @param {string} [serverParameters.ipV4FirewallSettings.enablePowerBIService]
     * The indicator of enableing PBI service.
     *
     * @param {string} [serverParameters.querypoolConnectionMode] How the
     * read-write server's participation in the query pool is controlled.<br/>It
     * can have the following values: <ul><li>readOnly - indicates that the
     * read-write server is intended not to participate in query
     * operations</li><li>all - indicates that the read-write server can
     * participate in query operations</li></ul>Specifying readOnly when capacity
     * is 1 results in error. Possible values include: 'All', 'ReadOnly'
     *
     * @param {string} serverParameters.location Location of the Analysis Services
     * resource.
     *
     * @param {object} serverParameters.sku The SKU of the Analysis Services
     * resource.
     *
     * @param {string} serverParameters.sku.name Name of the SKU level.
     *
     * @param {string} [serverParameters.sku.tier] The name of the Azure pricing
     * tier to which the SKU applies. Possible values include: 'Development',
     * 'Basic', 'Standard'
     *
     * @param {number} [serverParameters.sku.capacity] The number of instances in
     * the read only query pool.
     *
     * @param {object} [serverParameters.tags] Key-value pairs of additional
     * resource provisioning properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AnalysisServicesServer} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AnalysisServicesServer} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AnalysisServicesServer} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroupName: string, serverName: string, serverParameters: models.AnalysisServicesServer, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AnalysisServicesServer>;
    create(resourceGroupName: string, serverName: string, serverParameters: models.AnalysisServicesServer, callback: ServiceCallback<models.AnalysisServicesServer>): void;
    create(resourceGroupName: string, serverName: string, serverParameters: models.AnalysisServicesServer, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AnalysisServicesServer>): void;


    /**
     * Deletes the specified Analysis Services server.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes the specified Analysis Services server.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, serverName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, serverName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Updates the current state of the specified Analysis Services server.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} serverUpdateParameters Request object that contains the
     * updated information for the server.
     *
     * @param {object} [serverUpdateParameters.sku] The SKU of the Analysis
     * Services resource.
     *
     * @param {string} serverUpdateParameters.sku.name Name of the SKU level.
     *
     * @param {string} [serverUpdateParameters.sku.tier] The name of the Azure
     * pricing tier to which the SKU applies. Possible values include:
     * 'Development', 'Basic', 'Standard'
     *
     * @param {number} [serverUpdateParameters.sku.capacity] The number of
     * instances in the read only query pool.
     *
     * @param {object} [serverUpdateParameters.tags] Key-value pairs of additional
     * provisioning properties.
     *
     * @param {object} [serverUpdateParameters.asAdministrators] A collection of AS
     * server administrators
     *
     * @param {array} [serverUpdateParameters.asAdministrators.members] An array of
     * administrator user identities.
     *
     * @param {string} [serverUpdateParameters.backupBlobContainerUri] The SAS
     * container URI to the backup container.
     *
     * @param {object} [serverUpdateParameters.gatewayDetails] The gateway details
     * configured for the AS server.
     *
     * @param {string} [serverUpdateParameters.gatewayDetails.gatewayResourceId]
     * Gateway resource to be associated with the server.
     *
     * @param {object} [serverUpdateParameters.ipV4FirewallSettings] The firewall
     * settings for the AS server.
     *
     * @param {array} [serverUpdateParameters.ipV4FirewallSettings.firewallRules]
     * An array of firewall rules.
     *
     * @param {string}
     * [serverUpdateParameters.ipV4FirewallSettings.enablePowerBIService] The
     * indicator of enableing PBI service.
     *
     * @param {string} [serverUpdateParameters.querypoolConnectionMode] How the
     * read-write server's participation in the query pool is controlled.<br/>It
     * can have the following values: <ul><li>readOnly - indicates that the
     * read-write server is intended not to participate in query
     * operations</li><li>all - indicates that the read-write server can
     * participate in query operations</li></ul>Specifying readOnly when capacity
     * is 1 results in error. Possible values include: 'All', 'ReadOnly'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AnalysisServicesServer>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, serverName: string, serverUpdateParameters: models.AnalysisServicesServerUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AnalysisServicesServer>>;

    /**
     * Updates the current state of the specified Analysis Services server.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} serverUpdateParameters Request object that contains the
     * updated information for the server.
     *
     * @param {object} [serverUpdateParameters.sku] The SKU of the Analysis
     * Services resource.
     *
     * @param {string} serverUpdateParameters.sku.name Name of the SKU level.
     *
     * @param {string} [serverUpdateParameters.sku.tier] The name of the Azure
     * pricing tier to which the SKU applies. Possible values include:
     * 'Development', 'Basic', 'Standard'
     *
     * @param {number} [serverUpdateParameters.sku.capacity] The number of
     * instances in the read only query pool.
     *
     * @param {object} [serverUpdateParameters.tags] Key-value pairs of additional
     * provisioning properties.
     *
     * @param {object} [serverUpdateParameters.asAdministrators] A collection of AS
     * server administrators
     *
     * @param {array} [serverUpdateParameters.asAdministrators.members] An array of
     * administrator user identities.
     *
     * @param {string} [serverUpdateParameters.backupBlobContainerUri] The SAS
     * container URI to the backup container.
     *
     * @param {object} [serverUpdateParameters.gatewayDetails] The gateway details
     * configured for the AS server.
     *
     * @param {string} [serverUpdateParameters.gatewayDetails.gatewayResourceId]
     * Gateway resource to be associated with the server.
     *
     * @param {object} [serverUpdateParameters.ipV4FirewallSettings] The firewall
     * settings for the AS server.
     *
     * @param {array} [serverUpdateParameters.ipV4FirewallSettings.firewallRules]
     * An array of firewall rules.
     *
     * @param {string}
     * [serverUpdateParameters.ipV4FirewallSettings.enablePowerBIService] The
     * indicator of enableing PBI service.
     *
     * @param {string} [serverUpdateParameters.querypoolConnectionMode] How the
     * read-write server's participation in the query pool is controlled.<br/>It
     * can have the following values: <ul><li>readOnly - indicates that the
     * read-write server is intended not to participate in query
     * operations</li><li>all - indicates that the read-write server can
     * participate in query operations</li></ul>Specifying readOnly when capacity
     * is 1 results in error. Possible values include: 'All', 'ReadOnly'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AnalysisServicesServer} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AnalysisServicesServer} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AnalysisServicesServer} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, serverName: string, serverUpdateParameters: models.AnalysisServicesServerUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AnalysisServicesServer>;
    update(resourceGroupName: string, serverName: string, serverUpdateParameters: models.AnalysisServicesServerUpdateParameters, callback: ServiceCallback<models.AnalysisServicesServer>): void;
    update(resourceGroupName: string, serverName: string, serverUpdateParameters: models.AnalysisServicesServerUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AnalysisServicesServer>): void;


    /**
     * Supends operation of the specified Analysis Services server instance.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    suspendWithHttpOperationResponse(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Supends operation of the specified Analysis Services server instance.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    suspend(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    suspend(resourceGroupName: string, serverName: string, callback: ServiceCallback<void>): void;
    suspend(resourceGroupName: string, serverName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Resumes operation of the specified Analysis Services server instance.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    resumeWithHttpOperationResponse(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Resumes operation of the specified Analysis Services server instance.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    resume(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    resume(resourceGroupName: string, serverName: string, callback: ServiceCallback<void>): void;
    resume(resourceGroupName: string, serverName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Gets all the Analysis Services servers for the given resource group.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AnalysisServicesServers>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AnalysisServicesServers>>;

    /**
     * Gets all the Analysis Services servers for the given resource group.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AnalysisServicesServers} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AnalysisServicesServers} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AnalysisServicesServers} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AnalysisServicesServers>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.AnalysisServicesServers>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AnalysisServicesServers>): void;


    /**
     * Lists all the Analysis Services servers for the given subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AnalysisServicesServers>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AnalysisServicesServers>>;

    /**
     * Lists all the Analysis Services servers for the given subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AnalysisServicesServers} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AnalysisServicesServers} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AnalysisServicesServers} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AnalysisServicesServers>;
    list(callback: ServiceCallback<models.AnalysisServicesServers>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AnalysisServicesServers>): void;


    /**
     * Lists eligible SKUs for Analysis Services resource provider.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SkuEnumerationForNewResourceResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listSkusForNewWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SkuEnumerationForNewResourceResult>>;

    /**
     * Lists eligible SKUs for Analysis Services resource provider.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SkuEnumerationForNewResourceResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SkuEnumerationForNewResourceResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SkuEnumerationForNewResourceResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listSkusForNew(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SkuEnumerationForNewResourceResult>;
    listSkusForNew(callback: ServiceCallback<models.SkuEnumerationForNewResourceResult>): void;
    listSkusForNew(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SkuEnumerationForNewResourceResult>): void;


    /**
     * Lists eligible SKUs for an Analysis Services resource.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SkuEnumerationForExistingResourceResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listSkusForExistingWithHttpOperationResponse(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SkuEnumerationForExistingResourceResult>>;

    /**
     * Lists eligible SKUs for an Analysis Services resource.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SkuEnumerationForExistingResourceResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SkuEnumerationForExistingResourceResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SkuEnumerationForExistingResourceResult} for
     *                      more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listSkusForExisting(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SkuEnumerationForExistingResourceResult>;
    listSkusForExisting(resourceGroupName: string, serverName: string, callback: ServiceCallback<models.SkuEnumerationForExistingResourceResult>): void;
    listSkusForExisting(resourceGroupName: string, serverName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SkuEnumerationForExistingResourceResult>): void;


    /**
     * Return the gateway status of the specified Analysis Services server
     * instance.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<GatewayListStatusLive>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listGatewayStatusWithHttpOperationResponse(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.GatewayListStatusLive>>;

    /**
     * Return the gateway status of the specified Analysis Services server
     * instance.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {GatewayListStatusLive} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {GatewayListStatusLive} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link GatewayListStatusLive} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listGatewayStatus(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.GatewayListStatusLive>;
    listGatewayStatus(resourceGroupName: string, serverName: string, callback: ServiceCallback<models.GatewayListStatusLive>): void;
    listGatewayStatus(resourceGroupName: string, serverName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.GatewayListStatusLive>): void;


    /**
     * Dissociates a Unified Gateway associated with the server.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    dissociateGatewayWithHttpOperationResponse(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Dissociates a Unified Gateway associated with the server.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    dissociateGateway(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    dissociateGateway(resourceGroupName: string, serverName: string, callback: ServiceCallback<void>): void;
    dissociateGateway(resourceGroupName: string, serverName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Check the name availability in the target location.
     *
     * @param {string} location The region name which the operation will lookup
     * into.
     *
     * @param {object} serverParameters Contains the information used to provision
     * the Analysis Services server.
     *
     * @param {string} [serverParameters.name] Name for checking availability.
     *
     * @param {string} [serverParameters.type] The resource type of azure analysis
     * services.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<CheckServerNameAvailabilityResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    checkNameAvailabilityWithHttpOperationResponse(location: string, serverParameters: models.CheckServerNameAvailabilityParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.CheckServerNameAvailabilityResult>>;

    /**
     * Check the name availability in the target location.
     *
     * @param {string} location The region name which the operation will lookup
     * into.
     *
     * @param {object} serverParameters Contains the information used to provision
     * the Analysis Services server.
     *
     * @param {string} [serverParameters.name] Name for checking availability.
     *
     * @param {string} [serverParameters.type] The resource type of azure analysis
     * services.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {CheckServerNameAvailabilityResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {CheckServerNameAvailabilityResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link CheckServerNameAvailabilityResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    checkNameAvailability(location: string, serverParameters: models.CheckServerNameAvailabilityParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.CheckServerNameAvailabilityResult>;
    checkNameAvailability(location: string, serverParameters: models.CheckServerNameAvailabilityParameters, callback: ServiceCallback<models.CheckServerNameAvailabilityResult>): void;
    checkNameAvailability(location: string, serverParameters: models.CheckServerNameAvailabilityParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.CheckServerNameAvailabilityResult>): void;


    /**
     * List the result of the specified operation.
     *
     * @param {string} location The region name which the operation will lookup
     * into.
     *
     * @param {string} operationId The target operation Id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listOperationResultsWithHttpOperationResponse(location: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * List the result of the specified operation.
     *
     * @param {string} location The region name which the operation will lookup
     * into.
     *
     * @param {string} operationId The target operation Id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listOperationResults(location: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    listOperationResults(location: string, operationId: string, callback: ServiceCallback<void>): void;
    listOperationResults(location: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * List the status of operation.
     *
     * @param {string} location The region name which the operation will lookup
     * into.
     *
     * @param {string} operationId The target operation Id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationStatus>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listOperationStatusesWithHttpOperationResponse(location: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationStatus>>;

    /**
     * List the status of operation.
     *
     * @param {string} location The region name which the operation will lookup
     * into.
     *
     * @param {string} operationId The target operation Id.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationStatus} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationStatus} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationStatus} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listOperationStatuses(location: string, operationId: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationStatus>;
    listOperationStatuses(location: string, operationId: string, callback: ServiceCallback<models.OperationStatus>): void;
    listOperationStatuses(location: string, operationId: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationStatus>): void;


    /**
     * Provisions the specified Analysis Services server based on the configuration
     * specified in the request.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be a minimum of 3 characters, and a maximum of 63.
     *
     * @param {object} serverParameters Contains the information used to provision
     * the Analysis Services server.
     *
     * @param {object} [serverParameters.asAdministrators] A collection of AS
     * server administrators
     *
     * @param {array} [serverParameters.asAdministrators.members] An array of
     * administrator user identities.
     *
     * @param {string} [serverParameters.backupBlobContainerUri] The SAS container
     * URI to the backup container.
     *
     * @param {object} [serverParameters.gatewayDetails] The gateway details
     * configured for the AS server.
     *
     * @param {string} [serverParameters.gatewayDetails.gatewayResourceId] Gateway
     * resource to be associated with the server.
     *
     * @param {object} [serverParameters.ipV4FirewallSettings] The firewall
     * settings for the AS server.
     *
     * @param {array} [serverParameters.ipV4FirewallSettings.firewallRules] An
     * array of firewall rules.
     *
     * @param {string} [serverParameters.ipV4FirewallSettings.enablePowerBIService]
     * The indicator of enableing PBI service.
     *
     * @param {string} [serverParameters.querypoolConnectionMode] How the
     * read-write server's participation in the query pool is controlled.<br/>It
     * can have the following values: <ul><li>readOnly - indicates that the
     * read-write server is intended not to participate in query
     * operations</li><li>all - indicates that the read-write server can
     * participate in query operations</li></ul>Specifying readOnly when capacity
     * is 1 results in error. Possible values include: 'All', 'ReadOnly'
     *
     * @param {string} serverParameters.location Location of the Analysis Services
     * resource.
     *
     * @param {object} serverParameters.sku The SKU of the Analysis Services
     * resource.
     *
     * @param {string} serverParameters.sku.name Name of the SKU level.
     *
     * @param {string} [serverParameters.sku.tier] The name of the Azure pricing
     * tier to which the SKU applies. Possible values include: 'Development',
     * 'Basic', 'Standard'
     *
     * @param {number} [serverParameters.sku.capacity] The number of instances in
     * the read only query pool.
     *
     * @param {object} [serverParameters.tags] Key-value pairs of additional
     * resource provisioning properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AnalysisServicesServer>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateWithHttpOperationResponse(resourceGroupName: string, serverName: string, serverParameters: models.AnalysisServicesServer, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AnalysisServicesServer>>;

    /**
     * Provisions the specified Analysis Services server based on the configuration
     * specified in the request.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be a minimum of 3 characters, and a maximum of 63.
     *
     * @param {object} serverParameters Contains the information used to provision
     * the Analysis Services server.
     *
     * @param {object} [serverParameters.asAdministrators] A collection of AS
     * server administrators
     *
     * @param {array} [serverParameters.asAdministrators.members] An array of
     * administrator user identities.
     *
     * @param {string} [serverParameters.backupBlobContainerUri] The SAS container
     * URI to the backup container.
     *
     * @param {object} [serverParameters.gatewayDetails] The gateway details
     * configured for the AS server.
     *
     * @param {string} [serverParameters.gatewayDetails.gatewayResourceId] Gateway
     * resource to be associated with the server.
     *
     * @param {object} [serverParameters.ipV4FirewallSettings] The firewall
     * settings for the AS server.
     *
     * @param {array} [serverParameters.ipV4FirewallSettings.firewallRules] An
     * array of firewall rules.
     *
     * @param {string} [serverParameters.ipV4FirewallSettings.enablePowerBIService]
     * The indicator of enableing PBI service.
     *
     * @param {string} [serverParameters.querypoolConnectionMode] How the
     * read-write server's participation in the query pool is controlled.<br/>It
     * can have the following values: <ul><li>readOnly - indicates that the
     * read-write server is intended not to participate in query
     * operations</li><li>all - indicates that the read-write server can
     * participate in query operations</li></ul>Specifying readOnly when capacity
     * is 1 results in error. Possible values include: 'All', 'ReadOnly'
     *
     * @param {string} serverParameters.location Location of the Analysis Services
     * resource.
     *
     * @param {object} serverParameters.sku The SKU of the Analysis Services
     * resource.
     *
     * @param {string} serverParameters.sku.name Name of the SKU level.
     *
     * @param {string} [serverParameters.sku.tier] The name of the Azure pricing
     * tier to which the SKU applies. Possible values include: 'Development',
     * 'Basic', 'Standard'
     *
     * @param {number} [serverParameters.sku.capacity] The number of instances in
     * the read only query pool.
     *
     * @param {object} [serverParameters.tags] Key-value pairs of additional
     * resource provisioning properties.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AnalysisServicesServer} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AnalysisServicesServer} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AnalysisServicesServer} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreate(resourceGroupName: string, serverName: string, serverParameters: models.AnalysisServicesServer, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AnalysisServicesServer>;
    beginCreate(resourceGroupName: string, serverName: string, serverParameters: models.AnalysisServicesServer, callback: ServiceCallback<models.AnalysisServicesServer>): void;
    beginCreate(resourceGroupName: string, serverName: string, serverParameters: models.AnalysisServicesServer, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AnalysisServicesServer>): void;


    /**
     * Deletes the specified Analysis Services server.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes the specified Analysis Services server.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, serverName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, serverName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Updates the current state of the specified Analysis Services server.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} serverUpdateParameters Request object that contains the
     * updated information for the server.
     *
     * @param {object} [serverUpdateParameters.sku] The SKU of the Analysis
     * Services resource.
     *
     * @param {string} serverUpdateParameters.sku.name Name of the SKU level.
     *
     * @param {string} [serverUpdateParameters.sku.tier] The name of the Azure
     * pricing tier to which the SKU applies. Possible values include:
     * 'Development', 'Basic', 'Standard'
     *
     * @param {number} [serverUpdateParameters.sku.capacity] The number of
     * instances in the read only query pool.
     *
     * @param {object} [serverUpdateParameters.tags] Key-value pairs of additional
     * provisioning properties.
     *
     * @param {object} [serverUpdateParameters.asAdministrators] A collection of AS
     * server administrators
     *
     * @param {array} [serverUpdateParameters.asAdministrators.members] An array of
     * administrator user identities.
     *
     * @param {string} [serverUpdateParameters.backupBlobContainerUri] The SAS
     * container URI to the backup container.
     *
     * @param {object} [serverUpdateParameters.gatewayDetails] The gateway details
     * configured for the AS server.
     *
     * @param {string} [serverUpdateParameters.gatewayDetails.gatewayResourceId]
     * Gateway resource to be associated with the server.
     *
     * @param {object} [serverUpdateParameters.ipV4FirewallSettings] The firewall
     * settings for the AS server.
     *
     * @param {array} [serverUpdateParameters.ipV4FirewallSettings.firewallRules]
     * An array of firewall rules.
     *
     * @param {string}
     * [serverUpdateParameters.ipV4FirewallSettings.enablePowerBIService] The
     * indicator of enableing PBI service.
     *
     * @param {string} [serverUpdateParameters.querypoolConnectionMode] How the
     * read-write server's participation in the query pool is controlled.<br/>It
     * can have the following values: <ul><li>readOnly - indicates that the
     * read-write server is intended not to participate in query
     * operations</li><li>all - indicates that the read-write server can
     * participate in query operations</li></ul>Specifying readOnly when capacity
     * is 1 results in error. Possible values include: 'All', 'ReadOnly'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AnalysisServicesServer>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(resourceGroupName: string, serverName: string, serverUpdateParameters: models.AnalysisServicesServerUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AnalysisServicesServer>>;

    /**
     * Updates the current state of the specified Analysis Services server.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} serverUpdateParameters Request object that contains the
     * updated information for the server.
     *
     * @param {object} [serverUpdateParameters.sku] The SKU of the Analysis
     * Services resource.
     *
     * @param {string} serverUpdateParameters.sku.name Name of the SKU level.
     *
     * @param {string} [serverUpdateParameters.sku.tier] The name of the Azure
     * pricing tier to which the SKU applies. Possible values include:
     * 'Development', 'Basic', 'Standard'
     *
     * @param {number} [serverUpdateParameters.sku.capacity] The number of
     * instances in the read only query pool.
     *
     * @param {object} [serverUpdateParameters.tags] Key-value pairs of additional
     * provisioning properties.
     *
     * @param {object} [serverUpdateParameters.asAdministrators] A collection of AS
     * server administrators
     *
     * @param {array} [serverUpdateParameters.asAdministrators.members] An array of
     * administrator user identities.
     *
     * @param {string} [serverUpdateParameters.backupBlobContainerUri] The SAS
     * container URI to the backup container.
     *
     * @param {object} [serverUpdateParameters.gatewayDetails] The gateway details
     * configured for the AS server.
     *
     * @param {string} [serverUpdateParameters.gatewayDetails.gatewayResourceId]
     * Gateway resource to be associated with the server.
     *
     * @param {object} [serverUpdateParameters.ipV4FirewallSettings] The firewall
     * settings for the AS server.
     *
     * @param {array} [serverUpdateParameters.ipV4FirewallSettings.firewallRules]
     * An array of firewall rules.
     *
     * @param {string}
     * [serverUpdateParameters.ipV4FirewallSettings.enablePowerBIService] The
     * indicator of enableing PBI service.
     *
     * @param {string} [serverUpdateParameters.querypoolConnectionMode] How the
     * read-write server's participation in the query pool is controlled.<br/>It
     * can have the following values: <ul><li>readOnly - indicates that the
     * read-write server is intended not to participate in query
     * operations</li><li>all - indicates that the read-write server can
     * participate in query operations</li></ul>Specifying readOnly when capacity
     * is 1 results in error. Possible values include: 'All', 'ReadOnly'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AnalysisServicesServer} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AnalysisServicesServer} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AnalysisServicesServer} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(resourceGroupName: string, serverName: string, serverUpdateParameters: models.AnalysisServicesServerUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AnalysisServicesServer>;
    beginUpdate(resourceGroupName: string, serverName: string, serverUpdateParameters: models.AnalysisServicesServerUpdateParameters, callback: ServiceCallback<models.AnalysisServicesServer>): void;
    beginUpdate(resourceGroupName: string, serverName: string, serverUpdateParameters: models.AnalysisServicesServerUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AnalysisServicesServer>): void;


    /**
     * Supends operation of the specified Analysis Services server instance.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginSuspendWithHttpOperationResponse(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Supends operation of the specified Analysis Services server instance.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginSuspend(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginSuspend(resourceGroupName: string, serverName: string, callback: ServiceCallback<void>): void;
    beginSuspend(resourceGroupName: string, serverName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Resumes operation of the specified Analysis Services server instance.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginResumeWithHttpOperationResponse(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Resumes operation of the specified Analysis Services server instance.
     *
     * @param {string} resourceGroupName The name of the Azure Resource group of
     * which a given Analysis Services server is part. This name must be at least 1
     * character in length, and no more than 90.
     *
     * @param {string} serverName The name of the Analysis Services server. It must
     * be at least 3 characters in length, and no more than 63.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginResume(resourceGroupName: string, serverName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginResume(resourceGroupName: string, serverName: string, callback: ServiceCallback<void>): void;
    beginResume(resourceGroupName: string, serverName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
}

/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the AnalysisServicesManagementClient.
 */
export interface Operations {


    /**
     * Lists all of the available consumption REST API operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists all of the available consumption REST API operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    list(callback: ServiceCallback<models.OperationListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;


    /**
     * Lists all of the available consumption REST API operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists all of the available consumption REST API operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.OperationListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;
}

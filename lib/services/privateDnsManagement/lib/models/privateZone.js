/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Describes a Private DNS zone.
 *
 * @extends models['TrackedResource']
 */
class PrivateZone extends models['TrackedResource'] {
  /**
   * Create a PrivateZone.
   * @property {string} [etag] The ETag of the zone.
   * @property {number} [maxNumberOfRecordSets] The maximum number of record
   * sets that can be created in this Private DNS zone. This is a read-only
   * property and any attempt to set this value will be ignored.
   * @property {number} [numberOfRecordSets] The current number of record sets
   * in this Private DNS zone. This is a read-only property and any attempt to
   * set this value will be ignored.
   * @property {number} [maxNumberOfVirtualNetworkLinks] The maximum number of
   * virtual networks that can be linked to this Private DNS zone. This is a
   * read-only property and any attempt to set this value will be ignored.
   * @property {number} [numberOfVirtualNetworkLinks] The current number of
   * virtual networks that are linked to this Private DNS zone. This is a
   * read-only property and any attempt to set this value will be ignored.
   * @property {number} [maxNumberOfVirtualNetworkLinksWithRegistration] The
   * maximum number of virtual networks that can be linked to this Private DNS
   * zone with registration enabled. This is a read-only property and any
   * attempt to set this value will be ignored.
   * @property {number} [numberOfVirtualNetworkLinksWithRegistration] The
   * current number of virtual networks that are linked to this Private DNS
   * zone with registration enabled. This is a read-only property and any
   * attempt to set this value will be ignored.
   * @property {string} [provisioningState] The provisioning state of the
   * resource. This is a read-only property and any attempt to set this value
   * will be ignored. Possible values include: 'Creating', 'Updating',
   * 'Deleting', 'Succeeded', 'Failed', 'Canceled'
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of PrivateZone
   *
   * @returns {object} metadata of PrivateZone
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PrivateZone',
      type: {
        name: 'Composite',
        className: 'PrivateZone',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          etag: {
            required: false,
            serializedName: 'etag',
            type: {
              name: 'String'
            }
          },
          maxNumberOfRecordSets: {
            required: false,
            readOnly: true,
            serializedName: 'properties.maxNumberOfRecordSets',
            type: {
              name: 'Number'
            }
          },
          numberOfRecordSets: {
            required: false,
            readOnly: true,
            serializedName: 'properties.numberOfRecordSets',
            type: {
              name: 'Number'
            }
          },
          maxNumberOfVirtualNetworkLinks: {
            required: false,
            readOnly: true,
            serializedName: 'properties.maxNumberOfVirtualNetworkLinks',
            type: {
              name: 'Number'
            }
          },
          numberOfVirtualNetworkLinks: {
            required: false,
            readOnly: true,
            serializedName: 'properties.numberOfVirtualNetworkLinks',
            type: {
              name: 'Number'
            }
          },
          maxNumberOfVirtualNetworkLinksWithRegistration: {
            required: false,
            readOnly: true,
            serializedName: 'properties.maxNumberOfVirtualNetworkLinksWithRegistration',
            type: {
              name: 'Number'
            }
          },
          numberOfVirtualNetworkLinksWithRegistration: {
            required: false,
            readOnly: true,
            serializedName: 'properties.numberOfVirtualNetworkLinksWithRegistration',
            type: {
              name: 'Number'
            }
          },
          provisioningState: {
            required: false,
            readOnly: true,
            serializedName: 'properties.provisioningState',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = PrivateZone;

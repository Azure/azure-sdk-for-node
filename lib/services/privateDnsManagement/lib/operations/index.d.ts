/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * PrivateZones
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the PrivateDnsManagementClient.
 */
export interface PrivateZones {


    /**
     * Creates or updates a Private DNS zone. Does not modify Links to virtual
     * networks or DNS records within the zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} parameters Parameters supplied to the CreateOrUpdate
     * operation.
     *
     * @param {string} [parameters.etag] The ETag of the zone.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the Private DNS zone. Omit
     * this value to always overwrite the current zone. Specify the last-seen ETag
     * value to prevent accidentally overwritting any concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new Private DNS
     * zone to be created, but to prevent updating an existing zone. Other values
     * will be ignored.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PrivateZone>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, parameters: models.PrivateZone, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PrivateZone>>;

    /**
     * Creates or updates a Private DNS zone. Does not modify Links to virtual
     * networks or DNS records within the zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} parameters Parameters supplied to the CreateOrUpdate
     * operation.
     *
     * @param {string} [parameters.etag] The ETag of the zone.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the Private DNS zone. Omit
     * this value to always overwrite the current zone. Specify the last-seen ETag
     * value to prevent accidentally overwritting any concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new Private DNS
     * zone to be created, but to prevent updating an existing zone. Other values
     * will be ignored.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PrivateZone} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PrivateZone} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PrivateZone} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, privateZoneName: string, parameters: models.PrivateZone, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.PrivateZone>;
    createOrUpdate(resourceGroupName: string, privateZoneName: string, parameters: models.PrivateZone, callback: ServiceCallback<models.PrivateZone>): void;
    createOrUpdate(resourceGroupName: string, privateZoneName: string, parameters: models.PrivateZone, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PrivateZone>): void;


    /**
     * Updates a Private DNS zone. Does not modify virtual network links or DNS
     * records within the zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} parameters Parameters supplied to the Update operation.
     *
     * @param {string} [parameters.etag] The ETag of the zone.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the Private DNS zone. Omit
     * this value to always overwrite the current zone. Specify the last-seen ETag
     * value to prevent accidentally overwritting any concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PrivateZone>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, parameters: models.PrivateZone, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PrivateZone>>;

    /**
     * Updates a Private DNS zone. Does not modify virtual network links or DNS
     * records within the zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} parameters Parameters supplied to the Update operation.
     *
     * @param {string} [parameters.etag] The ETag of the zone.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the Private DNS zone. Omit
     * this value to always overwrite the current zone. Specify the last-seen ETag
     * value to prevent accidentally overwritting any concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PrivateZone} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PrivateZone} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PrivateZone} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, privateZoneName: string, parameters: models.PrivateZone, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.PrivateZone>;
    update(resourceGroupName: string, privateZoneName: string, parameters: models.PrivateZone, callback: ServiceCallback<models.PrivateZone>): void;
    update(resourceGroupName: string, privateZoneName: string, parameters: models.PrivateZone, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PrivateZone>): void;


    /**
     * Deletes a Private DNS zone. WARNING: All DNS records in the zone will also
     * be deleted. This operation cannot be undone. Private DNS zone cannot be
     * deleted unless all virtual network links to it are removed.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the Private DNS zone. Omit
     * this value to always delete the current zone. Specify the last-seen ETag
     * value to prevent accidentally deleting any concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a Private DNS zone. WARNING: All DNS records in the zone will also
     * be deleted. This operation cannot be undone. Private DNS zone cannot be
     * deleted unless all virtual network links to it are removed.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the Private DNS zone. Omit
     * this value to always delete the current zone. Specify the last-seen ETag
     * value to prevent accidentally deleting any concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, privateZoneName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, privateZoneName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, privateZoneName: string, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Gets a Private DNS zone. Retrieves the zone properties, but not the virtual
     * networks links or the record sets within the zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PrivateZone>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PrivateZone>>;

    /**
     * Gets a Private DNS zone. Retrieves the zone properties, but not the virtual
     * networks links or the record sets within the zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PrivateZone} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PrivateZone} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PrivateZone} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, privateZoneName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PrivateZone>;
    get(resourceGroupName: string, privateZoneName: string, callback: ServiceCallback<models.PrivateZone>): void;
    get(resourceGroupName: string, privateZoneName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PrivateZone>): void;


    /**
     * Lists the Private DNS zones in all resource groups in a subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {number} [options.top] The maximum number of Private DNS zones to
     * return. If not specified, returns up to 100 zones.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PrivateZoneListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { top? : number, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PrivateZoneListResult>>;

    /**
     * Lists the Private DNS zones in all resource groups in a subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {number} [options.top] The maximum number of Private DNS zones to
     * return. If not specified, returns up to 100 zones.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PrivateZoneListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PrivateZoneListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PrivateZoneListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { top? : number, customHeaders? : { [headerName: string]: string; } }): Promise<models.PrivateZoneListResult>;
    list(callback: ServiceCallback<models.PrivateZoneListResult>): void;
    list(options: { top? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PrivateZoneListResult>): void;


    /**
     * Lists the Private DNS zones within a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {number} [options.top] The maximum number of record sets to return.
     * If not specified, returns up to 100 record sets.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PrivateZoneListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { top? : number, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PrivateZoneListResult>>;

    /**
     * Lists the Private DNS zones within a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {number} [options.top] The maximum number of record sets to return.
     * If not specified, returns up to 100 record sets.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PrivateZoneListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PrivateZoneListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PrivateZoneListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { top? : number, customHeaders? : { [headerName: string]: string; } }): Promise<models.PrivateZoneListResult>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.PrivateZoneListResult>): void;
    listByResourceGroup(resourceGroupName: string, options: { top? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PrivateZoneListResult>): void;


    /**
     * Creates or updates a Private DNS zone. Does not modify Links to virtual
     * networks or DNS records within the zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} parameters Parameters supplied to the CreateOrUpdate
     * operation.
     *
     * @param {string} [parameters.etag] The ETag of the zone.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the Private DNS zone. Omit
     * this value to always overwrite the current zone. Specify the last-seen ETag
     * value to prevent accidentally overwritting any concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new Private DNS
     * zone to be created, but to prevent updating an existing zone. Other values
     * will be ignored.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PrivateZone>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, parameters: models.PrivateZone, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PrivateZone>>;

    /**
     * Creates or updates a Private DNS zone. Does not modify Links to virtual
     * networks or DNS records within the zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} parameters Parameters supplied to the CreateOrUpdate
     * operation.
     *
     * @param {string} [parameters.etag] The ETag of the zone.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the Private DNS zone. Omit
     * this value to always overwrite the current zone. Specify the last-seen ETag
     * value to prevent accidentally overwritting any concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new Private DNS
     * zone to be created, but to prevent updating an existing zone. Other values
     * will be ignored.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PrivateZone} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PrivateZone} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PrivateZone} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, privateZoneName: string, parameters: models.PrivateZone, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.PrivateZone>;
    beginCreateOrUpdate(resourceGroupName: string, privateZoneName: string, parameters: models.PrivateZone, callback: ServiceCallback<models.PrivateZone>): void;
    beginCreateOrUpdate(resourceGroupName: string, privateZoneName: string, parameters: models.PrivateZone, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PrivateZone>): void;


    /**
     * Updates a Private DNS zone. Does not modify virtual network links or DNS
     * records within the zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} parameters Parameters supplied to the Update operation.
     *
     * @param {string} [parameters.etag] The ETag of the zone.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the Private DNS zone. Omit
     * this value to always overwrite the current zone. Specify the last-seen ETag
     * value to prevent accidentally overwritting any concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PrivateZone>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, parameters: models.PrivateZone, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PrivateZone>>;

    /**
     * Updates a Private DNS zone. Does not modify virtual network links or DNS
     * records within the zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} parameters Parameters supplied to the Update operation.
     *
     * @param {string} [parameters.etag] The ETag of the zone.
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the Private DNS zone. Omit
     * this value to always overwrite the current zone. Specify the last-seen ETag
     * value to prevent accidentally overwritting any concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PrivateZone} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PrivateZone} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PrivateZone} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(resourceGroupName: string, privateZoneName: string, parameters: models.PrivateZone, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.PrivateZone>;
    beginUpdate(resourceGroupName: string, privateZoneName: string, parameters: models.PrivateZone, callback: ServiceCallback<models.PrivateZone>): void;
    beginUpdate(resourceGroupName: string, privateZoneName: string, parameters: models.PrivateZone, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PrivateZone>): void;


    /**
     * Deletes a Private DNS zone. WARNING: All DNS records in the zone will also
     * be deleted. This operation cannot be undone. Private DNS zone cannot be
     * deleted unless all virtual network links to it are removed.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the Private DNS zone. Omit
     * this value to always delete the current zone. Specify the last-seen ETag
     * value to prevent accidentally deleting any concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a Private DNS zone. WARNING: All DNS records in the zone will also
     * be deleted. This operation cannot be undone. Private DNS zone cannot be
     * deleted unless all virtual network links to it are removed.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the Private DNS zone. Omit
     * this value to always delete the current zone. Specify the last-seen ETag
     * value to prevent accidentally deleting any concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, privateZoneName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, privateZoneName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, privateZoneName: string, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists the Private DNS zones in all resource groups in a subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PrivateZoneListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PrivateZoneListResult>>;

    /**
     * Lists the Private DNS zones in all resource groups in a subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PrivateZoneListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PrivateZoneListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PrivateZoneListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PrivateZoneListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.PrivateZoneListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PrivateZoneListResult>): void;


    /**
     * Lists the Private DNS zones within a resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<PrivateZoneListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.PrivateZoneListResult>>;

    /**
     * Lists the Private DNS zones within a resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {PrivateZoneListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {PrivateZoneListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link PrivateZoneListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.PrivateZoneListResult>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.PrivateZoneListResult>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.PrivateZoneListResult>): void;
}

/**
 * @class
 * VirtualNetworkLinks
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the PrivateDnsManagementClient.
 */
export interface VirtualNetworkLinks {


    /**
     * Creates or updates a virtual network link to the specified Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} virtualNetworkLinkName The name of the virtual network link.
     *
     * @param {object} parameters Parameters supplied to the CreateOrUpdate
     * operation.
     *
     * @param {string} [parameters.etag] The ETag of the virtual network link.
     *
     * @param {object} [parameters.virtualNetwork] The reference of the virtual
     * network.
     *
     * @param {string} [parameters.virtualNetwork.id] Resource ID.
     *
     * @param {boolean} [parameters.registrationEnabled] Is auto-registration of
     * virtual machine records in the virtual network in the Private DNS zone
     * enabled?
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the virtual network link to
     * the Private DNS zone. Omit this value to always overwrite the current
     * virtual network link. Specify the last-seen ETag value to prevent
     * accidentally overwritting any concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new virtual
     * network link to the Private DNS zone to be created, but to prevent updating
     * an existing link. Other values will be ignored.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VirtualNetworkLink>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, parameters: models.VirtualNetworkLink, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VirtualNetworkLink>>;

    /**
     * Creates or updates a virtual network link to the specified Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} virtualNetworkLinkName The name of the virtual network link.
     *
     * @param {object} parameters Parameters supplied to the CreateOrUpdate
     * operation.
     *
     * @param {string} [parameters.etag] The ETag of the virtual network link.
     *
     * @param {object} [parameters.virtualNetwork] The reference of the virtual
     * network.
     *
     * @param {string} [parameters.virtualNetwork.id] Resource ID.
     *
     * @param {boolean} [parameters.registrationEnabled] Is auto-registration of
     * virtual machine records in the virtual network in the Private DNS zone
     * enabled?
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the virtual network link to
     * the Private DNS zone. Omit this value to always overwrite the current
     * virtual network link. Specify the last-seen ETag value to prevent
     * accidentally overwritting any concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new virtual
     * network link to the Private DNS zone to be created, but to prevent updating
     * an existing link. Other values will be ignored.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VirtualNetworkLink} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VirtualNetworkLink} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VirtualNetworkLink} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, parameters: models.VirtualNetworkLink, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.VirtualNetworkLink>;
    createOrUpdate(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, parameters: models.VirtualNetworkLink, callback: ServiceCallback<models.VirtualNetworkLink>): void;
    createOrUpdate(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, parameters: models.VirtualNetworkLink, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VirtualNetworkLink>): void;


    /**
     * Updates a virtual network link to the specified Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} virtualNetworkLinkName The name of the virtual network link.
     *
     * @param {object} parameters Parameters supplied to the Update operation.
     *
     * @param {string} [parameters.etag] The ETag of the virtual network link.
     *
     * @param {object} [parameters.virtualNetwork] The reference of the virtual
     * network.
     *
     * @param {string} [parameters.virtualNetwork.id] Resource ID.
     *
     * @param {boolean} [parameters.registrationEnabled] Is auto-registration of
     * virtual machine records in the virtual network in the Private DNS zone
     * enabled?
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the virtual network link to
     * the Private DNS zone. Omit this value to always overwrite the current
     * virtual network link. Specify the last-seen ETag value to prevent
     * accidentally overwritting any concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VirtualNetworkLink>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, parameters: models.VirtualNetworkLink, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VirtualNetworkLink>>;

    /**
     * Updates a virtual network link to the specified Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} virtualNetworkLinkName The name of the virtual network link.
     *
     * @param {object} parameters Parameters supplied to the Update operation.
     *
     * @param {string} [parameters.etag] The ETag of the virtual network link.
     *
     * @param {object} [parameters.virtualNetwork] The reference of the virtual
     * network.
     *
     * @param {string} [parameters.virtualNetwork.id] Resource ID.
     *
     * @param {boolean} [parameters.registrationEnabled] Is auto-registration of
     * virtual machine records in the virtual network in the Private DNS zone
     * enabled?
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the virtual network link to
     * the Private DNS zone. Omit this value to always overwrite the current
     * virtual network link. Specify the last-seen ETag value to prevent
     * accidentally overwritting any concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VirtualNetworkLink} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VirtualNetworkLink} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VirtualNetworkLink} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, parameters: models.VirtualNetworkLink, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.VirtualNetworkLink>;
    update(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, parameters: models.VirtualNetworkLink, callback: ServiceCallback<models.VirtualNetworkLink>): void;
    update(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, parameters: models.VirtualNetworkLink, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VirtualNetworkLink>): void;


    /**
     * Deletes a virtual network link to the specified Private DNS zone. WARNING:
     * In case of a registration virtual network, all auto-registered DNS records
     * in the zone for the virtual network will also be deleted. This operation
     * cannot be undone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} virtualNetworkLinkName The name of the virtual network link.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the virtual network link to
     * the Private DNS zone. Omit this value to always delete the current zone.
     * Specify the last-seen ETag value to prevent accidentally deleting any
     * concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a virtual network link to the specified Private DNS zone. WARNING:
     * In case of a registration virtual network, all auto-registered DNS records
     * in the zone for the virtual network will also be deleted. This operation
     * cannot be undone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} virtualNetworkLinkName The name of the virtual network link.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the virtual network link to
     * the Private DNS zone. Omit this value to always delete the current zone.
     * Specify the last-seen ETag value to prevent accidentally deleting any
     * concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Gets a virtual network link to the specified Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} virtualNetworkLinkName The name of the virtual network link.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VirtualNetworkLink>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VirtualNetworkLink>>;

    /**
     * Gets a virtual network link to the specified Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} virtualNetworkLinkName The name of the virtual network link.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VirtualNetworkLink} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VirtualNetworkLink} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VirtualNetworkLink} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VirtualNetworkLink>;
    get(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, callback: ServiceCallback<models.VirtualNetworkLink>): void;
    get(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VirtualNetworkLink>): void;


    /**
     * Lists the virtual network links to the specified Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {number} [options.top] The maximum number of virtual network links to
     * return. If not specified, returns up to 100 virtual network links.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VirtualNetworkLinkListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, options?: { top? : number, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VirtualNetworkLinkListResult>>;

    /**
     * Lists the virtual network links to the specified Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {number} [options.top] The maximum number of virtual network links to
     * return. If not specified, returns up to 100 virtual network links.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VirtualNetworkLinkListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VirtualNetworkLinkListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VirtualNetworkLinkListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(resourceGroupName: string, privateZoneName: string, options?: { top? : number, customHeaders? : { [headerName: string]: string; } }): Promise<models.VirtualNetworkLinkListResult>;
    list(resourceGroupName: string, privateZoneName: string, callback: ServiceCallback<models.VirtualNetworkLinkListResult>): void;
    list(resourceGroupName: string, privateZoneName: string, options: { top? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VirtualNetworkLinkListResult>): void;


    /**
     * Creates or updates a virtual network link to the specified Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} virtualNetworkLinkName The name of the virtual network link.
     *
     * @param {object} parameters Parameters supplied to the CreateOrUpdate
     * operation.
     *
     * @param {string} [parameters.etag] The ETag of the virtual network link.
     *
     * @param {object} [parameters.virtualNetwork] The reference of the virtual
     * network.
     *
     * @param {string} [parameters.virtualNetwork.id] Resource ID.
     *
     * @param {boolean} [parameters.registrationEnabled] Is auto-registration of
     * virtual machine records in the virtual network in the Private DNS zone
     * enabled?
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the virtual network link to
     * the Private DNS zone. Omit this value to always overwrite the current
     * virtual network link. Specify the last-seen ETag value to prevent
     * accidentally overwritting any concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new virtual
     * network link to the Private DNS zone to be created, but to prevent updating
     * an existing link. Other values will be ignored.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VirtualNetworkLink>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, parameters: models.VirtualNetworkLink, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VirtualNetworkLink>>;

    /**
     * Creates or updates a virtual network link to the specified Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} virtualNetworkLinkName The name of the virtual network link.
     *
     * @param {object} parameters Parameters supplied to the CreateOrUpdate
     * operation.
     *
     * @param {string} [parameters.etag] The ETag of the virtual network link.
     *
     * @param {object} [parameters.virtualNetwork] The reference of the virtual
     * network.
     *
     * @param {string} [parameters.virtualNetwork.id] Resource ID.
     *
     * @param {boolean} [parameters.registrationEnabled] Is auto-registration of
     * virtual machine records in the virtual network in the Private DNS zone
     * enabled?
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the virtual network link to
     * the Private DNS zone. Omit this value to always overwrite the current
     * virtual network link. Specify the last-seen ETag value to prevent
     * accidentally overwritting any concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new virtual
     * network link to the Private DNS zone to be created, but to prevent updating
     * an existing link. Other values will be ignored.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VirtualNetworkLink} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VirtualNetworkLink} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VirtualNetworkLink} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, parameters: models.VirtualNetworkLink, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.VirtualNetworkLink>;
    beginCreateOrUpdate(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, parameters: models.VirtualNetworkLink, callback: ServiceCallback<models.VirtualNetworkLink>): void;
    beginCreateOrUpdate(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, parameters: models.VirtualNetworkLink, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VirtualNetworkLink>): void;


    /**
     * Updates a virtual network link to the specified Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} virtualNetworkLinkName The name of the virtual network link.
     *
     * @param {object} parameters Parameters supplied to the Update operation.
     *
     * @param {string} [parameters.etag] The ETag of the virtual network link.
     *
     * @param {object} [parameters.virtualNetwork] The reference of the virtual
     * network.
     *
     * @param {string} [parameters.virtualNetwork.id] Resource ID.
     *
     * @param {boolean} [parameters.registrationEnabled] Is auto-registration of
     * virtual machine records in the virtual network in the Private DNS zone
     * enabled?
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the virtual network link to
     * the Private DNS zone. Omit this value to always overwrite the current
     * virtual network link. Specify the last-seen ETag value to prevent
     * accidentally overwritting any concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VirtualNetworkLink>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, parameters: models.VirtualNetworkLink, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VirtualNetworkLink>>;

    /**
     * Updates a virtual network link to the specified Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} virtualNetworkLinkName The name of the virtual network link.
     *
     * @param {object} parameters Parameters supplied to the Update operation.
     *
     * @param {string} [parameters.etag] The ETag of the virtual network link.
     *
     * @param {object} [parameters.virtualNetwork] The reference of the virtual
     * network.
     *
     * @param {string} [parameters.virtualNetwork.id] Resource ID.
     *
     * @param {boolean} [parameters.registrationEnabled] Is auto-registration of
     * virtual machine records in the virtual network in the Private DNS zone
     * enabled?
     *
     * @param {object} [parameters.tags] Resource tags.
     *
     * @param {string} [parameters.location] The Azure Region where the resource
     * lives
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the virtual network link to
     * the Private DNS zone. Omit this value to always overwrite the current
     * virtual network link. Specify the last-seen ETag value to prevent
     * accidentally overwritting any concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VirtualNetworkLink} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VirtualNetworkLink} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VirtualNetworkLink} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, parameters: models.VirtualNetworkLink, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.VirtualNetworkLink>;
    beginUpdate(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, parameters: models.VirtualNetworkLink, callback: ServiceCallback<models.VirtualNetworkLink>): void;
    beginUpdate(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, parameters: models.VirtualNetworkLink, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VirtualNetworkLink>): void;


    /**
     * Deletes a virtual network link to the specified Private DNS zone. WARNING:
     * In case of a registration virtual network, all auto-registered DNS records
     * in the zone for the virtual network will also be deleted. This operation
     * cannot be undone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} virtualNetworkLinkName The name of the virtual network link.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the virtual network link to
     * the Private DNS zone. Omit this value to always delete the current zone.
     * Specify the last-seen ETag value to prevent accidentally deleting any
     * concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a virtual network link to the specified Private DNS zone. WARNING:
     * In case of a registration virtual network, all auto-registered DNS records
     * in the zone for the virtual network will also be deleted. This operation
     * cannot be undone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} virtualNetworkLinkName The name of the virtual network link.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the virtual network link to
     * the Private DNS zone. Omit this value to always delete the current zone.
     * Specify the last-seen ETag value to prevent accidentally deleting any
     * concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, privateZoneName: string, virtualNetworkLinkName: string, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists the virtual network links to the specified Private DNS zone.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<VirtualNetworkLinkListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.VirtualNetworkLinkListResult>>;

    /**
     * Lists the virtual network links to the specified Private DNS zone.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {VirtualNetworkLinkListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {VirtualNetworkLinkListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link VirtualNetworkLinkListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.VirtualNetworkLinkListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.VirtualNetworkLinkListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.VirtualNetworkLinkListResult>): void;
}

/**
 * @class
 * RecordSets
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the PrivateDnsManagementClient.
 */
export interface RecordSets {


    /**
     * Creates or updates a record set within a Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} recordType The type of DNS record in this record set. Record
     * sets of type SOA can be updated but not created (they are created when the
     * Private DNS zone is created). Possible values include: 'A', 'AAAA', 'CNAME',
     * 'MX', 'PTR', 'SOA', 'SRV', 'TXT'
     *
     * @param {string} relativeRecordSetName The name of the record set, relative
     * to the name of the zone.
     *
     * @param {object} parameters Parameters supplied to the CreateOrUpdate
     * operation.
     *
     * @param {string} [parameters.etag] The ETag of the record set.
     *
     * @param {object} [parameters.metadata] The metadata attached to the record
     * set.
     *
     * @param {number} [parameters.ttl] The TTL (time-to-live) of the records in
     * the record set.
     *
     * @param {array} [parameters.aRecords] The list of A records in the record
     * set.
     *
     * @param {array} [parameters.aaaaRecords] The list of AAAA records in the
     * record set.
     *
     * @param {object} [parameters.cnameRecord] The CNAME record in the record set.
     *
     * @param {string} [parameters.cnameRecord.cname] The canonical name for this
     * CNAME record.
     *
     * @param {array} [parameters.mxRecords] The list of MX records in the record
     * set.
     *
     * @param {array} [parameters.ptrRecords] The list of PTR records in the record
     * set.
     *
     * @param {object} [parameters.soaRecord] The SOA record in the record set.
     *
     * @param {string} [parameters.soaRecord.host] The domain name of the
     * authoritative name server for this SOA record.
     *
     * @param {string} [parameters.soaRecord.email] The email contact for this SOA
     * record.
     *
     * @param {number} [parameters.soaRecord.serialNumber] The serial number for
     * this SOA record.
     *
     * @param {number} [parameters.soaRecord.refreshTime] The refresh value for
     * this SOA record.
     *
     * @param {number} [parameters.soaRecord.retryTime] The retry time for this SOA
     * record.
     *
     * @param {number} [parameters.soaRecord.expireTime] The expire time for this
     * SOA record.
     *
     * @param {number} [parameters.soaRecord.minimumTtl] The minimum value for this
     * SOA record. By convention this is used to determine the negative caching
     * duration.
     *
     * @param {array} [parameters.srvRecords] The list of SRV records in the record
     * set.
     *
     * @param {array} [parameters.txtRecords] The list of TXT records in the record
     * set.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the record set. Omit this
     * value to always overwrite the current record set. Specify the last-seen ETag
     * value to prevent accidentally overwritting any concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new record set
     * to be created, but to prevent updating an existing record set. Other values
     * will be ignored.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecordSet>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, recordType: string, relativeRecordSetName: string, parameters: models.RecordSet, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecordSet>>;

    /**
     * Creates or updates a record set within a Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} recordType The type of DNS record in this record set. Record
     * sets of type SOA can be updated but not created (they are created when the
     * Private DNS zone is created). Possible values include: 'A', 'AAAA', 'CNAME',
     * 'MX', 'PTR', 'SOA', 'SRV', 'TXT'
     *
     * @param {string} relativeRecordSetName The name of the record set, relative
     * to the name of the zone.
     *
     * @param {object} parameters Parameters supplied to the CreateOrUpdate
     * operation.
     *
     * @param {string} [parameters.etag] The ETag of the record set.
     *
     * @param {object} [parameters.metadata] The metadata attached to the record
     * set.
     *
     * @param {number} [parameters.ttl] The TTL (time-to-live) of the records in
     * the record set.
     *
     * @param {array} [parameters.aRecords] The list of A records in the record
     * set.
     *
     * @param {array} [parameters.aaaaRecords] The list of AAAA records in the
     * record set.
     *
     * @param {object} [parameters.cnameRecord] The CNAME record in the record set.
     *
     * @param {string} [parameters.cnameRecord.cname] The canonical name for this
     * CNAME record.
     *
     * @param {array} [parameters.mxRecords] The list of MX records in the record
     * set.
     *
     * @param {array} [parameters.ptrRecords] The list of PTR records in the record
     * set.
     *
     * @param {object} [parameters.soaRecord] The SOA record in the record set.
     *
     * @param {string} [parameters.soaRecord.host] The domain name of the
     * authoritative name server for this SOA record.
     *
     * @param {string} [parameters.soaRecord.email] The email contact for this SOA
     * record.
     *
     * @param {number} [parameters.soaRecord.serialNumber] The serial number for
     * this SOA record.
     *
     * @param {number} [parameters.soaRecord.refreshTime] The refresh value for
     * this SOA record.
     *
     * @param {number} [parameters.soaRecord.retryTime] The retry time for this SOA
     * record.
     *
     * @param {number} [parameters.soaRecord.expireTime] The expire time for this
     * SOA record.
     *
     * @param {number} [parameters.soaRecord.minimumTtl] The minimum value for this
     * SOA record. By convention this is used to determine the negative caching
     * duration.
     *
     * @param {array} [parameters.srvRecords] The list of SRV records in the record
     * set.
     *
     * @param {array} [parameters.txtRecords] The list of TXT records in the record
     * set.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the record set. Omit this
     * value to always overwrite the current record set. Specify the last-seen ETag
     * value to prevent accidentally overwritting any concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new record set
     * to be created, but to prevent updating an existing record set. Other values
     * will be ignored.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecordSet} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecordSet} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecordSet} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, privateZoneName: string, recordType: string, relativeRecordSetName: string, parameters: models.RecordSet, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.RecordSet>;
    createOrUpdate(resourceGroupName: string, privateZoneName: string, recordType: string, relativeRecordSetName: string, parameters: models.RecordSet, callback: ServiceCallback<models.RecordSet>): void;
    createOrUpdate(resourceGroupName: string, privateZoneName: string, recordType: string, relativeRecordSetName: string, parameters: models.RecordSet, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecordSet>): void;


    /**
     * Updates a record set within a Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} recordType The type of DNS record in this record set.
     * Possible values include: 'A', 'AAAA', 'CNAME', 'MX', 'PTR', 'SOA', 'SRV',
     * 'TXT'
     *
     * @param {string} relativeRecordSetName The name of the record set, relative
     * to the name of the zone.
     *
     * @param {object} parameters Parameters supplied to the Update operation.
     *
     * @param {string} [parameters.etag] The ETag of the record set.
     *
     * @param {object} [parameters.metadata] The metadata attached to the record
     * set.
     *
     * @param {number} [parameters.ttl] The TTL (time-to-live) of the records in
     * the record set.
     *
     * @param {array} [parameters.aRecords] The list of A records in the record
     * set.
     *
     * @param {array} [parameters.aaaaRecords] The list of AAAA records in the
     * record set.
     *
     * @param {object} [parameters.cnameRecord] The CNAME record in the record set.
     *
     * @param {string} [parameters.cnameRecord.cname] The canonical name for this
     * CNAME record.
     *
     * @param {array} [parameters.mxRecords] The list of MX records in the record
     * set.
     *
     * @param {array} [parameters.ptrRecords] The list of PTR records in the record
     * set.
     *
     * @param {object} [parameters.soaRecord] The SOA record in the record set.
     *
     * @param {string} [parameters.soaRecord.host] The domain name of the
     * authoritative name server for this SOA record.
     *
     * @param {string} [parameters.soaRecord.email] The email contact for this SOA
     * record.
     *
     * @param {number} [parameters.soaRecord.serialNumber] The serial number for
     * this SOA record.
     *
     * @param {number} [parameters.soaRecord.refreshTime] The refresh value for
     * this SOA record.
     *
     * @param {number} [parameters.soaRecord.retryTime] The retry time for this SOA
     * record.
     *
     * @param {number} [parameters.soaRecord.expireTime] The expire time for this
     * SOA record.
     *
     * @param {number} [parameters.soaRecord.minimumTtl] The minimum value for this
     * SOA record. By convention this is used to determine the negative caching
     * duration.
     *
     * @param {array} [parameters.srvRecords] The list of SRV records in the record
     * set.
     *
     * @param {array} [parameters.txtRecords] The list of TXT records in the record
     * set.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the record set. Omit this
     * value to always overwrite the current record set. Specify the last-seen ETag
     * value to prevent accidentally overwritting concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecordSet>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, recordType: string, relativeRecordSetName: string, parameters: models.RecordSet, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecordSet>>;

    /**
     * Updates a record set within a Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} recordType The type of DNS record in this record set.
     * Possible values include: 'A', 'AAAA', 'CNAME', 'MX', 'PTR', 'SOA', 'SRV',
     * 'TXT'
     *
     * @param {string} relativeRecordSetName The name of the record set, relative
     * to the name of the zone.
     *
     * @param {object} parameters Parameters supplied to the Update operation.
     *
     * @param {string} [parameters.etag] The ETag of the record set.
     *
     * @param {object} [parameters.metadata] The metadata attached to the record
     * set.
     *
     * @param {number} [parameters.ttl] The TTL (time-to-live) of the records in
     * the record set.
     *
     * @param {array} [parameters.aRecords] The list of A records in the record
     * set.
     *
     * @param {array} [parameters.aaaaRecords] The list of AAAA records in the
     * record set.
     *
     * @param {object} [parameters.cnameRecord] The CNAME record in the record set.
     *
     * @param {string} [parameters.cnameRecord.cname] The canonical name for this
     * CNAME record.
     *
     * @param {array} [parameters.mxRecords] The list of MX records in the record
     * set.
     *
     * @param {array} [parameters.ptrRecords] The list of PTR records in the record
     * set.
     *
     * @param {object} [parameters.soaRecord] The SOA record in the record set.
     *
     * @param {string} [parameters.soaRecord.host] The domain name of the
     * authoritative name server for this SOA record.
     *
     * @param {string} [parameters.soaRecord.email] The email contact for this SOA
     * record.
     *
     * @param {number} [parameters.soaRecord.serialNumber] The serial number for
     * this SOA record.
     *
     * @param {number} [parameters.soaRecord.refreshTime] The refresh value for
     * this SOA record.
     *
     * @param {number} [parameters.soaRecord.retryTime] The retry time for this SOA
     * record.
     *
     * @param {number} [parameters.soaRecord.expireTime] The expire time for this
     * SOA record.
     *
     * @param {number} [parameters.soaRecord.minimumTtl] The minimum value for this
     * SOA record. By convention this is used to determine the negative caching
     * duration.
     *
     * @param {array} [parameters.srvRecords] The list of SRV records in the record
     * set.
     *
     * @param {array} [parameters.txtRecords] The list of TXT records in the record
     * set.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the record set. Omit this
     * value to always overwrite the current record set. Specify the last-seen ETag
     * value to prevent accidentally overwritting concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecordSet} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecordSet} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecordSet} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, privateZoneName: string, recordType: string, relativeRecordSetName: string, parameters: models.RecordSet, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.RecordSet>;
    update(resourceGroupName: string, privateZoneName: string, recordType: string, relativeRecordSetName: string, parameters: models.RecordSet, callback: ServiceCallback<models.RecordSet>): void;
    update(resourceGroupName: string, privateZoneName: string, recordType: string, relativeRecordSetName: string, parameters: models.RecordSet, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecordSet>): void;


    /**
     * Deletes a record set from a Private DNS zone. This operation cannot be
     * undone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} recordType The type of DNS record in this record set. Record
     * sets of type SOA cannot be deleted (they are deleted when the Private DNS
     * zone is deleted). Possible values include: 'A', 'AAAA', 'CNAME', 'MX',
     * 'PTR', 'SOA', 'SRV', 'TXT'
     *
     * @param {string} relativeRecordSetName The name of the record set, relative
     * to the name of the zone.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the record set. Omit this
     * value to always delete the current record set. Specify the last-seen ETag
     * value to prevent accidentally deleting any concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, recordType: string, relativeRecordSetName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a record set from a Private DNS zone. This operation cannot be
     * undone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} recordType The type of DNS record in this record set. Record
     * sets of type SOA cannot be deleted (they are deleted when the Private DNS
     * zone is deleted). Possible values include: 'A', 'AAAA', 'CNAME', 'MX',
     * 'PTR', 'SOA', 'SRV', 'TXT'
     *
     * @param {string} relativeRecordSetName The name of the record set, relative
     * to the name of the zone.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the record set. Omit this
     * value to always delete the current record set. Specify the last-seen ETag
     * value to prevent accidentally deleting any concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, privateZoneName: string, recordType: string, relativeRecordSetName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, privateZoneName: string, recordType: string, relativeRecordSetName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, privateZoneName: string, recordType: string, relativeRecordSetName: string, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Gets a record set.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} recordType The type of DNS record in this record set.
     * Possible values include: 'A', 'AAAA', 'CNAME', 'MX', 'PTR', 'SOA', 'SRV',
     * 'TXT'
     *
     * @param {string} relativeRecordSetName The name of the record set, relative
     * to the name of the zone.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecordSet>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, recordType: string, relativeRecordSetName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecordSet>>;

    /**
     * Gets a record set.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} recordType The type of DNS record in this record set.
     * Possible values include: 'A', 'AAAA', 'CNAME', 'MX', 'PTR', 'SOA', 'SRV',
     * 'TXT'
     *
     * @param {string} relativeRecordSetName The name of the record set, relative
     * to the name of the zone.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecordSet} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecordSet} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecordSet} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, privateZoneName: string, recordType: string, relativeRecordSetName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecordSet>;
    get(resourceGroupName: string, privateZoneName: string, recordType: string, relativeRecordSetName: string, callback: ServiceCallback<models.RecordSet>): void;
    get(resourceGroupName: string, privateZoneName: string, recordType: string, relativeRecordSetName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecordSet>): void;


    /**
     * Lists the record sets of a specified type in a Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} recordType The type of record sets to enumerate. Possible
     * values include: 'A', 'AAAA', 'CNAME', 'MX', 'PTR', 'SOA', 'SRV', 'TXT'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {number} [options.top] The maximum number of record sets to return.
     * If not specified, returns up to 100 record sets.
     *
     * @param {string} [options.recordsetnamesuffix] The suffix label of the record
     * set name to be used to filter the record set enumeration. If this parameter
     * is specified, the returned enumeration will only contain records that end
     * with ".<recordsetnamesuffix>".
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecordSetListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByTypeWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, recordType: string, options?: { top? : number, recordsetnamesuffix? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecordSetListResult>>;

    /**
     * Lists the record sets of a specified type in a Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {string} recordType The type of record sets to enumerate. Possible
     * values include: 'A', 'AAAA', 'CNAME', 'MX', 'PTR', 'SOA', 'SRV', 'TXT'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {number} [options.top] The maximum number of record sets to return.
     * If not specified, returns up to 100 record sets.
     *
     * @param {string} [options.recordsetnamesuffix] The suffix label of the record
     * set name to be used to filter the record set enumeration. If this parameter
     * is specified, the returned enumeration will only contain records that end
     * with ".<recordsetnamesuffix>".
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecordSetListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecordSetListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecordSetListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByType(resourceGroupName: string, privateZoneName: string, recordType: string, options?: { top? : number, recordsetnamesuffix? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.RecordSetListResult>;
    listByType(resourceGroupName: string, privateZoneName: string, recordType: string, callback: ServiceCallback<models.RecordSetListResult>): void;
    listByType(resourceGroupName: string, privateZoneName: string, recordType: string, options: { top? : number, recordsetnamesuffix? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecordSetListResult>): void;


    /**
     * Lists all record sets in a Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {number} [options.top] The maximum number of record sets to return.
     * If not specified, returns up to 100 record sets.
     *
     * @param {string} [options.recordsetnamesuffix] The suffix label of the record
     * set name to be used to filter the record set enumeration. If this parameter
     * is specified, the returned enumeration will only contain records that end
     * with ".<recordsetnamesuffix>".
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecordSetListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(resourceGroupName: string, privateZoneName: string, options?: { top? : number, recordsetnamesuffix? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecordSetListResult>>;

    /**
     * Lists all record sets in a Private DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     *
     * @param {string} privateZoneName The name of the Private DNS zone (without a
     * terminating dot).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {number} [options.top] The maximum number of record sets to return.
     * If not specified, returns up to 100 record sets.
     *
     * @param {string} [options.recordsetnamesuffix] The suffix label of the record
     * set name to be used to filter the record set enumeration. If this parameter
     * is specified, the returned enumeration will only contain records that end
     * with ".<recordsetnamesuffix>".
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecordSetListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecordSetListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecordSetListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(resourceGroupName: string, privateZoneName: string, options?: { top? : number, recordsetnamesuffix? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.RecordSetListResult>;
    list(resourceGroupName: string, privateZoneName: string, callback: ServiceCallback<models.RecordSetListResult>): void;
    list(resourceGroupName: string, privateZoneName: string, options: { top? : number, recordsetnamesuffix? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecordSetListResult>): void;


    /**
     * Lists the record sets of a specified type in a Private DNS zone.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecordSetListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByTypeNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecordSetListResult>>;

    /**
     * Lists the record sets of a specified type in a Private DNS zone.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecordSetListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecordSetListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecordSetListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByTypeNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecordSetListResult>;
    listByTypeNext(nextPageLink: string, callback: ServiceCallback<models.RecordSetListResult>): void;
    listByTypeNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecordSetListResult>): void;


    /**
     * Lists all record sets in a Private DNS zone.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<RecordSetListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.RecordSetListResult>>;

    /**
     * Lists all record sets in a Private DNS zone.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {RecordSetListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {RecordSetListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link RecordSetListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.RecordSetListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.RecordSetListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecordSetListResult>): void;
}

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the StreamAnalyticsManagementClient.
 */
export interface Operations {


    /**
     * Lists all of the available Stream Analytics related operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists all of the available Stream Analytics related operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    list(callback: ServiceCallback<models.OperationListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;


    /**
     * Lists all of the available Stream Analytics related operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists all of the available Stream Analytics related operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.OperationListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;
}

/**
 * @class
 * StreamingJobs
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the StreamAnalyticsManagementClient.
 */
export interface StreamingJobs {


    /**
     * Creates a streaming job or replaces an already existing streaming job.
     *
     * @param {object} streamingJob The definition of the streaming job that will
     * be used to create a new streaming job or replace the existing one.
     *
     * @param {object} [streamingJob.sku] Describes the SKU of the streaming job.
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} [streamingJob.sku.name] The name of the SKU. Required on PUT
     * (CreateOrReplace) requests. Possible values include: 'Standard'
     *
     * @param {string} [streamingJob.outputStartMode] This property should only be
     * utilized when it is desired that the job be started immediately upon
     * creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to
     * indicate whether the starting point of the output event stream should start
     * whenever the job is started, start at a custom user time stamp specified via
     * the outputStartTime property, or start from the last event output time.
     * Possible values include: 'JobStartTime', 'CustomTime', 'LastOutputEventTime'
     *
     * @param {date} [streamingJob.outputStartTime] Value is either an ISO-8601
     * formatted time stamp that indicates the starting point of the output event
     * stream, or null to indicate that the output event stream will start whenever
     * the streaming job is started. This property must have a value if
     * outputStartMode is set to CustomTime.
     *
     * @param {string} [streamingJob.eventsOutOfOrderPolicy] Indicates the policy
     * to apply to events that arrive out of order in the input event stream.
     * Possible values include: 'Adjust', 'Drop'
     *
     * @param {string} [streamingJob.outputErrorPolicy] Indicates the policy to
     * apply to events that arrive at the output and cannot be written to the
     * external storage due to being malformed (missing column values, column
     * values of wrong type or size). Possible values include: 'Stop', 'Drop'
     *
     * @param {number} [streamingJob.eventsOutOfOrderMaxDelayInSeconds] The maximum
     * tolerable delay in seconds where out-of-order events can be adjusted to be
     * back in order.
     *
     * @param {number} [streamingJob.eventsLateArrivalMaxDelayInSeconds] The
     * maximum tolerable delay in seconds where events arriving late could be
     * included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is
     * used to specify wait indefinitely. If the property is absent, it is
     * interpreted to have a value of -1.
     *
     * @param {string} [streamingJob.dataLocale] The data locale of the stream
     * analytics job. Value should be the name of a supported .NET Culture from the
     * set
     * https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx.
     * Defaults to 'en-US' if none specified.
     *
     * @param {string} [streamingJob.compatibilityLevel] Controls certain runtime
     * behaviors of the streaming job. Possible values include: '1.0'
     *
     * @param {array} [streamingJob.inputs] A list of one or more inputs to the
     * streaming job. The name property for each input is required when specifying
     * this property in a PUT request. This property cannot be modify via a PATCH
     * operation. You must use the PATCH API available for the individual input.
     *
     * @param {object} [streamingJob.transformation] Indicates the query and the
     * number of streaming units to use for the streaming job. The name property of
     * the transformation is required when specifying this property in a PUT
     * request. This property cannot be modify via a PATCH operation. You must use
     * the PATCH API available for the individual tranformation.
     *
     * @param {number} [streamingJob.transformation.streamingUnits] Specifies the
     * number of streaming units that the streaming job uses.
     *
     * @param {string} [streamingJob.transformation.query] Specifies the query that
     * will be run in the streaming job. You can learn more about the Stream
     * Analytics Query Language (SAQL) here:
     * https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT
     * (CreateOrReplace) requests.
     *
     * @param {string} [streamingJob.transformation.name] Resource name
     *
     * @param {array} [streamingJob.outputs] A list of one or more outputs for the
     * streaming job. The name property for each output is required when specifying
     * this property in a PUT request. This property cannot be modify via a PATCH
     * operation. You must use the PATCH API available for the individual output.
     *
     * @param {array} [streamingJob.functions] A list of one or more functions for
     * the streaming job. The name property for each function is required when
     * specifying this property in a PUT request. This property cannot be modify
     * via a PATCH operation. You must use the PATCH API available for the
     * individual transformation.
     *
     * @param {string} [streamingJob.location] Resource location. Required on PUT
     * (CreateOrReplace) requests.
     *
     * @param {object} [streamingJob.tags] Resource tags
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the streaming job. Omit this
     * value to always overwrite the current record set. Specify the last-seen ETag
     * value to prevent accidentally overwritting concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new streaming
     * job to be created, but to prevent updating an existing record set. Other
     * values will result in a 412 Pre-condition Failed response.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StreamingJob>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrReplaceWithHttpOperationResponse(streamingJob: models.StreamingJob, resourceGroupName: string, jobName: string, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StreamingJob>>;

    /**
     * Creates a streaming job or replaces an already existing streaming job.
     *
     * @param {object} streamingJob The definition of the streaming job that will
     * be used to create a new streaming job or replace the existing one.
     *
     * @param {object} [streamingJob.sku] Describes the SKU of the streaming job.
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} [streamingJob.sku.name] The name of the SKU. Required on PUT
     * (CreateOrReplace) requests. Possible values include: 'Standard'
     *
     * @param {string} [streamingJob.outputStartMode] This property should only be
     * utilized when it is desired that the job be started immediately upon
     * creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to
     * indicate whether the starting point of the output event stream should start
     * whenever the job is started, start at a custom user time stamp specified via
     * the outputStartTime property, or start from the last event output time.
     * Possible values include: 'JobStartTime', 'CustomTime', 'LastOutputEventTime'
     *
     * @param {date} [streamingJob.outputStartTime] Value is either an ISO-8601
     * formatted time stamp that indicates the starting point of the output event
     * stream, or null to indicate that the output event stream will start whenever
     * the streaming job is started. This property must have a value if
     * outputStartMode is set to CustomTime.
     *
     * @param {string} [streamingJob.eventsOutOfOrderPolicy] Indicates the policy
     * to apply to events that arrive out of order in the input event stream.
     * Possible values include: 'Adjust', 'Drop'
     *
     * @param {string} [streamingJob.outputErrorPolicy] Indicates the policy to
     * apply to events that arrive at the output and cannot be written to the
     * external storage due to being malformed (missing column values, column
     * values of wrong type or size). Possible values include: 'Stop', 'Drop'
     *
     * @param {number} [streamingJob.eventsOutOfOrderMaxDelayInSeconds] The maximum
     * tolerable delay in seconds where out-of-order events can be adjusted to be
     * back in order.
     *
     * @param {number} [streamingJob.eventsLateArrivalMaxDelayInSeconds] The
     * maximum tolerable delay in seconds where events arriving late could be
     * included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is
     * used to specify wait indefinitely. If the property is absent, it is
     * interpreted to have a value of -1.
     *
     * @param {string} [streamingJob.dataLocale] The data locale of the stream
     * analytics job. Value should be the name of a supported .NET Culture from the
     * set
     * https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx.
     * Defaults to 'en-US' if none specified.
     *
     * @param {string} [streamingJob.compatibilityLevel] Controls certain runtime
     * behaviors of the streaming job. Possible values include: '1.0'
     *
     * @param {array} [streamingJob.inputs] A list of one or more inputs to the
     * streaming job. The name property for each input is required when specifying
     * this property in a PUT request. This property cannot be modify via a PATCH
     * operation. You must use the PATCH API available for the individual input.
     *
     * @param {object} [streamingJob.transformation] Indicates the query and the
     * number of streaming units to use for the streaming job. The name property of
     * the transformation is required when specifying this property in a PUT
     * request. This property cannot be modify via a PATCH operation. You must use
     * the PATCH API available for the individual tranformation.
     *
     * @param {number} [streamingJob.transformation.streamingUnits] Specifies the
     * number of streaming units that the streaming job uses.
     *
     * @param {string} [streamingJob.transformation.query] Specifies the query that
     * will be run in the streaming job. You can learn more about the Stream
     * Analytics Query Language (SAQL) here:
     * https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT
     * (CreateOrReplace) requests.
     *
     * @param {string} [streamingJob.transformation.name] Resource name
     *
     * @param {array} [streamingJob.outputs] A list of one or more outputs for the
     * streaming job. The name property for each output is required when specifying
     * this property in a PUT request. This property cannot be modify via a PATCH
     * operation. You must use the PATCH API available for the individual output.
     *
     * @param {array} [streamingJob.functions] A list of one or more functions for
     * the streaming job. The name property for each function is required when
     * specifying this property in a PUT request. This property cannot be modify
     * via a PATCH operation. You must use the PATCH API available for the
     * individual transformation.
     *
     * @param {string} [streamingJob.location] Resource location. Required on PUT
     * (CreateOrReplace) requests.
     *
     * @param {object} [streamingJob.tags] Resource tags
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the streaming job. Omit this
     * value to always overwrite the current record set. Specify the last-seen ETag
     * value to prevent accidentally overwritting concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new streaming
     * job to be created, but to prevent updating an existing record set. Other
     * values will result in a 412 Pre-condition Failed response.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StreamingJob} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StreamingJob} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StreamingJob} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrReplace(streamingJob: models.StreamingJob, resourceGroupName: string, jobName: string, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.StreamingJob>;
    createOrReplace(streamingJob: models.StreamingJob, resourceGroupName: string, jobName: string, callback: ServiceCallback<models.StreamingJob>): void;
    createOrReplace(streamingJob: models.StreamingJob, resourceGroupName: string, jobName: string, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StreamingJob>): void;


    /**
     * Updates an existing streaming job. This can be used to partially update (ie.
     * update one or two properties) a streaming job without affecting the rest the
     * job definition.
     *
     * @param {object} streamingJob A streaming job object. The properties
     * specified here will overwrite the corresponding properties in the existing
     * streaming job (ie. Those properties will be updated). Any properties that
     * are set to null here will mean that the corresponding property in the
     * existing input will remain the same and not change as a result of this PATCH
     * operation.
     *
     * @param {object} [streamingJob.sku] Describes the SKU of the streaming job.
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} [streamingJob.sku.name] The name of the SKU. Required on PUT
     * (CreateOrReplace) requests. Possible values include: 'Standard'
     *
     * @param {string} [streamingJob.outputStartMode] This property should only be
     * utilized when it is desired that the job be started immediately upon
     * creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to
     * indicate whether the starting point of the output event stream should start
     * whenever the job is started, start at a custom user time stamp specified via
     * the outputStartTime property, or start from the last event output time.
     * Possible values include: 'JobStartTime', 'CustomTime', 'LastOutputEventTime'
     *
     * @param {date} [streamingJob.outputStartTime] Value is either an ISO-8601
     * formatted time stamp that indicates the starting point of the output event
     * stream, or null to indicate that the output event stream will start whenever
     * the streaming job is started. This property must have a value if
     * outputStartMode is set to CustomTime.
     *
     * @param {string} [streamingJob.eventsOutOfOrderPolicy] Indicates the policy
     * to apply to events that arrive out of order in the input event stream.
     * Possible values include: 'Adjust', 'Drop'
     *
     * @param {string} [streamingJob.outputErrorPolicy] Indicates the policy to
     * apply to events that arrive at the output and cannot be written to the
     * external storage due to being malformed (missing column values, column
     * values of wrong type or size). Possible values include: 'Stop', 'Drop'
     *
     * @param {number} [streamingJob.eventsOutOfOrderMaxDelayInSeconds] The maximum
     * tolerable delay in seconds where out-of-order events can be adjusted to be
     * back in order.
     *
     * @param {number} [streamingJob.eventsLateArrivalMaxDelayInSeconds] The
     * maximum tolerable delay in seconds where events arriving late could be
     * included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is
     * used to specify wait indefinitely. If the property is absent, it is
     * interpreted to have a value of -1.
     *
     * @param {string} [streamingJob.dataLocale] The data locale of the stream
     * analytics job. Value should be the name of a supported .NET Culture from the
     * set
     * https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx.
     * Defaults to 'en-US' if none specified.
     *
     * @param {string} [streamingJob.compatibilityLevel] Controls certain runtime
     * behaviors of the streaming job. Possible values include: '1.0'
     *
     * @param {array} [streamingJob.inputs] A list of one or more inputs to the
     * streaming job. The name property for each input is required when specifying
     * this property in a PUT request. This property cannot be modify via a PATCH
     * operation. You must use the PATCH API available for the individual input.
     *
     * @param {object} [streamingJob.transformation] Indicates the query and the
     * number of streaming units to use for the streaming job. The name property of
     * the transformation is required when specifying this property in a PUT
     * request. This property cannot be modify via a PATCH operation. You must use
     * the PATCH API available for the individual tranformation.
     *
     * @param {number} [streamingJob.transformation.streamingUnits] Specifies the
     * number of streaming units that the streaming job uses.
     *
     * @param {string} [streamingJob.transformation.query] Specifies the query that
     * will be run in the streaming job. You can learn more about the Stream
     * Analytics Query Language (SAQL) here:
     * https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT
     * (CreateOrReplace) requests.
     *
     * @param {string} [streamingJob.transformation.name] Resource name
     *
     * @param {array} [streamingJob.outputs] A list of one or more outputs for the
     * streaming job. The name property for each output is required when specifying
     * this property in a PUT request. This property cannot be modify via a PATCH
     * operation. You must use the PATCH API available for the individual output.
     *
     * @param {array} [streamingJob.functions] A list of one or more functions for
     * the streaming job. The name property for each function is required when
     * specifying this property in a PUT request. This property cannot be modify
     * via a PATCH operation. You must use the PATCH API available for the
     * individual transformation.
     *
     * @param {string} [streamingJob.location] Resource location. Required on PUT
     * (CreateOrReplace) requests.
     *
     * @param {object} [streamingJob.tags] Resource tags
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the streaming job. Omit this
     * value to always overwrite the current record set. Specify the last-seen ETag
     * value to prevent accidentally overwritting concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StreamingJob>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(streamingJob: models.StreamingJob, resourceGroupName: string, jobName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StreamingJob>>;

    /**
     * Updates an existing streaming job. This can be used to partially update (ie.
     * update one or two properties) a streaming job without affecting the rest the
     * job definition.
     *
     * @param {object} streamingJob A streaming job object. The properties
     * specified here will overwrite the corresponding properties in the existing
     * streaming job (ie. Those properties will be updated). Any properties that
     * are set to null here will mean that the corresponding property in the
     * existing input will remain the same and not change as a result of this PATCH
     * operation.
     *
     * @param {object} [streamingJob.sku] Describes the SKU of the streaming job.
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} [streamingJob.sku.name] The name of the SKU. Required on PUT
     * (CreateOrReplace) requests. Possible values include: 'Standard'
     *
     * @param {string} [streamingJob.outputStartMode] This property should only be
     * utilized when it is desired that the job be started immediately upon
     * creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to
     * indicate whether the starting point of the output event stream should start
     * whenever the job is started, start at a custom user time stamp specified via
     * the outputStartTime property, or start from the last event output time.
     * Possible values include: 'JobStartTime', 'CustomTime', 'LastOutputEventTime'
     *
     * @param {date} [streamingJob.outputStartTime] Value is either an ISO-8601
     * formatted time stamp that indicates the starting point of the output event
     * stream, or null to indicate that the output event stream will start whenever
     * the streaming job is started. This property must have a value if
     * outputStartMode is set to CustomTime.
     *
     * @param {string} [streamingJob.eventsOutOfOrderPolicy] Indicates the policy
     * to apply to events that arrive out of order in the input event stream.
     * Possible values include: 'Adjust', 'Drop'
     *
     * @param {string} [streamingJob.outputErrorPolicy] Indicates the policy to
     * apply to events that arrive at the output and cannot be written to the
     * external storage due to being malformed (missing column values, column
     * values of wrong type or size). Possible values include: 'Stop', 'Drop'
     *
     * @param {number} [streamingJob.eventsOutOfOrderMaxDelayInSeconds] The maximum
     * tolerable delay in seconds where out-of-order events can be adjusted to be
     * back in order.
     *
     * @param {number} [streamingJob.eventsLateArrivalMaxDelayInSeconds] The
     * maximum tolerable delay in seconds where events arriving late could be
     * included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is
     * used to specify wait indefinitely. If the property is absent, it is
     * interpreted to have a value of -1.
     *
     * @param {string} [streamingJob.dataLocale] The data locale of the stream
     * analytics job. Value should be the name of a supported .NET Culture from the
     * set
     * https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx.
     * Defaults to 'en-US' if none specified.
     *
     * @param {string} [streamingJob.compatibilityLevel] Controls certain runtime
     * behaviors of the streaming job. Possible values include: '1.0'
     *
     * @param {array} [streamingJob.inputs] A list of one or more inputs to the
     * streaming job. The name property for each input is required when specifying
     * this property in a PUT request. This property cannot be modify via a PATCH
     * operation. You must use the PATCH API available for the individual input.
     *
     * @param {object} [streamingJob.transformation] Indicates the query and the
     * number of streaming units to use for the streaming job. The name property of
     * the transformation is required when specifying this property in a PUT
     * request. This property cannot be modify via a PATCH operation. You must use
     * the PATCH API available for the individual tranformation.
     *
     * @param {number} [streamingJob.transformation.streamingUnits] Specifies the
     * number of streaming units that the streaming job uses.
     *
     * @param {string} [streamingJob.transformation.query] Specifies the query that
     * will be run in the streaming job. You can learn more about the Stream
     * Analytics Query Language (SAQL) here:
     * https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT
     * (CreateOrReplace) requests.
     *
     * @param {string} [streamingJob.transformation.name] Resource name
     *
     * @param {array} [streamingJob.outputs] A list of one or more outputs for the
     * streaming job. The name property for each output is required when specifying
     * this property in a PUT request. This property cannot be modify via a PATCH
     * operation. You must use the PATCH API available for the individual output.
     *
     * @param {array} [streamingJob.functions] A list of one or more functions for
     * the streaming job. The name property for each function is required when
     * specifying this property in a PUT request. This property cannot be modify
     * via a PATCH operation. You must use the PATCH API available for the
     * individual transformation.
     *
     * @param {string} [streamingJob.location] Resource location. Required on PUT
     * (CreateOrReplace) requests.
     *
     * @param {object} [streamingJob.tags] Resource tags
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the streaming job. Omit this
     * value to always overwrite the current record set. Specify the last-seen ETag
     * value to prevent accidentally overwritting concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StreamingJob} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StreamingJob} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StreamingJob} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(streamingJob: models.StreamingJob, resourceGroupName: string, jobName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.StreamingJob>;
    update(streamingJob: models.StreamingJob, resourceGroupName: string, jobName: string, callback: ServiceCallback<models.StreamingJob>): void;
    update(streamingJob: models.StreamingJob, resourceGroupName: string, jobName: string, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StreamingJob>): void;


    /**
     * Deletes a streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, jobName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, jobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Gets details about the specified streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.expand] The $expand OData query parameter. This is
     * a comma-separated list of additional streaming job properties to include in
     * the response, beyond the default set returned when this parameter is absent.
     * The default set is all streaming job properties other than 'inputs',
     * 'transformation', 'outputs', and 'functions'.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StreamingJob>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, jobName: string, options?: { expand? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StreamingJob>>;

    /**
     * Gets details about the specified streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.expand] The $expand OData query parameter. This is
     * a comma-separated list of additional streaming job properties to include in
     * the response, beyond the default set returned when this parameter is absent.
     * The default set is all streaming job properties other than 'inputs',
     * 'transformation', 'outputs', and 'functions'.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StreamingJob} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StreamingJob} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StreamingJob} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, jobName: string, options?: { expand? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.StreamingJob>;
    get(resourceGroupName: string, jobName: string, callback: ServiceCallback<models.StreamingJob>): void;
    get(resourceGroupName: string, jobName: string, options: { expand? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StreamingJob>): void;


    /**
     * Lists all of the streaming jobs in the specified resource group.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.expand] The $expand OData query parameter. This is
     * a comma-separated list of additional streaming job properties to include in
     * the response, beyond the default set returned when this parameter is absent.
     * The default set is all streaming job properties other than 'inputs',
     * 'transformation', 'outputs', and 'functions'.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StreamingJobListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { expand? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StreamingJobListResult>>;

    /**
     * Lists all of the streaming jobs in the specified resource group.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.expand] The $expand OData query parameter. This is
     * a comma-separated list of additional streaming job properties to include in
     * the response, beyond the default set returned when this parameter is absent.
     * The default set is all streaming job properties other than 'inputs',
     * 'transformation', 'outputs', and 'functions'.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StreamingJobListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StreamingJobListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StreamingJobListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { expand? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.StreamingJobListResult>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.StreamingJobListResult>): void;
    listByResourceGroup(resourceGroupName: string, options: { expand? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StreamingJobListResult>): void;


    /**
     * Lists all of the streaming jobs in the given subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.expand] The $expand OData query parameter. This is
     * a comma-separated list of additional streaming job properties to include in
     * the response, beyond the default set returned when this parameter is absent.
     * The default set is all streaming job properties other than 'inputs',
     * 'transformation', 'outputs', and 'functions'.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StreamingJobListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { expand? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StreamingJobListResult>>;

    /**
     * Lists all of the streaming jobs in the given subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.expand] The $expand OData query parameter. This is
     * a comma-separated list of additional streaming job properties to include in
     * the response, beyond the default set returned when this parameter is absent.
     * The default set is all streaming job properties other than 'inputs',
     * 'transformation', 'outputs', and 'functions'.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StreamingJobListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StreamingJobListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StreamingJobListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { expand? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.StreamingJobListResult>;
    list(callback: ServiceCallback<models.StreamingJobListResult>): void;
    list(options: { expand? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StreamingJobListResult>): void;


    /**
     * Starts a streaming job. Once a job is started it will start processing input
     * events and produce output.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.startJobParameters] Parameters applicable to a
     * start streaming job operation.
     *
     * @param {string} [options.startJobParameters.outputStartMode] Value may be
     * JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the
     * starting point of the output event stream should start whenever the job is
     * started, start at a custom user time stamp specified via the outputStartTime
     * property, or start from the last event output time. Possible values include:
     * 'JobStartTime', 'CustomTime', 'LastOutputEventTime'
     *
     * @param {date} [options.startJobParameters.outputStartTime] Value is either
     * an ISO-8601 formatted time stamp that indicates the starting point of the
     * output event stream, or null to indicate that the output event stream will
     * start whenever the streaming job is started. This property must have a value
     * if outputStartMode is set to CustomTime.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    startWithHttpOperationResponse(resourceGroupName: string, jobName: string, options?: { startJobParameters? : models.StartStreamingJobParameters, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Starts a streaming job. Once a job is started it will start processing input
     * events and produce output.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.startJobParameters] Parameters applicable to a
     * start streaming job operation.
     *
     * @param {string} [options.startJobParameters.outputStartMode] Value may be
     * JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the
     * starting point of the output event stream should start whenever the job is
     * started, start at a custom user time stamp specified via the outputStartTime
     * property, or start from the last event output time. Possible values include:
     * 'JobStartTime', 'CustomTime', 'LastOutputEventTime'
     *
     * @param {date} [options.startJobParameters.outputStartTime] Value is either
     * an ISO-8601 formatted time stamp that indicates the starting point of the
     * output event stream, or null to indicate that the output event stream will
     * start whenever the streaming job is started. This property must have a value
     * if outputStartMode is set to CustomTime.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    start(resourceGroupName: string, jobName: string, options?: { startJobParameters? : models.StartStreamingJobParameters, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    start(resourceGroupName: string, jobName: string, callback: ServiceCallback<void>): void;
    start(resourceGroupName: string, jobName: string, options: { startJobParameters? : models.StartStreamingJobParameters, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Stops a running streaming job. This will cause a running streaming job to
     * stop processing input events and producing output.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    stopWithHttpOperationResponse(resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Stops a running streaming job. This will cause a running streaming job to
     * stop processing input events and producing output.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    stop(resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    stop(resourceGroupName: string, jobName: string, callback: ServiceCallback<void>): void;
    stop(resourceGroupName: string, jobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Creates a streaming job or replaces an already existing streaming job.
     *
     * @param {object} streamingJob The definition of the streaming job that will
     * be used to create a new streaming job or replace the existing one.
     *
     * @param {object} [streamingJob.sku] Describes the SKU of the streaming job.
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} [streamingJob.sku.name] The name of the SKU. Required on PUT
     * (CreateOrReplace) requests. Possible values include: 'Standard'
     *
     * @param {string} [streamingJob.outputStartMode] This property should only be
     * utilized when it is desired that the job be started immediately upon
     * creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to
     * indicate whether the starting point of the output event stream should start
     * whenever the job is started, start at a custom user time stamp specified via
     * the outputStartTime property, or start from the last event output time.
     * Possible values include: 'JobStartTime', 'CustomTime', 'LastOutputEventTime'
     *
     * @param {date} [streamingJob.outputStartTime] Value is either an ISO-8601
     * formatted time stamp that indicates the starting point of the output event
     * stream, or null to indicate that the output event stream will start whenever
     * the streaming job is started. This property must have a value if
     * outputStartMode is set to CustomTime.
     *
     * @param {string} [streamingJob.eventsOutOfOrderPolicy] Indicates the policy
     * to apply to events that arrive out of order in the input event stream.
     * Possible values include: 'Adjust', 'Drop'
     *
     * @param {string} [streamingJob.outputErrorPolicy] Indicates the policy to
     * apply to events that arrive at the output and cannot be written to the
     * external storage due to being malformed (missing column values, column
     * values of wrong type or size). Possible values include: 'Stop', 'Drop'
     *
     * @param {number} [streamingJob.eventsOutOfOrderMaxDelayInSeconds] The maximum
     * tolerable delay in seconds where out-of-order events can be adjusted to be
     * back in order.
     *
     * @param {number} [streamingJob.eventsLateArrivalMaxDelayInSeconds] The
     * maximum tolerable delay in seconds where events arriving late could be
     * included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is
     * used to specify wait indefinitely. If the property is absent, it is
     * interpreted to have a value of -1.
     *
     * @param {string} [streamingJob.dataLocale] The data locale of the stream
     * analytics job. Value should be the name of a supported .NET Culture from the
     * set
     * https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx.
     * Defaults to 'en-US' if none specified.
     *
     * @param {string} [streamingJob.compatibilityLevel] Controls certain runtime
     * behaviors of the streaming job. Possible values include: '1.0'
     *
     * @param {array} [streamingJob.inputs] A list of one or more inputs to the
     * streaming job. The name property for each input is required when specifying
     * this property in a PUT request. This property cannot be modify via a PATCH
     * operation. You must use the PATCH API available for the individual input.
     *
     * @param {object} [streamingJob.transformation] Indicates the query and the
     * number of streaming units to use for the streaming job. The name property of
     * the transformation is required when specifying this property in a PUT
     * request. This property cannot be modify via a PATCH operation. You must use
     * the PATCH API available for the individual tranformation.
     *
     * @param {number} [streamingJob.transformation.streamingUnits] Specifies the
     * number of streaming units that the streaming job uses.
     *
     * @param {string} [streamingJob.transformation.query] Specifies the query that
     * will be run in the streaming job. You can learn more about the Stream
     * Analytics Query Language (SAQL) here:
     * https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT
     * (CreateOrReplace) requests.
     *
     * @param {string} [streamingJob.transformation.name] Resource name
     *
     * @param {array} [streamingJob.outputs] A list of one or more outputs for the
     * streaming job. The name property for each output is required when specifying
     * this property in a PUT request. This property cannot be modify via a PATCH
     * operation. You must use the PATCH API available for the individual output.
     *
     * @param {array} [streamingJob.functions] A list of one or more functions for
     * the streaming job. The name property for each function is required when
     * specifying this property in a PUT request. This property cannot be modify
     * via a PATCH operation. You must use the PATCH API available for the
     * individual transformation.
     *
     * @param {string} [streamingJob.location] Resource location. Required on PUT
     * (CreateOrReplace) requests.
     *
     * @param {object} [streamingJob.tags] Resource tags
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the streaming job. Omit this
     * value to always overwrite the current record set. Specify the last-seen ETag
     * value to prevent accidentally overwritting concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new streaming
     * job to be created, but to prevent updating an existing record set. Other
     * values will result in a 412 Pre-condition Failed response.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StreamingJob>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrReplaceWithHttpOperationResponse(streamingJob: models.StreamingJob, resourceGroupName: string, jobName: string, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StreamingJob>>;

    /**
     * Creates a streaming job or replaces an already existing streaming job.
     *
     * @param {object} streamingJob The definition of the streaming job that will
     * be used to create a new streaming job or replace the existing one.
     *
     * @param {object} [streamingJob.sku] Describes the SKU of the streaming job.
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} [streamingJob.sku.name] The name of the SKU. Required on PUT
     * (CreateOrReplace) requests. Possible values include: 'Standard'
     *
     * @param {string} [streamingJob.outputStartMode] This property should only be
     * utilized when it is desired that the job be started immediately upon
     * creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to
     * indicate whether the starting point of the output event stream should start
     * whenever the job is started, start at a custom user time stamp specified via
     * the outputStartTime property, or start from the last event output time.
     * Possible values include: 'JobStartTime', 'CustomTime', 'LastOutputEventTime'
     *
     * @param {date} [streamingJob.outputStartTime] Value is either an ISO-8601
     * formatted time stamp that indicates the starting point of the output event
     * stream, or null to indicate that the output event stream will start whenever
     * the streaming job is started. This property must have a value if
     * outputStartMode is set to CustomTime.
     *
     * @param {string} [streamingJob.eventsOutOfOrderPolicy] Indicates the policy
     * to apply to events that arrive out of order in the input event stream.
     * Possible values include: 'Adjust', 'Drop'
     *
     * @param {string} [streamingJob.outputErrorPolicy] Indicates the policy to
     * apply to events that arrive at the output and cannot be written to the
     * external storage due to being malformed (missing column values, column
     * values of wrong type or size). Possible values include: 'Stop', 'Drop'
     *
     * @param {number} [streamingJob.eventsOutOfOrderMaxDelayInSeconds] The maximum
     * tolerable delay in seconds where out-of-order events can be adjusted to be
     * back in order.
     *
     * @param {number} [streamingJob.eventsLateArrivalMaxDelayInSeconds] The
     * maximum tolerable delay in seconds where events arriving late could be
     * included.  Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is
     * used to specify wait indefinitely. If the property is absent, it is
     * interpreted to have a value of -1.
     *
     * @param {string} [streamingJob.dataLocale] The data locale of the stream
     * analytics job. Value should be the name of a supported .NET Culture from the
     * set
     * https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx.
     * Defaults to 'en-US' if none specified.
     *
     * @param {string} [streamingJob.compatibilityLevel] Controls certain runtime
     * behaviors of the streaming job. Possible values include: '1.0'
     *
     * @param {array} [streamingJob.inputs] A list of one or more inputs to the
     * streaming job. The name property for each input is required when specifying
     * this property in a PUT request. This property cannot be modify via a PATCH
     * operation. You must use the PATCH API available for the individual input.
     *
     * @param {object} [streamingJob.transformation] Indicates the query and the
     * number of streaming units to use for the streaming job. The name property of
     * the transformation is required when specifying this property in a PUT
     * request. This property cannot be modify via a PATCH operation. You must use
     * the PATCH API available for the individual tranformation.
     *
     * @param {number} [streamingJob.transformation.streamingUnits] Specifies the
     * number of streaming units that the streaming job uses.
     *
     * @param {string} [streamingJob.transformation.query] Specifies the query that
     * will be run in the streaming job. You can learn more about the Stream
     * Analytics Query Language (SAQL) here:
     * https://msdn.microsoft.com/library/azure/dn834998 . Required on PUT
     * (CreateOrReplace) requests.
     *
     * @param {string} [streamingJob.transformation.name] Resource name
     *
     * @param {array} [streamingJob.outputs] A list of one or more outputs for the
     * streaming job. The name property for each output is required when specifying
     * this property in a PUT request. This property cannot be modify via a PATCH
     * operation. You must use the PATCH API available for the individual output.
     *
     * @param {array} [streamingJob.functions] A list of one or more functions for
     * the streaming job. The name property for each function is required when
     * specifying this property in a PUT request. This property cannot be modify
     * via a PATCH operation. You must use the PATCH API available for the
     * individual transformation.
     *
     * @param {string} [streamingJob.location] Resource location. Required on PUT
     * (CreateOrReplace) requests.
     *
     * @param {object} [streamingJob.tags] Resource tags
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the streaming job. Omit this
     * value to always overwrite the current record set. Specify the last-seen ETag
     * value to prevent accidentally overwritting concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new streaming
     * job to be created, but to prevent updating an existing record set. Other
     * values will result in a 412 Pre-condition Failed response.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StreamingJob} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StreamingJob} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StreamingJob} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrReplace(streamingJob: models.StreamingJob, resourceGroupName: string, jobName: string, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.StreamingJob>;
    beginCreateOrReplace(streamingJob: models.StreamingJob, resourceGroupName: string, jobName: string, callback: ServiceCallback<models.StreamingJob>): void;
    beginCreateOrReplace(streamingJob: models.StreamingJob, resourceGroupName: string, jobName: string, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StreamingJob>): void;


    /**
     * Deletes a streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, jobName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, jobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Starts a streaming job. Once a job is started it will start processing input
     * events and produce output.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.startJobParameters] Parameters applicable to a
     * start streaming job operation.
     *
     * @param {string} [options.startJobParameters.outputStartMode] Value may be
     * JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the
     * starting point of the output event stream should start whenever the job is
     * started, start at a custom user time stamp specified via the outputStartTime
     * property, or start from the last event output time. Possible values include:
     * 'JobStartTime', 'CustomTime', 'LastOutputEventTime'
     *
     * @param {date} [options.startJobParameters.outputStartTime] Value is either
     * an ISO-8601 formatted time stamp that indicates the starting point of the
     * output event stream, or null to indicate that the output event stream will
     * start whenever the streaming job is started. This property must have a value
     * if outputStartMode is set to CustomTime.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginStartWithHttpOperationResponse(resourceGroupName: string, jobName: string, options?: { startJobParameters? : models.StartStreamingJobParameters, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Starts a streaming job. Once a job is started it will start processing input
     * events and produce output.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.startJobParameters] Parameters applicable to a
     * start streaming job operation.
     *
     * @param {string} [options.startJobParameters.outputStartMode] Value may be
     * JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the
     * starting point of the output event stream should start whenever the job is
     * started, start at a custom user time stamp specified via the outputStartTime
     * property, or start from the last event output time. Possible values include:
     * 'JobStartTime', 'CustomTime', 'LastOutputEventTime'
     *
     * @param {date} [options.startJobParameters.outputStartTime] Value is either
     * an ISO-8601 formatted time stamp that indicates the starting point of the
     * output event stream, or null to indicate that the output event stream will
     * start whenever the streaming job is started. This property must have a value
     * if outputStartMode is set to CustomTime.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginStart(resourceGroupName: string, jobName: string, options?: { startJobParameters? : models.StartStreamingJobParameters, customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginStart(resourceGroupName: string, jobName: string, callback: ServiceCallback<void>): void;
    beginStart(resourceGroupName: string, jobName: string, options: { startJobParameters? : models.StartStreamingJobParameters, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Stops a running streaming job. This will cause a running streaming job to
     * stop processing input events and producing output.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginStopWithHttpOperationResponse(resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Stops a running streaming job. This will cause a running streaming job to
     * stop processing input events and producing output.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginStop(resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginStop(resourceGroupName: string, jobName: string, callback: ServiceCallback<void>): void;
    beginStop(resourceGroupName: string, jobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Lists all of the streaming jobs in the specified resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StreamingJobListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StreamingJobListResult>>;

    /**
     * Lists all of the streaming jobs in the specified resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StreamingJobListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StreamingJobListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StreamingJobListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StreamingJobListResult>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.StreamingJobListResult>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StreamingJobListResult>): void;


    /**
     * Lists all of the streaming jobs in the given subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<StreamingJobListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.StreamingJobListResult>>;

    /**
     * Lists all of the streaming jobs in the given subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {StreamingJobListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {StreamingJobListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link StreamingJobListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.StreamingJobListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.StreamingJobListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.StreamingJobListResult>): void;
}

/**
 * @class
 * Inputs
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the StreamAnalyticsManagementClient.
 */
export interface Inputs {


    /**
     * Creates an input or replaces an already existing input under an existing
     * streaming job.
     *
     * @param {object} input The definition of the input that will be used to
     * create a new input or replace the existing one under the streaming job.
     *
     * @param {object} [input.properties] The properties that are associated with
     * an input. Required on PUT (CreateOrReplace) requests.
     *
     * @param {object} [input.properties.serialization] Describes how data from an
     * input is serialized or how data is serialized when written to an output.
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} input.properties.serialization.type Polymorphic
     * Discriminator
     *
     * @param {string} input.properties.type Polymorphic Discriminator
     *
     * @param {string} [input.name] Resource name
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} inputName The name of the input.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the input. Omit this value to
     * always overwrite the current input. Specify the last-seen ETag value to
     * prevent accidentally overwritting concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new input to be
     * created, but to prevent updating an existing input. Other values will result
     * in a 412 Pre-condition Failed response.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Input>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrReplaceWithHttpOperationResponse(input: models.Input, resourceGroupName: string, jobName: string, inputName: string, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Input>>;

    /**
     * Creates an input or replaces an already existing input under an existing
     * streaming job.
     *
     * @param {object} input The definition of the input that will be used to
     * create a new input or replace the existing one under the streaming job.
     *
     * @param {object} [input.properties] The properties that are associated with
     * an input. Required on PUT (CreateOrReplace) requests.
     *
     * @param {object} [input.properties.serialization] Describes how data from an
     * input is serialized or how data is serialized when written to an output.
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} input.properties.serialization.type Polymorphic
     * Discriminator
     *
     * @param {string} input.properties.type Polymorphic Discriminator
     *
     * @param {string} [input.name] Resource name
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} inputName The name of the input.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the input. Omit this value to
     * always overwrite the current input. Specify the last-seen ETag value to
     * prevent accidentally overwritting concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new input to be
     * created, but to prevent updating an existing input. Other values will result
     * in a 412 Pre-condition Failed response.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Input} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Input} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Input} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrReplace(input: models.Input, resourceGroupName: string, jobName: string, inputName: string, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.Input>;
    createOrReplace(input: models.Input, resourceGroupName: string, jobName: string, inputName: string, callback: ServiceCallback<models.Input>): void;
    createOrReplace(input: models.Input, resourceGroupName: string, jobName: string, inputName: string, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Input>): void;


    /**
     * Updates an existing input under an existing streaming job. This can be used
     * to partially update (ie. update one or two properties) an input without
     * affecting the rest the job or input definition.
     *
     * @param {object} input An Input object. The properties specified here will
     * overwrite the corresponding properties in the existing input (ie. Those
     * properties will be updated). Any properties that are set to null here will
     * mean that the corresponding property in the existing input will remain the
     * same and not change as a result of this PATCH operation.
     *
     * @param {object} [input.properties] The properties that are associated with
     * an input. Required on PUT (CreateOrReplace) requests.
     *
     * @param {object} [input.properties.serialization] Describes how data from an
     * input is serialized or how data is serialized when written to an output.
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} input.properties.serialization.type Polymorphic
     * Discriminator
     *
     * @param {string} input.properties.type Polymorphic Discriminator
     *
     * @param {string} [input.name] Resource name
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} inputName The name of the input.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the input. Omit this value to
     * always overwrite the current input. Specify the last-seen ETag value to
     * prevent accidentally overwritting concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Input>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(input: models.Input, resourceGroupName: string, jobName: string, inputName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Input>>;

    /**
     * Updates an existing input under an existing streaming job. This can be used
     * to partially update (ie. update one or two properties) an input without
     * affecting the rest the job or input definition.
     *
     * @param {object} input An Input object. The properties specified here will
     * overwrite the corresponding properties in the existing input (ie. Those
     * properties will be updated). Any properties that are set to null here will
     * mean that the corresponding property in the existing input will remain the
     * same and not change as a result of this PATCH operation.
     *
     * @param {object} [input.properties] The properties that are associated with
     * an input. Required on PUT (CreateOrReplace) requests.
     *
     * @param {object} [input.properties.serialization] Describes how data from an
     * input is serialized or how data is serialized when written to an output.
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} input.properties.serialization.type Polymorphic
     * Discriminator
     *
     * @param {string} input.properties.type Polymorphic Discriminator
     *
     * @param {string} [input.name] Resource name
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} inputName The name of the input.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the input. Omit this value to
     * always overwrite the current input. Specify the last-seen ETag value to
     * prevent accidentally overwritting concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Input} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Input} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Input} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(input: models.Input, resourceGroupName: string, jobName: string, inputName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.Input>;
    update(input: models.Input, resourceGroupName: string, jobName: string, inputName: string, callback: ServiceCallback<models.Input>): void;
    update(input: models.Input, resourceGroupName: string, jobName: string, inputName: string, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Input>): void;


    /**
     * Deletes an input from the streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} inputName The name of the input.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, jobName: string, inputName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes an input from the streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} inputName The name of the input.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, jobName: string, inputName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, jobName: string, inputName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, jobName: string, inputName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Gets details about the specified input.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} inputName The name of the input.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Input>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, jobName: string, inputName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Input>>;

    /**
     * Gets details about the specified input.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} inputName The name of the input.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Input} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Input} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Input} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, jobName: string, inputName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Input>;
    get(resourceGroupName: string, jobName: string, inputName: string, callback: ServiceCallback<models.Input>): void;
    get(resourceGroupName: string, jobName: string, inputName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Input>): void;


    /**
     * Lists all of the inputs under the specified streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.select] The $select OData query parameter. This is
     * a comma-separated list of structural properties to include in the response,
     * or “*” to include all properties. By default, all properties are returned
     * except diagnostics. Currently only accepts '*' as a valid value.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<InputListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByStreamingJobWithHttpOperationResponse(resourceGroupName: string, jobName: string, options?: { select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.InputListResult>>;

    /**
     * Lists all of the inputs under the specified streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.select] The $select OData query parameter. This is
     * a comma-separated list of structural properties to include in the response,
     * or “*” to include all properties. By default, all properties are returned
     * except diagnostics. Currently only accepts '*' as a valid value.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {InputListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {InputListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link InputListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByStreamingJob(resourceGroupName: string, jobName: string, options?: { select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.InputListResult>;
    listByStreamingJob(resourceGroupName: string, jobName: string, callback: ServiceCallback<models.InputListResult>): void;
    listByStreamingJob(resourceGroupName: string, jobName: string, options: { select? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.InputListResult>): void;


    /**
     * Tests whether an input’s datasource is reachable and usable by the Azure
     * Stream Analytics service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} inputName The name of the input.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.input] If the input specified does not already
     * exist, this parameter must contain the full input definition intended to be
     * tested. If the input specified already exists, this parameter can be left
     * null to test the existing input as is or if specified, the properties
     * specified will overwrite the corresponding properties in the existing input
     * (exactly like a PATCH operation) and the resulting input will be tested.
     *
     * @param {object} [options.input.properties] The properties that are
     * associated with an input. Required on PUT (CreateOrReplace) requests.
     *
     * @param {object} [options.input.properties.serialization] Describes how data
     * from an input is serialized or how data is serialized when written to an
     * output. Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} options.input.properties.serialization.type Polymorphic
     * Discriminator
     *
     * @param {string} options.input.properties.type Polymorphic Discriminator
     *
     * @param {string} [options.input.name] Resource name
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ResourceTestStatus>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    testWithHttpOperationResponse(resourceGroupName: string, jobName: string, inputName: string, options?: { input? : models.Input, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ResourceTestStatus>>;

    /**
     * Tests whether an input’s datasource is reachable and usable by the Azure
     * Stream Analytics service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} inputName The name of the input.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.input] If the input specified does not already
     * exist, this parameter must contain the full input definition intended to be
     * tested. If the input specified already exists, this parameter can be left
     * null to test the existing input as is or if specified, the properties
     * specified will overwrite the corresponding properties in the existing input
     * (exactly like a PATCH operation) and the resulting input will be tested.
     *
     * @param {object} [options.input.properties] The properties that are
     * associated with an input. Required on PUT (CreateOrReplace) requests.
     *
     * @param {object} [options.input.properties.serialization] Describes how data
     * from an input is serialized or how data is serialized when written to an
     * output. Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} options.input.properties.serialization.type Polymorphic
     * Discriminator
     *
     * @param {string} options.input.properties.type Polymorphic Discriminator
     *
     * @param {string} [options.input.name] Resource name
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ResourceTestStatus} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ResourceTestStatus} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ResourceTestStatus} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    test(resourceGroupName: string, jobName: string, inputName: string, options?: { input? : models.Input, customHeaders? : { [headerName: string]: string; } }): Promise<models.ResourceTestStatus>;
    test(resourceGroupName: string, jobName: string, inputName: string, callback: ServiceCallback<models.ResourceTestStatus>): void;
    test(resourceGroupName: string, jobName: string, inputName: string, options: { input? : models.Input, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ResourceTestStatus>): void;


    /**
     * Tests whether an input’s datasource is reachable and usable by the Azure
     * Stream Analytics service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} inputName The name of the input.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.input] If the input specified does not already
     * exist, this parameter must contain the full input definition intended to be
     * tested. If the input specified already exists, this parameter can be left
     * null to test the existing input as is or if specified, the properties
     * specified will overwrite the corresponding properties in the existing input
     * (exactly like a PATCH operation) and the resulting input will be tested.
     *
     * @param {object} [options.input.properties] The properties that are
     * associated with an input. Required on PUT (CreateOrReplace) requests.
     *
     * @param {object} [options.input.properties.serialization] Describes how data
     * from an input is serialized or how data is serialized when written to an
     * output. Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} options.input.properties.serialization.type Polymorphic
     * Discriminator
     *
     * @param {string} options.input.properties.type Polymorphic Discriminator
     *
     * @param {string} [options.input.name] Resource name
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ResourceTestStatus>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginTestWithHttpOperationResponse(resourceGroupName: string, jobName: string, inputName: string, options?: { input? : models.Input, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ResourceTestStatus>>;

    /**
     * Tests whether an input’s datasource is reachable and usable by the Azure
     * Stream Analytics service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} inputName The name of the input.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.input] If the input specified does not already
     * exist, this parameter must contain the full input definition intended to be
     * tested. If the input specified already exists, this parameter can be left
     * null to test the existing input as is or if specified, the properties
     * specified will overwrite the corresponding properties in the existing input
     * (exactly like a PATCH operation) and the resulting input will be tested.
     *
     * @param {object} [options.input.properties] The properties that are
     * associated with an input. Required on PUT (CreateOrReplace) requests.
     *
     * @param {object} [options.input.properties.serialization] Describes how data
     * from an input is serialized or how data is serialized when written to an
     * output. Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} options.input.properties.serialization.type Polymorphic
     * Discriminator
     *
     * @param {string} options.input.properties.type Polymorphic Discriminator
     *
     * @param {string} [options.input.name] Resource name
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ResourceTestStatus} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ResourceTestStatus} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ResourceTestStatus} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginTest(resourceGroupName: string, jobName: string, inputName: string, options?: { input? : models.Input, customHeaders? : { [headerName: string]: string; } }): Promise<models.ResourceTestStatus>;
    beginTest(resourceGroupName: string, jobName: string, inputName: string, callback: ServiceCallback<models.ResourceTestStatus>): void;
    beginTest(resourceGroupName: string, jobName: string, inputName: string, options: { input? : models.Input, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ResourceTestStatus>): void;


    /**
     * Lists all of the inputs under the specified streaming job.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<InputListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByStreamingJobNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.InputListResult>>;

    /**
     * Lists all of the inputs under the specified streaming job.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {InputListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {InputListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link InputListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByStreamingJobNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.InputListResult>;
    listByStreamingJobNext(nextPageLink: string, callback: ServiceCallback<models.InputListResult>): void;
    listByStreamingJobNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.InputListResult>): void;
}

/**
 * @class
 * Outputs
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the StreamAnalyticsManagementClient.
 */
export interface Outputs {


    /**
     * Creates an output or replaces an already existing output under an existing
     * streaming job.
     *
     * @param {object} output The definition of the output that will be used to
     * create a new output or replace the existing one under the streaming job.
     *
     * @param {object} [output.datasource] Describes the data source that output
     * will be written to. Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} output.datasource.type Polymorphic Discriminator
     *
     * @param {object} [output.serialization] Describes how data from an input is
     * serialized or how data is serialized when written to an output. Required on
     * PUT (CreateOrReplace) requests.
     *
     * @param {string} output.serialization.type Polymorphic Discriminator
     *
     * @param {string} [output.name] Resource name
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} outputName The name of the output.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the output. Omit this value to
     * always overwrite the current output. Specify the last-seen ETag value to
     * prevent accidentally overwritting concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new output to be
     * created, but to prevent updating an existing output. Other values will
     * result in a 412 Pre-condition Failed response.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Output>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrReplaceWithHttpOperationResponse(output: models.Output, resourceGroupName: string, jobName: string, outputName: string, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Output>>;

    /**
     * Creates an output or replaces an already existing output under an existing
     * streaming job.
     *
     * @param {object} output The definition of the output that will be used to
     * create a new output or replace the existing one under the streaming job.
     *
     * @param {object} [output.datasource] Describes the data source that output
     * will be written to. Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} output.datasource.type Polymorphic Discriminator
     *
     * @param {object} [output.serialization] Describes how data from an input is
     * serialized or how data is serialized when written to an output. Required on
     * PUT (CreateOrReplace) requests.
     *
     * @param {string} output.serialization.type Polymorphic Discriminator
     *
     * @param {string} [output.name] Resource name
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} outputName The name of the output.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the output. Omit this value to
     * always overwrite the current output. Specify the last-seen ETag value to
     * prevent accidentally overwritting concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new output to be
     * created, but to prevent updating an existing output. Other values will
     * result in a 412 Pre-condition Failed response.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Output} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Output} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Output} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrReplace(output: models.Output, resourceGroupName: string, jobName: string, outputName: string, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.Output>;
    createOrReplace(output: models.Output, resourceGroupName: string, jobName: string, outputName: string, callback: ServiceCallback<models.Output>): void;
    createOrReplace(output: models.Output, resourceGroupName: string, jobName: string, outputName: string, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Output>): void;


    /**
     * Updates an existing output under an existing streaming job. This can be used
     * to partially update (ie. update one or two properties) an output without
     * affecting the rest the job or output definition.
     *
     * @param {object} output An Output object. The properties specified here will
     * overwrite the corresponding properties in the existing output (ie. Those
     * properties will be updated). Any properties that are set to null here will
     * mean that the corresponding property in the existing output will remain the
     * same and not change as a result of this PATCH operation.
     *
     * @param {object} [output.datasource] Describes the data source that output
     * will be written to. Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} output.datasource.type Polymorphic Discriminator
     *
     * @param {object} [output.serialization] Describes how data from an input is
     * serialized or how data is serialized when written to an output. Required on
     * PUT (CreateOrReplace) requests.
     *
     * @param {string} output.serialization.type Polymorphic Discriminator
     *
     * @param {string} [output.name] Resource name
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} outputName The name of the output.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the output. Omit this value to
     * always overwrite the current output. Specify the last-seen ETag value to
     * prevent accidentally overwritting concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Output>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(output: models.Output, resourceGroupName: string, jobName: string, outputName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Output>>;

    /**
     * Updates an existing output under an existing streaming job. This can be used
     * to partially update (ie. update one or two properties) an output without
     * affecting the rest the job or output definition.
     *
     * @param {object} output An Output object. The properties specified here will
     * overwrite the corresponding properties in the existing output (ie. Those
     * properties will be updated). Any properties that are set to null here will
     * mean that the corresponding property in the existing output will remain the
     * same and not change as a result of this PATCH operation.
     *
     * @param {object} [output.datasource] Describes the data source that output
     * will be written to. Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} output.datasource.type Polymorphic Discriminator
     *
     * @param {object} [output.serialization] Describes how data from an input is
     * serialized or how data is serialized when written to an output. Required on
     * PUT (CreateOrReplace) requests.
     *
     * @param {string} output.serialization.type Polymorphic Discriminator
     *
     * @param {string} [output.name] Resource name
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} outputName The name of the output.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the output. Omit this value to
     * always overwrite the current output. Specify the last-seen ETag value to
     * prevent accidentally overwritting concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Output} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Output} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Output} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(output: models.Output, resourceGroupName: string, jobName: string, outputName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.Output>;
    update(output: models.Output, resourceGroupName: string, jobName: string, outputName: string, callback: ServiceCallback<models.Output>): void;
    update(output: models.Output, resourceGroupName: string, jobName: string, outputName: string, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Output>): void;


    /**
     * Deletes an output from the streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} outputName The name of the output.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, jobName: string, outputName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes an output from the streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} outputName The name of the output.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, jobName: string, outputName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, jobName: string, outputName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, jobName: string, outputName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Gets details about the specified output.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} outputName The name of the output.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Output>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, jobName: string, outputName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Output>>;

    /**
     * Gets details about the specified output.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} outputName The name of the output.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Output} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Output} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Output} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, jobName: string, outputName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Output>;
    get(resourceGroupName: string, jobName: string, outputName: string, callback: ServiceCallback<models.Output>): void;
    get(resourceGroupName: string, jobName: string, outputName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Output>): void;


    /**
     * Lists all of the outputs under the specified streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.select] The $select OData query parameter. This is
     * a comma-separated list of structural properties to include in the response,
     * or “*” to include all properties. By default, all properties are returned
     * except diagnostics. Currently only accepts '*' as a valid value.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OutputListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByStreamingJobWithHttpOperationResponse(resourceGroupName: string, jobName: string, options?: { select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OutputListResult>>;

    /**
     * Lists all of the outputs under the specified streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.select] The $select OData query parameter. This is
     * a comma-separated list of structural properties to include in the response,
     * or “*” to include all properties. By default, all properties are returned
     * except diagnostics. Currently only accepts '*' as a valid value.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OutputListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OutputListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OutputListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByStreamingJob(resourceGroupName: string, jobName: string, options?: { select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.OutputListResult>;
    listByStreamingJob(resourceGroupName: string, jobName: string, callback: ServiceCallback<models.OutputListResult>): void;
    listByStreamingJob(resourceGroupName: string, jobName: string, options: { select? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OutputListResult>): void;


    /**
     * Tests whether an output’s datasource is reachable and usable by the Azure
     * Stream Analytics service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} outputName The name of the output.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.output] If the output specified does not already
     * exist, this parameter must contain the full output definition intended to be
     * tested. If the output specified already exists, this parameter can be left
     * null to test the existing output as is or if specified, the properties
     * specified will overwrite the corresponding properties in the existing output
     * (exactly like a PATCH operation) and the resulting output will be tested.
     *
     * @param {object} [options.output.datasource] Describes the data source that
     * output will be written to. Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} options.output.datasource.type Polymorphic Discriminator
     *
     * @param {object} [options.output.serialization] Describes how data from an
     * input is serialized or how data is serialized when written to an output.
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} options.output.serialization.type Polymorphic Discriminator
     *
     * @param {string} [options.output.name] Resource name
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ResourceTestStatus>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    testWithHttpOperationResponse(resourceGroupName: string, jobName: string, outputName: string, options?: { output? : models.Output, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ResourceTestStatus>>;

    /**
     * Tests whether an output’s datasource is reachable and usable by the Azure
     * Stream Analytics service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} outputName The name of the output.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.output] If the output specified does not already
     * exist, this parameter must contain the full output definition intended to be
     * tested. If the output specified already exists, this parameter can be left
     * null to test the existing output as is or if specified, the properties
     * specified will overwrite the corresponding properties in the existing output
     * (exactly like a PATCH operation) and the resulting output will be tested.
     *
     * @param {object} [options.output.datasource] Describes the data source that
     * output will be written to. Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} options.output.datasource.type Polymorphic Discriminator
     *
     * @param {object} [options.output.serialization] Describes how data from an
     * input is serialized or how data is serialized when written to an output.
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} options.output.serialization.type Polymorphic Discriminator
     *
     * @param {string} [options.output.name] Resource name
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ResourceTestStatus} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ResourceTestStatus} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ResourceTestStatus} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    test(resourceGroupName: string, jobName: string, outputName: string, options?: { output? : models.Output, customHeaders? : { [headerName: string]: string; } }): Promise<models.ResourceTestStatus>;
    test(resourceGroupName: string, jobName: string, outputName: string, callback: ServiceCallback<models.ResourceTestStatus>): void;
    test(resourceGroupName: string, jobName: string, outputName: string, options: { output? : models.Output, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ResourceTestStatus>): void;


    /**
     * Tests whether an output’s datasource is reachable and usable by the Azure
     * Stream Analytics service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} outputName The name of the output.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.output] If the output specified does not already
     * exist, this parameter must contain the full output definition intended to be
     * tested. If the output specified already exists, this parameter can be left
     * null to test the existing output as is or if specified, the properties
     * specified will overwrite the corresponding properties in the existing output
     * (exactly like a PATCH operation) and the resulting output will be tested.
     *
     * @param {object} [options.output.datasource] Describes the data source that
     * output will be written to. Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} options.output.datasource.type Polymorphic Discriminator
     *
     * @param {object} [options.output.serialization] Describes how data from an
     * input is serialized or how data is serialized when written to an output.
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} options.output.serialization.type Polymorphic Discriminator
     *
     * @param {string} [options.output.name] Resource name
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ResourceTestStatus>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginTestWithHttpOperationResponse(resourceGroupName: string, jobName: string, outputName: string, options?: { output? : models.Output, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ResourceTestStatus>>;

    /**
     * Tests whether an output’s datasource is reachable and usable by the Azure
     * Stream Analytics service.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} outputName The name of the output.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.output] If the output specified does not already
     * exist, this parameter must contain the full output definition intended to be
     * tested. If the output specified already exists, this parameter can be left
     * null to test the existing output as is or if specified, the properties
     * specified will overwrite the corresponding properties in the existing output
     * (exactly like a PATCH operation) and the resulting output will be tested.
     *
     * @param {object} [options.output.datasource] Describes the data source that
     * output will be written to. Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} options.output.datasource.type Polymorphic Discriminator
     *
     * @param {object} [options.output.serialization] Describes how data from an
     * input is serialized or how data is serialized when written to an output.
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} options.output.serialization.type Polymorphic Discriminator
     *
     * @param {string} [options.output.name] Resource name
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ResourceTestStatus} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ResourceTestStatus} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ResourceTestStatus} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginTest(resourceGroupName: string, jobName: string, outputName: string, options?: { output? : models.Output, customHeaders? : { [headerName: string]: string; } }): Promise<models.ResourceTestStatus>;
    beginTest(resourceGroupName: string, jobName: string, outputName: string, callback: ServiceCallback<models.ResourceTestStatus>): void;
    beginTest(resourceGroupName: string, jobName: string, outputName: string, options: { output? : models.Output, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ResourceTestStatus>): void;


    /**
     * Lists all of the outputs under the specified streaming job.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OutputListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByStreamingJobNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OutputListResult>>;

    /**
     * Lists all of the outputs under the specified streaming job.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OutputListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OutputListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OutputListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByStreamingJobNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OutputListResult>;
    listByStreamingJobNext(nextPageLink: string, callback: ServiceCallback<models.OutputListResult>): void;
    listByStreamingJobNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OutputListResult>): void;
}

/**
 * @class
 * Transformations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the StreamAnalyticsManagementClient.
 */
export interface Transformations {


    /**
     * Creates a transformation or replaces an already existing transformation
     * under an existing streaming job.
     *
     * @param {object} transformation The definition of the transformation that
     * will be used to create a new transformation or replace the existing one
     * under the streaming job.
     *
     * @param {number} [transformation.streamingUnits] Specifies the number of
     * streaming units that the streaming job uses.
     *
     * @param {string} [transformation.query] Specifies the query that will be run
     * in the streaming job. You can learn more about the Stream Analytics Query
     * Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 .
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} [transformation.name] Resource name
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} transformationName The name of the transformation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the transformation. Omit this
     * value to always overwrite the current transformation. Specify the last-seen
     * ETag value to prevent accidentally overwritting concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new
     * transformation to be created, but to prevent updating an existing
     * transformation. Other values will result in a 412 Pre-condition Failed
     * response.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Transformation>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrReplaceWithHttpOperationResponse(transformation: models.Transformation, resourceGroupName: string, jobName: string, transformationName: string, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Transformation>>;

    /**
     * Creates a transformation or replaces an already existing transformation
     * under an existing streaming job.
     *
     * @param {object} transformation The definition of the transformation that
     * will be used to create a new transformation or replace the existing one
     * under the streaming job.
     *
     * @param {number} [transformation.streamingUnits] Specifies the number of
     * streaming units that the streaming job uses.
     *
     * @param {string} [transformation.query] Specifies the query that will be run
     * in the streaming job. You can learn more about the Stream Analytics Query
     * Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 .
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} [transformation.name] Resource name
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} transformationName The name of the transformation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the transformation. Omit this
     * value to always overwrite the current transformation. Specify the last-seen
     * ETag value to prevent accidentally overwritting concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new
     * transformation to be created, but to prevent updating an existing
     * transformation. Other values will result in a 412 Pre-condition Failed
     * response.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Transformation} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Transformation} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Transformation} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrReplace(transformation: models.Transformation, resourceGroupName: string, jobName: string, transformationName: string, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.Transformation>;
    createOrReplace(transformation: models.Transformation, resourceGroupName: string, jobName: string, transformationName: string, callback: ServiceCallback<models.Transformation>): void;
    createOrReplace(transformation: models.Transformation, resourceGroupName: string, jobName: string, transformationName: string, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Transformation>): void;


    /**
     * Updates an existing transformation under an existing streaming job. This can
     * be used to partially update (ie. update one or two properties) a
     * transformation without affecting the rest the job or transformation
     * definition.
     *
     * @param {object} transformation A Transformation object. The properties
     * specified here will overwrite the corresponding properties in the existing
     * transformation (ie. Those properties will be updated). Any properties that
     * are set to null here will mean that the corresponding property in the
     * existing transformation will remain the same and not change as a result of
     * this PATCH operation.
     *
     * @param {number} [transformation.streamingUnits] Specifies the number of
     * streaming units that the streaming job uses.
     *
     * @param {string} [transformation.query] Specifies the query that will be run
     * in the streaming job. You can learn more about the Stream Analytics Query
     * Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 .
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} [transformation.name] Resource name
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} transformationName The name of the transformation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the transformation. Omit this
     * value to always overwrite the current transformation. Specify the last-seen
     * ETag value to prevent accidentally overwritting concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Transformation>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(transformation: models.Transformation, resourceGroupName: string, jobName: string, transformationName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Transformation>>;

    /**
     * Updates an existing transformation under an existing streaming job. This can
     * be used to partially update (ie. update one or two properties) a
     * transformation without affecting the rest the job or transformation
     * definition.
     *
     * @param {object} transformation A Transformation object. The properties
     * specified here will overwrite the corresponding properties in the existing
     * transformation (ie. Those properties will be updated). Any properties that
     * are set to null here will mean that the corresponding property in the
     * existing transformation will remain the same and not change as a result of
     * this PATCH operation.
     *
     * @param {number} [transformation.streamingUnits] Specifies the number of
     * streaming units that the streaming job uses.
     *
     * @param {string} [transformation.query] Specifies the query that will be run
     * in the streaming job. You can learn more about the Stream Analytics Query
     * Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 .
     * Required on PUT (CreateOrReplace) requests.
     *
     * @param {string} [transformation.name] Resource name
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} transformationName The name of the transformation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the transformation. Omit this
     * value to always overwrite the current transformation. Specify the last-seen
     * ETag value to prevent accidentally overwritting concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Transformation} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Transformation} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Transformation} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(transformation: models.Transformation, resourceGroupName: string, jobName: string, transformationName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.Transformation>;
    update(transformation: models.Transformation, resourceGroupName: string, jobName: string, transformationName: string, callback: ServiceCallback<models.Transformation>): void;
    update(transformation: models.Transformation, resourceGroupName: string, jobName: string, transformationName: string, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Transformation>): void;


    /**
     * Gets details about the specified transformation.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} transformationName The name of the transformation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Transformation>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, jobName: string, transformationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Transformation>>;

    /**
     * Gets details about the specified transformation.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} transformationName The name of the transformation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Transformation} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Transformation} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Transformation} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, jobName: string, transformationName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Transformation>;
    get(resourceGroupName: string, jobName: string, transformationName: string, callback: ServiceCallback<models.Transformation>): void;
    get(resourceGroupName: string, jobName: string, transformationName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Transformation>): void;
}

/**
 * @class
 * Functions
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the StreamAnalyticsManagementClient.
 */
export interface Functions {


    /**
     * Creates a function or replaces an already existing function under an
     * existing streaming job.
     *
     * @param {object} functionParameter The definition of the function that will
     * be used to create a new function or replace the existing one under the
     * streaming job.
     *
     * @param {object} [functionParameter.properties] The properties that are
     * associated with a function.
     *
     * @param {string} functionParameter.properties.type Polymorphic Discriminator
     *
     * @param {string} [functionParameter.name] Resource name
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} functionName The name of the function.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the function. Omit this value
     * to always overwrite the current function. Specify the last-seen ETag value
     * to prevent accidentally overwritting concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new function to
     * be created, but to prevent updating an existing function. Other values will
     * result in a 412 Pre-condition Failed response.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FunctionModel>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrReplaceWithHttpOperationResponse(functionParameter: models.FunctionModel, resourceGroupName: string, jobName: string, functionName: string, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FunctionModel>>;

    /**
     * Creates a function or replaces an already existing function under an
     * existing streaming job.
     *
     * @param {object} functionParameter The definition of the function that will
     * be used to create a new function or replace the existing one under the
     * streaming job.
     *
     * @param {object} [functionParameter.properties] The properties that are
     * associated with a function.
     *
     * @param {string} functionParameter.properties.type Polymorphic Discriminator
     *
     * @param {string} [functionParameter.name] Resource name
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} functionName The name of the function.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the function. Omit this value
     * to always overwrite the current function. Specify the last-seen ETag value
     * to prevent accidentally overwritting concurrent changes.
     *
     * @param {string} [options.ifNoneMatch] Set to '*' to allow a new function to
     * be created, but to prevent updating an existing function. Other values will
     * result in a 412 Pre-condition Failed response.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FunctionModel} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FunctionModel} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FunctionModel} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrReplace(functionParameter: models.FunctionModel, resourceGroupName: string, jobName: string, functionName: string, options?: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.FunctionModel>;
    createOrReplace(functionParameter: models.FunctionModel, resourceGroupName: string, jobName: string, functionName: string, callback: ServiceCallback<models.FunctionModel>): void;
    createOrReplace(functionParameter: models.FunctionModel, resourceGroupName: string, jobName: string, functionName: string, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FunctionModel>): void;


    /**
     * Updates an existing function under an existing streaming job. This can be
     * used to partially update (ie. update one or two properties) a function
     * without affecting the rest the job or function definition.
     *
     * @param {object} functionParameter A function object. The properties
     * specified here will overwrite the corresponding properties in the existing
     * function (ie. Those properties will be updated). Any properties that are set
     * to null here will mean that the corresponding property in the existing
     * function will remain the same and not change as a result of this PATCH
     * operation.
     *
     * @param {object} [functionParameter.properties] The properties that are
     * associated with a function.
     *
     * @param {string} functionParameter.properties.type Polymorphic Discriminator
     *
     * @param {string} [functionParameter.name] Resource name
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} functionName The name of the function.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the function. Omit this value
     * to always overwrite the current function. Specify the last-seen ETag value
     * to prevent accidentally overwritting concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FunctionModel>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(functionParameter: models.FunctionModel, resourceGroupName: string, jobName: string, functionName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FunctionModel>>;

    /**
     * Updates an existing function under an existing streaming job. This can be
     * used to partially update (ie. update one or two properties) a function
     * without affecting the rest the job or function definition.
     *
     * @param {object} functionParameter A function object. The properties
     * specified here will overwrite the corresponding properties in the existing
     * function (ie. Those properties will be updated). Any properties that are set
     * to null here will mean that the corresponding property in the existing
     * function will remain the same and not change as a result of this PATCH
     * operation.
     *
     * @param {object} [functionParameter.properties] The properties that are
     * associated with a function.
     *
     * @param {string} functionParameter.properties.type Polymorphic Discriminator
     *
     * @param {string} [functionParameter.name] Resource name
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} functionName The name of the function.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] The ETag of the function. Omit this value
     * to always overwrite the current function. Specify the last-seen ETag value
     * to prevent accidentally overwritting concurrent changes.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FunctionModel} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FunctionModel} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FunctionModel} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(functionParameter: models.FunctionModel, resourceGroupName: string, jobName: string, functionName: string, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.FunctionModel>;
    update(functionParameter: models.FunctionModel, resourceGroupName: string, jobName: string, functionName: string, callback: ServiceCallback<models.FunctionModel>): void;
    update(functionParameter: models.FunctionModel, resourceGroupName: string, jobName: string, functionName: string, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FunctionModel>): void;


    /**
     * Deletes a function from the streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} functionName The name of the function.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, jobName: string, functionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a function from the streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} functionName The name of the function.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, jobName: string, functionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, jobName: string, functionName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, jobName: string, functionName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Gets details about the specified function.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} functionName The name of the function.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FunctionModel>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, jobName: string, functionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FunctionModel>>;

    /**
     * Gets details about the specified function.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} functionName The name of the function.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FunctionModel} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FunctionModel} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FunctionModel} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, jobName: string, functionName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FunctionModel>;
    get(resourceGroupName: string, jobName: string, functionName: string, callback: ServiceCallback<models.FunctionModel>): void;
    get(resourceGroupName: string, jobName: string, functionName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FunctionModel>): void;


    /**
     * Lists all of the functions under the specified streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.select] The $select OData query parameter. This is
     * a comma-separated list of structural properties to include in the response,
     * or “*” to include all properties. By default, all properties are returned
     * except diagnostics. Currently only accepts '*' as a valid value.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FunctionListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByStreamingJobWithHttpOperationResponse(resourceGroupName: string, jobName: string, options?: { select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FunctionListResult>>;

    /**
     * Lists all of the functions under the specified streaming job.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.select] The $select OData query parameter. This is
     * a comma-separated list of structural properties to include in the response,
     * or “*” to include all properties. By default, all properties are returned
     * except diagnostics. Currently only accepts '*' as a valid value.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FunctionListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FunctionListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FunctionListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByStreamingJob(resourceGroupName: string, jobName: string, options?: { select? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.FunctionListResult>;
    listByStreamingJob(resourceGroupName: string, jobName: string, callback: ServiceCallback<models.FunctionListResult>): void;
    listByStreamingJob(resourceGroupName: string, jobName: string, options: { select? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FunctionListResult>): void;


    /**
     * Tests if the information provided for a function is valid. This can range
     * from testing the connection to the underlying web service behind the
     * function or making sure the function code provided is syntactically correct.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} functionName The name of the function.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.functionProperty] If the function specified does
     * not already exist, this parameter must contain the full function definition
     * intended to be tested. If the function specified already exists, this
     * parameter can be left null to test the existing function as is or if
     * specified, the properties specified will overwrite the corresponding
     * properties in the existing function (exactly like a PATCH operation) and the
     * resulting function will be tested.
     *
     * @param {object} [options.functionProperty.properties] The properties that
     * are associated with a function.
     *
     * @param {string} options.functionProperty.properties.type Polymorphic
     * Discriminator
     *
     * @param {string} [options.functionProperty.name] Resource name
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ResourceTestStatus>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    testWithHttpOperationResponse(resourceGroupName: string, jobName: string, functionName: string, options?: { functionProperty? : models.FunctionModel, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ResourceTestStatus>>;

    /**
     * Tests if the information provided for a function is valid. This can range
     * from testing the connection to the underlying web service behind the
     * function or making sure the function code provided is syntactically correct.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} functionName The name of the function.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.functionProperty] If the function specified does
     * not already exist, this parameter must contain the full function definition
     * intended to be tested. If the function specified already exists, this
     * parameter can be left null to test the existing function as is or if
     * specified, the properties specified will overwrite the corresponding
     * properties in the existing function (exactly like a PATCH operation) and the
     * resulting function will be tested.
     *
     * @param {object} [options.functionProperty.properties] The properties that
     * are associated with a function.
     *
     * @param {string} options.functionProperty.properties.type Polymorphic
     * Discriminator
     *
     * @param {string} [options.functionProperty.name] Resource name
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ResourceTestStatus} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ResourceTestStatus} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ResourceTestStatus} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    test(resourceGroupName: string, jobName: string, functionName: string, options?: { functionProperty? : models.FunctionModel, customHeaders? : { [headerName: string]: string; } }): Promise<models.ResourceTestStatus>;
    test(resourceGroupName: string, jobName: string, functionName: string, callback: ServiceCallback<models.ResourceTestStatus>): void;
    test(resourceGroupName: string, jobName: string, functionName: string, options: { functionProperty? : models.FunctionModel, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ResourceTestStatus>): void;


    /**
     * Retrieves the default definition of a function based on the parameters
     * specified.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} functionName The name of the function.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.functionRetrieveDefaultDefinitionParameters]
     * Parameters used to specify the type of function to retrieve the default
     * definition for.
     *
     * @param {string}
     * options.functionRetrieveDefaultDefinitionParameters.bindingType Polymorphic
     * Discriminator
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FunctionModel>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    retrieveDefaultDefinitionWithHttpOperationResponse(resourceGroupName: string, jobName: string, functionName: string, options?: { functionRetrieveDefaultDefinitionParameters? : models.FunctionRetrieveDefaultDefinitionParameters, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FunctionModel>>;

    /**
     * Retrieves the default definition of a function based on the parameters
     * specified.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} functionName The name of the function.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.functionRetrieveDefaultDefinitionParameters]
     * Parameters used to specify the type of function to retrieve the default
     * definition for.
     *
     * @param {string}
     * options.functionRetrieveDefaultDefinitionParameters.bindingType Polymorphic
     * Discriminator
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FunctionModel} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FunctionModel} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FunctionModel} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    retrieveDefaultDefinition(resourceGroupName: string, jobName: string, functionName: string, options?: { functionRetrieveDefaultDefinitionParameters? : models.FunctionRetrieveDefaultDefinitionParameters, customHeaders? : { [headerName: string]: string; } }): Promise<models.FunctionModel>;
    retrieveDefaultDefinition(resourceGroupName: string, jobName: string, functionName: string, callback: ServiceCallback<models.FunctionModel>): void;
    retrieveDefaultDefinition(resourceGroupName: string, jobName: string, functionName: string, options: { functionRetrieveDefaultDefinitionParameters? : models.FunctionRetrieveDefaultDefinitionParameters, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FunctionModel>): void;


    /**
     * Tests if the information provided for a function is valid. This can range
     * from testing the connection to the underlying web service behind the
     * function or making sure the function code provided is syntactically correct.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} functionName The name of the function.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.functionProperty] If the function specified does
     * not already exist, this parameter must contain the full function definition
     * intended to be tested. If the function specified already exists, this
     * parameter can be left null to test the existing function as is or if
     * specified, the properties specified will overwrite the corresponding
     * properties in the existing function (exactly like a PATCH operation) and the
     * resulting function will be tested.
     *
     * @param {object} [options.functionProperty.properties] The properties that
     * are associated with a function.
     *
     * @param {string} options.functionProperty.properties.type Polymorphic
     * Discriminator
     *
     * @param {string} [options.functionProperty.name] Resource name
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ResourceTestStatus>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginTestWithHttpOperationResponse(resourceGroupName: string, jobName: string, functionName: string, options?: { functionProperty? : models.FunctionModel, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ResourceTestStatus>>;

    /**
     * Tests if the information provided for a function is valid. This can range
     * from testing the connection to the underlying web service behind the
     * function or making sure the function code provided is syntactically correct.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the resource. You can obtain this value from the Azure Resource
     * Manager API or the portal.
     *
     * @param {string} jobName The name of the streaming job.
     *
     * @param {string} functionName The name of the function.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.functionProperty] If the function specified does
     * not already exist, this parameter must contain the full function definition
     * intended to be tested. If the function specified already exists, this
     * parameter can be left null to test the existing function as is or if
     * specified, the properties specified will overwrite the corresponding
     * properties in the existing function (exactly like a PATCH operation) and the
     * resulting function will be tested.
     *
     * @param {object} [options.functionProperty.properties] The properties that
     * are associated with a function.
     *
     * @param {string} options.functionProperty.properties.type Polymorphic
     * Discriminator
     *
     * @param {string} [options.functionProperty.name] Resource name
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ResourceTestStatus} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ResourceTestStatus} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ResourceTestStatus} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginTest(resourceGroupName: string, jobName: string, functionName: string, options?: { functionProperty? : models.FunctionModel, customHeaders? : { [headerName: string]: string; } }): Promise<models.ResourceTestStatus>;
    beginTest(resourceGroupName: string, jobName: string, functionName: string, callback: ServiceCallback<models.ResourceTestStatus>): void;
    beginTest(resourceGroupName: string, jobName: string, functionName: string, options: { functionProperty? : models.FunctionModel, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ResourceTestStatus>): void;


    /**
     * Lists all of the functions under the specified streaming job.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<FunctionListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByStreamingJobNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.FunctionListResult>>;

    /**
     * Lists all of the functions under the specified streaming job.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {FunctionListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {FunctionListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link FunctionListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByStreamingJobNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.FunctionListResult>;
    listByStreamingJobNext(nextPageLink: string, callback: ServiceCallback<models.FunctionListResult>): void;
    listByStreamingJobNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.FunctionListResult>): void;
}

/**
 * @class
 * Subscriptions
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the StreamAnalyticsManagementClient.
 */
export interface Subscriptions {


    /**
     * Retrieves the subscription's current quota information in a particular
     * region.
     *
     * @param {string} location The region in which to retrieve the subscription's
     * quota information. You can find out which regions Azure Stream Analytics is
     * supported in here: https://azure.microsoft.com/en-us/regions/
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<SubscriptionQuotasListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listQuotasWithHttpOperationResponse(location: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SubscriptionQuotasListResult>>;

    /**
     * Retrieves the subscription's current quota information in a particular
     * region.
     *
     * @param {string} location The region in which to retrieve the subscription's
     * quota information. You can find out which regions Azure Stream Analytics is
     * supported in here: https://azure.microsoft.com/en-us/regions/
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {SubscriptionQuotasListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {SubscriptionQuotasListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link SubscriptionQuotasListResult} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listQuotas(location: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SubscriptionQuotasListResult>;
    listQuotas(location: string, callback: ServiceCallback<models.SubscriptionQuotasListResult>): void;
    listQuotas(location: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SubscriptionQuotasListResult>): void;
}

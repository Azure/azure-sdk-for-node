/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { BaseResource, CloudError } from "ms-rest-azure";
import * as moment from "moment";

export {

  BaseResource,
  CloudError
};

/**
 * Contains the localized display information for this particular operation / action.
 */
export interface OperationDisplay {
  /**
   * The localized friendly form of the resource provider name.
   */
  readonly provider?: string;
  /**
   * The localized friendly form of the resource type related to this action/operation.
   */
  readonly resource?: string;
  /**
   * The localized friendly name for the operation.
   */
  readonly operation?: string;
  /**
   * The localized friendly description for the operation.
   */
  readonly description?: string;
}

/**
 * A Stream Analytics REST API operation
 */
export interface Operation {
  /**
   * The name of the operation being performed on this particular object.
   */
  readonly name?: string;
  /**
   * Contains the localized display information for this particular operation / action.
   */
  readonly display?: OperationDisplay;
}

/**
 * The properties that are associated with a SKU.
 */
export interface Sku {
  /**
   * The name of the SKU. Required on PUT (CreateOrReplace) requests. Possible values include:
   * 'Standard'
   */
  name?: string;
}

/**
 * Describes how data from an input is serialized or how data is serialized when written to an
 * output.
 */
export interface Serialization {
  /**
   * Polymorphic Discriminator
   */
  type: string;
}

/**
 * Condition applicable to the resource, or to the job overall, that warrant customer attention.
 */
export interface DiagnosticCondition {
  /**
   * The UTC timestamp of when the condition started. Customers should be able to find a
   * corresponding event in the ops log around this time.
   */
  readonly since?: string;
  /**
   * The opaque diagnostic code.
   */
  readonly code?: string;
  /**
   * The human-readable message describing the condition in detail. Localized in the
   * Accept-Language of the client request.
   */
  readonly message?: string;
}

/**
 * Describes conditions applicable to the Input, Output, or the job overall, that warrant customer
 * attention.
 */
export interface Diagnostics {
  /**
   * A collection of zero or more conditions applicable to the resource, or to the job overall,
   * that warrant customer attention.
   */
  readonly conditions?: DiagnosticCondition[];
}

/**
 * The properties that are associated with an input.
 */
export interface InputProperties {
  /**
   * Describes how data from an input is serialized or how data is serialized when written to an
   * output. Required on PUT (CreateOrReplace) requests.
   */
  serialization?: Serialization;
  /**
   * Describes conditions applicable to the Input, Output, or the job overall, that warrant
   * customer attention.
   */
  readonly diagnostics?: Diagnostics;
  /**
   * The current entity tag for the input. This is an opaque string. You can use it to detect
   * whether the resource has changed between requests. You can also use it in the If-Match or
   * If-None-Match headers for write operations for optimistic concurrency.
   */
  readonly etag?: string;
  /**
   * Polymorphic Discriminator
   */
  type: string;
}

/**
 * The base sub-resource model definition.
 */
export interface SubResource extends BaseResource {
  /**
   * Resource Id
   */
  readonly id?: string;
  /**
   * Resource name
   */
  name?: string;
  /**
   * Resource type
   */
  readonly type?: string;
}

/**
 * An input object, containing all information associated with the named input. All inputs are
 * contained under a streaming job.
 */
export interface Input extends SubResource {
  /**
   * The properties that are associated with an input. Required on PUT (CreateOrReplace) requests.
   */
  properties?: InputProperties;
}

/**
 * A transformation object, containing all information associated with the named transformation.
 * All transformations are contained under a streaming job.
 */
export interface Transformation extends SubResource {
  /**
   * Specifies the number of streaming units that the streaming job uses.
   */
  streamingUnits?: number;
  /**
   * Specifies the query that will be run in the streaming job. You can learn more about the Stream
   * Analytics Query Language (SAQL) here: https://msdn.microsoft.com/library/azure/dn834998 .
   * Required on PUT (CreateOrReplace) requests.
   */
  query?: string;
  /**
   * The current entity tag for the transformation. This is an opaque string. You can use it to
   * detect whether the resource has changed between requests. You can also use it in the If-Match
   * or If-None-Match headers for write operations for optimistic concurrency.
   */
  readonly etag?: string;
}

/**
 * Describes the data source that output will be written to.
 */
export interface OutputDataSource {
  /**
   * Polymorphic Discriminator
   */
  type: string;
}

/**
 * An output object, containing all information associated with the named output. All outputs are
 * contained under a streaming job.
 */
export interface Output extends SubResource {
  /**
   * Describes the data source that output will be written to. Required on PUT (CreateOrReplace)
   * requests.
   */
  datasource?: OutputDataSource;
  /**
   * Describes how data from an input is serialized or how data is serialized when written to an
   * output. Required on PUT (CreateOrReplace) requests.
   */
  serialization?: Serialization;
  /**
   * Describes conditions applicable to the Input, Output, or the job overall, that warrant
   * customer attention.
   */
  readonly diagnostics?: Diagnostics;
  /**
   * The current entity tag for the output. This is an opaque string. You can use it to detect
   * whether the resource has changed between requests. You can also use it in the If-Match or
   * If-None-Match headers for write operations for optimistic concurrency.
   */
  readonly etag?: string;
}

/**
 * The properties that are associated with a function.
 */
export interface FunctionProperties {
  /**
   * The current entity tag for the function. This is an opaque string. You can use it to detect
   * whether the resource has changed between requests. You can also use it in the If-Match or
   * If-None-Match headers for write operations for optimistic concurrency.
   */
  readonly etag?: string;
  /**
   * Polymorphic Discriminator
   */
  type: string;
}

/**
 * A function object, containing all information associated with the named function. All functions
 * are contained under a streaming job.
 */
export interface FunctionModel extends SubResource {
  /**
   * The properties that are associated with a function.
   */
  properties?: FunctionProperties;
}

/**
 * The base resource model definition.
 */
export interface Resource extends BaseResource {
  /**
   * Resource Id
   */
  readonly id?: string;
  /**
   * Resource name
   */
  readonly name?: string;
  /**
   * Resource type
   */
  readonly type?: string;
  /**
   * Resource location. Required on PUT (CreateOrReplace) requests.
   */
  location?: string;
  /**
   * Resource tags
   */
  tags?: { [propertyName: string]: string };
}

/**
 * A streaming job object, containing all information associated with the named streaming job.
 */
export interface StreamingJob extends Resource {
  /**
   * Describes the SKU of the streaming job. Required on PUT (CreateOrReplace) requests.
   */
  sku?: Sku;
  /**
   * A GUID uniquely identifying the streaming job. This GUID is generated upon creation of the
   * streaming job.
   */
  readonly jobId?: string;
  /**
   * Describes the provisioning status of the streaming job.
   */
  readonly provisioningState?: string;
  /**
   * Describes the state of the streaming job.
   */
  readonly jobState?: string;
  /**
   * This property should only be utilized when it is desired that the job be started immediately
   * upon creation. Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate
   * whether the starting point of the output event stream should start whenever the job is
   * started, start at a custom user time stamp specified via the outputStartTime property, or
   * start from the last event output time. Possible values include: 'JobStartTime', 'CustomTime',
   * 'LastOutputEventTime'
   */
  outputStartMode?: string;
  /**
   * Value is either an ISO-8601 formatted time stamp that indicates the starting point of the
   * output event stream, or null to indicate that the output event stream will start whenever the
   * streaming job is started. This property must have a value if outputStartMode is set to
   * CustomTime.
   */
  outputStartTime?: Date;
  /**
   * Value is either an ISO-8601 formatted timestamp indicating the last output event time of the
   * streaming job or null indicating that output has not yet been produced. In case of multiple
   * outputs or multiple streams, this shows the latest value in that set.
   */
  readonly lastOutputEventTime?: Date;
  /**
   * Indicates the policy to apply to events that arrive out of order in the input event stream.
   * Possible values include: 'Adjust', 'Drop'
   */
  eventsOutOfOrderPolicy?: string;
  /**
   * Indicates the policy to apply to events that arrive at the output and cannot be written to the
   * external storage due to being malformed (missing column values, column values of wrong type or
   * size). Possible values include: 'Stop', 'Drop'
   */
  outputErrorPolicy?: string;
  /**
   * The maximum tolerable delay in seconds where out-of-order events can be adjusted to be back in
   * order.
   */
  eventsOutOfOrderMaxDelayInSeconds?: number;
  /**
   * The maximum tolerable delay in seconds where events arriving late could be included.
   * Supported range is -1 to 1814399 (20.23:59:59 days) and -1 is used to specify wait
   * indefinitely. If the property is absent, it is interpreted to have a value of -1.
   */
  eventsLateArrivalMaxDelayInSeconds?: number;
  /**
   * The data locale of the stream analytics job. Value should be the name of a supported .NET
   * Culture from the set
   * https://msdn.microsoft.com/en-us/library/system.globalization.culturetypes(v=vs.110).aspx.
   * Defaults to 'en-US' if none specified.
   */
  dataLocale?: string;
  /**
   * Controls certain runtime behaviors of the streaming job. Possible values include: '1.0'
   */
  compatibilityLevel?: string;
  /**
   * Value is an ISO-8601 formatted UTC timestamp indicating when the streaming job was created.
   */
  readonly createdDate?: Date;
  /**
   * A list of one or more inputs to the streaming job. The name property for each input is
   * required when specifying this property in a PUT request. This property cannot be modify via a
   * PATCH operation. You must use the PATCH API available for the individual input.
   */
  inputs?: Input[];
  /**
   * Indicates the query and the number of streaming units to use for the streaming job. The name
   * property of the transformation is required when specifying this property in a PUT request.
   * This property cannot be modify via a PATCH operation. You must use the PATCH API available for
   * the individual transformation.
   */
  transformation?: Transformation;
  /**
   * A list of one or more outputs for the streaming job. The name property for each output is
   * required when specifying this property in a PUT request. This property cannot be modify via a
   * PATCH operation. You must use the PATCH API available for the individual output.
   */
  outputs?: Output[];
  /**
   * A list of one or more functions for the streaming job. The name property for each function is
   * required when specifying this property in a PUT request. This property cannot be modify via a
   * PATCH operation. You must use the PATCH API available for the individual transformation.
   */
  functions?: FunctionModel[];
  /**
   * The current entity tag for the streaming job. This is an opaque string. You can use it to
   * detect whether the resource has changed between requests. You can also use it in the If-Match
   * or If-None-Match headers for write operations for optimistic concurrency.
   */
  readonly etag?: string;
}

/**
 * Parameters supplied to the Start Streaming Job operation.
 */
export interface StartStreamingJobParameters {
  /**
   * Value may be JobStartTime, CustomTime, or LastOutputEventTime to indicate whether the starting
   * point of the output event stream should start whenever the job is started, start at a custom
   * user time stamp specified via the outputStartTime property, or start from the last event
   * output time. Possible values include: 'JobStartTime', 'CustomTime', 'LastOutputEventTime'
   */
  outputStartMode?: string;
  /**
   * Value is either an ISO-8601 formatted time stamp that indicates the starting point of the
   * output event stream, or null to indicate that the output event stream will start whenever the
   * streaming job is started. This property must have a value if outputStartMode is set to
   * CustomTime.
   */
  outputStartTime?: Date;
}

/**
 * The physical binding of the function. For example, in the Azure Machine Learning web service’s
 * case, this describes the endpoint.
 */
export interface FunctionBinding {
  /**
   * Polymorphic Discriminator
   */
  type: string;
}

/**
 * The binding to a JavaScript function.
 */
export interface JavaScriptFunctionBinding extends FunctionBinding {
  /**
   * The JavaScript code containing a single function definition. For example: 'function (x, y) {
   * return x + y; }'
   */
  script?: string;
}

/**
 * Describes an output column for the Azure Machine Learning web service endpoint.
 */
export interface AzureMachineLearningWebServiceOutputColumn {
  /**
   * The name of the output column.
   */
  name?: string;
  /**
   * The (Azure Machine Learning supported) data type of the output column. A list of valid  Azure
   * Machine Learning data types are described at
   * https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .
   */
  dataType?: string;
}

/**
 * Describes an input column for the Azure Machine Learning web service endpoint.
 */
export interface AzureMachineLearningWebServiceInputColumn {
  /**
   * The name of the input column.
   */
  name?: string;
  /**
   * The (Azure Machine Learning supported) data type of the input column. A list of valid  Azure
   * Machine Learning data types are described at
   * https://msdn.microsoft.com/en-us/library/azure/dn905923.aspx .
   */
  dataType?: string;
  /**
   * The zero based index of the function parameter this input maps to.
   */
  mapTo?: number;
}

/**
 * The inputs for the Azure Machine Learning web service endpoint.
 */
export interface AzureMachineLearningWebServiceInputs {
  /**
   * The name of the input. This is the name provided while authoring the endpoint.
   */
  name?: string;
  /**
   * A list of input columns for the Azure Machine Learning web service endpoint.
   */
  columnNames?: AzureMachineLearningWebServiceInputColumn[];
}

/**
 * The binding to an Azure Machine Learning web service.
 */
export interface AzureMachineLearningWebServiceFunctionBinding extends FunctionBinding {
  /**
   * The Request-Response execute endpoint of the Azure Machine Learning web service. Find out more
   * here:
   * https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-consume-web-services#request-response-service-rrs
   */
  endpoint?: string;
  /**
   * The API key used to authenticate with Request-Response endpoint.
   */
  apiKey?: string;
  /**
   * The inputs for the Azure Machine Learning web service endpoint.
   */
  inputs?: AzureMachineLearningWebServiceInputs;
  /**
   * A list of outputs from the Azure Machine Learning web service endpoint execution.
   */
  outputs?: AzureMachineLearningWebServiceOutputColumn[];
  /**
   * Number between 1 and 10000 describing maximum number of rows for every Azure ML RRS execute
   * request. Default is 1000.
   */
  batchSize?: number;
}

/**
 * Describes the output of a function.
 */
export interface FunctionOutput {
  /**
   * The (Azure Stream Analytics supported) data type of the function output. A list of valid Azure
   * Stream Analytics data types are described at
   * https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
   */
  dataType?: string;
}

/**
 * Describes one input parameter of a function.
 */
export interface FunctionInput {
  /**
   * The (Azure Stream Analytics supported) data type of the function input parameter. A list of
   * valid Azure Stream Analytics data types are described at
   * https://msdn.microsoft.com/en-us/library/azure/dn835065.aspx
   */
  dataType?: string;
  /**
   * A flag indicating if the parameter is a configuration parameter. True if this input parameter
   * is expected to be a constant. Default is false.
   */
  isConfigurationParameter?: boolean;
}

/**
 * The properties that are associated with a scalar function.
 */
export interface ScalarFunctionProperties extends FunctionProperties {
  /**
   * A list of inputs describing the parameters of the function.
   */
  inputs?: FunctionInput[];
  /**
   * The output of the function.
   */
  output?: FunctionOutput;
  /**
   * The physical binding of the function. For example, in the Azure Machine Learning web service’s
   * case, this describes the endpoint.
   */
  binding?: FunctionBinding;
}

/**
 * Describes how data from an input is serialized or how data is serialized when written to an
 * output in Avro format.
 */
export interface AvroSerialization extends Serialization {
  /**
   * The properties that are associated with the Avro serialization type. Required on PUT
   * (CreateOrReplace) requests.
   */
  properties?: any;
}

/**
 * Describes how data from an input is serialized or how data is serialized when written to an
 * output in JSON format.
 */
export interface JsonSerialization extends Serialization {
  /**
   * Specifies the encoding of the incoming data in the case of input and the encoding of outgoing
   * data in the case of output. Required on PUT (CreateOrReplace) requests. Possible values
   * include: 'UTF8'
   */
  encoding?: string;
  /**
   * This property only applies to JSON serialization of outputs only. It is not applicable to
   * inputs. This property specifies the format of the JSON the output will be written in. The
   * currently supported values are 'lineSeparated' indicating the output will be formatted by
   * having each JSON object separated by a new line and 'array' indicating the output will be
   * formatted as an array of JSON objects. Default value is 'lineSeparated' if left null. Possible
   * values include: 'LineSeparated', 'Array'
   */
  format?: string;
}

/**
 * Describes how data from an input is serialized or how data is serialized when written to an
 * output in CSV format.
 */
export interface CsvSerialization extends Serialization {
  /**
   * Specifies the delimiter that will be used to separate comma-separated value (CSV) records. See
   * https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or
   * https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a list
   * of supported values. Required on PUT (CreateOrReplace) requests.
   */
  fieldDelimiter?: string;
  /**
   * Specifies the encoding of the incoming data in the case of input and the encoding of outgoing
   * data in the case of output. Required on PUT (CreateOrReplace) requests. Possible values
   * include: 'UTF8'
   */
  encoding?: string;
}

/**
 * The properties that are associated with data sources that use OAuth as their authentication
 * model.
 */
export interface OAuthBasedDataSourceProperties {
  /**
   * A refresh token that can be used to obtain a valid access token that can then be used to
   * authenticate with the data source. A valid refresh token is currently only obtainable via the
   * Azure Portal. It is recommended to put a dummy string value here when creating the data source
   * and then going to the Azure Portal to authenticate the data source which will update this
   * property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
   */
  refreshToken?: string;
  /**
   * The user principal name (UPN) of the user that was used to obtain the refresh token. Use this
   * property to help remember which user was used to obtain the refresh token.
   */
  tokenUserPrincipalName?: string;
  /**
   * The user display name of the user that was used to obtain the refresh token. Use this property
   * to help remember which user was used to obtain the refresh token.
   */
  tokenUserDisplayName?: string;
}

/**
 * Describes an Azure Data Lake Store output data source.
 */
export interface AzureDataLakeStoreOutputDataSource extends OutputDataSource {
  /**
   * A refresh token that can be used to obtain a valid access token that can then be used to
   * authenticate with the data source. A valid refresh token is currently only obtainable via the
   * Azure Portal. It is recommended to put a dummy string value here when creating the data source
   * and then going to the Azure Portal to authenticate the data source which will update this
   * property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
   */
  refreshToken?: string;
  /**
   * The user principal name (UPN) of the user that was used to obtain the refresh token. Use this
   * property to help remember which user was used to obtain the refresh token.
   */
  tokenUserPrincipalName?: string;
  /**
   * The user display name of the user that was used to obtain the refresh token. Use this property
   * to help remember which user was used to obtain the refresh token.
   */
  tokenUserDisplayName?: string;
  /**
   * The name of the Azure Data Lake Store account. Required on PUT (CreateOrReplace) requests.
   */
  accountName?: string;
  /**
   * The tenant id of the user used to obtain the refresh token. Required on PUT (CreateOrReplace)
   * requests.
   */
  tenantId?: string;
  /**
   * The location of the file to which the output should be written to. Required on PUT
   * (CreateOrReplace) requests.
   */
  filePathPrefix?: string;
  /**
   * The date format. Wherever {date} appears in filePathPrefix, the value of this property is used
   * as the date format instead.
   */
  dateFormat?: string;
  /**
   * The time format. Wherever {time} appears in filePathPrefix, the value of this property is used
   * as the time format instead.
   */
  timeFormat?: string;
}

/**
 * Describes a Power BI output data source.
 */
export interface PowerBIOutputDataSource extends OutputDataSource {
  /**
   * A refresh token that can be used to obtain a valid access token that can then be used to
   * authenticate with the data source. A valid refresh token is currently only obtainable via the
   * Azure Portal. It is recommended to put a dummy string value here when creating the data source
   * and then going to the Azure Portal to authenticate the data source which will update this
   * property with a valid refresh token. Required on PUT (CreateOrReplace) requests.
   */
  refreshToken?: string;
  /**
   * The user principal name (UPN) of the user that was used to obtain the refresh token. Use this
   * property to help remember which user was used to obtain the refresh token.
   */
  tokenUserPrincipalName?: string;
  /**
   * The user display name of the user that was used to obtain the refresh token. Use this property
   * to help remember which user was used to obtain the refresh token.
   */
  tokenUserDisplayName?: string;
  /**
   * The name of the Power BI dataset. Required on PUT (CreateOrReplace) requests.
   */
  dataset?: string;
  /**
   * The name of the Power BI table under the specified dataset. Required on PUT (CreateOrReplace)
   * requests.
   */
  table?: string;
  /**
   * The ID of the Power BI group.
   */
  groupId?: string;
  /**
   * The name of the Power BI group. Use this property to help remember which specific Power BI
   * group id was used.
   */
  groupName?: string;
}

/**
 * The common properties that are associated with Service Bus data sources (Queues, Topics, Event
 * Hubs, etc.).
 */
export interface ServiceBusDataSourceProperties {
  /**
   * The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus
   * Topic, etc. Required on PUT (CreateOrReplace) requests.
   */
  serviceBusNamespace?: string;
  /**
   * The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc.
   * Required on PUT (CreateOrReplace) requests.
   */
  sharedAccessPolicyName?: string;
  /**
   * The shared access policy key for the specified shared access policy. Required on PUT
   * (CreateOrReplace) requests.
   */
  sharedAccessPolicyKey?: string;
}

/**
 * The common properties that are associated with Event Hub data sources.
 */
export interface EventHubDataSourceProperties extends ServiceBusDataSourceProperties {
  /**
   * The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
   */
  eventHubName?: string;
}

/**
 * Describes a Service Bus Topic output data source.
 */
export interface ServiceBusTopicOutputDataSource extends OutputDataSource {
  /**
   * The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus
   * Topic, etc. Required on PUT (CreateOrReplace) requests.
   */
  serviceBusNamespace?: string;
  /**
   * The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc.
   * Required on PUT (CreateOrReplace) requests.
   */
  sharedAccessPolicyName?: string;
  /**
   * The shared access policy key for the specified shared access policy. Required on PUT
   * (CreateOrReplace) requests.
   */
  sharedAccessPolicyKey?: string;
  /**
   * The name of the Service Bus Topic. Required on PUT (CreateOrReplace) requests.
   */
  topicName?: string;
  /**
   * A string array of the names of output columns to be attached to Service Bus messages as custom
   * properties.
   */
  propertyColumns?: string[];
}

/**
 * Describes a Service Bus Queue output data source.
 */
export interface ServiceBusQueueOutputDataSource extends OutputDataSource {
  /**
   * The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus
   * Topic, etc. Required on PUT (CreateOrReplace) requests.
   */
  serviceBusNamespace?: string;
  /**
   * The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc.
   * Required on PUT (CreateOrReplace) requests.
   */
  sharedAccessPolicyName?: string;
  /**
   * The shared access policy key for the specified shared access policy. Required on PUT
   * (CreateOrReplace) requests.
   */
  sharedAccessPolicyKey?: string;
  /**
   * The name of the Service Bus Queue. Required on PUT (CreateOrReplace) requests.
   */
  queueName?: string;
  /**
   * A string array of the names of output columns to be attached to Service Bus messages as custom
   * properties.
   */
  propertyColumns?: string[];
}

/**
 * Describes a DocumentDB output data source.
 */
export interface DocumentDbOutputDataSource extends OutputDataSource {
  /**
   * The DocumentDB account name or ID. Required on PUT (CreateOrReplace) requests.
   */
  accountId?: string;
  /**
   * The account key for the DocumentDB account. Required on PUT (CreateOrReplace) requests.
   */
  accountKey?: string;
  /**
   * The name of the DocumentDB database. Required on PUT (CreateOrReplace) requests.
   */
  database?: string;
  /**
   * The collection name pattern for the collections to be used. The collection name format can be
   * constructed using the optional {partition} token, where partitions start from 0. See the
   * DocumentDB section of
   * https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for more
   * information. Required on PUT (CreateOrReplace) requests.
   */
  collectionNamePattern?: string;
  /**
   * The name of the field in output events used to specify the key for partitioning output across
   * collections. If 'collectionNamePattern' contains the {partition} token, this property is
   * required to be specified.
   */
  partitionKey?: string;
  /**
   * The name of the field in output events used to specify the primary key which insert or update
   * operations are based on.
   */
  documentId?: string;
}

/**
 * The properties that are associated with an Azure SQL database data source.
 */
export interface AzureSqlDatabaseDataSourceProperties {
  /**
   * The name of the SQL server containing the Azure SQL database. Required on PUT
   * (CreateOrReplace) requests.
   */
  server?: string;
  /**
   * The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
   */
  database?: string;
  /**
   * The user name that will be used to connect to the Azure SQL database. Required on PUT
   * (CreateOrReplace) requests.
   */
  user?: string;
  /**
   * The password that will be used to connect to the Azure SQL database. Required on PUT
   * (CreateOrReplace) requests.
   */
  password?: string;
  /**
   * The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
   */
  table?: string;
}

/**
 * Describes an Azure SQL database output data source.
 */
export interface AzureSqlDatabaseOutputDataSource extends OutputDataSource {
  /**
   * The name of the SQL server containing the Azure SQL database. Required on PUT
   * (CreateOrReplace) requests.
   */
  server?: string;
  /**
   * The name of the Azure SQL database. Required on PUT (CreateOrReplace) requests.
   */
  database?: string;
  /**
   * The user name that will be used to connect to the Azure SQL database. Required on PUT
   * (CreateOrReplace) requests.
   */
  user?: string;
  /**
   * The password that will be used to connect to the Azure SQL database. Required on PUT
   * (CreateOrReplace) requests.
   */
  password?: string;
  /**
   * The name of the table in the Azure SQL database. Required on PUT (CreateOrReplace) requests.
   */
  table?: string;
}

/**
 * Describes an Event Hub output data source.
 */
export interface EventHubOutputDataSource extends OutputDataSource {
  /**
   * The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus
   * Topic, etc. Required on PUT (CreateOrReplace) requests.
   */
  serviceBusNamespace?: string;
  /**
   * The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc.
   * Required on PUT (CreateOrReplace) requests.
   */
  sharedAccessPolicyName?: string;
  /**
   * The shared access policy key for the specified shared access policy. Required on PUT
   * (CreateOrReplace) requests.
   */
  sharedAccessPolicyKey?: string;
  /**
   * The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
   */
  eventHubName?: string;
  /**
   * The key/column that is used to determine to which partition to send event data.
   */
  partitionKey?: string;
}

/**
 * Describes an Azure Table output data source.
 */
export interface AzureTableOutputDataSource extends OutputDataSource {
  /**
   * The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
   */
  accountName?: string;
  /**
   * The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
   */
  accountKey?: string;
  /**
   * The name of the Azure Table. Required on PUT (CreateOrReplace) requests.
   */
  table?: string;
  /**
   * This element indicates the name of a column from the SELECT statement in the query that will
   * be used as the partition key for the Azure Table. Required on PUT (CreateOrReplace) requests.
   */
  partitionKey?: string;
  /**
   * This element indicates the name of a column from the SELECT statement in the query that will
   * be used as the row key for the Azure Table. Required on PUT (CreateOrReplace) requests.
   */
  rowKey?: string;
  /**
   * If specified, each item in the array is the name of a column to remove (if present) from
   * output event entities.
   */
  columnsToRemove?: string[];
  /**
   * The number of rows to write to the Azure Table at a time.
   */
  batchSize?: number;
}

/**
 * The properties that are associated with an Azure Storage account
 */
export interface StorageAccount {
  /**
   * The name of the Azure Storage account. Required on PUT (CreateOrReplace) requests.
   */
  accountName?: string;
  /**
   * The account key for the Azure Storage account. Required on PUT (CreateOrReplace) requests.
   */
  accountKey?: string;
}

/**
 * The properties that are associated with a blob data source.
 */
export interface BlobDataSourceProperties {
  /**
   * A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
   */
  storageAccounts?: StorageAccount[];
  /**
   * The name of a container within the associated Storage account. This container contains either
   * the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
   */
  container?: string;
  /**
   * The blob path pattern. Not a regular expression. It represents a pattern against which blob
   * names will be matched to determine whether or not they should be included as input or output
   * to the job. See
   * https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or
   * https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more
   * detailed explanation and example.
   */
  pathPattern?: string;
  /**
   * The date format. Wherever {date} appears in pathPattern, the value of this property is used as
   * the date format instead.
   */
  dateFormat?: string;
  /**
   * The time format. Wherever {time} appears in pathPattern, the value of this property is used as
   * the time format instead.
   */
  timeFormat?: string;
}

/**
 * Describes a blob output data source.
 */
export interface BlobOutputDataSource extends OutputDataSource {
  /**
   * A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
   */
  storageAccounts?: StorageAccount[];
  /**
   * The name of a container within the associated Storage account. This container contains either
   * the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
   */
  container?: string;
  /**
   * The blob path pattern. Not a regular expression. It represents a pattern against which blob
   * names will be matched to determine whether or not they should be included as input or output
   * to the job. See
   * https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or
   * https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more
   * detailed explanation and example.
   */
  pathPattern?: string;
  /**
   * The date format. Wherever {date} appears in pathPattern, the value of this property is used as
   * the date format instead.
   */
  dateFormat?: string;
  /**
   * The time format. Wherever {time} appears in pathPattern, the value of this property is used as
   * the time format instead.
   */
  timeFormat?: string;
}

/**
 * Describes an input data source that contains reference data.
 */
export interface ReferenceInputDataSource {
  /**
   * Polymorphic Discriminator
   */
  type: string;
}

/**
 * Describes a blob input data source that contains reference data.
 */
export interface BlobReferenceInputDataSource extends ReferenceInputDataSource {
  /**
   * A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
   */
  storageAccounts?: StorageAccount[];
  /**
   * The name of a container within the associated Storage account. This container contains either
   * the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
   */
  container?: string;
  /**
   * The blob path pattern. Not a regular expression. It represents a pattern against which blob
   * names will be matched to determine whether or not they should be included as input or output
   * to the job. See
   * https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or
   * https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more
   * detailed explanation and example.
   */
  pathPattern?: string;
  /**
   * The date format. Wherever {date} appears in pathPattern, the value of this property is used as
   * the date format instead.
   */
  dateFormat?: string;
  /**
   * The time format. Wherever {time} appears in pathPattern, the value of this property is used as
   * the time format instead.
   */
  timeFormat?: string;
}

/**
 * The properties that are associated with an input containing reference data.
 */
export interface ReferenceInputProperties extends InputProperties {
  /**
   * Describes an input data source that contains reference data. Required on PUT (CreateOrReplace)
   * requests.
   */
  datasource?: ReferenceInputDataSource;
}

/**
 * Describes an input data source that contains stream data.
 */
export interface StreamInputDataSource {
  /**
   * Polymorphic Discriminator
   */
  type: string;
}

/**
 * Describes an IoT Hub input data source that contains stream data.
 */
export interface IoTHubStreamInputDataSource extends StreamInputDataSource {
  /**
   * The name or the URI of the IoT Hub. Required on PUT (CreateOrReplace) requests.
   */
  iotHubNamespace?: string;
  /**
   * The shared access policy name for the IoT Hub. This policy must contain at least the Service
   * connect permission. Required on PUT (CreateOrReplace) requests.
   */
  sharedAccessPolicyName?: string;
  /**
   * The shared access policy key for the specified shared access policy. Required on PUT
   * (CreateOrReplace) requests.
   */
  sharedAccessPolicyKey?: string;
  /**
   * The name of an IoT Hub Consumer Group that should be used to read events from the IoT Hub. If
   * not specified, the input uses the Iot Hub’s default consumer group.
   */
  consumerGroupName?: string;
  /**
   * The IoT Hub endpoint to connect to (ie. messages/events, messages/operationsMonitoringEvents,
   * etc.).
   */
  endpoint?: string;
}

/**
 * Describes an Event Hub input data source that contains stream data.
 */
export interface EventHubStreamInputDataSource extends StreamInputDataSource {
  /**
   * The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus
   * Topic, etc. Required on PUT (CreateOrReplace) requests.
   */
  serviceBusNamespace?: string;
  /**
   * The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc.
   * Required on PUT (CreateOrReplace) requests.
   */
  sharedAccessPolicyName?: string;
  /**
   * The shared access policy key for the specified shared access policy. Required on PUT
   * (CreateOrReplace) requests.
   */
  sharedAccessPolicyKey?: string;
  /**
   * The name of the Event Hub. Required on PUT (CreateOrReplace) requests.
   */
  eventHubName?: string;
  /**
   * The name of an Event Hub Consumer Group that should be used to read events from the Event Hub.
   * Specifying distinct consumer group names for multiple inputs allows each of those inputs to
   * receive the same events from the Event Hub. If not specified, the input uses the Event Hub’s
   * default consumer group.
   */
  consumerGroupName?: string;
}

/**
 * Describes a blob input data source that contains stream data.
 */
export interface BlobStreamInputDataSource extends StreamInputDataSource {
  /**
   * A list of one or more Azure Storage accounts. Required on PUT (CreateOrReplace) requests.
   */
  storageAccounts?: StorageAccount[];
  /**
   * The name of a container within the associated Storage account. This container contains either
   * the blob(s) to be read from or written to. Required on PUT (CreateOrReplace) requests.
   */
  container?: string;
  /**
   * The blob path pattern. Not a regular expression. It represents a pattern against which blob
   * names will be matched to determine whether or not they should be included as input or output
   * to the job. See
   * https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-input or
   * https://docs.microsoft.com/en-us/rest/api/streamanalytics/stream-analytics-output for a more
   * detailed explanation and example.
   */
  pathPattern?: string;
  /**
   * The date format. Wherever {date} appears in pathPattern, the value of this property is used as
   * the date format instead.
   */
  dateFormat?: string;
  /**
   * The time format. Wherever {time} appears in pathPattern, the value of this property is used as
   * the time format instead.
   */
  timeFormat?: string;
  /**
   * The partition count of the blob input data source. Range 1 - 256.
   */
  sourcePartitionCount?: number;
}

/**
 * The properties that are associated with an input containing stream data.
 */
export interface StreamInputProperties extends InputProperties {
  /**
   * Describes an input data source that contains stream data. Required on PUT (CreateOrReplace)
   * requests.
   */
  datasource?: StreamInputDataSource;
}

/**
 * Describes the error that occurred.
 */
export interface ErrorResponse {
  /**
   * Error code associated with the error that occurred.
   */
  readonly code?: string;
  /**
   * Describes the error in detail.
   */
  readonly message?: string;
}

/**
 * Describes the status of the test operation along with error information, if applicable.
 */
export interface ResourceTestStatus {
  /**
   * The status of the test operation.
   */
  readonly status?: string;
  /**
   * Describes the error that occurred.
   */
  readonly error?: ErrorResponse;
}

/**
 * Parameters used to specify the type of function to retrieve the default definition for.
 */
export interface FunctionRetrieveDefaultDefinitionParameters {
  /**
   * Polymorphic Discriminator
   */
  bindingType: string;
}

/**
 * The parameters needed to retrieve the default function definition for an Azure Machine Learning
 * web service function.
 */
export interface AzureMachineLearningWebServiceFunctionRetrieveDefaultDefinitionParameters extends FunctionRetrieveDefaultDefinitionParameters {
  /**
   * The Request-Response execute endpoint of the Azure Machine Learning web service. Find out more
   * here:
   * https://docs.microsoft.com/en-us/azure/machine-learning/machine-learning-consume-web-services#request-response-service-rrs
   */
  executeEndpoint?: string;
  /**
   * The function type. Possible values include: 'Scalar'
   */
  udfType?: string;
}

/**
 * The parameters needed to retrieve the default function definition for a JavaScript function.
 */
export interface JavaScriptFunctionRetrieveDefaultDefinitionParameters extends FunctionRetrieveDefaultDefinitionParameters {
  /**
   * The JavaScript code containing a single function definition. For example: 'function (x, y) {
   * return x + y; }'.
   */
  script?: string;
  /**
   * The function type. Possible values include: 'Scalar'
   */
  udfType?: string;
}

/**
 * Describes the current quota for the subscription.
 */
export interface SubscriptionQuota extends SubResource {
  /**
   * The max permitted usage of this resource.
   */
  readonly maxCount?: number;
  /**
   * The current usage of this resource.
   */
  readonly currentCount?: number;
}

/**
 * Result of the GetQuotas operation. It contains a list of quotas for the subscription in a
 * particular region.
 */
export interface SubscriptionQuotasListResult {
  /**
   * List of quotas for the subscription in a particular region.
   */
  readonly value?: SubscriptionQuota[];
}

/**
 * Result of the request to list Stream Analytics operations. It contains a list of operations and
 * a URL link to get the next set of results.
 */
export interface OperationListResult extends Array<Operation> {
  /**
   * URL to get the next set of operation list results if there are any.
   */
  readonly nextLink?: string;
}

/**
 * Object containing a list of streaming jobs.
 */
export interface StreamingJobListResult extends Array<StreamingJob> {
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * Object containing a list of inputs under a streaming job.
 */
export interface InputListResult extends Array<Input> {
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * Object containing a list of outputs under a streaming job.
 */
export interface OutputListResult extends Array<Output> {
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

/**
 * Object containing a list of functions under a streaming job.
 */
export interface FunctionListResult extends Array<FunctionModel> {
  /**
   * The link (url) to the next page of results.
   */
  readonly nextLink?: string;
}

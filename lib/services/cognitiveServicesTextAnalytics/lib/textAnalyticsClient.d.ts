/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClient, ServiceClientOptions, ServiceCallback, HttpOperationResponse, ServiceClientCredentials } from 'ms-rest';
import * as models from "./models";

export default class TextAnalyticsClient extends ServiceClient {
  /**
   * @class
   * Initializes a new instance of the TextAnalyticsClient class.
   * @constructor
   *
   * @param {credentials} credentials - Subscription credentials which uniquely identify client subscription.
   *
   * @param {string} endpoint - Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).
   *
   * @param {object} [options] - The parameter options
   *
   * @param {Array} [options.filters] - Filters to be added to the request pipeline
   *
   * @param {object} [options.requestOptions] - Options for the underlying request object
   * {@link https://github.com/request/request#requestoptions-callback Options doc}
   *
   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
   *
   */
  constructor(credentials: ServiceClientCredentials, endpoint: string, options?: ServiceClientOptions);

  credentials: ServiceClientCredentials;

  endpoint: string;


  /**
   * @summary The API returns the detected language and a numeric score between 0
   * and 1.
   *
   * Scores close to 1 indicate 100% certainty that the identified language is
   * true. A total of 120 languages are supported.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {boolean} [options.showStats] (optional) if set to true, response
   * will contain input and document level statistics.
   *
   * @param {object} [options.languageBatchInput] Collection of documents to
   * analyze.
   *
   * @param {array} [options.languageBatchInput.documents]
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<LanguageBatchResult>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  detectLanguageWithHttpOperationResponse(options?: { showStats? : boolean, languageBatchInput? : models.LanguageBatchInput, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.LanguageBatchResult>>;

  /**
   * @summary The API returns the detected language and a numeric score between 0
   * and 1.
   *
   * Scores close to 1 indicate 100% certainty that the identified language is
   * true. A total of 120 languages are supported.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {boolean} [options.showStats] (optional) if set to true, response
   * will contain input and document level statistics.
   *
   * @param {object} [options.languageBatchInput] Collection of documents to
   * analyze.
   *
   * @param {array} [options.languageBatchInput.documents]
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {LanguageBatchResult} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {LanguageBatchResult} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link LanguageBatchResult} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  detectLanguage(options?: { showStats? : boolean, languageBatchInput? : models.LanguageBatchInput, customHeaders? : { [headerName: string]: string; } }): Promise<models.LanguageBatchResult>;
  detectLanguage(callback: ServiceCallback<models.LanguageBatchResult>): void;
  detectLanguage(options: { showStats? : boolean, languageBatchInput? : models.LanguageBatchInput, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LanguageBatchResult>): void;


  /**
   * @summary The API returns a list of recognized entities in a given document.
   *
   * To get even more information on each recognized entity we recommend using
   * the Bing Entity Search API by querying for the recognized entities names.
   * See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/text-analytics-supported-languages">Supported
   * languages in Text Analytics API</a> for the list of enabled languages.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {boolean} [options.showStats] (optional) if set to true, response
   * will contain input and document level statistics.
   *
   * @param {object} [options.multiLanguageBatchInput] Collection of documents to
   * analyze.
   *
   * @param {array} [options.multiLanguageBatchInput.documents]
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<EntitiesBatchResult>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  entitiesWithHttpOperationResponse(options?: { showStats? : boolean, multiLanguageBatchInput? : models.MultiLanguageBatchInput, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.EntitiesBatchResult>>;

  /**
   * @summary The API returns a list of recognized entities in a given document.
   *
   * To get even more information on each recognized entity we recommend using
   * the Bing Entity Search API by querying for the recognized entities names.
   * See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/text-analytics-supported-languages">Supported
   * languages in Text Analytics API</a> for the list of enabled languages.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {boolean} [options.showStats] (optional) if set to true, response
   * will contain input and document level statistics.
   *
   * @param {object} [options.multiLanguageBatchInput] Collection of documents to
   * analyze.
   *
   * @param {array} [options.multiLanguageBatchInput.documents]
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {EntitiesBatchResult} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {EntitiesBatchResult} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link EntitiesBatchResult} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  entities(options?: { showStats? : boolean, multiLanguageBatchInput? : models.MultiLanguageBatchInput, customHeaders? : { [headerName: string]: string; } }): Promise<models.EntitiesBatchResult>;
  entities(callback: ServiceCallback<models.EntitiesBatchResult>): void;
  entities(options: { showStats? : boolean, multiLanguageBatchInput? : models.MultiLanguageBatchInput, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EntitiesBatchResult>): void;


  /**
   * @summary The API returns a list of strings denoting the key talking points
   * in the input text.
   *
   * See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview#supported-languages">Text
   * Analytics Documentation</a> for details about the languages that are
   * supported by key phrase extraction.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {boolean} [options.showStats] (optional) if set to true, response
   * will contain input and document level statistics.
   *
   * @param {object} [options.multiLanguageBatchInput] Collection of documents to
   * analyze. Documents can now contain a language field to indicate the text
   * language
   *
   * @param {array} [options.multiLanguageBatchInput.documents]
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<KeyPhraseBatchResult>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  keyPhrasesWithHttpOperationResponse(options?: { showStats? : boolean, multiLanguageBatchInput? : models.MultiLanguageBatchInput, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.KeyPhraseBatchResult>>;

  /**
   * @summary The API returns a list of strings denoting the key talking points
   * in the input text.
   *
   * See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview#supported-languages">Text
   * Analytics Documentation</a> for details about the languages that are
   * supported by key phrase extraction.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {boolean} [options.showStats] (optional) if set to true, response
   * will contain input and document level statistics.
   *
   * @param {object} [options.multiLanguageBatchInput] Collection of documents to
   * analyze. Documents can now contain a language field to indicate the text
   * language
   *
   * @param {array} [options.multiLanguageBatchInput.documents]
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {KeyPhraseBatchResult} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {KeyPhraseBatchResult} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link KeyPhraseBatchResult} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  keyPhrases(options?: { showStats? : boolean, multiLanguageBatchInput? : models.MultiLanguageBatchInput, customHeaders? : { [headerName: string]: string; } }): Promise<models.KeyPhraseBatchResult>;
  keyPhrases(callback: ServiceCallback<models.KeyPhraseBatchResult>): void;
  keyPhrases(options: { showStats? : boolean, multiLanguageBatchInput? : models.MultiLanguageBatchInput, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.KeyPhraseBatchResult>): void;


  /**
   * @summary The API returns a numeric score between 0 and 1.
   *
   * Scores close to 1 indicate positive sentiment, while scores close to 0
   * indicate negative sentiment. A score of 0.5 indicates the lack of sentiment
   * (e.g. a factoid statement). See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview#supported-languages">Text
   * Analytics Documentation</a> for details about the languages that are
   * supported by sentiment analysis.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {boolean} [options.showStats] (optional) if set to true, response
   * will contain input and document level statistics.
   *
   * @param {object} [options.multiLanguageBatchInput] Collection of documents to
   * analyze.
   *
   * @param {array} [options.multiLanguageBatchInput.documents]
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<Object>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  sentimentWithHttpOperationResponse(options?: { showStats? : boolean, multiLanguageBatchInput? : models.MultiLanguageBatchInput, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<any>>;

  /**
   * @summary The API returns a numeric score between 0 and 1.
   *
   * Scores close to 1 indicate positive sentiment, while scores close to 0
   * indicate negative sentiment. A score of 0.5 indicates the lack of sentiment
   * (e.g. a factoid statement). See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview#supported-languages">Text
   * Analytics Documentation</a> for details about the languages that are
   * supported by sentiment analysis.
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {boolean} [options.showStats] (optional) if set to true, response
   * will contain input and document level statistics.
   *
   * @param {object} [options.multiLanguageBatchInput] Collection of documents to
   * analyze.
   *
   * @param {array} [options.multiLanguageBatchInput.documents]
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {Object} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {Object} [result]   - The deserialized result object if an error did not occur.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  sentiment(options?: { showStats? : boolean, multiLanguageBatchInput? : models.MultiLanguageBatchInput, customHeaders? : { [headerName: string]: string; } }): Promise<any>;
  sentiment(callback: ServiceCallback<any>): void;
  sentiment(options: { showStats? : boolean, multiLanguageBatchInput? : models.MultiLanguageBatchInput, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<any>): void;
}

export { TextAnalyticsClient, models as TextAnalyticsModels };

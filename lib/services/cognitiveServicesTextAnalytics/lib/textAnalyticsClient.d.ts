/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { ServiceClient, ServiceClientOptions, ServiceCallback, HttpOperationResponse, ServiceClientCredentials } from 'ms-rest';
import * as models from "./models";

export default class TextAnalyticsClient extends ServiceClient {
  /**
   * @class
   * Initializes a new instance of the TextAnalyticsClient class.
   * @constructor
   *
   * @param {credentials} credentials - Subscription credentials which uniquely identify client subscription.
   *
   * @param {string} endpoint - Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).
   *
   * @param {object} [options] - The parameter options
   *
   * @param {Array} [options.filters] - Filters to be added to the request pipeline
   *
   * @param {object} [options.requestOptions] - Options for the underlying request object
   * {@link https://github.com/request/request#requestoptions-callback Options doc}
   *
   * @param {boolean} [options.noRetryPolicy] - If set to true, turn off default retry policy
   *
   */
  constructor(credentials: ServiceClientCredentials, endpoint: string, options?: ServiceClientOptions);

  credentials: ServiceClientCredentials;

  endpoint: string;


  /**
   * @summary The API returns a list of strings denoting the key talking points
   * in the input text.
   *
   * See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview#supported-languages">Text
   * Analytics Documentation</a> for details about the languages that are
   * supported by key phrase extraction.
   *
   * @param {object} input Collection of documents to analyze. Documents can now
   * contain a language field to indicate the text language
   *
   * @param {array} [input.documents]
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<KeyPhraseBatchResult>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  keyPhrasesWithHttpOperationResponse(input: models.MultiLanguageBatchInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.KeyPhraseBatchResult>>;

  /**
   * @summary The API returns a list of strings denoting the key talking points
   * in the input text.
   *
   * See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview#supported-languages">Text
   * Analytics Documentation</a> for details about the languages that are
   * supported by key phrase extraction.
   *
   * @param {object} input Collection of documents to analyze. Documents can now
   * contain a language field to indicate the text language
   *
   * @param {array} [input.documents]
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {KeyPhraseBatchResult} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {KeyPhraseBatchResult} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link KeyPhraseBatchResult} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  keyPhrases(input: models.MultiLanguageBatchInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.KeyPhraseBatchResult>;
  keyPhrases(input: models.MultiLanguageBatchInput, callback: ServiceCallback<models.KeyPhraseBatchResult>): void;
  keyPhrases(input: models.MultiLanguageBatchInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.KeyPhraseBatchResult>): void;


  /**
   * @summary The API returns the detected language and a numeric score between 0
   * and 1.
   *
   * Scores close to 1 indicate 100% certainty that the identified language is
   * true. A total of 120 languages are supported.
   *
   * @param {object} input Collection of documents to analyze.
   *
   * @param {array} [input.documents]
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<LanguageBatchResult>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  detectLanguageWithHttpOperationResponse(input: models.BatchInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.LanguageBatchResult>>;

  /**
   * @summary The API returns the detected language and a numeric score between 0
   * and 1.
   *
   * Scores close to 1 indicate 100% certainty that the identified language is
   * true. A total of 120 languages are supported.
   *
   * @param {object} input Collection of documents to analyze.
   *
   * @param {array} [input.documents]
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {LanguageBatchResult} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {LanguageBatchResult} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link LanguageBatchResult} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  detectLanguage(input: models.BatchInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.LanguageBatchResult>;
  detectLanguage(input: models.BatchInput, callback: ServiceCallback<models.LanguageBatchResult>): void;
  detectLanguage(input: models.BatchInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.LanguageBatchResult>): void;


  /**
   * @summary The API returns a numeric score between 0 and 1.
   *
   * Scores close to 1 indicate positive sentiment, while scores close to 0
   * indicate negative sentiment. A score of 0.5 indicates the lack of sentiment
   * (e.g. a factoid statement). See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview#supported-languages">Text
   * Analytics Documentation</a> for details about the languages that are
   * supported by sentiment analysis.
   *
   * @param {object} input Collection of documents to analyze.
   *
   * @param {array} [input.documents]
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<SentimentBatchResult>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  sentimentWithHttpOperationResponse(input: models.MultiLanguageBatchInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.SentimentBatchResult>>;

  /**
   * @summary The API returns a numeric score between 0 and 1.
   *
   * Scores close to 1 indicate positive sentiment, while scores close to 0
   * indicate negative sentiment. A score of 0.5 indicates the lack of sentiment
   * (e.g. a factoid statement). See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/overview#supported-languages">Text
   * Analytics Documentation</a> for details about the languages that are
   * supported by sentiment analysis.
   *
   * @param {object} input Collection of documents to analyze.
   *
   * @param {array} [input.documents]
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {SentimentBatchResult} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {SentimentBatchResult} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link SentimentBatchResult} for more information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  sentiment(input: models.MultiLanguageBatchInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.SentimentBatchResult>;
  sentiment(input: models.MultiLanguageBatchInput, callback: ServiceCallback<models.SentimentBatchResult>): void;
  sentiment(input: models.MultiLanguageBatchInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.SentimentBatchResult>): void;


  /**
   * @summary The API returns a list of recognized entities in a given document.
   *
   * The API returns a list of recognized entities in a given document. To get
   * even more information on each recognized entity we recommend using the Bing
   * Entity Search API by querying for the recognized entities names. See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/text-analytics-supported-languages">Supported
   * languages in Text Analytics API</a> for the list of enabled languages.The
   * API returns a list of known entities and general named entities ("Person",
   * "Location", "Organization" etc) in a given document. Known entities are
   * returned with Wikipedia Id and Wikipedia link, and also Bing Id which can be
   * used in Bing Entity Search API. General named entities are returned with
   * entity types. If a general named entity is also a known entity, then all
   * information regarding it (Wikipedia Id, Bing Id, entity type etc) will be
   * returned. See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/how-tos/text-analytics-how-to-entity-linking#supported-types-for-named-entity-recognition">Supported
   * Entity Types in Text Analytics API</a> for the list of supported Entity
   * Types. See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/text-analytics-supported-languages">Supported
   * languages in Text Analytics API</a> for the list of enabled languages.
   *
   * @param {object} input Collection of documents to analyze.
   *
   * @param {array} [input.documents]
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @returns {Promise} A promise is returned
   *
   * @resolve {HttpOperationResponse<EntitiesBatchResultV2dot1>} - The deserialized result object.
   *
   * @reject {Error|ServiceError} - The error object.
   */
  entitiesWithHttpOperationResponse(input: models.MultiLanguageBatchInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.EntitiesBatchResultV2dot1>>;

  /**
   * @summary The API returns a list of recognized entities in a given document.
   *
   * The API returns a list of recognized entities in a given document. To get
   * even more information on each recognized entity we recommend using the Bing
   * Entity Search API by querying for the recognized entities names. See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/text-analytics-supported-languages">Supported
   * languages in Text Analytics API</a> for the list of enabled languages.The
   * API returns a list of known entities and general named entities ("Person",
   * "Location", "Organization" etc) in a given document. Known entities are
   * returned with Wikipedia Id and Wikipedia link, and also Bing Id which can be
   * used in Bing Entity Search API. General named entities are returned with
   * entity types. If a general named entity is also a known entity, then all
   * information regarding it (Wikipedia Id, Bing Id, entity type etc) will be
   * returned. See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/how-tos/text-analytics-how-to-entity-linking#supported-types-for-named-entity-recognition">Supported
   * Entity Types in Text Analytics API</a> for the list of supported Entity
   * Types. See the <a
   * href="https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/text-analytics-supported-languages">Supported
   * languages in Text Analytics API</a> for the list of enabled languages.
   *
   * @param {object} input Collection of documents to analyze.
   *
   * @param {array} [input.documents]
   *
   * @param {object} [options] Optional Parameters.
   *
   * @param {object} [options.customHeaders] Headers that will be added to the
   * request
   *
   * @param {ServiceCallback} [optionalCallback] - The optional callback.
   *
   * @returns {ServiceCallback|Promise} If a callback was passed as the last
   * parameter then it returns the callback else returns a Promise.
   *
   * {Promise} A promise is returned.
   *
   *                      @resolve {EntitiesBatchResultV2dot1} - The deserialized result object.
   *
   *                      @reject {Error|ServiceError} - The error object.
   *
   * {ServiceCallback} optionalCallback(err, result, request, response)
   *
   *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
   *
   *                      {EntitiesBatchResultV2dot1} [result]   - The deserialized result object if an error did not occur.
   *                      See {@link EntitiesBatchResultV2dot1} for more
   *                      information.
   *
   *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
   *
   *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
   */
  entities(input: models.MultiLanguageBatchInput, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.EntitiesBatchResultV2dot1>;
  entities(input: models.MultiLanguageBatchInput, callback: ServiceCallback<models.EntitiesBatchResultV2dot1>): void;
  entities(input: models.MultiLanguageBatchInput, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.EntitiesBatchResultV2dot1>): void;
}

export { TextAnalyticsClient, models as TextAnalyticsModels };

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the SoaRecord class.
 * @constructor
 * An SOA record.
 *
 * @member {string} [host] The domain name of the authoritative name server for
 * this SOA record.
 *
 * @member {string} [email] The email contact for this SOA record.
 *
 * @member {number} [serialNumber] The serial number for this SOA record.
 *
 * @member {number} [refreshTime] The refresh value for this SOA record.
 *
 * @member {number} [retryTime] The retry time for this SOA record.
 *
 * @member {number} [expireTime] The expire time for this SOA record.
 *
 * @member {number} [minimumTtl] The minimum value for this SOA record. By
 * convention this is used to determine the negative caching duration.
 *
 */
class SoaRecord {
  constructor() {
  }

  /**
   * Defines the metadata of SoaRecord
   *
   * @returns {object} metadata of SoaRecord
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SoaRecord',
      type: {
        name: 'Composite',
        className: 'SoaRecord',
        modelProperties: {
          host: {
            required: false,
            serializedName: 'host',
            type: {
              name: 'String'
            }
          },
          email: {
            required: false,
            serializedName: 'email',
            type: {
              name: 'String'
            }
          },
          serialNumber: {
            required: false,
            serializedName: 'serialNumber',
            type: {
              name: 'Number'
            }
          },
          refreshTime: {
            required: false,
            serializedName: 'refreshTime',
            type: {
              name: 'Number'
            }
          },
          retryTime: {
            required: false,
            serializedName: 'retryTime',
            type: {
              name: 'Number'
            }
          },
          expireTime: {
            required: false,
            serializedName: 'expireTime',
            type: {
              name: 'Number'
            }
          },
          minimumTtl: {
            required: false,
            serializedName: 'minimumTTL',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = SoaRecord;

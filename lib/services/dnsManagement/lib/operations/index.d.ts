/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * RecordSets
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the DnsManagementClient.
 */
export interface RecordSets {

    /**
     * Updates a RecordSet within a DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {string} zoneName The name of the zone without a terminating dot.
     * 
     * @param {string} relativeRecordSetName The name of the RecordSet, relative
     * to the name of the zone.
     * 
     * @param {string} recordType The type of DNS record. Possible values include:
     * 'A', 'AAAA', 'CNAME', 'MX', 'NS', 'PTR', 'SOA', 'SRV', 'TXT'
     * 
     * @param {object} parameters Parameters supplied to the Update operation.
     * 
     * @param {string} [parameters.id] Gets or sets the ID of the resource.
     * 
     * @param {string} [parameters.name] Gets or sets the name of the resource.
     * 
     * @param {string} [parameters.type] Gets or sets the type of the resource.
     * 
     * @param {string} [parameters.etag] Gets or sets the ETag of the RecordSet.
     * 
     * @param {object} [parameters.metadata] Gets or sets the metadata attached to
     * the resource.
     * 
     * @param {number} [parameters.tTL] Gets or sets the TTL of the records in the
     * RecordSet.
     * 
     * @param {array} [parameters.aRecords] Gets or sets the list of A records in
     * the RecordSet.
     * 
     * @param {array} [parameters.aaaaRecords] Gets or sets the list of AAAA
     * records in the RecordSet.
     * 
     * @param {array} [parameters.mxRecords] Gets or sets the list of MX records
     * in the RecordSet.
     * 
     * @param {array} [parameters.nsRecords] Gets or sets the list of NS records
     * in the RecordSet.
     * 
     * @param {array} [parameters.ptrRecords] Gets or sets the list of PTR records
     * in the RecordSet.
     * 
     * @param {array} [parameters.srvRecords] Gets or sets the list of SRV records
     * in the RecordSet.
     * 
     * @param {array} [parameters.txtRecords] Gets or sets the list of TXT records
     * in the RecordSet.
     * 
     * @param {object} [parameters.cnameRecord] Gets or sets the CNAME record in
     * the RecordSet.
     * 
     * @param {string} [parameters.cnameRecord.cname] Gets or sets the canonical
     * name for this record without a terminating dot.
     * 
     * @param {object} [parameters.soaRecord] Gets or sets the SOA record in the
     * RecordSet.
     * 
     * @param {string} [parameters.soaRecord.host] Gets or sets the domain name of
     * the authoritative name server, without a temrinating dot.
     * 
     * @param {string} [parameters.soaRecord.email] Gets or sets the email for
     * this record.
     * 
     * @param {number} [parameters.soaRecord.serialNumber] Gets or sets the serial
     * number for this record.
     * 
     * @param {number} [parameters.soaRecord.refreshTime] Gets or sets the refresh
     * value for this record.
     * 
     * @param {number} [parameters.soaRecord.retryTime] Gets or sets the retry
     * time for this record.
     * 
     * @param {number} [parameters.soaRecord.expireTime] Gets or sets the expire
     * time for this record.
     * 
     * @param {number} [parameters.soaRecord.minimumTtl] Gets or sets the minimum
     * TTL value for this record.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.ifMatch] The etag of Zone.
     * 
     * @param {string} [options.ifNoneMatch] Defines the If-None-Match condition.
     * Set to '*' to force Create-If-Not-Exist. Other values will be ignored.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    update(resourceGroupName: string, zoneName: string, relativeRecordSetName: string, recordType: string, parameters: models.RecordSet, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecordSet>): void;
    update(resourceGroupName: string, zoneName: string, relativeRecordSetName: string, recordType: string, parameters: models.RecordSet, callback: ServiceCallback<models.RecordSet>): void;

    /**
     * Creates or Updates a RecordSet within a DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {string} zoneName The name of the zone without a terminating dot.
     * 
     * @param {string} relativeRecordSetName The name of the RecordSet, relative
     * to the name of the zone.
     * 
     * @param {string} recordType The type of DNS record. Possible values include:
     * 'A', 'AAAA', 'CNAME', 'MX', 'NS', 'PTR', 'SOA', 'SRV', 'TXT'
     * 
     * @param {object} parameters Parameters supplied to the CreateOrUpdate
     * operation.
     * 
     * @param {string} [parameters.id] Gets or sets the ID of the resource.
     * 
     * @param {string} [parameters.name] Gets or sets the name of the resource.
     * 
     * @param {string} [parameters.type] Gets or sets the type of the resource.
     * 
     * @param {string} [parameters.etag] Gets or sets the ETag of the RecordSet.
     * 
     * @param {object} [parameters.metadata] Gets or sets the metadata attached to
     * the resource.
     * 
     * @param {number} [parameters.tTL] Gets or sets the TTL of the records in the
     * RecordSet.
     * 
     * @param {array} [parameters.aRecords] Gets or sets the list of A records in
     * the RecordSet.
     * 
     * @param {array} [parameters.aaaaRecords] Gets or sets the list of AAAA
     * records in the RecordSet.
     * 
     * @param {array} [parameters.mxRecords] Gets or sets the list of MX records
     * in the RecordSet.
     * 
     * @param {array} [parameters.nsRecords] Gets or sets the list of NS records
     * in the RecordSet.
     * 
     * @param {array} [parameters.ptrRecords] Gets or sets the list of PTR records
     * in the RecordSet.
     * 
     * @param {array} [parameters.srvRecords] Gets or sets the list of SRV records
     * in the RecordSet.
     * 
     * @param {array} [parameters.txtRecords] Gets or sets the list of TXT records
     * in the RecordSet.
     * 
     * @param {object} [parameters.cnameRecord] Gets or sets the CNAME record in
     * the RecordSet.
     * 
     * @param {string} [parameters.cnameRecord.cname] Gets or sets the canonical
     * name for this record without a terminating dot.
     * 
     * @param {object} [parameters.soaRecord] Gets or sets the SOA record in the
     * RecordSet.
     * 
     * @param {string} [parameters.soaRecord.host] Gets or sets the domain name of
     * the authoritative name server, without a temrinating dot.
     * 
     * @param {string} [parameters.soaRecord.email] Gets or sets the email for
     * this record.
     * 
     * @param {number} [parameters.soaRecord.serialNumber] Gets or sets the serial
     * number for this record.
     * 
     * @param {number} [parameters.soaRecord.refreshTime] Gets or sets the refresh
     * value for this record.
     * 
     * @param {number} [parameters.soaRecord.retryTime] Gets or sets the retry
     * time for this record.
     * 
     * @param {number} [parameters.soaRecord.expireTime] Gets or sets the expire
     * time for this record.
     * 
     * @param {number} [parameters.soaRecord.minimumTtl] Gets or sets the minimum
     * TTL value for this record.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.ifMatch] The etag of Recordset.
     * 
     * @param {string} [options.ifNoneMatch] Defines the If-None-Match condition.
     * Set to '*' to force Create-If-Not-Exist. Other values will be ignored.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    createOrUpdate(resourceGroupName: string, zoneName: string, relativeRecordSetName: string, recordType: string, parameters: models.RecordSet, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecordSet>): void;
    createOrUpdate(resourceGroupName: string, zoneName: string, relativeRecordSetName: string, recordType: string, parameters: models.RecordSet, callback: ServiceCallback<models.RecordSet>): void;

    /**
     * Removes a RecordSet from a DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {string} zoneName The name of the zone without a terminating dot.
     * 
     * @param {string} relativeRecordSetName The name of the RecordSet, relative
     * to the name of the zone.
     * 
     * @param {string} recordType The type of DNS record. Possible values include:
     * 'A', 'AAAA', 'CNAME', 'MX', 'NS', 'PTR', 'SOA', 'SRV', 'TXT'
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.ifMatch] Defines the If-Match condition. The
     * delete operation will be performed only if the ETag of the zone on the
     * server matches this value.
     * 
     * @param {string} [options.ifNoneMatch] Defines the If-None-Match condition.
     * The delete operation will be performed only if the ETag of the zone on the
     * server does not match this value.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(resourceGroupName: string, zoneName: string, relativeRecordSetName: string, recordType: string, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, zoneName: string, relativeRecordSetName: string, recordType: string, callback: ServiceCallback<void>): void;

    /**
     * Gets a RecordSet.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {string} zoneName The name of the zone without a terminating dot.
     * 
     * @param {string} relativeRecordSetName The name of the RecordSet, relative
     * to the name of the zone.
     * 
     * @param {string} recordType The type of DNS record. Possible values include:
     * 'A', 'AAAA', 'CNAME', 'MX', 'NS', 'PTR', 'SOA', 'SRV', 'TXT'
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceGroupName: string, zoneName: string, relativeRecordSetName: string, recordType: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecordSet>): void;
    get(resourceGroupName: string, zoneName: string, relativeRecordSetName: string, recordType: string, callback: ServiceCallback<models.RecordSet>): void;

    /**
     * Lists the RecordSets of a specified type in a DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the zone.
     * 
     * @param {string} zoneName The name of the zone from which to enumerate
     * RecordsSets.
     * 
     * @param {string} recordType The type of record sets to enumerate. Possible
     * values include: 'A', 'AAAA', 'CNAME', 'MX', 'NS', 'PTR', 'SOA', 'SRV',
     * 'TXT'
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {number} [options.top] Query parameters. If not specified returns
     * the default number of recordsets.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByType(resourceGroupName: string, zoneName: string, recordType: string, options: { top? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecordSetListResult>): void;
    listByType(resourceGroupName: string, zoneName: string, recordType: string, callback: ServiceCallback<models.RecordSetListResult>): void;

    /**
     * Lists all RecordSets in a DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the zone.
     * 
     * @param {string} zoneName The name of the zone from which to enumerate
     * RecordSets.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {number} [options.top] Query parameters. If not specified returns
     * the default number of zones.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByDnsZone(resourceGroupName: string, zoneName: string, options: { top? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecordSetListResult>): void;
    listByDnsZone(resourceGroupName: string, zoneName: string, callback: ServiceCallback<models.RecordSetListResult>): void;

    /**
     * Lists the RecordSets of a specified type in a DNS zone.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByTypeNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecordSetListResult>): void;
    listByTypeNext(nextPageLink: string, callback: ServiceCallback<models.RecordSetListResult>): void;

    /**
     * Lists all RecordSets in a DNS zone.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByDnsZoneNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.RecordSetListResult>): void;
    listByDnsZoneNext(nextPageLink: string, callback: ServiceCallback<models.RecordSetListResult>): void;
}

/**
 * @class
 * Zones
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the DnsManagementClient.
 */
export interface Zones {

    /**
     * Creates or Updates a DNS zone within a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {string} zoneName The name of the zone without a terminating dot.
     * 
     * @param {object} parameters Parameters supplied to the CreateOrUpdate
     * operation.
     * 
     * @param {string} [parameters.etag] Gets or sets the ETag of the zone that is
     * being updated, as received from a Get operation.
     * 
     * @param {number} [parameters.maxNumberOfRecordSets] Gets or sets the maximum
     * number of record sets that can be created in this zone.
     * 
     * @param {number} [parameters.numberOfRecordSets] Gets or sets the current
     * number of record sets in this zone.
     * 
     * @param {string} parameters.location Resource location
     * 
     * @param {object} [parameters.tags] Resource tags
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.ifMatch] The etag of Zone.
     * 
     * @param {string} [options.ifNoneMatch] Defines the If-None-Match condition.
     * Set to '*' to force Create-If-Not-Exist. Other values will be ignored.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    createOrUpdate(resourceGroupName: string, zoneName: string, parameters: models.Zone, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Zone>): void;
    createOrUpdate(resourceGroupName: string, zoneName: string, parameters: models.Zone, callback: ServiceCallback<models.Zone>): void;

    /**
     * Removes a DNS zone from a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {string} zoneName The name of the zone without a terminating dot.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.ifMatch] Defines the If-Match condition. The
     * delete operation will be performed only if the ETag of the zone on the
     * server matches this value.
     * 
     * @param {string} [options.ifNoneMatch] Defines the If-None-Match condition.
     * The delete operation will be performed only if the ETag of the zone on the
     * server does not match this value.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    deleteMethod(resourceGroupName: string, zoneName: string, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ZoneDeleteResult>): void;
    deleteMethod(resourceGroupName: string, zoneName: string, callback: ServiceCallback<models.ZoneDeleteResult>): void;

    /**
     * Removes a DNS zone from a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {string} zoneName The name of the zone without a terminating dot.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.ifMatch] Defines the If-Match condition. The
     * delete operation will be performed only if the ETag of the zone on the
     * server matches this value.
     * 
     * @param {string} [options.ifNoneMatch] Defines the If-None-Match condition.
     * The delete operation will be performed only if the ETag of the zone on the
     * server does not match this value.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    beginDeleteMethod(resourceGroupName: string, zoneName: string, options: { ifMatch? : string, ifNoneMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ZoneDeleteResult>): void;
    beginDeleteMethod(resourceGroupName: string, zoneName: string, callback: ServiceCallback<models.ZoneDeleteResult>): void;

    /**
     * Gets a DNS zone.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {string} zoneName The name of the zone without a terminating dot.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(resourceGroupName: string, zoneName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Zone>): void;
    get(resourceGroupName: string, zoneName: string, callback: ServiceCallback<models.Zone>): void;

    /**
     * Lists the DNS zones within a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {number} [options.top] Query parameters. If not specified returns
     * the default number of zones.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByResourceGroup(resourceGroupName: string, options: { top? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ZoneListResult>): void;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.ZoneListResult>): void;

    /**
     * Lists the DNS zones within subscription.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {number} [options.top] Query parameters. If not specified returns
     * the default number of zones.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(options: { top? : number, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ZoneListResult>): void;
    list(callback: ServiceCallback<models.ZoneListResult>): void;

    /**
     * Lists the DNS zones within a resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ZoneListResult>): void;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.ZoneListResult>): void;

    /**
     * Lists the DNS zones within subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ZoneListResult>): void;
    listNext(nextPageLink: string, callback: ServiceCallback<models.ZoneListResult>): void;
}

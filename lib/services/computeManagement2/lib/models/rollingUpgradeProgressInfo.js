/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Information about the number of virtual machine instances in each upgrade
 * state.
 *
 */
class RollingUpgradeProgressInfo {
  /**
   * Create a RollingUpgradeProgressInfo.
   * @member {number} [successfulInstanceCount] The number of instances that
   * have been successfully upgraded.
   * @member {number} [failedInstanceCount] The number of instances that have
   * failed to be upgraded successfully.
   * @member {number} [inProgressInstanceCount] The number of instances that
   * are currently being upgraded.
   * @member {number} [pendingInstanceCount] The number of instances that have
   * not yet begun to be upgraded.
   */
  constructor() {
  }

  /**
   * Defines the metadata of RollingUpgradeProgressInfo
   *
   * @returns {object} metadata of RollingUpgradeProgressInfo
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RollingUpgradeProgressInfo',
      type: {
        name: 'Composite',
        className: 'RollingUpgradeProgressInfo',
        modelProperties: {
          successfulInstanceCount: {
            required: false,
            readOnly: true,
            serializedName: 'successfulInstanceCount',
            type: {
              name: 'Number'
            }
          },
          failedInstanceCount: {
            required: false,
            readOnly: true,
            serializedName: 'failedInstanceCount',
            type: {
              name: 'Number'
            }
          },
          inProgressInstanceCount: {
            required: false,
            readOnly: true,
            serializedName: 'inProgressInstanceCount',
            type: {
              name: 'Number'
            }
          },
          pendingInstanceCount: {
            required: false,
            readOnly: true,
            serializedName: 'pendingInstanceCount',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = RollingUpgradeProgressInfo;

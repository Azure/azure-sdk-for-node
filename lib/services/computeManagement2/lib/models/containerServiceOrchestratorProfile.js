/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the ContainerServiceOrchestratorProfile class.
 * @constructor
 * Profile for the container service orchestrator.
 *
 * @member {string} orchestratorType The orchestrator to use to manage
 * container service cluster resources. Valid values are Swarm, DCOS, and
 * Custom. Possible values include: 'Swarm', 'DCOS', 'Custom', 'Kubernetes'
 *
 */
class ContainerServiceOrchestratorProfile {
  constructor() {
  }

  /**
   * Defines the metadata of ContainerServiceOrchestratorProfile
   *
   * @returns {object} metadata of ContainerServiceOrchestratorProfile
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ContainerServiceOrchestratorProfile',
      type: {
        name: 'Composite',
        className: 'ContainerServiceOrchestratorProfile',
        modelProperties: {
          orchestratorType: {
            required: true,
            serializedName: 'orchestratorType',
            type: {
              name: 'Enum',
              allowedValues: [ 'Swarm', 'DCOS', 'Custom', 'Kubernetes' ]
            }
          }
        }
      }
    };
  }
}

module.exports = ContainerServiceOrchestratorProfile;

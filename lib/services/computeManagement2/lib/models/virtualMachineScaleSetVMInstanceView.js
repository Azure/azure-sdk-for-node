/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The instance view of a virtual machine scale set VM.
 *
 */
class VirtualMachineScaleSetVMInstanceView {
  /**
   * Create a VirtualMachineScaleSetVMInstanceView.
   * @property {number} [platformUpdateDomain] The Update Domain count.
   * @property {number} [platformFaultDomain] The Fault Domain count.
   * @property {string} [rdpThumbPrint] The Remote desktop certificate
   * thumbprint.
   * @property {object} [vmAgent] The VM Agent running on the virtual machine.
   * @property {string} [vmAgent.vmAgentVersion] The VM Agent full version.
   * @property {array} [vmAgent.extensionHandlers] The virtual machine
   * extension handler instance view.
   * @property {array} [vmAgent.statuses] The resource status information.
   * @property {object} [maintenanceRedeployStatus] The Maintenance Operation
   * status on the virtual machine.
   * @property {boolean}
   * [maintenanceRedeployStatus.isCustomerInitiatedMaintenanceAllowed] True, if
   * customer is allowed to perform Maintenance.
   * @property {date} [maintenanceRedeployStatus.preMaintenanceWindowStartTime]
   * Start Time for the Pre Maintenance Window.
   * @property {date} [maintenanceRedeployStatus.preMaintenanceWindowEndTime]
   * End Time for the Pre Maintenance Window.
   * @property {date} [maintenanceRedeployStatus.maintenanceWindowStartTime]
   * Start Time for the Maintenance Window.
   * @property {date} [maintenanceRedeployStatus.maintenanceWindowEndTime] End
   * Time for the Maintenance Window.
   * @property {string} [maintenanceRedeployStatus.lastOperationResultCode] The
   * Last Maintenance Operation Result Code. Possible values include: 'None',
   * 'RetryLater', 'MaintenanceAborted', 'MaintenanceCompleted'
   * @property {string} [maintenanceRedeployStatus.lastOperationMessage]
   * Message returned for the last Maintenance Operation.
   * @property {array} [disks] The disks information.
   * @property {array} [extensions] The extensions information.
   * @property {object} [vmHealth] The health status for the VM.
   * @property {object} [vmHealth.status] The health status information for the
   * VM.
   * @property {string} [vmHealth.status.code] The status code.
   * @property {string} [vmHealth.status.level] The level code. Possible values
   * include: 'Info', 'Warning', 'Error'
   * @property {string} [vmHealth.status.displayStatus] The short localizable
   * label for the status.
   * @property {string} [vmHealth.status.message] The detailed status message,
   * including for alerts and error messages.
   * @property {date} [vmHealth.status.time] The time of the status.
   * @property {object} [bootDiagnostics] Boot Diagnostics is a debugging
   * feature which allows you to view Console Output and Screenshot to diagnose
   * VM status. <br><br> You can easily view the output of your console log.
   * <br><br> Azure also enables you to see a screenshot of the VM from the
   * hypervisor.
   * @property {string} [bootDiagnostics.consoleScreenshotBlobUri] The console
   * screenshot blob URI.
   * @property {string} [bootDiagnostics.serialConsoleLogBlobUri] The Linux
   * serial console log blob Uri.
   * @property {object} [bootDiagnostics.status] The boot diagnostics status
   * information for the VM. <br><br> NOTE: It will be set only if there are
   * errors encountered in enabling boot diagnostics.
   * @property {string} [bootDiagnostics.status.code] The status code.
   * @property {string} [bootDiagnostics.status.level] The level code. Possible
   * values include: 'Info', 'Warning', 'Error'
   * @property {string} [bootDiagnostics.status.displayStatus] The short
   * localizable label for the status.
   * @property {string} [bootDiagnostics.status.message] The detailed status
   * message, including for alerts and error messages.
   * @property {date} [bootDiagnostics.status.time] The time of the status.
   * @property {array} [statuses] The resource status information.
   * @property {string} [placementGroupId] The placement group in which the VM
   * is running. If the VM is deallocated it will not have a placementGroupId.
   */
  constructor() {
  }

  /**
   * Defines the metadata of VirtualMachineScaleSetVMInstanceView
   *
   * @returns {object} metadata of VirtualMachineScaleSetVMInstanceView
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VirtualMachineScaleSetVMInstanceView',
      type: {
        name: 'Composite',
        className: 'VirtualMachineScaleSetVMInstanceView',
        modelProperties: {
          platformUpdateDomain: {
            required: false,
            serializedName: 'platformUpdateDomain',
            type: {
              name: 'Number'
            }
          },
          platformFaultDomain: {
            required: false,
            serializedName: 'platformFaultDomain',
            type: {
              name: 'Number'
            }
          },
          rdpThumbPrint: {
            required: false,
            serializedName: 'rdpThumbPrint',
            type: {
              name: 'String'
            }
          },
          vmAgent: {
            required: false,
            serializedName: 'vmAgent',
            type: {
              name: 'Composite',
              className: 'VirtualMachineAgentInstanceView'
            }
          },
          maintenanceRedeployStatus: {
            required: false,
            serializedName: 'maintenanceRedeployStatus',
            type: {
              name: 'Composite',
              className: 'MaintenanceRedeployStatus'
            }
          },
          disks: {
            required: false,
            serializedName: 'disks',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'DiskInstanceViewElementType',
                  type: {
                    name: 'Composite',
                    className: 'DiskInstanceView'
                  }
              }
            }
          },
          extensions: {
            required: false,
            serializedName: 'extensions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'VirtualMachineExtensionInstanceViewElementType',
                  type: {
                    name: 'Composite',
                    className: 'VirtualMachineExtensionInstanceView'
                  }
              }
            }
          },
          vmHealth: {
            required: false,
            readOnly: true,
            serializedName: 'vmHealth',
            type: {
              name: 'Composite',
              className: 'VirtualMachineHealthStatus'
            }
          },
          bootDiagnostics: {
            required: false,
            serializedName: 'bootDiagnostics',
            type: {
              name: 'Composite',
              className: 'BootDiagnosticsInstanceView'
            }
          },
          statuses: {
            required: false,
            serializedName: 'statuses',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'InstanceViewStatusElementType',
                  type: {
                    name: 'Composite',
                    className: 'InstanceViewStatus'
                  }
              }
            }
          },
          placementGroupId: {
            required: false,
            serializedName: 'placementGroupId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = VirtualMachineScaleSetVMInstanceView;

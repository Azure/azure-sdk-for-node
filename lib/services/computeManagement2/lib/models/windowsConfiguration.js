/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Specifies Windows operating system settings on the virtual machine.
 *
 */
class WindowsConfiguration {
  /**
   * Create a WindowsConfiguration.
   * @member {boolean} [provisionVMAgent] Indicates whether virtual machine
   * agent should be provisioned on the virtual machine. <br><br> When this
   * property is not specified in the request body, default behavior is to set
   * it to true.  This will ensure that VM Agent is installed on the VM so that
   * extensions can be added to the VM later.
   * @member {boolean} [enableAutomaticUpdates] Indicates whether virtual
   * machine is enabled for automatic updates.
   * @member {string} [timeZone] Specifies the time zone of the virtual
   * machine. e.g. "Pacific Standard Time"
   * @member {array} [additionalUnattendContent] Specifies additional base-64
   * encoded XML formatted information that can be included in the Unattend.xml
   * file, which is used by Windows Setup.
   * @member {object} [winRM] Specifies the Windows Remote Management
   * listeners. This enables remote Windows PowerShell.
   * @member {array} [winRM.listeners] The list of Windows Remote Management
   * listeners
   */
  constructor() {
  }

  /**
   * Defines the metadata of WindowsConfiguration
   *
   * @returns {object} metadata of WindowsConfiguration
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'WindowsConfiguration',
      type: {
        name: 'Composite',
        className: 'WindowsConfiguration',
        modelProperties: {
          provisionVMAgent: {
            required: false,
            serializedName: 'provisionVMAgent',
            type: {
              name: 'Boolean'
            }
          },
          enableAutomaticUpdates: {
            required: false,
            serializedName: 'enableAutomaticUpdates',
            type: {
              name: 'Boolean'
            }
          },
          timeZone: {
            required: false,
            serializedName: 'timeZone',
            type: {
              name: 'String'
            }
          },
          additionalUnattendContent: {
            required: false,
            serializedName: 'additionalUnattendContent',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'AdditionalUnattendContentElementType',
                  type: {
                    name: 'Composite',
                    className: 'AdditionalUnattendContent'
                  }
              }
            }
          },
          winRM: {
            required: false,
            serializedName: 'winRM',
            type: {
              name: 'Composite',
              className: 'WinRMConfiguration'
            }
          }
        }
      }
    };
  }
}

module.exports = WindowsConfiguration;

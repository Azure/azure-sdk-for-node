/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the ResourceSku class.
 * @constructor
 * Describes an available Compute SKU.
 *
 * @member {string} [resourceType] The type of resource the SKU applies to.
 *
 * @member {string} [name] The name of SKU.
 *
 * @member {string} [tier] The tier of this particular SKU.
 *
 * @member {string} [size] The Size of the SKU.
 *
 * @member {string} [family] The Family of this particular SKU.
 *
 * @member {string} [kind] The Kind of resources that are supported in this
 * SKU.
 *
 * @member {object} [capacity] Available scaling information.
 *
 * @member {number} [capacity.minimum] The minimum capacity.
 *
 * @member {number} [capacity.maximum] The maximum capacity that can be set.
 *
 * @member {number} [capacity.default] The default capacity.
 *
 * @member {string} [capacity.scaleType] The scale type applicable to the sku.
 * Possible values include: 'Automatic', 'Manual', 'None'
 *
 * @member {array} [locations] The set of locations that the SKU is available.
 *
 * @member {array} [apiVersions] The api versions that support this SKU.
 *
 * @member {array} [costs] Metadata for retrieving price info.
 *
 * @member {array} [capabilities] A name value pair to describe the capability.
 *
 * @member {array} [restrictions] The restrictions because of which SKU cannot
 * be used. This is empty if there are no restrictions.
 *
 */
class ResourceSku {
  constructor() {
  }

  /**
   * Defines the metadata of ResourceSku
   *
   * @returns {object} metadata of ResourceSku
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ResourceSku',
      type: {
        name: 'Composite',
        className: 'ResourceSku',
        modelProperties: {
          resourceType: {
            required: false,
            readOnly: true,
            serializedName: 'resourceType',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          tier: {
            required: false,
            readOnly: true,
            serializedName: 'tier',
            type: {
              name: 'String'
            }
          },
          size: {
            required: false,
            readOnly: true,
            serializedName: 'size',
            type: {
              name: 'String'
            }
          },
          family: {
            required: false,
            readOnly: true,
            serializedName: 'family',
            type: {
              name: 'String'
            }
          },
          kind: {
            required: false,
            readOnly: true,
            serializedName: 'kind',
            type: {
              name: 'String'
            }
          },
          capacity: {
            required: false,
            readOnly: true,
            serializedName: 'capacity',
            type: {
              name: 'Composite',
              className: 'ResourceSkuCapacity'
            }
          },
          locations: {
            required: false,
            readOnly: true,
            serializedName: 'locations',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          apiVersions: {
            required: false,
            readOnly: true,
            serializedName: 'apiVersions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          costs: {
            required: false,
            readOnly: true,
            serializedName: 'costs',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ResourceSkuCostsElementType',
                  type: {
                    name: 'Composite',
                    className: 'ResourceSkuCosts'
                  }
              }
            }
          },
          capabilities: {
            required: false,
            readOnly: true,
            serializedName: 'capabilities',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ResourceSkuCapabilitiesElementType',
                  type: {
                    name: 'Composite',
                    className: 'ResourceSkuCapabilities'
                  }
              }
            }
          },
          restrictions: {
            required: false,
            readOnly: true,
            serializedName: 'restrictions',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ResourceSkuRestrictionsElementType',
                  type: {
                    name: 'Composite',
                    className: 'ResourceSkuRestrictions'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = ResourceSku;

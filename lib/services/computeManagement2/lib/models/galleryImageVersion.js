/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Specifies information about the gallery Image Version that you want to
 * create or update.
 *
 * @extends models['Resource']
 */
class GalleryImageVersion extends models['Resource'] {
  /**
   * Create a GalleryImageVersion.
   * @property {object} publishingProfile
   * @property {number} [publishingProfile.replicaCount] The number of replicas
   * of the Image Version to be created per region. This property would take
   * effect for a region when regionalReplicaCount is not specified. This
   * property is updatable.
   * @property {boolean} [publishingProfile.excludeFromLatest] If set to true,
   * Virtual Machines deployed from the latest version of the Image Definition
   * won't use this Image Version.
   * @property {date} [publishingProfile.publishedDate] The timestamp for when
   * the gallery Image Version is published.
   * @property {date} [publishingProfile.endOfLifeDate] The end of life date of
   * the gallery Image Version. This property can be used for decommissioning
   * purposes. This property is updatable.
   * @property {string} [publishingProfile.storageAccountType] Specifies the
   * storage account type to be used to store the image. This property is not
   * updatable. Possible values include: 'Standard_LRS', 'Standard_ZRS'
   * @property {string} [provisioningState] The current state of the gallery
   * Image Version. The provisioning state, which only appears in the response.
   * Possible values include: 'Creating', 'Updating', 'Failed', 'Succeeded',
   * 'Deleting', 'Migrating'
   * @property {object} [storageProfile]
   * @property {object} [storageProfile.osDiskImage]
   * @property {array} [storageProfile.dataDiskImages] A list of data disk
   * images.
   * @property {object} [replicationStatus]
   * @property {string} [replicationStatus.aggregatedState] This is the
   * aggregated replication status based on all the regional replication status
   * flags. Possible values include: 'Unknown', 'InProgress', 'Completed',
   * 'Failed'
   * @property {array} [replicationStatus.summary] This is a summary of
   * replication status for each region.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of GalleryImageVersion
   *
   * @returns {object} metadata of GalleryImageVersion
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'GalleryImageVersion',
      type: {
        name: 'Composite',
        className: 'GalleryImageVersion',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: true,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          publishingProfile: {
            required: true,
            serializedName: 'properties.publishingProfile',
            type: {
              name: 'Composite',
              className: 'GalleryImageVersionPublishingProfile'
            }
          },
          provisioningState: {
            required: false,
            readOnly: true,
            serializedName: 'properties.provisioningState',
            type: {
              name: 'String'
            }
          },
          storageProfile: {
            required: false,
            readOnly: true,
            serializedName: 'properties.storageProfile',
            type: {
              name: 'Composite',
              className: 'GalleryImageVersionStorageProfile'
            }
          },
          replicationStatus: {
            required: false,
            readOnly: true,
            serializedName: 'properties.replicationStatus',
            type: {
              name: 'Composite',
              className: 'ReplicationStatus'
            }
          }
        }
      }
    };
  }
}

module.exports = GalleryImageVersion;

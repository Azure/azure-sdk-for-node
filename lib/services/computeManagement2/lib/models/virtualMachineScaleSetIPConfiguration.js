/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetIPConfiguration class.
 * @constructor
 * Describes a virtual machine scale set network profile's IP configuration.
 * @member {string} name Gets or sets the IP configuration name.
 * 
 * @member {object} subnet Gets or sets the subnet.
 * 
 * @member {string} [subnet.id] Gets or sets ARM resource id in the form of
 * /subscriptions/{SubcriptionId}/resourceGroups/{ResourceGroupName}/...
 * 
 * @member {array} [applicationGatewayBackendAddressPools] Gets or sets the
 * application gateway backend address pools.
 * 
 * @member {array} [loadBalancerBackendAddressPools] Gets or sets the load
 * balancer backend address pools.
 * 
 * @member {array} [loadBalancerInboundNatPools] Gets or sets the load
 * balancer inbound nat pools.
 * 
 */
function VirtualMachineScaleSetIPConfiguration() {
  VirtualMachineScaleSetIPConfiguration['super_'].call(this);
}

util.inherits(VirtualMachineScaleSetIPConfiguration, models['SubResource']);

/**
 * Defines the metadata of VirtualMachineScaleSetIPConfiguration
 *
 * @returns {object} metadata of VirtualMachineScaleSetIPConfiguration
 *
 */
VirtualMachineScaleSetIPConfiguration.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'VirtualMachineScaleSetIPConfiguration',
    type: {
      name: 'Composite',
      className: 'VirtualMachineScaleSetIPConfiguration',
      modelProperties: {
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        name: {
          required: true,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        subnet: {
          required: true,
          serializedName: 'properties.subnet',
          type: {
            name: 'Composite',
            className: 'ApiEntityReference'
          }
        },
        applicationGatewayBackendAddressPools: {
          required: false,
          serializedName: 'properties.applicationGatewayBackendAddressPools',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'SubResourceElementType',
                type: {
                  name: 'Composite',
                  className: 'SubResource'
                }
            }
          }
        },
        loadBalancerBackendAddressPools: {
          required: false,
          serializedName: 'properties.loadBalancerBackendAddressPools',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'SubResourceElementType',
                type: {
                  name: 'Composite',
                  className: 'SubResource'
                }
            }
          }
        },
        loadBalancerInboundNatPools: {
          required: false,
          serializedName: 'properties.loadBalancerInboundNatPools',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'SubResourceElementType',
                type: {
                  name: 'Composite',
                  className: 'SubResource'
                }
            }
          }
        }
      }
    }
  };
};

module.exports = VirtualMachineScaleSetIPConfiguration;

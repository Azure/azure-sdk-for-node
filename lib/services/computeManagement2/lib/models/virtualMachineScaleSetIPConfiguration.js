/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetIPConfiguration class.
 * @constructor
 * Describes a virtual machine scale set network profile's IP configuration.
 *
 * @member {string} name The IP configuration name.
 *
 * @member {object} [subnet] The subnet.
 *
 * @member {string} [subnet.id] The ARM resource id in the form of
 * /subscriptions/{SubcriptionId}/resourceGroups/{ResourceGroupName}/...
 *
 * @member {object} [publicIPAddressConfiguration] The
 * publicIPAddressConfiguration.
 *
 * @member {string} [publicIPAddressConfiguration.name] The publicIP address
 * configuration name.
 *
 * @member {number} [publicIPAddressConfiguration.idleTimeoutInMinutes] The
 * idle timeout of the public IP address.
 *
 * @member {object} [publicIPAddressConfiguration.dnsSettings] The dns settings
 * to be applied on the publicIP addresses .
 *
 * @member {string} [publicIPAddressConfiguration.dnsSettings.domainNameLabel]
 * The Domain name label.The concatenation of the domain name label and vm
 * index will be the domain name labels of the PublicIPAddress resources that
 * will be created
 *
 * @member {string} [privateIPAddressVersion] Available from Api-Version
 * 2017-03-30 onwards, it represents whether the specific ipconfiguration is
 * IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and
 * 'IPv6'. Possible values include: 'IPv4', 'IPv6'
 *
 * @member {array} [applicationGatewayBackendAddressPools] The application
 * gateway backend address pools.
 *
 * @member {array} [loadBalancerBackendAddressPools] The load balancer backend
 * address pools.
 *
 * @member {array} [loadBalancerInboundNatPools] The load balancer inbound nat
 * pools.
 *
 */
class VirtualMachineScaleSetIPConfiguration extends models['SubResource'] {
  constructor() {
    super();
  }

  /**
   * Defines the metadata of VirtualMachineScaleSetIPConfiguration
   *
   * @returns {object} metadata of VirtualMachineScaleSetIPConfiguration
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VirtualMachineScaleSetIPConfiguration',
      type: {
        name: 'Composite',
        className: 'VirtualMachineScaleSetIPConfiguration',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          subnet: {
            required: false,
            serializedName: 'properties.subnet',
            type: {
              name: 'Composite',
              className: 'ApiEntityReference'
            }
          },
          publicIPAddressConfiguration: {
            required: false,
            serializedName: 'properties.publicIPAddressConfiguration',
            type: {
              name: 'Composite',
              className: 'VirtualMachineScaleSetPublicIPAddressConfiguration'
            }
          },
          privateIPAddressVersion: {
            required: false,
            serializedName: 'properties.privateIPAddressVersion',
            type: {
              name: 'String'
            }
          },
          applicationGatewayBackendAddressPools: {
            required: false,
            serializedName: 'properties.applicationGatewayBackendAddressPools',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'SubResourceElementType',
                  type: {
                    name: 'Composite',
                    className: 'SubResource'
                  }
              }
            }
          },
          loadBalancerBackendAddressPools: {
            required: false,
            serializedName: 'properties.loadBalancerBackendAddressPools',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'SubResourceElementType',
                  type: {
                    name: 'Composite',
                    className: 'SubResource'
                  }
              }
            }
          },
          loadBalancerInboundNatPools: {
            required: false,
            serializedName: 'properties.loadBalancerInboundNatPools',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'SubResourceElementType',
                  type: {
                    name: 'Composite',
                    className: 'SubResource'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = VirtualMachineScaleSetIPConfiguration;

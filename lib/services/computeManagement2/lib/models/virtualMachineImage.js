/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Describes a Virtual Machine Image.
 *
 * @extends models['VirtualMachineImageResource']
 */
class VirtualMachineImage extends models['VirtualMachineImageResource'] {
  /**
   * Create a VirtualMachineImage.
   * @property {object} [plan]
   * @property {string} [plan.publisher] The publisher ID.
   * @property {string} [plan.name] The plan ID.
   * @property {string} [plan.product] Specifies the product of the image from
   * the marketplace. This is the same value as Offer under the imageReference
   * element.
   * @property {object} [osDiskImage]
   * @property {string} [osDiskImage.operatingSystem] The operating system of
   * the osDiskImage. Possible values include: 'Windows', 'Linux'
   * @property {array} [dataDiskImages]
   * @property {object} [automaticOSUpgradeProperties]
   * @property {boolean}
   * [automaticOSUpgradeProperties.automaticOSUpgradeSupported] Specifies
   * whether automatic OS upgrade is supported on the image.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of VirtualMachineImage
   *
   * @returns {object} metadata of VirtualMachineImage
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VirtualMachineImage',
      type: {
        name: 'Composite',
        className: 'VirtualMachineImage',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          location: {
            required: true,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          plan: {
            required: false,
            serializedName: 'properties.plan',
            type: {
              name: 'Composite',
              className: 'PurchasePlan'
            }
          },
          osDiskImage: {
            required: false,
            serializedName: 'properties.osDiskImage',
            type: {
              name: 'Composite',
              className: 'OSDiskImage'
            }
          },
          dataDiskImages: {
            required: false,
            serializedName: 'properties.dataDiskImages',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'DataDiskImageElementType',
                  type: {
                    name: 'Composite',
                    className: 'DataDiskImage'
                  }
              }
            }
          },
          automaticOSUpgradeProperties: {
            required: false,
            serializedName: 'properties.automaticOSUpgradeProperties',
            type: {
              name: 'Composite',
              className: 'AutomaticOSUpgradeProperties'
            }
          }
        }
      }
    };
  }
}

module.exports = VirtualMachineImage;

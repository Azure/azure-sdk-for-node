/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The instance view of a virtual machine boot diagnostics.
 *
 */
class BootDiagnosticsInstanceView {
  /**
   * Create a BootDiagnosticsInstanceView.
   * @member {string} [consoleScreenshotBlobUri] The console screenshot blob
   * URI.
   * @member {string} [serialConsoleLogBlobUri] The Linux serial console log
   * blob Uri.
   * @member {object} [status] The boot diagnostics status information for the
   * VM. <br><br> NOTE: It will be set only if there are errors encountered in
   * enabling boot diagnostics.
   * @member {string} [status.code] The status code.
   * @member {string} [status.level] The level code. Possible values include:
   * 'Info', 'Warning', 'Error'
   * @member {string} [status.displayStatus] The short localizable label for
   * the status.
   * @member {string} [status.message] The detailed status message, including
   * for alerts and error messages.
   * @member {date} [status.time] The time of the status.
   */
  constructor() {
  }

  /**
   * Defines the metadata of BootDiagnosticsInstanceView
   *
   * @returns {object} metadata of BootDiagnosticsInstanceView
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'BootDiagnosticsInstanceView',
      type: {
        name: 'Composite',
        className: 'BootDiagnosticsInstanceView',
        modelProperties: {
          consoleScreenshotBlobUri: {
            required: false,
            readOnly: true,
            serializedName: 'consoleScreenshotBlobUri',
            type: {
              name: 'String'
            }
          },
          serialConsoleLogBlobUri: {
            required: false,
            readOnly: true,
            serializedName: 'serialConsoleLogBlobUri',
            type: {
              name: 'String'
            }
          },
          status: {
            required: false,
            readOnly: true,
            serializedName: 'status',
            type: {
              name: 'Composite',
              className: 'InstanceViewStatus'
            }
          }
        }
      }
    };
  }
}

module.exports = BootDiagnosticsInstanceView;

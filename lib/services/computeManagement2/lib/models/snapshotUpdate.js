/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Snapshot update resource.
 *
 */
class SnapshotUpdate {
  /**
   * Create a SnapshotUpdate.
   * @member {string} [osType] the Operating System type. Possible values
   * include: 'Windows', 'Linux'
   * @member {number} [diskSizeGB] If creationData.createOption is Empty, this
   * field is mandatory and it indicates the size of the VHD to create. If this
   * field is present for updates or creation with other options, it indicates
   * a resize. Resizes are only allowed if the disk is not attached to a
   * running VM, and can only increase the disk's size.
   * @member {object} [encryptionSettingsCollection] Encryption settings
   * collection used be Azure Disk Encryption, can contain multiple encryption
   * settings per disk or snapshot.
   * @member {boolean} [encryptionSettingsCollection.enabled] Set this flag to
   * true and provide DiskEncryptionKey and optional KeyEncryptionKey to enable
   * encryption. Set this flag to false and remove DiskEncryptionKey and
   * KeyEncryptionKey to disable encryption. If EncryptionSettings is null in
   * the request object, the existing settings remain unchanged.
   * @member {array} [encryptionSettingsCollection.encryptionSettings] A
   * collection of encryption settings, one for each disk volume.
   * @member {object} [tags] Resource tags
   * @member {object} [sku]
   * @member {string} [sku.name] The sku name. Possible values include:
   * 'Standard_LRS', 'Premium_LRS', 'Standard_ZRS'
   * @member {string} [sku.tier] The sku tier.
   */
  constructor() {
  }

  /**
   * Defines the metadata of SnapshotUpdate
   *
   * @returns {object} metadata of SnapshotUpdate
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'SnapshotUpdate',
      type: {
        name: 'Composite',
        className: 'SnapshotUpdate',
        modelProperties: {
          osType: {
            required: false,
            serializedName: 'properties.osType',
            type: {
              name: 'Enum',
              allowedValues: [ 'Windows', 'Linux' ]
            }
          },
          diskSizeGB: {
            required: false,
            serializedName: 'properties.diskSizeGB',
            type: {
              name: 'Number'
            }
          },
          encryptionSettingsCollection: {
            required: false,
            serializedName: 'properties.encryptionSettingsCollection',
            type: {
              name: 'Composite',
              className: 'EncryptionSettingsCollection'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          sku: {
            required: false,
            serializedName: 'sku',
            type: {
              name: 'Composite',
              className: 'SnapshotSku'
            }
          }
        }
      }
    };
  }
}

module.exports = SnapshotUpdate;

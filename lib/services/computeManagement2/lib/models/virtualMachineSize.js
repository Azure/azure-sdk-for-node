/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Describes the properties of a VM size.
 *
 */
class VirtualMachineSize {
  /**
   * Create a VirtualMachineSize.
   * @property {string} [name] The name of the virtual machine size.
   * @property {number} [numberOfCores] The number of cores supported by the
   * virtual machine size.
   * @property {number} [osDiskSizeInMB] The OS disk size, in MB, allowed by
   * the virtual machine size.
   * @property {number} [resourceDiskSizeInMB] The resource disk size, in MB,
   * allowed by the virtual machine size.
   * @property {number} [memoryInMB] The amount of memory, in MB, supported by
   * the virtual machine size.
   * @property {number} [maxDataDiskCount] The maximum number of data disks
   * that can be attached to the virtual machine size.
   */
  constructor() {
  }

  /**
   * Defines the metadata of VirtualMachineSize
   *
   * @returns {object} metadata of VirtualMachineSize
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VirtualMachineSize',
      type: {
        name: 'Composite',
        className: 'VirtualMachineSize',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          numberOfCores: {
            required: false,
            serializedName: 'numberOfCores',
            type: {
              name: 'Number'
            }
          },
          osDiskSizeInMB: {
            required: false,
            serializedName: 'osDiskSizeInMB',
            type: {
              name: 'Number'
            }
          },
          resourceDiskSizeInMB: {
            required: false,
            serializedName: 'resourceDiskSizeInMB',
            type: {
              name: 'Number'
            }
          },
          memoryInMB: {
            required: false,
            serializedName: 'memoryInMB',
            type: {
              name: 'Number'
            }
          },
          maxDataDiskCount: {
            required: false,
            serializedName: 'maxDataDiskCount',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = VirtualMachineSize;

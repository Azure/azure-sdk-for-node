/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Data used when creating a disk.
 *
 */
class CreationData {
  /**
   * Create a CreationData.
   * @member {string} createOption This enumerates the possible sources of a
   * disk's creation. Possible values include: 'Empty', 'Attach', 'FromImage',
   * 'Import', 'Copy', 'Restore'
   * @member {string} [storageAccountId] If createOption is Import, the Azure
   * Resource Manager identifier of the storage account containing the blob to
   * import as a disk. Required only if the blob is in a different subscription
   * @member {object} [imageReference] Disk source information.
   * @member {string} [imageReference.id] A relative uri containing either a
   * Platform Imgage Repository or user image reference.
   * @member {number} [imageReference.lun] If the disk is created from an
   * image's data disk, this is an index that indicates which of the data disks
   * in the image to use. For OS disks, this field is null.
   * @member {string} [sourceUri] If createOption is Import, this is the URI of
   * a blob to be imported into a managed disk.
   * @member {string} [sourceResourceId] If createOption is Copy, this is the
   * ARM id of the source snapshot or disk.
   */
  constructor() {
  }

  /**
   * Defines the metadata of CreationData
   *
   * @returns {object} metadata of CreationData
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'CreationData',
      type: {
        name: 'Composite',
        className: 'CreationData',
        modelProperties: {
          createOption: {
            required: true,
            serializedName: 'createOption',
            type: {
              name: 'String'
            }
          },
          storageAccountId: {
            required: false,
            serializedName: 'storageAccountId',
            type: {
              name: 'String'
            }
          },
          imageReference: {
            required: false,
            serializedName: 'imageReference',
            type: {
              name: 'Composite',
              className: 'ImageDiskReference'
            }
          },
          sourceUri: {
            required: false,
            serializedName: 'sourceUri',
            type: {
              name: 'String'
            }
          },
          sourceResourceId: {
            required: false,
            serializedName: 'sourceResourceId',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = CreationData;

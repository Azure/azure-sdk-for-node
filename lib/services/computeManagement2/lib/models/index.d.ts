/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
// TODO: Include PageTemplateModels here too?? Probably
 */


/**
 * @class
 * Initializes a new instance of the InstanceViewStatus class.
 * @constructor
 * Instance view status.
 * @member {string} [code] Gets the status Code.
 * 
 * @member {string} [level] Gets or sets the level Code. Possible values
 * include: 'Info', 'Warning', 'Error'
 * 
 * @member {string} [displayStatus] Gets or sets the short localizable label
 * for the status.
 * 
 * @member {string} [message] Gets or sets the detailed Message, including for
 * alerts and error messages.
 * 
 * @member {date} [time] Gets or sets the time of the status.
 * 
 */
export interface InstanceViewStatus {
    code?: string;
    level?: string;
    displayStatus?: string;
    message?: string;
    time?: Date;
}

/**
 * @class
 * Initializes a new instance of the SubResource class.
 * @constructor
 * @member {string} [id] Resource Id
 * 
 */
export interface SubResource extends BaseResource {
    id?: string;
}

/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * @member {string} [id] Resource Id
 * 
 * @member {string} [name] Resource name
 * 
 * @member {string} [type] Resource type
 * 
 * @member {string} location Resource location
 * 
 * @member {object} [tags] Resource tags
 * 
 */
export interface Resource extends BaseResource {
    id?: string;
    name?: string;
    type?: string;
    location: string;
    tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the AvailabilitySet class.
 * @constructor
 * Create or update Availability Set parameters.
 * @member {number} [platformUpdateDomainCount] Gets or sets Update Domain
 * count.
 * 
 * @member {number} [platformFaultDomainCount] Gets or sets Fault Domain count.
 * 
 * @member {array} [virtualMachines] Gets or sets a list containing reference
 * to all Virtual Machines created under this Availability Set.
 * 
 * @member {array} [statuses] Gets or sets the resource status information.
 * 
 */
export interface AvailabilitySet extends Resource {
    platformUpdateDomainCount?: number;
    platformFaultDomainCount?: number;
    virtualMachines?: SubResource[];
    statuses?: InstanceViewStatus[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineSize class.
 * @constructor
 * Describes the properties of a VM size.
 * @member {string} [name] Gets or sets the VM size name.
 * 
 * @member {number} [numberOfCores] Gets or sets the Number of cores supported
 * by a VM size.
 * 
 * @member {number} [osDiskSizeInMB] Gets or sets the OS disk size allowed by
 * a VM size.
 * 
 * @member {number} [resourceDiskSizeInMB] Gets or sets the Resource disk size
 * allowed by a VM size.
 * 
 * @member {number} [memoryInMB] Gets or sets the Memory size supported by a
 * VM size.
 * 
 * @member {number} [maxDataDiskCount] Gets or sets the Maximum number of data
 * disks allowed by a VM size.
 * 
 */
export interface VirtualMachineSize {
    name?: string;
    numberOfCores?: number;
    osDiskSizeInMB?: number;
    resourceDiskSizeInMB?: number;
    memoryInMB?: number;
    maxDataDiskCount?: number;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineExtensionImage class.
 * @constructor
 * Describes a Virtual Machine Extension Image.
 * @member {string} operatingSystem Gets or sets the operating system this
 * extension supports.
 * 
 * @member {string} computeRole Gets or sets the type of role (IaaS or PaaS)
 * this extension supports.
 * 
 * @member {string} handlerSchema Gets or sets the schema defined by
 * publisher, where extension consumers should provide settings in a matching
 * schema.
 * 
 * @member {boolean} [vmScaleSetEnabled] Gets or sets whether the extension
 * can be used on xRP VMScaleSets.By default existing extensions are usable
 * on scalesets, but there might be cases where a publisher wants to
 * explicitly indicate the extension is only enabled for CRP VMs but not VMSS.
 * 
 * @member {boolean} [supportsMultipleExtensions] Gets or sets whether the
 * handler can support multiple extensions.
 * 
 */
export interface VirtualMachineExtensionImage extends Resource {
    operatingSystem: string;
    computeRole: string;
    handlerSchema: string;
    vmScaleSetEnabled?: boolean;
    supportsMultipleExtensions?: boolean;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineImageResource class.
 * @constructor
 * Virtual machine image resource information.
 * @member {string} name Gets or sets the name of the resource.
 * 
 * @member {string} location Gets or sets the location of the resource.
 * 
 * @member {object} [tags] Gets or sets the tags attached to the resource.
 * 
 */
export interface VirtualMachineImageResource extends SubResource {
    name: string;
    location: string;
    tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineExtensionInstanceView class.
 * @constructor
 * The instance view of a virtual machine extension.
 * @member {string} [name] Gets or sets the virtual machine extension name.
 * 
 * @member {string} [type] Gets or sets the full type of the extension handler
 * which includes both publisher and type.
 * 
 * @member {string} [typeHandlerVersion] Gets or sets the type version of the
 * extension handler.
 * 
 * @member {array} [substatuses] Gets or sets the resource status information.
 * 
 * @member {array} [statuses] Gets or sets the resource status information.
 * 
 */
export interface VirtualMachineExtensionInstanceView {
    name?: string;
    type?: string;
    typeHandlerVersion?: string;
    substatuses?: InstanceViewStatus[];
    statuses?: InstanceViewStatus[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineExtension class.
 * @constructor
 * Describes a Virtual Machine Extension.
 * @member {string} [forceUpdateTag] Gets or sets how the extension handler
 * should be forced to update even if the extension configuration has not
 * changed.
 * 
 * @member {string} [publisher] Gets or sets the name of the extension handler
 * publisher.
 * 
 * @member {string} [virtualMachineExtensionType] Gets or sets the type of the
 * extension handler.
 * 
 * @member {string} [typeHandlerVersion] Gets or sets the type version of the
 * extension handler.
 * 
 * @member {boolean} [autoUpgradeMinorVersion] Gets or sets whether the
 * extension handler should be automatically upgraded across minor versions.
 * 
 * @member {object} [settings] Gets or sets Json formatted public settings for
 * the extension.
 * 
 * @member {object} [protectedSettings] Gets or sets Json formatted protected
 * settings for the extension.
 * 
 * @member {string} [provisioningState] Gets or sets the provisioning state,
 * which only appears in the response.
 * 
 * @member {object} [instanceView] Gets or sets the virtual machine extension
 * instance view.
 * 
 * @member {string} [instanceView.name] Gets or sets the virtual machine
 * extension name.
 * 
 * @member {string} [instanceView.type] Gets or sets the full type of the
 * extension handler which includes both publisher and type.
 * 
 * @member {string} [instanceView.typeHandlerVersion] Gets or sets the type
 * version of the extension handler.
 * 
 * @member {array} [instanceView.substatuses] Gets or sets the resource status
 * information.
 * 
 * @member {array} [instanceView.statuses] Gets or sets the resource status
 * information.
 * 
 */
export interface VirtualMachineExtension extends Resource {
    forceUpdateTag?: string;
    publisher?: string;
    virtualMachineExtensionType?: string;
    typeHandlerVersion?: string;
    autoUpgradeMinorVersion?: boolean;
    settings?: any;
    protectedSettings?: any;
    provisioningState?: string;
    instanceView?: VirtualMachineExtensionInstanceView;
}

/**
 * @class
 * Initializes a new instance of the PurchasePlan class.
 * @constructor
 * Used for establishing the purchase context of any 3rd Party artifact
 * through MarketPlace.
 * @member {string} publisher Gets or sets the publisher ID.
 * 
 * @member {string} name Gets or sets the plan ID.
 * 
 * @member {string} product Gets or sets the product ID.
 * 
 */
export interface PurchasePlan {
    publisher: string;
    name: string;
    product: string;
}

/**
 * @class
 * Initializes a new instance of the OSDiskImage class.
 * @constructor
 * Contains the os disk image information.
 * @member {string} operatingSystem Gets or sets the operating system of the
 * osDiskImage. Possible values include: 'Windows', 'Linux'
 * 
 */
export interface OSDiskImage {
    operatingSystem: string;
}

/**
 * @class
 * Initializes a new instance of the DataDiskImage class.
 * @constructor
 * Contains the data disk images information.
 * @member {number} [lun] Gets the LUN number for a data disk.This value is
 * used to identify data disk image inside the VMImage therefore it must be
 * unique for each data disk.The allowed character for the value is digit.
 * 
 */
export interface DataDiskImage {
    lun?: number;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineImage class.
 * @constructor
 * Describes a Virtual Machine Image.
 * @member {object} [plan]
 * 
 * @member {string} [plan.publisher] Gets or sets the publisher ID.
 * 
 * @member {string} [plan.name] Gets or sets the plan ID.
 * 
 * @member {string} [plan.product] Gets or sets the product ID.
 * 
 * @member {object} [osDiskImage]
 * 
 * @member {string} [osDiskImage.operatingSystem] Gets or sets the operating
 * system of the osDiskImage. Possible values include: 'Windows', 'Linux'
 * 
 * @member {array} [dataDiskImages]
 * 
 */
export interface VirtualMachineImage extends VirtualMachineImageResource {
    plan?: PurchasePlan;
    osDiskImage?: OSDiskImage;
    dataDiskImages?: DataDiskImage[];
}

/**
 * @class
 * Initializes a new instance of the UsageName class.
 * @constructor
 * The Usage Names.
 * @member {string} [value] Gets or sets a string describing the resource name.
 * 
 * @member {string} [localizedValue] Gets or sets a localized string
 * describing the resource name.
 * 
 */
export interface UsageName {
    value?: string;
    localizedValue?: string;
}

/**
 * @class
 * Initializes a new instance of the Usage class.
 * @constructor
 * Describes Compute Resource Usage.
 * @member {number} currentValue Gets or sets the current value of the usage.
 * 
 * @member {number} limit Gets or sets the limit of usage.
 * 
 * @member {object} name Gets or sets the name of the type of usage.
 * 
 * @member {string} [name.value] Gets or sets a string describing the resource
 * name.
 * 
 * @member {string} [name.localizedValue] Gets or sets a localized string
 * describing the resource name.
 * 
 */
export interface Usage {
    currentValue: number;
    limit: number;
    name: UsageName;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineCaptureParameters class.
 * @constructor
 * Capture Virtual Machine parameters.
 * @member {string} vhdPrefix Gets or sets the captured VirtualHardDisk's name
 * prefix.
 * 
 * @member {string} destinationContainerName Gets or sets the destination
 * container name.
 * 
 * @member {boolean} overwriteVhds Gets or sets whether it overwrites
 * destination VirtualHardDisk if true, in case of conflict.
 * 
 */
export interface VirtualMachineCaptureParameters {
    vhdPrefix: string;
    destinationContainerName: string;
    overwriteVhds: boolean;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineCaptureResult class.
 * @constructor
 * Resource Id.
 * @member {object} [output] Operation output data (raw JSON)
 * 
 */
export interface VirtualMachineCaptureResult extends SubResource {
    output?: any;
}

/**
 * @class
 * Initializes a new instance of the Plan class.
 * @constructor
 * Plan for the resource.
 * @member {string} [name] Gets or sets the plan ID.
 * 
 * @member {string} [publisher] Gets or sets the publisher ID.
 * 
 * @member {string} [product] Gets or sets the offer ID.
 * 
 * @member {string} [promotionCode] Gets or sets the promotion code.
 * 
 */
export interface Plan {
    name?: string;
    publisher?: string;
    product?: string;
    promotionCode?: string;
}

/**
 * @class
 * Initializes a new instance of the HardwareProfile class.
 * @constructor
 * Describes a hardware profile.
 * @member {string} [vmSize] The virtual machine size name. Possible values
 * include: 'Basic_A0', 'Basic_A1', 'Basic_A2', 'Basic_A3', 'Basic_A4',
 * 'Standard_A0', 'Standard_A1', 'Standard_A2', 'Standard_A3', 'Standard_A4',
 * 'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8', 'Standard_A9',
 * 'Standard_A10', 'Standard_A11', 'Standard_D1', 'Standard_D2',
 * 'Standard_D3', 'Standard_D4', 'Standard_D11', 'Standard_D12',
 * 'Standard_D13', 'Standard_D14', 'Standard_D1_v2', 'Standard_D2_v2',
 * 'Standard_D3_v2', 'Standard_D4_v2', 'Standard_D5_v2', 'Standard_D11_v2',
 * 'Standard_D12_v2', 'Standard_D13_v2', 'Standard_D14_v2',
 * 'Standard_D15_v2', 'Standard_DS1', 'Standard_DS2', 'Standard_DS3',
 * 'Standard_DS4', 'Standard_DS11', 'Standard_DS12', 'Standard_DS13',
 * 'Standard_DS14', 'Standard_DS1_v2', 'Standard_DS2_v2', 'Standard_DS3_v2',
 * 'Standard_DS4_v2', 'Standard_DS5_v2', 'Standard_DS11_v2',
 * 'Standard_DS12_v2', 'Standard_DS13_v2', 'Standard_DS14_v2',
 * 'Standard_DS15_v2', 'Standard_G1', 'Standard_G2', 'Standard_G3',
 * 'Standard_G4', 'Standard_G5', 'Standard_GS1', 'Standard_GS2',
 * 'Standard_GS3', 'Standard_GS4', 'Standard_GS5'
 * 
 */
export interface HardwareProfile {
    vmSize?: string;
}

/**
 * @class
 * Initializes a new instance of the ImageReference class.
 * @constructor
 * The image reference.
 * @member {string} [publisher] Gets or sets the image publisher.
 * 
 * @member {string} [offer] Gets or sets the image offer.
 * 
 * @member {string} [sku] Gets or sets the image sku.
 * 
 * @member {string} [version] Gets or sets the image version. The allowed
 * formats are Major.Minor.Build or 'latest'. Major, Minor and Build being
 * decimal numbers. Specify 'latest' to use the latest version of image.
 * 
 */
export interface ImageReference {
    publisher?: string;
    offer?: string;
    sku?: string;
    version?: string;
}

/**
 * @class
 * Initializes a new instance of the KeyVaultSecretReference class.
 * @constructor
 * Describes a reference to Key Vault Secret
 * @member {string} secretUrl Gets or sets the URL referencing a secret in a
 * Key Vault.
 * 
 * @member {object} sourceVault Gets or sets the Relative URL of the Key Vault
 * containing the secret.
 * 
 * @member {string} [sourceVault.id] Resource Id
 * 
 */
export interface KeyVaultSecretReference {
    secretUrl: string;
    sourceVault: SubResource;
}

/**
 * @class
 * Initializes a new instance of the KeyVaultKeyReference class.
 * @constructor
 * Describes a reference to Key Vault Key
 * @member {string} keyUrl Gets or sets the URL referencing a key in a Key
 * Vault.
 * 
 * @member {object} sourceVault Gets or sets the Relative URL of the Key Vault
 * containing the key
 * 
 * @member {string} [sourceVault.id] Resource Id
 * 
 */
export interface KeyVaultKeyReference {
    keyUrl: string;
    sourceVault: SubResource;
}

/**
 * @class
 * Initializes a new instance of the DiskEncryptionSettings class.
 * @constructor
 * Describes a Encryption Settings for a Disk
 * @member {object} [diskEncryptionKey] Gets or sets the disk encryption key
 * which is a KeyVault Secret.
 * 
 * @member {string} [diskEncryptionKey.secretUrl] Gets or sets the URL
 * referencing a secret in a Key Vault.
 * 
 * @member {object} [diskEncryptionKey.sourceVault] Gets or sets the Relative
 * URL of the Key Vault containing the secret.
 * 
 * @member {string} [diskEncryptionKey.sourceVault.id] Resource Id
 * 
 * @member {object} [keyEncryptionKey] Gets or sets the key encryption key
 * which is KeyVault Key.
 * 
 * @member {string} [keyEncryptionKey.keyUrl] Gets or sets the URL referencing
 * a key in a Key Vault.
 * 
 * @member {object} [keyEncryptionKey.sourceVault] Gets or sets the Relative
 * URL of the Key Vault containing the key
 * 
 * @member {string} [keyEncryptionKey.sourceVault.id] Resource Id
 * 
 * @member {boolean} [enabled] Gets or sets whether disk encryption should be
 * enabled on the Virtual Machine.
 * 
 */
export interface DiskEncryptionSettings {
    diskEncryptionKey?: KeyVaultSecretReference;
    keyEncryptionKey?: KeyVaultKeyReference;
    enabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the VirtualHardDisk class.
 * @constructor
 * Describes the uri of a disk.
 * @member {string} [uri] Gets or sets the virtual hard disk's uri. It should
 * be a valid Uri to a virtual hard disk.
 * 
 */
export interface VirtualHardDisk {
    uri?: string;
}

/**
 * @class
 * Initializes a new instance of the OSDisk class.
 * @constructor
 * Describes an Operating System disk.
 * @member {string} [osType] Gets or sets the Operating System type. Possible
 * values include: 'Windows', 'Linux'
 * 
 * @member {object} [encryptionSettings] Gets or sets the disk encryption
 * settings.
 * 
 * @member {object} [encryptionSettings.diskEncryptionKey] Gets or sets the
 * disk encryption key which is a KeyVault Secret.
 * 
 * @member {string} [encryptionSettings.diskEncryptionKey.secretUrl] Gets or
 * sets the URL referencing a secret in a Key Vault.
 * 
 * @member {object} [encryptionSettings.diskEncryptionKey.sourceVault] Gets or
 * sets the Relative URL of the Key Vault containing the secret.
 * 
 * @member {string} [encryptionSettings.diskEncryptionKey.sourceVault.id]
 * Resource Id
 * 
 * @member {object} [encryptionSettings.keyEncryptionKey] Gets or sets the key
 * encryption key which is KeyVault Key.
 * 
 * @member {string} [encryptionSettings.keyEncryptionKey.keyUrl] Gets or sets
 * the URL referencing a key in a Key Vault.
 * 
 * @member {object} [encryptionSettings.keyEncryptionKey.sourceVault] Gets or
 * sets the Relative URL of the Key Vault containing the key
 * 
 * @member {string} [encryptionSettings.keyEncryptionKey.sourceVault.id]
 * Resource Id
 * 
 * @member {boolean} [encryptionSettings.enabled] Gets or sets whether disk
 * encryption should be enabled on the Virtual Machine.
 * 
 * @member {string} name Gets or sets the disk name.
 * 
 * @member {object} vhd Gets or sets the Virtual Hard Disk.
 * 
 * @member {string} [vhd.uri] Gets or sets the virtual hard disk's uri. It
 * should be a valid Uri to a virtual hard disk.
 * 
 * @member {object} [image] Gets or sets the Source User Image
 * VirtualHardDisk. This VirtualHardDisk will be copied before using it to
 * attach to the Virtual Machine.If SourceImage is provided, the destination
 * VirtualHardDisk should not exist.
 * 
 * @member {string} [image.uri] Gets or sets the virtual hard disk's uri. It
 * should be a valid Uri to a virtual hard disk.
 * 
 * @member {string} [caching] Gets or sets the caching type. Possible values
 * include: 'None', 'ReadOnly', 'ReadWrite'
 * 
 * @member {string} createOption Gets or sets the create option. Possible
 * values include: 'fromImage', 'empty', 'attach'
 * 
 * @member {number} [diskSizeGB] Gets or sets the initial disk size in GB for
 * blank data disks, and the new desired size for existing OS and Data disks.
 * 
 */
export interface OSDisk {
    osType?: string;
    encryptionSettings?: DiskEncryptionSettings;
    name: string;
    vhd: VirtualHardDisk;
    image?: VirtualHardDisk;
    caching?: string;
    createOption: string;
    diskSizeGB?: number;
}

/**
 * @class
 * Initializes a new instance of the DataDisk class.
 * @constructor
 * Describes a data disk.
 * @member {number} lun Gets or sets the logical unit number.
 * 
 * @member {string} name Gets or sets the disk name.
 * 
 * @member {object} vhd Gets or sets the Virtual Hard Disk.
 * 
 * @member {string} [vhd.uri] Gets or sets the virtual hard disk's uri. It
 * should be a valid Uri to a virtual hard disk.
 * 
 * @member {object} [image] Gets or sets the Source User Image
 * VirtualHardDisk. This VirtualHardDisk will be copied before using it to
 * attach to the Virtual Machine.If SourceImage is provided, the destination
 * VirtualHardDisk should not exist.
 * 
 * @member {string} [image.uri] Gets or sets the virtual hard disk's uri. It
 * should be a valid Uri to a virtual hard disk.
 * 
 * @member {string} [caching] Gets or sets the caching type. Possible values
 * include: 'None', 'ReadOnly', 'ReadWrite'
 * 
 * @member {string} createOption Gets or sets the create option. Possible
 * values include: 'fromImage', 'empty', 'attach'
 * 
 * @member {number} [diskSizeGB] Gets or sets the initial disk size in GB for
 * blank data disks, and the new desired size for existing OS and Data disks.
 * 
 */
export interface DataDisk {
    lun: number;
    name: string;
    vhd: VirtualHardDisk;
    image?: VirtualHardDisk;
    caching?: string;
    createOption: string;
    diskSizeGB?: number;
}

/**
 * @class
 * Initializes a new instance of the StorageProfile class.
 * @constructor
 * Describes a storage profile.
 * @member {object} [imageReference] Gets or sets the image reference.
 * 
 * @member {string} [imageReference.publisher] Gets or sets the image
 * publisher.
 * 
 * @member {string} [imageReference.offer] Gets or sets the image offer.
 * 
 * @member {string} [imageReference.sku] Gets or sets the image sku.
 * 
 * @member {string} [imageReference.version] Gets or sets the image version.
 * The allowed formats are Major.Minor.Build or 'latest'. Major, Minor and
 * Build being decimal numbers. Specify 'latest' to use the latest version of
 * image.
 * 
 * @member {object} [osDisk] Gets or sets the OS disk.
 * 
 * @member {string} [osDisk.osType] Gets or sets the Operating System type.
 * Possible values include: 'Windows', 'Linux'
 * 
 * @member {object} [osDisk.encryptionSettings] Gets or sets the disk
 * encryption settings.
 * 
 * @member {object} [osDisk.encryptionSettings.diskEncryptionKey] Gets or sets
 * the disk encryption key which is a KeyVault Secret.
 * 
 * @member {string} [osDisk.encryptionSettings.diskEncryptionKey.secretUrl]
 * Gets or sets the URL referencing a secret in a Key Vault.
 * 
 * @member {object} [osDisk.encryptionSettings.diskEncryptionKey.sourceVault]
 * Gets or sets the Relative URL of the Key Vault containing the secret.
 * 
 * @member {string}
 * [osDisk.encryptionSettings.diskEncryptionKey.sourceVault.id] Resource Id
 * 
 * @member {object} [osDisk.encryptionSettings.keyEncryptionKey] Gets or sets
 * the key encryption key which is KeyVault Key.
 * 
 * @member {string} [osDisk.encryptionSettings.keyEncryptionKey.keyUrl] Gets
 * or sets the URL referencing a key in a Key Vault.
 * 
 * @member {object} [osDisk.encryptionSettings.keyEncryptionKey.sourceVault]
 * Gets or sets the Relative URL of the Key Vault containing the key
 * 
 * @member {string}
 * [osDisk.encryptionSettings.keyEncryptionKey.sourceVault.id] Resource Id
 * 
 * @member {boolean} [osDisk.encryptionSettings.enabled] Gets or sets whether
 * disk encryption should be enabled on the Virtual Machine.
 * 
 * @member {string} [osDisk.name] Gets or sets the disk name.
 * 
 * @member {object} [osDisk.vhd] Gets or sets the Virtual Hard Disk.
 * 
 * @member {string} [osDisk.vhd.uri] Gets or sets the virtual hard disk's uri.
 * It should be a valid Uri to a virtual hard disk.
 * 
 * @member {object} [osDisk.image] Gets or sets the Source User Image
 * VirtualHardDisk. This VirtualHardDisk will be copied before using it to
 * attach to the Virtual Machine.If SourceImage is provided, the destination
 * VirtualHardDisk should not exist.
 * 
 * @member {string} [osDisk.image.uri] Gets or sets the virtual hard disk's
 * uri. It should be a valid Uri to a virtual hard disk.
 * 
 * @member {string} [osDisk.caching] Gets or sets the caching type. Possible
 * values include: 'None', 'ReadOnly', 'ReadWrite'
 * 
 * @member {string} [osDisk.createOption] Gets or sets the create option.
 * Possible values include: 'fromImage', 'empty', 'attach'
 * 
 * @member {number} [osDisk.diskSizeGB] Gets or sets the initial disk size in
 * GB for blank data disks, and the new desired size for existing OS and Data
 * disks.
 * 
 * @member {array} [dataDisks] Gets or sets the data disks.
 * 
 */
export interface StorageProfile {
    imageReference?: ImageReference;
    osDisk?: OSDisk;
    dataDisks?: DataDisk[];
}

/**
 * @class
 * Initializes a new instance of the AdditionalUnattendContent class.
 * @constructor
 * Gets or sets additional XML formatted information that can be included in
 * the Unattend.xml file, which is used by Windows Setup. Contents are
 * defined by setting name, component name, and the pass in which the content
 * is a applied.
 * @member {string} [passName] Gets or sets the pass name. Currently, the only
 * allowable value is oobeSystem. Possible values include: 'oobeSystem'
 * 
 * @member {string} [componentName] Gets or sets the component name.
 * Currently, the only allowable value is Microsoft-Windows-Shell-Setup.
 * Possible values include: 'Microsoft-Windows-Shell-Setup'
 * 
 * @member {string} [settingName] Gets or sets setting name (e.g.
 * FirstLogonCommands, AutoLogon ). Possible values include: 'AutoLogon',
 * 'FirstLogonCommands'
 * 
 * @member {string} [content] Gets or sets XML formatted content that is added
 * to the unattend.xml file in the specified pass and component.The XML must
 * be less than 4 KB and must include the root element for the setting or
 * feature that is being inserted.
 * 
 */
export interface AdditionalUnattendContent {
    passName?: string;
    componentName?: string;
    settingName?: string;
    content?: string;
}

/**
 * @class
 * Initializes a new instance of the WinRMListener class.
 * @constructor
 * Describes Protocol and thumbprint of Windows Remote Management listener
 * @member {string} [protocol] Gets or sets the Protocol used by WinRM
 * listener. Currently only Http and Https are supported. Possible values
 * include: 'Http', 'Https'
 * 
 * @member {string} [certificateUrl] Gets or sets the Certificate URL in KMS
 * for Https listeners. Should be null for Http listeners.
 * 
 */
export interface WinRMListener {
    protocol?: string;
    certificateUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the WinRMConfiguration class.
 * @constructor
 * Describes Windows Remote Management configuration of the VM
 * @member {array} [listeners] Gets or sets the list of Windows Remote
 * Management listeners
 * 
 */
export interface WinRMConfiguration {
    listeners?: WinRMListener[];
}

/**
 * @class
 * Initializes a new instance of the WindowsConfiguration class.
 * @constructor
 * Describes Windows Configuration of the OS Profile.
 * @member {boolean} [provisionVMAgent] Gets or sets whether VM Agent should
 * be provisioned on the Virtual Machine.
 * 
 * @member {boolean} [enableAutomaticUpdates] Gets or sets whether Windows
 * updates are automatically installed on the VM
 * 
 * @member {string} [timeZone] Gets or sets the Time Zone of the VM
 * 
 * @member {array} [additionalUnattendContent] Gets or sets the additional
 * base-64 encoded XML formatted information that can be included in the
 * Unattend.xml file.
 * 
 * @member {object} [winRM] Gets or sets the Windows Remote Management
 * configuration of the VM
 * 
 * @member {array} [winRM.listeners] Gets or sets the list of Windows Remote
 * Management listeners
 * 
 */
export interface WindowsConfiguration {
    provisionVMAgent?: boolean;
    enableAutomaticUpdates?: boolean;
    timeZone?: string;
    additionalUnattendContent?: AdditionalUnattendContent[];
    winRM?: WinRMConfiguration;
}

/**
 * @class
 * Initializes a new instance of the SshPublicKey class.
 * @constructor
 * Contains information about SSH certificate public key and the path on the
 * Linux VM where the public key is placed.
 * @member {string} [path] Gets or sets the full path on the created VM where
 * SSH public key is stored. If the file already exists, the specified key is
 * appended to the file.
 * 
 * @member {string} [keyData] Gets or sets Certificate public key used to
 * authenticate with VM through SSH.The certificate must be in Pem format
 * with or without headers.
 * 
 */
export interface SshPublicKey {
    path?: string;
    keyData?: string;
}

/**
 * @class
 * Initializes a new instance of the SshConfiguration class.
 * @constructor
 * SSH configuration for Linux based VMs running on Azure
 * @member {array} [publicKeys] Gets or sets the list of SSH public keys used
 * to authenticate with linux based VMs
 * 
 */
export interface SshConfiguration {
    publicKeys?: SshPublicKey[];
}

/**
 * @class
 * Initializes a new instance of the LinuxConfiguration class.
 * @constructor
 * Describes Windows Configuration of the OS Profile.
 * @member {boolean} [disablePasswordAuthentication] Gets or sets whether
 * Authentication using user name and password is allowed or not
 * 
 * @member {object} [ssh] Gets or sets the SSH configuration for linux VMs
 * 
 * @member {array} [ssh.publicKeys] Gets or sets the list of SSH public keys
 * used to authenticate with linux based VMs
 * 
 */
export interface LinuxConfiguration {
    disablePasswordAuthentication?: boolean;
    ssh?: SshConfiguration;
}

/**
 * @class
 * Initializes a new instance of the VaultCertificate class.
 * @constructor
 * Describes a single certificate reference in a Key Vault, and where the
 * certificate should reside on the VM.
 * @member {string} [certificateUrl] Gets or sets the URL referencing a secret
 * in a Key Vault which contains a properly formatted certificate.
 * 
 * @member {string} [certificateStore] Gets or sets the Certificate store in
 * LocalMachine to add the certificate to on Windows, leave empty on Linux.
 * 
 */
export interface VaultCertificate {
    certificateUrl?: string;
    certificateStore?: string;
}

/**
 * @class
 * Initializes a new instance of the VaultSecretGroup class.
 * @constructor
 * Describes a set of certificates which are all in the same Key Vault.
 * @member {object} [sourceVault] Gets or sets the Relative URL of the Key
 * Vault containing all of the certificates in VaultCertificates.
 * 
 * @member {string} [sourceVault.id] Resource Id
 * 
 * @member {array} [vaultCertificates] Gets or sets the list of key vault
 * references in SourceVault which contain certificates
 * 
 */
export interface VaultSecretGroup {
    sourceVault?: SubResource;
    vaultCertificates?: VaultCertificate[];
}

/**
 * @class
 * Initializes a new instance of the OSProfile class.
 * @constructor
 * Describes an OS profile.
 * @member {string} [computerName] Gets or sets the computer name.
 * 
 * @member {string} [adminUsername] Gets or sets the admin user name.
 * 
 * @member {string} [adminPassword] Gets or sets the admin user password.
 * 
 * @member {string} [customData] Gets or sets a base-64 encoded string of
 * custom data.
 * 
 * @member {object} [windowsConfiguration] Gets or sets the Windows
 * Configuration of the OS profile.
 * 
 * @member {boolean} [windowsConfiguration.provisionVMAgent] Gets or sets
 * whether VM Agent should be provisioned on the Virtual Machine.
 * 
 * @member {boolean} [windowsConfiguration.enableAutomaticUpdates] Gets or
 * sets whether Windows updates are automatically installed on the VM
 * 
 * @member {string} [windowsConfiguration.timeZone] Gets or sets the Time Zone
 * of the VM
 * 
 * @member {array} [windowsConfiguration.additionalUnattendContent] Gets or
 * sets the additional base-64 encoded XML formatted information that can be
 * included in the Unattend.xml file.
 * 
 * @member {object} [windowsConfiguration.winRM] Gets or sets the Windows
 * Remote Management configuration of the VM
 * 
 * @member {array} [windowsConfiguration.winRM.listeners] Gets or sets the
 * list of Windows Remote Management listeners
 * 
 * @member {object} [linuxConfiguration] Gets or sets the Linux Configuration
 * of the OS profile.
 * 
 * @member {boolean} [linuxConfiguration.disablePasswordAuthentication] Gets
 * or sets whether Authentication using user name and password is allowed or
 * not
 * 
 * @member {object} [linuxConfiguration.ssh] Gets or sets the SSH
 * configuration for linux VMs
 * 
 * @member {array} [linuxConfiguration.ssh.publicKeys] Gets or sets the list
 * of SSH public keys used to authenticate with linux based VMs
 * 
 * @member {array} [secrets] Gets or sets the List of certificates for
 * addition to the VM.
 * 
 */
export interface OSProfile {
    computerName?: string;
    adminUsername?: string;
    adminPassword?: string;
    customData?: string;
    windowsConfiguration?: WindowsConfiguration;
    linuxConfiguration?: LinuxConfiguration;
    secrets?: VaultSecretGroup[];
}

/**
 * @class
 * Initializes a new instance of the NetworkInterfaceReference class.
 * @constructor
 * Describes a network interface reference.
 * @member {boolean} [primary] Gets or sets whether this is a primary NIC on a
 * virtual machine
 * 
 */
export interface NetworkInterfaceReference extends SubResource {
    primary?: boolean;
}

/**
 * @class
 * Initializes a new instance of the NetworkProfile class.
 * @constructor
 * Describes a network profile.
 * @member {array} [networkInterfaces] Gets or sets the network interfaces.
 * 
 */
export interface NetworkProfile {
    networkInterfaces?: NetworkInterfaceReference[];
}

/**
 * @class
 * Initializes a new instance of the BootDiagnostics class.
 * @constructor
 * Describes Boot Diagnostics.
 * @member {boolean} [enabled] Gets or sets whether boot diagnostics should be
 * enabled on the Virtual Machine.
 * 
 * @member {string} [storageUri] Gets or sets the boot diagnostics storage
 * Uri. It should be a valid Uri
 * 
 */
export interface BootDiagnostics {
    enabled?: boolean;
    storageUri?: string;
}

/**
 * @class
 * Initializes a new instance of the DiagnosticsProfile class.
 * @constructor
 * Describes a diagnostics profile.
 * @member {object} [bootDiagnostics] Gets or sets the boot diagnostics.
 * 
 * @member {boolean} [bootDiagnostics.enabled] Gets or sets whether boot
 * diagnostics should be enabled on the Virtual Machine.
 * 
 * @member {string} [bootDiagnostics.storageUri] Gets or sets the boot
 * diagnostics storage Uri. It should be a valid Uri
 * 
 */
export interface DiagnosticsProfile {
    bootDiagnostics?: BootDiagnostics;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineExtensionHandlerInstanceView class.
 * @constructor
 * The instance view of a virtual machine extension handler.
 * @member {string} [type] Gets or sets full type of the extension handler
 * which includes both publisher and type.
 * 
 * @member {string} [typeHandlerVersion] Gets or sets the type version of the
 * extension handler.
 * 
 * @member {object} [status] Gets or sets the extension handler status.
 * 
 * @member {string} [status.code] Gets the status Code.
 * 
 * @member {string} [status.level] Gets or sets the level Code. Possible
 * values include: 'Info', 'Warning', 'Error'
 * 
 * @member {string} [status.displayStatus] Gets or sets the short localizable
 * label for the status.
 * 
 * @member {string} [status.message] Gets or sets the detailed Message,
 * including for alerts and error messages.
 * 
 * @member {date} [status.time] Gets or sets the time of the status.
 * 
 */
export interface VirtualMachineExtensionHandlerInstanceView {
    type?: string;
    typeHandlerVersion?: string;
    status?: InstanceViewStatus;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineAgentInstanceView class.
 * @constructor
 * The instance view of the VM Agent running on the virtual machine.
 * @member {string} [vmAgentVersion] Gets or sets the VM Agent full version.
 * 
 * @member {array} [extensionHandlers] Gets or sets the virtual machine
 * extension handler instance view.
 * 
 * @member {array} [statuses] Gets or sets the resource status information.
 * 
 */
export interface VirtualMachineAgentInstanceView {
    vmAgentVersion?: string;
    extensionHandlers?: VirtualMachineExtensionHandlerInstanceView[];
    statuses?: InstanceViewStatus[];
}

/**
 * @class
 * Initializes a new instance of the DiskInstanceView class.
 * @constructor
 * The instance view of the disk.
 * @member {string} [name] Gets or sets the disk name.
 * 
 * @member {array} [statuses] Gets or sets the resource status information.
 * 
 */
export interface DiskInstanceView {
    name?: string;
    statuses?: InstanceViewStatus[];
}

/**
 * @class
 * Initializes a new instance of the BootDiagnosticsInstanceView class.
 * @constructor
 * The instance view of a virtual machine boot diagnostics.
 * @member {string} [consoleScreenshotBlobUri] Gets or sets the console
 * screenshot blob Uri.
 * 
 * @member {string} [serialConsoleLogBlobUri] Gets or sets the Linux serial
 * console log blob Uri.
 * 
 */
export interface BootDiagnosticsInstanceView {
    consoleScreenshotBlobUri?: string;
    serialConsoleLogBlobUri?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineInstanceView class.
 * @constructor
 * The instance view of a virtual machine.
 * @member {number} [platformUpdateDomain] Gets or sets the Update Domain
 * count.
 * 
 * @member {number} [platformFaultDomain] Gets or sets the Fault Domain count.
 * 
 * @member {string} [rdpThumbPrint] Gets or sets the Remote desktop
 * certificate thumbprint.
 * 
 * @member {object} [vmAgent] Gets or sets the VM Agent running on the virtual
 * machine.
 * 
 * @member {string} [vmAgent.vmAgentVersion] Gets or sets the VM Agent full
 * version.
 * 
 * @member {array} [vmAgent.extensionHandlers] Gets or sets the virtual
 * machine extension handler instance view.
 * 
 * @member {array} [vmAgent.statuses] Gets or sets the resource status
 * information.
 * 
 * @member {array} [disks] Gets or sets the disks information.
 * 
 * @member {array} [extensions] Gets or sets the extensions information.
 * 
 * @member {object} [bootDiagnostics] Gets or sets the boot diagnostics.
 * 
 * @member {string} [bootDiagnostics.consoleScreenshotBlobUri] Gets or sets
 * the console screenshot blob Uri.
 * 
 * @member {string} [bootDiagnostics.serialConsoleLogBlobUri] Gets or sets the
 * Linux serial console log blob Uri.
 * 
 * @member {array} [statuses] Gets or sets the resource status information.
 * 
 */
export interface VirtualMachineInstanceView {
    platformUpdateDomain?: number;
    platformFaultDomain?: number;
    rdpThumbPrint?: string;
    vmAgent?: VirtualMachineAgentInstanceView;
    disks?: DiskInstanceView[];
    extensions?: VirtualMachineExtensionInstanceView[];
    bootDiagnostics?: BootDiagnosticsInstanceView;
    statuses?: InstanceViewStatus[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachine class.
 * @constructor
 * Describes a Virtual Machine.
 * @member {object} [plan] Gets or sets the purchase plan when deploying
 * virtual machine from VM Marketplace images.
 * 
 * @member {string} [plan.name] Gets or sets the plan ID.
 * 
 * @member {string} [plan.publisher] Gets or sets the publisher ID.
 * 
 * @member {string} [plan.product] Gets or sets the offer ID.
 * 
 * @member {string} [plan.promotionCode] Gets or sets the promotion code.
 * 
 * @member {object} [hardwareProfile] Gets or sets the hardware profile.
 * 
 * @member {string} [hardwareProfile.vmSize] The virtual machine size name.
 * Possible values include: 'Basic_A0', 'Basic_A1', 'Basic_A2', 'Basic_A3',
 * 'Basic_A4', 'Standard_A0', 'Standard_A1', 'Standard_A2', 'Standard_A3',
 * 'Standard_A4', 'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8',
 * 'Standard_A9', 'Standard_A10', 'Standard_A11', 'Standard_D1',
 * 'Standard_D2', 'Standard_D3', 'Standard_D4', 'Standard_D11',
 * 'Standard_D12', 'Standard_D13', 'Standard_D14', 'Standard_D1_v2',
 * 'Standard_D2_v2', 'Standard_D3_v2', 'Standard_D4_v2', 'Standard_D5_v2',
 * 'Standard_D11_v2', 'Standard_D12_v2', 'Standard_D13_v2',
 * 'Standard_D14_v2', 'Standard_D15_v2', 'Standard_DS1', 'Standard_DS2',
 * 'Standard_DS3', 'Standard_DS4', 'Standard_DS11', 'Standard_DS12',
 * 'Standard_DS13', 'Standard_DS14', 'Standard_DS1_v2', 'Standard_DS2_v2',
 * 'Standard_DS3_v2', 'Standard_DS4_v2', 'Standard_DS5_v2',
 * 'Standard_DS11_v2', 'Standard_DS12_v2', 'Standard_DS13_v2',
 * 'Standard_DS14_v2', 'Standard_DS15_v2', 'Standard_G1', 'Standard_G2',
 * 'Standard_G3', 'Standard_G4', 'Standard_G5', 'Standard_GS1',
 * 'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS5'
 * 
 * @member {object} [storageProfile] Gets or sets the storage profile.
 * 
 * @member {object} [storageProfile.imageReference] Gets or sets the image
 * reference.
 * 
 * @member {string} [storageProfile.imageReference.publisher] Gets or sets the
 * image publisher.
 * 
 * @member {string} [storageProfile.imageReference.offer] Gets or sets the
 * image offer.
 * 
 * @member {string} [storageProfile.imageReference.sku] Gets or sets the image
 * sku.
 * 
 * @member {string} [storageProfile.imageReference.version] Gets or sets the
 * image version. The allowed formats are Major.Minor.Build or 'latest'.
 * Major, Minor and Build being decimal numbers. Specify 'latest' to use the
 * latest version of image.
 * 
 * @member {object} [storageProfile.osDisk] Gets or sets the OS disk.
 * 
 * @member {string} [storageProfile.osDisk.osType] Gets or sets the Operating
 * System type. Possible values include: 'Windows', 'Linux'
 * 
 * @member {object} [storageProfile.osDisk.encryptionSettings] Gets or sets
 * the disk encryption settings.
 * 
 * @member {object}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey] Gets or sets
 * the disk encryption key which is a KeyVault Secret.
 * 
 * @member {string}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl]
 * Gets or sets the URL referencing a secret in a Key Vault.
 * 
 * @member {object}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault]
 * Gets or sets the Relative URL of the Key Vault containing the secret.
 * 
 * @member {string}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault.id]
 * Resource Id
 * 
 * @member {object}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey] Gets or sets
 * the key encryption key which is KeyVault Key.
 * 
 * @member {string}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl] Gets or
 * sets the URL referencing a key in a Key Vault.
 * 
 * @member {object}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault]
 * Gets or sets the Relative URL of the Key Vault containing the key
 * 
 * @member {string}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault.id]
 * Resource Id
 * 
 * @member {boolean} [storageProfile.osDisk.encryptionSettings.enabled] Gets
 * or sets whether disk encryption should be enabled on the Virtual Machine.
 * 
 * @member {string} [storageProfile.osDisk.name] Gets or sets the disk name.
 * 
 * @member {object} [storageProfile.osDisk.vhd] Gets or sets the Virtual Hard
 * Disk.
 * 
 * @member {string} [storageProfile.osDisk.vhd.uri] Gets or sets the virtual
 * hard disk's uri. It should be a valid Uri to a virtual hard disk.
 * 
 * @member {object} [storageProfile.osDisk.image] Gets or sets the Source User
 * Image VirtualHardDisk. This VirtualHardDisk will be copied before using it
 * to attach to the Virtual Machine.If SourceImage is provided, the
 * destination VirtualHardDisk should not exist.
 * 
 * @member {string} [storageProfile.osDisk.image.uri] Gets or sets the virtual
 * hard disk's uri. It should be a valid Uri to a virtual hard disk.
 * 
 * @member {string} [storageProfile.osDisk.caching] Gets or sets the caching
 * type. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
 * 
 * @member {string} [storageProfile.osDisk.createOption] Gets or sets the
 * create option. Possible values include: 'fromImage', 'empty', 'attach'
 * 
 * @member {number} [storageProfile.osDisk.diskSizeGB] Gets or sets the
 * initial disk size in GB for blank data disks, and the new desired size for
 * existing OS and Data disks.
 * 
 * @member {array} [storageProfile.dataDisks] Gets or sets the data disks.
 * 
 * @member {object} [osProfile] Gets or sets the OS profile.
 * 
 * @member {string} [osProfile.computerName] Gets or sets the computer name.
 * 
 * @member {string} [osProfile.adminUsername] Gets or sets the admin user name.
 * 
 * @member {string} [osProfile.adminPassword] Gets or sets the admin user
 * password.
 * 
 * @member {string} [osProfile.customData] Gets or sets a base-64 encoded
 * string of custom data.
 * 
 * @member {object} [osProfile.windowsConfiguration] Gets or sets the Windows
 * Configuration of the OS profile.
 * 
 * @member {boolean} [osProfile.windowsConfiguration.provisionVMAgent] Gets or
 * sets whether VM Agent should be provisioned on the Virtual Machine.
 * 
 * @member {boolean} [osProfile.windowsConfiguration.enableAutomaticUpdates]
 * Gets or sets whether Windows updates are automatically installed on the VM
 * 
 * @member {string} [osProfile.windowsConfiguration.timeZone] Gets or sets the
 * Time Zone of the VM
 * 
 * @member {array} [osProfile.windowsConfiguration.additionalUnattendContent]
 * Gets or sets the additional base-64 encoded XML formatted information that
 * can be included in the Unattend.xml file.
 * 
 * @member {object} [osProfile.windowsConfiguration.winRM] Gets or sets the
 * Windows Remote Management configuration of the VM
 * 
 * @member {array} [osProfile.windowsConfiguration.winRM.listeners] Gets or
 * sets the list of Windows Remote Management listeners
 * 
 * @member {object} [osProfile.linuxConfiguration] Gets or sets the Linux
 * Configuration of the OS profile.
 * 
 * @member {boolean}
 * [osProfile.linuxConfiguration.disablePasswordAuthentication] Gets or sets
 * whether Authentication using user name and password is allowed or not
 * 
 * @member {object} [osProfile.linuxConfiguration.ssh] Gets or sets the SSH
 * configuration for linux VMs
 * 
 * @member {array} [osProfile.linuxConfiguration.ssh.publicKeys] Gets or sets
 * the list of SSH public keys used to authenticate with linux based VMs
 * 
 * @member {array} [osProfile.secrets] Gets or sets the List of certificates
 * for addition to the VM.
 * 
 * @member {object} [networkProfile] Gets or sets the network profile.
 * 
 * @member {array} [networkProfile.networkInterfaces] Gets or sets the network
 * interfaces.
 * 
 * @member {object} [diagnosticsProfile] Gets or sets the diagnostics profile.
 * 
 * @member {object} [diagnosticsProfile.bootDiagnostics] Gets or sets the boot
 * diagnostics.
 * 
 * @member {boolean} [diagnosticsProfile.bootDiagnostics.enabled] Gets or sets
 * whether boot diagnostics should be enabled on the Virtual Machine.
 * 
 * @member {string} [diagnosticsProfile.bootDiagnostics.storageUri] Gets or
 * sets the boot diagnostics storage Uri. It should be a valid Uri
 * 
 * @member {object} [availabilitySet] Gets or sets the reference Id of the
 * availability set to which this virtual machine belongs.
 * 
 * @member {string} [availabilitySet.id] Resource Id
 * 
 * @member {string} [provisioningState] Gets or sets the provisioning state,
 * which only appears in the response.
 * 
 * @member {object} [instanceView] Gets the virtual machine instance view.
 * 
 * @member {number} [instanceView.platformUpdateDomain] Gets or sets the
 * Update Domain count.
 * 
 * @member {number} [instanceView.platformFaultDomain] Gets or sets the Fault
 * Domain count.
 * 
 * @member {string} [instanceView.rdpThumbPrint] Gets or sets the Remote
 * desktop certificate thumbprint.
 * 
 * @member {object} [instanceView.vmAgent] Gets or sets the VM Agent running
 * on the virtual machine.
 * 
 * @member {string} [instanceView.vmAgent.vmAgentVersion] Gets or sets the VM
 * Agent full version.
 * 
 * @member {array} [instanceView.vmAgent.extensionHandlers] Gets or sets the
 * virtual machine extension handler instance view.
 * 
 * @member {array} [instanceView.vmAgent.statuses] Gets or sets the resource
 * status information.
 * 
 * @member {array} [instanceView.disks] Gets or sets the disks information.
 * 
 * @member {array} [instanceView.extensions] Gets or sets the extensions
 * information.
 * 
 * @member {object} [instanceView.bootDiagnostics] Gets or sets the boot
 * diagnostics.
 * 
 * @member {string} [instanceView.bootDiagnostics.consoleScreenshotBlobUri]
 * Gets or sets the console screenshot blob Uri.
 * 
 * @member {string} [instanceView.bootDiagnostics.serialConsoleLogBlobUri]
 * Gets or sets the Linux serial console log blob Uri.
 * 
 * @member {array} [instanceView.statuses] Gets or sets the resource status
 * information.
 * 
 * @member {string} [licenseType] Gets or sets the license type, which is for
 * bring your own license scenario.
 * 
 * @member {string} [vmId] Gets the virtual machine unique id.
 * 
 * @member {array} [resources] Gets the virtual machine child extension
 * resources.
 * 
 */
export interface VirtualMachine extends Resource {
    plan?: Plan;
    hardwareProfile?: HardwareProfile;
    storageProfile?: StorageProfile;
    osProfile?: OSProfile;
    networkProfile?: NetworkProfile;
    diagnosticsProfile?: DiagnosticsProfile;
    availabilitySet?: SubResource;
    provisioningState?: string;
    instanceView?: VirtualMachineInstanceView;
    licenseType?: string;
    vmId?: string;
    resources?: VirtualMachineExtension[];
}

/**
 * @class
 * Initializes a new instance of the Sku class.
 * @constructor
 * Describes a virtual machine scale set sku.
 * @member {string} [name] Gets or sets the sku name.
 * 
 * @member {string} [tier] Gets or sets the sku tier.
 * 
 * @member {number} [capacity] Gets or sets the sku capacity.
 * 
 */
export interface Sku {
    name?: string;
    tier?: string;
    capacity?: number;
}

/**
 * @class
 * Initializes a new instance of the UpgradePolicy class.
 * @constructor
 * Describes an upgrade policy - automatic or manual.
 * @member {string} [mode] Gets or sets the upgrade mode. Possible values
 * include: 'Automatic', 'Manual'
 * 
 */
export interface UpgradePolicy {
    mode?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetOSProfile class.
 * @constructor
 * Describes a virtual machine scale set OS profile.
 * @member {string} [computerNamePrefix] Gets or sets the computer name prefix.
 * 
 * @member {string} [adminUsername] Gets or sets the admin user name.
 * 
 * @member {string} [adminPassword] Gets or sets the admin user password.
 * 
 * @member {string} [customData] Gets or sets a base-64 encoded string of
 * custom data.
 * 
 * @member {object} [windowsConfiguration] Gets or sets the Windows
 * Configuration of the OS profile.
 * 
 * @member {boolean} [windowsConfiguration.provisionVMAgent] Gets or sets
 * whether VM Agent should be provisioned on the Virtual Machine.
 * 
 * @member {boolean} [windowsConfiguration.enableAutomaticUpdates] Gets or
 * sets whether Windows updates are automatically installed on the VM
 * 
 * @member {string} [windowsConfiguration.timeZone] Gets or sets the Time Zone
 * of the VM
 * 
 * @member {array} [windowsConfiguration.additionalUnattendContent] Gets or
 * sets the additional base-64 encoded XML formatted information that can be
 * included in the Unattend.xml file.
 * 
 * @member {object} [windowsConfiguration.winRM] Gets or sets the Windows
 * Remote Management configuration of the VM
 * 
 * @member {array} [windowsConfiguration.winRM.listeners] Gets or sets the
 * list of Windows Remote Management listeners
 * 
 * @member {object} [linuxConfiguration] Gets or sets the Linux Configuration
 * of the OS profile.
 * 
 * @member {boolean} [linuxConfiguration.disablePasswordAuthentication] Gets
 * or sets whether Authentication using user name and password is allowed or
 * not
 * 
 * @member {object} [linuxConfiguration.ssh] Gets or sets the SSH
 * configuration for linux VMs
 * 
 * @member {array} [linuxConfiguration.ssh.publicKeys] Gets or sets the list
 * of SSH public keys used to authenticate with linux based VMs
 * 
 * @member {array} [secrets] Gets or sets the List of certificates for
 * addition to the VM.
 * 
 */
export interface VirtualMachineScaleSetOSProfile {
    computerNamePrefix?: string;
    adminUsername?: string;
    adminPassword?: string;
    customData?: string;
    windowsConfiguration?: WindowsConfiguration;
    linuxConfiguration?: LinuxConfiguration;
    secrets?: VaultSecretGroup[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetOSDisk class.
 * @constructor
 * Describes a virtual machine scale set operating system disk.
 * @member {string} name Gets or sets the disk name.
 * 
 * @member {string} [caching] Gets or sets the caching type. Possible values
 * include: 'None', 'ReadOnly', 'ReadWrite'
 * 
 * @member {string} createOption Gets or sets the create option. Possible
 * values include: 'fromImage', 'empty', 'attach'
 * 
 * @member {string} [osType] Gets or sets the Operating System type. Possible
 * values include: 'Windows', 'Linux'
 * 
 * @member {object} [image] Gets or sets the Source User Image
 * VirtualHardDisk. This VirtualHardDisk will be copied before using it to
 * attach to the Virtual Machine.If SourceImage is provided, the destination
 * VirtualHardDisk should not exist.
 * 
 * @member {string} [image.uri] Gets or sets the virtual hard disk's uri. It
 * should be a valid Uri to a virtual hard disk.
 * 
 * @member {array} [vhdContainers] Gets or sets the list of virtual hard disk
 * container uris.
 * 
 */
export interface VirtualMachineScaleSetOSDisk {
    name: string;
    caching?: string;
    createOption: string;
    osType?: string;
    image?: VirtualHardDisk;
    vhdContainers?: string[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetStorageProfile class.
 * @constructor
 * Describes a virtual machine scale set storage profile.
 * @member {object} [imageReference] Gets or sets the image reference.
 * 
 * @member {string} [imageReference.publisher] Gets or sets the image
 * publisher.
 * 
 * @member {string} [imageReference.offer] Gets or sets the image offer.
 * 
 * @member {string} [imageReference.sku] Gets or sets the image sku.
 * 
 * @member {string} [imageReference.version] Gets or sets the image version.
 * The allowed formats are Major.Minor.Build or 'latest'. Major, Minor and
 * Build being decimal numbers. Specify 'latest' to use the latest version of
 * image.
 * 
 * @member {object} [osDisk] Gets or sets the OS disk.
 * 
 * @member {string} [osDisk.name] Gets or sets the disk name.
 * 
 * @member {string} [osDisk.caching] Gets or sets the caching type. Possible
 * values include: 'None', 'ReadOnly', 'ReadWrite'
 * 
 * @member {string} [osDisk.createOption] Gets or sets the create option.
 * Possible values include: 'fromImage', 'empty', 'attach'
 * 
 * @member {string} [osDisk.osType] Gets or sets the Operating System type.
 * Possible values include: 'Windows', 'Linux'
 * 
 * @member {object} [osDisk.image] Gets or sets the Source User Image
 * VirtualHardDisk. This VirtualHardDisk will be copied before using it to
 * attach to the Virtual Machine.If SourceImage is provided, the destination
 * VirtualHardDisk should not exist.
 * 
 * @member {string} [osDisk.image.uri] Gets or sets the virtual hard disk's
 * uri. It should be a valid Uri to a virtual hard disk.
 * 
 * @member {array} [osDisk.vhdContainers] Gets or sets the list of virtual
 * hard disk container uris.
 * 
 */
export interface VirtualMachineScaleSetStorageProfile {
    imageReference?: ImageReference;
    osDisk?: VirtualMachineScaleSetOSDisk;
}

/**
 * @class
 * Initializes a new instance of the ApiEntityReference class.
 * @constructor
 * The API entity reference.
 * @member {string} [id] Gets or sets the ARM resource id in the form of
 * /subscriptions/{SubcriptionId}/resourceGroups/{ResourceGroupName}/...
 * 
 */
export interface ApiEntityReference {
    id?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetIPConfiguration class.
 * @constructor
 * Describes a virtual machine scale set network profile's IP configuration.
 * @member {string} name Gets or sets the IP configuration name.
 * 
 * @member {object} subnet Gets or sets the subnet.
 * 
 * @member {string} [subnet.id] Gets or sets the ARM resource id in the form
 * of /subscriptions/{SubcriptionId}/resourceGroups/{ResourceGroupName}/...
 * 
 * @member {array} [applicationGatewayBackendAddressPools] Gets or sets the
 * application gateway backend address pools.
 * 
 * @member {array} [loadBalancerBackendAddressPools] Gets or sets the load
 * balancer backend address pools.
 * 
 * @member {array} [loadBalancerInboundNatPools] Gets or sets the load
 * balancer inbound nat pools.
 * 
 */
export interface VirtualMachineScaleSetIPConfiguration extends SubResource {
    name: string;
    subnet: ApiEntityReference;
    applicationGatewayBackendAddressPools?: SubResource[];
    loadBalancerBackendAddressPools?: SubResource[];
    loadBalancerInboundNatPools?: SubResource[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetNetworkConfiguration class.
 * @constructor
 * Describes a virtual machine scale set network profile's network
 * configurations.
 * @member {string} name Gets or sets the network configuration name.
 * 
 * @member {boolean} [primary] Gets or sets whether this is a primary NIC on a
 * virtual machine.
 * 
 * @member {array} ipConfigurations Gets or sets the virtual machine scale set
 * IP Configuration.
 * 
 */
export interface VirtualMachineScaleSetNetworkConfiguration extends SubResource {
    name: string;
    primary?: boolean;
    ipConfigurations: VirtualMachineScaleSetIPConfiguration[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetNetworkProfile class.
 * @constructor
 * Describes a virtual machine scale set network profile.
 * @member {array} [networkInterfaceConfigurations] Gets or sets the list of
 * network configurations.
 * 
 */
export interface VirtualMachineScaleSetNetworkProfile {
    networkInterfaceConfigurations?: VirtualMachineScaleSetNetworkConfiguration[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetExtension class.
 * @constructor
 * Describes a Virtual Machine Scale Set Extension.
 * @member {string} [name] Gets or sets the name of the extension.
 * 
 * @member {string} [publisher] Gets or sets the name of the extension handler
 * publisher.
 * 
 * @member {string} [type] Gets or sets the type of the extension handler.
 * 
 * @member {string} [typeHandlerVersion] Gets or sets the type version of the
 * extension handler.
 * 
 * @member {boolean} [autoUpgradeMinorVersion] Gets or sets whether the
 * extension handler should be automatically upgraded across minor versions.
 * 
 * @member {object} [settings] Gets or sets Json formatted public settings for
 * the extension.
 * 
 * @member {object} [protectedSettings] Gets or sets Json formatted protected
 * settings for the extension.
 * 
 * @member {string} [provisioningState] Gets the provisioning state, which
 * only appears in the response.
 * 
 */
export interface VirtualMachineScaleSetExtension extends SubResource {
    name?: string;
    publisher?: string;
    type?: string;
    typeHandlerVersion?: string;
    autoUpgradeMinorVersion?: boolean;
    settings?: any;
    protectedSettings?: any;
    provisioningState?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetExtensionProfile class.
 * @constructor
 * Describes a virtual machine scale set extension profile.
 * @member {array} [extensions] Gets the virtual machine scale set child
 * extension resources.
 * 
 */
export interface VirtualMachineScaleSetExtensionProfile {
    extensions?: VirtualMachineScaleSetExtension[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVMProfile class.
 * @constructor
 * Describes a virtual machine scale set virtual machine profile.
 * @member {object} [osProfile] Gets or sets the virtual machine scale set OS
 * profile.
 * 
 * @member {string} [osProfile.computerNamePrefix] Gets or sets the computer
 * name prefix.
 * 
 * @member {string} [osProfile.adminUsername] Gets or sets the admin user name.
 * 
 * @member {string} [osProfile.adminPassword] Gets or sets the admin user
 * password.
 * 
 * @member {string} [osProfile.customData] Gets or sets a base-64 encoded
 * string of custom data.
 * 
 * @member {object} [osProfile.windowsConfiguration] Gets or sets the Windows
 * Configuration of the OS profile.
 * 
 * @member {boolean} [osProfile.windowsConfiguration.provisionVMAgent] Gets or
 * sets whether VM Agent should be provisioned on the Virtual Machine.
 * 
 * @member {boolean} [osProfile.windowsConfiguration.enableAutomaticUpdates]
 * Gets or sets whether Windows updates are automatically installed on the VM
 * 
 * @member {string} [osProfile.windowsConfiguration.timeZone] Gets or sets the
 * Time Zone of the VM
 * 
 * @member {array} [osProfile.windowsConfiguration.additionalUnattendContent]
 * Gets or sets the additional base-64 encoded XML formatted information that
 * can be included in the Unattend.xml file.
 * 
 * @member {object} [osProfile.windowsConfiguration.winRM] Gets or sets the
 * Windows Remote Management configuration of the VM
 * 
 * @member {array} [osProfile.windowsConfiguration.winRM.listeners] Gets or
 * sets the list of Windows Remote Management listeners
 * 
 * @member {object} [osProfile.linuxConfiguration] Gets or sets the Linux
 * Configuration of the OS profile.
 * 
 * @member {boolean}
 * [osProfile.linuxConfiguration.disablePasswordAuthentication] Gets or sets
 * whether Authentication using user name and password is allowed or not
 * 
 * @member {object} [osProfile.linuxConfiguration.ssh] Gets or sets the SSH
 * configuration for linux VMs
 * 
 * @member {array} [osProfile.linuxConfiguration.ssh.publicKeys] Gets or sets
 * the list of SSH public keys used to authenticate with linux based VMs
 * 
 * @member {array} [osProfile.secrets] Gets or sets the List of certificates
 * for addition to the VM.
 * 
 * @member {object} [storageProfile] Gets or sets the virtual machine scale
 * set storage profile.
 * 
 * @member {object} [storageProfile.imageReference] Gets or sets the image
 * reference.
 * 
 * @member {string} [storageProfile.imageReference.publisher] Gets or sets the
 * image publisher.
 * 
 * @member {string} [storageProfile.imageReference.offer] Gets or sets the
 * image offer.
 * 
 * @member {string} [storageProfile.imageReference.sku] Gets or sets the image
 * sku.
 * 
 * @member {string} [storageProfile.imageReference.version] Gets or sets the
 * image version. The allowed formats are Major.Minor.Build or 'latest'.
 * Major, Minor and Build being decimal numbers. Specify 'latest' to use the
 * latest version of image.
 * 
 * @member {object} [storageProfile.osDisk] Gets or sets the OS disk.
 * 
 * @member {string} [storageProfile.osDisk.name] Gets or sets the disk name.
 * 
 * @member {string} [storageProfile.osDisk.caching] Gets or sets the caching
 * type. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
 * 
 * @member {string} [storageProfile.osDisk.createOption] Gets or sets the
 * create option. Possible values include: 'fromImage', 'empty', 'attach'
 * 
 * @member {string} [storageProfile.osDisk.osType] Gets or sets the Operating
 * System type. Possible values include: 'Windows', 'Linux'
 * 
 * @member {object} [storageProfile.osDisk.image] Gets or sets the Source User
 * Image VirtualHardDisk. This VirtualHardDisk will be copied before using it
 * to attach to the Virtual Machine.If SourceImage is provided, the
 * destination VirtualHardDisk should not exist.
 * 
 * @member {string} [storageProfile.osDisk.image.uri] Gets or sets the virtual
 * hard disk's uri. It should be a valid Uri to a virtual hard disk.
 * 
 * @member {array} [storageProfile.osDisk.vhdContainers] Gets or sets the list
 * of virtual hard disk container uris.
 * 
 * @member {object} [networkProfile] Gets or sets the virtual machine scale
 * set network profile.
 * 
 * @member {array} [networkProfile.networkInterfaceConfigurations] Gets or
 * sets the list of network configurations.
 * 
 * @member {object} [extensionProfile] Gets the virtual machine scale set
 * extension profile.
 * 
 * @member {array} [extensionProfile.extensions] Gets the virtual machine
 * scale set child extension resources.
 * 
 */
export interface VirtualMachineScaleSetVMProfile {
    osProfile?: VirtualMachineScaleSetOSProfile;
    storageProfile?: VirtualMachineScaleSetStorageProfile;
    networkProfile?: VirtualMachineScaleSetNetworkProfile;
    extensionProfile?: VirtualMachineScaleSetExtensionProfile;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSet class.
 * @constructor
 * Describes a Virtual Machine Scale Set.
 * @member {object} [sku] Gets or sets the virtual machine scale set sku.
 * 
 * @member {string} [sku.name] Gets or sets the sku name.
 * 
 * @member {string} [sku.tier] Gets or sets the sku tier.
 * 
 * @member {number} [sku.capacity] Gets or sets the sku capacity.
 * 
 * @member {object} [upgradePolicy] Gets or sets the upgrade policy.
 * 
 * @member {string} [upgradePolicy.mode] Gets or sets the upgrade mode.
 * Possible values include: 'Automatic', 'Manual'
 * 
 * @member {object} [virtualMachineProfile] Gets or sets the virtual machine
 * profile.
 * 
 * @member {object} [virtualMachineProfile.osProfile] Gets or sets the virtual
 * machine scale set OS profile.
 * 
 * @member {string} [virtualMachineProfile.osProfile.computerNamePrefix] Gets
 * or sets the computer name prefix.
 * 
 * @member {string} [virtualMachineProfile.osProfile.adminUsername] Gets or
 * sets the admin user name.
 * 
 * @member {string} [virtualMachineProfile.osProfile.adminPassword] Gets or
 * sets the admin user password.
 * 
 * @member {string} [virtualMachineProfile.osProfile.customData] Gets or sets
 * a base-64 encoded string of custom data.
 * 
 * @member {object} [virtualMachineProfile.osProfile.windowsConfiguration]
 * Gets or sets the Windows Configuration of the OS profile.
 * 
 * @member {boolean}
 * [virtualMachineProfile.osProfile.windowsConfiguration.provisionVMAgent]
 * Gets or sets whether VM Agent should be provisioned on the Virtual Machine.
 * 
 * @member {boolean}
 * [virtualMachineProfile.osProfile.windowsConfiguration.enableAutomaticUpdates]
 * Gets or sets whether Windows updates are automatically installed on the VM
 * 
 * @member {string}
 * [virtualMachineProfile.osProfile.windowsConfiguration.timeZone] Gets or
 * sets the Time Zone of the VM
 * 
 * @member {array}
 * [virtualMachineProfile.osProfile.windowsConfiguration.additionalUnattendContent]
 * Gets or sets the additional base-64 encoded XML formatted information that
 * can be included in the Unattend.xml file.
 * 
 * @member {object}
 * [virtualMachineProfile.osProfile.windowsConfiguration.winRM] Gets or sets
 * the Windows Remote Management configuration of the VM
 * 
 * @member {array}
 * [virtualMachineProfile.osProfile.windowsConfiguration.winRM.listeners]
 * Gets or sets the list of Windows Remote Management listeners
 * 
 * @member {object} [virtualMachineProfile.osProfile.linuxConfiguration] Gets
 * or sets the Linux Configuration of the OS profile.
 * 
 * @member {boolean}
 * [virtualMachineProfile.osProfile.linuxConfiguration.disablePasswordAuthentication]
 * Gets or sets whether Authentication using user name and password is
 * allowed or not
 * 
 * @member {object} [virtualMachineProfile.osProfile.linuxConfiguration.ssh]
 * Gets or sets the SSH configuration for linux VMs
 * 
 * @member {array}
 * [virtualMachineProfile.osProfile.linuxConfiguration.ssh.publicKeys] Gets
 * or sets the list of SSH public keys used to authenticate with linux based
 * VMs
 * 
 * @member {array} [virtualMachineProfile.osProfile.secrets] Gets or sets the
 * List of certificates for addition to the VM.
 * 
 * @member {object} [virtualMachineProfile.storageProfile] Gets or sets the
 * virtual machine scale set storage profile.
 * 
 * @member {object} [virtualMachineProfile.storageProfile.imageReference] Gets
 * or sets the image reference.
 * 
 * @member {string}
 * [virtualMachineProfile.storageProfile.imageReference.publisher] Gets or
 * sets the image publisher.
 * 
 * @member {string}
 * [virtualMachineProfile.storageProfile.imageReference.offer] Gets or sets
 * the image offer.
 * 
 * @member {string} [virtualMachineProfile.storageProfile.imageReference.sku]
 * Gets or sets the image sku.
 * 
 * @member {string}
 * [virtualMachineProfile.storageProfile.imageReference.version] Gets or sets
 * the image version. The allowed formats are Major.Minor.Build or 'latest'.
 * Major, Minor and Build being decimal numbers. Specify 'latest' to use the
 * latest version of image.
 * 
 * @member {object} [virtualMachineProfile.storageProfile.osDisk] Gets or sets
 * the OS disk.
 * 
 * @member {string} [virtualMachineProfile.storageProfile.osDisk.name] Gets or
 * sets the disk name.
 * 
 * @member {string} [virtualMachineProfile.storageProfile.osDisk.caching] Gets
 * or sets the caching type. Possible values include: 'None', 'ReadOnly',
 * 'ReadWrite'
 * 
 * @member {string} [virtualMachineProfile.storageProfile.osDisk.createOption]
 * Gets or sets the create option. Possible values include: 'fromImage',
 * 'empty', 'attach'
 * 
 * @member {string} [virtualMachineProfile.storageProfile.osDisk.osType] Gets
 * or sets the Operating System type. Possible values include: 'Windows',
 * 'Linux'
 * 
 * @member {object} [virtualMachineProfile.storageProfile.osDisk.image] Gets
 * or sets the Source User Image VirtualHardDisk. This VirtualHardDisk will
 * be copied before using it to attach to the Virtual Machine.If SourceImage
 * is provided, the destination VirtualHardDisk should not exist.
 * 
 * @member {string} [virtualMachineProfile.storageProfile.osDisk.image.uri]
 * Gets or sets the virtual hard disk's uri. It should be a valid Uri to a
 * virtual hard disk.
 * 
 * @member {array} [virtualMachineProfile.storageProfile.osDisk.vhdContainers]
 * Gets or sets the list of virtual hard disk container uris.
 * 
 * @member {object} [virtualMachineProfile.networkProfile] Gets or sets the
 * virtual machine scale set network profile.
 * 
 * @member {array}
 * [virtualMachineProfile.networkProfile.networkInterfaceConfigurations] Gets
 * or sets the list of network configurations.
 * 
 * @member {object} [virtualMachineProfile.extensionProfile] Gets the virtual
 * machine scale set extension profile.
 * 
 * @member {array} [virtualMachineProfile.extensionProfile.extensions] Gets
 * the virtual machine scale set child extension resources.
 * 
 * @member {string} [provisioningState] Gets or sets the provisioning state,
 * which only appears in the response.
 * 
 * @member {boolean} [overProvision] Specifies whether the Virtual Machine
 * Scale Set should be overprovisioned.
 * 
 */
export interface VirtualMachineScaleSet extends Resource {
    sku?: Sku;
    upgradePolicy?: UpgradePolicy;
    virtualMachineProfile?: VirtualMachineScaleSetVMProfile;
    provisioningState?: string;
    overProvision?: boolean;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVMInstanceIDs class.
 * @constructor
 * Specifies the list of virtual machine scale set instance IDs.
 * @member {array} [instanceIds] Gets or sets the virtual machine scale set
 * instance ids.
 * 
 */
export interface VirtualMachineScaleSetVMInstanceIDs {
    instanceIds?: string[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVMInstanceRequiredIDs class.
 * @constructor
 * Specifies the list of virtual machine scale set instance IDs.
 * @member {array} instanceIds Gets or sets the virtual machine scale set
 * instance ids.
 * 
 */
export interface VirtualMachineScaleSetVMInstanceRequiredIDs {
    instanceIds: string[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineStatusCodeCount class.
 * @constructor
 * The status code and count of the virtual machine scale set instance view
 * status summary.
 * @member {string} [code] Gets the instance view status code.
 * 
 * @member {number} [count] Gets the number of instances having a particular
 * status code.
 * 
 */
export interface VirtualMachineStatusCodeCount {
    code?: string;
    count?: number;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetInstanceViewStatusesSummary class.
 * @constructor
 * Instance view statuses summary for virtual machines of a virtual machine
 * scale set.
 * @member {array} [statusesSummary] Gets the extensions information.
 * 
 */
export interface VirtualMachineScaleSetInstanceViewStatusesSummary {
    statusesSummary?: VirtualMachineStatusCodeCount[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVMExtensionsSummary class.
 * @constructor
 * Extensions summary for virtual machines of a virtual machine scale set.
 * @member {string} [name] Gets the extension name.
 * 
 * @member {array} [statusesSummary] Gets the extensions information.
 * 
 */
export interface VirtualMachineScaleSetVMExtensionsSummary {
    name?: string;
    statusesSummary?: VirtualMachineStatusCodeCount[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetInstanceView class.
 * @constructor
 * The instance view of a virtual machine scale set.
 * @member {object} [virtualMachine] Gets the instance view status summary for
 * the virtual machine scale set.
 * 
 * @member {array} [virtualMachine.statusesSummary] Gets the extensions
 * information.
 * 
 * @member {array} [extensions] Gets the extensions information.
 * 
 * @member {array} [statuses] Gets or sets the resource status information.
 * 
 */
export interface VirtualMachineScaleSetInstanceView {
    virtualMachine?: VirtualMachineScaleSetInstanceViewStatusesSummary;
    extensions?: VirtualMachineScaleSetVMExtensionsSummary[];
    statuses?: InstanceViewStatus[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetSkuCapacity class.
 * @constructor
 * Describes scaling information of a sku.
 * @member {number} [minimum] Gets the minimum capacity.
 * 
 * @member {number} [maximum] Gets the maximum capacity that can be set.
 * 
 * @member {number} [defaultCapacity] Gets the default capacity.
 * 
 * @member {string} [scaleType] Gets the scale type applicable to the sku.
 * Possible values include: 'Automatic', 'None'
 * 
 */
export interface VirtualMachineScaleSetSkuCapacity {
    minimum?: number;
    maximum?: number;
    defaultCapacity?: number;
    scaleType?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetSku class.
 * @constructor
 * Describes an available virtual machine scale set sku.
 * @member {string} [resourceType] Gets the type of resource the sku applies
 * to.
 * 
 * @member {object} [sku] Gets the Sku.
 * 
 * @member {string} [sku.name] Gets or sets the sku name.
 * 
 * @member {string} [sku.tier] Gets or sets the sku tier.
 * 
 * @member {number} [sku.capacity] Gets or sets the sku capacity.
 * 
 * @member {object} [capacity] Gets available scaling information.
 * 
 * @member {number} [capacity.minimum] Gets the minimum capacity.
 * 
 * @member {number} [capacity.maximum] Gets the maximum capacity that can be
 * set.
 * 
 * @member {number} [capacity.defaultCapacity] Gets the default capacity.
 * 
 * @member {string} [capacity.scaleType] Gets the scale type applicable to the
 * sku. Possible values include: 'Automatic', 'None'
 * 
 */
export interface VirtualMachineScaleSetSku {
    resourceType?: string;
    sku?: Sku;
    capacity?: VirtualMachineScaleSetSkuCapacity;
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVM class.
 * @constructor
 * Describes a virtual machine scale set virtual machine.
 * @member {string} [instanceId] Gets the virtual machine instance id.
 * 
 * @member {object} [sku] Gets the virtual machine sku.
 * 
 * @member {string} [sku.name] Gets or sets the sku name.
 * 
 * @member {string} [sku.tier] Gets or sets the sku tier.
 * 
 * @member {number} [sku.capacity] Gets or sets the sku capacity.
 * 
 * @member {boolean} [latestModelApplied] Specifies whether the latest model
 * has been applied to the virtual machine.
 * 
 * @member {object} [instanceView] Gets the virtual machine instance view.
 * 
 * @member {number} [instanceView.platformUpdateDomain] Gets or sets the
 * Update Domain count.
 * 
 * @member {number} [instanceView.platformFaultDomain] Gets or sets the Fault
 * Domain count.
 * 
 * @member {string} [instanceView.rdpThumbPrint] Gets or sets the Remote
 * desktop certificate thumbprint.
 * 
 * @member {object} [instanceView.vmAgent] Gets or sets the VM Agent running
 * on the virtual machine.
 * 
 * @member {string} [instanceView.vmAgent.vmAgentVersion] Gets or sets the VM
 * Agent full version.
 * 
 * @member {array} [instanceView.vmAgent.extensionHandlers] Gets or sets the
 * virtual machine extension handler instance view.
 * 
 * @member {array} [instanceView.vmAgent.statuses] Gets or sets the resource
 * status information.
 * 
 * @member {array} [instanceView.disks] Gets or sets the disks information.
 * 
 * @member {array} [instanceView.extensions] Gets or sets the extensions
 * information.
 * 
 * @member {object} [instanceView.bootDiagnostics] Gets or sets the boot
 * diagnostics.
 * 
 * @member {string} [instanceView.bootDiagnostics.consoleScreenshotBlobUri]
 * Gets or sets the console screenshot blob Uri.
 * 
 * @member {string} [instanceView.bootDiagnostics.serialConsoleLogBlobUri]
 * Gets or sets the Linux serial console log blob Uri.
 * 
 * @member {array} [instanceView.statuses] Gets or sets the resource status
 * information.
 * 
 * @member {object} [hardwareProfile] Gets or sets the hardware profile.
 * 
 * @member {string} [hardwareProfile.vmSize] The virtual machine size name.
 * Possible values include: 'Basic_A0', 'Basic_A1', 'Basic_A2', 'Basic_A3',
 * 'Basic_A4', 'Standard_A0', 'Standard_A1', 'Standard_A2', 'Standard_A3',
 * 'Standard_A4', 'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8',
 * 'Standard_A9', 'Standard_A10', 'Standard_A11', 'Standard_D1',
 * 'Standard_D2', 'Standard_D3', 'Standard_D4', 'Standard_D11',
 * 'Standard_D12', 'Standard_D13', 'Standard_D14', 'Standard_D1_v2',
 * 'Standard_D2_v2', 'Standard_D3_v2', 'Standard_D4_v2', 'Standard_D5_v2',
 * 'Standard_D11_v2', 'Standard_D12_v2', 'Standard_D13_v2',
 * 'Standard_D14_v2', 'Standard_D15_v2', 'Standard_DS1', 'Standard_DS2',
 * 'Standard_DS3', 'Standard_DS4', 'Standard_DS11', 'Standard_DS12',
 * 'Standard_DS13', 'Standard_DS14', 'Standard_DS1_v2', 'Standard_DS2_v2',
 * 'Standard_DS3_v2', 'Standard_DS4_v2', 'Standard_DS5_v2',
 * 'Standard_DS11_v2', 'Standard_DS12_v2', 'Standard_DS13_v2',
 * 'Standard_DS14_v2', 'Standard_DS15_v2', 'Standard_G1', 'Standard_G2',
 * 'Standard_G3', 'Standard_G4', 'Standard_G5', 'Standard_GS1',
 * 'Standard_GS2', 'Standard_GS3', 'Standard_GS4', 'Standard_GS5'
 * 
 * @member {object} [storageProfile] Gets or sets the storage profile.
 * 
 * @member {object} [storageProfile.imageReference] Gets or sets the image
 * reference.
 * 
 * @member {string} [storageProfile.imageReference.publisher] Gets or sets the
 * image publisher.
 * 
 * @member {string} [storageProfile.imageReference.offer] Gets or sets the
 * image offer.
 * 
 * @member {string} [storageProfile.imageReference.sku] Gets or sets the image
 * sku.
 * 
 * @member {string} [storageProfile.imageReference.version] Gets or sets the
 * image version. The allowed formats are Major.Minor.Build or 'latest'.
 * Major, Minor and Build being decimal numbers. Specify 'latest' to use the
 * latest version of image.
 * 
 * @member {object} [storageProfile.osDisk] Gets or sets the OS disk.
 * 
 * @member {string} [storageProfile.osDisk.osType] Gets or sets the Operating
 * System type. Possible values include: 'Windows', 'Linux'
 * 
 * @member {object} [storageProfile.osDisk.encryptionSettings] Gets or sets
 * the disk encryption settings.
 * 
 * @member {object}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey] Gets or sets
 * the disk encryption key which is a KeyVault Secret.
 * 
 * @member {string}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl]
 * Gets or sets the URL referencing a secret in a Key Vault.
 * 
 * @member {object}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault]
 * Gets or sets the Relative URL of the Key Vault containing the secret.
 * 
 * @member {string}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault.id]
 * Resource Id
 * 
 * @member {object}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey] Gets or sets
 * the key encryption key which is KeyVault Key.
 * 
 * @member {string}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl] Gets or
 * sets the URL referencing a key in a Key Vault.
 * 
 * @member {object}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault]
 * Gets or sets the Relative URL of the Key Vault containing the key
 * 
 * @member {string}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault.id]
 * Resource Id
 * 
 * @member {boolean} [storageProfile.osDisk.encryptionSettings.enabled] Gets
 * or sets whether disk encryption should be enabled on the Virtual Machine.
 * 
 * @member {string} [storageProfile.osDisk.name] Gets or sets the disk name.
 * 
 * @member {object} [storageProfile.osDisk.vhd] Gets or sets the Virtual Hard
 * Disk.
 * 
 * @member {string} [storageProfile.osDisk.vhd.uri] Gets or sets the virtual
 * hard disk's uri. It should be a valid Uri to a virtual hard disk.
 * 
 * @member {object} [storageProfile.osDisk.image] Gets or sets the Source User
 * Image VirtualHardDisk. This VirtualHardDisk will be copied before using it
 * to attach to the Virtual Machine.If SourceImage is provided, the
 * destination VirtualHardDisk should not exist.
 * 
 * @member {string} [storageProfile.osDisk.image.uri] Gets or sets the virtual
 * hard disk's uri. It should be a valid Uri to a virtual hard disk.
 * 
 * @member {string} [storageProfile.osDisk.caching] Gets or sets the caching
 * type. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
 * 
 * @member {string} [storageProfile.osDisk.createOption] Gets or sets the
 * create option. Possible values include: 'fromImage', 'empty', 'attach'
 * 
 * @member {number} [storageProfile.osDisk.diskSizeGB] Gets or sets the
 * initial disk size in GB for blank data disks, and the new desired size for
 * existing OS and Data disks.
 * 
 * @member {array} [storageProfile.dataDisks] Gets or sets the data disks.
 * 
 * @member {object} [osProfile] Gets or sets the OS profile.
 * 
 * @member {string} [osProfile.computerName] Gets or sets the computer name.
 * 
 * @member {string} [osProfile.adminUsername] Gets or sets the admin user name.
 * 
 * @member {string} [osProfile.adminPassword] Gets or sets the admin user
 * password.
 * 
 * @member {string} [osProfile.customData] Gets or sets a base-64 encoded
 * string of custom data.
 * 
 * @member {object} [osProfile.windowsConfiguration] Gets or sets the Windows
 * Configuration of the OS profile.
 * 
 * @member {boolean} [osProfile.windowsConfiguration.provisionVMAgent] Gets or
 * sets whether VM Agent should be provisioned on the Virtual Machine.
 * 
 * @member {boolean} [osProfile.windowsConfiguration.enableAutomaticUpdates]
 * Gets or sets whether Windows updates are automatically installed on the VM
 * 
 * @member {string} [osProfile.windowsConfiguration.timeZone] Gets or sets the
 * Time Zone of the VM
 * 
 * @member {array} [osProfile.windowsConfiguration.additionalUnattendContent]
 * Gets or sets the additional base-64 encoded XML formatted information that
 * can be included in the Unattend.xml file.
 * 
 * @member {object} [osProfile.windowsConfiguration.winRM] Gets or sets the
 * Windows Remote Management configuration of the VM
 * 
 * @member {array} [osProfile.windowsConfiguration.winRM.listeners] Gets or
 * sets the list of Windows Remote Management listeners
 * 
 * @member {object} [osProfile.linuxConfiguration] Gets or sets the Linux
 * Configuration of the OS profile.
 * 
 * @member {boolean}
 * [osProfile.linuxConfiguration.disablePasswordAuthentication] Gets or sets
 * whether Authentication using user name and password is allowed or not
 * 
 * @member {object} [osProfile.linuxConfiguration.ssh] Gets or sets the SSH
 * configuration for linux VMs
 * 
 * @member {array} [osProfile.linuxConfiguration.ssh.publicKeys] Gets or sets
 * the list of SSH public keys used to authenticate with linux based VMs
 * 
 * @member {array} [osProfile.secrets] Gets or sets the List of certificates
 * for addition to the VM.
 * 
 * @member {object} [networkProfile] Gets or sets the network profile.
 * 
 * @member {array} [networkProfile.networkInterfaces] Gets or sets the network
 * interfaces.
 * 
 * @member {object} [diagnosticsProfile] Gets or sets the diagnostics profile.
 * 
 * @member {object} [diagnosticsProfile.bootDiagnostics] Gets or sets the boot
 * diagnostics.
 * 
 * @member {boolean} [diagnosticsProfile.bootDiagnostics.enabled] Gets or sets
 * whether boot diagnostics should be enabled on the Virtual Machine.
 * 
 * @member {string} [diagnosticsProfile.bootDiagnostics.storageUri] Gets or
 * sets the boot diagnostics storage Uri. It should be a valid Uri
 * 
 * @member {object} [availabilitySet] Gets or sets the reference Id of the
 * availability set to which this virtual machine belongs.
 * 
 * @member {string} [availabilitySet.id] Resource Id
 * 
 * @member {string} [provisioningState] Gets or sets the provisioning state,
 * which only appears in the response.
 * 
 * @member {string} [licenseType] Gets or sets the license type, which is for
 * bring your own license scenario.
 * 
 * @member {object} [plan] Gets or sets the purchase plan when deploying
 * virtual machine from VM Marketplace images.
 * 
 * @member {string} [plan.name] Gets or sets the plan ID.
 * 
 * @member {string} [plan.publisher] Gets or sets the publisher ID.
 * 
 * @member {string} [plan.product] Gets or sets the offer ID.
 * 
 * @member {string} [plan.promotionCode] Gets or sets the promotion code.
 * 
 * @member {array} [resources] Gets the virtual machine child extension
 * resources.
 * 
 */
export interface VirtualMachineScaleSetVM extends Resource {
    instanceId?: string;
    sku?: Sku;
    latestModelApplied?: boolean;
    instanceView?: VirtualMachineInstanceView;
    hardwareProfile?: HardwareProfile;
    storageProfile?: StorageProfile;
    osProfile?: OSProfile;
    networkProfile?: NetworkProfile;
    diagnosticsProfile?: DiagnosticsProfile;
    availabilitySet?: SubResource;
    provisioningState?: string;
    licenseType?: string;
    plan?: Plan;
    resources?: VirtualMachineExtension[];
}

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVMInstanceView class.
 * @constructor
 * The instance view of a virtual machine scale set VM.
 * @member {number} [platformUpdateDomain] Gets or sets the Update Domain
 * count.
 * 
 * @member {number} [platformFaultDomain] Gets or sets the Fault Domain count.
 * 
 * @member {string} [rdpThumbPrint] Gets or sets the Remote desktop
 * certificate thumbprint.
 * 
 * @member {object} [vmAgent] Gets or sets the VM Agent running on the virtual
 * machine.
 * 
 * @member {string} [vmAgent.vmAgentVersion] Gets or sets the VM Agent full
 * version.
 * 
 * @member {array} [vmAgent.extensionHandlers] Gets or sets the virtual
 * machine extension handler instance view.
 * 
 * @member {array} [vmAgent.statuses] Gets or sets the resource status
 * information.
 * 
 * @member {array} [disks] Gets or sets the disks information.
 * 
 * @member {array} [extensions] Gets or sets the extensions information.
 * 
 * @member {object} [bootDiagnostics] Gets or sets the boot diagnostics.
 * 
 * @member {string} [bootDiagnostics.consoleScreenshotBlobUri] Gets or sets
 * the console screenshot blob Uri.
 * 
 * @member {string} [bootDiagnostics.serialConsoleLogBlobUri] Gets or sets the
 * Linux serial console log blob Uri.
 * 
 * @member {array} [statuses] Gets or sets the resource status information.
 * 
 */
export interface VirtualMachineScaleSetVMInstanceView {
    platformUpdateDomain?: number;
    platformFaultDomain?: number;
    rdpThumbPrint?: string;
    vmAgent?: VirtualMachineAgentInstanceView;
    disks?: DiskInstanceView[];
    extensions?: VirtualMachineExtensionInstanceView[];
    bootDiagnostics?: BootDiagnosticsInstanceView;
    statuses?: InstanceViewStatus[];
}

/**
 * @class
 * Initializes a new instance of the ApiErrorBase class.
 * @constructor
 * Api error base.
 * @member {string} [code] Gets or sets the error code.
 * 
 * @member {string} [target] Gets or sets the target of the particular error.
 * 
 * @member {string} [message] Gets or sets the error message.
 * 
 */
export interface ApiErrorBase {
    code?: string;
    target?: string;
    message?: string;
}

/**
 * @class
 * Initializes a new instance of the InnerError class.
 * @constructor
 * Inner error details.
 * @member {string} [exceptiontype] Gets or sets the exception type.
 * 
 * @member {string} [errordetail] Gets or sets the internal error message or
 * exception dump.
 * 
 */
export interface InnerError {
    exceptiontype?: string;
    errordetail?: string;
}

/**
 * @class
 * Initializes a new instance of the ApiError class.
 * @constructor
 * Api error.
 * @member {array} [details] Gets or sets the Api error details
 * 
 * @member {object} [innererror] Gets or sets the Api inner error
 * 
 * @member {string} [innererror.exceptiontype] Gets or sets the exception type.
 * 
 * @member {string} [innererror.errordetail] Gets or sets the internal error
 * message or exception dump.
 * 
 * @member {string} [code] Gets or sets the error code.
 * 
 * @member {string} [target] Gets or sets the target of the particular error.
 * 
 * @member {string} [message] Gets or sets the error message.
 * 
 */
export interface ApiError {
    details?: ApiErrorBase[];
    innererror?: InnerError;
    code?: string;
    target?: string;
    message?: string;
}

/**
 * @class
 * Initializes a new instance of the ComputeLongRunningOperationProperties class.
 * @constructor
 * Compute-specific operation properties, including output
 * @member {object} [output] Operation output data (raw JSON)
 * 
 */
export interface ComputeLongRunningOperationProperties {
    output?: any;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceOrchestratorProfile class.
 * @constructor
 * Profile for Orchestrator
 * @member {string} [orchestratorType] Specifies what orchestrator will be
 * used to manage container cluster resources. Possible values include:
 * 'Swarm', 'DCOS'
 * 
 */
export interface ContainerServiceOrchestratorProfile {
    orchestratorType?: string;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceMasterProfile class.
 * @constructor
 * Profile for container service master
 * @member {number} [count] Number of masters (VMs) in the container cluster
 * 
 * @member {string} dnsPrefix DNS prefix to be used to create FQDN for master
 * 
 * @member {string} [fqdn] FDQN for the master
 * 
 */
export interface ContainerServiceMasterProfile {
    count?: number;
    dnsPrefix: string;
    fqdn?: string;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceAgentPoolProfile class.
 * @constructor
 * Profile for container service agent pool
 * @member {string} name Unique name of the agent pool profile within the
 * context of the subscription and resource group
 * 
 * @member {number} [count] No. of agents (VMs) that will host docker
 * containers
 * 
 * @member {string} [vmSize] Size of agent VMs. Possible values include:
 * 'Standard_A0', 'Standard_A1', 'Standard_A2', 'Standard_A3', 'Standard_A4',
 * 'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8', 'Standard_A9',
 * 'Standard_A10', 'Standard_A11', 'Standard_D1', 'Standard_D2',
 * 'Standard_D3', 'Standard_D4', 'Standard_D11', 'Standard_D12',
 * 'Standard_D13', 'Standard_D14', 'Standard_D1_v2', 'Standard_D2_v2',
 * 'Standard_D3_v2', 'Standard_D4_v2', 'Standard_D5_v2', 'Standard_D11_v2',
 * 'Standard_D12_v2', 'Standard_D13_v2', 'Standard_D14_v2', 'Standard_G1',
 * 'Standard_G2', 'Standard_G3', 'Standard_G4', 'Standard_G5',
 * 'Standard_DS1', 'Standard_DS2', 'Standard_DS3', 'Standard_DS4',
 * 'Standard_DS11', 'Standard_DS12', 'Standard_DS13', 'Standard_DS14',
 * 'Standard_GS1', 'Standard_GS2', 'Standard_GS3', 'Standard_GS4',
 * 'Standard_GS5'
 * 
 * @member {string} dnsPrefix DNS prefix to be used to create FQDN for this
 * agent pool
 * 
 * @member {string} [fqdn] FDQN for the agent pool
 * 
 */
export interface ContainerServiceAgentPoolProfile {
    name: string;
    count?: number;
    vmSize?: string;
    dnsPrefix: string;
    fqdn?: string;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceWindowsProfile class.
 * @constructor
 * Profile for Windows VMs
 * @member {string} adminUsername The administrator username to use for
 * Windows VMs
 * 
 * @member {string} adminPassword The administrator password to use for
 * Windows VMs
 * 
 */
export interface ContainerServiceWindowsProfile {
    adminUsername: string;
    adminPassword: string;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceLinuxProfile class.
 * @constructor
 * Profile for Linux VMs
 * @member {string} adminUsername The administrator username to use for all
 * Linux VMs
 * 
 * @member {object} ssh Specifies the ssh key configuration for Linux VMs
 * 
 * @member {array} [ssh.publicKeys] Gets or sets the list of SSH public keys
 * used to authenticate with Linux based VMs
 * 
 */
export interface ContainerServiceLinuxProfile {
    adminUsername: string;
    ssh: ContainerServiceSshConfiguration;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceSshConfiguration class.
 * @constructor
 * SSH configuration for Linux based VMs running on Azure
 * @member {array} [publicKeys] Gets or sets the list of SSH public keys used
 * to authenticate with Linux based VMs
 * 
 */
export interface ContainerServiceSshConfiguration {
    publicKeys?: ContainerServiceSshPublicKey[];
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceSshPublicKey class.
 * @constructor
 * Contains information about SSH certificate public key data.
 * @member {string} keyData Gets or sets Certificate public key used to
 * authenticate with VM through SSH. The certificate must be in Pem format
 * with or without headers.
 * 
 */
export interface ContainerServiceSshPublicKey {
    keyData: string;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceDiagnosticsProfile class.
 * @constructor
 * @member {object} [vmDiagnostics] Profile for container service VM
 * diagnostic agent
 * 
 * @member {boolean} [vmDiagnostics.enabled] Gets or sets whether VM
 * Diagnostic Agent should be provisioned on the Virtual Machine.
 * 
 * @member {string} [vmDiagnostics.storageUri] Gets or sets whether VM
 * Diagnostic Agent should be provisioned on the Virtual Machine.
 * 
 */
export interface ContainerServiceDiagnosticsProfile {
    vmDiagnostics?: ContainerServiceVMDiagnostics;
}

/**
 * @class
 * Initializes a new instance of the ContainerServiceVMDiagnostics class.
 * @constructor
 * Describes VM Diagnostics.
 * @member {boolean} [enabled] Gets or sets whether VM Diagnostic Agent should
 * be provisioned on the Virtual Machine.
 * 
 * @member {string} [storageUri] Gets or sets whether VM Diagnostic Agent
 * should be provisioned on the Virtual Machine.
 * 
 */
export interface ContainerServiceVMDiagnostics {
    enabled?: boolean;
    storageUri?: string;
}

/**
 * @class
 * Initializes a new instance of the ContainerService class.
 * @constructor
 * Container service
 * @member {string} [provisioningState] Gets the provisioning state, which
 * only appears in the response.
 * 
 * @member {object} [orchestratorProfile] Properties of orchestrator
 * 
 * @member {string} [orchestratorProfile.orchestratorType] Specifies what
 * orchestrator will be used to manage container cluster resources. Possible
 * values include: 'Swarm', 'DCOS'
 * 
 * @member {object} masterProfile Properties of master agents
 * 
 * @member {number} [masterProfile.count] Number of masters (VMs) in the
 * container cluster
 * 
 * @member {string} [masterProfile.dnsPrefix] DNS prefix to be used to create
 * FQDN for master
 * 
 * @member {string} [masterProfile.fqdn] FDQN for the master
 * 
 * @member {array} agentPoolProfiles Properties of agent pools
 * 
 * @member {object} [windowsProfile] Properties of Windows VMs
 * 
 * @member {string} [windowsProfile.adminUsername] The administrator username
 * to use for Windows VMs
 * 
 * @member {string} [windowsProfile.adminPassword] The administrator password
 * to use for Windows VMs
 * 
 * @member {object} linuxProfile Properties for Linux VMs
 * 
 * @member {string} [linuxProfile.adminUsername] The administrator username to
 * use for all Linux VMs
 * 
 * @member {object} [linuxProfile.ssh] Specifies the ssh key configuration for
 * Linux VMs
 * 
 * @member {array} [linuxProfile.ssh.publicKeys] Gets or sets the list of SSH
 * public keys used to authenticate with Linux based VMs
 * 
 * @member {object} [diagnosticsProfile] Properties for Diagnostic Agent
 * 
 * @member {object} [diagnosticsProfile.vmDiagnostics] Profile for container
 * service VM diagnostic agent
 * 
 * @member {boolean} [diagnosticsProfile.vmDiagnostics.enabled] Gets or sets
 * whether VM Diagnostic Agent should be provisioned on the Virtual Machine.
 * 
 * @member {string} [diagnosticsProfile.vmDiagnostics.storageUri] Gets or sets
 * whether VM Diagnostic Agent should be provisioned on the Virtual Machine.
 * 
 */
export interface ContainerService extends Resource {
    provisioningState?: string;
    orchestratorProfile?: ContainerServiceOrchestratorProfile;
    masterProfile: ContainerServiceMasterProfile;
    agentPoolProfiles: ContainerServiceAgentPoolProfile[];
    windowsProfile?: ContainerServiceWindowsProfile;
    linuxProfile: ContainerServiceLinuxProfile;
    diagnosticsProfile?: ContainerServiceDiagnosticsProfile;
}

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Describes a virtual machine scale set network profile's network
 * configurations.
 *
 * @extends models['SubResource']
 */
class VirtualMachineScaleSetNetworkConfiguration extends models['SubResource'] {
  /**
   * Create a VirtualMachineScaleSetNetworkConfiguration.
   * @member {string} name The network configuration name.
   * @member {boolean} [primary] Specifies the primary network interface in
   * case the virtual machine has more than 1 network interface.
   * @member {boolean} [enableAcceleratedNetworking] Specifies whether the
   * network interface is accelerated networking-enabled.
   * @member {object} [networkSecurityGroup] The network security group.
   * @member {string} [networkSecurityGroup.id] Resource Id
   * @member {object} [dnsSettings] The dns settings to be applied on the
   * network interfaces.
   * @member {array} [dnsSettings.dnsServers] List of DNS servers IP addresses
   * @member {array} ipConfigurations Specifies the IP configurations of the
   * network interface.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of VirtualMachineScaleSetNetworkConfiguration
   *
   * @returns {object} metadata of VirtualMachineScaleSetNetworkConfiguration
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VirtualMachineScaleSetNetworkConfiguration',
      type: {
        name: 'Composite',
        className: 'VirtualMachineScaleSetNetworkConfiguration',
        modelProperties: {
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          primary: {
            required: false,
            serializedName: 'properties.primary',
            type: {
              name: 'Boolean'
            }
          },
          enableAcceleratedNetworking: {
            required: false,
            serializedName: 'properties.enableAcceleratedNetworking',
            type: {
              name: 'Boolean'
            }
          },
          networkSecurityGroup: {
            required: false,
            serializedName: 'properties.networkSecurityGroup',
            type: {
              name: 'Composite',
              className: 'SubResource'
            }
          },
          dnsSettings: {
            required: false,
            serializedName: 'properties.dnsSettings',
            type: {
              name: 'Composite',
              className: 'VirtualMachineScaleSetNetworkConfigurationDnsSettings'
            }
          },
          ipConfigurations: {
            required: true,
            serializedName: 'properties.ipConfigurations',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'VirtualMachineScaleSetIPConfigurationElementType',
                  type: {
                    name: 'Composite',
                    className: 'VirtualMachineScaleSetIPConfiguration'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = VirtualMachineScaleSetNetworkConfiguration;

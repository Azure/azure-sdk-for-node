/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetNetworkConfiguration class.
 * @constructor
 * Describes a virtual machine scale set network profile's network
 * configurations.
 *
 * @member {string} name Gets or sets the network configuration name.
 * 
 * @member {boolean} [primary] Gets or sets whether this is a primary NIC on a
 * virtual machine.
 * 
 * @member {array} ipConfigurations Gets or sets the virtual machine scale set
 * IP Configuration.
 * 
 */
function VirtualMachineScaleSetNetworkConfiguration() {
  VirtualMachineScaleSetNetworkConfiguration['super_'].call(this);
}

util.inherits(VirtualMachineScaleSetNetworkConfiguration, models['SubResource']);

/**
 * Defines the metadata of VirtualMachineScaleSetNetworkConfiguration
 *
 * @returns {object} metadata of VirtualMachineScaleSetNetworkConfiguration
 *
 */
VirtualMachineScaleSetNetworkConfiguration.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'VirtualMachineScaleSetNetworkConfiguration',
    type: {
      name: 'Composite',
      className: 'VirtualMachineScaleSetNetworkConfiguration',
      modelProperties: {
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        name: {
          required: true,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        primary: {
          required: false,
          serializedName: 'properties.primary',
          type: {
            name: 'Boolean'
          }
        },
        ipConfigurations: {
          required: true,
          serializedName: 'properties.ipConfigurations',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'VirtualMachineScaleSetIPConfigurationElementType',
                type: {
                  name: 'Composite',
                  className: 'VirtualMachineScaleSetIPConfiguration'
                }
            }
          }
        }
      }
    }
  };
};

module.exports = VirtualMachineScaleSetNetworkConfiguration;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Specifies the Linux operating system settings on the virtual machine.
 * <br><br>For a list of supported Linux distributions, see [Linux on
 * Azure-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)
 * <br><br> For running non-endorsed distributions, see [Information for
 * Non-Endorsed
 * Distributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).
 *
 */
class LinuxConfiguration {
  /**
   * Create a LinuxConfiguration.
   * @property {boolean} [disablePasswordAuthentication] Specifies whether
   * password authentication should be disabled.
   * @property {object} [ssh] Specifies the ssh key configuration for a Linux
   * OS.
   * @property {array} [ssh.publicKeys] The list of SSH public keys used to
   * authenticate with linux based VMs.
   * @property {boolean} [provisionVMAgent] Indicates whether virtual machine
   * agent should be provisioned on the virtual machine. <br><br> When this
   * property is not specified in the request body, default behavior is to set
   * it to true.  This will ensure that VM Agent is installed on the VM so that
   * extensions can be added to the VM later.
   */
  constructor() {
  }

  /**
   * Defines the metadata of LinuxConfiguration
   *
   * @returns {object} metadata of LinuxConfiguration
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'LinuxConfiguration',
      type: {
        name: 'Composite',
        className: 'LinuxConfiguration',
        modelProperties: {
          disablePasswordAuthentication: {
            required: false,
            serializedName: 'disablePasswordAuthentication',
            type: {
              name: 'Boolean'
            }
          },
          ssh: {
            required: false,
            serializedName: 'ssh',
            type: {
              name: 'Composite',
              className: 'SshConfiguration'
            }
          },
          provisionVMAgent: {
            required: false,
            serializedName: 'provisionVMAgent',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = LinuxConfiguration;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Information about rollback on failed VM instances after a OS Upgrade
 * operation.
 *
 */
class RollbackStatusInfo {
  /**
   * Create a RollbackStatusInfo.
   * @member {number} [successfullyRolledbackInstanceCount] The number of
   * instances which have been successfully rolled back.
   * @member {number} [failedRolledbackInstanceCount] The number of instances
   * which failed to rollback.
   * @member {object} [rollbackError] Error details if OS rollback failed.
   * @member {array} [rollbackError.details] The Api error details
   * @member {object} [rollbackError.innererror] The Api inner error
   * @member {string} [rollbackError.innererror.exceptiontype] The exception
   * type.
   * @member {string} [rollbackError.innererror.errordetail] The internal error
   * message or exception dump.
   * @member {string} [rollbackError.code] The error code.
   * @member {string} [rollbackError.target] The target of the particular
   * error.
   * @member {string} [rollbackError.message] The error message.
   */
  constructor() {
  }

  /**
   * Defines the metadata of RollbackStatusInfo
   *
   * @returns {object} metadata of RollbackStatusInfo
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RollbackStatusInfo',
      type: {
        name: 'Composite',
        className: 'RollbackStatusInfo',
        modelProperties: {
          successfullyRolledbackInstanceCount: {
            required: false,
            readOnly: true,
            serializedName: 'successfullyRolledbackInstanceCount',
            type: {
              name: 'Number'
            }
          },
          failedRolledbackInstanceCount: {
            required: false,
            readOnly: true,
            serializedName: 'failedRolledbackInstanceCount',
            type: {
              name: 'Number'
            }
          },
          rollbackError: {
            required: false,
            readOnly: true,
            serializedName: 'rollbackError',
            type: {
              name: 'Composite',
              className: 'ApiError'
            }
          }
        }
      }
    };
  }
}

module.exports = RollbackStatusInfo;

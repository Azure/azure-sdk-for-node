/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetDataDisk class.
 * @constructor
 * Describes a virtual machine scale set data disk.
 *
 * @member {string} [name] The disk name.
 *
 * @member {number} lun The logical unit number.
 *
 * @member {string} [caching] The caching type. Possible values include:
 * 'None', 'ReadOnly', 'ReadWrite'
 *
 * @member {string} createOption The create option. Possible values include:
 * 'fromImage', 'empty', 'attach'
 *
 * @member {number} [diskSizeGB] The initial disk size in GB for blank data
 * disks, and the new desired size for existing OS and Data disks.
 *
 * @member {object} [managedDisk] The managed disk parameters.
 *
 * @member {string} [managedDisk.storageAccountType] The Storage Account type.
 * Possible values include: 'Standard_LRS', 'Premium_LRS'
 *
 */
class VirtualMachineScaleSetDataDisk {
  constructor() {
  }

  /**
   * Defines the metadata of VirtualMachineScaleSetDataDisk
   *
   * @returns {object} metadata of VirtualMachineScaleSetDataDisk
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VirtualMachineScaleSetDataDisk',
      type: {
        name: 'Composite',
        className: 'VirtualMachineScaleSetDataDisk',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          lun: {
            required: true,
            serializedName: 'lun',
            type: {
              name: 'Number'
            }
          },
          caching: {
            required: false,
            serializedName: 'caching',
            type: {
              name: 'Enum',
              allowedValues: [ 'None', 'ReadOnly', 'ReadWrite' ]
            }
          },
          createOption: {
            required: true,
            serializedName: 'createOption',
            type: {
              name: 'Enum',
              allowedValues: [ 'fromImage', 'empty', 'attach' ]
            }
          },
          diskSizeGB: {
            required: false,
            serializedName: 'diskSizeGB',
            type: {
              name: 'Number'
            }
          },
          managedDisk: {
            required: false,
            serializedName: 'managedDisk',
            type: {
              name: 'Composite',
              className: 'VirtualMachineScaleSetManagedDiskParameters'
            }
          }
        }
      }
    };
  }
}

module.exports = VirtualMachineScaleSetDataDisk;

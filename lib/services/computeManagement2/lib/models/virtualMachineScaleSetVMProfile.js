/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVMProfile class.
 * @constructor
 * Describes a virtual machine scale set virtual machine profile.
 * @member {object} [osProfile] Gets or sets the virtual machine scale set OS
 * profile.
 * 
 * @member {string} [osProfile.computerNamePrefix] Gets or sets the computer
 * name prefix.
 * 
 * @member {string} [osProfile.adminUsername] Gets or sets the admin user name.
 * 
 * @member {string} [osProfile.adminPassword] Gets or sets the admin user
 * password.
 * 
 * @member {string} [osProfile.customData] Gets or sets a base-64 encoded
 * string of custom data.
 * 
 * @member {object} [osProfile.windowsConfiguration] Gets or sets the Windows
 * Configuration of the OS profile.
 * 
 * @member {boolean} [osProfile.windowsConfiguration.provisionVMAgent] Gets or
 * sets whether VM Agent should be provisioned on the Virtual Machine.
 * 
 * @member {boolean} [osProfile.windowsConfiguration.enableAutomaticUpdates]
 * Gets or sets whether Windows updates are automatically installed on the VM
 * 
 * @member {string} [osProfile.windowsConfiguration.timeZone] Gets or sets the
 * Time Zone of the VM
 * 
 * @member {array} [osProfile.windowsConfiguration.additionalUnattendContent]
 * Gets or sets the additional base-64 encoded XML formatted information that
 * can be included in the Unattend.xml file.
 * 
 * @member {object} [osProfile.windowsConfiguration.winRM] Gets or sets the
 * Windows Remote Management configuration of the VM
 * 
 * @member {array} [osProfile.windowsConfiguration.winRM.listeners] Gets or
 * sets the list of Windows Remote Management listeners
 * 
 * @member {object} [osProfile.linuxConfiguration] Gets or sets the Linux
 * Configuration of the OS profile.
 * 
 * @member {boolean}
 * [osProfile.linuxConfiguration.disablePasswordAuthentication] Gets or sets
 * whether Authentication using user name and password is allowed or not
 * 
 * @member {object} [osProfile.linuxConfiguration.ssh] Gets or sets the SSH
 * configuration for linux VMs
 * 
 * @member {array} [osProfile.linuxConfiguration.ssh.publicKeys] Gets or sets
 * the list of SSH public keys used to authenticate with linux based VMs
 * 
 * @member {array} [osProfile.secrets] Gets or sets the List of certificates
 * for addition to the VM.
 * 
 * @member {object} [storageProfile] Gets or sets the virtual machine scale
 * set storage profile.
 * 
 * @member {object} [storageProfile.imageReference] Gets or sets the image
 * reference.
 * 
 * @member {string} [storageProfile.imageReference.publisher] Gets or sets the
 * image publisher.
 * 
 * @member {string} [storageProfile.imageReference.offer] Gets or sets the
 * image offer.
 * 
 * @member {string} [storageProfile.imageReference.sku] Gets or sets the image
 * sku.
 * 
 * @member {string} [storageProfile.imageReference.version] Gets or sets the
 * image version. The allowed formats are Major.Minor.Build or 'latest'.
 * Major, Minor and Build being decimal numbers. Specify 'latest' to use the
 * latest version of image.
 * 
 * @member {object} [storageProfile.osDisk] Gets or sets the OS disk.
 * 
 * @member {string} [storageProfile.osDisk.name] Gets or sets the disk name.
 * 
 * @member {string} [storageProfile.osDisk.caching] Gets or sets the caching
 * type. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
 * 
 * @member {string} [storageProfile.osDisk.createOption] Gets or sets the
 * create option. Possible values include: 'fromImage', 'empty', 'attach'
 * 
 * @member {string} [storageProfile.osDisk.osType] Gets or sets the Operating
 * System type. Possible values include: 'Windows', 'Linux'
 * 
 * @member {object} [storageProfile.osDisk.image] Gets or sets the Source User
 * Image VirtualHardDisk. This VirtualHardDisk will be copied before using it
 * to attach to the Virtual Machine.If SourceImage is provided, the
 * destination VirtualHardDisk should not exist.
 * 
 * @member {string} [storageProfile.osDisk.image.uri] Gets or sets the virtual
 * hard disk's uri. It should be a valid Uri to a virtual hard disk.
 * 
 * @member {array} [storageProfile.osDisk.vhdContainers] Gets or sets the list
 * of virtual hard disk container uris.
 * 
 * @member {object} [networkProfile] Gets or sets the virtual machine scale
 * set network profile.
 * 
 * @member {array} [networkProfile.networkInterfaceConfigurations] Gets or
 * sets the list of network configurations.
 * 
 * @member {object} [extensionProfile] Gets the virtual machine scale set
 * extension profile.
 * 
 * @member {array} [extensionProfile.extensions] Gets the virtual machine
 * scale set child extension resources.
 * 
 */
function VirtualMachineScaleSetVMProfile() {
}

/**
 * Defines the metadata of VirtualMachineScaleSetVMProfile
 *
 * @returns {object} metadata of VirtualMachineScaleSetVMProfile
 *
 */
VirtualMachineScaleSetVMProfile.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'VirtualMachineScaleSetVMProfile',
    type: {
      name: 'Composite',
      className: 'VirtualMachineScaleSetVMProfile',
      modelProperties: {
        osProfile: {
          required: false,
          serializedName: 'osProfile',
          type: {
            name: 'Composite',
            className: 'VirtualMachineScaleSetOSProfile'
          }
        },
        storageProfile: {
          required: false,
          serializedName: 'storageProfile',
          type: {
            name: 'Composite',
            className: 'VirtualMachineScaleSetStorageProfile'
          }
        },
        networkProfile: {
          required: false,
          serializedName: 'networkProfile',
          type: {
            name: 'Composite',
            className: 'VirtualMachineScaleSetNetworkProfile'
          }
        },
        extensionProfile: {
          required: false,
          serializedName: 'extensionProfile',
          type: {
            name: 'Composite',
            className: 'VirtualMachineScaleSetExtensionProfile'
          }
        }
      }
    }
  };
};

module.exports = VirtualMachineScaleSetVMProfile;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVMProfile class.
 * @constructor
 * Describes a virtual machine scale set virtual machine profile.
 *
 * @member {object} [osProfile] The virtual machine scale set OS profile.
 *
 * @member {string} [osProfile.computerNamePrefix] The computer name prefix.
 *
 * @member {string} [osProfile.adminUsername] The admin user name.
 *
 * @member {string} [osProfile.adminPassword] The admin user password.
 *
 * @member {string} [osProfile.customData] A base-64 encoded string of custom
 * data.
 *
 * @member {object} [osProfile.windowsConfiguration] The Windows Configuration
 * of the OS profile.
 *
 * @member {boolean} [osProfile.windowsConfiguration.provisionVMAgent]
 * Indicates whether the virtual machine agent should be provisioned on the
 * Virtual Machine. If not specified, then the default behavior is to set it to
 * true.
 *
 * @member {boolean} [osProfile.windowsConfiguration.enableAutomaticUpdates]
 * Indicates whether Windows updates are automatically installed on the VM.
 *
 * @member {string} [osProfile.windowsConfiguration.timeZone] The time zone of
 * the VM
 *
 * @member {array} [osProfile.windowsConfiguration.additionalUnattendContent]
 * Additional base-64 encoded XML formatted information that can be included in
 * the Unattend.xml file.
 *
 * @member {object} [osProfile.windowsConfiguration.winRM] The Windows Remote
 * Management configuration of the VM
 *
 * @member {array} [osProfile.windowsConfiguration.winRM.listeners] The list of
 * Windows Remote Management listeners
 *
 * @member {object} [osProfile.linuxConfiguration] The Linux Configuration of
 * the OS profile.
 *
 * @member {boolean}
 * [osProfile.linuxConfiguration.disablePasswordAuthentication] Specifies
 * whether password authentication should be disabled.
 *
 * @member {object} [osProfile.linuxConfiguration.ssh] The SSH configuration
 * for linux VMs.
 *
 * @member {array} [osProfile.linuxConfiguration.ssh.publicKeys] The list of
 * SSH public keys used to authenticate with linux based VMs.
 *
 * @member {array} [osProfile.secrets] The List of certificates for addition to
 * the VM.
 *
 * @member {object} [storageProfile] The virtual machine scale set storage
 * profile.
 *
 * @member {object} [storageProfile.imageReference] The image reference.
 *
 * @member {string} [storageProfile.imageReference.publisher] The image
 * publisher.
 *
 * @member {string} [storageProfile.imageReference.offer] The image offer.
 *
 * @member {string} [storageProfile.imageReference.sku] The image SKU.
 *
 * @member {string} [storageProfile.imageReference.version] The image version.
 * The allowed formats are Major.Minor.Build or 'latest'. Major, Minor and
 * Build are decimal numbers. Specify 'latest' to use the latest version of the
 * image.
 *
 * @member {object} [storageProfile.osDisk] The OS disk.
 *
 * @member {string} [storageProfile.osDisk.name] The disk name.
 *
 * @member {string} [storageProfile.osDisk.caching] The caching type. Possible
 * values include: 'None', 'ReadOnly', 'ReadWrite'
 *
 * @member {string} [storageProfile.osDisk.createOption] The create option.
 * Possible values include: 'fromImage', 'empty', 'attach'
 *
 * @member {string} [storageProfile.osDisk.osType] The Operating System type.
 * Possible values include: 'Windows', 'Linux'
 *
 * @member {object} [storageProfile.osDisk.image] The Source User Image
 * VirtualHardDisk. This VirtualHardDisk will be copied before using it to
 * attach to the Virtual Machine. If SourceImage is provided, the destination
 * VirtualHardDisk should not exist.
 *
 * @member {string} [storageProfile.osDisk.image.uri] The virtual hard disk's
 * URI. Must be a valid URI to a virtual hard disk.
 *
 * @member {array} [storageProfile.osDisk.vhdContainers] The list of virtual
 * hard disk container uris.
 *
 * @member {object} [storageProfile.osDisk.managedDisk] The managed disk
 * parameters.
 *
 * @member {string} [storageProfile.osDisk.managedDisk.storageAccountType] The
 * Storage Account type. Possible values include: 'Standard_LRS', 'Premium_LRS'
 *
 * @member {array} [storageProfile.dataDisks] The data disks.
 *
 * @member {object} [networkProfile] The virtual machine scale set network
 * profile.
 *
 * @member {array} [networkProfile.networkInterfaceConfigurations] The list of
 * network configurations.
 *
 * @member {object} [diagnosticsProfile] The virtual machine scale set
 * diagnostics profile.
 *
 * @member {object} [diagnosticsProfile.bootDiagnostics] Boot Diagnostics is a
 * debugging feature which allows the user to view console output and/or a
 * screenshot of the virtual machine from the hypervisor.
 *
 * @member {boolean} [diagnosticsProfile.bootDiagnostics.enabled] Whether boot
 * diagnostics should be enabled on the Virtual Machine.
 *
 * @member {string} [diagnosticsProfile.bootDiagnostics.storageUri] URI of the
 * storage account to use for placing the console output and screenshot.
 *
 * @member {object} [extensionProfile] The virtual machine scale set extension
 * profile.
 *
 * @member {array} [extensionProfile.extensions] The virtual machine scale set
 * child extension resources.
 *
 * @member {string} [licenseType] The license type, which is for bring your own
 * license scenario.
 *
 */
class VirtualMachineScaleSetVMProfile {
  constructor() {
  }

  /**
   * Defines the metadata of VirtualMachineScaleSetVMProfile
   *
   * @returns {object} metadata of VirtualMachineScaleSetVMProfile
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'VirtualMachineScaleSetVMProfile',
      type: {
        name: 'Composite',
        className: 'VirtualMachineScaleSetVMProfile',
        modelProperties: {
          osProfile: {
            required: false,
            serializedName: 'osProfile',
            type: {
              name: 'Composite',
              className: 'VirtualMachineScaleSetOSProfile'
            }
          },
          storageProfile: {
            required: false,
            serializedName: 'storageProfile',
            type: {
              name: 'Composite',
              className: 'VirtualMachineScaleSetStorageProfile'
            }
          },
          networkProfile: {
            required: false,
            serializedName: 'networkProfile',
            type: {
              name: 'Composite',
              className: 'VirtualMachineScaleSetNetworkProfile'
            }
          },
          diagnosticsProfile: {
            required: false,
            serializedName: 'diagnosticsProfile',
            type: {
              name: 'Composite',
              className: 'DiagnosticsProfile'
            }
          },
          extensionProfile: {
            required: false,
            serializedName: 'extensionProfile',
            type: {
              name: 'Composite',
              className: 'VirtualMachineScaleSetExtensionProfile'
            }
          },
          licenseType: {
            required: false,
            serializedName: 'licenseType',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = VirtualMachineScaleSetVMProfile;

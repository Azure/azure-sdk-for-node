/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the VirtualMachineInstanceView class.
 * @constructor
 * The instance view of a virtual machine.
 *
 * @member {number} [platformUpdateDomain] Specifies the update domain of the
 * virtual machine.
 * 
 * @member {number} [platformFaultDomain] Specifies the fault domain of the
 * virtual machine.
 * 
 * @member {string} [rdpThumbPrint] The Remote desktop certificate thumbprint.
 * 
 * @member {object} [vmAgent] The VM Agent running on the virtual machine.
 * 
 * @member {string} [vmAgent.vmAgentVersion] The VM Agent full version.
 * 
 * @member {array} [vmAgent.extensionHandlers] The virtual machine extension
 * handler instance view.
 * 
 * @member {array} [vmAgent.statuses] The resource status information.
 * 
 * @member {array} [disks] the disks information.
 * 
 * @member {array} [extensions] the extensions information.
 * 
 * @member {object} [bootDiagnostics] the boot diagnostics.
 * 
 * @member {string} [bootDiagnostics.consoleScreenshotBlobUri] The console
 * screenshot blob URI.
 * 
 * @member {string} [bootDiagnostics.serialConsoleLogBlobUri] The Linux serial
 * console log blob Uri.
 * 
 * @member {array} [statuses] the resource status information.
 * 
 */
function VirtualMachineInstanceView() {
}

/**
 * Defines the metadata of VirtualMachineInstanceView
 *
 * @returns {object} metadata of VirtualMachineInstanceView
 *
 */
VirtualMachineInstanceView.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'VirtualMachineInstanceView',
    type: {
      name: 'Composite',
      className: 'VirtualMachineInstanceView',
      modelProperties: {
        platformUpdateDomain: {
          required: false,
          serializedName: 'platformUpdateDomain',
          type: {
            name: 'Number'
          }
        },
        platformFaultDomain: {
          required: false,
          serializedName: 'platformFaultDomain',
          type: {
            name: 'Number'
          }
        },
        rdpThumbPrint: {
          required: false,
          serializedName: 'rdpThumbPrint',
          type: {
            name: 'String'
          }
        },
        vmAgent: {
          required: false,
          serializedName: 'vmAgent',
          type: {
            name: 'Composite',
            className: 'VirtualMachineAgentInstanceView'
          }
        },
        disks: {
          required: false,
          serializedName: 'disks',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'DiskInstanceViewElementType',
                type: {
                  name: 'Composite',
                  className: 'DiskInstanceView'
                }
            }
          }
        },
        extensions: {
          required: false,
          serializedName: 'extensions',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'VirtualMachineExtensionInstanceViewElementType',
                type: {
                  name: 'Composite',
                  className: 'VirtualMachineExtensionInstanceView'
                }
            }
          }
        },
        bootDiagnostics: {
          required: false,
          serializedName: 'bootDiagnostics',
          type: {
            name: 'Composite',
            className: 'BootDiagnosticsInstanceView'
          }
        },
        statuses: {
          required: false,
          serializedName: 'statuses',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'InstanceViewStatusElementType',
                type: {
                  name: 'Composite',
                  className: 'InstanceViewStatus'
                }
            }
          }
        }
      }
    }
  };
};

module.exports = VirtualMachineInstanceView;

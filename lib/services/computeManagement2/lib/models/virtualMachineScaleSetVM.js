/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the VirtualMachineScaleSetVM class.
 * @constructor
 * Describes a virtual machine scale set virtual machine.
 * @member {string} [instanceId] Gets the virtual machine instance id.
 * 
 * @member {object} [sku] Gets the virtual machine sku.
 * 
 * @member {string} [sku.name] Gets or sets the sku name.
 * 
 * @member {string} [sku.tier] Gets or sets the sku tier.
 * 
 * @member {number} [sku.capacity] Gets or sets the sku capacity.
 * 
 * @member {boolean} [latestModelApplied] Specifies whether the latest model
 * has been applied to the virtual machine.
 * 
 * @member {object} [instanceView] Gets the virtual machine instance view.
 * 
 * @member {number} [instanceView.platformUpdateDomain] Gets or sets the
 * Update Domain count.
 * 
 * @member {number} [instanceView.platformFaultDomain] Gets or sets the Fault
 * Domain count.
 * 
 * @member {string} [instanceView.rdpThumbPrint] Gets or sets the Remote
 * desktop certificate thumbprint.
 * 
 * @member {object} [instanceView.vmAgent] Gets or sets the VM Agent running
 * on the virtual machine.
 * 
 * @member {string} [instanceView.vmAgent.vmAgentVersion] Gets or sets the VM
 * Agent full version.
 * 
 * @member {array} [instanceView.vmAgent.extensionHandlers] Gets or sets the
 * virtual machine extension handler instance view.
 * 
 * @member {array} [instanceView.vmAgent.statuses] Gets or sets the resource
 * status information.
 * 
 * @member {array} [instanceView.disks] Gets or sets the disks information.
 * 
 * @member {array} [instanceView.extensions] Gets or sets the extensions
 * information.
 * 
 * @member {object} [instanceView.bootDiagnostics] Gets or sets the boot
 * diagnostics.
 * 
 * @member {string} [instanceView.bootDiagnostics.consoleScreenshotBlobUri]
 * Gets or sets the console screenshot blob Uri.
 * 
 * @member {string} [instanceView.bootDiagnostics.serialConsoleLogBlobUri]
 * Gets or sets the Linux serial console log blob Uri.
 * 
 * @member {array} [instanceView.statuses] Gets or sets the resource status
 * information.
 * 
 * @member {object} [hardwareProfile] Gets or sets the hardware profile.
 * 
 * @member {string} [hardwareProfile.vmSize] The virtual machine size name.
 * Possible values include: 'Basic_A0', 'Basic_A1', 'Basic_A2', 'Basic_A3',
 * 'Basic_A4', 'Standard_A0', 'Standard_A1', 'Standard_A2', 'Standard_A3',
 * 'Standard_A4', 'Standard_A5', 'Standard_A6', 'Standard_A7', 'Standard_A8',
 * 'Standard_A9', 'Standard_A10', 'Standard_A11', 'Standard_D1',
 * 'Standard_D2', 'Standard_D3', 'Standard_D4', 'Standard_D11',
 * 'Standard_D12', 'Standard_D13', 'Standard_D14', 'Standard_D1_v2',
 * 'Standard_D2_v2', 'Standard_D3_v2', 'Standard_D4_v2', 'Standard_D5_v2',
 * 'Standard_D11_v2', 'Standard_D12_v2', 'Standard_D13_v2',
 * 'Standard_D14_v2', 'Standard_DS1', 'Standard_DS2', 'Standard_DS3',
 * 'Standard_DS4', 'Standard_DS11', 'Standard_DS12', 'Standard_DS13',
 * 'Standard_DS14', 'Standard_G1', 'Standard_G2', 'Standard_G3',
 * 'Standard_G4', 'Standard_G5', 'Standard_GS1', 'Standard_GS2',
 * 'Standard_GS3', 'Standard_GS4', 'Standard_GS5'
 * 
 * @member {object} [storageProfile] Gets or sets the storage profile.
 * 
 * @member {object} [storageProfile.imageReference] Gets or sets the image
 * reference.
 * 
 * @member {string} [storageProfile.imageReference.publisher] Gets or sets the
 * image publisher.
 * 
 * @member {string} [storageProfile.imageReference.offer] Gets or sets the
 * image offer.
 * 
 * @member {string} [storageProfile.imageReference.sku] Gets or sets the image
 * sku.
 * 
 * @member {string} [storageProfile.imageReference.version] Gets or sets the
 * image version. The allowed formats are Major.Minor.Build or 'latest'.
 * Major, Minor and Build being decimal numbers. Specify 'latest' to use the
 * latest version of image.
 * 
 * @member {object} [storageProfile.osDisk] Gets or sets the OS disk.
 * 
 * @member {string} [storageProfile.osDisk.osType] Gets or sets the Operating
 * System type. Possible values include: 'Windows', 'Linux'
 * 
 * @member {object} [storageProfile.osDisk.encryptionSettings] Gets or sets
 * the disk encryption settings.
 * 
 * @member {object}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey] Gets or sets
 * the disk encryption key which is a KeyVault Secret.
 * 
 * @member {string}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.secretUrl]
 * Gets or sets the URL referencing a secret in a Key Vault.
 * 
 * @member {object}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault]
 * Gets or sets the Relative URL of the Key Vault containing the secret.
 * 
 * @member {string}
 * [storageProfile.osDisk.encryptionSettings.diskEncryptionKey.sourceVault.id]
 * Resource Id
 * 
 * @member {object}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey] Gets or sets
 * the key encryption key which is KeyVault Key.
 * 
 * @member {string}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.keyUrl] Gets or
 * sets the URL referencing a key in a Key Vault.
 * 
 * @member {object}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault]
 * Gets or sets the Relative URL of the Key Vault containing the key
 * 
 * @member {string}
 * [storageProfile.osDisk.encryptionSettings.keyEncryptionKey.sourceVault.id]
 * Resource Id
 * 
 * @member {boolean} [storageProfile.osDisk.encryptionSettings.enabled] Gets
 * or sets whether disk encryption should be enabled on the Virtual Machine.
 * 
 * @member {string} [storageProfile.osDisk.name] Gets or sets the disk name.
 * 
 * @member {object} [storageProfile.osDisk.vhd] Gets or sets the Virtual Hard
 * Disk.
 * 
 * @member {string} [storageProfile.osDisk.vhd.uri] Gets or sets the virtual
 * hard disk's uri. It should be a valid Uri to a virtual hard disk.
 * 
 * @member {object} [storageProfile.osDisk.image] Gets or sets the Source User
 * Image VirtualHardDisk. This VirtualHardDisk will be copied before using it
 * to attach to the Virtual Machine.If SourceImage is provided, the
 * destination VirtualHardDisk should not exist.
 * 
 * @member {string} [storageProfile.osDisk.image.uri] Gets or sets the virtual
 * hard disk's uri. It should be a valid Uri to a virtual hard disk.
 * 
 * @member {string} [storageProfile.osDisk.caching] Gets or sets the caching
 * type. Possible values include: 'None', 'ReadOnly', 'ReadWrite'
 * 
 * @member {string} [storageProfile.osDisk.createOption] Gets or sets the
 * create option. Possible values include: 'fromImage', 'empty', 'attach'
 * 
 * @member {number} [storageProfile.osDisk.diskSizeGB] Gets or sets the
 * initial disk size in GB for blank data disks, and the new desired size for
 * existing OS and Data disks.
 * 
 * @member {array} [storageProfile.dataDisks] Gets or sets the data disks.
 * 
 * @member {object} [osProfile] Gets or sets the OS profile.
 * 
 * @member {string} [osProfile.computerName] Gets or sets the computer name.
 * 
 * @member {string} [osProfile.adminUsername] Gets or sets the admin user name.
 * 
 * @member {string} [osProfile.adminPassword] Gets or sets the admin user
 * password.
 * 
 * @member {string} [osProfile.customData] Gets or sets a base-64 encoded
 * string of custom data.
 * 
 * @member {object} [osProfile.windowsConfiguration] Gets or sets the Windows
 * Configuration of the OS profile.
 * 
 * @member {boolean} [osProfile.windowsConfiguration.provisionVMAgent] Gets or
 * sets whether VM Agent should be provisioned on the Virtual Machine.
 * 
 * @member {boolean} [osProfile.windowsConfiguration.enableAutomaticUpdates]
 * Gets or sets whether Windows updates are automatically installed on the VM
 * 
 * @member {string} [osProfile.windowsConfiguration.timeZone] Gets or sets the
 * Time Zone of the VM
 * 
 * @member {array} [osProfile.windowsConfiguration.additionalUnattendContent]
 * Gets or sets the additional base-64 encoded XML formatted information that
 * can be included in the Unattend.xml file.
 * 
 * @member {object} [osProfile.windowsConfiguration.winRM] Gets or sets the
 * Windows Remote Management configuration of the VM
 * 
 * @member {array} [osProfile.windowsConfiguration.winRM.listeners] Gets or
 * sets the list of Windows Remote Management listeners
 * 
 * @member {object} [osProfile.linuxConfiguration] Gets or sets the Linux
 * Configuration of the OS profile.
 * 
 * @member {boolean}
 * [osProfile.linuxConfiguration.disablePasswordAuthentication] Gets or sets
 * whether Authentication using user name and password is allowed or not
 * 
 * @member {object} [osProfile.linuxConfiguration.ssh] Gets or sets the SSH
 * configuration for linux VMs
 * 
 * @member {array} [osProfile.linuxConfiguration.ssh.publicKeys] Gets or sets
 * the list of SSH public keys used to authenticate with linux based VMs
 * 
 * @member {array} [osProfile.secrets] Gets or sets the List of certificates
 * for addition to the VM.
 * 
 * @member {object} [networkProfile] Gets or sets the network profile.
 * 
 * @member {array} [networkProfile.networkInterfaces] Gets or sets the network
 * interfaces.
 * 
 * @member {object} [diagnosticsProfile] Gets or sets the diagnostics profile.
 * 
 * @member {object} [diagnosticsProfile.bootDiagnostics] Gets or sets the boot
 * diagnostics.
 * 
 * @member {boolean} [diagnosticsProfile.bootDiagnostics.enabled] Gets or sets
 * whether boot diagnostics should be enabled on the Virtual Machine.
 * 
 * @member {string} [diagnosticsProfile.bootDiagnostics.storageUri] Gets or
 * sets the boot diagnostics storage Uri. It should be a valid Uri
 * 
 * @member {object} [availabilitySet] Gets or sets the reference Id of the
 * availability set to which this virtual machine belongs.
 * 
 * @member {string} [availabilitySet.id] Resource Id
 * 
 * @member {string} [provisioningState] Gets or sets the provisioning state,
 * which only appears in the response.
 * 
 * @member {string} [licenseType] Gets or sets the license type, which is for
 * bring your own license scenario.
 * 
 * @member {object} [plan] Gets or sets the purchase plan when deploying
 * virtual machine from VM Marketplace images.
 * 
 * @member {string} [plan.name] Gets or sets the plan ID.
 * 
 * @member {string} [plan.publisher] Gets or sets the publisher ID.
 * 
 * @member {string} [plan.product] Gets or sets the offer ID.
 * 
 * @member {string} [plan.promotionCode] Gets or sets the promotion code.
 * 
 * @member {array} [resources] Gets the virtual machine child extension
 * resources.
 * 
 */
function VirtualMachineScaleSetVM() {
  VirtualMachineScaleSetVM['super_'].call(this);
}

util.inherits(VirtualMachineScaleSetVM, models['Resource']);

/**
 * Defines the metadata of VirtualMachineScaleSetVM
 *
 * @returns {object} metadata of VirtualMachineScaleSetVM
 *
 */
VirtualMachineScaleSetVM.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'VirtualMachineScaleSetVM',
    type: {
      name: 'Composite',
      className: 'VirtualMachineScaleSetVM',
      modelProperties: {
        id: {
          required: false,
          readOnly: true,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          readOnly: true,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          readOnly: true,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        location: {
          required: true,
          serializedName: 'location',
          type: {
            name: 'String'
          }
        },
        tags: {
          required: false,
          serializedName: 'tags',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        instanceId: {
          required: false,
          readOnly: true,
          serializedName: 'instanceId',
          type: {
            name: 'String'
          }
        },
        sku: {
          required: false,
          readOnly: true,
          serializedName: 'sku',
          type: {
            name: 'Composite',
            className: 'Sku'
          }
        },
        latestModelApplied: {
          required: false,
          readOnly: true,
          serializedName: 'properties.latestModelApplied',
          type: {
            name: 'Boolean'
          }
        },
        instanceView: {
          required: false,
          readOnly: true,
          serializedName: 'properties.instanceView',
          type: {
            name: 'Composite',
            className: 'VirtualMachineInstanceView'
          }
        },
        hardwareProfile: {
          required: false,
          serializedName: 'properties.hardwareProfile',
          type: {
            name: 'Composite',
            className: 'HardwareProfile'
          }
        },
        storageProfile: {
          required: false,
          serializedName: 'properties.storageProfile',
          type: {
            name: 'Composite',
            className: 'StorageProfile'
          }
        },
        osProfile: {
          required: false,
          serializedName: 'properties.osProfile',
          type: {
            name: 'Composite',
            className: 'OSProfile'
          }
        },
        networkProfile: {
          required: false,
          serializedName: 'properties.networkProfile',
          type: {
            name: 'Composite',
            className: 'NetworkProfile'
          }
        },
        diagnosticsProfile: {
          required: false,
          serializedName: 'properties.diagnosticsProfile',
          type: {
            name: 'Composite',
            className: 'DiagnosticsProfile'
          }
        },
        availabilitySet: {
          required: false,
          serializedName: 'properties.availabilitySet',
          type: {
            name: 'Composite',
            className: 'SubResource'
          }
        },
        provisioningState: {
          required: false,
          serializedName: 'properties.provisioningState',
          type: {
            name: 'String'
          }
        },
        licenseType: {
          required: false,
          serializedName: 'properties.licenseType',
          type: {
            name: 'String'
          }
        },
        plan: {
          required: false,
          serializedName: 'plan',
          type: {
            name: 'Composite',
            className: 'Plan'
          }
        },
        resources: {
          required: false,
          readOnly: true,
          serializedName: 'resources',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'VirtualMachineExtensionElementType',
                type: {
                  name: 'Composite',
                  className: 'VirtualMachineExtension'
                }
            }
          }
        }
      }
    }
  };
};

module.exports = VirtualMachineScaleSetVM;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Permissions the identity has for keys, secrets, certificates and storage.
 *
 */
class Permissions {
  /**
   * Create a Permissions.
   * @property {array} [keys] Permissions to keys
   * @property {array} [secrets] Permissions to secrets
   * @property {array} [certificates] Permissions to certificates
   * @property {array} [storage] Permissions to storage accounts
   */
  constructor() {
  }

  /**
   * Defines the metadata of Permissions
   *
   * @returns {object} metadata of Permissions
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Permissions',
      type: {
        name: 'Composite',
        className: 'Permissions',
        modelProperties: {
          keys: {
            required: false,
            serializedName: 'keys',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'KeyPermissionsElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          secrets: {
            required: false,
            serializedName: 'secrets',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'SecretPermissionsElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          certificates: {
            required: false,
            serializedName: 'certificates',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'CertificatePermissionsElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          storage: {
            required: false,
            serializedName: 'storage',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StoragePermissionsElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = Permissions;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The properties that define a direct connection.
 *
 */
class DirectConnection {
  /**
   * Create a DirectConnection.
   * @property {number} [bandwidthInMbps] The bandwidth of the connection.
   * @property {number} [provisionedBandwidthInMbps] The bandwidth that is
   * actually provisioned.
   * @property {number} [peeringDBFacilityId] The PeeringDB.com ID of the
   * facility at which the connection has to be set up.
   * @property {string} [connectionState] The state of the connection. Possible
   * values include: 'None', 'PendingApproval', 'Approved',
   * 'ProvisioningStarted', 'ProvisioningFailed', 'ProvisioningCompleted',
   * 'Validating', 'Active'
   * @property {object} [bgpSession] The BGP session associated with the
   * connection.
   * @property {string} [bgpSession.sessionPrefixV4] The IPv4 prefix that
   * contains both ends' IPv4 addresses.
   * @property {string} [bgpSession.sessionPrefixV6] The IPv6 prefix that
   * contains both ends' IPv6 addresses.
   * @property {string} [bgpSession.microsoftSessionIPv4Address] The IPv4
   * session address on Microsoft's end.
   * @property {string} [bgpSession.microsoftSessionIPv6Address] The IPv6
   * session address on Microsoft's end.
   * @property {string} [bgpSession.peerSessionIPv4Address] The IPv4 session
   * address on peer's end.
   * @property {string} [bgpSession.peerSessionIPv6Address] The IPv6 session
   * address on peer's end.
   * @property {string} [bgpSession.sessionStateV4] The state of the IPv4
   * session. Possible values include: 'None', 'Idle', 'Connect', 'Active',
   * 'OpenSent', 'OpenConfirm', 'Established', 'PendingAdd', 'PendingUpdate',
   * 'PendingRemove'
   * @property {string} [bgpSession.sessionStateV6] The state of the IPv6
   * session. Possible values include: 'None', 'Idle', 'Connect', 'Active',
   * 'OpenSent', 'OpenConfirm', 'Established', 'PendingAdd', 'PendingUpdate',
   * 'PendingRemove'
   * @property {number} [bgpSession.maxPrefixesAdvertisedV4] The maximum number
   * of prefixes advertised over the IPv4 session.
   * @property {number} [bgpSession.maxPrefixesAdvertisedV6] The maximum number
   * of prefixes advertised over the IPv6 session.
   * @property {string} [bgpSession.md5AuthenticationKey] The MD5
   * authentication key of the session.
   */
  constructor() {
  }

  /**
   * Defines the metadata of DirectConnection
   *
   * @returns {object} metadata of DirectConnection
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DirectConnection',
      type: {
        name: 'Composite',
        className: 'DirectConnection',
        modelProperties: {
          bandwidthInMbps: {
            required: false,
            serializedName: 'bandwidthInMbps',
            type: {
              name: 'Number'
            }
          },
          provisionedBandwidthInMbps: {
            required: false,
            serializedName: 'provisionedBandwidthInMbps',
            type: {
              name: 'Number'
            }
          },
          peeringDBFacilityId: {
            required: false,
            serializedName: 'peeringDBFacilityId',
            type: {
              name: 'Number'
            }
          },
          connectionState: {
            required: false,
            readOnly: true,
            serializedName: 'connectionState',
            type: {
              name: 'String'
            }
          },
          bgpSession: {
            required: false,
            serializedName: 'bgpSession',
            type: {
              name: 'Composite',
              className: 'BgpSession'
            }
          }
        }
      }
    };
  }
}

module.exports = DirectConnection;

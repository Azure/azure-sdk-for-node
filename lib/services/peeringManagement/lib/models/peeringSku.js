/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The SKU that defines the tier and kind of the peering.
 *
 */
class PeeringSku {
  /**
   * Create a PeeringSku.
   * @property {string} [name] The name of the peering SKU. Possible values
   * include: 'Basic_Exchange_Free', 'Basic_Direct_Free',
   * 'Premium_Direct_Free', 'Premium_Exchange_Metered'
   * @property {string} [tier] The tier of the peering SKU. Possible values
   * include: 'Basic', 'Premium'
   * @property {string} [family] The family of the peering SKU. Possible values
   * include: 'Direct', 'Exchange'
   * @property {string} [size] The size of the peering SKU. Possible values
   * include: 'Free', 'Metered', 'Unlimited'
   */
  constructor() {
  }

  /**
   * Defines the metadata of PeeringSku
   *
   * @returns {object} metadata of PeeringSku
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PeeringSku',
      type: {
        name: 'Composite',
        className: 'PeeringSku',
        modelProperties: {
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          tier: {
            required: false,
            serializedName: 'tier',
            type: {
              name: 'String'
            }
          },
          family: {
            required: false,
            serializedName: 'family',
            type: {
              name: 'String'
            }
          },
          size: {
            required: false,
            serializedName: 'size',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = PeeringSku;

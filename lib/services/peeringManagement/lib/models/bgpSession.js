/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The properties that define a BGP session.
 *
 */
class BgpSession {
  /**
   * Create a BgpSession.
   * @property {string} [sessionPrefixV4] The IPv4 prefix that contains both
   * ends' IPv4 addresses.
   * @property {string} [sessionPrefixV6] The IPv6 prefix that contains both
   * ends' IPv6 addresses.
   * @property {string} [microsoftSessionIPv4Address] The IPv4 session address
   * on Microsoft's end.
   * @property {string} [microsoftSessionIPv6Address] The IPv6 session address
   * on Microsoft's end.
   * @property {string} [peerSessionIPv4Address] The IPv4 session address on
   * peer's end.
   * @property {string} [peerSessionIPv6Address] The IPv6 session address on
   * peer's end.
   * @property {string} [sessionStateV4] The state of the IPv4 session.
   * Possible values include: 'None', 'Idle', 'Connect', 'Active', 'OpenSent',
   * 'OpenConfirm', 'Established', 'PendingAdd', 'PendingUpdate',
   * 'PendingRemove'
   * @property {string} [sessionStateV6] The state of the IPv6 session.
   * Possible values include: 'None', 'Idle', 'Connect', 'Active', 'OpenSent',
   * 'OpenConfirm', 'Established', 'PendingAdd', 'PendingUpdate',
   * 'PendingRemove'
   * @property {number} [maxPrefixesAdvertisedV4] The maximum number of
   * prefixes advertised over the IPv4 session.
   * @property {number} [maxPrefixesAdvertisedV6] The maximum number of
   * prefixes advertised over the IPv6 session.
   * @property {string} [md5AuthenticationKey] The MD5 authentication key of
   * the session.
   */
  constructor() {
  }

  /**
   * Defines the metadata of BgpSession
   *
   * @returns {object} metadata of BgpSession
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'BgpSession',
      type: {
        name: 'Composite',
        className: 'BgpSession',
        modelProperties: {
          sessionPrefixV4: {
            required: false,
            serializedName: 'sessionPrefixV4',
            type: {
              name: 'String'
            }
          },
          sessionPrefixV6: {
            required: false,
            serializedName: 'sessionPrefixV6',
            type: {
              name: 'String'
            }
          },
          microsoftSessionIPv4Address: {
            required: false,
            readOnly: true,
            serializedName: 'microsoftSessionIPv4Address',
            type: {
              name: 'String'
            }
          },
          microsoftSessionIPv6Address: {
            required: false,
            readOnly: true,
            serializedName: 'microsoftSessionIPv6Address',
            type: {
              name: 'String'
            }
          },
          peerSessionIPv4Address: {
            required: false,
            serializedName: 'peerSessionIPv4Address',
            type: {
              name: 'String'
            }
          },
          peerSessionIPv6Address: {
            required: false,
            serializedName: 'peerSessionIPv6Address',
            type: {
              name: 'String'
            }
          },
          sessionStateV4: {
            required: false,
            readOnly: true,
            serializedName: 'sessionStateV4',
            type: {
              name: 'String'
            }
          },
          sessionStateV6: {
            required: false,
            readOnly: true,
            serializedName: 'sessionStateV6',
            type: {
              name: 'String'
            }
          },
          maxPrefixesAdvertisedV4: {
            required: false,
            serializedName: 'maxPrefixesAdvertisedV4',
            type: {
              name: 'Number'
            }
          },
          maxPrefixesAdvertisedV6: {
            required: false,
            serializedName: 'maxPrefixesAdvertisedV6',
            type: {
              name: 'Number'
            }
          },
          md5AuthenticationKey: {
            required: false,
            serializedName: 'md5AuthenticationKey',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = BgpSession;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The properties that define an exchange peering facility.
 *
 */
class ExchangePeeringFacility {
  /**
   * Create a ExchangePeeringFacility.
   * @property {string} [exchangeName] The name of the exchange peering
   * facility.
   * @property {number} [bandwidthInMbps] The bandwidth of the connection
   * between Microsoft and the exchange peering facility.
   * @property {string} [microsoftIPv4Address] The IPv4 address of Microsoft at
   * the exchange peering facility.
   * @property {string} [microsoftIPv6Address] The IPv6 address of Microsoft at
   * the exchange peering facility.
   * @property {string} [facilityIPv4Prefix] The IPv4 prefixes associated with
   * the exchange peering facility.
   * @property {string} [facilityIPv6Prefix] The IPv6 prefixes associated with
   * the exchange peering facility.
   * @property {number} [peeringDBFacilityId] The PeeringDB.com ID of the
   * facility.
   * @property {string} [peeringDBFacilityLink] The PeeringDB.com URL of the
   * facility.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ExchangePeeringFacility
   *
   * @returns {object} metadata of ExchangePeeringFacility
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ExchangePeeringFacility',
      type: {
        name: 'Composite',
        className: 'ExchangePeeringFacility',
        modelProperties: {
          exchangeName: {
            required: false,
            serializedName: 'exchangeName',
            type: {
              name: 'String'
            }
          },
          bandwidthInMbps: {
            required: false,
            serializedName: 'bandwidthInMbps',
            type: {
              name: 'Number'
            }
          },
          microsoftIPv4Address: {
            required: false,
            serializedName: 'microsoftIPv4Address',
            type: {
              name: 'String'
            }
          },
          microsoftIPv6Address: {
            required: false,
            serializedName: 'microsoftIPv6Address',
            type: {
              name: 'String'
            }
          },
          facilityIPv4Prefix: {
            required: false,
            serializedName: 'facilityIPv4Prefix',
            type: {
              name: 'String'
            }
          },
          facilityIPv6Prefix: {
            required: false,
            serializedName: 'facilityIPv6Prefix',
            type: {
              name: 'String'
            }
          },
          peeringDBFacilityId: {
            required: false,
            serializedName: 'peeringDBFacilityId',
            type: {
              name: 'Number'
            }
          },
          peeringDBFacilityLink: {
            required: false,
            serializedName: 'peeringDBFacilityLink',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ExchangePeeringFacility;

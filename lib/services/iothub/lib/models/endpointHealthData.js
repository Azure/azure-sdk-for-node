/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The health data for an endpoint
 *
 */
class EndpointHealthData {
  /**
   * Create a EndpointHealthData.
   * @property {string} [endpointId] Id of the endpoint
   * @property {string} [healthStatus] Health statuses have following meanings.
   * The 'healthy' status shows that the endpoint is accepting messages as
   * expected. The 'unhealthy' status shows that the endpoint is not accepting
   * messages as expected and IoT Hub is retrying to send data to this
   * endpoint. The status of an unhealthy endpoint will be updated to healthy
   * when IoT Hub has established an eventually consistent state of health. The
   * 'dead' status shows that the endpoint is not accepting messages, after IoT
   * Hub retried sending messages for the retrial period. See IoT Hub metrics
   * to identify errors and monitor issues with endpoints. The 'unknown' status
   * shows that the IoT Hub has not established a connection with the endpoint.
   * No messages have been delivered to or rejected from this endpoint.
   * Possible values include: 'unknown', 'healthy', 'unhealthy', 'dead'
   */
  constructor() {
  }

  /**
   * Defines the metadata of EndpointHealthData
   *
   * @returns {object} metadata of EndpointHealthData
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'EndpointHealthData',
      type: {
        name: 'Composite',
        className: 'EndpointHealthData',
        modelProperties: {
          endpointId: {
            required: false,
            serializedName: 'endpointId',
            type: {
              name: 'String'
            }
          },
          healthStatus: {
            required: false,
            serializedName: 'healthStatus',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = EndpointHealthData;

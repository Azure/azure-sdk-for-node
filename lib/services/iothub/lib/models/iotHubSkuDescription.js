/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the IotHubSkuDescription class.
 * @constructor
 * @member {string} [resourceType]
 * 
 * @member {object} [sku]
 * 
 * @member {string} [sku.name] Possible values include: 'F1', 'S1', 'S2'
 * 
 * @member {string} [sku.tier] Possible values include: 'Free', 'Standard'
 * 
 * @member {number} [sku.capacity]
 * 
 * @member {object} [capacity]
 * 
 * @member {number} [capacity.minimum]
 * 
 * @member {number} [capacity.maximum]
 * 
 * @member {number} [capacity.default]
 * 
 * @member {string} [capacity.scaleType] Possible values include: 'Automatic',
 * 'Manual', 'None'
 * 
 */
function IotHubSkuDescription() {
}

/**
 * Defines the metadata of IotHubSkuDescription
 *
 * @returns {object} metadata of IotHubSkuDescription
 *
 */
IotHubSkuDescription.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'IotHubSkuDescription',
    type: {
      name: 'Composite',
      className: 'IotHubSkuDescription',
      modelProperties: {
        resourceType: {
          required: false,
          readOnly: true,
          serializedName: 'resourceType',
          type: {
            name: 'String'
          }
        },
        sku: {
          required: false,
          serializedName: 'sku',
          type: {
            name: 'Composite',
            className: 'IotHubSkuInfo'
          }
        },
        capacity: {
          required: false,
          serializedName: 'capacity',
          type: {
            name: 'Composite',
            className: 'IotHubCapacity'
          }
        }
      }
    }
  };
};

module.exports = IotHubSkuDescription;

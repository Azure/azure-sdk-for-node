/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the MetricSpecification class.
 * @constructor
 * @member {string} [name]
 * 
 * @member {string} [displayName]
 * 
 * @member {string} [displayDescription]
 * 
 * @member {string} [unit] Possible values include: 'Bytes', 'BytesPerSecond',
 * 'Count', 'CountPerSecond', 'Percent', 'Seconds'
 * 
 * @member {string} [aggregationType] Possible values include: 'Average',
 * 'Last', 'Maximum', 'Minimum', 'None', 'Total'
 * 
 * @member {array} [dimensions]
 * 
 * @member {array} [availabilities]
 * 
 */
function MetricSpecification() {
}

/**
 * Defines the metadata of MetricSpecification
 *
 * @returns {object} metadata of MetricSpecification
 *
 */
MetricSpecification.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'MetricSpecification',
    type: {
      name: 'Composite',
      className: 'MetricSpecification',
      modelProperties: {
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        displayName: {
          required: false,
          serializedName: 'displayName',
          type: {
            name: 'String'
          }
        },
        displayDescription: {
          required: false,
          serializedName: 'displayDescription',
          type: {
            name: 'String'
          }
        },
        unit: {
          required: false,
          serializedName: 'unit',
          type: {
            name: 'String'
          }
        },
        aggregationType: {
          required: false,
          serializedName: 'aggregationType',
          type: {
            name: 'String'
          }
        },
        dimensions: {
          required: false,
          serializedName: 'dimensions',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'MetricDimensionElementType',
                type: {
                  name: 'Composite',
                  className: 'MetricDimension'
                }
            }
          }
        },
        availabilities: {
          required: false,
          serializedName: 'availabilities',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'MetricAvailabilityElementType',
                type: {
                  name: 'Composite',
                  className: 'MetricAvailability'
                }
            }
          }
        }
      }
    }
  };
};

module.exports = MetricSpecification;

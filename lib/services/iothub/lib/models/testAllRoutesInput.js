/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Input for testing all routes
 *
 */
class TestAllRoutesInput {
  /**
   * Create a TestAllRoutesInput.
   * @property {string} [routingSource] Routing source. Possible values
   * include: 'Invalid', 'DeviceMessages', 'TwinChangeEvents',
   * 'DeviceLifecycleEvents', 'DeviceJobLifecycleEvents'
   * @property {object} [message] Routing message
   * @property {string} [message.body] Body of routing message
   * @property {object} [message.appProperties] App properties
   * @property {object} [message.systemProperties] System properties
   * @property {object} [twin] Routing Twin Reference
   * @property {object} [twin.tags] Twin Tags
   * @property {object} [twin.properties]
   * @property {object} [twin.properties.desiredProperties] Twin desired
   * properties
   * @property {object} [twin.properties.reportedProperties] Twin desired
   * properties
   */
  constructor() {
  }

  /**
   * Defines the metadata of TestAllRoutesInput
   *
   * @returns {object} metadata of TestAllRoutesInput
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TestAllRoutesInput',
      type: {
        name: 'Composite',
        className: 'TestAllRoutesInput',
        modelProperties: {
          routingSource: {
            required: false,
            serializedName: 'routingSource',
            type: {
              name: 'String'
            }
          },
          message: {
            required: false,
            serializedName: 'message',
            type: {
              name: 'Composite',
              className: 'RoutingMessage'
            }
          },
          twin: {
            required: false,
            serializedName: 'twin',
            type: {
              name: 'Composite',
              className: 'RoutingTwin'
            }
          }
        }
      }
    };
  }
}

module.exports = TestAllRoutesInput;

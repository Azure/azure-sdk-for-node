/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the IpFilterRule class.
 * @constructor
 * IP filter Rule
 *
 * @member {string} [filterName] The name of the IP filter rule.
 * 
 * @member {string} [action] The action desired - accept or reject. Possible
 * values include: 'Accept', 'Reject'
 * 
 * @member {string} [ipMask] A string containing the IPAddress/range in CIDR
 * notation.
 * 
 */
function IpFilterRule() {
}

/**
 * Defines the metadata of IpFilterRule
 *
 * @returns {object} metadata of IpFilterRule
 *
 */
IpFilterRule.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'IpFilterRule',
    type: {
      name: 'Composite',
      className: 'IpFilterRule',
      modelProperties: {
        filterName: {
          required: false,
          serializedName: 'filterName',
          type: {
            name: 'String'
          }
        },
        action: {
          required: false,
          serializedName: 'action',
          type: {
            name: 'Enum',
            allowedValues: [ 'Accept', 'Reject' ]
          }
        },
        ipMask: {
          required: false,
          serializedName: 'ipMask',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = IpFilterRule;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var util = require('util');

/**
 * @class
 * Initializes a new instance of the SharedAccessAuthorizationRule class.
 * @constructor
 * @member {string} [keyName] The key name.
 * 
 * @member {string} [primaryKey] The primary key.
 * 
 * @member {string} [issuerName] The issuer name.
 * 
 * @member {string} [secondaryKey] The secondary key.
 * 
 * @member {string} [claimType] The claim type.
 * 
 * @member {string} [claimValue] The claim value.
 * 
 * @member {array} [rights] The rights.
 * 
 * @member {date} [createdTime] The created time.
 * 
 * @member {date} [modifiedTime] The modified time.
 * 
 * @member {number} [revision] The revision.
 * 
 */
function SharedAccessAuthorizationRule() {
}

/**
 * Defines the metadata of SharedAccessAuthorizationRule
 *
 * @returns {object} metadata of SharedAccessAuthorizationRule
 *
 */
SharedAccessAuthorizationRule.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'SharedAccessAuthorizationRule',
    type: {
      name: 'Composite',
      className: 'SharedAccessAuthorizationRule',
      modelProperties: {
        keyName: {
          required: false,
          serializedName: 'KeyName',
          type: {
            name: 'String'
          }
        },
        primaryKey: {
          required: false,
          serializedName: 'PrimaryKey',
          type: {
            name: 'String'
          }
        },
        issuerName: {
          required: false,
          serializedName: 'IssuerName',
          type: {
            name: 'String'
          }
        },
        secondaryKey: {
          required: false,
          serializedName: 'SecondaryKey',
          type: {
            name: 'String'
          }
        },
        claimType: {
          required: false,
          serializedName: 'ClaimType',
          type: {
            name: 'String'
          }
        },
        claimValue: {
          required: false,
          serializedName: 'ClaimValue',
          type: {
            name: 'String'
          }
        },
        rights: {
          required: false,
          serializedName: 'Rights',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'SBAccessRightsElementType',
                type: {
                  name: 'Enum',
                  allowedValues: [ 'Manage', 'Send', 'Listen', 'ManageNotificationHub' ]
                }
            }
          }
        },
        createdTime: {
          required: false,
          serializedName: 'CreatedTime',
          type: {
            name: 'DateTime'
          }
        },
        modifiedTime: {
          required: false,
          serializedName: 'ModifiedTime',
          type: {
            name: 'DateTime'
          }
        },
        revision: {
          required: false,
          serializedName: 'Revision',
          type: {
            name: 'Number'
          }
        }
      }
    }
  };
};

module.exports = SharedAccessAuthorizationRule;

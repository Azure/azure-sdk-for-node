/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The properties of an IoT hub.
 *
 */
class IotHubProperties {
  /**
   * Create a IotHubProperties.
   * @member {array} [authorizationPolicies] The shared access policies you can
   * use to secure a connection to the IoT hub.
   * @member {array} [ipFilterRules] The IP filter rules.
   * @member {string} [provisioningState] The provisioning state.
   * @member {string} [hostName] The name of the host.
   * @member {object} [eventHubEndpoints] The Event Hub-compatible endpoint
   * properties. The possible keys to this dictionary are events and
   * operationsMonitoringEvents. Both of these keys have to be present in the
   * dictionary while making create or update calls for the IoT hub.
   * @member {object} [routing]
   * @member {object} [routing.endpoints]
   * @member {array} [routing.endpoints.serviceBusQueues] The list of Service
   * Bus queue endpoints that IoT hub routes the messages to, based on the
   * routing rules.
   * @member {array} [routing.endpoints.serviceBusTopics] The list of Service
   * Bus topic endpoints that the IoT hub routes the messages to, based on the
   * routing rules.
   * @member {array} [routing.endpoints.eventHubs] The list of Event Hubs
   * endpoints that IoT hub routes messages to, based on the routing rules.
   * This list does not include the built-in Event Hubs endpoint.
   * @member {array} [routing.endpoints.storageContainers] The list of storage
   * container endpoints that IoT hub routes messages to, based on the routing
   * rules.
   * @member {array} [routing.routes] The list of user-provided routing rules
   * that the IoT hub uses to route messages to built-in and custom endpoints.
   * A maximum of 100 routing rules are allowed for paid hubs and a maximum of
   * 5 routing rules are allowed for free hubs.
   * @member {object} [routing.fallbackRoute] The properties of the route that
   * is used as a fall-back route when none of the conditions specified in the
   * 'routes' section are met. This is an optional parameter. When this
   * property is not set, the messages which do not meet any of the conditions
   * specified in the 'routes' section get routed to the built-in eventhub
   * endpoint.
   * @member {string} [routing.fallbackRoute.condition] The condition which is
   * evaluated in order to apply the fallback route. If the condition is not
   * provided it will evaluate to true by default. For grammar, See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
   * @member {array} [routing.fallbackRoute.endpointNames] The list of
   * endpoints to which the messages that satisfy the condition are routed to.
   * Currently only 1 endpoint is allowed.
   * @member {boolean} [routing.fallbackRoute.isEnabled] Used to specify
   * whether the fallback route is enabled.
   * @member {object} [storageEndpoints] The list of Azure Storage endpoints
   * where you can upload files. Currently you can configure only one Azure
   * Storage account and that MUST have its key as $default. Specifying more
   * than one storage account causes an error to be thrown. Not specifying a
   * value for this property when the enableFileUploadNotifications property is
   * set to True, causes an error to be thrown.
   * @member {object} [messagingEndpoints] The messaging endpoint properties
   * for the file upload notification queue.
   * @member {boolean} [enableFileUploadNotifications] If True, file upload
   * notifications are enabled.
   * @member {object} [cloudToDevice]
   * @member {number} [cloudToDevice.maxDeliveryCount] The max delivery count
   * for cloud-to-device messages in the device queue. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
   * @member {moment.duration} [cloudToDevice.defaultTtlAsIso8601] The default
   * time to live for cloud-to-device messages in the device queue. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
   * @member {object} [cloudToDevice.feedback]
   * @member {moment.duration} [cloudToDevice.feedback.lockDurationAsIso8601]
   * The lock duration for the feedback queue. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
   * @member {moment.duration} [cloudToDevice.feedback.ttlAsIso8601] The period
   * of time for which a message is available to consume before it is expired
   * by the IoT hub. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
   * @member {number} [cloudToDevice.feedback.maxDeliveryCount] The number of
   * times the IoT hub attempts to deliver a message on the feedback queue.
   * See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
   * @member {string} [comments] IoT hub comments.
   * @member {object} [operationsMonitoringProperties]
   * @member {object} [operationsMonitoringProperties.events]
   * @member {string} [features] The capabilities and features enabled for the
   * IoT hub. Possible values include: 'None', 'DeviceManagement'
   */
  constructor() {
  }

  /**
   * Defines the metadata of IotHubProperties
   *
   * @returns {object} metadata of IotHubProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IotHubProperties',
      type: {
        name: 'Composite',
        className: 'IotHubProperties',
        modelProperties: {
          authorizationPolicies: {
            required: false,
            serializedName: 'authorizationPolicies',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'SharedAccessSignatureAuthorizationRuleElementType',
                  type: {
                    name: 'Composite',
                    className: 'SharedAccessSignatureAuthorizationRule'
                  }
              }
            }
          },
          ipFilterRules: {
            required: false,
            serializedName: 'ipFilterRules',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'IpFilterRuleElementType',
                  type: {
                    name: 'Composite',
                    className: 'IpFilterRule'
                  }
              }
            }
          },
          provisioningState: {
            required: false,
            readOnly: true,
            serializedName: 'provisioningState',
            type: {
              name: 'String'
            }
          },
          hostName: {
            required: false,
            readOnly: true,
            serializedName: 'hostName',
            type: {
              name: 'String'
            }
          },
          eventHubEndpoints: {
            required: false,
            serializedName: 'eventHubEndpoints',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'EventHubPropertiesElementType',
                  type: {
                    name: 'Composite',
                    className: 'EventHubProperties'
                  }
              }
            }
          },
          routing: {
            required: false,
            serializedName: 'routing',
            type: {
              name: 'Composite',
              className: 'RoutingProperties'
            }
          },
          storageEndpoints: {
            required: false,
            serializedName: 'storageEndpoints',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StorageEndpointPropertiesElementType',
                  type: {
                    name: 'Composite',
                    className: 'StorageEndpointProperties'
                  }
              }
            }
          },
          messagingEndpoints: {
            required: false,
            serializedName: 'messagingEndpoints',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'MessagingEndpointPropertiesElementType',
                  type: {
                    name: 'Composite',
                    className: 'MessagingEndpointProperties'
                  }
              }
            }
          },
          enableFileUploadNotifications: {
            required: false,
            serializedName: 'enableFileUploadNotifications',
            type: {
              name: 'Boolean'
            }
          },
          cloudToDevice: {
            required: false,
            serializedName: 'cloudToDevice',
            type: {
              name: 'Composite',
              className: 'CloudToDeviceProperties'
            }
          },
          comments: {
            required: false,
            serializedName: 'comments',
            type: {
              name: 'String'
            }
          },
          operationsMonitoringProperties: {
            required: false,
            serializedName: 'operationsMonitoringProperties',
            type: {
              name: 'Composite',
              className: 'OperationsMonitoringProperties'
            }
          },
          features: {
            required: false,
            serializedName: 'features',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = IotHubProperties;

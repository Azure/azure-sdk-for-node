/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the IotHubProperties class.
 * @constructor
 * The Iot Hub properties.
 * @member {array} [authorizationPolicies] The authorization rules.
 * 
 * @member {string} [hostName] The name of the host.
 * 
 * @member {object} [eventHubEndpoints] The event hub endpoint properties.
 * 
 * @member {object} [storageEndpoints] The list of storage end points where
 * files can be uploaded. Currently only one storage account can be
 * configured.
 * 
 * @member {object} [messagingEndpoints] The list of messaging end points
 * configured.
 * 
 * @member {boolean} [enableFileUploadNotifications] The flag which indicates
 * whether file upload notification should be enabled. This is optional at
 * iot hub level. When enabled upload notifications will be available.
 * 
 * @member {object} [cloudToDevice]
 * 
 * @member {number} [cloudToDevice.maxDeliveryCount] The max delivery count
 * for the device queue. Range : 1-100.
 * 
 * @member {moment.duration} [cloudToDevice.defaultTtlAsIso8601] The default
 * time to live for the device queue. Range : 1 Min (PT1M) - 2 Days (P2D).
 * 
 * @member {object} [cloudToDevice.feedback]
 * 
 * @member {moment.duration} [cloudToDevice.feedback.lockDurationAsIso8601]
 * The lock duration for the feedback queue. Range: 5 Sec (PT5S) - 5 Min
 * (PT5M).
 * 
 * @member {moment.duration} [cloudToDevice.feedback.ttlAsIso8601] The time to
 * live for the feedback queue. Range: 1 Min (PT1M) - 2 Days (P2D).
 * 
 * @member {number} [cloudToDevice.feedback.maxDeliveryCount] The max delivery
 * count. Range : 1-100.
 * 
 * @member {string} [comments] The comments.
 * 
 * @member {object} [operationsMonitoringProperties]
 * 
 * @member {object} [operationsMonitoringProperties.events]
 * 
 * @member {string} [features] The Capabilities/Features that need to be
 * enabled for the Hub. Possible values include: 'None', 'DeviceManagement'
 * 
 */
function IotHubProperties() {
}

/**
 * Defines the metadata of IotHubProperties
 *
 * @returns {object} metadata of IotHubProperties
 *
 */
IotHubProperties.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'IotHubProperties',
    type: {
      name: 'Composite',
      className: 'IotHubProperties',
      modelProperties: {
        authorizationPolicies: {
          required: false,
          serializedName: 'authorizationPolicies',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'SharedAccessSignatureAuthorizationRuleElementType',
                type: {
                  name: 'Composite',
                  className: 'SharedAccessSignatureAuthorizationRule'
                }
            }
          }
        },
        hostName: {
          required: false,
          serializedName: 'hostName',
          type: {
            name: 'String'
          }
        },
        eventHubEndpoints: {
          required: false,
          serializedName: 'eventHubEndpoints',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'EventHubPropertiesElementType',
                type: {
                  name: 'Composite',
                  className: 'EventHubProperties'
                }
            }
          }
        },
        storageEndpoints: {
          required: false,
          serializedName: 'storageEndpoints',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StorageEndpointPropertiesElementType',
                type: {
                  name: 'Composite',
                  className: 'StorageEndpointProperties'
                }
            }
          }
        },
        messagingEndpoints: {
          required: false,
          serializedName: 'messagingEndpoints',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'MessagingEndpointPropertiesElementType',
                type: {
                  name: 'Composite',
                  className: 'MessagingEndpointProperties'
                }
            }
          }
        },
        enableFileUploadNotifications: {
          required: false,
          serializedName: 'enableFileUploadNotifications',
          type: {
            name: 'Boolean'
          }
        },
        cloudToDevice: {
          required: false,
          serializedName: 'cloudToDevice',
          type: {
            name: 'Composite',
            className: 'CloudToDeviceProperties'
          }
        },
        comments: {
          required: false,
          serializedName: 'comments',
          type: {
            name: 'String'
          }
        },
        operationsMonitoringProperties: {
          required: false,
          serializedName: 'operationsMonitoringProperties',
          type: {
            name: 'Composite',
            className: 'OperationsMonitoringProperties'
          }
        },
        features: {
          required: false,
          serializedName: 'features',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = IotHubProperties;

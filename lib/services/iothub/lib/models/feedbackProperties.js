/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the FeedbackProperties class.
 * @constructor
 * The properties of the feedback queue for cloud-to-device messages.
 *
 * @member {moment.duration} [lockDurationAsIso8601] The lock duration for the
 * feedback queue. See:
 * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
 *
 * @member {moment.duration} [ttlAsIso8601] The period of time for which a
 * message is available to consume before it is expired by the IoT hub. See:
 * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
 *
 * @member {number} [maxDeliveryCount] The number of times the IoT hub attempts
 * to deliver a message on the feedback queue. See:
 * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
 *
 */
class FeedbackProperties {
  constructor() {
  }

  /**
   * Defines the metadata of FeedbackProperties
   *
   * @returns {object} metadata of FeedbackProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'FeedbackProperties',
      type: {
        name: 'Composite',
        className: 'FeedbackProperties',
        modelProperties: {
          lockDurationAsIso8601: {
            required: false,
            serializedName: 'lockDurationAsIso8601',
            type: {
              name: 'TimeSpan'
            }
          },
          ttlAsIso8601: {
            required: false,
            serializedName: 'ttlAsIso8601',
            type: {
              name: 'TimeSpan'
            }
          },
          maxDeliveryCount: {
            required: false,
            serializedName: 'maxDeliveryCount',
            constraints: {
              InclusiveMaximum: 100,
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = FeedbackProperties;

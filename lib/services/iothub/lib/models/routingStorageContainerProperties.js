/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The properties related to a storage container endpoint.
 *
 */
class RoutingStorageContainerProperties {
  /**
   * Create a RoutingStorageContainerProperties.
   * @member {string} connectionString The connection string of the storage
   * account.
   * @member {string} name The name that identifies this endpoint. The name can
   * only include alphanumeric characters, periods, underscores, hyphens and
   * has a maximum length of 64 characters. The following names are reserved:
   * events, operationsMonitoringEvents, fileNotifications, $default. Endpoint
   * names must be unique across endpoint types.
   * @member {string} [subscriptionId] The subscription identifier of the
   * storage account.
   * @member {string} [resourceGroup] The name of the resource group of the
   * storage account.
   * @member {string} containerName The name of storage container in the
   * storage account.
   * @member {string} [fileNameFormat] File name format for the blob. Default
   * format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters
   * are mandatory but can be reordered.
   * @member {number} [batchFrequencyInSeconds] Time interval at which blobs
   * are written to storage. Value should be between 60 and 720 seconds.
   * Default value is 300 seconds.
   * @member {number} [maxChunkSizeInBytes] Maximum number of bytes for each
   * blob written to storage. Value should be between 10485760(10MB) and
   * 524288000(500MB). Default value is 314572800(300MB).
   * @member {string} [encoding] Encoding that is used to serialize messages to
   * blobs. Supported values are 'avro' and 'avrodeflate'. Default value is
   * 'avro'.
   */
  constructor() {
  }

  /**
   * Defines the metadata of RoutingStorageContainerProperties
   *
   * @returns {object} metadata of RoutingStorageContainerProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RoutingStorageContainerProperties',
      type: {
        name: 'Composite',
        className: 'RoutingStorageContainerProperties',
        modelProperties: {
          connectionString: {
            required: true,
            serializedName: 'connectionString',
            type: {
              name: 'String'
            }
          },
          name: {
            required: true,
            serializedName: 'name',
            constraints: {
              Pattern: '^[A-Za-z0-9-._]{1,64}$'
            },
            type: {
              name: 'String'
            }
          },
          subscriptionId: {
            required: false,
            serializedName: 'subscriptionId',
            type: {
              name: 'String'
            }
          },
          resourceGroup: {
            required: false,
            serializedName: 'resourceGroup',
            type: {
              name: 'String'
            }
          },
          containerName: {
            required: true,
            serializedName: 'containerName',
            type: {
              name: 'String'
            }
          },
          fileNameFormat: {
            required: false,
            serializedName: 'fileNameFormat',
            type: {
              name: 'String'
            }
          },
          batchFrequencyInSeconds: {
            required: false,
            serializedName: 'batchFrequencyInSeconds',
            constraints: {
              InclusiveMaximum: 720,
              InclusiveMinimum: 60
            },
            type: {
              name: 'Number'
            }
          },
          maxChunkSizeInBytes: {
            required: false,
            serializedName: 'maxChunkSizeInBytes',
            constraints: {
              InclusiveMaximum: 524288000,
              InclusiveMinimum: 10485760
            },
            type: {
              name: 'Number'
            }
          },
          encoding: {
            required: false,
            serializedName: 'encoding',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = RoutingStorageContainerProperties;

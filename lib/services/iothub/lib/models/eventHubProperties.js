/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the EventHubProperties class.
 * @constructor
 * The properties of the provisioned event hub used by the Iot Hub.
 * @member {number} [retentionTimeInDays] The retention time in days. Range of
 * values [For F1: 1-1, S1: 1-7, S2: 1-7, S3: 1-7].
 * 
 * @member {number} [partitionCount] The partition count. Range of values [For
 * F1: 2-2, S1: 2-128, S2: 2-128, S3: 2-128].
 * 
 * @member {array} [partitionIds] The partition ids.
 * 
 * @member {string} [path] The eventhub path.
 * 
 * @member {string} [endpoint] The endpoint.
 * 
 * @member {array} [internalAuthorizationPolicies] The internal authorization
 * rules.
 * 
 * @member {array} [authorizationPolicies] The authorization rules.
 * 
 */
function EventHubProperties() {
}

/**
 * Defines the metadata of EventHubProperties
 *
 * @returns {object} metadata of EventHubProperties
 *
 */
EventHubProperties.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'EventHubProperties',
    type: {
      name: 'Composite',
      className: 'EventHubProperties',
      modelProperties: {
        retentionTimeInDays: {
          required: false,
          serializedName: 'retentionTimeInDays',
          type: {
            name: 'Number'
          }
        },
        partitionCount: {
          required: false,
          serializedName: 'partitionCount',
          type: {
            name: 'Number'
          }
        },
        partitionIds: {
          required: false,
          serializedName: 'partitionIds',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        path: {
          required: false,
          serializedName: 'path',
          type: {
            name: 'String'
          }
        },
        endpoint: {
          required: false,
          serializedName: 'endpoint',
          type: {
            name: 'String'
          }
        },
        internalAuthorizationPolicies: {
          required: false,
          serializedName: 'internalAuthorizationPolicies',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'SharedAccessAuthorizationRuleElementType',
                type: {
                  name: 'Composite',
                  className: 'SharedAccessAuthorizationRule'
                }
            }
          }
        },
        authorizationPolicies: {
          required: false,
          serializedName: 'authorizationPolicies',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'SharedAccessAuthorizationRuleElementType',
                type: {
                  name: 'Composite',
                  className: 'SharedAccessAuthorizationRule'
                }
            }
          }
        }
      }
    }
  };
};

module.exports = EventHubProperties;

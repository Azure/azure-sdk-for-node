/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The description of the IoT hub.
 *
 * @extends models['Resource']
 */
class IotHubDescription extends models['Resource'] {
  /**
   * Create a IotHubDescription.
   * @member {string} subscriptionid The subscription identifier.
   * @member {string} resourcegroup The name of the resource group that
   * contains the IoT hub. A resource group name uniquely identifies the
   * resource group within the subscription.
   * @member {string} [etag] The Etag field is *not* required. If it is
   * provided in the response body, it must also be provided as a header per
   * the normal ETag convention.
   * @member {object} [properties]
   * @member {array} [properties.authorizationPolicies] The shared access
   * policies you can use to secure a connection to the IoT hub.
   * @member {array} [properties.ipFilterRules] The IP filter rules.
   * @member {string} [properties.provisioningState] The provisioning state.
   * @member {string} [properties.hostName] The name of the host.
   * @member {object} [properties.eventHubEndpoints] The Event Hub-compatible
   * endpoint properties. The possible keys to this dictionary are events and
   * operationsMonitoringEvents. Both of these keys have to be present in the
   * dictionary while making create or update calls for the IoT hub.
   * @member {object} [properties.routing]
   * @member {object} [properties.routing.endpoints]
   * @member {array} [properties.routing.endpoints.serviceBusQueues] The list
   * of Service Bus queue endpoints that IoT hub routes the messages to, based
   * on the routing rules.
   * @member {array} [properties.routing.endpoints.serviceBusTopics] The list
   * of Service Bus topic endpoints that the IoT hub routes the messages to,
   * based on the routing rules.
   * @member {array} [properties.routing.endpoints.eventHubs] The list of Event
   * Hubs endpoints that IoT hub routes messages to, based on the routing
   * rules. This list does not include the built-in Event Hubs endpoint.
   * @member {array} [properties.routing.endpoints.storageContainers] The list
   * of storage container endpoints that IoT hub routes messages to, based on
   * the routing rules.
   * @member {array} [properties.routing.routes] The list of user-provided
   * routing rules that the IoT hub uses to route messages to built-in and
   * custom endpoints. A maximum of 100 routing rules are allowed for paid hubs
   * and a maximum of 5 routing rules are allowed for free hubs.
   * @member {object} [properties.routing.fallbackRoute] The properties of the
   * route that is used as a fall-back route when none of the conditions
   * specified in the 'routes' section are met. This is an optional parameter.
   * When this property is not set, the messages which do not meet any of the
   * conditions specified in the 'routes' section get routed to the built-in
   * eventhub endpoint.
   * @member {string} [properties.routing.fallbackRoute.condition] The
   * condition which is evaluated in order to apply the fallback route. If the
   * condition is not provided it will evaluate to true by default. For
   * grammar, See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language
   * @member {array} [properties.routing.fallbackRoute.endpointNames] The list
   * of endpoints to which the messages that satisfy the condition are routed
   * to. Currently only 1 endpoint is allowed.
   * @member {boolean} [properties.routing.fallbackRoute.isEnabled] Used to
   * specify whether the fallback route is enabled.
   * @member {object} [properties.storageEndpoints] The list of Azure Storage
   * endpoints where you can upload files. Currently you can configure only one
   * Azure Storage account and that MUST have its key as $default. Specifying
   * more than one storage account causes an error to be thrown. Not specifying
   * a value for this property when the enableFileUploadNotifications property
   * is set to True, causes an error to be thrown.
   * @member {object} [properties.messagingEndpoints] The messaging endpoint
   * properties for the file upload notification queue.
   * @member {boolean} [properties.enableFileUploadNotifications] If True, file
   * upload notifications are enabled.
   * @member {object} [properties.cloudToDevice]
   * @member {number} [properties.cloudToDevice.maxDeliveryCount] The max
   * delivery count for cloud-to-device messages in the device queue. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
   * @member {moment.duration} [properties.cloudToDevice.defaultTtlAsIso8601]
   * The default time to live for cloud-to-device messages in the device queue.
   * See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
   * @member {object} [properties.cloudToDevice.feedback]
   * @member {moment.duration}
   * [properties.cloudToDevice.feedback.lockDurationAsIso8601] The lock
   * duration for the feedback queue. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
   * @member {moment.duration} [properties.cloudToDevice.feedback.ttlAsIso8601]
   * The period of time for which a message is available to consume before it
   * is expired by the IoT hub. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
   * @member {number} [properties.cloudToDevice.feedback.maxDeliveryCount] The
   * number of times the IoT hub attempts to deliver a message on the feedback
   * queue. See:
   * https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-messaging#cloud-to-device-messages.
   * @member {string} [properties.comments] IoT hub comments.
   * @member {object} [properties.operationsMonitoringProperties]
   * @member {object} [properties.operationsMonitoringProperties.events]
   * @member {string} [properties.features] The capabilities and features
   * enabled for the IoT hub. Possible values include: 'None',
   * 'DeviceManagement'
   * @member {object} sku
   * @member {string} [sku.name] The name of the SKU. Possible values include:
   * 'F1', 'S1', 'S2', 'S3'
   * @member {string} [sku.tier] The billing tier for the IoT hub. Possible
   * values include: 'Free', 'Standard'
   * @member {number} [sku.capacity] The number of provisioned IoT Hub units.
   * See:
   * https://docs.microsoft.com/azure/azure-subscription-service-limits#iot-hub-limits.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of IotHubDescription
   *
   * @returns {object} metadata of IotHubDescription
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'IotHubDescription',
      type: {
        name: 'Composite',
        className: 'IotHubDescription',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            constraints: {
              Pattern: '^(?![0-9]+$)(?!-)[a-zA-Z0-9-]{2,49}[a-zA-Z0-9]$'
            },
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: true,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          subscriptionid: {
            required: true,
            serializedName: 'subscriptionid',
            type: {
              name: 'String'
            }
          },
          resourcegroup: {
            required: true,
            serializedName: 'resourcegroup',
            type: {
              name: 'String'
            }
          },
          etag: {
            required: false,
            serializedName: 'etag',
            type: {
              name: 'String'
            }
          },
          properties: {
            required: false,
            serializedName: 'properties',
            type: {
              name: 'Composite',
              className: 'IotHubProperties'
            }
          },
          sku: {
            required: true,
            serializedName: 'sku',
            type: {
              name: 'Composite',
              className: 'IotHubSkuInfo'
            }
          }
        }
      }
    };
  }
}

module.exports = IotHubDescription;

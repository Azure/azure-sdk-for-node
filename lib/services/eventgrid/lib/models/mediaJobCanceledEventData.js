/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Job canceled event data
 *
 * @extends models['MediaJobStateChangeEventData']
 */
class MediaJobCanceledEventData extends models['MediaJobStateChangeEventData'] {
  /**
   * Create a MediaJobCanceledEventData.
   * @property {array} [outputs] Gets the Job outputs.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of MediaJobCanceledEventData
   *
   * @returns {object} metadata of MediaJobCanceledEventData
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: '#Microsoft.Media.JobCanceled',
      type: {
        name: 'Composite',
        className: 'MediaJobCanceledEventData',
        modelProperties: {
          previousState: {
            required: false,
            nullable: false,
            readOnly: true,
            serializedName: 'previousState',
            type: {
              name: 'Enum',
              allowedValues: [ 'Canceled', 'Canceling', 'Error', 'Finished', 'Processing', 'Queued', 'Scheduled' ]
            }
          },
          state: {
            required: false,
            nullable: false,
            readOnly: true,
            serializedName: 'state',
            type: {
              name: 'Enum',
              allowedValues: [ 'Canceled', 'Canceling', 'Error', 'Finished', 'Processing', 'Queued', 'Scheduled' ]
            }
          },
          correlationData: {
            required: false,
            serializedName: 'correlationData',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          outputs: {
            required: false,
            serializedName: 'outputs',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MediaJobOutputElementType',
                  type: {
                    name: 'Composite',
                    polymorphicDiscriminator: {
                      serializedName: '@odata.type',
                      clientName: 'odatatype'
                    },
                    uberParent: 'MediaJobOutput',
                    className: 'MediaJobOutput'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = MediaJobCanceledEventData;

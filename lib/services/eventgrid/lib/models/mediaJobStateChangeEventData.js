/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Schema of the Data property of an EventGridEvent for a
 * Microsoft.Media.JobStateChange event.
 *
 * @extends models['EventGridEventData']
 */
class MediaJobStateChangeEventData extends models['EventGridEventData'] {
  /**
   * Create a MediaJobStateChangeEventData.
   * @member {string} [previousState] The previous state of the Job. Possible
   * values include: 'Canceled', 'Canceling', 'Error', 'Finished',
   * 'Processing', 'Queued', 'Scheduled'
   * @member {string} [state] The new state of the Job. Possible values
   * include: 'Canceled', 'Canceling', 'Error', 'Finished', 'Processing',
   * 'Queued', 'Scheduled'
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of MediaJobStateChangeEventData
   *
   * @returns {object} metadata of MediaJobStateChangeEventData
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'MediaJobStateChangeEventData',
      type: {
        name: 'Composite',
        className: 'MediaJobStateChangeEventData',
        modelProperties: {
          previousState: {
            required: false,
            readOnly: true,
            serializedName: 'previousState',
            type: {
              name: 'String'
            }
          },
          state: {
            required: false,
            readOnly: true,
            serializedName: 'state',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = MediaJobStateChangeEventData;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Properties JSON element.
 *
 */
class DeviceTwinInfoProperties {
  /**
   * Create a DeviceTwinInfoProperties.
   * @property {object} [desired] A portion of the properties that can be
   * written only by the application back-end, and read by the device.
   * @property {object} [desired.metadata] Metadata information for the
   * properties JSON document.
   * @property {string} [desired.metadata.lastUpdated] The ISO8601 timestamp of
   * the last time the properties were updated.
   * @property {number} [desired.version] Version of device twin properties.
   * @property {object} [reported] A portion of the properties that can be
   * written only by the device, and read by the application back-end.
   * @property {object} [reported.metadata] Metadata information for the
   * properties JSON document.
   * @property {string} [reported.metadata.lastUpdated] The ISO8601 timestamp
   * of the last time the properties were updated.
   * @property {number} [reported.version] Version of device twin properties.
   */
  constructor() {
  }

  /**
   * Defines the metadata of DeviceTwinInfoProperties
   *
   * @returns {object} metadata of DeviceTwinInfoProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DeviceTwinInfo_properties',
      type: {
        name: 'Composite',
        className: 'DeviceTwinInfoProperties',
        modelProperties: {
          desired: {
            required: false,
            serializedName: 'desired',
            type: {
              name: 'Composite',
              className: 'DeviceTwinProperties'
            }
          },
          reported: {
            required: false,
            serializedName: 'reported',
            type: {
              name: 'Composite',
              className: 'DeviceTwinProperties'
            }
          }
        }
      }
    };
  }
}

module.exports = DeviceTwinInfoProperties;

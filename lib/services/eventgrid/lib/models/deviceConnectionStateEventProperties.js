/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Schema of the Data property of an EventGridEvent for a device connection
 * state event (DeviceConnected, DeviceDisconnected).
 *
 */
class DeviceConnectionStateEventProperties {
  /**
   * Create a DeviceConnectionStateEventProperties.
   * @property {string} [deviceId] The unique identifier of the device. This
   * case-sensitive string can be up to 128 characters long, and supports ASCII
   * 7-bit alphanumeric characters plus the following special characters: - : .
   * + % _ &#35; * ? ! ( ) , = @ ; $ '.
   * @property {string} [moduleId] The unique identifier of the module. This
   * case-sensitive string can be up to 128 characters long, and supports ASCII
   * 7-bit alphanumeric characters plus the following special characters: - : .
   * + % _ &#35; * ? ! ( ) , = @ ; $ '.
   * @property {string} [hubName] Name of the IoT Hub where the device was
   * created or deleted.
   * @property {object} [deviceConnectionStateEventInfo] Information about the
   * device connection state event.
   * @property {string} [deviceConnectionStateEventInfo.sequenceNumber]
   * Sequence number is string representation of a hexadecimal number. string
   * compare can be used to identify the larger number because both in ASCII
   * and HEX numbers come after alphabets. If you are converting the string to
   * hex, then the number is a 256 bit number.
   */
  constructor() {
  }

  /**
   * Defines the metadata of DeviceConnectionStateEventProperties
   *
   * @returns {object} metadata of DeviceConnectionStateEventProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DeviceConnectionStateEventProperties',
      type: {
        name: 'Composite',
        className: 'DeviceConnectionStateEventProperties',
        modelProperties: {
          deviceId: {
            required: false,
            serializedName: 'deviceId',
            type: {
              name: 'String'
            }
          },
          moduleId: {
            required: false,
            serializedName: 'moduleId',
            type: {
              name: 'String'
            }
          },
          hubName: {
            required: false,
            serializedName: 'hubName',
            type: {
              name: 'String'
            }
          },
          deviceConnectionStateEventInfo: {
            required: false,
            serializedName: 'deviceConnectionStateEventInfo',
            type: {
              name: 'Composite',
              className: 'DeviceConnectionStateEventInfo'
            }
          }
        }
      }
    };
  }
}

module.exports = DeviceConnectionStateEventProperties;

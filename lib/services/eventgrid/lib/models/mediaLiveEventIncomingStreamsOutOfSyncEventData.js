/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Incoming streams out of sync event data.
 *
 */
class MediaLiveEventIncomingStreamsOutOfSyncEventData {
  /**
   * Create a MediaLiveEventIncomingStreamsOutOfSyncEventData.
   * @property {string} [minLastTimestamp] Gets the minimum last timestamp
   * received.
   * @property {string} [typeOfStreamWithMinLastTimestamp] Gets the type of
   * stream with minimum last timestamp.
   * @property {string} [maxLastTimestamp] Gets the maximum timestamp among all
   * the tracks (audio or video).
   * @property {string} [typeOfStreamWithMaxLastTimestamp] Gets the type of
   * stream with maximum last timestamp.
   * @property {string} [timescaleOfMinLastTimestamp] Gets the timescale in
   * which "MinLastTimestamp" is represented.
   * @property {string} [timescaleOfMaxLastTimestamp] Gets the timescale in
   * which "MaxLastTimestamp" is represented.
   */
  constructor() {
  }

  /**
   * Defines the metadata of MediaLiveEventIncomingStreamsOutOfSyncEventData
   *
   * @returns {object} metadata of MediaLiveEventIncomingStreamsOutOfSyncEventData
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'MediaLiveEventIncomingStreamsOutOfSyncEventData',
      type: {
        name: 'Composite',
        className: 'MediaLiveEventIncomingStreamsOutOfSyncEventData',
        modelProperties: {
          minLastTimestamp: {
            required: false,
            readOnly: true,
            serializedName: 'minLastTimestamp',
            type: {
              name: 'String'
            }
          },
          typeOfStreamWithMinLastTimestamp: {
            required: false,
            readOnly: true,
            serializedName: 'typeOfStreamWithMinLastTimestamp',
            type: {
              name: 'String'
            }
          },
          maxLastTimestamp: {
            required: false,
            readOnly: true,
            serializedName: 'maxLastTimestamp',
            type: {
              name: 'String'
            }
          },
          typeOfStreamWithMaxLastTimestamp: {
            required: false,
            readOnly: true,
            serializedName: 'typeOfStreamWithMaxLastTimestamp',
            type: {
              name: 'String'
            }
          },
          timescaleOfMinLastTimestamp: {
            required: false,
            readOnly: true,
            serializedName: 'timescaleOfMinLastTimestamp',
            type: {
              name: 'String'
            }
          },
          timescaleOfMaxLastTimestamp: {
            required: false,
            readOnly: true,
            serializedName: 'timescaleOfMaxLastTimestamp',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = MediaLiveEventIncomingStreamsOutOfSyncEventData;

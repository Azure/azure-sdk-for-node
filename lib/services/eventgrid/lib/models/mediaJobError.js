/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Details of JobOutput errors.
 *
 */
class MediaJobError {
  /**
   * Create a MediaJobError.
   * @property {string} [code] Error code describing the error. Possible values
   * include: 'ServiceError', 'ServiceTransientError', 'DownloadNotAccessible',
   * 'DownloadTransientError', 'UploadNotAccessible', 'UploadTransientError',
   * 'ConfigurationUnsupported', 'ContentMalformed', 'ContentUnsupported'
   * @property {string} [message] A human-readable language-dependent
   * representation of the error.
   * @property {string} [category] Helps with categorization of errors.
   * Possible values include: 'Service', 'Download', 'Upload', 'Configuration',
   * 'Content'
   * @property {string} [retry] Indicates that it may be possible to retry the
   * Job. If retry is unsuccessful, please contact Azure support via Azure
   * Portal. Possible values include: 'DoNotRetry', 'MayRetry'
   * @property {array} [details] An array of details about specific errors that
   * led to this reported error.
   */
  constructor() {
  }

  /**
   * Defines the metadata of MediaJobError
   *
   * @returns {object} metadata of MediaJobError
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'MediaJobError',
      type: {
        name: 'Composite',
        className: 'MediaJobError',
        modelProperties: {
          code: {
            required: false,
            nullable: false,
            readOnly: true,
            serializedName: 'code',
            type: {
              name: 'Enum',
              allowedValues: [ 'ServiceError', 'ServiceTransientError', 'DownloadNotAccessible', 'DownloadTransientError', 'UploadNotAccessible', 'UploadTransientError', 'ConfigurationUnsupported', 'ContentMalformed', 'ContentUnsupported' ]
            }
          },
          message: {
            required: false,
            readOnly: true,
            serializedName: 'message',
            type: {
              name: 'String'
            }
          },
          category: {
            required: false,
            nullable: false,
            readOnly: true,
            serializedName: 'category',
            type: {
              name: 'Enum',
              allowedValues: [ 'Service', 'Download', 'Upload', 'Configuration', 'Content' ]
            }
          },
          retry: {
            required: false,
            nullable: false,
            readOnly: true,
            serializedName: 'retry',
            type: {
              name: 'Enum',
              allowedValues: [ 'DoNotRetry', 'MayRetry' ]
            }
          },
          details: {
            required: false,
            readOnly: true,
            serializedName: 'details',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MediaJobErrorDetailElementType',
                  type: {
                    name: 'Composite',
                    className: 'MediaJobErrorDetail'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = MediaJobError;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Properties of an event published to an Event Grid topic.
 *
 */
class EventGridEvent {
  /**
   * Create a EventGridEvent.
   * @property {string} id An unique identifier for the event.
   * @property {string} [topic] The resource path of the event source.
   * @property {string} subject A resource path relative to the topic path.
   * @property {object} data Event data specific to the event type.
   * @property {string} eventType The type of the event that occurred.
   * @property {date} eventTime The time (in UTC) the event was generated.
   * @property {string} [metadataVersion] The schema version of the event
   * metadata.
   * @property {string} dataVersion The schema version of the data object.
   */
  constructor() {
  }

  /**
   * Defines the metadata of EventGridEvent
   *
   * @returns {object} metadata of EventGridEvent
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'EventGridEvent',
      type: {
        name: 'Composite',
        className: 'EventGridEvent',
        modelProperties: {
          id: {
            required: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          topic: {
            required: false,
            serializedName: 'topic',
            type: {
              name: 'String'
            }
          },
          subject: {
            required: true,
            serializedName: 'subject',
            type: {
              name: 'String'
            }
          },
          data: {
            required: true,
            serializedName: 'data',
            type: {
              name: 'Object'
            }
          },
          eventType: {
            required: true,
            serializedName: 'eventType',
            type: {
              name: 'String'
            }
          },
          eventTime: {
            required: true,
            serializedName: 'eventTime',
            type: {
              name: 'DateTime'
            }
          },
          metadataVersion: {
            required: false,
            readOnly: true,
            serializedName: 'metadataVersion',
            type: {
              name: 'String'
            }
          },
          dataVersion: {
            required: true,
            serializedName: 'dataVersion',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = EventGridEvent;

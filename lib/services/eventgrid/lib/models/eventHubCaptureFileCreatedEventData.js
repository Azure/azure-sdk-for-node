/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Schema of the Data property of an EventGridEvent for an
 * Microsoft.EventHub.CaptureFileCreated event.
 *
 */
class EventHubCaptureFileCreatedEventData {
  /**
   * Create a EventHubCaptureFileCreatedEventData.
   * @property {string} [fileurl] The path to the capture file.
   * @property {string} [fileType] The file type of the capture file.
   * @property {string} [partitionId] The shard ID.
   * @property {number} [sizeInBytes] The file size.
   * @property {number} [eventCount] The number of events in the file.
   * @property {number} [firstSequenceNumber] The smallest sequence number from
   * the queue.
   * @property {number} [lastSequenceNumber] The last sequence number from the
   * queue.
   * @property {date} [firstEnqueueTime] The first time from the queue.
   * @property {date} [lastEnqueueTime] The last time from the queue.
   */
  constructor() {
  }

  /**
   * Defines the metadata of EventHubCaptureFileCreatedEventData
   *
   * @returns {object} metadata of EventHubCaptureFileCreatedEventData
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'EventHubCaptureFileCreatedEventData',
      type: {
        name: 'Composite',
        className: 'EventHubCaptureFileCreatedEventData',
        modelProperties: {
          fileurl: {
            required: false,
            serializedName: 'fileurl',
            type: {
              name: 'String'
            }
          },
          fileType: {
            required: false,
            serializedName: 'fileType',
            type: {
              name: 'String'
            }
          },
          partitionId: {
            required: false,
            serializedName: 'partitionId',
            type: {
              name: 'String'
            }
          },
          sizeInBytes: {
            required: false,
            serializedName: 'sizeInBytes',
            type: {
              name: 'Number'
            }
          },
          eventCount: {
            required: false,
            serializedName: 'eventCount',
            type: {
              name: 'Number'
            }
          },
          firstSequenceNumber: {
            required: false,
            serializedName: 'firstSequenceNumber',
            type: {
              name: 'Number'
            }
          },
          lastSequenceNumber: {
            required: false,
            serializedName: 'lastSequenceNumber',
            type: {
              name: 'Number'
            }
          },
          firstEnqueueTime: {
            required: false,
            serializedName: 'firstEnqueueTime',
            type: {
              name: 'DateTime'
            }
          },
          lastEnqueueTime: {
            required: false,
            serializedName: 'lastEnqueueTime',
            type: {
              name: 'DateTime'
            }
          }
        }
      }
    };
  }
}

module.exports = EventHubCaptureFileCreatedEventData;

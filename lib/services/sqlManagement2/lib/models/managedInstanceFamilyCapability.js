/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The managed server family capability.
 *
 */
class ManagedInstanceFamilyCapability {
  /**
   * Create a ManagedInstanceFamilyCapability.
   * @property {string} [name] Family name.
   * @property {string} [sku] SKU name.
   * @property {array} [supportedLicenseTypes] List of supported license types.
   * @property {array} [supportedVcoresValues] List of supported virtual cores
   * values.
   * @property {object} [includedMaxSize] Included size.
   * @property {number} [includedMaxSize.limit] The maximum size limit (see
   * 'unit' for the units).
   * @property {string} [includedMaxSize.unit] The units that the limit is
   * expressed in. Possible values include: 'Megabytes', 'Gigabytes',
   * 'Terabytes', 'Petabytes'
   * @property {array} [supportedStorageSizes] Storage size ranges.
   * @property {string} [status] The status of the capability. Possible values
   * include: 'Visible', 'Available', 'Default', 'Disabled'
   * @property {string} [reason] The reason for the capability not being
   * available.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ManagedInstanceFamilyCapability
   *
   * @returns {object} metadata of ManagedInstanceFamilyCapability
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ManagedInstanceFamilyCapability',
      type: {
        name: 'Composite',
        className: 'ManagedInstanceFamilyCapability',
        modelProperties: {
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          sku: {
            required: false,
            readOnly: true,
            serializedName: 'sku',
            type: {
              name: 'String'
            }
          },
          supportedLicenseTypes: {
            required: false,
            readOnly: true,
            serializedName: 'supportedLicenseTypes',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'LicenseTypeCapabilityElementType',
                  type: {
                    name: 'Composite',
                    className: 'LicenseTypeCapability'
                  }
              }
            }
          },
          supportedVcoresValues: {
            required: false,
            readOnly: true,
            serializedName: 'supportedVcoresValues',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ManagedInstanceVcoresCapabilityElementType',
                  type: {
                    name: 'Composite',
                    className: 'ManagedInstanceVcoresCapability'
                  }
              }
            }
          },
          includedMaxSize: {
            required: false,
            readOnly: true,
            serializedName: 'includedMaxSize',
            type: {
              name: 'Composite',
              className: 'MaxSizeCapability'
            }
          },
          supportedStorageSizes: {
            required: false,
            readOnly: true,
            serializedName: 'supportedStorageSizes',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MaxSizeRangeCapabilityElementType',
                  type: {
                    name: 'Composite',
                    className: 'MaxSizeRangeCapability'
                  }
              }
            }
          },
          status: {
            required: false,
            readOnly: true,
            serializedName: 'status',
            type: {
              name: 'Enum',
              allowedValues: [ 'Visible', 'Available', 'Default', 'Disabled' ]
            }
          },
          reason: {
            required: false,
            serializedName: 'reason',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ManagedInstanceFamilyCapability;

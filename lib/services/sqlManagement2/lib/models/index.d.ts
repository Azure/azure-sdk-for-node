/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * ARM resource.
 *
 * @property {string} [id] Resource ID.
 * @property {string} [name] Resource name.
 * @property {string} [type] Resource type.
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
}

/**
 * @class
 * Initializes a new instance of the ProxyResource class.
 * @constructor
 * ARM proxy resource.
 *
 */
export interface ProxyResource extends Resource {
}

/**
 * @class
 * Initializes a new instance of the RecoverableDatabase class.
 * @constructor
 * A recoverable database
 *
 * @property {string} [edition] The edition of the database
 * @property {string} [serviceLevelObjective] The service level objective name
 * of the database
 * @property {string} [elasticPoolName] The elastic pool name of the database
 * @property {date} [lastAvailableBackupDate] The last available backup date of
 * the database (ISO8601 format)
 */
export interface RecoverableDatabase extends ProxyResource {
  readonly edition?: string;
  readonly serviceLevelObjective?: string;
  readonly elasticPoolName?: string;
  readonly lastAvailableBackupDate?: Date;
}

/**
 * @class
 * Initializes a new instance of the RestorableDroppedDatabase class.
 * @constructor
 * A restorable dropped database
 *
 * @property {string} [location] The geo-location where the resource lives
 * @property {string} [databaseName] The name of the database
 * @property {string} [edition] The edition of the database
 * @property {string} [maxSizeBytes] The max size in bytes of the database
 * @property {string} [serviceLevelObjective] The service level objective name
 * of the database
 * @property {string} [elasticPoolName] The elastic pool name of the database
 * @property {date} [creationDate] The creation date of the database (ISO8601
 * format)
 * @property {date} [deletionDate] The deletion date of the database (ISO8601
 * format)
 * @property {date} [earliestRestoreDate] The earliest restore date of the
 * database (ISO8601 format)
 */
export interface RestorableDroppedDatabase extends ProxyResource {
  readonly location?: string;
  readonly databaseName?: string;
  readonly edition?: string;
  readonly maxSizeBytes?: string;
  readonly serviceLevelObjective?: string;
  readonly elasticPoolName?: string;
  readonly creationDate?: Date;
  readonly deletionDate?: Date;
  readonly earliestRestoreDate?: Date;
}

/**
 * @class
 * Initializes a new instance of the TrackedResource class.
 * @constructor
 * ARM tracked top level resource.
 *
 * @property {string} location Resource location.
 * @property {object} [tags] Resource tags.
 */
export interface TrackedResource extends Resource {
  location: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the CheckNameAvailabilityRequest class.
 * @constructor
 * A request to check whether the specified name for a resource is available.
 *
 * @property {string} name The name whose availability is to be checked.
 */
export interface CheckNameAvailabilityRequest {
  name: string;
}

/**
 * @class
 * Initializes a new instance of the CheckNameAvailabilityResponse class.
 * @constructor
 * A response indicating whether the specified name for a resource is
 * available.
 *
 * @property {boolean} [available] True if the name is available, otherwise
 * false.
 * @property {string} [message] A message explaining why the name is
 * unavailable. Will be null if the name is available.
 * @property {string} [name] The name whose availability was checked.
 * @property {string} [reason] The reason code explaining why the name is
 * unavailable. Will be null if the name is available. Possible values include:
 * 'Invalid', 'AlreadyExists'
 */
export interface CheckNameAvailabilityResponse {
  readonly available?: boolean;
  readonly message?: string;
  readonly name?: string;
  readonly reason?: string;
}

/**
 * @class
 * Initializes a new instance of the ServerConnectionPolicy class.
 * @constructor
 * A server secure connection policy.
 *
 * @property {string} [kind] Metadata used for the Azure portal experience.
 * @property {string} [location] Resource location.
 * @property {string} connectionType The server connection type. Possible
 * values include: 'Default', 'Proxy', 'Redirect'
 */
export interface ServerConnectionPolicy extends ProxyResource {
  readonly kind?: string;
  readonly location?: string;
  connectionType: string;
}

/**
 * @class
 * Initializes a new instance of the DatabaseSecurityAlertPolicy class.
 * @constructor
 * Contains information about a database Threat Detection policy.
 *
 * @property {string} [location] The geo-location where the resource lives
 * @property {string} [kind] Resource kind.
 * @property {string} state Specifies the state of the policy. If state is
 * Enabled, storageEndpoint and storageAccountAccessKey are required. Possible
 * values include: 'New', 'Enabled', 'Disabled'
 * @property {string} [disabledAlerts] Specifies the semicolon-separated list
 * of alerts that are disabled, or empty string to disable no alerts. Possible
 * values: Sql_Injection; Sql_Injection_Vulnerability; Access_Anomaly;
 * Data_Exfiltration; Unsafe_Action.
 * @property {string} [emailAddresses] Specifies the semicolon-separated list
 * of e-mail addresses to which the alert is sent.
 * @property {string} [emailAccountAdmins] Specifies that the alert is sent to
 * the account administrators. Possible values include: 'Enabled', 'Disabled'
 * @property {string} [storageEndpoint] Specifies the blob storage endpoint
 * (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold
 * all Threat Detection audit logs. If state is Enabled, storageEndpoint is
 * required.
 * @property {string} [storageAccountAccessKey] Specifies the identifier key of
 * the Threat Detection audit storage account. If state is Enabled,
 * storageAccountAccessKey is required.
 * @property {number} [retentionDays] Specifies the number of days to keep in
 * the Threat Detection audit logs.
 * @property {string} [useServerDefault] Specifies whether to use the default
 * server policy. Possible values include: 'Enabled', 'Disabled'
 */
export interface DatabaseSecurityAlertPolicy extends ProxyResource {
  location?: string;
  readonly kind?: string;
  state: string;
  disabledAlerts?: string;
  emailAddresses?: string;
  emailAccountAdmins?: string;
  storageEndpoint?: string;
  storageAccountAccessKey?: string;
  retentionDays?: number;
  useServerDefault?: string;
}

/**
 * @class
 * Initializes a new instance of the DataMaskingPolicy class.
 * @constructor
 * Represents a database data masking policy.
 *
 * @property {string} dataMaskingState The state of the data masking policy.
 * Possible values include: 'Disabled', 'Enabled'
 * @property {string} [exemptPrincipals] The list of the exempt principals.
 * Specifies the semicolon-separated list of database users for which the data
 * masking policy does not apply. The specified users receive data results
 * without masking for all of the database queries.
 * @property {string} [applicationPrincipals] The list of the application
 * principals. This is a legacy parameter and is no longer used.
 * @property {string} [maskingLevel] The masking level. This is a legacy
 * parameter and is no longer used.
 * @property {string} [location] The location of the data masking policy.
 * @property {string} [kind] The kind of data masking policy. Metadata, used
 * for Azure portal.
 */
export interface DataMaskingPolicy extends ProxyResource {
  dataMaskingState: string;
  exemptPrincipals?: string;
  readonly applicationPrincipals?: string;
  readonly maskingLevel?: string;
  readonly location?: string;
  readonly kind?: string;
}

/**
 * @class
 * Initializes a new instance of the DataMaskingRule class.
 * @constructor
 * Represents a database data masking rule.
 *
 * @property {string} [dataMaskingRuleId] The rule Id.
 * @property {string} [aliasName] The alias name. This is a legacy parameter
 * and is no longer used.
 * @property {string} [ruleState] The rule state. Used to delete a rule. To
 * delete an existing rule, specify the schemaName, tableName, columnName,
 * maskingFunction, and specify ruleState as disabled. However, if the rule
 * doesn't already exist, the rule will be created with ruleState set to
 * enabled, regardless of the provided value of ruleState. Possible values
 * include: 'Disabled', 'Enabled'
 * @property {string} schemaName The schema name on which the data masking rule
 * is applied.
 * @property {string} tableName The table name on which the data masking rule
 * is applied.
 * @property {string} columnName The column name on which the data masking rule
 * is applied.
 * @property {string} maskingFunction The masking function that is used for the
 * data masking rule. Possible values include: 'Default', 'CCN', 'Email',
 * 'Number', 'SSN', 'Text'
 * @property {string} [numberFrom] The numberFrom property of the masking rule.
 * Required if maskingFunction is set to Number, otherwise this parameter will
 * be ignored.
 * @property {string} [numberTo] The numberTo property of the data masking
 * rule. Required if maskingFunction is set to Number, otherwise this parameter
 * will be ignored.
 * @property {string} [prefixSize] If maskingFunction is set to Text, the
 * number of characters to show unmasked in the beginning of the string.
 * Otherwise, this parameter will be ignored.
 * @property {string} [suffixSize] If maskingFunction is set to Text, the
 * number of characters to show unmasked at the end of the string. Otherwise,
 * this parameter will be ignored.
 * @property {string} [replacementString] If maskingFunction is set to Text,
 * the character to use for masking the unexposed part of the string.
 * Otherwise, this parameter will be ignored.
 * @property {string} [location] The location of the data masking rule.
 * @property {string} [kind] The kind of Data Masking Rule. Metadata, used for
 * Azure portal.
 */
export interface DataMaskingRule extends ProxyResource {
  readonly dataMaskingRuleId?: string;
  aliasName?: string;
  ruleState?: string;
  schemaName: string;
  tableName: string;
  columnName: string;
  maskingFunction: string;
  numberFrom?: string;
  numberTo?: string;
  prefixSize?: string;
  suffixSize?: string;
  replacementString?: string;
  readonly location?: string;
  readonly kind?: string;
}

/**
 * @class
 * Initializes a new instance of the FirewallRule class.
 * @constructor
 * Represents a server firewall rule.
 *
 * @property {string} [kind] Kind of server that contains this firewall rule.
 * @property {string} [location] Location of the server that contains this
 * firewall rule.
 * @property {string} startIpAddress The start IP address of the firewall rule.
 * Must be IPv4 format. Use value '0.0.0.0' to represent all Azure-internal IP
 * addresses.
 * @property {string} endIpAddress The end IP address of the firewall rule.
 * Must be IPv4 format. Must be greater than or equal to startIpAddress. Use
 * value '0.0.0.0' to represent all Azure-internal IP addresses.
 */
export interface FirewallRule extends ProxyResource {
  readonly kind?: string;
  readonly location?: string;
  startIpAddress: string;
  endIpAddress: string;
}

/**
 * @class
 * Initializes a new instance of the GeoBackupPolicy class.
 * @constructor
 * A database geo backup policy.
 *
 * @property {string} state The state of the geo backup policy. Possible values
 * include: 'Disabled', 'Enabled'
 * @property {string} [storageType] The storage type of the geo backup policy.
 * @property {string} [kind] Kind of geo backup policy.  This is metadata used
 * for the Azure portal experience.
 * @property {string} [location] Backup policy location.
 */
export interface GeoBackupPolicy extends ProxyResource {
  state: string;
  readonly storageType?: string;
  readonly kind?: string;
  readonly location?: string;
}

/**
 * @class
 * Initializes a new instance of the ImportExtensionRequest class.
 * @constructor
 * Import database parameters.
 *
 * @property {string} [name] The name of the extension.
 * @property {string} [type] The type of the extension.
 * @property {string} storageKeyType The type of the storage key to use.
 * Possible values include: 'StorageAccessKey', 'SharedAccessKey'
 * @property {string} storageKey The storage key to use.  If storage key type
 * is SharedAccessKey, it must be preceded with a "?."
 * @property {string} storageUri The storage uri to use.
 * @property {string} administratorLogin The name of the SQL administrator.
 * @property {string} administratorLoginPassword The password of the SQL
 * administrator.
 * @property {string} [authenticationType] The authentication type. Possible
 * values include: 'SQL', 'ADPassword'. Default value: 'SQL' .
 */
export interface ImportExtensionRequest {
  name?: string;
  type?: string;
  storageKeyType: string;
  storageKey: string;
  storageUri: string;
  administratorLogin: string;
  administratorLoginPassword: string;
  authenticationType?: string;
}

/**
 * @class
 * Initializes a new instance of the ImportExportResponse class.
 * @constructor
 * Response for Import/Export Get operation.
 *
 * @property {string} [requestType] The request type of the operation.
 * @property {uuid} [requestId] The request type of the operation.
 * @property {string} [serverName] The name of the server.
 * @property {string} [databaseName] The name of the database.
 * @property {string} [status] The status message returned from the server.
 * @property {string} [lastModifiedTime] The operation status last modified
 * time.
 * @property {string} [queuedTime] The operation queued time.
 * @property {string} [blobUri] The blob uri.
 * @property {string} [errorMessage] The error message returned from the
 * server.
 */
export interface ImportExportResponse extends ProxyResource {
  readonly requestType?: string;
  readonly requestId?: string;
  readonly serverName?: string;
  readonly databaseName?: string;
  readonly status?: string;
  readonly lastModifiedTime?: string;
  readonly queuedTime?: string;
  readonly blobUri?: string;
  readonly errorMessage?: string;
}

/**
 * @class
 * Initializes a new instance of the ExportRequest class.
 * @constructor
 * Export database parameters.
 *
 * @property {string} storageKeyType The type of the storage key to use.
 * Possible values include: 'StorageAccessKey', 'SharedAccessKey'
 * @property {string} storageKey The storage key to use.  If storage key type
 * is SharedAccessKey, it must be preceded with a "?."
 * @property {string} storageUri The storage uri to use.
 * @property {string} administratorLogin The name of the SQL administrator.
 * @property {string} administratorLoginPassword The password of the SQL
 * administrator.
 * @property {string} [authenticationType] The authentication type. Possible
 * values include: 'SQL', 'ADPassword'. Default value: 'SQL' .
 */
export interface ExportRequest {
  storageKeyType: string;
  storageKey: string;
  storageUri: string;
  administratorLogin: string;
  administratorLoginPassword: string;
  authenticationType?: string;
}

/**
 * @class
 * Initializes a new instance of the ImportRequest class.
 * @constructor
 * Import database parameters.
 *
 * @property {string} databaseName The name of the database to import.
 * @property {string} edition The edition for the database being created.
 * Possible values include: 'Web', 'Business', 'Basic', 'Standard', 'Premium',
 * 'PremiumRS', 'Free', 'Stretch', 'DataWarehouse', 'System', 'System2'
 * @property {string} serviceObjectiveName The name of the service objective to
 * assign to the database. Possible values include: 'System', 'System0',
 * 'System1', 'System2', 'System3', 'System4', 'System2L', 'System3L',
 * 'System4L', 'Free', 'Basic', 'S0', 'S1', 'S2', 'S3', 'S4', 'S6', 'S7', 'S9',
 * 'S12', 'P1', 'P2', 'P3', 'P4', 'P6', 'P11', 'P15', 'PRS1', 'PRS2', 'PRS4',
 * 'PRS6', 'DW100', 'DW200', 'DW300', 'DW400', 'DW500', 'DW600', 'DW1000',
 * 'DW1200', 'DW1000c', 'DW1500', 'DW1500c', 'DW2000', 'DW2000c', 'DW3000',
 * 'DW2500c', 'DW3000c', 'DW6000', 'DW5000c', 'DW6000c', 'DW7500c', 'DW10000c',
 * 'DW15000c', 'DW30000c', 'DS100', 'DS200', 'DS300', 'DS400', 'DS500',
 * 'DS600', 'DS1000', 'DS1200', 'DS1500', 'DS2000', 'ElasticPool'
 * @property {string} maxSizeBytes The maximum size for the newly imported
 * database.
 */
export interface ImportRequest extends ExportRequest {
  databaseName: string;
  edition: string;
  serviceObjectiveName: string;
  maxSizeBytes: string;
}

/**
 * @class
 * Initializes a new instance of the MetricValue class.
 * @constructor
 * Represents database metrics.
 *
 * @property {number} [count] The number of values for the metric.
 * @property {number} [average] The average value of the metric.
 * @property {number} [maximum] The max value of the metric.
 * @property {number} [minimum] The min value of the metric.
 * @property {date} [timestamp] The metric timestamp (ISO-8601 format).
 * @property {number} [total] The total value of the metric.
 */
export interface MetricValue {
  readonly count?: number;
  readonly average?: number;
  readonly maximum?: number;
  readonly minimum?: number;
  readonly timestamp?: Date;
  readonly total?: number;
}

/**
 * @class
 * Initializes a new instance of the MetricName class.
 * @constructor
 * A database metric name.
 *
 * @property {string} [value] The name of the database metric.
 * @property {string} [localizedValue] The friendly name of the database
 * metric.
 */
export interface MetricName {
  readonly value?: string;
  readonly localizedValue?: string;
}

/**
 * @class
 * Initializes a new instance of the Metric class.
 * @constructor
 * Database metrics.
 *
 * @property {date} [startTime] The start time for the metric (ISO-8601
 * format).
 * @property {date} [endTime] The end time for the metric (ISO-8601 format).
 * @property {string} [timeGrain] The time step to be used to summarize the
 * metric values.
 * @property {string} [unit] The unit of the metric. Possible values include:
 * 'count', 'bytes', 'seconds', 'percent', 'countPerSecond', 'bytesPerSecond'
 * @property {object} [name] The name information for the metric.
 * @property {string} [name.value] The name of the database metric.
 * @property {string} [name.localizedValue] The friendly name of the database
 * metric.
 * @property {array} [metricValues] The metric values for the specified time
 * window and timestep.
 */
export interface Metric {
  readonly startTime?: Date;
  readonly endTime?: Date;
  readonly timeGrain?: string;
  readonly unit?: string;
  readonly name?: MetricName;
  readonly metricValues?: MetricValue[];
}

/**
 * @class
 * Initializes a new instance of the MetricAvailability class.
 * @constructor
 * A metric availability value.
 *
 * @property {string} [retention] The length of retention for the database
 * metric.
 * @property {string} [timeGrain] The granularity of the database metric.
 */
export interface MetricAvailability {
  readonly retention?: string;
  readonly timeGrain?: string;
}

/**
 * @class
 * Initializes a new instance of the MetricDefinition class.
 * @constructor
 * A database metric definition.
 *
 * @property {object} [name] The name information for the metric.
 * @property {string} [name.value] The name of the database metric.
 * @property {string} [name.localizedValue] The friendly name of the database
 * metric.
 * @property {string} [primaryAggregationType] The primary aggregation type
 * defining how metric values are displayed. Possible values include: 'None',
 * 'Average', 'Count', 'Minimum', 'Maximum', 'Total'
 * @property {string} [resourceUri] The resource uri of the database.
 * @property {string} [unit] The unit of the metric. Possible values include:
 * 'Count', 'Bytes', 'Seconds', 'Percent', 'CountPerSecond', 'BytesPerSecond'
 * @property {array} [metricAvailabilities] The list of database metric
 * availabities for the metric.
 */
export interface MetricDefinition {
  readonly name?: MetricName;
  readonly primaryAggregationType?: string;
  readonly resourceUri?: string;
  readonly unit?: string;
  readonly metricAvailabilities?: MetricAvailability[];
}

/**
 * @class
 * Initializes a new instance of the RecommendedElasticPoolMetric class.
 * @constructor
 * Represents recommended elastic pool metric.
 *
 * @property {date} [dateTime] The time of metric (ISO8601 format).
 * @property {number} [dtu] Gets or sets the DTUs (Database Transaction Units).
 * See
 * https://azure.microsoft.com/documentation/articles/sql-database-what-is-a-dtu/
 * @property {number} [sizeGB] Gets or sets size in gigabytes.
 */
export interface RecommendedElasticPoolMetric {
  dateTime?: Date;
  dtu?: number;
  sizeGB?: number;
}

/**
 * @class
 * Initializes a new instance of the RecommendedElasticPool class.
 * @constructor
 * Represents a recommented elastic pool.
 *
 * @property {string} [databaseEdition] The edition of the recommended elastic
 * pool. The ElasticPoolEdition enumeration contains all the valid editions.
 * Possible values include: 'Basic', 'Standard', 'Premium'
 * @property {number} [dtu] The DTU for the recommended elastic pool.
 * @property {number} [databaseDtuMin] The minimum DTU for the database.
 * @property {number} [databaseDtuMax] The maximum DTU for the database.
 * @property {number} [storageMB] Gets storage size in megabytes.
 * @property {date} [observationPeriodStart] The observation period start
 * (ISO8601 format).
 * @property {date} [observationPeriodEnd] The observation period start
 * (ISO8601 format).
 * @property {number} [maxObservedDtu] Gets maximum observed DTU.
 * @property {number} [maxObservedStorageMB] Gets maximum observed storage in
 * megabytes.
 * @property {array} [databases] The list of databases in this pool. Expanded
 * property
 * @property {array} [metrics] The list of databases housed in the server.
 * Expanded property
 */
export interface RecommendedElasticPool extends ProxyResource {
  readonly databaseEdition?: string;
  dtu?: number;
  databaseDtuMin?: number;
  databaseDtuMax?: number;
  storageMB?: number;
  readonly observationPeriodStart?: Date;
  readonly observationPeriodEnd?: Date;
  readonly maxObservedDtu?: number;
  readonly maxObservedStorageMB?: number;
  readonly databases?: TrackedResource[];
  readonly metrics?: RecommendedElasticPoolMetric[];
}

/**
 * @class
 * Initializes a new instance of the ReplicationLink class.
 * @constructor
 * Represents a database replication link.
 *
 * @property {string} [location] Location of the server that contains this
 * firewall rule.
 * @property {boolean} [isTerminationAllowed] Legacy value indicating whether
 * termination is allowed.  Currently always returns true.
 * @property {string} [replicationMode] Replication mode of this replication
 * link.
 * @property {string} [partnerServer] The name of the server hosting the
 * partner database.
 * @property {string} [partnerDatabase] The name of the partner database.
 * @property {string} [partnerLocation] The Azure Region of the partner
 * database.
 * @property {string} [role] The role of the database in the replication link.
 * Possible values include: 'Primary', 'Secondary', 'NonReadableSecondary',
 * 'Source', 'Copy'
 * @property {string} [partnerRole] The role of the partner database in the
 * replication link. Possible values include: 'Primary', 'Secondary',
 * 'NonReadableSecondary', 'Source', 'Copy'
 * @property {date} [startTime] The start time for the replication link.
 * @property {number} [percentComplete] The percentage of seeding complete for
 * the replication link.
 * @property {string} [replicationState] The replication state for the
 * replication link. Possible values include: 'PENDING', 'SEEDING', 'CATCH_UP',
 * 'SUSPENDED'
 */
export interface ReplicationLink extends ProxyResource {
  readonly location?: string;
  readonly isTerminationAllowed?: boolean;
  readonly replicationMode?: string;
  readonly partnerServer?: string;
  readonly partnerDatabase?: string;
  readonly partnerLocation?: string;
  readonly role?: string;
  readonly partnerRole?: string;
  readonly startTime?: Date;
  readonly percentComplete?: number;
  readonly replicationState?: string;
}

/**
 * @class
 * Initializes a new instance of the ServerAzureADAdministrator class.
 * @constructor
 * An server Active Directory Administrator.
 *
 * @property {string} login The server administrator login value.
 * @property {uuid} sid The server administrator Sid (Secure ID).
 * @property {uuid} tenantId The server Active Directory Administrator tenant
 * id.
 */
export interface ServerAzureADAdministrator extends ProxyResource {
  login: string;
  sid: string;
  tenantId: string;
}

/**
 * @class
 * Initializes a new instance of the ServerCommunicationLink class.
 * @constructor
 * Server communication link.
 *
 * @property {string} [state] The state.
 * @property {string} partnerServer The name of the partner server.
 * @property {string} [location] Communication link location.
 * @property {string} [kind] Communication link kind.  This property is used
 * for Azure Portal metadata.
 */
export interface ServerCommunicationLink extends ProxyResource {
  readonly state?: string;
  partnerServer: string;
  readonly location?: string;
  readonly kind?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceObjective class.
 * @constructor
 * Represents a database service objective.
 *
 * @property {string} [serviceObjectiveName] The name for the service
 * objective.
 * @property {boolean} [isDefault] Gets whether the service level objective is
 * the default service objective.
 * @property {boolean} [isSystem] Gets whether the service level objective is a
 * system service objective.
 * @property {string} [description] The description for the service level
 * objective.
 * @property {boolean} [enabled] Gets whether the service level objective is
 * enabled.
 */
export interface ServiceObjective extends ProxyResource {
  readonly serviceObjectiveName?: string;
  readonly isDefault?: boolean;
  readonly isSystem?: boolean;
  readonly description?: string;
  readonly enabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolActivity class.
 * @constructor
 * Represents the activity on an elastic pool.
 *
 * @property {string} [location] The geo-location where the resource lives
 * @property {date} [endTime] The time the operation finished (ISO8601 format).
 * @property {number} [errorCode] The error code if available.
 * @property {string} [errorMessage] The error message if available.
 * @property {number} [errorSeverity] The error severity if available.
 * @property {string} [operation] The operation name.
 * @property {uuid} [operationId] The unique operation ID.
 * @property {number} [percentComplete] The percentage complete if available.
 * @property {number} [requestedDatabaseDtuMax] The requested max DTU per
 * database if available.
 * @property {number} [requestedDatabaseDtuMin] The requested min DTU per
 * database if available.
 * @property {number} [requestedDtu] The requested DTU for the pool if
 * available.
 * @property {string} [requestedElasticPoolName] The requested name for the
 * elastic pool if available.
 * @property {number} [requestedStorageLimitInGB] The requested storage limit
 * for the pool in GB if available.
 * @property {string} [elasticPoolName] The name of the elastic pool.
 * @property {string} [serverName] The name of the server the elastic pool is
 * in.
 * @property {date} [startTime] The time the operation started (ISO8601
 * format).
 * @property {string} [state] The current state of the operation.
 * @property {number} [requestedStorageLimitInMB] The requested storage limit
 * in MB.
 * @property {number} [requestedDatabaseDtuGuarantee] The requested per
 * database DTU guarantee.
 * @property {number} [requestedDatabaseDtuCap] The requested per database DTU
 * cap.
 * @property {number} [requestedDtuGuarantee] The requested DTU guarantee.
 */
export interface ElasticPoolActivity extends ProxyResource {
  location?: string;
  readonly endTime?: Date;
  readonly errorCode?: number;
  readonly errorMessage?: string;
  readonly errorSeverity?: number;
  readonly operation?: string;
  readonly operationId?: string;
  readonly percentComplete?: number;
  readonly requestedDatabaseDtuMax?: number;
  readonly requestedDatabaseDtuMin?: number;
  readonly requestedDtu?: number;
  readonly requestedElasticPoolName?: string;
  readonly requestedStorageLimitInGB?: number;
  readonly elasticPoolName?: string;
  readonly serverName?: string;
  readonly startTime?: Date;
  readonly state?: string;
  readonly requestedStorageLimitInMB?: number;
  readonly requestedDatabaseDtuGuarantee?: number;
  readonly requestedDatabaseDtuCap?: number;
  readonly requestedDtuGuarantee?: number;
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolDatabaseActivity class.
 * @constructor
 * Represents the activity on an elastic pool.
 *
 * @property {string} [location] The geo-location where the resource lives
 * @property {string} [databaseName] The database name.
 * @property {date} [endTime] The time the operation finished (ISO8601 format).
 * @property {number} [errorCode] The error code if available.
 * @property {string} [errorMessage] The error message if available.
 * @property {number} [errorSeverity] The error severity if available.
 * @property {string} [operation] The operation name.
 * @property {uuid} [operationId] The unique operation ID.
 * @property {number} [percentComplete] The percentage complete if available.
 * @property {string} [requestedElasticPoolName] The name for the elastic pool
 * the database is moving into if available.
 * @property {string} [currentElasticPoolName] The name of the current elastic
 * pool the database is in if available.
 * @property {string} [currentServiceObjective] The name of the current service
 * objective if available.
 * @property {string} [requestedServiceObjective] The name of the requested
 * service objective if available.
 * @property {string} [serverName] The name of the server the elastic pool is
 * in.
 * @property {date} [startTime] The time the operation started (ISO8601
 * format).
 * @property {string} [state] The current state of the operation.
 */
export interface ElasticPoolDatabaseActivity extends ProxyResource {
  location?: string;
  readonly databaseName?: string;
  readonly endTime?: Date;
  readonly errorCode?: number;
  readonly errorMessage?: string;
  readonly errorSeverity?: number;
  readonly operation?: string;
  readonly operationId?: string;
  readonly percentComplete?: number;
  readonly requestedElasticPoolName?: string;
  readonly currentElasticPoolName?: string;
  readonly currentServiceObjective?: string;
  readonly requestedServiceObjective?: string;
  readonly serverName?: string;
  readonly startTime?: Date;
  readonly state?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationImpact class.
 * @constructor
 * The impact of an operation, both in absolute and relative terms.
 *
 * @property {string} [name] The name of the impact dimension.
 * @property {string} [unit] The unit in which estimated impact to dimension is
 * measured.
 * @property {number} [changeValueAbsolute] The absolute impact to dimension.
 * @property {number} [changeValueRelative] The relative impact to dimension
 * (null if not applicable)
 */
export interface OperationImpact {
  readonly name?: string;
  readonly unit?: string;
  readonly changeValueAbsolute?: number;
  readonly changeValueRelative?: number;
}

/**
 * @class
 * Initializes a new instance of the RecommendedIndex class.
 * @constructor
 * Represents a database recommended index.
 *
 * @property {string} [action] The proposed index action. You can create a
 * missing index, drop an unused index, or rebuild an existing index to improve
 * its performance. Possible values include: 'Create', 'Drop', 'Rebuild'
 * @property {string} [state] The current recommendation state. Possible values
 * include: 'Active', 'Pending', 'Executing', 'Verifying', 'Pending Revert',
 * 'Reverting', 'Reverted', 'Ignored', 'Expired', 'Blocked', 'Success'
 * @property {date} [created] The UTC datetime showing when this resource was
 * created (ISO8601 format).
 * @property {date} [lastModified] The UTC datetime of when was this resource
 * last changed (ISO8601 format).
 * @property {string} [indexType] The type of index (CLUSTERED, NONCLUSTERED,
 * COLUMNSTORE, CLUSTERED COLUMNSTORE). Possible values include: 'CLUSTERED',
 * 'NONCLUSTERED', 'COLUMNSTORE', 'CLUSTERED COLUMNSTORE'
 * @property {string} [schema] The schema where table to build index over
 * resides
 * @property {string} [table] The table on which to build index.
 * @property {array} [columns] Columns over which to build index
 * @property {array} [includedColumns] The list of column names to be included
 * in the index
 * @property {string} [indexScript] The full build index script
 * @property {array} [estimatedImpact] The estimated impact of doing
 * recommended index action.
 * @property {array} [reportedImpact] The values reported after index action is
 * complete.
 */
export interface RecommendedIndex extends ProxyResource {
  readonly action?: string;
  readonly state?: string;
  readonly created?: Date;
  readonly lastModified?: Date;
  readonly indexType?: string;
  readonly schema?: string;
  readonly table?: string;
  readonly columns?: string[];
  readonly includedColumns?: string[];
  readonly indexScript?: string;
  readonly estimatedImpact?: OperationImpact[];
  readonly reportedImpact?: OperationImpact[];
}

/**
 * @class
 * Initializes a new instance of the TransparentDataEncryption class.
 * @constructor
 * Represents a database transparent data encryption configuration.
 *
 * @property {string} [location] Resource location.
 * @property {string} [status] The status of the database transparent data
 * encryption. Possible values include: 'Enabled', 'Disabled'
 */
export interface TransparentDataEncryption extends ProxyResource {
  readonly location?: string;
  status?: string;
}

/**
 * @class
 * Initializes a new instance of the SloUsageMetric class.
 * @constructor
 * A Slo Usage Metric.
 *
 * @property {string} [serviceLevelObjective] The serviceLevelObjective for SLO
 * usage metric. Possible values include: 'System', 'System0', 'System1',
 * 'System2', 'System3', 'System4', 'System2L', 'System3L', 'System4L', 'Free',
 * 'Basic', 'S0', 'S1', 'S2', 'S3', 'S4', 'S6', 'S7', 'S9', 'S12', 'P1', 'P2',
 * 'P3', 'P4', 'P6', 'P11', 'P15', 'PRS1', 'PRS2', 'PRS4', 'PRS6', 'DW100',
 * 'DW200', 'DW300', 'DW400', 'DW500', 'DW600', 'DW1000', 'DW1200', 'DW1000c',
 * 'DW1500', 'DW1500c', 'DW2000', 'DW2000c', 'DW3000', 'DW2500c', 'DW3000c',
 * 'DW6000', 'DW5000c', 'DW6000c', 'DW7500c', 'DW10000c', 'DW15000c',
 * 'DW30000c', 'DS100', 'DS200', 'DS300', 'DS400', 'DS500', 'DS600', 'DS1000',
 * 'DS1200', 'DS1500', 'DS2000', 'ElasticPool'
 * @property {uuid} [serviceLevelObjectiveId] The serviceLevelObjectiveId for
 * SLO usage metric.
 * @property {number} [inRangeTimeRatio] Gets or sets inRangeTimeRatio for SLO
 * usage metric.
 */
export interface SloUsageMetric {
  readonly serviceLevelObjective?: string;
  readonly serviceLevelObjectiveId?: string;
  readonly inRangeTimeRatio?: number;
}

/**
 * @class
 * Initializes a new instance of the ServiceTierAdvisor class.
 * @constructor
 * Represents a Service Tier Advisor.
 *
 * @property {date} [observationPeriodStart] The observation period start
 * (ISO8601 format).
 * @property {date} [observationPeriodEnd] The observation period start
 * (ISO8601 format).
 * @property {number} [activeTimeRatio] The activeTimeRatio for service tier
 * advisor.
 * @property {number} [minDtu] Gets or sets minDtu for service tier advisor.
 * @property {number} [avgDtu] Gets or sets avgDtu for service tier advisor.
 * @property {number} [maxDtu] Gets or sets maxDtu for service tier advisor.
 * @property {number} [maxSizeInGB] Gets or sets maxSizeInGB for service tier
 * advisor.
 * @property {array} [serviceLevelObjectiveUsageMetrics] Gets or sets
 * serviceLevelObjectiveUsageMetrics for the service tier advisor.
 * @property {string} [currentServiceLevelObjective] Gets or sets
 * currentServiceLevelObjective for service tier advisor.
 * @property {uuid} [currentServiceLevelObjectiveId] Gets or sets
 * currentServiceLevelObjectiveId for service tier advisor.
 * @property {string} [usageBasedRecommendationServiceLevelObjective] Gets or
 * sets usageBasedRecommendationServiceLevelObjective for service tier advisor.
 * @property {uuid} [usageBasedRecommendationServiceLevelObjectiveId] Gets or
 * sets usageBasedRecommendationServiceLevelObjectiveId for service tier
 * advisor.
 * @property {string} [databaseSizeBasedRecommendationServiceLevelObjective]
 * Gets or sets databaseSizeBasedRecommendationServiceLevelObjective for
 * service tier advisor.
 * @property {uuid} [databaseSizeBasedRecommendationServiceLevelObjectiveId]
 * Gets or sets databaseSizeBasedRecommendationServiceLevelObjectiveId for
 * service tier advisor.
 * @property {string} [disasterPlanBasedRecommendationServiceLevelObjective]
 * Gets or sets disasterPlanBasedRecommendationServiceLevelObjective for
 * service tier advisor.
 * @property {uuid} [disasterPlanBasedRecommendationServiceLevelObjectiveId]
 * Gets or sets disasterPlanBasedRecommendationServiceLevelObjectiveId for
 * service tier advisor.
 * @property {string} [overallRecommendationServiceLevelObjective] Gets or sets
 * overallRecommendationServiceLevelObjective for service tier advisor.
 * @property {uuid} [overallRecommendationServiceLevelObjectiveId] Gets or sets
 * overallRecommendationServiceLevelObjectiveId for service tier advisor.
 * @property {number} [confidence] Gets or sets confidence for service tier
 * advisor.
 */
export interface ServiceTierAdvisor extends ProxyResource {
  readonly observationPeriodStart?: Date;
  readonly observationPeriodEnd?: Date;
  readonly activeTimeRatio?: number;
  readonly minDtu?: number;
  readonly avgDtu?: number;
  readonly maxDtu?: number;
  readonly maxSizeInGB?: number;
  readonly serviceLevelObjectiveUsageMetrics?: SloUsageMetric[];
  readonly currentServiceLevelObjective?: string;
  readonly currentServiceLevelObjectiveId?: string;
  readonly usageBasedRecommendationServiceLevelObjective?: string;
  readonly usageBasedRecommendationServiceLevelObjectiveId?: string;
  readonly databaseSizeBasedRecommendationServiceLevelObjective?: string;
  readonly databaseSizeBasedRecommendationServiceLevelObjectiveId?: string;
  readonly disasterPlanBasedRecommendationServiceLevelObjective?: string;
  readonly disasterPlanBasedRecommendationServiceLevelObjectiveId?: string;
  readonly overallRecommendationServiceLevelObjective?: string;
  readonly overallRecommendationServiceLevelObjectiveId?: string;
  readonly confidence?: number;
}

/**
 * @class
 * Initializes a new instance of the TransparentDataEncryptionActivity class.
 * @constructor
 * Represents a database transparent data encryption Scan.
 *
 * @property {string} [location] Resource location.
 * @property {string} [status] The status of the database. Possible values
 * include: 'Encrypting', 'Decrypting'
 * @property {number} [percentComplete] The percent complete of the transparent
 * data encryption scan for a database.
 */
export interface TransparentDataEncryptionActivity extends ProxyResource {
  readonly location?: string;
  readonly status?: string;
  readonly percentComplete?: number;
}

/**
 * @class
 * Initializes a new instance of the ServerUsage class.
 * @constructor
 * Represents server metrics.
 *
 * @property {string} [name] Name of the server usage metric.
 * @property {string} [resourceName] The name of the resource.
 * @property {string} [displayName] The metric display name.
 * @property {number} [currentValue] The current value of the metric.
 * @property {number} [limit] The current limit of the metric.
 * @property {string} [unit] The units of the metric.
 * @property {date} [nextResetTime] The next reset time for the metric (ISO8601
 * format).
 */
export interface ServerUsage {
  readonly name?: string;
  readonly resourceName?: string;
  readonly displayName?: string;
  readonly currentValue?: number;
  readonly limit?: number;
  readonly unit?: string;
  readonly nextResetTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the DatabaseUsage class.
 * @constructor
 * The database usages.
 *
 * @property {string} [name] The name of the usage metric.
 * @property {string} [resourceName] The name of the resource.
 * @property {string} [displayName] The usage metric display name.
 * @property {number} [currentValue] The current value of the usage metric.
 * @property {number} [limit] The current limit of the usage metric.
 * @property {string} [unit] The units of the usage metric.
 * @property {date} [nextResetTime] The next reset time for the usage metric
 * (ISO8601 format).
 */
export interface DatabaseUsage {
  readonly name?: string;
  readonly resourceName?: string;
  readonly displayName?: string;
  readonly currentValue?: number;
  readonly limit?: number;
  readonly unit?: string;
  readonly nextResetTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the AutomaticTuningOptions class.
 * @constructor
 * Automatic tuning properties for individual advisors.
 *
 * @property {string} [desiredState] Automatic tuning option desired state.
 * Possible values include: 'Off', 'On', 'Default'
 * @property {string} [actualState] Automatic tuning option actual state.
 * Possible values include: 'Off', 'On'
 * @property {number} [reasonCode] Reason code if desired and actual state are
 * different.
 * @property {string} [reasonDesc] Reason description if desired and actual
 * state are different. Possible values include: 'Default', 'Disabled',
 * 'AutoConfigured', 'InheritedFromServer', 'QueryStoreOff',
 * 'QueryStoreReadOnly', 'NotSupported'
 */
export interface AutomaticTuningOptions {
  desiredState?: string;
  readonly actualState?: string;
  readonly reasonCode?: number;
  readonly reasonDesc?: string;
}

/**
 * @class
 * Initializes a new instance of the DatabaseAutomaticTuning class.
 * @constructor
 * Database-level Automatic Tuning.
 *
 * @property {string} [desiredState] Automatic tuning desired state. Possible
 * values include: 'Inherit', 'Custom', 'Auto', 'Unspecified'
 * @property {string} [actualState] Automatic tuning actual state. Possible
 * values include: 'Inherit', 'Custom', 'Auto', 'Unspecified'
 * @property {object} [options] Automatic tuning options definition.
 */
export interface DatabaseAutomaticTuning extends ProxyResource {
  desiredState?: string;
  readonly actualState?: string;
  options?: { [propertyName: string]: AutomaticTuningOptions };
}

/**
 * @class
 * Initializes a new instance of the EncryptionProtector class.
 * @constructor
 * The server encryption protector.
 *
 * @property {string} [kind] Kind of encryption protector. This is metadata
 * used for the Azure portal experience.
 * @property {string} [location] Resource location.
 * @property {string} [subregion] Subregion of the encryption protector.
 * @property {string} [serverKeyName] The name of the server key.
 * @property {string} serverKeyType The encryption protector type like
 * 'ServiceManaged', 'AzureKeyVault'. Possible values include:
 * 'ServiceManaged', 'AzureKeyVault'
 * @property {string} [uri] The URI of the server key.
 * @property {string} [thumbprint] Thumbprint of the server key.
 */
export interface EncryptionProtector extends ProxyResource {
  kind?: string;
  readonly location?: string;
  readonly subregion?: string;
  serverKeyName?: string;
  serverKeyType: string;
  readonly uri?: string;
  readonly thumbprint?: string;
}

/**
 * @class
 * Initializes a new instance of the FailoverGroupReadWriteEndpoint class.
 * @constructor
 * Read-write endpoint of the failover group instance.
 *
 * @property {string} failoverPolicy Failover policy of the read-write endpoint
 * for the failover group. If failoverPolicy is Automatic then
 * failoverWithDataLossGracePeriodMinutes is required. Possible values include:
 * 'Manual', 'Automatic'
 * @property {number} [failoverWithDataLossGracePeriodMinutes] Grace period
 * before failover with data loss is attempted for the read-write endpoint. If
 * failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is
 * required.
 */
export interface FailoverGroupReadWriteEndpoint {
  failoverPolicy: string;
  failoverWithDataLossGracePeriodMinutes?: number;
}

/**
 * @class
 * Initializes a new instance of the FailoverGroupReadOnlyEndpoint class.
 * @constructor
 * Read-only endpoint of the failover group instance.
 *
 * @property {string} [failoverPolicy] Failover policy of the read-only
 * endpoint for the failover group. Possible values include: 'Disabled',
 * 'Enabled'
 */
export interface FailoverGroupReadOnlyEndpoint {
  failoverPolicy?: string;
}

/**
 * @class
 * Initializes a new instance of the PartnerInfo class.
 * @constructor
 * Partner server information for the failover group.
 *
 * @property {string} id Resource identifier of the partner server.
 * @property {string} [location] Geo location of the partner server.
 * @property {string} [replicationRole] Replication role of the partner server.
 * Possible values include: 'Primary', 'Secondary'
 */
export interface PartnerInfo {
  id: string;
  readonly location?: string;
  readonly replicationRole?: string;
}

/**
 * @class
 * Initializes a new instance of the FailoverGroup class.
 * @constructor
 * A failover group.
 *
 * @property {string} [location] Resource location.
 * @property {object} [tags] Resource tags.
 * @property {object} readWriteEndpoint Read-write endpoint of the failover
 * group instance.
 * @property {string} [readWriteEndpoint.failoverPolicy] Failover policy of the
 * read-write endpoint for the failover group. If failoverPolicy is Automatic
 * then failoverWithDataLossGracePeriodMinutes is required. Possible values
 * include: 'Manual', 'Automatic'
 * @property {number}
 * [readWriteEndpoint.failoverWithDataLossGracePeriodMinutes] Grace period
 * before failover with data loss is attempted for the read-write endpoint. If
 * failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is
 * required.
 * @property {object} [readOnlyEndpoint] Read-only endpoint of the failover
 * group instance.
 * @property {string} [readOnlyEndpoint.failoverPolicy] Failover policy of the
 * read-only endpoint for the failover group. Possible values include:
 * 'Disabled', 'Enabled'
 * @property {string} [replicationRole] Local replication role of the failover
 * group instance. Possible values include: 'Primary', 'Secondary'
 * @property {string} [replicationState] Replication state of the failover
 * group instance.
 * @property {array} partnerServers List of partner server information for the
 * failover group.
 * @property {array} [databases] List of databases in the failover group.
 */
export interface FailoverGroup extends ProxyResource {
  readonly location?: string;
  tags?: { [propertyName: string]: string };
  readWriteEndpoint: FailoverGroupReadWriteEndpoint;
  readOnlyEndpoint?: FailoverGroupReadOnlyEndpoint;
  readonly replicationRole?: string;
  readonly replicationState?: string;
  partnerServers: PartnerInfo[];
  databases?: string[];
}

/**
 * @class
 * Initializes a new instance of the FailoverGroupUpdate class.
 * @constructor
 * A failover group update request.
 *
 * @property {object} [readWriteEndpoint] Read-write endpoint of the failover
 * group instance.
 * @property {string} [readWriteEndpoint.failoverPolicy] Failover policy of the
 * read-write endpoint for the failover group. If failoverPolicy is Automatic
 * then failoverWithDataLossGracePeriodMinutes is required. Possible values
 * include: 'Manual', 'Automatic'
 * @property {number}
 * [readWriteEndpoint.failoverWithDataLossGracePeriodMinutes] Grace period
 * before failover with data loss is attempted for the read-write endpoint. If
 * failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is
 * required.
 * @property {object} [readOnlyEndpoint] Read-only endpoint of the failover
 * group instance.
 * @property {string} [readOnlyEndpoint.failoverPolicy] Failover policy of the
 * read-only endpoint for the failover group. Possible values include:
 * 'Disabled', 'Enabled'
 * @property {array} [databases] List of databases in the failover group.
 * @property {object} [tags] Resource tags.
 */
export interface FailoverGroupUpdate {
  readWriteEndpoint?: FailoverGroupReadWriteEndpoint;
  readOnlyEndpoint?: FailoverGroupReadOnlyEndpoint;
  databases?: string[];
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the ResourceIdentity class.
 * @constructor
 * Azure Active Directory identity configuration for a resource.
 *
 * @property {uuid} [principalId] The Azure Active Directory principal id.
 * @property {string} [type] The identity type. Set this to 'SystemAssigned' in
 * order to automatically create and assign an Azure Active Directory principal
 * for the resource. Possible values include: 'SystemAssigned'
 * @property {uuid} [tenantId] The Azure Active Directory tenant id.
 */
export interface ResourceIdentity {
  readonly principalId?: string;
  type?: string;
  readonly tenantId?: string;
}

/**
 * @class
 * Initializes a new instance of the Sku class.
 * @constructor
 * The resource model definition representing SKU
 *
 * @property {string} name The name of the SKU. Ex - P3. It is typically a
 * letter+number code
 * @property {string} [tier] This field is required to be implemented by the
 * Resource Provider if the service has more than one tier, but is not required
 * on a PUT.
 * @property {string} [size] The SKU size. When the name field is the
 * combination of tier and some other value, this would be the standalone code.
 * @property {string} [family] If the service has different generations of
 * hardware, for the same SKU, then that can be captured here.
 * @property {number} [capacity] If the SKU supports scale out/in then the
 * capacity integer should be included. If scale out/in is not possible for the
 * resource this may be omitted.
 */
export interface Sku {
  name: string;
  tier?: string;
  size?: string;
  family?: string;
  capacity?: number;
}

/**
 * @class
 * Initializes a new instance of the ManagedInstance class.
 * @constructor
 * An Azure SQL managed instance.
 *
 * @property {object} [identity] The Azure Active Directory identity of the
 * managed instance.
 * @property {uuid} [identity.principalId] The Azure Active Directory principal
 * id.
 * @property {string} [identity.type] The identity type. Set this to
 * 'SystemAssigned' in order to automatically create and assign an Azure Active
 * Directory principal for the resource. Possible values include:
 * 'SystemAssigned'
 * @property {uuid} [identity.tenantId] The Azure Active Directory tenant id.
 * @property {object} [sku] Managed instance sku
 * @property {string} [sku.name] The name of the SKU. Ex - P3. It is typically
 * a letter+number code
 * @property {string} [sku.tier] This field is required to be implemented by
 * the Resource Provider if the service has more than one tier, but is not
 * required on a PUT.
 * @property {string} [sku.size] The SKU size. When the name field is the
 * combination of tier and some other value, this would be the standalone code.
 * @property {string} [sku.family] If the service has different generations of
 * hardware, for the same SKU, then that can be captured here.
 * @property {number} [sku.capacity] If the SKU supports scale out/in then the
 * capacity integer should be included. If scale out/in is not possible for the
 * resource this may be omitted.
 * @property {string} [fullyQualifiedDomainName] The fully qualified domain
 * name of the managed instance.
 * @property {string} [administratorLogin] Administrator username for the
 * managed instance. Can only be specified when the managed instance is being
 * created (and is required for creation).
 * @property {string} [administratorLoginPassword] The administrator login
 * password (required for managed instance creation).
 * @property {string} [subnetId] Subnet resource ID for the managed instance.
 * @property {string} [state] The state of the managed instance.
 * @property {string} [licenseType] The license type. Possible values are
 * 'LicenseIncluded' and 'BasePrice'.
 * @property {number} [vCores] The number of VCores.
 * @property {number} [storageSizeInGB] The maximum storage size in GB.
 * @property {string} [collation] Collation of the managed instance.
 * @property {string} [dnsZone] The Dns Zone that the managed instance is in.
 * @property {string} [dnsZonePartner] The resource id of another managed
 * instance whose DNS zone this managed instance will share after creation.
 */
export interface ManagedInstance extends TrackedResource {
  identity?: ResourceIdentity;
  sku?: Sku;
  readonly fullyQualifiedDomainName?: string;
  administratorLogin?: string;
  administratorLoginPassword?: string;
  subnetId?: string;
  readonly state?: string;
  licenseType?: string;
  vCores?: number;
  storageSizeInGB?: number;
  collation?: string;
  readonly dnsZone?: string;
  dnsZonePartner?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedInstanceUpdate class.
 * @constructor
 * An update request for an Azure SQL Database managed instance.
 *
 * @property {object} [sku] Managed instance sku
 * @property {string} [sku.name] The name of the SKU. Ex - P3. It is typically
 * a letter+number code
 * @property {string} [sku.tier] This field is required to be implemented by
 * the Resource Provider if the service has more than one tier, but is not
 * required on a PUT.
 * @property {string} [sku.size] The SKU size. When the name field is the
 * combination of tier and some other value, this would be the standalone code.
 * @property {string} [sku.family] If the service has different generations of
 * hardware, for the same SKU, then that can be captured here.
 * @property {number} [sku.capacity] If the SKU supports scale out/in then the
 * capacity integer should be included. If scale out/in is not possible for the
 * resource this may be omitted.
 * @property {string} [fullyQualifiedDomainName] The fully qualified domain
 * name of the managed instance.
 * @property {string} [administratorLogin] Administrator username for the
 * managed instance. Can only be specified when the managed instance is being
 * created (and is required for creation).
 * @property {string} [administratorLoginPassword] The administrator login
 * password (required for managed instance creation).
 * @property {string} [subnetId] Subnet resource ID for the managed instance.
 * @property {string} [state] The state of the managed instance.
 * @property {string} [licenseType] The license type. Possible values are
 * 'LicenseIncluded' and 'BasePrice'.
 * @property {number} [vCores] The number of VCores.
 * @property {number} [storageSizeInGB] The maximum storage size in GB.
 * @property {string} [collation] Collation of the managed instance.
 * @property {string} [dnsZone] The Dns Zone that the managed instance is in.
 * @property {string} [dnsZonePartner] The resource id of another managed
 * instance whose DNS zone this managed instance will share after creation.
 * @property {object} [tags] Resource tags.
 */
export interface ManagedInstanceUpdate {
  sku?: Sku;
  readonly fullyQualifiedDomainName?: string;
  administratorLogin?: string;
  administratorLoginPassword?: string;
  subnetId?: string;
  readonly state?: string;
  licenseType?: string;
  vCores?: number;
  storageSizeInGB?: number;
  collation?: string;
  readonly dnsZone?: string;
  dnsZonePartner?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the OperationDisplay class.
 * @constructor
 * Display metadata associated with the operation.
 *
 * @property {string} [provider] The localized friendly form of the resource
 * provider name.
 * @property {string} [resource] The localized friendly form of the resource
 * type related to this action/operation.
 * @property {string} [operation] The localized friendly name for the
 * operation.
 * @property {string} [description] The localized friendly description for the
 * operation.
 */
export interface OperationDisplay {
  readonly provider?: string;
  readonly resource?: string;
  readonly operation?: string;
  readonly description?: string;
}

/**
 * @class
 * Initializes a new instance of the Operation class.
 * @constructor
 * SQL REST API operation definition.
 *
 * @property {string} [name] The name of the operation being performed on this
 * particular object.
 * @property {object} [display] The localized display information for this
 * particular operation / action.
 * @property {string} [display.provider] The localized friendly form of the
 * resource provider name.
 * @property {string} [display.resource] The localized friendly form of the
 * resource type related to this action/operation.
 * @property {string} [display.operation] The localized friendly name for the
 * operation.
 * @property {string} [display.description] The localized friendly description
 * for the operation.
 * @property {string} [origin] The intended executor of the operation. Possible
 * values include: 'user', 'system'
 * @property {object} [properties] Additional descriptions for the operation.
 */
export interface Operation {
  readonly name?: string;
  readonly display?: OperationDisplay;
  readonly origin?: string;
  readonly properties?: { [propertyName: string]: any };
}

/**
 * @class
 * Initializes a new instance of the ServerKey class.
 * @constructor
 * A server key.
 *
 * @property {string} [kind] Kind of encryption protector. This is metadata
 * used for the Azure portal experience.
 * @property {string} [location] Resource location.
 * @property {string} [subregion] Subregion of the server key.
 * @property {string} serverKeyType The server key type like 'ServiceManaged',
 * 'AzureKeyVault'. Possible values include: 'ServiceManaged', 'AzureKeyVault'
 * @property {string} [uri] The URI of the server key.
 * @property {string} [thumbprint] Thumbprint of the server key.
 * @property {date} [creationDate] The server key creation date.
 */
export interface ServerKey extends ProxyResource {
  kind?: string;
  readonly location?: string;
  readonly subregion?: string;
  serverKeyType: string;
  uri?: string;
  thumbprint?: string;
  creationDate?: Date;
}

/**
 * @class
 * Initializes a new instance of the Server class.
 * @constructor
 * An Azure SQL Database server.
 *
 * @property {object} [identity] The Azure Active Directory identity of the
 * server.
 * @property {uuid} [identity.principalId] The Azure Active Directory principal
 * id.
 * @property {string} [identity.type] The identity type. Set this to
 * 'SystemAssigned' in order to automatically create and assign an Azure Active
 * Directory principal for the resource. Possible values include:
 * 'SystemAssigned'
 * @property {uuid} [identity.tenantId] The Azure Active Directory tenant id.
 * @property {string} [kind] Kind of sql server. This is metadata used for the
 * Azure portal experience.
 * @property {string} [administratorLogin] Administrator username for the
 * server. Once created it cannot be changed.
 * @property {string} [administratorLoginPassword] The administrator login
 * password (required for server creation).
 * @property {string} [version] The version of the server.
 * @property {string} [state] The state of the server.
 * @property {string} [fullyQualifiedDomainName] The fully qualified domain
 * name of the server.
 */
export interface Server extends TrackedResource {
  identity?: ResourceIdentity;
  readonly kind?: string;
  administratorLogin?: string;
  administratorLoginPassword?: string;
  version?: string;
  readonly state?: string;
  readonly fullyQualifiedDomainName?: string;
}

/**
 * @class
 * Initializes a new instance of the ServerUpdate class.
 * @constructor
 * An update request for an Azure SQL Database server.
 *
 * @property {string} [administratorLogin] Administrator username for the
 * server. Once created it cannot be changed.
 * @property {string} [administratorLoginPassword] The administrator login
 * password (required for server creation).
 * @property {string} [version] The version of the server.
 * @property {string} [state] The state of the server.
 * @property {string} [fullyQualifiedDomainName] The fully qualified domain
 * name of the server.
 * @property {object} [tags] Resource tags.
 */
export interface ServerUpdate {
  administratorLogin?: string;
  administratorLoginPassword?: string;
  version?: string;
  readonly state?: string;
  readonly fullyQualifiedDomainName?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the SyncAgent class.
 * @constructor
 * An Azure SQL Database sync agent.
 *
 * @property {string} [syncAgentName] Name of the sync agent.
 * @property {string} [syncDatabaseId] ARM resource id of the sync database in
 * the sync agent.
 * @property {date} [lastAliveTime] Last alive time of the sync agent.
 * @property {string} [state] State of the sync agent. Possible values include:
 * 'Online', 'Offline', 'NeverConnected'
 * @property {boolean} [isUpToDate] If the sync agent version is up to date.
 * @property {date} [expiryTime] Expiration time of the sync agent version.
 * @property {string} [version] Version of the sync agent.
 */
export interface SyncAgent extends ProxyResource {
  readonly syncAgentName?: string;
  syncDatabaseId?: string;
  readonly lastAliveTime?: Date;
  readonly state?: string;
  readonly isUpToDate?: boolean;
  readonly expiryTime?: Date;
  readonly version?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncAgentKeyProperties class.
 * @constructor
 * Properties of an Azure SQL Database sync agent key.
 *
 * @property {string} [syncAgentKey] Key of sync agent.
 */
export interface SyncAgentKeyProperties {
  readonly syncAgentKey?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncAgentLinkedDatabase class.
 * @constructor
 * An Azure SQL Database sync agent linked database.
 *
 * @property {string} [databaseType] Type of the sync agent linked database.
 * Possible values include: 'AzureSqlDatabase', 'SqlServerDatabase'
 * @property {string} [databaseId] Id of the sync agent linked database.
 * @property {string} [description] Description of the sync agent linked
 * database.
 * @property {string} [serverName] Server name of the sync agent linked
 * database.
 * @property {string} [databaseName] Database name of the sync agent linked
 * database.
 * @property {string} [userName] User name of the sync agent linked database.
 */
export interface SyncAgentLinkedDatabase extends ProxyResource {
  readonly databaseType?: string;
  readonly databaseId?: string;
  readonly description?: string;
  readonly serverName?: string;
  readonly databaseName?: string;
  readonly userName?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncDatabaseIdProperties class.
 * @constructor
 * Properties of the sync database id.
 *
 * @property {string} [id] ARM resource id of sync database.
 */
export interface SyncDatabaseIdProperties {
  readonly id?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncFullSchemaTableColumn class.
 * @constructor
 * Properties of the column in the table of database full schema.
 *
 * @property {string} [dataSize] Data size of the column.
 * @property {string} [dataType] Data type of the column.
 * @property {string} [errorId] Error id of the column.
 * @property {boolean} [hasError] If there is error in the table.
 * @property {boolean} [isPrimaryKey] If it is the primary key of the table.
 * @property {string} [name] Name of the column.
 * @property {string} [quotedName] Quoted name of the column.
 */
export interface SyncFullSchemaTableColumn {
  readonly dataSize?: string;
  readonly dataType?: string;
  readonly errorId?: string;
  readonly hasError?: boolean;
  readonly isPrimaryKey?: boolean;
  readonly name?: string;
  readonly quotedName?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncFullSchemaTable class.
 * @constructor
 * Properties of the table in the database full schema.
 *
 * @property {array} [columns] List of columns in the table of database full
 * schema.
 * @property {string} [errorId] Error id of the table.
 * @property {boolean} [hasError] If there is error in the table.
 * @property {string} [name] Name of the table.
 * @property {string} [quotedName] Quoted name of the table.
 */
export interface SyncFullSchemaTable {
  readonly columns?: SyncFullSchemaTableColumn[];
  readonly errorId?: string;
  readonly hasError?: boolean;
  readonly name?: string;
  readonly quotedName?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncFullSchemaProperties class.
 * @constructor
 * Properties of the database full schema.
 *
 * @property {array} [tables] List of tables in the database full schema.
 * @property {date} [lastUpdateTime] Last update time of the database schema.
 */
export interface SyncFullSchemaProperties {
  readonly tables?: SyncFullSchemaTable[];
  readonly lastUpdateTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the SyncGroupLogProperties class.
 * @constructor
 * Properties of an Azure SQL Database sync group log.
 *
 * @property {date} [timestamp] Timestamp of the sync group log.
 * @property {string} [type] Type of the sync group log. Possible values
 * include: 'All', 'Error', 'Warning', 'Success'
 * @property {string} [source] Source of the sync group log.
 * @property {string} [details] Details of the sync group log.
 * @property {uuid} [tracingId] TracingId of the sync group log.
 * @property {string} [operationStatus] OperationStatus of the sync group log.
 */
export interface SyncGroupLogProperties {
  readonly timestamp?: Date;
  readonly type?: string;
  readonly source?: string;
  readonly details?: string;
  readonly tracingId?: string;
  readonly operationStatus?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncGroupSchemaTableColumn class.
 * @constructor
 * Properties of column in sync group table.
 *
 * @property {string} [quotedName] Quoted name of sync group table column.
 * @property {string} [dataSize] Data size of the column.
 * @property {string} [dataType] Data type of the column.
 */
export interface SyncGroupSchemaTableColumn {
  quotedName?: string;
  dataSize?: string;
  dataType?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncGroupSchemaTable class.
 * @constructor
 * Properties of table in sync group schema.
 *
 * @property {array} [columns] List of columns in sync group schema.
 * @property {string} [quotedName] Quoted name of sync group schema table.
 */
export interface SyncGroupSchemaTable {
  columns?: SyncGroupSchemaTableColumn[];
  quotedName?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncGroupSchema class.
 * @constructor
 * Properties of sync group schema.
 *
 * @property {array} [tables] List of tables in sync group schema.
 * @property {string} [masterSyncMemberName] Name of master sync member where
 * the schema is from.
 */
export interface SyncGroupSchema {
  tables?: SyncGroupSchemaTable[];
  masterSyncMemberName?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncGroup class.
 * @constructor
 * An Azure SQL Database sync group.
 *
 * @property {number} [interval] Sync interval of the sync group.
 * @property {date} [lastSyncTime] Last sync time of the sync group.
 * @property {string} [conflictResolutionPolicy] Conflict resolution policy of
 * the sync group. Possible values include: 'HubWin', 'MemberWin'
 * @property {string} [syncDatabaseId] ARM resource id of the sync database in
 * the sync group.
 * @property {string} [hubDatabaseUserName] User name for the sync group hub
 * database credential.
 * @property {string} [hubDatabasePassword] Password for the sync group hub
 * database credential.
 * @property {string} [syncState] Sync state of the sync group. Possible values
 * include: 'NotReady', 'Error', 'Warning', 'Progressing', 'Good'
 * @property {object} [schema] Sync schema of the sync group.
 * @property {array} [schema.tables] List of tables in sync group schema.
 * @property {string} [schema.masterSyncMemberName] Name of master sync member
 * where the schema is from.
 */
export interface SyncGroup extends ProxyResource {
  interval?: number;
  readonly lastSyncTime?: Date;
  conflictResolutionPolicy?: string;
  syncDatabaseId?: string;
  hubDatabaseUserName?: string;
  hubDatabasePassword?: string;
  readonly syncState?: string;
  schema?: SyncGroupSchema;
}

/**
 * @class
 * Initializes a new instance of the SyncMember class.
 * @constructor
 * An Azure SQL Database sync member.
 *
 * @property {string} [databaseType] Database type of the sync member. Possible
 * values include: 'AzureSqlDatabase', 'SqlServerDatabase'
 * @property {string} [syncAgentId] ARM resource id of the sync agent in the
 * sync member.
 * @property {uuid} [sqlServerDatabaseId] SQL Server database id of the sync
 * member.
 * @property {string} [serverName] Server name of the member database in the
 * sync member
 * @property {string} [databaseName] Database name of the member database in
 * the sync member.
 * @property {string} [userName] User name of the member database in the sync
 * member.
 * @property {string} [password] Password of the member database in the sync
 * member.
 * @property {string} [syncDirection] Sync direction of the sync member.
 * Possible values include: 'Bidirectional', 'OneWayMemberToHub',
 * 'OneWayHubToMember'
 * @property {string} [syncState] Sync state of the sync member. Possible
 * values include: 'SyncInProgress', 'SyncSucceeded', 'SyncFailed',
 * 'DisabledTombstoneCleanup', 'DisabledBackupRestore',
 * 'SyncSucceededWithWarnings', 'SyncCancelling', 'SyncCancelled',
 * 'UnProvisioned', 'Provisioning', 'Provisioned', 'ProvisionFailed',
 * 'DeProvisioning', 'DeProvisioned', 'DeProvisionFailed', 'Reprovisioning',
 * 'ReprovisionFailed', 'UnReprovisioned'
 */
export interface SyncMember extends ProxyResource {
  databaseType?: string;
  syncAgentId?: string;
  sqlServerDatabaseId?: string;
  serverName?: string;
  databaseName?: string;
  userName?: string;
  password?: string;
  syncDirection?: string;
  readonly syncState?: string;
}

/**
 * @class
 * Initializes a new instance of the SubscriptionUsage class.
 * @constructor
 * Usage Metric of a Subscription in a Location.
 *
 * @property {string} [displayName] User-readable name of the metric.
 * @property {number} [currentValue] Current value of the metric.
 * @property {number} [limit] Boundary value of the metric.
 * @property {string} [unit] Unit of the metric.
 */
export interface SubscriptionUsage extends ProxyResource {
  readonly displayName?: string;
  readonly currentValue?: number;
  readonly limit?: number;
  readonly unit?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkRule class.
 * @constructor
 * A virtual network rule.
 *
 * @property {string} virtualNetworkSubnetId The ARM resource id of the virtual
 * network subnet.
 * @property {boolean} [ignoreMissingVnetServiceEndpoint] Create firewall rule
 * before the virtual network has vnet service endpoint enabled.
 * @property {string} [state] Virtual Network Rule State. Possible values
 * include: 'Initializing', 'InProgress', 'Ready', 'Deleting', 'Unknown'
 */
export interface VirtualNetworkRule extends ProxyResource {
  virtualNetworkSubnetId: string;
  ignoreMissingVnetServiceEndpoint?: boolean;
  readonly state?: string;
}

/**
 * @class
 * Initializes a new instance of the ExtendedDatabaseBlobAuditingPolicy class.
 * @constructor
 * An extended database blob auditing policy.
 *
 * @property {string} [predicateExpression] Specifies condition of where clause
 * when creating an audit.
 * @property {string} state Specifies the state of the policy. If state is
 * Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.
 * Possible values include: 'Enabled', 'Disabled'
 * @property {string} [storageEndpoint] Specifies the blob storage endpoint
 * (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled,
 * storageEndpoint is required.
 * @property {string} [storageAccountAccessKey] Specifies the identifier key of
 * the auditing storage account. If state is Enabled and storageEndpoint is
 * specified, storageAccountAccessKey is required.
 * @property {number} [retentionDays] Specifies the number of days to keep in
 * the audit logs in the storage account.
 * @property {array} [auditActionsAndGroups] Specifies the Actions-Groups and
 * Actions to audit.
 *
 * The recommended set of action groups to use is the following combination -
 * this will audit all the queries and stored procedures executed against the
 * database, as well as successful and failed logins:
 *
 * BATCH_COMPLETED_GROUP,
 * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
 * FAILED_DATABASE_AUTHENTICATION_GROUP.
 *
 * This above combination is also the set that is configured by default when
 * enabling auditing from the Azure portal.
 *
 * The supported action groups to audit are (note: choose only specific groups
 * that cover your auditing needs. Using unnecessary groups could lead to very
 * large quantities of audit records):
 *
 * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
 * BACKUP_RESTORE_GROUP
 * DATABASE_LOGOUT_GROUP
 * DATABASE_OBJECT_CHANGE_GROUP
 * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
 * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
 * DATABASE_OPERATION_GROUP
 * DATABASE_PERMISSION_CHANGE_GROUP
 * DATABASE_PRINCIPAL_CHANGE_GROUP
 * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
 * DATABASE_ROLE_MEMBER_CHANGE_GROUP
 * FAILED_DATABASE_AUTHENTICATION_GROUP
 * SCHEMA_OBJECT_ACCESS_GROUP
 * SCHEMA_OBJECT_CHANGE_GROUP
 * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
 * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
 * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
 * USER_CHANGE_PASSWORD_GROUP
 * BATCH_STARTED_GROUP
 * BATCH_COMPLETED_GROUP
 *
 * These are groups that cover all sql statements and stored procedures
 * executed against the database, and should not be used in combination with
 * other groups as this will result in duplicate audit logs.
 *
 * For more information, see [Database-Level Audit Action
 * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
 *
 * For Database auditing policy, specific Actions can also be specified (note
 * that Actions cannot be specified for Server auditing policy). The supported
 * actions to audit are:
 * SELECT
 * UPDATE
 * INSERT
 * DELETE
 * EXECUTE
 * RECEIVE
 * REFERENCES
 *
 * The general form for defining an action to be audited is:
 * {action} ON {object} BY {principal}
 *
 * Note that <object> in the above format can refer to an object like a table,
 * view, or stored procedure, or an entire database or schema. For the latter
 * cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used,
 * respectively.
 *
 * For example:
 * SELECT on dbo.myTable by public
 * SELECT on DATABASE::myDatabase by public
 * SELECT on SCHEMA::mySchema by public
 *
 * For more information, see [Database-Level Audit
 * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
 * @property {uuid} [storageAccountSubscriptionId] Specifies the blob storage
 * subscription Id.
 * @property {boolean} [isStorageSecondaryKeyInUse] Specifies whether
 * storageAccountAccessKey value is the storage's secondary key.
 * @property {boolean} [isAzureMonitorTargetEnabled] Specifies whether audit
 * events are sent to Azure Monitor.
 * In order to send the events to Azure Monitor, specify 'State' as 'Enabled'
 * and 'IsAzureMonitorTargetEnabled' as true.
 *
 * When using REST API to configure auditing, Diagnostic Settings with
 * 'SQLSecurityAuditEvents' diagnostic logs category on the database should be
 * also created.
 * Note that for server level audit you should use the 'master' database as
 * {databaseName}.
 *
 * Diagnostic Settings URI format:
 * PUT
 * https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
 *
 * For more information, see [Diagnostic Settings REST
 * API](https://go.microsoft.com/fwlink/?linkid=2033207)
 * or [Diagnostic Settings
 * PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
 */
export interface ExtendedDatabaseBlobAuditingPolicy extends ProxyResource {
  predicateExpression?: string;
  state: string;
  storageEndpoint?: string;
  storageAccountAccessKey?: string;
  retentionDays?: number;
  auditActionsAndGroups?: string[];
  storageAccountSubscriptionId?: string;
  isStorageSecondaryKeyInUse?: boolean;
  isAzureMonitorTargetEnabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ExtendedServerBlobAuditingPolicy class.
 * @constructor
 * An extended server blob auditing policy.
 *
 * @property {string} [predicateExpression] Specifies condition of where clause
 * when creating an audit.
 * @property {string} state Specifies the state of the policy. If state is
 * Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.
 * Possible values include: 'Enabled', 'Disabled'
 * @property {string} [storageEndpoint] Specifies the blob storage endpoint
 * (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled,
 * storageEndpoint is required.
 * @property {string} [storageAccountAccessKey] Specifies the identifier key of
 * the auditing storage account. If state is Enabled and storageEndpoint is
 * specified, storageAccountAccessKey is required.
 * @property {number} [retentionDays] Specifies the number of days to keep in
 * the audit logs in the storage account.
 * @property {array} [auditActionsAndGroups] Specifies the Actions-Groups and
 * Actions to audit.
 *
 * The recommended set of action groups to use is the following combination -
 * this will audit all the queries and stored procedures executed against the
 * database, as well as successful and failed logins:
 *
 * BATCH_COMPLETED_GROUP,
 * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
 * FAILED_DATABASE_AUTHENTICATION_GROUP.
 *
 * This above combination is also the set that is configured by default when
 * enabling auditing from the Azure portal.
 *
 * The supported action groups to audit are (note: choose only specific groups
 * that cover your auditing needs. Using unnecessary groups could lead to very
 * large quantities of audit records):
 *
 * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
 * BACKUP_RESTORE_GROUP
 * DATABASE_LOGOUT_GROUP
 * DATABASE_OBJECT_CHANGE_GROUP
 * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
 * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
 * DATABASE_OPERATION_GROUP
 * DATABASE_PERMISSION_CHANGE_GROUP
 * DATABASE_PRINCIPAL_CHANGE_GROUP
 * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
 * DATABASE_ROLE_MEMBER_CHANGE_GROUP
 * FAILED_DATABASE_AUTHENTICATION_GROUP
 * SCHEMA_OBJECT_ACCESS_GROUP
 * SCHEMA_OBJECT_CHANGE_GROUP
 * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
 * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
 * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
 * USER_CHANGE_PASSWORD_GROUP
 * BATCH_STARTED_GROUP
 * BATCH_COMPLETED_GROUP
 *
 * These are groups that cover all sql statements and stored procedures
 * executed against the database, and should not be used in combination with
 * other groups as this will result in duplicate audit logs.
 *
 * For more information, see [Database-Level Audit Action
 * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
 *
 * For Database auditing policy, specific Actions can also be specified (note
 * that Actions cannot be specified for Server auditing policy). The supported
 * actions to audit are:
 * SELECT
 * UPDATE
 * INSERT
 * DELETE
 * EXECUTE
 * RECEIVE
 * REFERENCES
 *
 * The general form for defining an action to be audited is:
 * {action} ON {object} BY {principal}
 *
 * Note that <object> in the above format can refer to an object like a table,
 * view, or stored procedure, or an entire database or schema. For the latter
 * cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used,
 * respectively.
 *
 * For example:
 * SELECT on dbo.myTable by public
 * SELECT on DATABASE::myDatabase by public
 * SELECT on SCHEMA::mySchema by public
 *
 * For more information, see [Database-Level Audit
 * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
 * @property {uuid} [storageAccountSubscriptionId] Specifies the blob storage
 * subscription Id.
 * @property {boolean} [isStorageSecondaryKeyInUse] Specifies whether
 * storageAccountAccessKey value is the storage's secondary key.
 * @property {boolean} [isAzureMonitorTargetEnabled] Specifies whether audit
 * events are sent to Azure Monitor.
 * In order to send the events to Azure Monitor, specify 'State' as 'Enabled'
 * and 'IsAzureMonitorTargetEnabled' as true.
 *
 * When using REST API to configure auditing, Diagnostic Settings with
 * 'SQLSecurityAuditEvents' diagnostic logs category on the database should be
 * also created.
 * Note that for server level audit you should use the 'master' database as
 * {databaseName}.
 *
 * Diagnostic Settings URI format:
 * PUT
 * https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
 *
 * For more information, see [Diagnostic Settings REST
 * API](https://go.microsoft.com/fwlink/?linkid=2033207)
 * or [Diagnostic Settings
 * PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
 */
export interface ExtendedServerBlobAuditingPolicy extends ProxyResource {
  predicateExpression?: string;
  state: string;
  storageEndpoint?: string;
  storageAccountAccessKey?: string;
  retentionDays?: number;
  auditActionsAndGroups?: string[];
  storageAccountSubscriptionId?: string;
  isStorageSecondaryKeyInUse?: boolean;
  isAzureMonitorTargetEnabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ServerBlobAuditingPolicy class.
 * @constructor
 * A server blob auditing policy.
 *
 * @property {string} state Specifies the state of the policy. If state is
 * Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.
 * Possible values include: 'Enabled', 'Disabled'
 * @property {string} [storageEndpoint] Specifies the blob storage endpoint
 * (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled,
 * storageEndpoint is required.
 * @property {string} [storageAccountAccessKey] Specifies the identifier key of
 * the auditing storage account. If state is Enabled and storageEndpoint is
 * specified, storageAccountAccessKey is required.
 * @property {number} [retentionDays] Specifies the number of days to keep in
 * the audit logs in the storage account.
 * @property {array} [auditActionsAndGroups] Specifies the Actions-Groups and
 * Actions to audit.
 *
 * The recommended set of action groups to use is the following combination -
 * this will audit all the queries and stored procedures executed against the
 * database, as well as successful and failed logins:
 *
 * BATCH_COMPLETED_GROUP,
 * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
 * FAILED_DATABASE_AUTHENTICATION_GROUP.
 *
 * This above combination is also the set that is configured by default when
 * enabling auditing from the Azure portal.
 *
 * The supported action groups to audit are (note: choose only specific groups
 * that cover your auditing needs. Using unnecessary groups could lead to very
 * large quantities of audit records):
 *
 * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
 * BACKUP_RESTORE_GROUP
 * DATABASE_LOGOUT_GROUP
 * DATABASE_OBJECT_CHANGE_GROUP
 * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
 * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
 * DATABASE_OPERATION_GROUP
 * DATABASE_PERMISSION_CHANGE_GROUP
 * DATABASE_PRINCIPAL_CHANGE_GROUP
 * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
 * DATABASE_ROLE_MEMBER_CHANGE_GROUP
 * FAILED_DATABASE_AUTHENTICATION_GROUP
 * SCHEMA_OBJECT_ACCESS_GROUP
 * SCHEMA_OBJECT_CHANGE_GROUP
 * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
 * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
 * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
 * USER_CHANGE_PASSWORD_GROUP
 * BATCH_STARTED_GROUP
 * BATCH_COMPLETED_GROUP
 *
 * These are groups that cover all sql statements and stored procedures
 * executed against the database, and should not be used in combination with
 * other groups as this will result in duplicate audit logs.
 *
 * For more information, see [Database-Level Audit Action
 * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
 *
 * For Database auditing policy, specific Actions can also be specified (note
 * that Actions cannot be specified for Server auditing policy). The supported
 * actions to audit are:
 * SELECT
 * UPDATE
 * INSERT
 * DELETE
 * EXECUTE
 * RECEIVE
 * REFERENCES
 *
 * The general form for defining an action to be audited is:
 * {action} ON {object} BY {principal}
 *
 * Note that <object> in the above format can refer to an object like a table,
 * view, or stored procedure, or an entire database or schema. For the latter
 * cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used,
 * respectively.
 *
 * For example:
 * SELECT on dbo.myTable by public
 * SELECT on DATABASE::myDatabase by public
 * SELECT on SCHEMA::mySchema by public
 *
 * For more information, see [Database-Level Audit
 * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
 * @property {uuid} [storageAccountSubscriptionId] Specifies the blob storage
 * subscription Id.
 * @property {boolean} [isStorageSecondaryKeyInUse] Specifies whether
 * storageAccountAccessKey value is the storage's secondary key.
 * @property {boolean} [isAzureMonitorTargetEnabled] Specifies whether audit
 * events are sent to Azure Monitor.
 * In order to send the events to Azure Monitor, specify 'State' as 'Enabled'
 * and 'IsAzureMonitorTargetEnabled' as true.
 *
 * When using REST API to configure auditing, Diagnostic Settings with
 * 'SQLSecurityAuditEvents' diagnostic logs category on the database should be
 * also created.
 * Note that for server level audit you should use the 'master' database as
 * {databaseName}.
 *
 * Diagnostic Settings URI format:
 * PUT
 * https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
 *
 * For more information, see [Diagnostic Settings REST
 * API](https://go.microsoft.com/fwlink/?linkid=2033207)
 * or [Diagnostic Settings
 * PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
 */
export interface ServerBlobAuditingPolicy extends ProxyResource {
  state: string;
  storageEndpoint?: string;
  storageAccountAccessKey?: string;
  retentionDays?: number;
  auditActionsAndGroups?: string[];
  storageAccountSubscriptionId?: string;
  isStorageSecondaryKeyInUse?: boolean;
  isAzureMonitorTargetEnabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the DatabaseBlobAuditingPolicy class.
 * @constructor
 * A database blob auditing policy.
 *
 * @property {string} [kind] Resource kind.
 * @property {string} state Specifies the state of the policy. If state is
 * Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required.
 * Possible values include: 'Enabled', 'Disabled'
 * @property {string} [storageEndpoint] Specifies the blob storage endpoint
 * (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled,
 * storageEndpoint is required.
 * @property {string} [storageAccountAccessKey] Specifies the identifier key of
 * the auditing storage account. If state is Enabled and storageEndpoint is
 * specified, storageAccountAccessKey is required.
 * @property {number} [retentionDays] Specifies the number of days to keep in
 * the audit logs in the storage account.
 * @property {array} [auditActionsAndGroups] Specifies the Actions-Groups and
 * Actions to audit.
 *
 * The recommended set of action groups to use is the following combination -
 * this will audit all the queries and stored procedures executed against the
 * database, as well as successful and failed logins:
 *
 * BATCH_COMPLETED_GROUP,
 * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,
 * FAILED_DATABASE_AUTHENTICATION_GROUP.
 *
 * This above combination is also the set that is configured by default when
 * enabling auditing from the Azure portal.
 *
 * The supported action groups to audit are (note: choose only specific groups
 * that cover your auditing needs. Using unnecessary groups could lead to very
 * large quantities of audit records):
 *
 * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP
 * BACKUP_RESTORE_GROUP
 * DATABASE_LOGOUT_GROUP
 * DATABASE_OBJECT_CHANGE_GROUP
 * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP
 * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP
 * DATABASE_OPERATION_GROUP
 * DATABASE_PERMISSION_CHANGE_GROUP
 * DATABASE_PRINCIPAL_CHANGE_GROUP
 * DATABASE_PRINCIPAL_IMPERSONATION_GROUP
 * DATABASE_ROLE_MEMBER_CHANGE_GROUP
 * FAILED_DATABASE_AUTHENTICATION_GROUP
 * SCHEMA_OBJECT_ACCESS_GROUP
 * SCHEMA_OBJECT_CHANGE_GROUP
 * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP
 * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP
 * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP
 * USER_CHANGE_PASSWORD_GROUP
 * BATCH_STARTED_GROUP
 * BATCH_COMPLETED_GROUP
 *
 * These are groups that cover all sql statements and stored procedures
 * executed against the database, and should not be used in combination with
 * other groups as this will result in duplicate audit logs.
 *
 * For more information, see [Database-Level Audit Action
 * Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).
 *
 * For Database auditing policy, specific Actions can also be specified (note
 * that Actions cannot be specified for Server auditing policy). The supported
 * actions to audit are:
 * SELECT
 * UPDATE
 * INSERT
 * DELETE
 * EXECUTE
 * RECEIVE
 * REFERENCES
 *
 * The general form for defining an action to be audited is:
 * {action} ON {object} BY {principal}
 *
 * Note that <object> in the above format can refer to an object like a table,
 * view, or stored procedure, or an entire database or schema. For the latter
 * cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used,
 * respectively.
 *
 * For example:
 * SELECT on dbo.myTable by public
 * SELECT on DATABASE::myDatabase by public
 * SELECT on SCHEMA::mySchema by public
 *
 * For more information, see [Database-Level Audit
 * Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)
 * @property {uuid} [storageAccountSubscriptionId] Specifies the blob storage
 * subscription Id.
 * @property {boolean} [isStorageSecondaryKeyInUse] Specifies whether
 * storageAccountAccessKey value is the storage's secondary key.
 * @property {boolean} [isAzureMonitorTargetEnabled] Specifies whether audit
 * events are sent to Azure Monitor.
 * In order to send the events to Azure Monitor, specify 'State' as 'Enabled'
 * and 'IsAzureMonitorTargetEnabled' as true.
 *
 * When using REST API to configure auditing, Diagnostic Settings with
 * 'SQLSecurityAuditEvents' diagnostic logs category on the database should be
 * also created.
 * Note that for server level audit you should use the 'master' database as
 * {databaseName}.
 *
 * Diagnostic Settings URI format:
 * PUT
 * https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview
 *
 * For more information, see [Diagnostic Settings REST
 * API](https://go.microsoft.com/fwlink/?linkid=2033207)
 * or [Diagnostic Settings
 * PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)
 */
export interface DatabaseBlobAuditingPolicy extends ProxyResource {
  readonly kind?: string;
  state: string;
  storageEndpoint?: string;
  storageAccountAccessKey?: string;
  retentionDays?: number;
  auditActionsAndGroups?: string[];
  storageAccountSubscriptionId?: string;
  isStorageSecondaryKeyInUse?: boolean;
  isAzureMonitorTargetEnabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the DatabaseVulnerabilityAssessmentRuleBaselineItem class.
 * @constructor
 * Properties for an Azure SQL Database Vulnerability Assessment rule
 * baseline's result.
 *
 * @property {array} result The rule baseline result
 */
export interface DatabaseVulnerabilityAssessmentRuleBaselineItem {
  result: string[];
}

/**
 * @class
 * Initializes a new instance of the DatabaseVulnerabilityAssessmentRuleBaseline class.
 * @constructor
 * A database vulnerability assessment rule baseline.
 *
 * @property {array} baselineResults The rule baseline result
 */
export interface DatabaseVulnerabilityAssessmentRuleBaseline extends ProxyResource {
  baselineResults: DatabaseVulnerabilityAssessmentRuleBaselineItem[];
}

/**
 * @class
 * Initializes a new instance of the VulnerabilityAssessmentRecurringScansProperties class.
 * @constructor
 * Properties of a Vulnerability Assessment recurring scans.
 *
 * @property {boolean} [isEnabled] Recurring scans state.
 * @property {boolean} [emailSubscriptionAdmins] Specifies that the schedule
 * scan notification will be is sent to the subscription administrators.
 * Default value: true .
 * @property {array} [emails] Specifies an array of e-mail addresses to which
 * the scan notification is sent.
 */
export interface VulnerabilityAssessmentRecurringScansProperties {
  isEnabled?: boolean;
  emailSubscriptionAdmins?: boolean;
  emails?: string[];
}

/**
 * @class
 * Initializes a new instance of the DatabaseVulnerabilityAssessment class.
 * @constructor
 * A database vulnerability assessment.
 *
 * @property {string} [storageContainerPath] A blob storage container path to
 * hold the scan results (e.g.
 * https://myStorage.blob.core.windows.net/VaScans/).  It is required if server
 * level vulnerability assessment policy doesn't set
 * @property {string} [storageContainerSasKey] A shared access signature (SAS
 * Key) that has write access to the blob container specified in
 * 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't
 * specified, StorageContainerSasKey is required.
 * @property {string} [storageAccountAccessKey] Specifies the identifier key of
 * the storage account for vulnerability assessment scan results. If
 * 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is
 * required.
 * @property {object} [recurringScans] The recurring scans settings
 * @property {boolean} [recurringScans.isEnabled] Recurring scans state.
 * @property {boolean} [recurringScans.emailSubscriptionAdmins] Specifies that
 * the schedule scan notification will be is sent to the subscription
 * administrators.
 * @property {array} [recurringScans.emails] Specifies an array of e-mail
 * addresses to which the scan notification is sent.
 */
export interface DatabaseVulnerabilityAssessment extends ProxyResource {
  storageContainerPath?: string;
  storageContainerSasKey?: string;
  storageAccountAccessKey?: string;
  recurringScans?: VulnerabilityAssessmentRecurringScansProperties;
}

/**
 * @class
 * Initializes a new instance of the JobAgent class.
 * @constructor
 * An Azure SQL job agent.
 *
 * @property {object} [sku] The name and tier of the SKU.
 * @property {string} [sku.name] The name of the SKU. Ex - P3. It is typically
 * a letter+number code
 * @property {string} [sku.tier] This field is required to be implemented by
 * the Resource Provider if the service has more than one tier, but is not
 * required on a PUT.
 * @property {string} [sku.size] The SKU size. When the name field is the
 * combination of tier and some other value, this would be the standalone code.
 * @property {string} [sku.family] If the service has different generations of
 * hardware, for the same SKU, then that can be captured here.
 * @property {number} [sku.capacity] If the SKU supports scale out/in then the
 * capacity integer should be included. If scale out/in is not possible for the
 * resource this may be omitted.
 * @property {string} databaseId Resource ID of the database to store job
 * metadata in.
 * @property {string} [state] The state of the job agent. Possible values
 * include: 'Creating', 'Ready', 'Updating', 'Deleting', 'Disabled'
 */
export interface JobAgent extends TrackedResource {
  sku?: Sku;
  databaseId: string;
  readonly state?: string;
}

/**
 * @class
 * Initializes a new instance of the JobAgentUpdate class.
 * @constructor
 * An update to an Azure SQL job agent.
 *
 * @property {object} [tags] Resource tags.
 */
export interface JobAgentUpdate {
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the JobCredential class.
 * @constructor
 * A stored credential that can be used by a job to connect to target
 * databases.
 *
 * @property {string} username The credential user name.
 * @property {string} password The credential password.
 */
export interface JobCredential extends ProxyResource {
  username: string;
  password: string;
}

/**
 * @class
 * Initializes a new instance of the JobExecutionTarget class.
 * @constructor
 * The target that a job execution is executed on.
 *
 * @property {string} [type] The type of the target. Possible values include:
 * 'TargetGroup', 'SqlDatabase', 'SqlElasticPool', 'SqlShardMap', 'SqlServer'
 * @property {string} [serverName] The server name.
 * @property {string} [databaseName] The database name.
 */
export interface JobExecutionTarget {
  readonly type?: string;
  readonly serverName?: string;
  readonly databaseName?: string;
}

/**
 * @class
 * Initializes a new instance of the JobExecution class.
 * @constructor
 * An execution of a job
 *
 * @property {number} [jobVersion] The job version number.
 * @property {string} [stepName] The job step name.
 * @property {number} [stepId] The job step id.
 * @property {uuid} [jobExecutionId] The unique identifier of the job
 * execution.
 * @property {string} [lifecycle] The detailed state of the job execution.
 * Possible values include: 'Created', 'InProgress',
 * 'WaitingForChildJobExecutions', 'WaitingForRetry', 'Succeeded',
 * 'SucceededWithSkipped', 'Failed', 'TimedOut', 'Canceled', 'Skipped'
 * @property {string} [provisioningState] The ARM provisioning state of the job
 * execution. Possible values include: 'Created', 'InProgress', 'Succeeded',
 * 'Failed', 'Canceled'
 * @property {date} [createTime] The time that the job execution was created.
 * @property {date} [startTime] The time that the job execution started.
 * @property {date} [endTime] The time that the job execution completed.
 * @property {number} [currentAttempts] Number of times the job execution has
 * been attempted.
 * @property {date} [currentAttemptStartTime] Start time of the current
 * attempt.
 * @property {string} [lastMessage] The last status or error message.
 * @property {object} [target] The target that this execution is executed on.
 * @property {string} [target.type] The type of the target. Possible values
 * include: 'TargetGroup', 'SqlDatabase', 'SqlElasticPool', 'SqlShardMap',
 * 'SqlServer'
 * @property {string} [target.serverName] The server name.
 * @property {string} [target.databaseName] The database name.
 */
export interface JobExecution extends ProxyResource {
  readonly jobVersion?: number;
  readonly stepName?: string;
  readonly stepId?: number;
  readonly jobExecutionId?: string;
  readonly lifecycle?: string;
  readonly provisioningState?: string;
  readonly createTime?: Date;
  readonly startTime?: Date;
  readonly endTime?: Date;
  currentAttempts?: number;
  readonly currentAttemptStartTime?: Date;
  readonly lastMessage?: string;
  readonly target?: JobExecutionTarget;
}

/**
 * @class
 * Initializes a new instance of the JobSchedule class.
 * @constructor
 * Scheduling properties of a job.
 *
 * @property {date} [startTime] Schedule start time. Default value: new
 * Date('0001-01-01T00:00:00Z') .
 * @property {date} [endTime] Schedule end time. Default value: new
 * Date('9999-12-31T11:59:59Z') .
 * @property {string} [type] Schedule interval type. Possible values include:
 * 'Once', 'Recurring'. Default value: 'Once' .
 * @property {boolean} [enabled] Whether or not the schedule is enabled.
 * @property {string} [interval] Value of the schedule's recurring interval, if
 * the scheduletype is recurring. ISO8601 duration format.
 */
export interface JobSchedule {
  startTime?: Date;
  endTime?: Date;
  type?: string;
  enabled?: boolean;
  interval?: string;
}

/**
 * @class
 * Initializes a new instance of the Job class.
 * @constructor
 * A job.
 *
 * @property {string} [description] User-defined description of the job.
 * Default value: '' .
 * @property {number} [version] The job version number.
 * @property {object} [schedule] Schedule properties of the job.
 * @property {date} [schedule.startTime] Schedule start time.
 * @property {date} [schedule.endTime] Schedule end time.
 * @property {string} [schedule.type] Schedule interval type. Possible values
 * include: 'Once', 'Recurring'
 * @property {boolean} [schedule.enabled] Whether or not the schedule is
 * enabled.
 * @property {string} [schedule.interval] Value of the schedule's recurring
 * interval, if the scheduletype is recurring. ISO8601 duration format.
 */
export interface Job extends ProxyResource {
  description?: string;
  readonly version?: number;
  schedule?: JobSchedule;
}

/**
 * @class
 * Initializes a new instance of the JobStepAction class.
 * @constructor
 * The action to be executed by a job step.
 *
 * @property {string} [type] Type of action being executed by the job step.
 * Possible values include: 'TSql'. Default value: 'TSql' .
 * @property {string} [source] The source of the action to execute. Possible
 * values include: 'Inline'. Default value: 'Inline' .
 * @property {string} value The action value, for example the text of the T-SQL
 * script to execute.
 */
export interface JobStepAction {
  type?: string;
  source?: string;
  value: string;
}

/**
 * @class
 * Initializes a new instance of the JobStepOutput class.
 * @constructor
 * The output configuration of a job step.
 *
 * @property {string} [type] The output destination type. Possible values
 * include: 'SqlDatabase'. Default value: 'SqlDatabase' .
 * @property {uuid} [subscriptionId] The output destination subscription id.
 * @property {string} [resourceGroupName] The output destination resource
 * group.
 * @property {string} serverName The output destination server name.
 * @property {string} databaseName The output destination database.
 * @property {string} [schemaName] The output destination schema. Default
 * value: 'dbo' .
 * @property {string} tableName The output destination table.
 * @property {string} credential The resource ID of the credential to use to
 * connect to the output destination.
 */
export interface JobStepOutput {
  type?: string;
  subscriptionId?: string;
  resourceGroupName?: string;
  serverName: string;
  databaseName: string;
  schemaName?: string;
  tableName: string;
  credential: string;
}

/**
 * @class
 * Initializes a new instance of the JobStepExecutionOptions class.
 * @constructor
 * The execution options of a job step.
 *
 * @property {number} [timeoutSeconds] Execution timeout for the job step.
 * Default value: 43200 .
 * @property {number} [retryAttempts] Maximum number of times the job step will
 * be reattempted if the first attempt fails. Default value: 10 .
 * @property {number} [initialRetryIntervalSeconds] Initial delay between
 * retries for job step execution. Default value: 1 .
 * @property {number} [maximumRetryIntervalSeconds] The maximum amount of time
 * to wait between retries for job step execution. Default value: 120 .
 * @property {number} [retryIntervalBackoffMultiplier] The backoff multiplier
 * for the time between retries. Default value: 2 .
 */
export interface JobStepExecutionOptions {
  timeoutSeconds?: number;
  retryAttempts?: number;
  initialRetryIntervalSeconds?: number;
  maximumRetryIntervalSeconds?: number;
  retryIntervalBackoffMultiplier?: number;
}

/**
 * @class
 * Initializes a new instance of the JobStep class.
 * @constructor
 * A job step.
 *
 * @property {number} [stepId] The job step's index within the job. If not
 * specified when creating the job step, it will be created as the last step.
 * If not specified when updating the job step, the step id is not modified.
 * @property {string} targetGroup The resource ID of the target group that the
 * job step will be executed on.
 * @property {string} credential The resource ID of the job credential that
 * will be used to connect to the targets.
 * @property {object} action The action payload of the job step.
 * @property {string} [action.type] Type of action being executed by the job
 * step. Possible values include: 'TSql'
 * @property {string} [action.source] The source of the action to execute.
 * Possible values include: 'Inline'
 * @property {string} [action.value] The action value, for example the text of
 * the T-SQL script to execute.
 * @property {object} [output] Output destination properties of the job step.
 * @property {string} [output.type] The output destination type. Possible
 * values include: 'SqlDatabase'
 * @property {uuid} [output.subscriptionId] The output destination subscription
 * id.
 * @property {string} [output.resourceGroupName] The output destination
 * resource group.
 * @property {string} [output.serverName] The output destination server name.
 * @property {string} [output.databaseName] The output destination database.
 * @property {string} [output.schemaName] The output destination schema.
 * @property {string} [output.tableName] The output destination table.
 * @property {string} [output.credential] The resource ID of the credential to
 * use to connect to the output destination.
 * @property {object} [executionOptions] Execution options for the job step.
 * @property {number} [executionOptions.timeoutSeconds] Execution timeout for
 * the job step.
 * @property {number} [executionOptions.retryAttempts] Maximum number of times
 * the job step will be reattempted if the first attempt fails.
 * @property {number} [executionOptions.initialRetryIntervalSeconds] Initial
 * delay between retries for job step execution.
 * @property {number} [executionOptions.maximumRetryIntervalSeconds] The
 * maximum amount of time to wait between retries for job step execution.
 * @property {number} [executionOptions.retryIntervalBackoffMultiplier] The
 * backoff multiplier for the time between retries.
 */
export interface JobStep extends ProxyResource {
  stepId?: number;
  targetGroup: string;
  credential: string;
  action: JobStepAction;
  output?: JobStepOutput;
  executionOptions?: JobStepExecutionOptions;
}

/**
 * @class
 * Initializes a new instance of the JobTarget class.
 * @constructor
 * A job target, for example a specific database or a container of databases
 * that is evaluated during job execution.
 *
 * @property {string} [membershipType] Whether the target is included or
 * excluded from the group. Possible values include: 'Include', 'Exclude'.
 * Default value: 'Include' .
 * @property {string} type The target type. Possible values include:
 * 'TargetGroup', 'SqlDatabase', 'SqlElasticPool', 'SqlShardMap', 'SqlServer'
 * @property {string} [serverName] The target server name.
 * @property {string} [databaseName] The target database name.
 * @property {string} [elasticPoolName] The target elastic pool name.
 * @property {string} [shardMapName] The target shard map.
 * @property {string} [refreshCredential] The resource ID of the credential
 * that is used during job execution to connect to the target and determine the
 * list of databases inside the target.
 */
export interface JobTarget {
  membershipType?: string;
  type: string;
  serverName?: string;
  databaseName?: string;
  elasticPoolName?: string;
  shardMapName?: string;
  refreshCredential?: string;
}

/**
 * @class
 * Initializes a new instance of the JobTargetGroup class.
 * @constructor
 * A group of job targets.
 *
 * @property {array} members Members of the target group.
 */
export interface JobTargetGroup extends ProxyResource {
  members: JobTarget[];
}

/**
 * @class
 * Initializes a new instance of the JobVersion class.
 * @constructor
 * A job version.
 *
 */
export interface JobVersion extends ProxyResource {
}

/**
 * @class
 * Initializes a new instance of the LongTermRetentionBackup class.
 * @constructor
 * A long term retention backup.
 *
 * @property {string} [serverName] The server name that the backup database
 * belong to.
 * @property {date} [serverCreateTime] The create time of the server.
 * @property {string} [databaseName] The name of the database the backup belong
 * to
 * @property {date} [databaseDeletionTime] The delete time of the database
 * @property {date} [backupTime] The time the backup was taken
 * @property {date} [backupExpirationTime] The time the long term retention
 * backup will expire.
 */
export interface LongTermRetentionBackup extends ProxyResource {
  readonly serverName?: string;
  readonly serverCreateTime?: Date;
  readonly databaseName?: string;
  readonly databaseDeletionTime?: Date;
  readonly backupTime?: Date;
  readonly backupExpirationTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the BackupLongTermRetentionPolicy class.
 * @constructor
 * A long term retention policy.
 *
 * @property {string} [weeklyRetention] The weekly retention policy for an LTR
 * backup in an ISO 8601 format.
 * @property {string} [monthlyRetention] The monthly retention policy for an
 * LTR backup in an ISO 8601 format.
 * @property {string} [yearlyRetention] The yearly retention policy for an LTR
 * backup in an ISO 8601 format.
 * @property {number} [weekOfYear] The week of year to take the yearly backup
 * in an ISO 8601 format.
 */
export interface BackupLongTermRetentionPolicy extends ProxyResource {
  weeklyRetention?: string;
  monthlyRetention?: string;
  yearlyRetention?: string;
  weekOfYear?: number;
}

/**
 * @class
 * Initializes a new instance of the ManagedBackupShortTermRetentionPolicy class.
 * @constructor
 * A short term retention policy.
 *
 * @property {number} [retentionDays] The backup retention period in days. This
 * is how many days Point-in-Time Restore will be supported.
 */
export interface ManagedBackupShortTermRetentionPolicy extends ProxyResource {
  retentionDays?: number;
}

/**
 * @class
 * Initializes a new instance of the CompleteDatabaseRestoreDefinition class.
 * @constructor
 * Contains the information necessary to perform a complete database restore
 * operation.
 *
 * @property {string} lastBackupName The last backup name to apply
 */
export interface CompleteDatabaseRestoreDefinition {
  lastBackupName: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedDatabase class.
 * @constructor
 * A managed database resource.
 *
 * @property {string} [collation] Collation of the managed database.
 * @property {string} [status] Status of the database. Possible values include:
 * 'Online', 'Offline', 'Shutdown', 'Creating', 'Inaccessible', 'Updating'
 * @property {date} [creationDate] Creation date of the database.
 * @property {date} [earliestRestorePoint] Earliest restore point in time for
 * point in time restore.
 * @property {date} [restorePointInTime] Conditional. If createMode is
 * PointInTimeRestore, this value is required. Specifies the point in time
 * (ISO8601 format) of the source database that will be restored to create the
 * new database.
 * @property {string} [defaultSecondaryLocation] Geo paired region.
 * @property {string} [catalogCollation] Collation of the metadata catalog.
 * Possible values include: 'DATABASE_DEFAULT', 'SQL_Latin1_General_CP1_CI_AS'
 * @property {string} [createMode] Managed database create mode.
 * PointInTimeRestore: Create a database by restoring a point in time backup of
 * an existing database. SourceDatabaseName, SourceManagedInstanceName and
 * PointInTime must be specified. RestoreExternalBackup: Create a database by
 * restoring from external backup files. Collation, StorageContainerUri and
 * StorageContainerSasToken must be specified. Recovery: Creates a database by
 * restoring a geo-replicated backup. RecoverableDatabaseId must be specified
 * as the recoverable database resource ID to restore. Possible values include:
 * 'Default', 'RestoreExternalBackup', 'PointInTimeRestore', 'Recovery'
 * @property {string} [storageContainerUri] Conditional. If createMode is
 * RestoreExternalBackup, this value is required. Specifies the uri of the
 * storage container where backups for this restore are stored.
 * @property {string} [sourceDatabaseId] The resource identifier of the source
 * database associated with create operation of this database.
 * @property {string} [restorableDroppedDatabaseId] The restorable dropped
 * database resource id to restore when creating this database.
 * @property {string} [storageContainerSasToken] Conditional. If createMode is
 * RestoreExternalBackup, this value is required. Specifies the storage
 * container sas token.
 * @property {string} [failoverGroupId] Instance Failover Group resource
 * identifier that this managed database belongs to.
 * @property {string} [recoverableDatabaseId] The resource identifier of the
 * recoverable database associated with create operation of this database.
 */
export interface ManagedDatabase extends TrackedResource {
  collation?: string;
  readonly status?: string;
  readonly creationDate?: Date;
  readonly earliestRestorePoint?: Date;
  restorePointInTime?: Date;
  readonly defaultSecondaryLocation?: string;
  catalogCollation?: string;
  createMode?: string;
  storageContainerUri?: string;
  sourceDatabaseId?: string;
  restorableDroppedDatabaseId?: string;
  storageContainerSasToken?: string;
  readonly failoverGroupId?: string;
  recoverableDatabaseId?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedDatabaseUpdate class.
 * @constructor
 * An managed database update.
 *
 * @property {string} [collation] Collation of the managed database.
 * @property {string} [status] Status of the database. Possible values include:
 * 'Online', 'Offline', 'Shutdown', 'Creating', 'Inaccessible', 'Updating'
 * @property {date} [creationDate] Creation date of the database.
 * @property {date} [earliestRestorePoint] Earliest restore point in time for
 * point in time restore.
 * @property {date} [restorePointInTime] Conditional. If createMode is
 * PointInTimeRestore, this value is required. Specifies the point in time
 * (ISO8601 format) of the source database that will be restored to create the
 * new database.
 * @property {string} [defaultSecondaryLocation] Geo paired region.
 * @property {string} [catalogCollation] Collation of the metadata catalog.
 * Possible values include: 'DATABASE_DEFAULT', 'SQL_Latin1_General_CP1_CI_AS'
 * @property {string} [createMode] Managed database create mode.
 * PointInTimeRestore: Create a database by restoring a point in time backup of
 * an existing database. SourceDatabaseName, SourceManagedInstanceName and
 * PointInTime must be specified. RestoreExternalBackup: Create a database by
 * restoring from external backup files. Collation, StorageContainerUri and
 * StorageContainerSasToken must be specified. Recovery: Creates a database by
 * restoring a geo-replicated backup. RecoverableDatabaseId must be specified
 * as the recoverable database resource ID to restore. Possible values include:
 * 'Default', 'RestoreExternalBackup', 'PointInTimeRestore', 'Recovery'
 * @property {string} [storageContainerUri] Conditional. If createMode is
 * RestoreExternalBackup, this value is required. Specifies the uri of the
 * storage container where backups for this restore are stored.
 * @property {string} [sourceDatabaseId] The resource identifier of the source
 * database associated with create operation of this database.
 * @property {string} [restorableDroppedDatabaseId] The restorable dropped
 * database resource id to restore when creating this database.
 * @property {string} [storageContainerSasToken] Conditional. If createMode is
 * RestoreExternalBackup, this value is required. Specifies the storage
 * container sas token.
 * @property {string} [failoverGroupId] Instance Failover Group resource
 * identifier that this managed database belongs to.
 * @property {string} [recoverableDatabaseId] The resource identifier of the
 * recoverable database associated with create operation of this database.
 * @property {object} [tags] Resource tags.
 */
export interface ManagedDatabaseUpdate {
  collation?: string;
  readonly status?: string;
  readonly creationDate?: Date;
  readonly earliestRestorePoint?: Date;
  restorePointInTime?: Date;
  readonly defaultSecondaryLocation?: string;
  catalogCollation?: string;
  createMode?: string;
  storageContainerUri?: string;
  sourceDatabaseId?: string;
  restorableDroppedDatabaseId?: string;
  storageContainerSasToken?: string;
  readonly failoverGroupId?: string;
  recoverableDatabaseId?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the AutomaticTuningServerOptions class.
 * @constructor
 * Automatic tuning properties for individual advisors.
 *
 * @property {string} [desiredState] Automatic tuning option desired state.
 * Possible values include: 'Off', 'On', 'Default'
 * @property {string} [actualState] Automatic tuning option actual state.
 * Possible values include: 'Off', 'On'
 * @property {number} [reasonCode] Reason code if desired and actual state are
 * different.
 * @property {string} [reasonDesc] Reason description if desired and actual
 * state are different. Possible values include: 'Default', 'Disabled',
 * 'AutoConfigured'
 */
export interface AutomaticTuningServerOptions {
  desiredState?: string;
  readonly actualState?: string;
  readonly reasonCode?: number;
  readonly reasonDesc?: string;
}

/**
 * @class
 * Initializes a new instance of the ServerAutomaticTuning class.
 * @constructor
 * Server-level Automatic Tuning.
 *
 * @property {string} [desiredState] Automatic tuning desired state. Possible
 * values include: 'Custom', 'Auto', 'Unspecified'
 * @property {string} [actualState] Automatic tuning actual state. Possible
 * values include: 'Custom', 'Auto', 'Unspecified'
 * @property {object} [options] Automatic tuning options definition.
 */
export interface ServerAutomaticTuning extends ProxyResource {
  desiredState?: string;
  readonly actualState?: string;
  options?: { [propertyName: string]: AutomaticTuningServerOptions };
}

/**
 * @class
 * Initializes a new instance of the ServerDnsAlias class.
 * @constructor
 * A server DNS alias.
 *
 * @property {string} [azureDnsRecord] The fully qualified DNS record for alias
 */
export interface ServerDnsAlias extends ProxyResource {
  readonly azureDnsRecord?: string;
}

/**
 * @class
 * Initializes a new instance of the ServerDnsAliasAcquisition class.
 * @constructor
 * A server DNS alias acquisition request.
 *
 * @property {string} [oldServerDnsAliasId] The id of the server alias that
 * will be acquired to point to this server instead.
 */
export interface ServerDnsAliasAcquisition {
  oldServerDnsAliasId?: string;
}

/**
 * @class
 * Initializes a new instance of the ServerSecurityAlertPolicy class.
 * @constructor
 * A server security alert policy.
 *
 * @property {string} state Specifies the state of the policy, whether it is
 * enabled or disabled. Possible values include: 'New', 'Enabled', 'Disabled'
 * @property {array} [disabledAlerts] Specifies an array of alerts that are
 * disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability,
 * Access_Anomaly, Data_Exfiltration, Unsafe_Action
 * @property {array} [emailAddresses] Specifies an array of e-mail addresses to
 * which the alert is sent.
 * @property {boolean} [emailAccountAdmins] Specifies that the alert is sent to
 * the account administrators.
 * @property {string} [storageEndpoint] Specifies the blob storage endpoint
 * (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold
 * all Threat Detection audit logs.
 * @property {string} [storageAccountAccessKey] Specifies the identifier key of
 * the Threat Detection audit storage account.
 * @property {number} [retentionDays] Specifies the number of days to keep in
 * the Threat Detection audit logs.
 */
export interface ServerSecurityAlertPolicy extends ProxyResource {
  state: string;
  disabledAlerts?: string[];
  emailAddresses?: string[];
  emailAccountAdmins?: boolean;
  storageEndpoint?: string;
  storageAccountAccessKey?: string;
  retentionDays?: number;
}

/**
 * @class
 * Initializes a new instance of the RestorePoint class.
 * @constructor
 * Database restore points.
 *
 * @property {string} [location] Resource location.
 * @property {string} [restorePointType] The type of restore point. Possible
 * values include: 'CONTINUOUS', 'DISCRETE'
 * @property {date} [earliestRestoreDate] The earliest time to which this
 * database can be restored
 * @property {date} [restorePointCreationDate] The time the backup was taken
 * @property {string} [restorePointLabel] The label of restore point for backup
 * request by user
 */
export interface RestorePoint extends ProxyResource {
  readonly location?: string;
  readonly restorePointType?: string;
  readonly earliestRestoreDate?: Date;
  readonly restorePointCreationDate?: Date;
  readonly restorePointLabel?: string;
}

/**
 * @class
 * Initializes a new instance of the CreateDatabaseRestorePointDefinition class.
 * @constructor
 * Contains the information necessary to perform a create database restore
 * point operation.
 *
 * @property {string} restorePointLabel The restore point label to apply
 */
export interface CreateDatabaseRestorePointDefinition {
  restorePointLabel: string;
}

/**
 * @class
 * Initializes a new instance of the DatabaseOperation class.
 * @constructor
 * A database operation.
 *
 * @property {string} [databaseName] The name of the database the operation is
 * being performed on.
 * @property {string} [operation] The name of operation.
 * @property {string} [operationFriendlyName] The friendly name of operation.
 * @property {number} [percentComplete] The percentage of the operation
 * completed.
 * @property {string} [serverName] The name of the server.
 * @property {date} [startTime] The operation start time.
 * @property {string} [state] The operation state. Possible values include:
 * 'Pending', 'InProgress', 'Succeeded', 'Failed', 'CancelInProgress',
 * 'Cancelled'
 * @property {number} [errorCode] The operation error code.
 * @property {string} [errorDescription] The operation error description.
 * @property {number} [errorSeverity] The operation error severity.
 * @property {boolean} [isUserError] Whether or not the error is a user error.
 * @property {date} [estimatedCompletionTime] The estimated completion time of
 * the operation.
 * @property {string} [description] The operation description.
 * @property {boolean} [isCancellable] Whether the operation can be cancelled.
 */
export interface DatabaseOperation extends ProxyResource {
  readonly databaseName?: string;
  readonly operation?: string;
  readonly operationFriendlyName?: string;
  readonly percentComplete?: number;
  readonly serverName?: string;
  readonly startTime?: Date;
  readonly state?: string;
  readonly errorCode?: number;
  readonly errorDescription?: string;
  readonly errorSeverity?: number;
  readonly isUserError?: boolean;
  readonly estimatedCompletionTime?: Date;
  readonly description?: string;
  readonly isCancellable?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolOperation class.
 * @constructor
 * A elastic pool operation.
 *
 * @property {string} [elasticPoolName] The name of the elastic pool the
 * operation is being performed on.
 * @property {string} [operation] The name of operation.
 * @property {string} [operationFriendlyName] The friendly name of operation.
 * @property {number} [percentComplete] The percentage of the operation
 * completed.
 * @property {string} [serverName] The name of the server.
 * @property {date} [startTime] The operation start time.
 * @property {string} [state] The operation state.
 * @property {number} [errorCode] The operation error code.
 * @property {string} [errorDescription] The operation error description.
 * @property {number} [errorSeverity] The operation error severity.
 * @property {boolean} [isUserError] Whether or not the error is a user error.
 * @property {date} [estimatedCompletionTime] The estimated completion time of
 * the operation.
 * @property {string} [description] The operation description.
 * @property {boolean} [isCancellable] Whether the operation can be cancelled.
 */
export interface ElasticPoolOperation extends ProxyResource {
  readonly elasticPoolName?: string;
  readonly operation?: string;
  readonly operationFriendlyName?: string;
  readonly percentComplete?: number;
  readonly serverName?: string;
  readonly startTime?: Date;
  readonly state?: string;
  readonly errorCode?: number;
  readonly errorDescription?: string;
  readonly errorSeverity?: number;
  readonly isUserError?: boolean;
  readonly estimatedCompletionTime?: Date;
  readonly description?: string;
  readonly isCancellable?: boolean;
}

/**
 * @class
 * Initializes a new instance of the MaxSizeCapability class.
 * @constructor
 * The maximum size capability.
 *
 * @property {number} [limit] The maximum size limit (see 'unit' for the
 * units).
 * @property {string} [unit] The units that the limit is expressed in. Possible
 * values include: 'Megabytes', 'Gigabytes', 'Terabytes', 'Petabytes'
 */
export interface MaxSizeCapability {
  readonly limit?: number;
  readonly unit?: string;
}

/**
 * @class
 * Initializes a new instance of the LogSizeCapability class.
 * @constructor
 * The log size capability.
 *
 * @property {number} [limit] The log size limit (see 'unit' for the units).
 * @property {string} [unit] The units that the limit is expressed in. Possible
 * values include: 'Megabytes', 'Gigabytes', 'Terabytes', 'Petabytes',
 * 'Percent'
 */
export interface LogSizeCapability {
  readonly limit?: number;
  readonly unit?: string;
}

/**
 * @class
 * Initializes a new instance of the MaxSizeRangeCapability class.
 * @constructor
 * The maximum size range capability.
 *
 * @property {object} [minValue] Minimum value.
 * @property {number} [minValue.limit] The maximum size limit (see 'unit' for
 * the units).
 * @property {string} [minValue.unit] The units that the limit is expressed in.
 * Possible values include: 'Megabytes', 'Gigabytes', 'Terabytes', 'Petabytes'
 * @property {object} [maxValue] Maximum value.
 * @property {number} [maxValue.limit] The maximum size limit (see 'unit' for
 * the units).
 * @property {string} [maxValue.unit] The units that the limit is expressed in.
 * Possible values include: 'Megabytes', 'Gigabytes', 'Terabytes', 'Petabytes'
 * @property {object} [scaleSize] Scale/step size for discrete values between
 * the minimum value and the maximum value.
 * @property {number} [scaleSize.limit] The maximum size limit (see 'unit' for
 * the units).
 * @property {string} [scaleSize.unit] The units that the limit is expressed
 * in. Possible values include: 'Megabytes', 'Gigabytes', 'Terabytes',
 * 'Petabytes'
 * @property {object} [logSize] Size of transaction log.
 * @property {number} [logSize.limit] The log size limit (see 'unit' for the
 * units).
 * @property {string} [logSize.unit] The units that the limit is expressed in.
 * Possible values include: 'Megabytes', 'Gigabytes', 'Terabytes', 'Petabytes',
 * 'Percent'
 * @property {string} [status] The status of the capability. Possible values
 * include: 'Visible', 'Available', 'Default', 'Disabled'
 * @property {string} [reason] The reason for the capability not being
 * available.
 */
export interface MaxSizeRangeCapability {
  readonly minValue?: MaxSizeCapability;
  readonly maxValue?: MaxSizeCapability;
  readonly scaleSize?: MaxSizeCapability;
  readonly logSize?: LogSizeCapability;
  readonly status?: string;
  reason?: string;
}

/**
 * @class
 * Initializes a new instance of the PerformanceLevelCapability class.
 * @constructor
 * The performance level capability.
 *
 * @property {number} [value] Performance level value.
 * @property {string} [unit] Unit type used to measure performance level.
 * Possible values include: 'DTU', 'VCores'
 */
export interface PerformanceLevelCapability {
  readonly value?: number;
  readonly unit?: string;
}

/**
 * @class
 * Initializes a new instance of the LicenseTypeCapability class.
 * @constructor
 * The license type capability
 *
 * @property {string} [name] License type identifier.
 * @property {string} [status] The status of the capability. Possible values
 * include: 'Visible', 'Available', 'Default', 'Disabled'
 * @property {string} [reason] The reason for the capability not being
 * available.
 */
export interface LicenseTypeCapability {
  readonly name?: string;
  readonly status?: string;
  reason?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceObjectiveCapability class.
 * @constructor
 * The service objectives capability.
 *
 * @property {uuid} [id] The unique ID of the service objective.
 * @property {string} [name] The service objective name.
 * @property {array} [supportedMaxSizes] The list of supported maximum database
 * sizes.
 * @property {object} [performanceLevel] The performance level.
 * @property {number} [performanceLevel.value] Performance level value.
 * @property {string} [performanceLevel.unit] Unit type used to measure
 * performance level. Possible values include: 'DTU', 'VCores'
 * @property {object} [sku] The sku.
 * @property {string} [sku.name] The name of the SKU. Ex - P3. It is typically
 * a letter+number code
 * @property {string} [sku.tier] This field is required to be implemented by
 * the Resource Provider if the service has more than one tier, but is not
 * required on a PUT.
 * @property {string} [sku.size] The SKU size. When the name field is the
 * combination of tier and some other value, this would be the standalone code.
 * @property {string} [sku.family] If the service has different generations of
 * hardware, for the same SKU, then that can be captured here.
 * @property {number} [sku.capacity] If the SKU supports scale out/in then the
 * capacity integer should be included. If scale out/in is not possible for the
 * resource this may be omitted.
 * @property {array} [supportedLicenseTypes] List of supported license types.
 * @property {object} [includedMaxSize] The included (free) max size.
 * @property {number} [includedMaxSize.limit] The maximum size limit (see
 * 'unit' for the units).
 * @property {string} [includedMaxSize.unit] The units that the limit is
 * expressed in. Possible values include: 'Megabytes', 'Gigabytes',
 * 'Terabytes', 'Petabytes'
 * @property {string} [status] The status of the capability. Possible values
 * include: 'Visible', 'Available', 'Default', 'Disabled'
 * @property {string} [reason] The reason for the capability not being
 * available.
 */
export interface ServiceObjectiveCapability {
  readonly id?: string;
  readonly name?: string;
  readonly supportedMaxSizes?: MaxSizeRangeCapability[];
  readonly performanceLevel?: PerformanceLevelCapability;
  readonly sku?: Sku;
  readonly supportedLicenseTypes?: LicenseTypeCapability[];
  readonly includedMaxSize?: MaxSizeCapability;
  readonly status?: string;
  reason?: string;
}

/**
 * @class
 * Initializes a new instance of the EditionCapability class.
 * @constructor
 * The edition capability.
 *
 * @property {string} [name] The database edition name.
 * @property {array} [supportedServiceLevelObjectives] The list of supported
 * service objectives for the edition.
 * @property {boolean} [zoneRedundant] Whether or not zone redundancy is
 * supported for the edition.
 * @property {string} [status] The status of the capability. Possible values
 * include: 'Visible', 'Available', 'Default', 'Disabled'
 * @property {string} [reason] The reason for the capability not being
 * available.
 */
export interface EditionCapability {
  readonly name?: string;
  readonly supportedServiceLevelObjectives?: ServiceObjectiveCapability[];
  readonly zoneRedundant?: boolean;
  readonly status?: string;
  reason?: string;
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolPerDatabaseMinPerformanceLevelCapability class.
 * @constructor
 * The minimum per-database performance level capability.
 *
 * @property {number} [limit] The minimum performance level per database.
 * @property {string} [unit] Unit type used to measure performance level.
 * Possible values include: 'DTU', 'VCores'
 * @property {string} [status] The status of the capability. Possible values
 * include: 'Visible', 'Available', 'Default', 'Disabled'
 * @property {string} [reason] The reason for the capability not being
 * available.
 */
export interface ElasticPoolPerDatabaseMinPerformanceLevelCapability {
  readonly limit?: number;
  readonly unit?: string;
  readonly status?: string;
  reason?: string;
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolPerDatabaseMaxPerformanceLevelCapability class.
 * @constructor
 * The max per-database performance level capability.
 *
 * @property {number} [limit] The maximum performance level per database.
 * @property {string} [unit] Unit type used to measure performance level.
 * Possible values include: 'DTU', 'VCores'
 * @property {array} [supportedPerDatabaseMinPerformanceLevels] The list of
 * supported min database performance levels.
 * @property {string} [status] The status of the capability. Possible values
 * include: 'Visible', 'Available', 'Default', 'Disabled'
 * @property {string} [reason] The reason for the capability not being
 * available.
 */
export interface ElasticPoolPerDatabaseMaxPerformanceLevelCapability {
  readonly limit?: number;
  readonly unit?: string;
  readonly supportedPerDatabaseMinPerformanceLevels?: ElasticPoolPerDatabaseMinPerformanceLevelCapability[];
  readonly status?: string;
  reason?: string;
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolPerformanceLevelCapability class.
 * @constructor
 * The Elastic Pool performance level capability.
 *
 * @property {object} [performanceLevel] The performance level for the pool.
 * @property {number} [performanceLevel.value] Performance level value.
 * @property {string} [performanceLevel.unit] Unit type used to measure
 * performance level. Possible values include: 'DTU', 'VCores'
 * @property {object} [sku] The sku.
 * @property {string} [sku.name] The name of the SKU. Ex - P3. It is typically
 * a letter+number code
 * @property {string} [sku.tier] This field is required to be implemented by
 * the Resource Provider if the service has more than one tier, but is not
 * required on a PUT.
 * @property {string} [sku.size] The SKU size. When the name field is the
 * combination of tier and some other value, this would be the standalone code.
 * @property {string} [sku.family] If the service has different generations of
 * hardware, for the same SKU, then that can be captured here.
 * @property {number} [sku.capacity] If the SKU supports scale out/in then the
 * capacity integer should be included. If scale out/in is not possible for the
 * resource this may be omitted.
 * @property {array} [supportedLicenseTypes] List of supported license types.
 * @property {number} [maxDatabaseCount] The maximum number of databases
 * supported.
 * @property {object} [includedMaxSize] The included (free) max size for this
 * performance level.
 * @property {number} [includedMaxSize.limit] The maximum size limit (see
 * 'unit' for the units).
 * @property {string} [includedMaxSize.unit] The units that the limit is
 * expressed in. Possible values include: 'Megabytes', 'Gigabytes',
 * 'Terabytes', 'Petabytes'
 * @property {array} [supportedMaxSizes] The list of supported max sizes.
 * @property {array} [supportedPerDatabaseMaxSizes] The list of supported per
 * database max sizes.
 * @property {array} [supportedPerDatabaseMaxPerformanceLevels] The list of
 * supported per database max performance levels.
 * @property {string} [status] The status of the capability. Possible values
 * include: 'Visible', 'Available', 'Default', 'Disabled'
 * @property {string} [reason] The reason for the capability not being
 * available.
 */
export interface ElasticPoolPerformanceLevelCapability {
  readonly performanceLevel?: PerformanceLevelCapability;
  readonly sku?: Sku;
  readonly supportedLicenseTypes?: LicenseTypeCapability[];
  readonly maxDatabaseCount?: number;
  readonly includedMaxSize?: MaxSizeCapability;
  readonly supportedMaxSizes?: MaxSizeRangeCapability[];
  readonly supportedPerDatabaseMaxSizes?: MaxSizeRangeCapability[];
  readonly supportedPerDatabaseMaxPerformanceLevels?: ElasticPoolPerDatabaseMaxPerformanceLevelCapability[];
  readonly status?: string;
  reason?: string;
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolEditionCapability class.
 * @constructor
 * The elastic pool edition capability.
 *
 * @property {string} [name] The elastic pool edition name.
 * @property {array} [supportedElasticPoolPerformanceLevels] The list of
 * supported elastic pool DTU levels for the edition.
 * @property {boolean} [zoneRedundant] Whether or not zone redundancy is
 * supported for the edition.
 * @property {string} [status] The status of the capability. Possible values
 * include: 'Visible', 'Available', 'Default', 'Disabled'
 * @property {string} [reason] The reason for the capability not being
 * available.
 */
export interface ElasticPoolEditionCapability {
  readonly name?: string;
  readonly supportedElasticPoolPerformanceLevels?: ElasticPoolPerformanceLevelCapability[];
  readonly zoneRedundant?: boolean;
  readonly status?: string;
  reason?: string;
}

/**
 * @class
 * Initializes a new instance of the ServerVersionCapability class.
 * @constructor
 * The server capability
 *
 * @property {string} [name] The server version name.
 * @property {array} [supportedEditions] The list of supported database
 * editions.
 * @property {array} [supportedElasticPoolEditions] The list of supported
 * elastic pool editions.
 * @property {string} [status] The status of the capability. Possible values
 * include: 'Visible', 'Available', 'Default', 'Disabled'
 * @property {string} [reason] The reason for the capability not being
 * available.
 */
export interface ServerVersionCapability {
  readonly name?: string;
  readonly supportedEditions?: EditionCapability[];
  readonly supportedElasticPoolEditions?: ElasticPoolEditionCapability[];
  readonly status?: string;
  reason?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedInstanceVcoresCapability class.
 * @constructor
 * The managed instance virtual cores capability.
 *
 * @property {string} [name] The virtual cores identifier.
 * @property {number} [value] The virtual cores value.
 * @property {string} [status] The status of the capability. Possible values
 * include: 'Visible', 'Available', 'Default', 'Disabled'
 * @property {string} [reason] The reason for the capability not being
 * available.
 */
export interface ManagedInstanceVcoresCapability {
  readonly name?: string;
  readonly value?: number;
  readonly status?: string;
  reason?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedInstanceFamilyCapability class.
 * @constructor
 * The managed server family capability.
 *
 * @property {string} [name] Family name.
 * @property {string} [sku] SKU name.
 * @property {array} [supportedLicenseTypes] List of supported license types.
 * @property {array} [supportedVcoresValues] List of supported virtual cores
 * values.
 * @property {object} [includedMaxSize] Included size.
 * @property {number} [includedMaxSize.limit] The maximum size limit (see
 * 'unit' for the units).
 * @property {string} [includedMaxSize.unit] The units that the limit is
 * expressed in. Possible values include: 'Megabytes', 'Gigabytes',
 * 'Terabytes', 'Petabytes'
 * @property {array} [supportedStorageSizes] Storage size ranges.
 * @property {string} [status] The status of the capability. Possible values
 * include: 'Visible', 'Available', 'Default', 'Disabled'
 * @property {string} [reason] The reason for the capability not being
 * available.
 */
export interface ManagedInstanceFamilyCapability {
  readonly name?: string;
  readonly sku?: string;
  readonly supportedLicenseTypes?: LicenseTypeCapability[];
  readonly supportedVcoresValues?: ManagedInstanceVcoresCapability[];
  readonly includedMaxSize?: MaxSizeCapability;
  readonly supportedStorageSizes?: MaxSizeRangeCapability[];
  readonly status?: string;
  reason?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedInstanceEditionCapability class.
 * @constructor
 * The managed server capability
 *
 * @property {string} [name] The managed server version name.
 * @property {array} [supportedFamilies] The supported families.
 * @property {string} [status] The status of the capability. Possible values
 * include: 'Visible', 'Available', 'Default', 'Disabled'
 * @property {string} [reason] The reason for the capability not being
 * available.
 */
export interface ManagedInstanceEditionCapability {
  readonly name?: string;
  readonly supportedFamilies?: ManagedInstanceFamilyCapability[];
  readonly status?: string;
  reason?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedInstanceVersionCapability class.
 * @constructor
 * The managed instance capability
 *
 * @property {string} [name] The server version name.
 * @property {array} [supportedEditions] The list of supported managed instance
 * editions.
 * @property {string} [status] The status of the capability. Possible values
 * include: 'Visible', 'Available', 'Default', 'Disabled'
 * @property {string} [reason] The reason for the capability not being
 * available.
 */
export interface ManagedInstanceVersionCapability {
  readonly name?: string;
  readonly supportedEditions?: ManagedInstanceEditionCapability[];
  readonly status?: string;
  reason?: string;
}

/**
 * @class
 * Initializes a new instance of the LocationCapabilities class.
 * @constructor
 * The location capability.
 *
 * @property {string} [name] The location name.
 * @property {array} [supportedServerVersions] The list of supported server
 * versions.
 * @property {array} [supportedManagedInstanceVersions] The list of supported
 * managed instance versions.
 * @property {string} [status] The status of the capability. Possible values
 * include: 'Visible', 'Available', 'Default', 'Disabled'
 * @property {string} [reason] The reason for the capability not being
 * available.
 */
export interface LocationCapabilities {
  readonly name?: string;
  readonly supportedServerVersions?: ServerVersionCapability[];
  readonly supportedManagedInstanceVersions?: ManagedInstanceVersionCapability[];
  readonly status?: string;
  reason?: string;
}

/**
 * @class
 * Initializes a new instance of the Database class.
 * @constructor
 * A database resource.
 *
 * @property {object} [sku] The name and tier of the SKU.
 * @property {string} [sku.name] The name of the SKU. Ex - P3. It is typically
 * a letter+number code
 * @property {string} [sku.tier] This field is required to be implemented by
 * the Resource Provider if the service has more than one tier, but is not
 * required on a PUT.
 * @property {string} [sku.size] The SKU size. When the name field is the
 * combination of tier and some other value, this would be the standalone code.
 * @property {string} [sku.family] If the service has different generations of
 * hardware, for the same SKU, then that can be captured here.
 * @property {number} [sku.capacity] If the SKU supports scale out/in then the
 * capacity integer should be included. If scale out/in is not possible for the
 * resource this may be omitted.
 * @property {string} [kind] Kind of database. This is metadata used for the
 * Azure portal experience.
 * @property {string} [managedBy] Resource that manages the database.
 * @property {string} [createMode] Specifies the mode of database creation.
 *
 * Default: regular database creation.
 *
 * Copy: creates a database as a copy of an existing database. sourceDatabaseId
 * must be specified as the resource ID of the source database.
 *
 * Secondary: creates a database as a secondary replica of an existing
 * database. sourceDatabaseId must be specified as the resource ID of the
 * existing primary database.
 *
 * PointInTimeRestore: Creates a database by restoring a point in time backup
 * of an existing database. sourceDatabaseId must be specified as the resource
 * ID of the existing database, and restorePointInTime must be specified.
 *
 * Recovery: Creates a database by restoring a geo-replicated backup.
 * sourceDatabaseId must be specified as the recoverable database resource ID
 * to restore.
 *
 * Restore: Creates a database by restoring a backup of a deleted database.
 * sourceDatabaseId must be specified. If sourceDatabaseId is the database's
 * original resource ID, then sourceDatabaseDeletionDate must be specified.
 * Otherwise sourceDatabaseId must be the restorable dropped database resource
 * ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be
 * specified to restore from an earlier point in time.
 *
 * RestoreLongTermRetentionBackup: Creates a database by restoring from a long
 * term retention vault. recoveryServicesRecoveryPointResourceId must be
 * specified as the recovery point resource ID.
 *
 * Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for
 * DataWarehouse edition. Possible values include: 'Default', 'Copy',
 * 'Secondary', 'PointInTimeRestore', 'Restore', 'Recovery',
 * 'RestoreExternalBackup', 'RestoreExternalBackupSecondary',
 * 'RestoreLongTermRetentionBackup', 'OnlineSecondary'
 * @property {string} [collation] The collation of the database.
 * @property {number} [maxSizeBytes] The max size of the database expressed in
 * bytes.
 * @property {string} [sampleName] The name of the sample schema to apply when
 * creating this database. Possible values include: 'AdventureWorksLT',
 * 'WideWorldImportersStd', 'WideWorldImportersFull'
 * @property {string} [elasticPoolId] The resource identifier of the elastic
 * pool containing this database.
 * @property {string} [sourceDatabaseId] The resource identifier of the source
 * database associated with create operation of this database.
 * @property {string} [status] The status of the database. Possible values
 * include: 'Online', 'Restoring', 'RecoveryPending', 'Recovering', 'Suspect',
 * 'Offline', 'Standby', 'Shutdown', 'EmergencyMode', 'AutoClosed', 'Copying',
 * 'Creating', 'Inaccessible', 'OfflineSecondary', 'Pausing', 'Paused',
 * 'Resuming', 'Scaling'
 * @property {uuid} [databaseId] The ID of the database.
 * @property {date} [creationDate] The creation date of the database (ISO8601
 * format).
 * @property {string} [currentServiceObjectiveName] The current service level
 * objective name of the database.
 * @property {string} [requestedServiceObjectiveName] The requested service
 * level objective name of the database.
 * @property {string} [defaultSecondaryLocation] The default secondary region
 * for this database.
 * @property {string} [failoverGroupId] Failover Group resource identifier that
 * this database belongs to.
 * @property {date} [restorePointInTime] Specifies the point in time (ISO8601
 * format) of the source database that will be restored to create the new
 * database.
 * @property {date} [sourceDatabaseDeletionDate] Specifies the time that the
 * database was deleted.
 * @property {string} [recoveryServicesRecoveryPointId] The resource identifier
 * of the recovery point associated with create operation of this database.
 * @property {string} [longTermRetentionBackupResourceId] The resource
 * identifier of the long term retention backup associated with create
 * operation of this database.
 * @property {string} [recoverableDatabaseId] The resource identifier of the
 * recoverable database associated with create operation of this database.
 * @property {string} [restorableDroppedDatabaseId] The resource identifier of
 * the restorable dropped database associated with create operation of this
 * database.
 * @property {string} [catalogCollation] Collation of the metadata catalog.
 * Possible values include: 'DATABASE_DEFAULT', 'SQL_Latin1_General_CP1_CI_AS'
 * @property {boolean} [zoneRedundant] Whether or not this database is zone
 * redundant, which means the replicas of this database will be spread across
 * multiple availability zones.
 * @property {string} [licenseType] The license type to apply for this
 * database. Possible values include: 'LicenseIncluded', 'BasePrice'
 * @property {number} [maxLogSizeBytes] The max log size for this database.
 * @property {date} [earliestRestoreDate] This records the earliest start date
 * and time that restore is available for this database (ISO8601 format).
 * @property {string} [readScale] The state of read-only routing. If enabled,
 * connections that have application intent set to readonly in their connection
 * string may be routed to a readonly secondary replica in the same region.
 * Possible values include: 'Enabled', 'Disabled'
 * @property {object} [currentSku] The name and tier of the SKU.
 * @property {string} [currentSku.name] The name of the SKU. Ex - P3. It is
 * typically a letter+number code
 * @property {string} [currentSku.tier] This field is required to be
 * implemented by the Resource Provider if the service has more than one tier,
 * but is not required on a PUT.
 * @property {string} [currentSku.size] The SKU size. When the name field is
 * the combination of tier and some other value, this would be the standalone
 * code.
 * @property {string} [currentSku.family] If the service has different
 * generations of hardware, for the same SKU, then that can be captured here.
 * @property {number} [currentSku.capacity] If the SKU supports scale out/in
 * then the capacity integer should be included. If scale out/in is not
 * possible for the resource this may be omitted.
 */
export interface Database extends TrackedResource {
  sku?: Sku;
  readonly kind?: string;
  readonly managedBy?: string;
  createMode?: string;
  collation?: string;
  maxSizeBytes?: number;
  sampleName?: string;
  elasticPoolId?: string;
  sourceDatabaseId?: string;
  readonly status?: string;
  readonly databaseId?: string;
  readonly creationDate?: Date;
  readonly currentServiceObjectiveName?: string;
  readonly requestedServiceObjectiveName?: string;
  readonly defaultSecondaryLocation?: string;
  readonly failoverGroupId?: string;
  restorePointInTime?: Date;
  sourceDatabaseDeletionDate?: Date;
  recoveryServicesRecoveryPointId?: string;
  longTermRetentionBackupResourceId?: string;
  recoverableDatabaseId?: string;
  restorableDroppedDatabaseId?: string;
  catalogCollation?: string;
  zoneRedundant?: boolean;
  licenseType?: string;
  readonly maxLogSizeBytes?: number;
  readonly earliestRestoreDate?: Date;
  readScale?: string;
  readonly currentSku?: Sku;
}

/**
 * @class
 * Initializes a new instance of the DatabaseUpdate class.
 * @constructor
 * A database resource.
 *
 * @property {object} [sku] The name and tier of the SKU.
 * @property {string} [sku.name] The name of the SKU. Ex - P3. It is typically
 * a letter+number code
 * @property {string} [sku.tier] This field is required to be implemented by
 * the Resource Provider if the service has more than one tier, but is not
 * required on a PUT.
 * @property {string} [sku.size] The SKU size. When the name field is the
 * combination of tier and some other value, this would be the standalone code.
 * @property {string} [sku.family] If the service has different generations of
 * hardware, for the same SKU, then that can be captured here.
 * @property {number} [sku.capacity] If the SKU supports scale out/in then the
 * capacity integer should be included. If scale out/in is not possible for the
 * resource this may be omitted.
 * @property {string} [createMode] Specifies the mode of database creation.
 *
 * Default: regular database creation.
 *
 * Copy: creates a database as a copy of an existing database. sourceDatabaseId
 * must be specified as the resource ID of the source database.
 *
 * Secondary: creates a database as a secondary replica of an existing
 * database. sourceDatabaseId must be specified as the resource ID of the
 * existing primary database.
 *
 * PointInTimeRestore: Creates a database by restoring a point in time backup
 * of an existing database. sourceDatabaseId must be specified as the resource
 * ID of the existing database, and restorePointInTime must be specified.
 *
 * Recovery: Creates a database by restoring a geo-replicated backup.
 * sourceDatabaseId must be specified as the recoverable database resource ID
 * to restore.
 *
 * Restore: Creates a database by restoring a backup of a deleted database.
 * sourceDatabaseId must be specified. If sourceDatabaseId is the database's
 * original resource ID, then sourceDatabaseDeletionDate must be specified.
 * Otherwise sourceDatabaseId must be the restorable dropped database resource
 * ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be
 * specified to restore from an earlier point in time.
 *
 * RestoreLongTermRetentionBackup: Creates a database by restoring from a long
 * term retention vault. recoveryServicesRecoveryPointResourceId must be
 * specified as the recovery point resource ID.
 *
 * Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for
 * DataWarehouse edition. Possible values include: 'Default', 'Copy',
 * 'Secondary', 'PointInTimeRestore', 'Restore', 'Recovery',
 * 'RestoreExternalBackup', 'RestoreExternalBackupSecondary',
 * 'RestoreLongTermRetentionBackup', 'OnlineSecondary'
 * @property {string} [collation] The collation of the database.
 * @property {number} [maxSizeBytes] The max size of the database expressed in
 * bytes.
 * @property {string} [sampleName] The name of the sample schema to apply when
 * creating this database. Possible values include: 'AdventureWorksLT',
 * 'WideWorldImportersStd', 'WideWorldImportersFull'
 * @property {string} [elasticPoolId] The resource identifier of the elastic
 * pool containing this database.
 * @property {string} [sourceDatabaseId] The resource identifier of the source
 * database associated with create operation of this database.
 * @property {string} [status] The status of the database. Possible values
 * include: 'Online', 'Restoring', 'RecoveryPending', 'Recovering', 'Suspect',
 * 'Offline', 'Standby', 'Shutdown', 'EmergencyMode', 'AutoClosed', 'Copying',
 * 'Creating', 'Inaccessible', 'OfflineSecondary', 'Pausing', 'Paused',
 * 'Resuming', 'Scaling'
 * @property {uuid} [databaseId] The ID of the database.
 * @property {date} [creationDate] The creation date of the database (ISO8601
 * format).
 * @property {string} [currentServiceObjectiveName] The current service level
 * objective name of the database.
 * @property {string} [requestedServiceObjectiveName] The requested service
 * level objective name of the database.
 * @property {string} [defaultSecondaryLocation] The default secondary region
 * for this database.
 * @property {string} [failoverGroupId] Failover Group resource identifier that
 * this database belongs to.
 * @property {date} [restorePointInTime] Specifies the point in time (ISO8601
 * format) of the source database that will be restored to create the new
 * database.
 * @property {date} [sourceDatabaseDeletionDate] Specifies the time that the
 * database was deleted.
 * @property {string} [recoveryServicesRecoveryPointId] The resource identifier
 * of the recovery point associated with create operation of this database.
 * @property {string} [longTermRetentionBackupResourceId] The resource
 * identifier of the long term retention backup associated with create
 * operation of this database.
 * @property {string} [recoverableDatabaseId] The resource identifier of the
 * recoverable database associated with create operation of this database.
 * @property {string} [restorableDroppedDatabaseId] The resource identifier of
 * the restorable dropped database associated with create operation of this
 * database.
 * @property {string} [catalogCollation] Collation of the metadata catalog.
 * Possible values include: 'DATABASE_DEFAULT', 'SQL_Latin1_General_CP1_CI_AS'
 * @property {boolean} [zoneRedundant] Whether or not this database is zone
 * redundant, which means the replicas of this database will be spread across
 * multiple availability zones.
 * @property {string} [licenseType] The license type to apply for this
 * database. Possible values include: 'LicenseIncluded', 'BasePrice'
 * @property {number} [maxLogSizeBytes] The max log size for this database.
 * @property {date} [earliestRestoreDate] This records the earliest start date
 * and time that restore is available for this database (ISO8601 format).
 * @property {string} [readScale] The state of read-only routing. If enabled,
 * connections that have application intent set to readonly in their connection
 * string may be routed to a readonly secondary replica in the same region.
 * Possible values include: 'Enabled', 'Disabled'
 * @property {object} [currentSku] The name and tier of the SKU.
 * @property {string} [currentSku.name] The name of the SKU. Ex - P3. It is
 * typically a letter+number code
 * @property {string} [currentSku.tier] This field is required to be
 * implemented by the Resource Provider if the service has more than one tier,
 * but is not required on a PUT.
 * @property {string} [currentSku.size] The SKU size. When the name field is
 * the combination of tier and some other value, this would be the standalone
 * code.
 * @property {string} [currentSku.family] If the service has different
 * generations of hardware, for the same SKU, then that can be captured here.
 * @property {number} [currentSku.capacity] If the SKU supports scale out/in
 * then the capacity integer should be included. If scale out/in is not
 * possible for the resource this may be omitted.
 * @property {object} [tags] Resource tags.
 */
export interface DatabaseUpdate {
  sku?: Sku;
  createMode?: string;
  collation?: string;
  maxSizeBytes?: number;
  sampleName?: string;
  elasticPoolId?: string;
  sourceDatabaseId?: string;
  readonly status?: string;
  readonly databaseId?: string;
  readonly creationDate?: Date;
  readonly currentServiceObjectiveName?: string;
  readonly requestedServiceObjectiveName?: string;
  readonly defaultSecondaryLocation?: string;
  readonly failoverGroupId?: string;
  restorePointInTime?: Date;
  sourceDatabaseDeletionDate?: Date;
  recoveryServicesRecoveryPointId?: string;
  longTermRetentionBackupResourceId?: string;
  recoverableDatabaseId?: string;
  restorableDroppedDatabaseId?: string;
  catalogCollation?: string;
  zoneRedundant?: boolean;
  licenseType?: string;
  readonly maxLogSizeBytes?: number;
  readonly earliestRestoreDate?: Date;
  readScale?: string;
  readonly currentSku?: Sku;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the ResourceMoveDefinition class.
 * @constructor
 * Contains the information necessary to perform a resource move (rename).
 *
 * @property {string} id The target ID for the resource
 */
export interface ResourceMoveDefinition {
  id: string;
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolPerDatabaseSettings class.
 * @constructor
 * Per database settings of an elastic pool.
 *
 * @property {number} [minCapacity] The minimum capacity all databases are
 * guaranteed.
 * @property {number} [maxCapacity] The maximum capacity any one database can
 * consume.
 */
export interface ElasticPoolPerDatabaseSettings {
  minCapacity?: number;
  maxCapacity?: number;
}

/**
 * @class
 * Initializes a new instance of the ElasticPool class.
 * @constructor
 * An elastic pool.
 *
 * @property {object} [sku]
 * @property {string} [sku.name] The name of the SKU. Ex - P3. It is typically
 * a letter+number code
 * @property {string} [sku.tier] This field is required to be implemented by
 * the Resource Provider if the service has more than one tier, but is not
 * required on a PUT.
 * @property {string} [sku.size] The SKU size. When the name field is the
 * combination of tier and some other value, this would be the standalone code.
 * @property {string} [sku.family] If the service has different generations of
 * hardware, for the same SKU, then that can be captured here.
 * @property {number} [sku.capacity] If the SKU supports scale out/in then the
 * capacity integer should be included. If scale out/in is not possible for the
 * resource this may be omitted.
 * @property {string} [kind] Kind of elastic pool. This is metadata used for
 * the Azure portal experience.
 * @property {string} [state] The state of the elastic pool. Possible values
 * include: 'Creating', 'Ready', 'Disabled'
 * @property {date} [creationDate] The creation date of the elastic pool
 * (ISO8601 format).
 * @property {number} [maxSizeBytes] The storage limit for the database elastic
 * pool in bytes.
 * @property {object} [perDatabaseSettings] The per database settings for the
 * elastic pool.
 * @property {number} [perDatabaseSettings.minCapacity] The minimum capacity
 * all databases are guaranteed.
 * @property {number} [perDatabaseSettings.maxCapacity] The maximum capacity
 * any one database can consume.
 * @property {boolean} [zoneRedundant] Whether or not this elastic pool is zone
 * redundant, which means the replicas of this elastic pool will be spread
 * across multiple availability zones.
 * @property {string} [licenseType] The license type to apply for this elastic
 * pool. Possible values include: 'LicenseIncluded', 'BasePrice'
 */
export interface ElasticPool extends TrackedResource {
  sku?: Sku;
  readonly kind?: string;
  readonly state?: string;
  readonly creationDate?: Date;
  maxSizeBytes?: number;
  perDatabaseSettings?: ElasticPoolPerDatabaseSettings;
  zoneRedundant?: boolean;
  licenseType?: string;
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolUpdate class.
 * @constructor
 * An elastic pool update.
 *
 * @property {object} [sku]
 * @property {string} [sku.name] The name of the SKU. Ex - P3. It is typically
 * a letter+number code
 * @property {string} [sku.tier] This field is required to be implemented by
 * the Resource Provider if the service has more than one tier, but is not
 * required on a PUT.
 * @property {string} [sku.size] The SKU size. When the name field is the
 * combination of tier and some other value, this would be the standalone code.
 * @property {string} [sku.family] If the service has different generations of
 * hardware, for the same SKU, then that can be captured here.
 * @property {number} [sku.capacity] If the SKU supports scale out/in then the
 * capacity integer should be included. If scale out/in is not possible for the
 * resource this may be omitted.
 * @property {number} [maxSizeBytes] The storage limit for the database elastic
 * pool in bytes.
 * @property {object} [perDatabaseSettings] The per database settings for the
 * elastic pool.
 * @property {number} [perDatabaseSettings.minCapacity] The minimum capacity
 * all databases are guaranteed.
 * @property {number} [perDatabaseSettings.maxCapacity] The maximum capacity
 * any one database can consume.
 * @property {boolean} [zoneRedundant] Whether or not this elastic pool is zone
 * redundant, which means the replicas of this elastic pool will be spread
 * across multiple availability zones.
 * @property {string} [licenseType] The license type to apply for this elastic
 * pool. Possible values include: 'LicenseIncluded', 'BasePrice'
 * @property {object} [tags] Resource tags.
 */
export interface ElasticPoolUpdate {
  sku?: Sku;
  maxSizeBytes?: number;
  perDatabaseSettings?: ElasticPoolPerDatabaseSettings;
  zoneRedundant?: boolean;
  licenseType?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the VulnerabilityAssessmentScanError class.
 * @constructor
 * Properties of a vulnerability assessment scan error.
 *
 * @property {string} [code] The error code.
 * @property {string} [message] The error message.
 */
export interface VulnerabilityAssessmentScanError {
  readonly code?: string;
  readonly message?: string;
}

/**
 * @class
 * Initializes a new instance of the VulnerabilityAssessmentScanRecord class.
 * @constructor
 * A vulnerability assessment scan record.
 *
 * @property {string} [scanId] The scan ID.
 * @property {string} [triggerType] The scan trigger type. Possible values
 * include: 'OnDemand', 'Recurring'
 * @property {string} [state] The scan status. Possible values include:
 * 'Passed', 'Failed', 'FailedToRun', 'InProgress'
 * @property {date} [startTime] The scan start time (UTC).
 * @property {date} [endTime] The scan end time (UTC).
 * @property {array} [errors] The scan errors.
 * @property {string} [storageContainerPath] The scan results storage container
 * path.
 * @property {number} [numberOfFailedSecurityChecks] The number of failed
 * security checks.
 */
export interface VulnerabilityAssessmentScanRecord extends ProxyResource {
  readonly scanId?: string;
  readonly triggerType?: string;
  readonly state?: string;
  readonly startTime?: Date;
  readonly endTime?: Date;
  readonly errors?: VulnerabilityAssessmentScanError[];
  readonly storageContainerPath?: string;
  readonly numberOfFailedSecurityChecks?: number;
}

/**
 * @class
 * Initializes a new instance of the DatabaseVulnerabilityAssessmentScansExport class.
 * @constructor
 * A database Vulnerability Assessment scan export resource.
 *
 * @property {string} [exportedReportLocation] Location of the exported report
 * (e.g.
 * https://myStorage.blob.core.windows.net/VaScans/scans/serverName/databaseName/scan_scanId.xlsx).
 */
export interface DatabaseVulnerabilityAssessmentScansExport extends ProxyResource {
  readonly exportedReportLocation?: string;
}

/**
 * @class
 * Initializes a new instance of the InstanceFailoverGroupReadWriteEndpoint class.
 * @constructor
 * Read-write endpoint of the failover group instance.
 *
 * @property {string} failoverPolicy Failover policy of the read-write endpoint
 * for the failover group. If failoverPolicy is Automatic then
 * failoverWithDataLossGracePeriodMinutes is required. Possible values include:
 * 'Manual', 'Automatic'
 * @property {number} [failoverWithDataLossGracePeriodMinutes] Grace period
 * before failover with data loss is attempted for the read-write endpoint. If
 * failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is
 * required.
 */
export interface InstanceFailoverGroupReadWriteEndpoint {
  failoverPolicy: string;
  failoverWithDataLossGracePeriodMinutes?: number;
}

/**
 * @class
 * Initializes a new instance of the InstanceFailoverGroupReadOnlyEndpoint class.
 * @constructor
 * Read-only endpoint of the failover group instance.
 *
 * @property {string} [failoverPolicy] Failover policy of the read-only
 * endpoint for the failover group. Possible values include: 'Disabled',
 * 'Enabled'
 */
export interface InstanceFailoverGroupReadOnlyEndpoint {
  failoverPolicy?: string;
}

/**
 * @class
 * Initializes a new instance of the PartnerRegionInfo class.
 * @constructor
 * Partner region information for the failover group.
 *
 * @property {string} [location] Geo location of the partner managed instances.
 * @property {string} [replicationRole] Replication role of the partner managed
 * instances. Possible values include: 'Primary', 'Secondary'
 */
export interface PartnerRegionInfo {
  location?: string;
  readonly replicationRole?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedInstancePairInfo class.
 * @constructor
 * Pairs of Managed Instances in the failover group.
 *
 * @property {string} [primaryManagedInstanceId] Id of Primary Managed Instance
 * in pair.
 * @property {string} [partnerManagedInstanceId] Id of Partner Managed Instance
 * in pair.
 */
export interface ManagedInstancePairInfo {
  primaryManagedInstanceId?: string;
  partnerManagedInstanceId?: string;
}

/**
 * @class
 * Initializes a new instance of the InstanceFailoverGroup class.
 * @constructor
 * An instance failover group.
 *
 * @property {object} readWriteEndpoint Read-write endpoint of the failover
 * group instance.
 * @property {string} [readWriteEndpoint.failoverPolicy] Failover policy of the
 * read-write endpoint for the failover group. If failoverPolicy is Automatic
 * then failoverWithDataLossGracePeriodMinutes is required. Possible values
 * include: 'Manual', 'Automatic'
 * @property {number}
 * [readWriteEndpoint.failoverWithDataLossGracePeriodMinutes] Grace period
 * before failover with data loss is attempted for the read-write endpoint. If
 * failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is
 * required.
 * @property {object} [readOnlyEndpoint] Read-only endpoint of the failover
 * group instance.
 * @property {string} [readOnlyEndpoint.failoverPolicy] Failover policy of the
 * read-only endpoint for the failover group. Possible values include:
 * 'Disabled', 'Enabled'
 * @property {string} [replicationRole] Local replication role of the failover
 * group instance. Possible values include: 'Primary', 'Secondary'
 * @property {string} [replicationState] Replication state of the failover
 * group instance.
 * @property {array} partnerRegions Partner region information for the failover
 * group.
 * @property {array} managedInstancePairs List of managed instance pairs in the
 * failover group.
 */
export interface InstanceFailoverGroup extends ProxyResource {
  readWriteEndpoint: InstanceFailoverGroupReadWriteEndpoint;
  readOnlyEndpoint?: InstanceFailoverGroupReadOnlyEndpoint;
  readonly replicationRole?: string;
  readonly replicationState?: string;
  partnerRegions: PartnerRegionInfo[];
  managedInstancePairs: ManagedInstancePairInfo[];
}

/**
 * @class
 * Initializes a new instance of the BackupShortTermRetentionPolicy class.
 * @constructor
 * A short term retention policy.
 *
 * @property {number} [retentionDays] The backup retention period in days. This
 * is how many days Point-in-Time Restore will be supported.
 */
export interface BackupShortTermRetentionPolicy extends ProxyResource {
  retentionDays?: number;
}

/**
 * @class
 * Initializes a new instance of the TdeCertificate class.
 * @constructor
 * A TDE certificate that can be uploaded into a server.
 *
 * @property {string} privateBlob The base64 encoded certificate private blob.
 * @property {string} [certPassword] The certificate password.
 */
export interface TdeCertificate extends ProxyResource {
  privateBlob: string;
  certPassword?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedInstanceKey class.
 * @constructor
 * A managed instance key.
 *
 * @property {string} [kind] Kind of encryption protector. This is metadata
 * used for the Azure portal experience.
 * @property {string} serverKeyType The key type like 'ServiceManaged',
 * 'AzureKeyVault'. Possible values include: 'ServiceManaged', 'AzureKeyVault'
 * @property {string} [uri] The URI of the key. If the ServerKeyType is
 * AzureKeyVault, then the URI is required.
 * @property {string} [thumbprint] Thumbprint of the key.
 * @property {date} [creationDate] The key creation date.
 */
export interface ManagedInstanceKey extends ProxyResource {
  readonly kind?: string;
  serverKeyType: string;
  uri?: string;
  readonly thumbprint?: string;
  readonly creationDate?: Date;
}

/**
 * @class
 * Initializes a new instance of the ManagedInstanceEncryptionProtector class.
 * @constructor
 * The managed instance encryption protector.
 *
 * @property {string} [kind] Kind of encryption protector. This is metadata
 * used for the Azure portal experience.
 * @property {string} [serverKeyName] The name of the managed instance key.
 * @property {string} serverKeyType The encryption protector type like
 * 'ServiceManaged', 'AzureKeyVault'. Possible values include:
 * 'ServiceManaged', 'AzureKeyVault'
 * @property {string} [uri] The URI of the server key.
 * @property {string} [thumbprint] Thumbprint of the server key.
 */
export interface ManagedInstanceEncryptionProtector extends ProxyResource {
  readonly kind?: string;
  serverKeyName?: string;
  serverKeyType: string;
  readonly uri?: string;
  readonly thumbprint?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedInstanceVulnerabilityAssessment class.
 * @constructor
 * A managed instance vulnerability assessment.
 *
 * @property {string} storageContainerPath A blob storage container path to
 * hold the scan results (e.g.
 * https://myStorage.blob.core.windows.net/VaScans/).
 * @property {string} [storageContainerSasKey] A shared access signature (SAS
 * Key) that has write access to the blob container specified in
 * 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't
 * specified, StorageContainerSasKey is required.
 * @property {string} [storageAccountAccessKey] Specifies the identifier key of
 * the storage account for vulnerability assessment scan results. If
 * 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is
 * required.
 * @property {object} [recurringScans] The recurring scans settings
 * @property {boolean} [recurringScans.isEnabled] Recurring scans state.
 * @property {boolean} [recurringScans.emailSubscriptionAdmins] Specifies that
 * the schedule scan notification will be is sent to the subscription
 * administrators.
 * @property {array} [recurringScans.emails] Specifies an array of e-mail
 * addresses to which the scan notification is sent.
 */
export interface ManagedInstanceVulnerabilityAssessment extends ProxyResource {
  storageContainerPath: string;
  storageContainerSasKey?: string;
  storageAccountAccessKey?: string;
  recurringScans?: VulnerabilityAssessmentRecurringScansProperties;
}

/**
 * @class
 * Initializes a new instance of the ServerVulnerabilityAssessment class.
 * @constructor
 * A server vulnerability assessment.
 *
 * @property {string} storageContainerPath A blob storage container path to
 * hold the scan results (e.g.
 * https://myStorage.blob.core.windows.net/VaScans/).
 * @property {string} [storageContainerSasKey] A shared access signature (SAS
 * Key) that has write access to the blob container specified in
 * 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't
 * specified, StorageContainerSasKey is required.
 * @property {string} [storageAccountAccessKey] Specifies the identifier key of
 * the storage account for vulnerability assessment scan results. If
 * 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is
 * required.
 * @property {object} [recurringScans] The recurring scans settings
 * @property {boolean} [recurringScans.isEnabled] Recurring scans state.
 * @property {boolean} [recurringScans.emailSubscriptionAdmins] Specifies that
 * the schedule scan notification will be is sent to the subscription
 * administrators.
 * @property {array} [recurringScans.emails] Specifies an array of e-mail
 * addresses to which the scan notification is sent.
 */
export interface ServerVulnerabilityAssessment extends ProxyResource {
  storageContainerPath: string;
  storageContainerSasKey?: string;
  storageAccountAccessKey?: string;
  recurringScans?: VulnerabilityAssessmentRecurringScansProperties;
}


/**
 * @class
 * Initializes a new instance of the RecoverableDatabaseListResult class.
 * @constructor
 * The response to a list recoverable databases request
 *
 */
export interface RecoverableDatabaseListResult extends Array<RecoverableDatabase> {
}

/**
 * @class
 * Initializes a new instance of the RestorableDroppedDatabaseListResult class.
 * @constructor
 * The response to a list restorable dropped databases request
 *
 */
export interface RestorableDroppedDatabaseListResult extends Array<RestorableDroppedDatabase> {
}

/**
 * @class
 * Initializes a new instance of the ServerListResult class.
 * @constructor
 * A list of servers.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface ServerListResult extends Array<Server> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the DataMaskingRuleListResult class.
 * @constructor
 * The response to a list data masking rules request.
 *
 */
export interface DataMaskingRuleListResult extends Array<DataMaskingRule> {
}

/**
 * @class
 * Initializes a new instance of the FirewallRuleListResult class.
 * @constructor
 * Represents the response to a List Firewall Rules request.
 *
 */
export interface FirewallRuleListResult extends Array<FirewallRule> {
}

/**
 * @class
 * Initializes a new instance of the GeoBackupPolicyListResult class.
 * @constructor
 * The response to a list geo backup policies request.
 *
 */
export interface GeoBackupPolicyListResult extends Array<GeoBackupPolicy> {
}

/**
 * @class
 * Initializes a new instance of the MetricListResult class.
 * @constructor
 * The response to a list database metrics request.
 *
 */
export interface MetricListResult extends Array<Metric> {
}

/**
 * @class
 * Initializes a new instance of the MetricDefinitionListResult class.
 * @constructor
 * The response to a list database metric definitions request.
 *
 */
export interface MetricDefinitionListResult extends Array<MetricDefinition> {
}

/**
 * @class
 * Initializes a new instance of the DatabaseListResult class.
 * @constructor
 * A list of databases.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface DatabaseListResult extends Array<Database> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolListResult class.
 * @constructor
 * The result of an elastic pool list request.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface ElasticPoolListResult extends Array<ElasticPool> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the RecommendedElasticPoolListResult class.
 * @constructor
 * Represents the response to a list recommended elastic pool request.
 *
 */
export interface RecommendedElasticPoolListResult extends Array<RecommendedElasticPool> {
}

/**
 * @class
 * Initializes a new instance of the RecommendedElasticPoolListMetricsResult class.
 * @constructor
 * Represents the response to a list recommended elastic pool metrics request.
 *
 */
export interface RecommendedElasticPoolListMetricsResult extends Array<RecommendedElasticPoolMetric> {
}

/**
 * @class
 * Initializes a new instance of the ReplicationLinkListResult class.
 * @constructor
 * Represents the response to a List database replication link request.
 *
 */
export interface ReplicationLinkListResult extends Array<ReplicationLink> {
}

/**
 * @class
 * Initializes a new instance of the ServerAdministratorListResult class.
 * @constructor
 * The response to a list Active Directory Administrators request.
 *
 */
export interface ServerAdministratorListResult extends Array<ServerAzureADAdministrator> {
}

/**
 * @class
 * Initializes a new instance of the ServerCommunicationLinkListResult class.
 * @constructor
 * A list of server communication links.
 *
 */
export interface ServerCommunicationLinkListResult extends Array<ServerCommunicationLink> {
}

/**
 * @class
 * Initializes a new instance of the ServiceObjectiveListResult class.
 * @constructor
 * Represents the response to a get database service objectives request.
 *
 */
export interface ServiceObjectiveListResult extends Array<ServiceObjective> {
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolActivityListResult class.
 * @constructor
 * Represents the response to a list elastic pool activity request.
 *
 */
export interface ElasticPoolActivityListResult extends Array<ElasticPoolActivity> {
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolDatabaseActivityListResult class.
 * @constructor
 * Represents the response to a list elastic pool database activity request.
 *
 */
export interface ElasticPoolDatabaseActivityListResult extends Array<ElasticPoolDatabaseActivity> {
}

/**
 * @class
 * Initializes a new instance of the ServiceTierAdvisorListResult class.
 * @constructor
 * Represents the response to a list service tier advisor request.
 *
 */
export interface ServiceTierAdvisorListResult extends Array<ServiceTierAdvisor> {
}

/**
 * @class
 * Initializes a new instance of the TransparentDataEncryptionActivityListResult class.
 * @constructor
 * Represents the response to a list database transparent data encryption
 * activity request.
 *
 */
export interface TransparentDataEncryptionActivityListResult extends Array<TransparentDataEncryptionActivity> {
}

/**
 * @class
 * Initializes a new instance of the ServerUsageListResult class.
 * @constructor
 * Represents the response to a list server metrics request.
 *
 */
export interface ServerUsageListResult extends Array<ServerUsage> {
}

/**
 * @class
 * Initializes a new instance of the DatabaseUsageListResult class.
 * @constructor
 * The response to a list database metrics request.
 *
 */
export interface DatabaseUsageListResult extends Array<DatabaseUsage> {
}

/**
 * @class
 * Initializes a new instance of the EncryptionProtectorListResult class.
 * @constructor
 * A list of server encryption protectors.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface EncryptionProtectorListResult extends Array<EncryptionProtector> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the FailoverGroupListResult class.
 * @constructor
 * A list of failover groups.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface FailoverGroupListResult extends Array<FailoverGroup> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedInstanceListResult class.
 * @constructor
 * A list of managed instances.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface ManagedInstanceListResult extends Array<ManagedInstance> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationListResult class.
 * @constructor
 * Result of the request to list SQL operations.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface OperationListResult extends Array<Operation> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ServerKeyListResult class.
 * @constructor
 * A list of server keys.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface ServerKeyListResult extends Array<ServerKey> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncAgentListResult class.
 * @constructor
 * A list of sync agents.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface SyncAgentListResult extends Array<SyncAgent> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncAgentLinkedDatabaseListResult class.
 * @constructor
 * A list of sync agent linked databases.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface SyncAgentLinkedDatabaseListResult extends Array<SyncAgentLinkedDatabase> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncDatabaseIdListResult class.
 * @constructor
 * A list of sync database ID properties.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface SyncDatabaseIdListResult extends Array<SyncDatabaseIdProperties> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncFullSchemaPropertiesListResult class.
 * @constructor
 * A list of sync schema properties.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface SyncFullSchemaPropertiesListResult extends Array<SyncFullSchemaProperties> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncGroupLogListResult class.
 * @constructor
 * A list of sync group log properties.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface SyncGroupLogListResult extends Array<SyncGroupLogProperties> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncGroupListResult class.
 * @constructor
 * A list of sync groups.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface SyncGroupListResult extends Array<SyncGroup> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SyncMemberListResult class.
 * @constructor
 * A list of Azure SQL Database sync members.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface SyncMemberListResult extends Array<SyncMember> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SubscriptionUsageListResult class.
 * @constructor
 * A list of subscription usage metrics in a location.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface SubscriptionUsageListResult extends Array<SubscriptionUsage> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkRuleListResult class.
 * @constructor
 * A list of virtual network rules.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface VirtualNetworkRuleListResult extends Array<VirtualNetworkRule> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the DatabaseVulnerabilityAssessmentListResult class.
 * @constructor
 * A list of the database's vulnerability assessments.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface DatabaseVulnerabilityAssessmentListResult extends Array<DatabaseVulnerabilityAssessment> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the JobAgentListResult class.
 * @constructor
 * A list of Azure SQL job agents.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface JobAgentListResult extends Array<JobAgent> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the JobCredentialListResult class.
 * @constructor
 * A list of job credentials.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface JobCredentialListResult extends Array<JobCredential> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the JobExecutionListResult class.
 * @constructor
 * A list of job executions.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface JobExecutionListResult extends Array<JobExecution> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the JobListResult class.
 * @constructor
 * A list of jobs.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface JobListResult extends Array<Job> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the JobStepListResult class.
 * @constructor
 * A list of job steps.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface JobStepListResult extends Array<JobStep> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the JobTargetGroupListResult class.
 * @constructor
 * A list of target groups.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface JobTargetGroupListResult extends Array<JobTargetGroup> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the JobVersionListResult class.
 * @constructor
 * A list of job versions.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface JobVersionListResult extends Array<JobVersion> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the LongTermRetentionBackupListResult class.
 * @constructor
 * A list of long term retention bacukps.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface LongTermRetentionBackupListResult extends Array<LongTermRetentionBackup> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedBackupShortTermRetentionPolicyListResult class.
 * @constructor
 * A list of short term retention policies.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface ManagedBackupShortTermRetentionPolicyListResult extends Array<ManagedBackupShortTermRetentionPolicy> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedDatabaseListResult class.
 * @constructor
 * A list of managed databases.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface ManagedDatabaseListResult extends Array<ManagedDatabase> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ServerDnsAliasListResult class.
 * @constructor
 * A list of server DNS aliases.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface ServerDnsAliasListResult extends Array<ServerDnsAlias> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the RestorePointListResult class.
 * @constructor
 * A list of long term retention bacukps.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface RestorePointListResult extends Array<RestorePoint> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the DatabaseOperationListResult class.
 * @constructor
 * The response to a list database operations request
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface DatabaseOperationListResult extends Array<DatabaseOperation> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ElasticPoolOperationListResult class.
 * @constructor
 * The response to a list elastic pool operations request
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface ElasticPoolOperationListResult extends Array<ElasticPoolOperation> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VulnerabilityAssessmentScanRecordListResult class.
 * @constructor
 * A list of vulnerability assessment scan records.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface VulnerabilityAssessmentScanRecordListResult extends Array<VulnerabilityAssessmentScanRecord> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the InstanceFailoverGroupListResult class.
 * @constructor
 * A list of instance failover groups.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface InstanceFailoverGroupListResult extends Array<InstanceFailoverGroup> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the BackupShortTermRetentionPolicyListResult class.
 * @constructor
 * A list of short term retention policies.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface BackupShortTermRetentionPolicyListResult extends Array<BackupShortTermRetentionPolicy> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedInstanceKeyListResult class.
 * @constructor
 * A list of managed instance keys.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface ManagedInstanceKeyListResult extends Array<ManagedInstanceKey> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedInstanceEncryptionProtectorListResult class.
 * @constructor
 * A list of managed instance encryption protectors.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface ManagedInstanceEncryptionProtectorListResult extends Array<ManagedInstanceEncryptionProtector> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ManagedInstanceVulnerabilityAssessmentListResult class.
 * @constructor
 * A list of the ManagedInstance's vulnerability assessments.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface ManagedInstanceVulnerabilityAssessmentListResult extends Array<ManagedInstanceVulnerabilityAssessment> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ServerVulnerabilityAssessmentListResult class.
 * @constructor
 * A list of the server's vulnerability assessments.
 *
 * @property {string} [nextLink] Link to retrieve next page of results.
 */
export interface ServerVulnerabilityAssessmentListResult extends Array<ServerVulnerabilityAssessment> {
  readonly nextLink?: string;
}

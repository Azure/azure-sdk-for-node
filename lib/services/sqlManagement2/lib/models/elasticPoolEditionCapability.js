/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The elastic pool edition capability.
 *
 */
class ElasticPoolEditionCapability {
  /**
   * Create a ElasticPoolEditionCapability.
   * @member {string} [name] The elastic pool edition name.
   * @member {array} [supportedElasticPoolPerformanceLevels] The list of
   * supported elastic pool DTU levels for the edition.
   * @member {boolean} [zoneRedundant] Whether or not zone redundancy is
   * supported for the edition.
   * @member {string} [status] The status of the capability. Possible values
   * include: 'Visible', 'Available', 'Default', 'Disabled'
   * @member {string} [reason] The reason for the capability not being
   * available.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ElasticPoolEditionCapability
   *
   * @returns {object} metadata of ElasticPoolEditionCapability
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ElasticPoolEditionCapability',
      type: {
        name: 'Composite',
        className: 'ElasticPoolEditionCapability',
        modelProperties: {
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          supportedElasticPoolPerformanceLevels: {
            required: false,
            readOnly: true,
            serializedName: 'supportedElasticPoolPerformanceLevels',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ElasticPoolPerformanceLevelCapabilityElementType',
                  type: {
                    name: 'Composite',
                    className: 'ElasticPoolPerformanceLevelCapability'
                  }
              }
            }
          },
          zoneRedundant: {
            required: false,
            readOnly: true,
            serializedName: 'zoneRedundant',
            type: {
              name: 'Boolean'
            }
          },
          status: {
            required: false,
            readOnly: true,
            serializedName: 'status',
            type: {
              name: 'Enum',
              allowedValues: [ 'Visible', 'Available', 'Default', 'Disabled' ]
            }
          },
          reason: {
            required: false,
            serializedName: 'reason',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ElasticPoolEditionCapability;

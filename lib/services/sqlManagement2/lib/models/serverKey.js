/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * A server key.
 *
 * @extends models['ProxyResource']
 */
class ServerKey extends models['ProxyResource'] {
  /**
   * Create a ServerKey.
   * @property {string} [kind] Kind of encryption protector. This is metadata
   * used for the Azure portal experience.
   * @property {string} [location] Resource location.
   * @property {string} [subregion] Subregion of the server key.
   * @property {string} serverKeyType The server key type like
   * 'ServiceManaged', 'AzureKeyVault'. Possible values include:
   * 'ServiceManaged', 'AzureKeyVault'
   * @property {string} [uri] The URI of the server key.
   * @property {string} [thumbprint] Thumbprint of the server key.
   * @property {date} [creationDate] The server key creation date.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ServerKey
   *
   * @returns {object} metadata of ServerKey
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ServerKey',
      type: {
        name: 'Composite',
        className: 'ServerKey',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          kind: {
            required: false,
            serializedName: 'kind',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            readOnly: true,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          subregion: {
            required: false,
            readOnly: true,
            serializedName: 'properties.subregion',
            type: {
              name: 'String'
            }
          },
          serverKeyType: {
            required: true,
            serializedName: 'properties.serverKeyType',
            type: {
              name: 'String'
            }
          },
          uri: {
            required: false,
            serializedName: 'properties.uri',
            type: {
              name: 'String'
            }
          },
          thumbprint: {
            required: false,
            serializedName: 'properties.thumbprint',
            type: {
              name: 'String'
            }
          },
          creationDate: {
            required: false,
            serializedName: 'properties.creationDate',
            type: {
              name: 'DateTime'
            }
          }
        }
      }
    };
  }
}

module.exports = ServerKey;

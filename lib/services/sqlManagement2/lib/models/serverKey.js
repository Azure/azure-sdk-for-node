/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Represents a Configuration.
 *
 * @extends models['ProxyResource']
 */
class Configuration extends models['ProxyResource'] {
  /**
   * Create a Configuration.
   * @member {string} [value] Value of the configuration.
   * @member {string} [description] Description of the configuration.
   * @member {string} [defaultValue] Default value of the configuration.
   * @member {string} [dataType] Data type of the configuration.
   * @member {string} [allowedValues] Allowed values of the configuration.
   * @member {string} [source] Source of the configuration.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of Configuration
   *
   * @returns {object} metadata of Configuration
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Configuration',
      type: {
        name: 'Composite',
        className: 'Configuration',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          value: {
            required: false,
            serializedName: 'properties.value',
            type: {
              name: 'String'
            }
          },
          description: {
            required: false,
            readOnly: true,
            serializedName: 'properties.description',
            type: {
              name: 'String'
            }
          },
          defaultValue: {
            required: false,
            readOnly: true,
            serializedName: 'properties.defaultValue',
            type: {
              name: 'String'
            }
          },
          dataType: {
            required: false,
            readOnly: true,
            serializedName: 'properties.dataType',
            type: {
              name: 'String'
            }
          },
          allowedValues: {
            required: false,
            readOnly: true,
            serializedName: 'properties.allowedValues',
            type: {
              name: 'String'
            }
          },
          source: {
            required: false,
            serializedName: 'properties.source',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = Configuration;

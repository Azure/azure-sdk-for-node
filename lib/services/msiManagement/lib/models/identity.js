/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Describes an identity resource.
 *
 * @extends models['BaseResource']
 */
class Identity extends models['BaseResource'] {
  /**
   * Create a Identity.
   * @member {string} [id] The id of the created identity.
   * @member {string} [name] The name of the created identity.
   * @member {string} [location] The Azure region where the identity lives.
   * @member {object} [tags] Resource tags
   * @member {uuid} [tenantId] The id of the tenant which the identity belongs
   * to.
   * @member {uuid} [principalId] The id of the service principal object
   * associated with the created identity.
   * @member {uuid} [clientId] The id of the app associated with the identity.
   * This is a random generated UUID by MSI.
   * @member {string} [clientSecretUrl] The ManagedServiceIdentity DataPlane
   * URL that can be queried to obtain the identity credentials.
   * @member {string} [type] The type of resource i.e.
   * Microsoft.ManagedIdentity/userAssignedIdentities. Possible values include:
   * 'Microsoft.ManagedIdentity/userAssignedIdentities'
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of Identity
   *
   * @returns {object} metadata of Identity
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Identity',
      type: {
        name: 'Composite',
        className: 'Identity',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          tenantId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.tenantId',
            type: {
              name: 'String'
            }
          },
          principalId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.principalId',
            type: {
              name: 'String'
            }
          },
          clientId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.clientId',
            type: {
              name: 'String'
            }
          },
          clientSecretUrl: {
            required: false,
            readOnly: true,
            serializedName: 'properties.clientSecretUrl',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = Identity;

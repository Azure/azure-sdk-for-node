/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Configures how customer data is encrypted inside the Batch account. By
 * default, accounts are encrypted using a Microsoft managed key. For
 * additional control, a customer-managed key can be used instead.
 *
 */
class EncryptionProperties {
  /**
   * Create a EncryptionProperties.
   * @property {string} [keySource] Type of the key source. Possible values
   * include: 'Microsoft.Batch', 'Microsoft.KeyVault'
   * @property {object} [keyVaultProperties] Additional details when using
   * Microsoft.KeyVault
   * @property {string} [keyVaultProperties.keyIdentifier] Full path to the
   * versioned secret. Example
   * https://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053.
   * To be usable the following prerequisites must be met:
   *
   * The Batch Account has a System Assigned identity
   * The account identity has been granted Key/Get, Key/Unwrap and Key/Wrap
   * permissions
   * The KeyVault has soft-delete and purge protection enabled
   */
  constructor() {
  }

  /**
   * Defines the metadata of EncryptionProperties
   *
   * @returns {object} metadata of EncryptionProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'EncryptionProperties',
      type: {
        name: 'Composite',
        className: 'EncryptionProperties',
        modelProperties: {
          keySource: {
            required: false,
            serializedName: 'keySource',
            type: {
              name: 'Enum',
              allowedValues: [ 'Microsoft.Batch', 'Microsoft.KeyVault' ]
            }
          },
          keyVaultProperties: {
            required: false,
            serializedName: 'keyVaultProperties',
            type: {
              name: 'Composite',
              className: 'KeyVaultProperties'
            }
          }
        }
      }
    };
  }
}

module.exports = EncryptionProperties;

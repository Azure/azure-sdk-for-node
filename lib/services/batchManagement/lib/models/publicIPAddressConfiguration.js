/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The public IP Address configuration of the networking configuration of a
 * Pool.
 *
 */
class PublicIPAddressConfiguration {
  /**
   * Create a PublicIPAddressConfiguration.
   * @property {string} [provision] The provisioning type for Public IP
   * Addresses for the pool. The default value is BatchManaged. Possible values
   * include: 'BatchManaged', 'UserManaged', 'NoPublicIPAddresses'
   * @property {array} [ipAddressIds] The list of public IPs which the Batch
   * service will use when provisioning Compute Nodes. The number of IPs
   * specified here limits the maximum size of the Pool - 100 dedicated nodes
   * or 100 low-priority nodes can be allocated for each public IP. For
   * example, a pool needing 250 dedicated VMs would need at least 3 public IPs
   * specified. Each element of this collection is of the form:
   * /subscriptions/{subscription}/resourceGroups/{group}/providers/Microsoft.Network/publicIPAddresses/{ip}.
   */
  constructor() {
  }

  /**
   * Defines the metadata of PublicIPAddressConfiguration
   *
   * @returns {object} metadata of PublicIPAddressConfiguration
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PublicIPAddressConfiguration',
      type: {
        name: 'Composite',
        className: 'PublicIPAddressConfiguration',
        modelProperties: {
          provision: {
            required: false,
            serializedName: 'provision',
            type: {
              name: 'Enum',
              allowedValues: [ 'BatchManaged', 'UserManaged', 'NoPublicIPAddresses' ]
            }
          },
          ipAddressIds: {
            required: false,
            serializedName: 'ipAddressIds',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = PublicIPAddressConfiguration;

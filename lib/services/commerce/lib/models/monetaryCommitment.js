/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the MonetaryCommitment class.
 * @constructor
 * @member {object} [tieredDiscount] The list of key/value pairs for the
 * tiered meter rates, in the format 'key':'value' where key = price, and
 * value = the corresponding discount percentage. This field is used only by
 * offer terms of type 'Monetary Commitment'.
 * 
 */
function MonetaryCommitment() {
  MonetaryCommitment['super_'].call(this);
}

util.inherits(MonetaryCommitment, models['OfferTermInfo']);

/**
 * Defines the metadata of MonetaryCommitment
 *
 * @returns {object} metadata of MonetaryCommitment
 *
 */
MonetaryCommitment.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'Monetary Commitment',
    type: {
      name: 'Composite',
      className: 'MonetaryCommitment',
      modelProperties: {
        effectiveDate: {
          required: false,
          serializedName: 'EffectiveDate',
          type: {
            name: 'DateTime'
          }
        },
        excludedMeterIds: {
          required: false,
          serializedName: 'ExcludedMeterIds',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'UuidElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        name: {
          required: true,
          serializedName: 'Name',
          type: {
            name: 'String'
          }
        },
        tieredDiscount: {
          required: false,
          serializedName: 'TieredDiscount',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'NumberElementType',
                type: {
                  name: 'Number'
                }
            }
          }
        }
      }
    }
  };
};

module.exports = MonetaryCommitment;

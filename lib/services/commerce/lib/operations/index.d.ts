/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * UsageAggregates
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the UsageManagementClient.
 */
export interface UsageAggregates {

    /**
     * Query aggregated Azure subscription consumption data for a date range.
     *
     * @param {date} reportedstartTime The start of the time range to retrieve
     * data for.
     * 
     * @param {date} reportedEndTime The end of the time range to retrieve data
     * for.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {boolean} [options.showDetails] When set to true (default), the
     * aggregates are broken down into the instance metadata which is more
     * granular.
     * 
     * @param {string} [options.aggregationGranularity] Value is either daily
     * (default) or hourly to tell the API how to return the results grouped by
     * day or hour. Possible values include: 'Daily', 'Hourly'
     * 
     * @param {string} [options.continuationToken] Retrieved from previous calls,
     * this is the bookmark used for progress when the responses are paged.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    list(reportedstartTime: Date|string, reportedEndTime: Date|string, options: { showDetails? : boolean, aggregationGranularity? : string, continuationToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.UsageAggregationListResult>): void;
    list(reportedstartTime: Date|string, reportedEndTime: Date|string, callback: ServiceCallback<models.UsageAggregationListResult>): void;

    /**
     * Query aggregated Azure subscription consumption data for a date range.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     * 
     * @param {object} [options] Optional Parameters.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.UsageAggregationListResult>): void;
    listNext(nextPageLink: string, callback: ServiceCallback<models.UsageAggregationListResult>): void;
}

/**
 * @class
 * RateCard
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the UsageManagementClient.
 */
export interface RateCard {

    /**
     * Enables you to query for the resource/meter metadata and related prices
     * used in a given subscription by Offer ID, Currency, Locale and Region. The
     * metadata associated with the billing meters, including but not limited to
     * service names, types, resources, units of measure, and regions, is subject
     * to change at any time and without notice. If you intend to use this
     * billing data in an automated fashion, please use the billing meter GUID to
     * uniquely identify each billable item. If the billing meter GUID is
     * scheduled to change due to a new billing model, you will be notified in
     * advance of the change.
     *
     * @param {object} [options] Optional Parameters.
     * 
     * @param {string} [options.filter] The filter to apply on the operation. It
     * ONLY supports the 'eq' and 'and' logical operators at this time. All the 4
     * query parameters 'OfferDurableId',  'Currency', 'Locale', 'Region' are
     * required to be a part of the $filter.
     * 
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     * 
     * @param {ServiceCallback} [callback] callback function; see ServiceCallback
     * doc in ms-rest index.d.ts for details
     */
    get(options: { filter? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ResourceRateCardInfo>): void;
    get(callback: ServiceCallback<models.ResourceRateCardInfo>): void;
}

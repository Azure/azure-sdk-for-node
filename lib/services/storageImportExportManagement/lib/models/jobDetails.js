/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Specifies the job properties
 *
 */
class JobDetails {
  /**
   * Create a JobDetails.
   * @member {string} [storageAccountId] The resource identifier of the storage
   * account where data will be imported to or exported from.
   * @member {string} [jobType] The type of job
   * @member {object} [returnAddress] Specifies the return address information
   * for the job.
   * @member {string} [returnAddress.recipientName] The name of the recipient
   * who will receive the hard drives when they are returned.
   * @member {string} [returnAddress.streetAddress1] The first line of the
   * street address to use when returning the drives.
   * @member {string} [returnAddress.streetAddress2] The second line of the
   * street address to use when returning the drives.
   * @member {string} [returnAddress.city] The city name to use when returning
   * the drives.
   * @member {string} [returnAddress.stateOrProvince] The state or province to
   * use when returning the drives.
   * @member {string} [returnAddress.postalCode] The postal code to use when
   * returning the drives.
   * @member {string} [returnAddress.countryOrRegion] The country or region to
   * use when returning the drives.
   * @member {string} [returnAddress.phone] Phone number of the recipient of
   * the returned drives.
   * @member {string} [returnAddress.email] Email address of the recipient of
   * the returned drives.
   * @member {object} [returnShipping] Specifies the return carrier and
   * customer's account with the carrier.
   * @member {string} [returnShipping.carrierName] The carrier's name.
   * @member {string} [returnShipping.carrierAccountNumber] The customer's
   * account number with the carrier.
   * @member {object} [shippingInformation] Contains information about the
   * Microsoft datacenter to which the drives should be shipped.
   * @member {string} [shippingInformation.recipientName] The name of the
   * recipient who will receive the hard drives when they are returned.
   * @member {string} [shippingInformation.streetAddress1] The first line of
   * the street address to use when returning the drives.
   * @member {string} [shippingInformation.streetAddress2] The second line of
   * the street address to use when returning the drives.
   * @member {string} [shippingInformation.city] The city name to use when
   * returning the drives.
   * @member {string} [shippingInformation.stateOrProvince] The state or
   * province to use when returning the drives.
   * @member {string} [shippingInformation.postalCode] The postal code to use
   * when returning the drives.
   * @member {string} [shippingInformation.countryOrRegion] The country or
   * region to use when returning the drives.
   * @member {string} [shippingInformation.phone] Phone number of the recipient
   * of the returned drives.
   * @member {object} [deliveryPackage] Contains information about the package
   * being shipped by the customer to the Microsoft data center.
   * @member {string} [deliveryPackage.carrierName] The name of the carrier
   * that is used to ship the import or export drives.
   * @member {string} [deliveryPackage.trackingNumber] The tracking number of
   * the package.
   * @member {number} [deliveryPackage.driveCount] The number of drives
   * included in the package.
   * @member {string} [deliveryPackage.shipDate] The date when the package is
   * shipped.
   * @member {object} [returnPackage] Contains information about the package
   * being shipped from the Microsoft data center to the customer to return the
   * drives. The format is the same as the deliveryPackage property above. This
   * property is not included if the drives have not yet been returned.
   * @member {string} [returnPackage.carrierName] The name of the carrier that
   * is used to ship the import or export drives.
   * @member {string} [returnPackage.trackingNumber] The tracking number of the
   * package.
   * @member {number} [returnPackage.driveCount] The number of drives included
   * in the package.
   * @member {string} [returnPackage.shipDate] The date when the package is
   * shipped.
   * @member {string} [diagnosticsPath] The virtual blob directory to which the
   * copy logs and backups of drive manifest files (if enabled) will be stored.
   * @member {string} [logLevel] Default value is Error. Indicates whether
   * error logging or verbose logging will be enabled.
   * @member {boolean} [backupDriveManifest] Default value is false. Indicates
   * whether the manifest files on the drives should be copied to block blobs.
   * @member {string} [state] Current state of the job.
   * @member {boolean} [cancelRequested] Indicates whether a request has been
   * submitted to cancel the job.
   * @member {number} [percentComplete] Overall percentage completed for the
   * job.
   * @member {string} [incompleteBlobListUri] A blob path that points to a
   * block blob containing a list of blob names that were not exported due to
   * insufficient drive space. If all blobs were exported successfully, then
   * this element is not included in the response.
   * @member {array} [driveList] List of up to ten drives that comprise the
   * job. The drive list is a required element for an import job; it is not
   * specified for export jobs.
   * @member {object} [exportProperty] A property containing information about
   * the blobs to be exported for an export job. This property is included for
   * export jobs only.
   * @member {array} [exportProperty.blobPath] A collection of blob-path
   * strings.
   * @member {array} [exportProperty.blobPathPrefix] A collection of
   * blob-prefix strings.
   * @member {string} [exportProperty.blobListblobPath] The relative URI to the
   * block blob that contains the list of blob paths or blob path prefixes as
   * defined above, beginning with the container name. If the blob is in root
   * container, the URI must begin with $root.
   * @member {string} [provisioningState] Specifies the provisioning state of
   * the job.
   */
  constructor() {
  }

  /**
   * Defines the metadata of JobDetails
   *
   * @returns {object} metadata of JobDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'JobDetails',
      type: {
        name: 'Composite',
        className: 'JobDetails',
        modelProperties: {
          storageAccountId: {
            required: false,
            serializedName: 'storageAccountId',
            type: {
              name: 'String'
            }
          },
          jobType: {
            required: false,
            serializedName: 'jobType',
            type: {
              name: 'String'
            }
          },
          returnAddress: {
            required: false,
            serializedName: 'returnAddress',
            type: {
              name: 'Composite',
              className: 'ReturnAddress'
            }
          },
          returnShipping: {
            required: false,
            serializedName: 'returnShipping',
            type: {
              name: 'Composite',
              className: 'ReturnShipping'
            }
          },
          shippingInformation: {
            required: false,
            serializedName: 'shippingInformation',
            type: {
              name: 'Composite',
              className: 'ShippingInformation'
            }
          },
          deliveryPackage: {
            required: false,
            serializedName: 'deliveryPackage',
            type: {
              name: 'Composite',
              className: 'PackageInfomation'
            }
          },
          returnPackage: {
            required: false,
            serializedName: 'returnPackage',
            type: {
              name: 'Composite',
              className: 'PackageInfomation'
            }
          },
          diagnosticsPath: {
            required: false,
            serializedName: 'diagnosticsPath',
            type: {
              name: 'String'
            }
          },
          logLevel: {
            required: false,
            serializedName: 'logLevel',
            type: {
              name: 'String'
            }
          },
          backupDriveManifest: {
            required: false,
            serializedName: 'backupDriveManifest',
            type: {
              name: 'Boolean'
            }
          },
          state: {
            required: false,
            serializedName: 'state',
            type: {
              name: 'String'
            }
          },
          cancelRequested: {
            required: false,
            serializedName: 'cancelRequested',
            type: {
              name: 'Boolean'
            }
          },
          percentComplete: {
            required: false,
            serializedName: 'percentComplete',
            type: {
              name: 'Number'
            }
          },
          incompleteBlobListUri: {
            required: false,
            serializedName: 'incompleteBlobListUri',
            type: {
              name: 'String'
            }
          },
          driveList: {
            required: false,
            serializedName: 'driveList',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'DriveStatusElementType',
                  type: {
                    name: 'Composite',
                    className: 'DriveStatus'
                  }
              }
            }
          },
          exportProperty: {
            required: false,
            serializedName: 'export',
            type: {
              name: 'Composite',
              className: 'ExportModel'
            }
          },
          provisioningState: {
            required: false,
            serializedName: 'provisioningState',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = JobDetails;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Provides information about the drive's status
 *
 */
class DriveStatus {
  /**
   * Create a DriveStatus.
   * @member {string} [driveId] The drive's hardware serial number, without
   * spaces.
   * @member {string} [bitLockerKey] The BitLocker key used to encrypt the
   * drive.
   * @member {string} [manifestFile] The relative path of the manifest file on
   * the drive.
   * @member {string} [manifestHash] The Base16-encoded MD5 hash of the
   * manifest file on the drive.
   * @member {string} [driveHeaderHash] The drive header hash value.
   * @member {string} [state] The drive's current state. Possible values
   * include: 'Specified', 'Received', 'NeverReceived', 'Transferring',
   * 'Completed', 'CompletedMoreInfo', 'ShippedBack'
   * @member {string} [copyStatus] Detailed status about the data transfer
   * process. This field is not returned in the response until the drive is in
   * the Transferring state.
   * @member {number} [percentComplete] Percentage completed for the drive.
   * @member {string} [verboseLogUri] A URI that points to the blob containing
   * the verbose log for the data transfer operation.
   * @member {string} [errorLogUri] A URI that points to the blob containing
   * the error log for the data transfer operation.
   * @member {string} [manifestUri] A URI that points to the blob containing
   * the drive manifest file.
   * @member {number} [bytesSucceeded] Bytes successfully transferred for the
   * drive.
   */
  constructor() {
  }

  /**
   * Defines the metadata of DriveStatus
   *
   * @returns {object} metadata of DriveStatus
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DriveStatus',
      type: {
        name: 'Composite',
        className: 'DriveStatus',
        modelProperties: {
          driveId: {
            required: false,
            serializedName: 'driveId',
            type: {
              name: 'String'
            }
          },
          bitLockerKey: {
            required: false,
            serializedName: 'bitLockerKey',
            type: {
              name: 'String'
            }
          },
          manifestFile: {
            required: false,
            serializedName: 'manifestFile',
            type: {
              name: 'String'
            }
          },
          manifestHash: {
            required: false,
            serializedName: 'manifestHash',
            type: {
              name: 'String'
            }
          },
          driveHeaderHash: {
            required: false,
            serializedName: 'driveHeaderHash',
            type: {
              name: 'String'
            }
          },
          state: {
            required: false,
            serializedName: 'state',
            type: {
              name: 'String'
            }
          },
          copyStatus: {
            required: false,
            serializedName: 'copyStatus',
            type: {
              name: 'String'
            }
          },
          percentComplete: {
            required: false,
            serializedName: 'percentComplete',
            type: {
              name: 'Number'
            }
          },
          verboseLogUri: {
            required: false,
            serializedName: 'verboseLogUri',
            type: {
              name: 'String'
            }
          },
          errorLogUri: {
            required: false,
            serializedName: 'errorLogUri',
            type: {
              name: 'String'
            }
          },
          manifestUri: {
            required: false,
            serializedName: 'manifestUri',
            type: {
              name: 'String'
            }
          },
          bytesSucceeded: {
            required: false,
            serializedName: 'bytesSucceeded',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = DriveStatus;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The definition of a container registry operation.
 *
 */
class OperationDefinition {
  /**
   * Create a OperationDefinition.
   * @member {string} [origin] The origin information of the container registry
   * operation.
   * @member {string} [name] Operation name: {provider}/{resource}/{operation}.
   * @member {object} [display] The display information for the container
   * registry operation.
   * @member {string} [display.provider] The resource provider name:
   * Microsoft.ContainerRegistry.
   * @member {string} [display.resource] The resource on which the operation is
   * performed.
   * @member {string} [display.operation] The operation that users can perform.
   * @member {string} [display.description] The description for the operation.
   * @member {object} [serviceSpecification] The definition of Azure Monitoring
   * service.
   * @member {array} [serviceSpecification.metricSpecifications] A list of
   * Azure Monitoring metrics definition.
   */
  constructor() {
  }

  /**
   * Defines the metadata of OperationDefinition
   *
   * @returns {object} metadata of OperationDefinition
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'OperationDefinition',
      type: {
        name: 'Composite',
        className: 'OperationDefinition',
        modelProperties: {
          origin: {
            required: false,
            serializedName: 'origin',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          display: {
            required: false,
            serializedName: 'display',
            type: {
              name: 'Composite',
              className: 'OperationDisplayDefinition'
            }
          },
          serviceSpecification: {
            required: false,
            serializedName: 'properties.serviceSpecification',
            type: {
              name: 'Composite',
              className: 'OperationServiceSpecificationDefinition'
            }
          }
        }
      }
    };
  }
}

module.exports = OperationDefinition;

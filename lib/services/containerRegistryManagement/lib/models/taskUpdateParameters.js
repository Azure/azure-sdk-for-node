/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The parameters for updating a task.
 *
 */
class TaskUpdateParameters {
  /**
   * Create a TaskUpdateParameters.
   * @property {object} [identity] Identity for the resource.
   * @property {string} [identity.principalId] The principal ID of resource
   * identity.
   * @property {string} [identity.tenantId] The tenant ID of resource.
   * @property {string} [identity.type] The identity type. Possible values
   * include: 'SystemAssigned', 'UserAssigned', 'SystemAssigned, UserAssigned',
   * 'None'
   * @property {object} [identity.userAssignedIdentities] The list of user
   * identities associated with the resource. The user identity
   * dictionary key references will be ARM resource ids in the form:
   * '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/
   * providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.
   * @property {string} [status] The current status of task. Possible values
   * include: 'Disabled', 'Enabled'
   * @property {object} [platform] The platform properties against which the
   * run has to happen.
   * @property {string} [platform.os] The operating system type required for
   * the run. Possible values include: 'Windows', 'Linux'
   * @property {string} [platform.architecture] The OS architecture. Possible
   * values include: 'amd64', 'x86', 'arm'
   * @property {string} [platform.variant] Variant of the CPU. Possible values
   * include: 'v6', 'v7', 'v8'
   * @property {object} [agentConfiguration] The machine configuration of the
   * run agent.
   * @property {number} [agentConfiguration.cpu] The CPU configuration in terms
   * of number of cores required for the run.
   * @property {number} [timeout] Run timeout in seconds.
   * @property {object} [step] The properties for updating a task step.
   * @property {string} [step.contextPath] The URL(absolute or relative) of the
   * source context for the task step.
   * @property {string} [step.contextAccessToken] The token (git PAT or SAS
   * token of storage account blob) associated with the context for a step.
   * @property {string} [step.type] Polymorphic Discriminator
   * @property {object} [trigger] The properties for updating trigger
   * properties.
   * @property {array} [trigger.timerTriggers] The collection of timer
   * triggers.
   * @property {array} [trigger.sourceTriggers] The collection of triggers
   * based on source code repository.
   * @property {object} [trigger.baseImageTrigger] The trigger based on base
   * image dependencies.
   * @property {string} [trigger.baseImageTrigger.baseImageTriggerType] The
   * type of the auto trigger for base image dependency updates. Possible
   * values include: 'All', 'Runtime'
   * @property {string} [trigger.baseImageTrigger.status] The current status of
   * trigger. Possible values include: 'Disabled', 'Enabled'
   * @property {string} [trigger.baseImageTrigger.name] The name of the
   * trigger.
   * @property {object} [credentials] The parameters that describes a set of
   * credentials that will be used when this run is invoked.
   * @property {object} [credentials.sourceRegistry] Describes the credential
   * parameters for accessing the source registry.
   * @property {string} [credentials.sourceRegistry.loginMode] The
   * authentication mode which determines the source registry login scope. The
   * credentials for the source registry
   * will be generated using the given scope. These credentials will be used to
   * login to
   * the source registry during the run. Possible values include: 'None',
   * 'Default'
   * @property {object} [credentials.customRegistries] Describes the credential
   * parameters for accessing other custom registries. The key
   * for the dictionary item will be the registry login server
   * (myregistry.azurecr.io) and
   * the value of the item will be the registry credentials for accessing the
   * registry.
   * @property {object} [tags] The ARM resource tags.
   */
  constructor() {
  }

  /**
   * Defines the metadata of TaskUpdateParameters
   *
   * @returns {object} metadata of TaskUpdateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TaskUpdateParameters',
      type: {
        name: 'Composite',
        className: 'TaskUpdateParameters',
        modelProperties: {
          identity: {
            required: false,
            serializedName: 'identity',
            type: {
              name: 'Composite',
              className: 'IdentityProperties'
            }
          },
          status: {
            required: false,
            serializedName: 'properties.status',
            type: {
              name: 'String'
            }
          },
          platform: {
            required: false,
            serializedName: 'properties.platform',
            type: {
              name: 'Composite',
              className: 'PlatformUpdateParameters'
            }
          },
          agentConfiguration: {
            required: false,
            serializedName: 'properties.agentConfiguration',
            type: {
              name: 'Composite',
              className: 'AgentProperties'
            }
          },
          timeout: {
            required: false,
            serializedName: 'properties.timeout',
            type: {
              name: 'Number'
            }
          },
          step: {
            required: false,
            serializedName: 'properties.step',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'type',
                clientName: 'type'
              },
              uberParent: 'TaskStepUpdateParameters',
              className: 'TaskStepUpdateParameters'
            }
          },
          trigger: {
            required: false,
            serializedName: 'properties.trigger',
            type: {
              name: 'Composite',
              className: 'TriggerUpdateParameters'
            }
          },
          credentials: {
            required: false,
            serializedName: 'properties.credentials',
            type: {
              name: 'Composite',
              className: 'Credentials'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = TaskUpdateParameters;

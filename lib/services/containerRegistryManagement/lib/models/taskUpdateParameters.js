/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The parameters for updating a task.
 *
 */
class TaskUpdateParameters {
  /**
   * Create a TaskUpdateParameters.
   * @member {string} [status] The current status of task. Possible values
   * include: 'Disabled', 'Enabled'
   * @member {object} [platform] The platform properties against which the run
   * has to happen.
   * @member {string} [platform.os] The operating system type required for the
   * run. Possible values include: 'Windows', 'Linux'
   * @member {string} [platform.architecture] The OS architecture. Possible
   * values include: 'amd64', 'x86', 'arm'
   * @member {string} [platform.variant] Variant of the CPU. Possible values
   * include: 'v6', 'v7', 'v8'
   * @member {object} [agentConfiguration] The machine configuration of the run
   * agent.
   * @member {number} [agentConfiguration.cpu] The CPU configuration in terms
   * of number of cores required for the run.
   * @member {number} [timeout] Run timeout in seconds.
   * @member {object} [step] The properties for updating a task step.
   * @member {string} [step.type] Polymorphic Discriminator
   * @member {object} [trigger] The properties for updating trigger properties.
   * @member {array} [trigger.sourceTriggers] The collection of triggers based
   * on source code repository.
   * @member {object} [trigger.baseImageTrigger] The trigger based on base
   * image dependencies.
   * @member {string} [trigger.baseImageTrigger.baseImageTriggerType] The type
   * of the auto trigger for base image dependency updates. Possible values
   * include: 'All', 'Runtime'
   * @member {string} [trigger.baseImageTrigger.status] The current status of
   * build trigger. Possible values include: 'Disabled', 'Enabled'
   * @member {string} [trigger.baseImageTrigger.name] The name of the trigger.
   * @member {object} [tags] The ARM resource tags.
   */
  constructor() {
  }

  /**
   * Defines the metadata of TaskUpdateParameters
   *
   * @returns {object} metadata of TaskUpdateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TaskUpdateParameters',
      type: {
        name: 'Composite',
        className: 'TaskUpdateParameters',
        modelProperties: {
          status: {
            required: false,
            serializedName: 'properties.status',
            type: {
              name: 'String'
            }
          },
          platform: {
            required: false,
            serializedName: 'properties.platform',
            type: {
              name: 'Composite',
              className: 'PlatformUpdateParameters'
            }
          },
          agentConfiguration: {
            required: false,
            serializedName: 'properties.agentConfiguration',
            type: {
              name: 'Composite',
              className: 'AgentProperties'
            }
          },
          timeout: {
            required: false,
            serializedName: 'properties.timeout',
            type: {
              name: 'Number'
            }
          },
          step: {
            required: false,
            serializedName: 'properties.step',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'type',
                clientName: 'type'
              },
              uberParent: 'TaskStepUpdateParameters',
              className: 'TaskStepUpdateParameters'
            }
          },
          trigger: {
            required: false,
            serializedName: 'properties.trigger',
            type: {
              name: 'Composite',
              className: 'TriggerUpdateParameters'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = TaskUpdateParameters;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * An object that represents policies for a container registry.
 *
 */
class RegistryPolicies {
  /**
   * Create a RegistryPolicies.
   * @member {object} [quarantinePolicy] An object that represents quarantine
   * policy for a container registry.
   * @member {string} [quarantinePolicy.status] The value that indicates
   * whether the policy is enabled or not. Possible values include: 'enabled',
   * 'disabled'
   * @member {object} [trustPolicy] An object that represents content trust
   * policy for a container registry.
   * @member {string} [trustPolicy.type] The type of trust policy. Possible
   * values include: 'Notary'
   * @member {string} [trustPolicy.status] The value that indicates whether the
   * policy is enabled or not. Possible values include: 'enabled', 'disabled'
   */
  constructor() {
  }

  /**
   * Defines the metadata of RegistryPolicies
   *
   * @returns {object} metadata of RegistryPolicies
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RegistryPolicies',
      type: {
        name: 'Composite',
        className: 'RegistryPolicies',
        modelProperties: {
          quarantinePolicy: {
            required: false,
            serializedName: 'quarantinePolicy',
            type: {
              name: 'Composite',
              className: 'QuarantinePolicy'
            }
          },
          trustPolicy: {
            required: false,
            serializedName: 'trustPolicy',
            type: {
              name: 'Composite',
              className: 'TrustPolicy'
            }
          }
        }
      }
    };
  }
}

module.exports = RegistryPolicies;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The request parameters for a scheduling run against a task file.
 *
 * @extends models['RunRequest']
 */
class FileTaskRunRequest extends models['RunRequest'] {
  /**
   * Create a FileTaskRunRequest.
   * @property {string} taskFilePath The template/definition file path relative
   * to the source.
   * @property {string} [valuesFilePath] The values/parameters file path
   * relative to the source.
   * @property {array} [values] The collection of overridable values that can
   * be passed when running a task.
   * @property {number} [timeout] Run timeout in seconds. Default value: 3600 .
   * @property {object} platform The platform properties against which the run
   * has to happen.
   * @property {string} [platform.os] The operating system type required for
   * the run. Possible values include: 'Windows', 'Linux'
   * @property {string} [platform.architecture] The OS architecture. Possible
   * values include: 'amd64', 'x86', 'arm'
   * @property {string} [platform.variant] Variant of the CPU. Possible values
   * include: 'v6', 'v7', 'v8'
   * @property {object} [agentConfiguration] The machine configuration of the
   * run agent.
   * @property {number} [agentConfiguration.cpu] The CPU configuration in terms
   * of number of cores required for the run.
   * @property {string} [sourceLocation] The URL(absolute or relative) of the
   * source context. It can be an URL to a tar or git repository.
   * If it is relative URL, the relative path should be obtained from calling
   * listBuildSourceUploadUrl API.
   * @property {object} [credentials] The properties that describes a set of
   * credentials that will be used when this run is invoked.
   * @property {object} [credentials.sourceRegistry] Describes the credential
   * parameters for accessing the source registry.
   * @property {string} [credentials.sourceRegistry.loginMode] The
   * authentication mode which determines the source registry login scope. The
   * credentials for the source registry
   * will be generated using the given scope. These credentials will be used to
   * login to
   * the source registry during the run. Possible values include: 'None',
   * 'Default'
   * @property {object} [credentials.customRegistries] Describes the credential
   * parameters for accessing other custom registries. The key
   * for the dictionary item will be the registry login server
   * (myregistry.azurecr.io) and
   * the value of the item will be the registry credentials for accessing the
   * registry.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of FileTaskRunRequest
   *
   * @returns {object} metadata of FileTaskRunRequest
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'FileTaskRunRequest',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'type',
          clientName: 'type'
        },
        uberParent: 'RunRequest',
        className: 'FileTaskRunRequest',
        modelProperties: {
          isArchiveEnabled: {
            required: false,
            serializedName: 'isArchiveEnabled',
            defaultValue: false,
            type: {
              name: 'Boolean'
            }
          },
          type: {
            required: true,
            serializedName: 'type',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          taskFilePath: {
            required: true,
            serializedName: 'taskFilePath',
            type: {
              name: 'String'
            }
          },
          valuesFilePath: {
            required: false,
            serializedName: 'valuesFilePath',
            type: {
              name: 'String'
            }
          },
          values: {
            required: false,
            serializedName: 'values',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'SetValueElementType',
                  type: {
                    name: 'Composite',
                    className: 'SetValue'
                  }
              }
            }
          },
          timeout: {
            required: false,
            serializedName: 'timeout',
            defaultValue: 3600,
            constraints: {
              InclusiveMaximum: 28800,
              InclusiveMinimum: 300
            },
            type: {
              name: 'Number'
            }
          },
          platform: {
            required: true,
            serializedName: 'platform',
            type: {
              name: 'Composite',
              className: 'PlatformProperties'
            }
          },
          agentConfiguration: {
            required: false,
            serializedName: 'agentConfiguration',
            type: {
              name: 'Composite',
              className: 'AgentProperties'
            }
          },
          sourceLocation: {
            required: false,
            serializedName: 'sourceLocation',
            type: {
              name: 'String'
            }
          },
          credentials: {
            required: false,
            serializedName: 'credentials',
            type: {
              name: 'Composite',
              className: 'Credentials'
            }
          }
        }
      }
    };
  }
}

module.exports = FileTaskRunRequest;

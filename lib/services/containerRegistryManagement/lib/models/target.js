/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The target of the event.
 *
 */
class Target {
  /**
   * Create a Target.
   * @property {string} [mediaType] The MIME type of the referenced object.
   * @property {number} [size] The number of bytes of the content. Same as
   * Length field.
   * @property {string} [digest] The digest of the content, as defined by the
   * Registry V2 HTTP API Specification.
   * @property {number} [length] The number of bytes of the content. Same as
   * Size field.
   * @property {string} [repository] The repository name.
   * @property {string} [url] The direct URL to the content.
   * @property {string} [tag] The tag name.
   * @property {string} [name] The name of the artifact.
   * @property {string} [version] The version of the artifact.
   */
  constructor() {
  }

  /**
   * Defines the metadata of Target
   *
   * @returns {object} metadata of Target
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Target',
      type: {
        name: 'Composite',
        className: 'Target',
        modelProperties: {
          mediaType: {
            required: false,
            serializedName: 'mediaType',
            type: {
              name: 'String'
            }
          },
          size: {
            required: false,
            serializedName: 'size',
            type: {
              name: 'Number'
            }
          },
          digest: {
            required: false,
            serializedName: 'digest',
            type: {
              name: 'String'
            }
          },
          length: {
            required: false,
            serializedName: 'length',
            type: {
              name: 'Number'
            }
          },
          repository: {
            required: false,
            serializedName: 'repository',
            type: {
              name: 'String'
            }
          },
          url: {
            required: false,
            serializedName: 'url',
            type: {
              name: 'String'
            }
          },
          tag: {
            required: false,
            serializedName: 'tag',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          version: {
            required: false,
            serializedName: 'version',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = Target;

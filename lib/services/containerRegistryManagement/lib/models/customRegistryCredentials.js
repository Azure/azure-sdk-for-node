/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Describes the credentials that will be used to access a custom registry
 * during a run.
 *
 */
class CustomRegistryCredentials {
  /**
   * Create a CustomRegistryCredentials.
   * @property {object} [userName] The username for logging into the custom
   * registry.
   * @property {string} [userName.value] The value of the secret. The format of
   * this value will be determined
   * based on the type of the secret object. If the type is Opaque, the value
   * will be
   * used as is without any modification.
   * @property {string} [userName.type] The type of the secret object which
   * determines how the value of the secret object has to be
   * interpreted. Possible values include: 'Opaque', 'Vaultsecret'
   * @property {object} [password] The password for logging into the custom
   * registry. The password is a secret
   * object that allows multiple ways of providing the value for it.
   * @property {string} [password.value] The value of the secret. The format of
   * this value will be determined
   * based on the type of the secret object. If the type is Opaque, the value
   * will be
   * used as is without any modification.
   * @property {string} [password.type] The type of the secret object which
   * determines how the value of the secret object has to be
   * interpreted. Possible values include: 'Opaque', 'Vaultsecret'
   * @property {string} [identity] Indicates the managed identity assigned to
   * the custom credential. If a user-assigned identity
   * this value is the Client ID. If a system-assigned identity, the value will
   * be `system`. In
   * the case of a system-assigned identity, the Client ID will be determined
   * by the runner. This
   * identity may be used to authenticate to key vault to retrieve credentials
   * or it may be the only
   * source of authentication used for accessing the registry.
   */
  constructor() {
  }

  /**
   * Defines the metadata of CustomRegistryCredentials
   *
   * @returns {object} metadata of CustomRegistryCredentials
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'CustomRegistryCredentials',
      type: {
        name: 'Composite',
        className: 'CustomRegistryCredentials',
        modelProperties: {
          userName: {
            required: false,
            serializedName: 'userName',
            type: {
              name: 'Composite',
              className: 'SecretObject'
            }
          },
          password: {
            required: false,
            serializedName: 'password',
            type: {
              name: 'Composite',
              className: 'SecretObject'
            }
          },
          identity: {
            required: false,
            serializedName: 'identity',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = CustomRegistryCredentials;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The properties of a trigger.
 *
 */
class TriggerProperties {
  /**
   * Create a TriggerProperties.
   * @property {array} [timerTriggers] The collection of timer triggers.
   * @property {array} [sourceTriggers] The collection of triggers based on
   * source code repository.
   * @property {object} [baseImageTrigger] The trigger based on base image
   * dependencies.
   * @property {string} [baseImageTrigger.baseImageTriggerType] The type of the
   * auto trigger for base image dependency updates. Possible values include:
   * 'All', 'Runtime'
   * @property {string} [baseImageTrigger.status] The current status of
   * trigger. Possible values include: 'Disabled', 'Enabled'
   * @property {string} [baseImageTrigger.name] The name of the trigger.
   */
  constructor() {
  }

  /**
   * Defines the metadata of TriggerProperties
   *
   * @returns {object} metadata of TriggerProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TriggerProperties',
      type: {
        name: 'Composite',
        className: 'TriggerProperties',
        modelProperties: {
          timerTriggers: {
            required: false,
            serializedName: 'timerTriggers',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'TimerTriggerElementType',
                  type: {
                    name: 'Composite',
                    className: 'TimerTrigger'
                  }
              }
            }
          },
          sourceTriggers: {
            required: false,
            serializedName: 'sourceTriggers',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'SourceTriggerElementType',
                  type: {
                    name: 'Composite',
                    className: 'SourceTrigger'
                  }
              }
            }
          },
          baseImageTrigger: {
            required: false,
            serializedName: 'baseImageTrigger',
            type: {
              name: 'Composite',
              className: 'BaseImageTrigger'
            }
          }
        }
      }
    };
  }
}

module.exports = TriggerProperties;

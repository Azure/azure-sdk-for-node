/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the MetricSettings class.
 * @constructor
 * Part of MultiTenantDiagnosticSettings. Specifies the settings for a
 * particular metric.
 *
 * @member {moment.duration} timeGrain the timegrain of the metric in ISO8601
 * format.
 * 
 * @member {boolean} enabled a value indicating whether this timegrain is
 * enabled.
 * 
 * @member {object} [retentionPolicy] the retention policy for this timegrain.
 * 
 * @member {boolean} [retentionPolicy.enabled] a value indicating whether the
 * retention policy is enabled.
 * 
 * @member {number} [retentionPolicy.days] the number of days for the retention
 * in days. A value of 0 will retain the events indefinitely.
 * 
 */
function MetricSettings() {
}

/**
 * Defines the metadata of MetricSettings
 *
 * @returns {object} metadata of MetricSettings
 *
 */
MetricSettings.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'MetricSettings',
    type: {
      name: 'Composite',
      className: 'MetricSettings',
      modelProperties: {
        timeGrain: {
          required: true,
          serializedName: 'timeGrain',
          type: {
            name: 'TimeSpan'
          }
        },
        enabled: {
          required: true,
          serializedName: 'enabled',
          type: {
            name: 'Boolean'
          }
        },
        retentionPolicy: {
          required: false,
          serializedName: 'retentionPolicy',
          type: {
            name: 'Composite',
            className: 'RetentionPolicy'
          }
        }
      }
    }
  };
};

module.exports = MetricSettings;

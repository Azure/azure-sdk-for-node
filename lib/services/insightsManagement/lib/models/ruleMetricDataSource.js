/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the RuleMetricDataSource class.
 * @constructor
 * A rule metric data source. The discriminator value is always
 * RuleMetricDataSource in this case.
 *
 * @member {string} [resourceUri] the resource identifier of the resource the
 * rule monitors.
 * 
 * @member {string} [metricName] the name of the metric that defines what the
 * rule monitors.
 * 
 */
function RuleMetricDataSource() {
  RuleMetricDataSource['super_'].call(this);
}

util.inherits(RuleMetricDataSource, models['RuleDataSource']);

/**
 * Defines the metadata of RuleMetricDataSource
 *
 * @returns {object} metadata of RuleMetricDataSource
 *
 */
RuleMetricDataSource.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource',
    type: {
      name: 'Composite',
      className: 'RuleMetricDataSource',
      modelProperties: {
        odatatype: {
          required: true,
          serializedName: 'odata\\.type',
          type: {
            name: 'String'
          }
        },
        resourceUri: {
          required: false,
          serializedName: 'resourceUri',
          type: {
            name: 'String'
          }
        },
        metricName: {
          required: false,
          serializedName: 'metricName',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = RuleMetricDataSource;

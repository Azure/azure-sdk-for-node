/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Copy progress.
 *
 */
class CopyProgress {
  /**
   * Create a CopyProgress.
   * @member {string} [storageAccountName] Name of the storage account where
   * the data needs to be uploaded.
   * @member {string} [accountId] Id of the account where the data needs to be
   * uploaded.
   * @member {number} [bytesSentToCloud] Amount of data uploaded by the job as
   * of now.
   * @member {number} [totalBytesToProcess] Total amount of data to be
   * processed by the job.
   * @member {number} [filesProcessed] Number of files processed by the job as
   * of now.
   * @member {number} [totalFilesToProcess] Total number of files to be
   * processed by the job.
   */
  constructor() {
  }

  /**
   * Defines the metadata of CopyProgress
   *
   * @returns {object} metadata of CopyProgress
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'CopyProgress',
      type: {
        name: 'Composite',
        className: 'CopyProgress',
        modelProperties: {
          storageAccountName: {
            required: false,
            readOnly: true,
            serializedName: 'storageAccountName',
            type: {
              name: 'String'
            }
          },
          accountId: {
            required: false,
            readOnly: true,
            serializedName: 'accountId',
            type: {
              name: 'String'
            }
          },
          bytesSentToCloud: {
            required: false,
            readOnly: true,
            serializedName: 'bytesSentToCloud',
            type: {
              name: 'Number'
            }
          },
          totalBytesToProcess: {
            required: false,
            readOnly: true,
            serializedName: 'totalBytesToProcess',
            type: {
              name: 'Number'
            }
          },
          filesProcessed: {
            required: false,
            readOnly: true,
            serializedName: 'filesProcessed',
            type: {
              name: 'Number'
            }
          },
          totalFilesToProcess: {
            required: false,
            readOnly: true,
            serializedName: 'totalFilesToProcess',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = CopyProgress;

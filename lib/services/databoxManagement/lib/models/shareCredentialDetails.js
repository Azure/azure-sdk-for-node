/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Credential details of the shares in account.
 *
 */
class ShareCredentialDetails {
  /**
   * Create a ShareCredentialDetails.
   * @member {string} [shareName] Name of the share.
   * @member {string} [shareType] Type of the share. Possible values include:
   * 'UnknownType', 'HCS', 'BlockBlob', 'PageBlob', 'AzureFile', 'ManagedDisk'
   * @member {string} [userName] User name for the share.
   * @member {string} [password] Password for the share.
   * @member {array} [supportedAccessProtocols] Access protocols supported on
   * the device.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ShareCredentialDetails
   *
   * @returns {object} metadata of ShareCredentialDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ShareCredentialDetails',
      type: {
        name: 'Composite',
        className: 'ShareCredentialDetails',
        modelProperties: {
          shareName: {
            required: false,
            readOnly: true,
            serializedName: 'shareName',
            type: {
              name: 'String'
            }
          },
          shareType: {
            required: false,
            readOnly: true,
            serializedName: 'shareType',
            type: {
              name: 'Enum',
              allowedValues: [ 'UnknownType', 'HCS', 'BlockBlob', 'PageBlob', 'AzureFile', 'ManagedDisk' ]
            }
          },
          userName: {
            required: false,
            readOnly: true,
            serializedName: 'userName',
            type: {
              name: 'String'
            }
          },
          password: {
            required: false,
            readOnly: true,
            serializedName: 'password',
            type: {
              name: 'String'
            }
          },
          supportedAccessProtocols: {
            required: false,
            readOnly: true,
            serializedName: 'supportedAccessProtocols',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'AccessProtocolElementType',
                  type: {
                    name: 'Enum',
                    allowedValues: [ 'SMB', 'NFS' ]
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = ShareCredentialDetails;

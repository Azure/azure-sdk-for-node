/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Job details.
 *
 */
class JobDetails {
  /**
   * Create a JobDetails.
   * @property {number} [expectedDataSizeInTeraBytes] The expected size of the
   * data, which needs to be transferred in this job, in terabytes.
   * @property {array} [jobStages] List of stages that run in the job.
   * @property {object} contactDetails Contact details for notification and
   * shipping.
   * @property {string} [contactDetails.contactName] Contact name of the
   * person.
   * @property {string} [contactDetails.phone] Phone number of the contact
   * person.
   * @property {string} [contactDetails.phoneExtension] Phone extension number
   * of the contact person.
   * @property {string} [contactDetails.mobile] Mobile number of the contact
   * person.
   * @property {array} [contactDetails.emailList] List of Email-ids to be
   * notified about job progress.
   * @property {array} [contactDetails.notificationPreference] Notification
   * preference for a job stage.
   * @property {object} shippingAddress Shipping address of the customer.
   * @property {string} [shippingAddress.streetAddress1] Street Address line 1.
   * @property {string} [shippingAddress.streetAddress2] Street Address line 2.
   * @property {string} [shippingAddress.streetAddress3] Street Address line 3.
   * @property {string} [shippingAddress.city] Name of the City.
   * @property {string} [shippingAddress.stateOrProvince] Name of the State or
   * Province.
   * @property {string} [shippingAddress.country] Name of the Country.
   * @property {string} [shippingAddress.postalCode] Postal code.
   * @property {string} [shippingAddress.zipExtendedCode] Extended Zip Code.
   * @property {string} [shippingAddress.companyName] Name of the company.
   * @property {string} [shippingAddress.addressType] Type of address. Possible
   * values include: 'None', 'Residential', 'Commercial'
   * @property {object} [deliveryPackage] Delivery package shipping details.
   * @property {string} [deliveryPackage.carrierName] Name of the carrier.
   * @property {string} [deliveryPackage.trackingId] Tracking Id of shipment.
   * @property {string} [deliveryPackage.trackingUrl] Url where shipment can be
   * tracked.
   * @property {object} [returnPackage] Return package shipping details.
   * @property {string} [returnPackage.carrierName] Name of the carrier.
   * @property {string} [returnPackage.trackingId] Tracking Id of shipment.
   * @property {string} [returnPackage.trackingUrl] Url where shipment can be
   * tracked.
   * @property {array} destinationAccountDetails Destination account details.
   * @property {array} [errorDetails] Error details for failure. This is
   * optional.
   * @property {object} [preferences] Preferences for the order.
   * @property {array} [preferences.preferredDataCenterRegion]
   * @property {array} [copyLogDetails] List of copy log details.
   * @property {string} [reverseShipmentLabelSasKey] Shared access key to
   * download the return shipment label
   * @property {string} [chainOfCustodySasKey] Shared access key to download
   * the chain of custody logs
   * @property {string} jobDetailsType Polymorphic Discriminator
   */
  constructor() {
  }

  /**
   * Defines the metadata of JobDetails
   *
   * @returns {object} metadata of JobDetails
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'JobDetails',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'jobDetailsType',
          clientName: 'jobDetailsType'
        },
        uberParent: 'JobDetails',
        className: 'JobDetails',
        modelProperties: {
          expectedDataSizeInTeraBytes: {
            required: false,
            serializedName: 'expectedDataSizeInTeraBytes',
            type: {
              name: 'Number'
            }
          },
          jobStages: {
            required: false,
            readOnly: true,
            serializedName: 'jobStages',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'JobStagesElementType',
                  type: {
                    name: 'Composite',
                    className: 'JobStages'
                  }
              }
            }
          },
          contactDetails: {
            required: true,
            serializedName: 'contactDetails',
            type: {
              name: 'Composite',
              className: 'ContactDetails'
            }
          },
          shippingAddress: {
            required: true,
            serializedName: 'shippingAddress',
            type: {
              name: 'Composite',
              className: 'ShippingAddress'
            }
          },
          deliveryPackage: {
            required: false,
            readOnly: true,
            serializedName: 'deliveryPackage',
            type: {
              name: 'Composite',
              className: 'PackageShippingDetails'
            }
          },
          returnPackage: {
            required: false,
            readOnly: true,
            serializedName: 'returnPackage',
            type: {
              name: 'Composite',
              className: 'PackageShippingDetails'
            }
          },
          destinationAccountDetails: {
            required: true,
            serializedName: 'destinationAccountDetails',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'DestinationAccountDetailsElementType',
                  type: {
                    name: 'Composite',
                    polymorphicDiscriminator: {
                      serializedName: 'dataDestinationType',
                      clientName: 'dataDestinationType'
                    },
                    uberParent: 'DestinationAccountDetails',
                    className: 'DestinationAccountDetails'
                  }
              }
            }
          },
          errorDetails: {
            required: false,
            readOnly: true,
            serializedName: 'errorDetails',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'JobErrorDetailsElementType',
                  type: {
                    name: 'Composite',
                    className: 'JobErrorDetails'
                  }
              }
            }
          },
          preferences: {
            required: false,
            serializedName: 'preferences',
            type: {
              name: 'Composite',
              className: 'Preferences'
            }
          },
          copyLogDetails: {
            required: false,
            readOnly: true,
            serializedName: 'copyLogDetails',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'CopyLogDetailsElementType',
                  type: {
                    name: 'Composite',
                    polymorphicDiscriminator: {
                      serializedName: 'copyLogDetailsType',
                      clientName: 'copyLogDetailsType'
                    },
                    uberParent: 'CopyLogDetails',
                    className: 'CopyLogDetails'
                  }
              }
            }
          },
          reverseShipmentLabelSasKey: {
            required: false,
            readOnly: true,
            serializedName: 'reverseShipmentLabelSasKey',
            type: {
              name: 'String'
            }
          },
          chainOfCustodySasKey: {
            required: false,
            readOnly: true,
            serializedName: 'chainOfCustodySasKey',
            type: {
              name: 'String'
            }
          },
          jobDetailsType: {
            required: true,
            serializedName: 'jobDetailsType',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = JobDetails;

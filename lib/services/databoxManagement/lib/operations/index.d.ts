/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the DataBoxManagementClient.
 */
export interface Operations {


    /**
     * This method gets all the operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationList>>;

    /**
     * This method gets all the operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationList>;
    list(callback: ServiceCallback<models.OperationList>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationList>): void;


    /**
     * This method gets all the operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationList>>;

    /**
     * This method gets all the operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.OperationList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationList>): void;
}

/**
 * @class
 * Jobs
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the DataBoxManagementClient.
 */
export interface Jobs {


    /**
     * Lists all the jobs available under the subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.skipToken] $skipToken is supported on Get list of
     * jobs, which provides the next page in the list of jobs.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobResourceList>>;

    /**
     * Lists all the jobs available under the subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.skipToken] $skipToken is supported on Get list of
     * jobs, which provides the next page in the list of jobs.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobResourceList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.JobResourceList>;
    list(callback: ServiceCallback<models.JobResourceList>): void;
    list(options: { skipToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobResourceList>): void;


    /**
     * Lists all the jobs available under the given resource group.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.skipToken] $skipToken is supported on Get list of
     * jobs, which provides the next page in the list of jobs.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobResourceList>>;

    /**
     * Lists all the jobs available under the given resource group.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.skipToken] $skipToken is supported on Get list of
     * jobs, which provides the next page in the list of jobs.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobResourceList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { skipToken? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.JobResourceList>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.JobResourceList>): void;
    listByResourceGroup(resourceGroupName: string, options: { skipToken? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobResourceList>): void;


    /**
     * Gets information about the specified job.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.expand] $expand is supported on details parameter
     * for job, which provides details on the job stages.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, jobName: string, options?: { expand? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobResource>>;

    /**
     * Gets information about the specified job.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.expand] $expand is supported on details parameter
     * for job, which provides details on the job stages.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, jobName: string, options?: { expand? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.JobResource>;
    get(resourceGroupName: string, jobName: string, callback: ServiceCallback<models.JobResource>): void;
    get(resourceGroupName: string, jobName: string, options: { expand? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobResource>): void;


    /**
     * Creates a new job with the specified parameters. Existing job cannot be
     * updated with this API and should instead be updated with the Update job API.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} jobResource Job details from request body.
     *
     * @param {object} [jobResource.details] Details of a job run. This field will
     * only be sent for expand details filter.
     *
     * @param {number} [jobResource.details.expectedDataSizeInTeraBytes] The
     * expected size of the data, which needs to be transferred in this job, in
     * terabytes.
     *
     * @param {object} jobResource.details.contactDetails Contact details for
     * notification and shipping.
     *
     * @param {string} jobResource.details.contactDetails.contactName Contact name
     * of the person.
     *
     * @param {string} jobResource.details.contactDetails.phone Phone number of the
     * contact person.
     *
     * @param {string} [jobResource.details.contactDetails.phoneExtension] Phone
     * extension number of the contact person.
     *
     * @param {string} [jobResource.details.contactDetails.mobile] Mobile number of
     * the contact person.
     *
     * @param {array} jobResource.details.contactDetails.emailList List of
     * Email-ids to be notified about job progress.
     *
     * @param {array} [jobResource.details.contactDetails.notificationPreference]
     * Notification preference for a job stage.
     *
     * @param {object} jobResource.details.shippingAddress Shipping address of the
     * customer.
     *
     * @param {string} jobResource.details.shippingAddress.streetAddress1 Street
     * Address line 1.
     *
     * @param {string} [jobResource.details.shippingAddress.streetAddress2] Street
     * Address line 2.
     *
     * @param {string} [jobResource.details.shippingAddress.streetAddress3] Street
     * Address line 3.
     *
     * @param {string} [jobResource.details.shippingAddress.city] Name of the City.
     *
     * @param {string} [jobResource.details.shippingAddress.stateOrProvince] Name
     * of the State or Province.
     *
     * @param {string} jobResource.details.shippingAddress.country Name of the
     * Country.
     *
     * @param {string} jobResource.details.shippingAddress.postalCode Postal code.
     *
     * @param {string} [jobResource.details.shippingAddress.zipExtendedCode]
     * Extended Zip Code.
     *
     * @param {string} [jobResource.details.shippingAddress.companyName] Name of
     * the company.
     *
     * @param {string} [jobResource.details.shippingAddress.addressType] Type of
     * address. Possible values include: 'None', 'Residential', 'Commercial'
     *
     * @param {array} jobResource.details.destinationAccountDetails Destination
     * account details.
     *
     * @param {object} [jobResource.details.preferences] Preferences for the order.
     *
     * @param {array} [jobResource.details.preferences.preferredDataCenterRegion]
     *
     * @param {string} jobResource.details.jobDetailsType Polymorphic Discriminator
     *
     * @param {string} jobResource.location The location of the resource. This will
     * be one of the supported and registered Azure Regions (e.g. West US, East US,
     * Southeast Asia, etc.). The region of a resource cannot be changed once it is
     * created, but if an identical region is specified on update the request will
     * succeed.
     *
     * @param {object} [jobResource.tags] The list of key value pairs that describe
     * the resource. These tags can be used in viewing and grouping this resource
     * (across resource groups).
     *
     * @param {object} jobResource.sku The sku type.
     *
     * @param {string} jobResource.sku.name The sku name. Possible values include:
     * 'DataBox', 'DataBoxDisk', 'DataBoxHeavy'
     *
     * @param {string} [jobResource.sku.displayName] The display name of the sku.
     *
     * @param {string} [jobResource.sku.family] The sku family.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createWithHttpOperationResponse(resourceGroupName: string, jobName: string, jobResource: models.JobResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobResource>>;

    /**
     * Creates a new job with the specified parameters. Existing job cannot be
     * updated with this API and should instead be updated with the Update job API.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} jobResource Job details from request body.
     *
     * @param {object} [jobResource.details] Details of a job run. This field will
     * only be sent for expand details filter.
     *
     * @param {number} [jobResource.details.expectedDataSizeInTeraBytes] The
     * expected size of the data, which needs to be transferred in this job, in
     * terabytes.
     *
     * @param {object} jobResource.details.contactDetails Contact details for
     * notification and shipping.
     *
     * @param {string} jobResource.details.contactDetails.contactName Contact name
     * of the person.
     *
     * @param {string} jobResource.details.contactDetails.phone Phone number of the
     * contact person.
     *
     * @param {string} [jobResource.details.contactDetails.phoneExtension] Phone
     * extension number of the contact person.
     *
     * @param {string} [jobResource.details.contactDetails.mobile] Mobile number of
     * the contact person.
     *
     * @param {array} jobResource.details.contactDetails.emailList List of
     * Email-ids to be notified about job progress.
     *
     * @param {array} [jobResource.details.contactDetails.notificationPreference]
     * Notification preference for a job stage.
     *
     * @param {object} jobResource.details.shippingAddress Shipping address of the
     * customer.
     *
     * @param {string} jobResource.details.shippingAddress.streetAddress1 Street
     * Address line 1.
     *
     * @param {string} [jobResource.details.shippingAddress.streetAddress2] Street
     * Address line 2.
     *
     * @param {string} [jobResource.details.shippingAddress.streetAddress3] Street
     * Address line 3.
     *
     * @param {string} [jobResource.details.shippingAddress.city] Name of the City.
     *
     * @param {string} [jobResource.details.shippingAddress.stateOrProvince] Name
     * of the State or Province.
     *
     * @param {string} jobResource.details.shippingAddress.country Name of the
     * Country.
     *
     * @param {string} jobResource.details.shippingAddress.postalCode Postal code.
     *
     * @param {string} [jobResource.details.shippingAddress.zipExtendedCode]
     * Extended Zip Code.
     *
     * @param {string} [jobResource.details.shippingAddress.companyName] Name of
     * the company.
     *
     * @param {string} [jobResource.details.shippingAddress.addressType] Type of
     * address. Possible values include: 'None', 'Residential', 'Commercial'
     *
     * @param {array} jobResource.details.destinationAccountDetails Destination
     * account details.
     *
     * @param {object} [jobResource.details.preferences] Preferences for the order.
     *
     * @param {array} [jobResource.details.preferences.preferredDataCenterRegion]
     *
     * @param {string} jobResource.details.jobDetailsType Polymorphic Discriminator
     *
     * @param {string} jobResource.location The location of the resource. This will
     * be one of the supported and registered Azure Regions (e.g. West US, East US,
     * Southeast Asia, etc.). The region of a resource cannot be changed once it is
     * created, but if an identical region is specified on update the request will
     * succeed.
     *
     * @param {object} [jobResource.tags] The list of key value pairs that describe
     * the resource. These tags can be used in viewing and grouping this resource
     * (across resource groups).
     *
     * @param {object} jobResource.sku The sku type.
     *
     * @param {string} jobResource.sku.name The sku name. Possible values include:
     * 'DataBox', 'DataBoxDisk', 'DataBoxHeavy'
     *
     * @param {string} [jobResource.sku.displayName] The display name of the sku.
     *
     * @param {string} [jobResource.sku.family] The sku family.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    create(resourceGroupName: string, jobName: string, jobResource: models.JobResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JobResource>;
    create(resourceGroupName: string, jobName: string, jobResource: models.JobResource, callback: ServiceCallback<models.JobResource>): void;
    create(resourceGroupName: string, jobName: string, jobResource: models.JobResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobResource>): void;


    /**
     * Deletes a job.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a job.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, jobName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, jobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Updates the properties of an existing job.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} jobResourceUpdateParameter Job update parameters from
     * request body.
     *
     * @param {object} [jobResourceUpdateParameter.details] Details of a job to be
     * updated.
     *
     * @param {object} [jobResourceUpdateParameter.details.contactDetails] Contact
     * details for notification and shipping.
     *
     * @param {string}
     * jobResourceUpdateParameter.details.contactDetails.contactName Contact name
     * of the person.
     *
     * @param {string} jobResourceUpdateParameter.details.contactDetails.phone
     * Phone number of the contact person.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.contactDetails.phoneExtension] Phone
     * extension number of the contact person.
     *
     * @param {string} [jobResourceUpdateParameter.details.contactDetails.mobile]
     * Mobile number of the contact person.
     *
     * @param {array} jobResourceUpdateParameter.details.contactDetails.emailList
     * List of Email-ids to be notified about job progress.
     *
     * @param {array}
     * [jobResourceUpdateParameter.details.contactDetails.notificationPreference]
     * Notification preference for a job stage.
     *
     * @param {object} [jobResourceUpdateParameter.details.shippingAddress]
     * Shipping address of the customer.
     *
     * @param {string}
     * jobResourceUpdateParameter.details.shippingAddress.streetAddress1 Street
     * Address line 1.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.streetAddress2] Street
     * Address line 2.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.streetAddress3] Street
     * Address line 3.
     *
     * @param {string} [jobResourceUpdateParameter.details.shippingAddress.city]
     * Name of the City.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.stateOrProvince] Name of
     * the State or Province.
     *
     * @param {string} jobResourceUpdateParameter.details.shippingAddress.country
     * Name of the Country.
     *
     * @param {string}
     * jobResourceUpdateParameter.details.shippingAddress.postalCode Postal code.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.zipExtendedCode]
     * Extended Zip Code.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.companyName] Name of the
     * company.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.addressType] Type of
     * address. Possible values include: 'None', 'Residential', 'Commercial'
     *
     * @param {array} [jobResourceUpdateParameter.destinationAccountDetails]
     * Destination account details.
     *
     * @param {object} [jobResourceUpdateParameter.tags] The list of key value
     * pairs that describe the resource. These tags can be used in viewing and
     * grouping this resource (across resource groups).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] Defines the If-Match condition. The patch
     * will be performed only if the ETag of the job on the server matches this
     * value.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, jobName: string, jobResourceUpdateParameter: models.JobResourceUpdateParameter, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobResource>>;

    /**
     * Updates the properties of an existing job.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} jobResourceUpdateParameter Job update parameters from
     * request body.
     *
     * @param {object} [jobResourceUpdateParameter.details] Details of a job to be
     * updated.
     *
     * @param {object} [jobResourceUpdateParameter.details.contactDetails] Contact
     * details for notification and shipping.
     *
     * @param {string}
     * jobResourceUpdateParameter.details.contactDetails.contactName Contact name
     * of the person.
     *
     * @param {string} jobResourceUpdateParameter.details.contactDetails.phone
     * Phone number of the contact person.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.contactDetails.phoneExtension] Phone
     * extension number of the contact person.
     *
     * @param {string} [jobResourceUpdateParameter.details.contactDetails.mobile]
     * Mobile number of the contact person.
     *
     * @param {array} jobResourceUpdateParameter.details.contactDetails.emailList
     * List of Email-ids to be notified about job progress.
     *
     * @param {array}
     * [jobResourceUpdateParameter.details.contactDetails.notificationPreference]
     * Notification preference for a job stage.
     *
     * @param {object} [jobResourceUpdateParameter.details.shippingAddress]
     * Shipping address of the customer.
     *
     * @param {string}
     * jobResourceUpdateParameter.details.shippingAddress.streetAddress1 Street
     * Address line 1.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.streetAddress2] Street
     * Address line 2.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.streetAddress3] Street
     * Address line 3.
     *
     * @param {string} [jobResourceUpdateParameter.details.shippingAddress.city]
     * Name of the City.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.stateOrProvince] Name of
     * the State or Province.
     *
     * @param {string} jobResourceUpdateParameter.details.shippingAddress.country
     * Name of the Country.
     *
     * @param {string}
     * jobResourceUpdateParameter.details.shippingAddress.postalCode Postal code.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.zipExtendedCode]
     * Extended Zip Code.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.companyName] Name of the
     * company.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.addressType] Type of
     * address. Possible values include: 'None', 'Residential', 'Commercial'
     *
     * @param {array} [jobResourceUpdateParameter.destinationAccountDetails]
     * Destination account details.
     *
     * @param {object} [jobResourceUpdateParameter.tags] The list of key value
     * pairs that describe the resource. These tags can be used in viewing and
     * grouping this resource (across resource groups).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] Defines the If-Match condition. The patch
     * will be performed only if the ETag of the job on the server matches this
     * value.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, jobName: string, jobResourceUpdateParameter: models.JobResourceUpdateParameter, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.JobResource>;
    update(resourceGroupName: string, jobName: string, jobResourceUpdateParameter: models.JobResourceUpdateParameter, callback: ServiceCallback<models.JobResource>): void;
    update(resourceGroupName: string, jobName: string, jobResourceUpdateParameter: models.JobResourceUpdateParameter, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobResource>): void;


    /**
     * Book shipment pick up.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} shipmentPickUpRequest Details of shipment pick up request.
     *
     * @param {date} shipmentPickUpRequest.startTime Minimum date after which the
     * pick up should commence, this must be in local time of pick up area.
     *
     * @param {date} shipmentPickUpRequest.endTime Maximum date before which the
     * pick up should commence, this must be in local time of pick up area.
     *
     * @param {string} shipmentPickUpRequest.shipmentLocation Shipment Location in
     * the pickup place. Eg.front desk
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ShipmentPickUpResponse>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    bookShipmentPickUpWithHttpOperationResponse(resourceGroupName: string, jobName: string, shipmentPickUpRequest: models.ShipmentPickUpRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ShipmentPickUpResponse>>;

    /**
     * Book shipment pick up.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} shipmentPickUpRequest Details of shipment pick up request.
     *
     * @param {date} shipmentPickUpRequest.startTime Minimum date after which the
     * pick up should commence, this must be in local time of pick up area.
     *
     * @param {date} shipmentPickUpRequest.endTime Maximum date before which the
     * pick up should commence, this must be in local time of pick up area.
     *
     * @param {string} shipmentPickUpRequest.shipmentLocation Shipment Location in
     * the pickup place. Eg.front desk
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ShipmentPickUpResponse} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ShipmentPickUpResponse} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ShipmentPickUpResponse} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    bookShipmentPickUp(resourceGroupName: string, jobName: string, shipmentPickUpRequest: models.ShipmentPickUpRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ShipmentPickUpResponse>;
    bookShipmentPickUp(resourceGroupName: string, jobName: string, shipmentPickUpRequest: models.ShipmentPickUpRequest, callback: ServiceCallback<models.ShipmentPickUpResponse>): void;
    bookShipmentPickUp(resourceGroupName: string, jobName: string, shipmentPickUpRequest: models.ShipmentPickUpRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ShipmentPickUpResponse>): void;


    /**
     * CancelJob.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {string} reason Reason for cancellation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    cancelWithHttpOperationResponse(resourceGroupName: string, jobName: string, reason: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * CancelJob.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {string} reason Reason for cancellation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    cancel(resourceGroupName: string, jobName: string, reason: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    cancel(resourceGroupName: string, jobName: string, reason: string, callback: ServiceCallback<void>): void;
    cancel(resourceGroupName: string, jobName: string, reason: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * This method gets the unencrypted secrets related to the job.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<UnencryptedCredentialsList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listCredentialsWithHttpOperationResponse(resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.UnencryptedCredentialsList>>;

    /**
     * This method gets the unencrypted secrets related to the job.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {UnencryptedCredentialsList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {UnencryptedCredentialsList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link UnencryptedCredentialsList} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listCredentials(resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.UnencryptedCredentialsList>;
    listCredentials(resourceGroupName: string, jobName: string, callback: ServiceCallback<models.UnencryptedCredentialsList>): void;
    listCredentials(resourceGroupName: string, jobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.UnencryptedCredentialsList>): void;


    /**
     * Creates a new job with the specified parameters. Existing job cannot be
     * updated with this API and should instead be updated with the Update job API.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} jobResource Job details from request body.
     *
     * @param {object} [jobResource.details] Details of a job run. This field will
     * only be sent for expand details filter.
     *
     * @param {number} [jobResource.details.expectedDataSizeInTeraBytes] The
     * expected size of the data, which needs to be transferred in this job, in
     * terabytes.
     *
     * @param {object} jobResource.details.contactDetails Contact details for
     * notification and shipping.
     *
     * @param {string} jobResource.details.contactDetails.contactName Contact name
     * of the person.
     *
     * @param {string} jobResource.details.contactDetails.phone Phone number of the
     * contact person.
     *
     * @param {string} [jobResource.details.contactDetails.phoneExtension] Phone
     * extension number of the contact person.
     *
     * @param {string} [jobResource.details.contactDetails.mobile] Mobile number of
     * the contact person.
     *
     * @param {array} jobResource.details.contactDetails.emailList List of
     * Email-ids to be notified about job progress.
     *
     * @param {array} [jobResource.details.contactDetails.notificationPreference]
     * Notification preference for a job stage.
     *
     * @param {object} jobResource.details.shippingAddress Shipping address of the
     * customer.
     *
     * @param {string} jobResource.details.shippingAddress.streetAddress1 Street
     * Address line 1.
     *
     * @param {string} [jobResource.details.shippingAddress.streetAddress2] Street
     * Address line 2.
     *
     * @param {string} [jobResource.details.shippingAddress.streetAddress3] Street
     * Address line 3.
     *
     * @param {string} [jobResource.details.shippingAddress.city] Name of the City.
     *
     * @param {string} [jobResource.details.shippingAddress.stateOrProvince] Name
     * of the State or Province.
     *
     * @param {string} jobResource.details.shippingAddress.country Name of the
     * Country.
     *
     * @param {string} jobResource.details.shippingAddress.postalCode Postal code.
     *
     * @param {string} [jobResource.details.shippingAddress.zipExtendedCode]
     * Extended Zip Code.
     *
     * @param {string} [jobResource.details.shippingAddress.companyName] Name of
     * the company.
     *
     * @param {string} [jobResource.details.shippingAddress.addressType] Type of
     * address. Possible values include: 'None', 'Residential', 'Commercial'
     *
     * @param {array} jobResource.details.destinationAccountDetails Destination
     * account details.
     *
     * @param {object} [jobResource.details.preferences] Preferences for the order.
     *
     * @param {array} [jobResource.details.preferences.preferredDataCenterRegion]
     *
     * @param {string} jobResource.details.jobDetailsType Polymorphic Discriminator
     *
     * @param {string} jobResource.location The location of the resource. This will
     * be one of the supported and registered Azure Regions (e.g. West US, East US,
     * Southeast Asia, etc.). The region of a resource cannot be changed once it is
     * created, but if an identical region is specified on update the request will
     * succeed.
     *
     * @param {object} [jobResource.tags] The list of key value pairs that describe
     * the resource. These tags can be used in viewing and grouping this resource
     * (across resource groups).
     *
     * @param {object} jobResource.sku The sku type.
     *
     * @param {string} jobResource.sku.name The sku name. Possible values include:
     * 'DataBox', 'DataBoxDisk', 'DataBoxHeavy'
     *
     * @param {string} [jobResource.sku.displayName] The display name of the sku.
     *
     * @param {string} [jobResource.sku.family] The sku family.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateWithHttpOperationResponse(resourceGroupName: string, jobName: string, jobResource: models.JobResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobResource>>;

    /**
     * Creates a new job with the specified parameters. Existing job cannot be
     * updated with this API and should instead be updated with the Update job API.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} jobResource Job details from request body.
     *
     * @param {object} [jobResource.details] Details of a job run. This field will
     * only be sent for expand details filter.
     *
     * @param {number} [jobResource.details.expectedDataSizeInTeraBytes] The
     * expected size of the data, which needs to be transferred in this job, in
     * terabytes.
     *
     * @param {object} jobResource.details.contactDetails Contact details for
     * notification and shipping.
     *
     * @param {string} jobResource.details.contactDetails.contactName Contact name
     * of the person.
     *
     * @param {string} jobResource.details.contactDetails.phone Phone number of the
     * contact person.
     *
     * @param {string} [jobResource.details.contactDetails.phoneExtension] Phone
     * extension number of the contact person.
     *
     * @param {string} [jobResource.details.contactDetails.mobile] Mobile number of
     * the contact person.
     *
     * @param {array} jobResource.details.contactDetails.emailList List of
     * Email-ids to be notified about job progress.
     *
     * @param {array} [jobResource.details.contactDetails.notificationPreference]
     * Notification preference for a job stage.
     *
     * @param {object} jobResource.details.shippingAddress Shipping address of the
     * customer.
     *
     * @param {string} jobResource.details.shippingAddress.streetAddress1 Street
     * Address line 1.
     *
     * @param {string} [jobResource.details.shippingAddress.streetAddress2] Street
     * Address line 2.
     *
     * @param {string} [jobResource.details.shippingAddress.streetAddress3] Street
     * Address line 3.
     *
     * @param {string} [jobResource.details.shippingAddress.city] Name of the City.
     *
     * @param {string} [jobResource.details.shippingAddress.stateOrProvince] Name
     * of the State or Province.
     *
     * @param {string} jobResource.details.shippingAddress.country Name of the
     * Country.
     *
     * @param {string} jobResource.details.shippingAddress.postalCode Postal code.
     *
     * @param {string} [jobResource.details.shippingAddress.zipExtendedCode]
     * Extended Zip Code.
     *
     * @param {string} [jobResource.details.shippingAddress.companyName] Name of
     * the company.
     *
     * @param {string} [jobResource.details.shippingAddress.addressType] Type of
     * address. Possible values include: 'None', 'Residential', 'Commercial'
     *
     * @param {array} jobResource.details.destinationAccountDetails Destination
     * account details.
     *
     * @param {object} [jobResource.details.preferences] Preferences for the order.
     *
     * @param {array} [jobResource.details.preferences.preferredDataCenterRegion]
     *
     * @param {string} jobResource.details.jobDetailsType Polymorphic Discriminator
     *
     * @param {string} jobResource.location The location of the resource. This will
     * be one of the supported and registered Azure Regions (e.g. West US, East US,
     * Southeast Asia, etc.). The region of a resource cannot be changed once it is
     * created, but if an identical region is specified on update the request will
     * succeed.
     *
     * @param {object} [jobResource.tags] The list of key value pairs that describe
     * the resource. These tags can be used in viewing and grouping this resource
     * (across resource groups).
     *
     * @param {object} jobResource.sku The sku type.
     *
     * @param {string} jobResource.sku.name The sku name. Possible values include:
     * 'DataBox', 'DataBoxDisk', 'DataBoxHeavy'
     *
     * @param {string} [jobResource.sku.displayName] The display name of the sku.
     *
     * @param {string} [jobResource.sku.family] The sku family.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreate(resourceGroupName: string, jobName: string, jobResource: models.JobResource, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JobResource>;
    beginCreate(resourceGroupName: string, jobName: string, jobResource: models.JobResource, callback: ServiceCallback<models.JobResource>): void;
    beginCreate(resourceGroupName: string, jobName: string, jobResource: models.JobResource, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobResource>): void;


    /**
     * Deletes a job.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a job.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, jobName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, jobName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, jobName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Updates the properties of an existing job.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} jobResourceUpdateParameter Job update parameters from
     * request body.
     *
     * @param {object} [jobResourceUpdateParameter.details] Details of a job to be
     * updated.
     *
     * @param {object} [jobResourceUpdateParameter.details.contactDetails] Contact
     * details for notification and shipping.
     *
     * @param {string}
     * jobResourceUpdateParameter.details.contactDetails.contactName Contact name
     * of the person.
     *
     * @param {string} jobResourceUpdateParameter.details.contactDetails.phone
     * Phone number of the contact person.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.contactDetails.phoneExtension] Phone
     * extension number of the contact person.
     *
     * @param {string} [jobResourceUpdateParameter.details.contactDetails.mobile]
     * Mobile number of the contact person.
     *
     * @param {array} jobResourceUpdateParameter.details.contactDetails.emailList
     * List of Email-ids to be notified about job progress.
     *
     * @param {array}
     * [jobResourceUpdateParameter.details.contactDetails.notificationPreference]
     * Notification preference for a job stage.
     *
     * @param {object} [jobResourceUpdateParameter.details.shippingAddress]
     * Shipping address of the customer.
     *
     * @param {string}
     * jobResourceUpdateParameter.details.shippingAddress.streetAddress1 Street
     * Address line 1.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.streetAddress2] Street
     * Address line 2.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.streetAddress3] Street
     * Address line 3.
     *
     * @param {string} [jobResourceUpdateParameter.details.shippingAddress.city]
     * Name of the City.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.stateOrProvince] Name of
     * the State or Province.
     *
     * @param {string} jobResourceUpdateParameter.details.shippingAddress.country
     * Name of the Country.
     *
     * @param {string}
     * jobResourceUpdateParameter.details.shippingAddress.postalCode Postal code.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.zipExtendedCode]
     * Extended Zip Code.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.companyName] Name of the
     * company.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.addressType] Type of
     * address. Possible values include: 'None', 'Residential', 'Commercial'
     *
     * @param {array} [jobResourceUpdateParameter.destinationAccountDetails]
     * Destination account details.
     *
     * @param {object} [jobResourceUpdateParameter.tags] The list of key value
     * pairs that describe the resource. These tags can be used in viewing and
     * grouping this resource (across resource groups).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] Defines the If-Match condition. The patch
     * will be performed only if the ETag of the job on the server matches this
     * value.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobResource>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(resourceGroupName: string, jobName: string, jobResourceUpdateParameter: models.JobResourceUpdateParameter, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobResource>>;

    /**
     * Updates the properties of an existing job.
     *
     * @param {string} resourceGroupName The Resource Group Name
     *
     * @param {string} jobName The name of the job Resource within the specified
     * resource group. job names must be between 3 and 24 characters in length and
     * use any alphanumeric and underscore only
     *
     * @param {object} jobResourceUpdateParameter Job update parameters from
     * request body.
     *
     * @param {object} [jobResourceUpdateParameter.details] Details of a job to be
     * updated.
     *
     * @param {object} [jobResourceUpdateParameter.details.contactDetails] Contact
     * details for notification and shipping.
     *
     * @param {string}
     * jobResourceUpdateParameter.details.contactDetails.contactName Contact name
     * of the person.
     *
     * @param {string} jobResourceUpdateParameter.details.contactDetails.phone
     * Phone number of the contact person.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.contactDetails.phoneExtension] Phone
     * extension number of the contact person.
     *
     * @param {string} [jobResourceUpdateParameter.details.contactDetails.mobile]
     * Mobile number of the contact person.
     *
     * @param {array} jobResourceUpdateParameter.details.contactDetails.emailList
     * List of Email-ids to be notified about job progress.
     *
     * @param {array}
     * [jobResourceUpdateParameter.details.contactDetails.notificationPreference]
     * Notification preference for a job stage.
     *
     * @param {object} [jobResourceUpdateParameter.details.shippingAddress]
     * Shipping address of the customer.
     *
     * @param {string}
     * jobResourceUpdateParameter.details.shippingAddress.streetAddress1 Street
     * Address line 1.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.streetAddress2] Street
     * Address line 2.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.streetAddress3] Street
     * Address line 3.
     *
     * @param {string} [jobResourceUpdateParameter.details.shippingAddress.city]
     * Name of the City.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.stateOrProvince] Name of
     * the State or Province.
     *
     * @param {string} jobResourceUpdateParameter.details.shippingAddress.country
     * Name of the Country.
     *
     * @param {string}
     * jobResourceUpdateParameter.details.shippingAddress.postalCode Postal code.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.zipExtendedCode]
     * Extended Zip Code.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.companyName] Name of the
     * company.
     *
     * @param {string}
     * [jobResourceUpdateParameter.details.shippingAddress.addressType] Type of
     * address. Possible values include: 'None', 'Residential', 'Commercial'
     *
     * @param {array} [jobResourceUpdateParameter.destinationAccountDetails]
     * Destination account details.
     *
     * @param {object} [jobResourceUpdateParameter.tags] The list of key value
     * pairs that describe the resource. These tags can be used in viewing and
     * grouping this resource (across resource groups).
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {string} [options.ifMatch] Defines the If-Match condition. The patch
     * will be performed only if the ETag of the job on the server matches this
     * value.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobResource} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobResource} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobResource} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(resourceGroupName: string, jobName: string, jobResourceUpdateParameter: models.JobResourceUpdateParameter, options?: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }): Promise<models.JobResource>;
    beginUpdate(resourceGroupName: string, jobName: string, jobResourceUpdateParameter: models.JobResourceUpdateParameter, callback: ServiceCallback<models.JobResource>): void;
    beginUpdate(resourceGroupName: string, jobName: string, jobResourceUpdateParameter: models.JobResourceUpdateParameter, options: { ifMatch? : string, customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobResource>): void;


    /**
     * Lists all the jobs available under the subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobResourceList>>;

    /**
     * Lists all the jobs available under the subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobResourceList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JobResourceList>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.JobResourceList>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobResourceList>): void;


    /**
     * Lists all the jobs available under the given resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<JobResourceList>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.JobResourceList>>;

    /**
     * Lists all the jobs available under the given resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {JobResourceList} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {JobResourceList} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link JobResourceList} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.JobResourceList>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.JobResourceList>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.JobResourceList>): void;
}

/**
 * @class
 * Service
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the DataBoxManagementClient.
 */
export interface Service {


    /**
     * This method provides the list of available skus for the given subscription
     * and location.
     *
     * @param {string} location The location of the resource
     *
     * @param {object} availableSkuRequest Filters for showing the available skus.
     *
     * @param {string} availableSkuRequest.country ISO country code. Country for
     * hardware shipment. For codes check:
     * https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements
     *
     * @param {string} availableSkuRequest.location Location for data transfer. For
     * locations check:
     * https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
     *
     * @param {array} [availableSkuRequest.skuNames] Sku Names to filter for
     * available skus
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AvailableSkusResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listAvailableSkusWithHttpOperationResponse(location: string, availableSkuRequest: models.AvailableSkuRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AvailableSkusResult>>;

    /**
     * This method provides the list of available skus for the given subscription
     * and location.
     *
     * @param {string} location The location of the resource
     *
     * @param {object} availableSkuRequest Filters for showing the available skus.
     *
     * @param {string} availableSkuRequest.country ISO country code. Country for
     * hardware shipment. For codes check:
     * https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements
     *
     * @param {string} availableSkuRequest.location Location for data transfer. For
     * locations check:
     * https://management.azure.com/subscriptions/SUBSCRIPTIONID/locations?api-version=2018-01-01
     *
     * @param {array} [availableSkuRequest.skuNames] Sku Names to filter for
     * available skus
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AvailableSkusResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AvailableSkusResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AvailableSkusResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listAvailableSkus(location: string, availableSkuRequest: models.AvailableSkuRequest, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AvailableSkusResult>;
    listAvailableSkus(location: string, availableSkuRequest: models.AvailableSkuRequest, callback: ServiceCallback<models.AvailableSkusResult>): void;
    listAvailableSkus(location: string, availableSkuRequest: models.AvailableSkuRequest, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AvailableSkusResult>): void;


    /**
     * This method validates the customer shipping address and provide alternate
     * addresses if any.
     *
     * @param {string} location The location of the resource
     *
     * @param {object} shippingAddress Shipping address of the customer.
     *
     * @param {string} shippingAddress.streetAddress1 Street Address line 1.
     *
     * @param {string} [shippingAddress.streetAddress2] Street Address line 2.
     *
     * @param {string} [shippingAddress.streetAddress3] Street Address line 3.
     *
     * @param {string} [shippingAddress.city] Name of the City.
     *
     * @param {string} [shippingAddress.stateOrProvince] Name of the State or
     * Province.
     *
     * @param {string} shippingAddress.country Name of the Country.
     *
     * @param {string} shippingAddress.postalCode Postal code.
     *
     * @param {string} [shippingAddress.zipExtendedCode] Extended Zip Code.
     *
     * @param {string} [shippingAddress.companyName] Name of the company.
     *
     * @param {string} [shippingAddress.addressType] Type of address. Possible
     * values include: 'None', 'Residential', 'Commercial'
     *
     * @param {string} deviceType Device type to be used for the job. Possible
     * values include: 'DataBox', 'DataBoxDisk', 'DataBoxHeavy'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AddressValidationOutput>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    validateAddressMethodWithHttpOperationResponse(location: string, shippingAddress: models.ShippingAddress, deviceType: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AddressValidationOutput>>;

    /**
     * This method validates the customer shipping address and provide alternate
     * addresses if any.
     *
     * @param {string} location The location of the resource
     *
     * @param {object} shippingAddress Shipping address of the customer.
     *
     * @param {string} shippingAddress.streetAddress1 Street Address line 1.
     *
     * @param {string} [shippingAddress.streetAddress2] Street Address line 2.
     *
     * @param {string} [shippingAddress.streetAddress3] Street Address line 3.
     *
     * @param {string} [shippingAddress.city] Name of the City.
     *
     * @param {string} [shippingAddress.stateOrProvince] Name of the State or
     * Province.
     *
     * @param {string} shippingAddress.country Name of the Country.
     *
     * @param {string} shippingAddress.postalCode Postal code.
     *
     * @param {string} [shippingAddress.zipExtendedCode] Extended Zip Code.
     *
     * @param {string} [shippingAddress.companyName] Name of the company.
     *
     * @param {string} [shippingAddress.addressType] Type of address. Possible
     * values include: 'None', 'Residential', 'Commercial'
     *
     * @param {string} deviceType Device type to be used for the job. Possible
     * values include: 'DataBox', 'DataBoxDisk', 'DataBoxHeavy'
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AddressValidationOutput} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AddressValidationOutput} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AddressValidationOutput} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    validateAddressMethod(location: string, shippingAddress: models.ShippingAddress, deviceType: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AddressValidationOutput>;
    validateAddressMethod(location: string, shippingAddress: models.ShippingAddress, deviceType: string, callback: ServiceCallback<models.AddressValidationOutput>): void;
    validateAddressMethod(location: string, shippingAddress: models.ShippingAddress, deviceType: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AddressValidationOutput>): void;


    /**
     * This method provides the list of available skus for the given subscription
     * and location.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AvailableSkusResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listAvailableSkusNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AvailableSkusResult>>;

    /**
     * This method provides the list of available skus for the given subscription
     * and location.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AvailableSkusResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AvailableSkusResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AvailableSkusResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listAvailableSkusNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AvailableSkusResult>;
    listAvailableSkusNext(nextPageLink: string, callback: ServiceCallback<models.AvailableSkusResult>): void;
    listAvailableSkusNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AvailableSkusResult>): void;
}

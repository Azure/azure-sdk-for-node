/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import * as moment from "moment";

/**
 * Input to create KB.
 */
export interface CreateKbInputDTO {
  /**
   * List of QNA to be added to the index. Ids are generated by the service and should be omitted.
   */
  qnaList?: QnADTO[];
  /**
   * List of URLs to be added to knowledgebase.
   */
  urls?: string[];
  /**
   * List of files to be added to knowledgebase.
   */
  files?: FileDTO[];
}

/**
 * An instance of CreateKbInputDTO for add operation
 */
export interface UpdateKbOperationDTOAdd extends CreateKbInputDTO {
}

/**
 * PATCH body schema of Delete Operation in UpdateKb
 */
export interface DeleteKbContentsDTO {
  /**
   * List of Qna Ids to be deleted
   */
  ids?: number[];
  /**
   * List of sources to be deleted from knowledgebase.
   */
  sources?: string[];
}

/**
 * An instance of DeleteKbContentsDTO for delete Operation
 */
export interface UpdateKbOperationDTODelete extends DeleteKbContentsDTO {
}

/**
 * PATCH body schema for Update operation in Update Kb
 */
export interface UpdateKbContentsDTO {
  /**
   * Friendly name for the knowledgebase.
   */
  name?: string;
  /**
   * List of Q-A (UpdateQnaDTO) to be added to the knowledgebase.
   */
  qnaList?: UpdateQnaDTO[];
  /**
   * List of existing URLs to be refreshed. The content will be extracted again and re-indexed.
   */
  urls?: string[];
}

/**
 * An instance of UpdateKbContentsDTO for Update Operation
 */
export interface UpdateKbOperationDTOUpdate extends UpdateKbContentsDTO {
}

/**
 * Contains list of QnAs to be updated
 */
export interface UpdateKbOperationDTO {
  /**
   * An instance of CreateKbInputDTO for add operation
   */
  add?: UpdateKbOperationDTOAdd;
  /**
   * An instance of DeleteKbContentsDTO for delete Operation
   */
  deleteProperty?: UpdateKbOperationDTODelete;
  /**
   * An instance of UpdateKbContentsDTO for Update Operation
   */
  update?: UpdateKbOperationDTOUpdate;
}

/**
 * PATCH Body schema for Update Kb which contains list of questions to be added and deleted
 */
export interface UpdateQuestionsDTO {
  /**
   * List of questions to be added
   */
  add?: string[];
  /**
   * List of questions to be deleted.
   */
  deleteProperty?: string[];
}

/**
 * List of questions associated with the answer.
 */
export interface UpdateQnaDTOQuestions extends UpdateQuestionsDTO {
}

/**
 * PATCH Body schema to represent list of Metadata to be updated
 */
export interface UpdateMetadataDTO {
  /**
   * List of Metadata associated with answer to be deleted
   */
  deleteProperty?: MetadataDTO[];
  /**
   * List of metadata associated with answer to be added
   */
  add?: MetadataDTO[];
}

/**
 * List of metadata associated with the answer to be updated
 */
export interface UpdateQnaDTOMetadata extends UpdateMetadataDTO {
}

/**
 * PATCH Body schema for Update Qna List
 */
export interface UpdateQnaDTO {
  /**
   * Unique id for the Q-A
   */
  id?: number;
  /**
   * Answer text
   */
  answer?: string;
  /**
   * Source from which Q-A was indexed. eg.
   * https://docs.microsoft.com/en-us/azure/cognitive-services/QnAMaker/FAQs
   */
  source?: string;
  /**
   * List of questions associated with the answer.
   */
  questions?: UpdateQnaDTOQuestions;
  /**
   * List of metadata associated with the answer to be updated
   */
  metadata?: UpdateQnaDTOMetadata;
}

/**
 * Name - value pair of metadata.
 */
export interface MetadataDTO {
  /**
   * Metadata name.
   */
  name: string;
  /**
   * Metadata value.
   */
  value: string;
}

/**
 * Q-A object.
 */
export interface QnADTO {
  /**
   * Unique id for the Q-A.
   */
  id?: number;
  /**
   * Answer text
   */
  answer: string;
  /**
   * Source from which Q-A was indexed. eg.
   * https://docs.microsoft.com/en-us/azure/cognitive-services/QnAMaker/FAQs
   */
  source?: string;
  /**
   * List of questions associated with the answer.
   */
  questions: string[];
  /**
   * List of metadata associated with the answer.
   */
  metadata?: MetadataDTO[];
}

/**
 * DTO to hold details of uploaded files.
 */
export interface FileDTO {
  /**
   * File name. Supported file types are ".tsv", ".pdf", ".txt", ".docx", ".xlsx".
   */
  fileName: string;
  /**
   * Public URI of the file.
   */
  fileUri: string;
}

/**
 * List of QnADTO
 */
export interface QnADocumentsDTO {
  /**
   * List of answers.
   */
  qnaDocuments?: QnADTO[];
}

/**
 * Post body schema for CreateKb operation.
 */
export interface CreateKbDTO {
  /**
   * Friendly name for the knowledgebase.
   */
  name: string;
  /**
   * List of Q-A (QnADTO) to be added to the knowledgebase. Q-A Ids are assigned by the service and
   * should be omitted.
   */
  qnaList?: QnADTO[];
  /**
   * List of URLs to be used for extracting Q-A.
   */
  urls?: string[];
  /**
   * List of files from which to Extract Q-A.
   */
  files?: FileDTO[];
}

/**
 * Post body schema for Replace KB operation.
 */
export interface ReplaceKbDTO {
  /**
   * List of Q-A (QnADTO) to be added to the knowledgebase. Q-A Ids are assigned by the service and
   * should be omitted.
   */
  qnAList: QnADTO[];
}

/**
 * The error object. As per Microsoft One API guidelines -
 * https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.
 */
export interface ErrorModel {
  /**
   * One of a server-defined set of error codes. Possible values include: 'BadArgument',
   * 'Forbidden', 'NotFound', 'KbNotFound', 'Unauthorized', 'Unspecified', 'EndpointKeysError',
   * 'QuotaExceeded', 'QnaRuntimeError', 'SKULimitExceeded', 'OperationNotFound', 'ServiceError',
   * 'ValidationFailure', 'ExtractionFailure'
   */
  code: string;
  /**
   * A human-readable representation of the error.
   */
  message?: string;
  /**
   * The target of the error.
   */
  target?: string;
  /**
   * An array of details about specific errors that led to this reported error.
   */
  details?: ErrorModel[];
  /**
   * An object containing more specific information than the current object about the error.
   */
  innerError?: InnerErrorModel;
}

/**
 * The error object.
 */
export interface ErrorResponseError extends ErrorModel {
}

/**
 * Error response. As per Microsoft One API guidelines -
 * https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.
 */
export interface ErrorResponse {
  /**
   * The error object.
   */
  error?: ErrorResponseError;
}

/**
 * An object containing more specific information about the error. As per Microsoft One API
 * guidelines -
 * https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.
 */
export interface InnerErrorModel {
  /**
   * A more specific error code than was provided by the containing error.
   */
  code?: string;
  /**
   * An object containing more specific information than the current object about the error.
   */
  innerError?: InnerErrorModel;
}

/**
 * Record to track long running operation.
 */
export interface Operation {
  /**
   * Operation state. Possible values include: 'Failed', 'NotStarted', 'Running', 'Succeeded'
   */
  operationState?: string;
  /**
   * Timestamp when the operation was created.
   */
  createdTimestamp?: string;
  /**
   * Timestamp when the current state was entered.
   */
  lastActionTimestamp?: string;
  /**
   * Relative URI to the target resource location for completed resources.
   */
  resourceLocation?: string;
  /**
   * User Id
   */
  userId?: string;
  /**
   * Operation Id.
   */
  operationId?: string;
  /**
   * Error details in case of failures.
   */
  errorResponse?: ErrorResponse;
}

/**
 * Response schema for CreateKb operation.
 */
export interface KnowledgebaseDTO {
  /**
   * Unique id that identifies a knowledgebase.
   */
  id?: string;
  /**
   * URL host name at which the knowledgebase is hosted.
   */
  hostName?: string;
  /**
   * Time stamp at which the knowledgebase was last accessed (UTC).
   */
  lastAccessedTimestamp?: string;
  /**
   * Time stamp at which the knowledgebase was last modified (UTC).
   */
  lastChangedTimestamp?: string;
  /**
   * Time stamp at which the knowledgebase was last published (UTC).
   */
  lastPublishedTimestamp?: string;
  /**
   * Friendly name of the knowledgebase.
   */
  name?: string;
  /**
   * User who created / owns the knowledgebase.
   */
  userId?: string;
  /**
   * URL sources from which Q-A were extracted and added to the knowledgebase.
   */
  urls?: string[];
  /**
   * Custom sources from which Q-A were extracted or explicitly added to the knowledgebase.
   */
  sources?: string[];
}

/**
 * Collection of knowledgebases owned by a user.
 */
export interface KnowledgebasesDTO {
  /**
   * Collection of knowledgebase records.
   */
  knowledgebases?: KnowledgebaseDTO[];
}

/**
 * Collection of words that are synonyms.
 */
export interface AlterationsDTO {
  /**
   * Words that are synonymous with each other.
   */
  alterations: string[];
}

/**
 * Collection of word alterations.
 */
export interface WordAlterationsDTO {
  /**
   * Collection of word alterations.
   */
  wordAlterations: AlterationsDTO[];
}

/**
 * Schema for EndpointKeys generate/refresh operations.
 */
export interface EndpointKeysDTO {
  /**
   * Primary Access Key.
   */
  primaryEndpointKey?: string;
  /**
   * Secondary Access Key.
   */
  secondaryEndpointKey?: string;
  /**
   * Current version of runtime.
   */
  installedVersion?: string;
  /**
   * Latest version of runtime.
   */
  lastStableVersion?: string;
}

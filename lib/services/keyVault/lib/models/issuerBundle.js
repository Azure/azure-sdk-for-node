/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the IssuerBundle class.
 * @constructor
 * The issuer for Key Vault certificate
 *
 * @member {string} [id] Identifier for the issuer object.
 * 
 * @member {string} [provider] The issuer provider.
 * 
 * @member {object} [credentials] The credentials to be used for the issuer.
 * 
 * @member {string} [credentials.accountId] The user name/account name/account
 * id.
 * 
 * @member {string} [credentials.password] The password/secret/account key.
 * 
 * @member {object} [organizationDetails] Details of the organization as
 * provided to the issuer.
 * 
 * @member {string} [organizationDetails.id] Id of the organization.
 * 
 * @member {array} [organizationDetails.adminDetails] Details of the
 * organization administrator.
 * 
 * @member {object} [attributes] Attributes of the issuer object.
 * 
 * @member {boolean} [attributes.enabled] Determines whether the issuer is
 * enabled
 * 
 * @member {date} [attributes.created] Creation time in UTC
 * 
 * @member {date} [attributes.updated] Last updated time in UTC
 * 
 */
function IssuerBundle() {
}

/**
 * Defines the metadata of IssuerBundle
 *
 * @returns {object} metadata of IssuerBundle
 *
 */
IssuerBundle.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'IssuerBundle',
    type: {
      name: 'Composite',
      className: 'IssuerBundle',
      modelProperties: {
        id: {
          required: false,
          readOnly: true,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        provider: {
          required: false,
          serializedName: 'provider',
          type: {
            name: 'String'
          }
        },
        credentials: {
          required: false,
          serializedName: 'credentials',
          type: {
            name: 'Composite',
            className: 'IssuerCredentials'
          }
        },
        organizationDetails: {
          required: false,
          serializedName: 'org_details',
          type: {
            name: 'Composite',
            className: 'OrganizationDetails'
          }
        },
        attributes: {
          required: false,
          serializedName: 'attributes',
          type: {
            name: 'Composite',
            className: 'IssuerAttributes'
          }
        }
      }
    }
  };
};

module.exports = IssuerBundle;

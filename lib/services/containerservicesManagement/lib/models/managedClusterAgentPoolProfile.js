/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Profile for the container service agent pool.
 *
 * @extends models['ManagedClusterAgentPoolProfileProperties']
 */
class ManagedClusterAgentPoolProfile extends models['ManagedClusterAgentPoolProfileProperties'] {
  /**
   * Create a ManagedClusterAgentPoolProfile.
   * @property {string} name Unique name of the agent pool profile in the
   * context of the subscription and resource group.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ManagedClusterAgentPoolProfile
   *
   * @returns {object} metadata of ManagedClusterAgentPoolProfile
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ManagedClusterAgentPoolProfile',
      type: {
        name: 'Composite',
        className: 'ManagedClusterAgentPoolProfile',
        modelProperties: {
          count: {
            required: true,
            serializedName: 'count',
            defaultValue: 1,
            constraints: {
              InclusiveMaximum: 100,
              InclusiveMinimum: 1
            },
            type: {
              name: 'Number'
            }
          },
          vmSize: {
            required: true,
            serializedName: 'vmSize',
            type: {
              name: 'String'
            }
          },
          osDiskSizeGB: {
            required: false,
            serializedName: 'osDiskSizeGB',
            type: {
              name: 'Number'
            }
          },
          vnetSubnetID: {
            required: false,
            serializedName: 'vnetSubnetID',
            type: {
              name: 'String'
            }
          },
          maxPods: {
            required: false,
            serializedName: 'maxPods',
            type: {
              name: 'Number'
            }
          },
          osType: {
            required: false,
            serializedName: 'osType',
            defaultValue: 'Linux',
            type: {
              name: 'String'
            }
          },
          maxCount: {
            required: false,
            serializedName: 'maxCount',
            type: {
              name: 'Number'
            }
          },
          minCount: {
            required: false,
            serializedName: 'minCount',
            type: {
              name: 'Number'
            }
          },
          enableAutoScaling: {
            required: false,
            serializedName: 'enableAutoScaling',
            type: {
              name: 'Boolean'
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          orchestratorVersion: {
            required: false,
            serializedName: 'orchestratorVersion',
            type: {
              name: 'String'
            }
          },
          provisioningState: {
            required: false,
            readOnly: true,
            serializedName: 'provisioningState',
            type: {
              name: 'String'
            }
          },
          availabilityZones: {
            required: false,
            serializedName: 'availabilityZones',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          name: {
            required: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ManagedClusterAgentPoolProfile;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Profile for the container service orchestrator.
 *
 */
class ContainerServiceOrchestratorProfile {
  /**
   * Create a ContainerServiceOrchestratorProfile.
   * @property {string} orchestratorType The orchestrator to use to manage
   * container service cluster resources. Valid values are Kubernetes, Swarm,
   * DCOS, DockerCE and Custom. Possible values include: 'Kubernetes', 'Swarm',
   * 'DCOS', 'DockerCE', 'Custom'
   * @property {string} [orchestratorVersion] The version of the orchestrator
   * to use. You can specify the major.minor.patch part of the actual
   * version.For example, you can specify version as "1.6.11".
   */
  constructor() {
  }

  /**
   * Defines the metadata of ContainerServiceOrchestratorProfile
   *
   * @returns {object} metadata of ContainerServiceOrchestratorProfile
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ContainerServiceOrchestratorProfile',
      type: {
        name: 'Composite',
        className: 'ContainerServiceOrchestratorProfile',
        modelProperties: {
          orchestratorType: {
            required: true,
            serializedName: 'orchestratorType',
            type: {
              name: 'String'
            }
          },
          orchestratorVersion: {
            required: false,
            serializedName: 'orchestratorVersion',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ContainerServiceOrchestratorProfile;

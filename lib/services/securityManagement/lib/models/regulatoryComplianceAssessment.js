/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Regulatory compliance assessment details and state
 *
 * @extends models['Resource']
 */
class RegulatoryComplianceAssessment extends models['Resource'] {
  /**
   * Create a RegulatoryComplianceAssessment.
   * @property {string} [description] The description of the regulatory
   * compliance assessment
   * @property {string} [assessmentType] The expected type of assessment
   * contained in the AssessmentDetailsLink
   * @property {string} [assessmentDetailsLink] Link to more detailed
   * assessment results data. The response type will be according to the
   * assessmentType field
   * @property {string} [state] Aggregative state based on the assessment's
   * scanned resources states. Possible values include: 'Passed', 'Failed',
   * 'Skipped', 'Unsupported'
   * @property {number} [passedResources] The given assessment's related
   * resources count with passed state.
   * @property {number} [failedResources] The given assessment's related
   * resources count with failed state.
   * @property {number} [skippedResources] The given assessment's related
   * resources count with skipped state.
   * @property {number} [unsupportedResources] The given assessment's related
   * resources count with unsupported state.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of RegulatoryComplianceAssessment
   *
   * @returns {object} metadata of RegulatoryComplianceAssessment
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RegulatoryComplianceAssessment',
      type: {
        name: 'Composite',
        className: 'RegulatoryComplianceAssessment',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          description: {
            required: false,
            readOnly: true,
            serializedName: 'properties.description',
            type: {
              name: 'String'
            }
          },
          assessmentType: {
            required: false,
            readOnly: true,
            serializedName: 'properties.assessmentType',
            type: {
              name: 'String'
            }
          },
          assessmentDetailsLink: {
            required: false,
            readOnly: true,
            serializedName: 'properties.assessmentDetailsLink',
            type: {
              name: 'String'
            }
          },
          state: {
            required: false,
            serializedName: 'properties.state',
            type: {
              name: 'String'
            }
          },
          passedResources: {
            required: false,
            readOnly: true,
            serializedName: 'properties.passedResources',
            type: {
              name: 'Number'
            }
          },
          failedResources: {
            required: false,
            readOnly: true,
            serializedName: 'properties.failedResources',
            type: {
              name: 'Number'
            }
          },
          skippedResources: {
            required: false,
            readOnly: true,
            serializedName: 'properties.skippedResources',
            type: {
              name: 'Number'
            }
          },
          unsupportedResources: {
            required: false,
            readOnly: true,
            serializedName: 'properties.unsupportedResources',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = RegulatoryComplianceAssessment;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * A custom alert rule that checks if a value (depends on the custom alert
 * type) is within the given range.
 *
 * @extends models['CustomAlertRule']
 */
class ThresholdCustomAlertRule extends models['CustomAlertRule'] {
  /**
   * Create a ThresholdCustomAlertRule.
   * @property {number} minThreshold The minimum threshold.
   * @property {number} maxThreshold The maximum threshold.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ThresholdCustomAlertRule
   *
   * @returns {object} metadata of ThresholdCustomAlertRule
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ThresholdCustomAlertRule',
      type: {
        name: 'Composite',
        className: 'ThresholdCustomAlertRule',
        modelProperties: {
          displayName: {
            required: false,
            readOnly: true,
            serializedName: 'displayName',
            type: {
              name: 'String'
            }
          },
          description: {
            required: false,
            readOnly: true,
            serializedName: 'description',
            type: {
              name: 'String'
            }
          },
          isEnabled: {
            required: true,
            serializedName: 'isEnabled',
            type: {
              name: 'Boolean'
            }
          },
          ruleType: {
            required: true,
            serializedName: 'ruleType',
            type: {
              name: 'String'
            }
          },
          minThreshold: {
            required: true,
            serializedName: 'minThreshold',
            type: {
              name: 'Number'
            }
          },
          maxThreshold: {
            required: true,
            serializedName: 'maxThreshold',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = ThresholdCustomAlertRule;

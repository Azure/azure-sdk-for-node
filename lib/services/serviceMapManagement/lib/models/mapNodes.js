/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The nodes (entities) of a map.
 *
 */
class MapNodes {
  /**
   * Create a MapNodes.
   * @property {array} [machines] Machine resources.
   * @property {array} [processes] Process resources.
   * @property {array} [ports] Port resources.
   * @property {array} [clientGroups] Client Group resources.
   */
  constructor() {
  }

  /**
   * Defines the metadata of MapNodes
   *
   * @returns {object} metadata of MapNodes
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'MapNodes',
      type: {
        name: 'Composite',
        className: 'MapNodes',
        modelProperties: {
          machines: {
            required: false,
            serializedName: 'machines',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'MachineElementType',
                  type: {
                    name: 'Composite',
                    polymorphicDiscriminator: {
                      serializedName: 'kind',
                      clientName: 'kind'
                    },
                    uberParent: 'BaseResource',
                    className: 'Machine'
                  }
              }
            }
          },
          processes: {
            required: false,
            serializedName: 'processes',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ProcessElementType',
                  type: {
                    name: 'Composite',
                    polymorphicDiscriminator: {
                      serializedName: 'kind',
                      clientName: 'kind'
                    },
                    uberParent: 'BaseResource',
                    className: 'Process'
                  }
              }
            }
          },
          ports: {
            required: false,
            serializedName: 'ports',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PortElementType',
                  type: {
                    name: 'Composite',
                    polymorphicDiscriminator: {
                      serializedName: 'kind',
                      clientName: 'kind'
                    },
                    uberParent: 'BaseResource',
                    className: 'Port'
                  }
              }
            }
          },
          clientGroups: {
            required: false,
            serializedName: 'clientGroups',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ClientGroupElementType',
                  type: {
                    name: 'Composite',
                    polymorphicDiscriminator: {
                      serializedName: 'kind',
                      clientName: 'kind'
                    },
                    uberParent: 'BaseResource',
                    className: 'ClientGroup'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = MapNodes;

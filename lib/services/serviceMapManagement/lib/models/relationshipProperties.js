/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Relationship properties.
 *
 */
class RelationshipProperties {
  /**
   * Create a RelationshipProperties.
   * @property {object} source Source resource of the relationship.
   * @property {string} [source.id] Resource URI.
   * @property {string} [source.type] Resource type qualifier.
   * @property {string} [source.name] Resource name.
   * @property {string} [source.kind] Polymorphic Discriminator
   * @property {object} destination Destination resource of the relationship.
   * @property {string} [destination.id] Resource URI.
   * @property {string} [destination.type] Resource type qualifier.
   * @property {string} [destination.name] Resource name.
   * @property {string} [destination.kind] Polymorphic Discriminator
   * @property {date} [startTime] Relationship start time.
   * @property {date} [endTime] Relationship end time.
   */
  constructor() {
  }

  /**
   * Defines the metadata of RelationshipProperties
   *
   * @returns {object} metadata of RelationshipProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'RelationshipProperties',
      type: {
        name: 'Composite',
        className: 'RelationshipProperties',
        modelProperties: {
          source: {
            required: true,
            serializedName: 'source',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'kind',
                clientName: 'kind'
              },
              uberParent: 'ResourceReference',
              className: 'ResourceReference'
            }
          },
          destination: {
            required: true,
            serializedName: 'destination',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'kind',
                clientName: 'kind'
              },
              uberParent: 'ResourceReference',
              className: 'ResourceReference'
            }
          },
          startTime: {
            required: false,
            serializedName: 'startTime',
            type: {
              name: 'DateTime'
            }
          },
          endTime: {
            required: false,
            serializedName: 'endTime',
            type: {
              name: 'DateTime'
            }
          }
        }
      }
    };
  }
}

module.exports = RelationshipProperties;

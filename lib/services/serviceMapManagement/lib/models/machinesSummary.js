/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * A summary of the machines in the workspace.
 *
 * @extends models['Summary']
 */
class MachinesSummary extends models['Summary'] {
  /**
   * Create a MachinesSummary.
   * @property {date} startTime Summary interval start time.
   * @property {date} endTime Summary interval end time.
   * @property {number} total Total number of machines.
   * @property {number} live Number of live machines.
   * @property {object} os Machine counts by operating system.
   * @property {number} [os.windows] Number of live Windows machines.
   * @property {number} [os.linux] Number of live Linux machines.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of MachinesSummary
   *
   * @returns {object} metadata of MachinesSummary
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'MachinesSummary',
      type: {
        name: 'Composite',
        className: 'MachinesSummary',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          startTime: {
            required: true,
            serializedName: 'properties.startTime',
            type: {
              name: 'DateTime'
            }
          },
          endTime: {
            required: true,
            serializedName: 'properties.endTime',
            type: {
              name: 'DateTime'
            }
          },
          total: {
            required: true,
            serializedName: 'properties.total',
            type: {
              name: 'Number'
            }
          },
          live: {
            required: true,
            serializedName: 'properties.live',
            type: {
              name: 'Number'
            }
          },
          os: {
            required: true,
            serializedName: 'properties.os',
            type: {
              name: 'Composite',
              className: 'MachineCountsByOperatingSystem'
            }
          }
        }
      }
    };
  }
}

module.exports = MachinesSummary;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the SkuName class.
 * @constructor
 * @member {string} [name]
 */
export interface SkuName {
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the SkuProperty class.
 * @constructor
 * @member {string} [name] An invariant to describe the feature.
 * @member {string} [value] An invariant if the feature is measured by
 * quantity.
 */
export interface SkuProperty {
  name?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the SkuRestriction class.
 * @constructor
 * @member {string} [type] The type of restrictions.
 * @member {array} [values] The value of restrictions. If the restriction type
 * is set to location. This would be different locations where the SKU is
 * restricted.
 * @member {string} [reasonCode] The reason for restriction.
 */
export interface SkuRestriction {
  type?: string;
  values?: string[];
  reasonCode?: string;
}

/**
 * @class
 * Initializes a new instance of the Catalog class.
 * @constructor
 * @member {string} [resourceType] The type of resource the SKU applies to.
 * @member {string} [name] The name of SKU
 * @member {array} [terms] Available reservation terms for this resource
 * @member {array} [locations]
 * @member {array} [skuProperties]
 * @member {array} [restrictions]
 */
export interface Catalog {
  readonly resourceType?: string;
  readonly name?: string;
  readonly terms?: string[];
  readonly locations?: string[];
  readonly skuProperties?: SkuProperty[];
  readonly restrictions?: SkuRestriction[];
}

/**
 * @class
 * Initializes a new instance of the ExtendedStatusInfo class.
 * @constructor
 * @member {string} [statusCode] Possible values include: 'None', 'Pending',
 * 'Active', 'PurchaseError', 'PaymentInstrumentError', 'Split', 'Merged',
 * 'Expired', 'Succeeded'
 * @member {string} [message] The message giving detailed information about the
 * status code.
 */
export interface ExtendedStatusInfo {
  statusCode?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the ReservationSplitProperties class.
 * @constructor
 * @member {array} [splitDestinations] List of destination Resource Id that are
 * created due to split. Format of the resource Id is
 * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 * @member {string} [splitSource] Resource Id of the Reservation from which
 * this is split. Format of the resource Id is
 * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 */
export interface ReservationSplitProperties {
  splitDestinations?: string[];
  splitSource?: string;
}

/**
 * @class
 * Initializes a new instance of the ReservationMergeProperties class.
 * @constructor
 * @member {string} [mergeDestination] Reservation Resource Id Created due to
 * the merge. Format of the resource Id is
 * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 * @member {array} [mergeSources] Resource Ids of the Source Reservation's
 * merged to form this Reservation. Format of the resource Id is
 * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 */
export interface ReservationMergeProperties {
  mergeDestination?: string;
  mergeSources?: string[];
}

/**
 * @class
 * Initializes a new instance of the ReservationProperties class.
 * @constructor
 * @member {string} [reservedResourceType] Possible values include:
 * 'VirtualMachines', 'SqlDatabases', 'SuseLinux', 'CosmosDb', 'RedHat'
 * @member {string} [instanceFlexibility] Possible values include: 'On', 'Off',
 * 'NotSupported'
 * @member {string} [displayName] Friendly name for user to easily identify the
 * reservation
 * @member {array} [appliedScopes]
 * @member {string} [appliedScopeType] Possible values include: 'Single',
 * 'Shared'
 * @member {number} [quantity] Quantity of the SKUs that are part of the
 * Reservation.
 * @member {string} [provisioningState] Current state of the reservation.
 * @member {date} [effectiveDateTime] DateTime of the Reservation starting when
 * this version is effective from.
 * @member {date} [lastUpdatedDateTime] DateTime of the last time the
 * Reservation was updated.
 * @member {date} [expiryDate] This is the date when the Reservation will
 * expire.
 * @member {string} [skuDescription] Description of the SKU in english.
 * @member {object} [extendedStatusInfo]
 * @member {string} [extendedStatusInfo.statusCode] Possible values include:
 * 'None', 'Pending', 'Active', 'PurchaseError', 'PaymentInstrumentError',
 * 'Split', 'Merged', 'Expired', 'Succeeded'
 * @member {string} [extendedStatusInfo.message] The message giving detailed
 * information about the status code.
 * @member {object} [splitProperties]
 * @member {array} [splitProperties.splitDestinations] List of destination
 * Resource Id that are created due to split. Format of the resource Id is
 * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 * @member {string} [splitProperties.splitSource] Resource Id of the
 * Reservation from which this is split. Format of the resource Id is
 * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 * @member {object} [mergeProperties]
 * @member {string} [mergeProperties.mergeDestination] Reservation Resource Id
 * Created due to the merge. Format of the resource Id is
 * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 * @member {array} [mergeProperties.mergeSources] Resource Ids of the Source
 * Reservation's merged to form this Reservation. Format of the resource Id is
 * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 */
export interface ReservationProperties {
  reservedResourceType?: string;
  instanceFlexibility?: string;
  displayName?: string;
  appliedScopes?: string[];
  appliedScopeType?: string;
  quantity?: number;
  provisioningState?: string;
  effectiveDateTime?: Date;
  readonly lastUpdatedDateTime?: Date;
  expiryDate?: Date;
  skuDescription?: string;
  extendedStatusInfo?: ExtendedStatusInfo;
  splitProperties?: ReservationSplitProperties;
  mergeProperties?: ReservationMergeProperties;
}

/**
 * @class
 * Initializes a new instance of the ReservationResponse class.
 * @constructor
 * @member {string} [location] The Azure Region where the reserved resource
 * lives.
 * @member {number} [etag]
 * @member {string} [id] Identifier of the reservation
 * @member {string} [name] Name of the reservation
 * @member {object} [sku]
 * @member {string} [sku.name]
 * @member {object} [properties]
 * @member {string} [properties.reservedResourceType] Possible values include:
 * 'VirtualMachines', 'SqlDatabases', 'SuseLinux', 'CosmosDb', 'RedHat'
 * @member {string} [properties.instanceFlexibility] Possible values include:
 * 'On', 'Off', 'NotSupported'
 * @member {string} [properties.displayName] Friendly name for user to easily
 * identify the reservation
 * @member {array} [properties.appliedScopes]
 * @member {string} [properties.appliedScopeType] Possible values include:
 * 'Single', 'Shared'
 * @member {number} [properties.quantity] Quantity of the SKUs that are part of
 * the Reservation.
 * @member {string} [properties.provisioningState] Current state of the
 * reservation.
 * @member {date} [properties.effectiveDateTime] DateTime of the Reservation
 * starting when this version is effective from.
 * @member {date} [properties.lastUpdatedDateTime] DateTime of the last time
 * the Reservation was updated.
 * @member {date} [properties.expiryDate] This is the date when the Reservation
 * will expire.
 * @member {string} [properties.skuDescription] Description of the SKU in
 * english.
 * @member {object} [properties.extendedStatusInfo]
 * @member {string} [properties.extendedStatusInfo.statusCode] Possible values
 * include: 'None', 'Pending', 'Active', 'PurchaseError',
 * 'PaymentInstrumentError', 'Split', 'Merged', 'Expired', 'Succeeded'
 * @member {string} [properties.extendedStatusInfo.message] The message giving
 * detailed information about the status code.
 * @member {object} [properties.splitProperties]
 * @member {array} [properties.splitProperties.splitDestinations] List of
 * destination Resource Id that are created due to split. Format of the
 * resource Id is
 * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 * @member {string} [properties.splitProperties.splitSource] Resource Id of the
 * Reservation from which this is split. Format of the resource Id is
 * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 * @member {object} [properties.mergeProperties]
 * @member {string} [properties.mergeProperties.mergeDestination] Reservation
 * Resource Id Created due to the merge. Format of the resource Id is
 * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 * @member {array} [properties.mergeProperties.mergeSources] Resource Ids of
 * the Source Reservation's merged to form this Reservation. Format of the
 * resource Id is
 * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 * @member {string} [type] Type of resource.
 * "Microsoft.Capacity/reservationOrders/reservations"
 */
export interface ReservationResponse extends BaseResource {
  readonly location?: string;
  etag?: number;
  readonly id?: string;
  readonly name?: string;
  sku?: SkuName;
  properties?: ReservationProperties;
  readonly type?: string;
}

/**
 * @class
 * Initializes a new instance of the ReservationOrderResponse class.
 * @constructor
 * @member {number} [etag]
 * @member {string} [id] Identifier of the reservation
 * @member {string} [name] Name of the reservation
 * @member {string} [displayName] Friendly name for user to easily identified
 * the reservation.
 * @member {date} [requestDateTime] This is the DateTime when the reservation
 * was initially requested for purchase.
 * @member {date} [createdDateTime] This is the DateTime when the reservation
 * was created.
 * @member {date} [expiryDate] This is the date when the Reservation will
 * expire.
 * @member {number} [originalQuantity] Total Quantity of the SKUs purchased in
 * the Reservation.
 * @member {string} [term] Possible values include: 'P1Y', 'P3Y'
 * @member {string} [provisioningState] Current state of the reservation.
 * @member {array} [reservations]
 * @member {string} [type] Type of resource. "Microsoft.Capacity/reservations"
 */
export interface ReservationOrderResponse extends BaseResource {
  etag?: number;
  readonly id?: string;
  readonly name?: string;
  displayName?: string;
  requestDateTime?: Date;
  createdDateTime?: Date;
  expiryDate?: Date;
  originalQuantity?: number;
  term?: string;
  provisioningState?: string;
  reservations?: ReservationResponse[];
  readonly type?: string;
}

/**
 * @class
 * Initializes a new instance of the MergeRequest class.
 * @constructor
 * @member {array} [sources] Format of the resource id should be
 * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 */
export interface MergeRequest {
  sources?: string[];
}

/**
 * @class
 * Initializes a new instance of the Patch class.
 * @constructor
 * @member {string} [appliedScopeType] Possible values include: 'Single',
 * 'Shared'
 * @member {array} [appliedScopes]
 * @member {string} [instanceFlexibility] Possible values include: 'On', 'Off',
 * 'NotSupported'
 * @member {string} [name] Name of the Reservation
 */
export interface Patch {
  appliedScopeType?: string;
  appliedScopes?: string[];
  instanceFlexibility?: string;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the SplitRequest class.
 * @constructor
 * @member {array} [quantities] List of the quantities in the new reservations
 * to create.
 * @member {string} [reservationId] Resource id of the reservation to be split.
 * Format of the resource id should be
 * /providers/Microsoft.Capacity/reservationOrders/{reservationOrderId}/reservations/{reservationId}
 */
export interface SplitRequest {
  quantities?: number[];
  reservationId?: string;
}

/**
 * @class
 * Initializes a new instance of the ExtendedErrorInfo class.
 * @constructor
 * @member {string} [code] Possible values include: 'NotSpecified',
 * 'InternalServerError', 'ServerTimeout', 'AuthorizationFailed', 'BadRequest',
 * 'ClientCertificateThumbprintNotSet', 'InvalidRequestContent',
 * 'OperationFailed', 'HttpMethodNotSupported', 'InvalidRequestUri',
 * 'MissingTenantId', 'InvalidTenantId', 'InvalidReservationOrderId',
 * 'InvalidReservationId', 'ReservationIdNotInReservationOrder',
 * 'ReservationOrderNotFound', 'InvalidSubscriptionId', 'InvalidAccessToken',
 * 'InvalidLocationId', 'UnauthenticatedRequestsThrottled',
 * 'InvalidHealthCheckType', 'Forbidden', 'BillingScopeIdCannotBeChanged',
 * 'AppliedScopesNotAssociatedWithCommerceAccount',
 * 'PatchValuesSameAsExisting', 'RoleAssignmentCreationFailed',
 * 'ReservationOrderCreationFailed', 'ReservationOrderNotEnabled',
 * 'CapacityUpdateScopesFailed', 'UnsupportedReservationTerm',
 * 'ReservationOrderIdAlreadyExists', 'RiskCheckFailed', 'CreateQuoteFailed',
 * 'ActivateQuoteFailed', 'NonsupportedAccountId', 'PaymentInstrumentNotFound',
 * 'MissingAppliedScopesForSingle', 'NoValidReservationsToReRate',
 * 'ReRateOnlyAllowedForEA', 'OperationCannotBePerformedInCurrentState',
 * 'InvalidSingleAppliedScopesCount', 'InvalidFulfillmentRequestParameters',
 * 'NotSupportedCountry', 'InvalidRefundQuantity', 'PurchaseError',
 * 'BillingCustomerInputError', 'BillingPaymentInstrumentSoftError',
 * 'BillingPaymentInstrumentHardError', 'BillingTransientError',
 * 'BillingError', 'FulfillmentConfigurationError',
 * 'FulfillmentOutOfStockError', 'FulfillmentTransientError',
 * 'FulfillmentError', 'CalculatePriceFailed'
 * @member {string} [message]
 */
export interface ExtendedErrorInfo {
  code?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorModel class.
 * @constructor
 * @member {object} [error]
 * @member {string} [error.code] Possible values include: 'NotSpecified',
 * 'InternalServerError', 'ServerTimeout', 'AuthorizationFailed', 'BadRequest',
 * 'ClientCertificateThumbprintNotSet', 'InvalidRequestContent',
 * 'OperationFailed', 'HttpMethodNotSupported', 'InvalidRequestUri',
 * 'MissingTenantId', 'InvalidTenantId', 'InvalidReservationOrderId',
 * 'InvalidReservationId', 'ReservationIdNotInReservationOrder',
 * 'ReservationOrderNotFound', 'InvalidSubscriptionId', 'InvalidAccessToken',
 * 'InvalidLocationId', 'UnauthenticatedRequestsThrottled',
 * 'InvalidHealthCheckType', 'Forbidden', 'BillingScopeIdCannotBeChanged',
 * 'AppliedScopesNotAssociatedWithCommerceAccount',
 * 'PatchValuesSameAsExisting', 'RoleAssignmentCreationFailed',
 * 'ReservationOrderCreationFailed', 'ReservationOrderNotEnabled',
 * 'CapacityUpdateScopesFailed', 'UnsupportedReservationTerm',
 * 'ReservationOrderIdAlreadyExists', 'RiskCheckFailed', 'CreateQuoteFailed',
 * 'ActivateQuoteFailed', 'NonsupportedAccountId', 'PaymentInstrumentNotFound',
 * 'MissingAppliedScopesForSingle', 'NoValidReservationsToReRate',
 * 'ReRateOnlyAllowedForEA', 'OperationCannotBePerformedInCurrentState',
 * 'InvalidSingleAppliedScopesCount', 'InvalidFulfillmentRequestParameters',
 * 'NotSupportedCountry', 'InvalidRefundQuantity', 'PurchaseError',
 * 'BillingCustomerInputError', 'BillingPaymentInstrumentSoftError',
 * 'BillingPaymentInstrumentHardError', 'BillingTransientError',
 * 'BillingError', 'FulfillmentConfigurationError',
 * 'FulfillmentOutOfStockError', 'FulfillmentTransientError',
 * 'FulfillmentError', 'CalculatePriceFailed'
 * @member {string} [error.message]
 */
export interface ErrorModel {
  error?: ExtendedErrorInfo;
}

/**
 * @class
 * Initializes a new instance of the AppliedReservationList class.
 * @constructor
 * @member {array} [value]
 * @member {string} [nextLink] Url to get the next page of reservations
 */
export interface AppliedReservationList {
  value?: string[];
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the AppliedReservations class.
 * @constructor
 * @member {string} [id] Identifier of the applied reservations
 * @member {string} [name] Name of resource
 * @member {string} [type] Type of resource.
 * "Microsoft.Capacity/AppliedReservations"
 * @member {object} [reservationOrderIds]
 * @member {array} [reservationOrderIds.value]
 * @member {string} [reservationOrderIds.nextLink] Url to get the next page of
 * reservations
 */
export interface AppliedReservations {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
  reservationOrderIds?: AppliedReservationList;
}

/**
 * @class
 * Initializes a new instance of the OperationDisplay class.
 * @constructor
 * @member {string} [provider]
 * @member {string} [resource]
 * @member {string} [operation]
 * @member {string} [description]
 */
export interface OperationDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationResponse class.
 * @constructor
 * @member {string} [name]
 * @member {object} [display]
 * @member {string} [display.provider]
 * @member {string} [display.resource]
 * @member {string} [display.operation]
 * @member {string} [display.description]
 * @member {string} [origin]
 */
export interface OperationResponse {
  name?: string;
  display?: OperationDisplay;
  origin?: string;
}


/**
 * @class
 * Initializes a new instance of the ReservationOrderList class.
 * @constructor
 * @member {string} [nextLink] Url to get the next page of reservationOrders.
 */
export interface ReservationOrderList extends Array<ReservationOrderResponse> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ReservationList class.
 * @constructor
 * @member {string} [nextLink] Url to get the next page of reservations.
 */
export interface ReservationList extends Array<ReservationResponse> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationList class.
 * @constructor
 * @member {string} [nextLink] Url to get the next page of items.
 */
export interface OperationList extends Array<OperationResponse> {
  nextLink?: string;
}

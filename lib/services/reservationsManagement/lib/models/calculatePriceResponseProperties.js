/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Class representing a CalculatePriceResponseProperties.
 */
class CalculatePriceResponseProperties {
  /**
   * Create a CalculatePriceResponseProperties.
   * @property {object} [billingCurrencyTotal] Currency and amount that
   * customer will be charged in customer's local currency. Tax is not
   * included.
   * @property {string} [billingCurrencyTotal.currencyCode]
   * @property {number} [billingCurrencyTotal.amount]
   * @property {boolean} [isBillingPartnerManaged] True if billing is managed
   * by Microsoft Partner. Used only for CSP accounts.
   * @property {string} [reservationOrderId] GUID that represents reservation
   * order that can be placed after calculating price.
   * @property {string} [skuTitle] Title of SKU that is being purchased.
   * @property {string} [skuDescription] Description of SKU that is being
   * purchased.
   * @property {object} [pricingCurrencyTotal] Amount that Microsoft uses for
   * record. Used during refund for calculating refund limit. Tax is not
   * included.
   * @property {string} [pricingCurrencyTotal.currencyCode]
   * @property {number} [pricingCurrencyTotal.amount]
   */
  constructor() {
  }

  /**
   * Defines the metadata of CalculatePriceResponseProperties
   *
   * @returns {object} metadata of CalculatePriceResponseProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'CalculatePriceResponseProperties',
      type: {
        name: 'Composite',
        className: 'CalculatePriceResponseProperties',
        modelProperties: {
          billingCurrencyTotal: {
            required: false,
            serializedName: 'billingCurrencyTotal',
            type: {
              name: 'Composite',
              className: 'CalculatePriceResponsePropertiesBillingCurrencyTotal'
            }
          },
          isBillingPartnerManaged: {
            required: false,
            serializedName: 'isBillingPartnerManaged',
            type: {
              name: 'Boolean'
            }
          },
          reservationOrderId: {
            required: false,
            serializedName: 'reservationOrderId',
            type: {
              name: 'String'
            }
          },
          skuTitle: {
            required: false,
            serializedName: 'skuTitle',
            type: {
              name: 'String'
            }
          },
          skuDescription: {
            required: false,
            serializedName: 'skuDescription',
            type: {
              name: 'String'
            }
          },
          pricingCurrencyTotal: {
            required: false,
            serializedName: 'pricingCurrencyTotal',
            type: {
              name: 'Composite',
              className: 'CalculatePriceResponsePropertiesPricingCurrencyTotal'
            }
          }
        }
      }
    };
  }
}

module.exports = CalculatePriceResponseProperties;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Used to target devices based on a specific region. A center point (defined
 * by a latitude and longitude) and a radius form the boundary for the region.
 * This criterion will be met when the user crosses the boundaries of the
 * region.
 *
 *
 * @extends models['Criterion']
 */
class GeoFencingCriterion extends models['Criterion'] {
  /**
   * Create a GeoFencingCriterion.
   * @member {number} [lat] The latitude of the central point of the region.
   * @member {number} [lon] The longitude of the central point of the region.
   * @member {number} [radius] The radius of the central point of the region,
   * in meters.
   * @member {number} [expiration] Number of minutes before device location is
   * considered to be expired.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of GeoFencingCriterion
   *
   * @returns {object} metadata of GeoFencingCriterion
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'geo-fencing',
      type: {
        name: 'Composite',
        className: 'GeoFencingCriterion',
        modelProperties: {
          type: {
            required: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          lat: {
            required: false,
            serializedName: 'lat',
            type: {
              name: 'Number'
            }
          },
          lon: {
            required: false,
            serializedName: 'lon',
            type: {
              name: 'Number'
            }
          },
          radius: {
            required: false,
            serializedName: 'radius',
            type: {
              name: 'Number'
            }
          },
          expiration: {
            required: false,
            serializedName: 'expiration',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = GeoFencingCriterion;

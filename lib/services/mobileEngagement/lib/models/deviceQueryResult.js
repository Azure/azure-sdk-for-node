/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a DeviceQueryResult.
 */
class DeviceQueryResult {
  /**
   * Create a DeviceQueryResult.
   * @member {string} deviceId The device result.
   * @member {object} [meta] Application usage data.
   * @member {number} [meta.firstSeen] First time the device used the
   * application in milliseconds since January 1st, 1970 UTC.
   * @member {number} [meta.lastSeen] Last time the device used the application
   * in milliseconds since January 1st, 1970 UTC.
   * @member {number} [meta.lastInfo] Timestamp corresponding to the info
   * object in milliseconds since January 1st, 1970 UTC.
   * @member {number} [meta.lastLocation] Timestamp corresponding to the
   * location object in milliseconds since January 1st, 1970 UTC.
   * @member {boolean} [meta.nativePushEnabled] Boolean indicating if native
   * push notifications (like Android’s GCM or Apple’s APNS) are enabled for
   * the application. This boolean is set to true when the application
   * registers successfully to the native push service, and set to false when
   * the native push service reports to Mobile Engagement that the application
   * can no longer be pushed (which means that it has been uninstalled). This
   * report is performed a few hours after Mobile Engagement has tried to
   * perform a native push to a device on which the application has been
   * uninstalled.
   * @member {object} [appInfo] Also known as tags, a key-value set as a JSON
   * object.
   */
  constructor() {
  }

  /**
   * Defines the metadata of DeviceQueryResult
   *
   * @returns {object} metadata of DeviceQueryResult
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DeviceQueryResult',
      type: {
        name: 'Composite',
        className: 'DeviceQueryResult',
        modelProperties: {
          deviceId: {
            required: true,
            serializedName: 'deviceId',
            type: {
              name: 'String'
            }
          },
          meta: {
            required: false,
            serializedName: 'meta',
            type: {
              name: 'Composite',
              className: 'DeviceMeta'
            }
          },
          appInfo: {
            required: false,
            serializedName: 'appInfo',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = DeviceQueryResult;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a ImportTaskResult.
 * @extends models['ImportTask']
 */
class ImportTaskResult extends models['ImportTask'] {
  /**
   * Create a ImportTaskResult.
   * @member {string} [id] Unique identifier of the import task.
   * @member {string} [state] The current state of the import task. Possible
   * values include: 'Queued', 'Started', 'Succeeded', 'Failed'
   * @member {date} [dateCreated] The date at which the import job was created.
   * The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as
   * specified by the ISO 8601 standard.
   * @member {date} [dateCompleted] The date at which the import job completed
   * (Not present if not yet completed).
   * The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as
   * specified by the ISO 8601 standard.
   * @member {string} [errorDetails] Details of any errors encountered during
   * the import, if any.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ImportTaskResult
   *
   * @returns {object} metadata of ImportTaskResult
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'importTaskResult',
      type: {
        name: 'Composite',
        className: 'ImportTaskResult',
        modelProperties: {
          storageUrl: {
            required: false,
            serializedName: 'storageUrl',
            type: {
              name: 'String'
            }
          },
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          state: {
            required: false,
            serializedName: 'state',
            type: {
              name: 'String'
            }
          },
          dateCreated: {
            required: false,
            serializedName: 'dateCreated',
            type: {
              name: 'DateTime'
            }
          },
          dateCompleted: {
            required: false,
            serializedName: 'dateCompleted',
            type: {
              name: 'DateTime'
            }
          },
          errorDetails: {
            required: false,
            serializedName: 'errorDetails',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ImportTaskResult;

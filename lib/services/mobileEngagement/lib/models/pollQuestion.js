/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Class representing a PollQuestion.
 * @extends models['PollQuestionLocalization']
 */
class PollQuestion extends models['PollQuestionLocalization'] {
  /**
   * Create a PollQuestion.
   * @member {number} [id] Unique identifier of the question.
   * @member {object} [localization] Poll questions can be localized using an
   * optional JSON object. The JSON key is a two-character language code as
   * specified by the ISO 639-1 standard. The corresponding value is an object
   * containing the localizable property title.
   * @member {array} [choices] List of possible choices for this question.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of PollQuestion
   *
   * @returns {object} metadata of PollQuestion
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PollQuestion',
      type: {
        name: 'Composite',
        className: 'PollQuestion',
        modelProperties: {
          title: {
            required: false,
            serializedName: 'title',
            constraints: {
              MaxLength: 256
            },
            type: {
              name: 'String'
            }
          },
          id: {
            required: false,
            serializedName: 'id',
            type: {
              name: 'Number'
            }
          },
          localization: {
            required: false,
            serializedName: 'localization',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'PollQuestionLocalizationElementType',
                  type: {
                    name: 'Composite',
                    className: 'PollQuestionLocalization'
                  }
              }
            }
          },
          choices: {
            required: false,
            serializedName: 'choices',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'PollQuestionChoiceElementType',
                  type: {
                    name: 'Composite',
                    className: 'PollQuestionChoice'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = PollQuestion;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Result of a DetectImage call.
 *
 */
class DetectResult {
  /**
   * Create a DetectResult.
   * @member {array} [objects] An array of detected objects.
   * @member {string} [requestId] Id of the REST API request.
   * @member {object} [metadata]
   * @member {number} [metadata.width] Image width, in pixels.
   * @member {number} [metadata.height] Image height, in pixels.
   * @member {string} [metadata.format] Image format.
   */
  constructor() {
  }

  /**
   * Defines the metadata of DetectResult
   *
   * @returns {object} metadata of DetectResult
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DetectResult',
      type: {
        name: 'Composite',
        className: 'DetectResult',
        modelProperties: {
          objects: {
            required: false,
            nullable: true,
            readOnly: true,
            serializedName: 'objects',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'DetectedObjectElementType',
                  type: {
                    name: 'Composite',
                    className: 'DetectedObject'
                  }
              }
            }
          },
          requestId: {
            required: false,
            nullable: true,
            serializedName: 'requestId',
            type: {
              name: 'String'
            }
          },
          metadata: {
            required: false,
            serializedName: 'metadata',
            type: {
              name: 'Composite',
              className: 'ImageMetadata'
            }
          }
        }
      }
    };
  }
}

module.exports = DetectResult;

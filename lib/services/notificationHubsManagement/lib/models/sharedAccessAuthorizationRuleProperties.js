/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var util = require('util');

/**
 * @class
 * Initializes a new instance of the SharedAccessAuthorizationRuleProperties class.
 * @constructor
 * SharedAccessAuthorizationRule properties.
 * @member {string} [primaryKey] The primary key that was used.
 * 
 * @member {string} [secondaryKey] The secondary key that was used.
 * 
 * @member {string} [keyName] The name of the key that was used.
 * 
 * @member {string} [claimType] The type of the claim.
 * 
 * @member {string} [claimValue] The value of the claim.
 * 
 * @member {array} [rights] The rights associated with the rule.
 * 
 * @member {date} [createdTime] The time at which the authorization rule was
 * created.
 * 
 * @member {date} [modifiedTime] The most recent time the rule was updated.
 * 
 * @member {number} [revision] The revision number for the rule.
 * 
 */
function SharedAccessAuthorizationRuleProperties() {
}

/**
 * Defines the metadata of SharedAccessAuthorizationRuleProperties
 *
 * @returns {object} metadata of SharedAccessAuthorizationRuleProperties
 *
 */
SharedAccessAuthorizationRuleProperties.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'SharedAccessAuthorizationRuleProperties',
    type: {
      name: 'Composite',
      className: 'SharedAccessAuthorizationRuleProperties',
      modelProperties: {
        primaryKey: {
          required: false,
          serializedName: 'primaryKey',
          type: {
            name: 'String'
          }
        },
        secondaryKey: {
          required: false,
          serializedName: 'secondaryKey',
          type: {
            name: 'String'
          }
        },
        keyName: {
          required: false,
          serializedName: 'keyName',
          type: {
            name: 'String'
          }
        },
        claimType: {
          required: false,
          serializedName: 'claimType',
          type: {
            name: 'String'
          }
        },
        claimValue: {
          required: false,
          serializedName: 'claimValue',
          type: {
            name: 'String'
          }
        },
        rights: {
          required: false,
          serializedName: 'rights',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'AccessRightsElementType',
                type: {
                  name: 'Enum',
                  allowedValues: [ 'Manage', 'Send', 'Listen' ]
                }
            }
          }
        },
        createdTime: {
          required: false,
          serializedName: 'createdTime',
          type: {
            name: 'DateTime'
          }
        },
        modifiedTime: {
          required: false,
          serializedName: 'modifiedTime',
          type: {
            name: 'DateTime'
          }
        },
        revision: {
          required: false,
          serializedName: 'revision',
          type: {
            name: 'Number'
          }
        }
      }
    }
  };
};

module.exports = SharedAccessAuthorizationRuleProperties;

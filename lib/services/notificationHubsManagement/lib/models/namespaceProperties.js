/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the NamespaceProperties class.
 * @constructor
 * Namespace properties.
 * @member {string} [name] The name of the namespace.
 * 
 * @member {string} [provisioningState] Gets or sets provisioning state of the
 * Namespace.
 * 
 * @member {string} [region] Specifies the targeted region in which the
 * namespace should be created. It can be any of the following values:
 * Australia EastAustralia SoutheastCentral USEast USEast US 2West USNorth
 * Central USSouth Central USEast AsiaSoutheast AsiaBrazil SouthJapan
 * EastJapan WestNorth EuropeWest Europe
 * 
 * @member {string} [status] Status of the namespace. It can be any of these
 * values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
 * 
 * @member {date} [createdAt] The time the namespace was created.
 * 
 * @member {string} [serviceBusEndpoint] Endpoint you can use to perform
 * NotificationHub operations.
 * 
 * @member {string} [subscriptionId] The Id of the Azure subscription
 * associated with the namespace.
 * 
 * @member {string} [scaleUnit] ScaleUnit where the namespace gets created
 * 
 * @member {boolean} [enabled] Whether or not the namespace is currently
 * enabled.
 * 
 * @member {boolean} [critical] Whether or not the namespace is set as
 * Critical.
 * 
 * @member {string} [namespaceType] Gets or sets the namespace type. Possible
 * values include: 'Messaging', 'NotificationHub'
 * 
 */
function NamespaceProperties() {
}

/**
 * Defines the metadata of NamespaceProperties
 *
 * @returns {object} metadata of NamespaceProperties
 *
 */
NamespaceProperties.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'NamespaceProperties',
    type: {
      name: 'Composite',
      className: 'NamespaceProperties',
      modelProperties: {
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        provisioningState: {
          required: false,
          serializedName: 'provisioningState',
          type: {
            name: 'String'
          }
        },
        region: {
          required: false,
          serializedName: 'region',
          type: {
            name: 'String'
          }
        },
        status: {
          required: false,
          serializedName: 'status',
          type: {
            name: 'String'
          }
        },
        createdAt: {
          required: false,
          serializedName: 'createdAt',
          type: {
            name: 'DateTime'
          }
        },
        serviceBusEndpoint: {
          required: false,
          serializedName: 'serviceBusEndpoint',
          type: {
            name: 'String'
          }
        },
        subscriptionId: {
          required: false,
          serializedName: 'subscriptionId',
          type: {
            name: 'String'
          }
        },
        scaleUnit: {
          required: false,
          serializedName: 'scaleUnit',
          type: {
            name: 'String'
          }
        },
        enabled: {
          required: false,
          serializedName: 'enabled',
          type: {
            name: 'Boolean'
          }
        },
        critical: {
          required: false,
          serializedName: 'critical',
          type: {
            name: 'Boolean'
          }
        },
        namespaceType: {
          required: false,
          serializedName: 'namespaceType',
          type: {
            name: 'Enum',
            allowedValues: [ 'Messaging', 'NotificationHub' ]
          }
        }
      }
    }
  };
};

module.exports = NamespaceProperties;

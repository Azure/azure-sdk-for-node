/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the CheckAvailabilityParameters class.
 * @constructor
 * Parameters supplied to the Check Name Availability for Namespace and
 * NotificationHubs.
 * @member {string} name Gets or sets name
 * 
 * @member {string} [location] Gets or sets location.
 * 
 * @member {object} [tags] Gets or sets tags.
 * 
 * @member {boolean} [isAvailiable] Gets or sets true if the name is available
 * and can be used to create new Namespace/NotificationHub. Otherwise false.
 * 
 */
function CheckAvailabilityParameters() {
}

/**
 * Defines the metadata of CheckAvailabilityParameters
 *
 * @returns {object} metadata of CheckAvailabilityParameters
 *
 */
CheckAvailabilityParameters.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'CheckAvailabilityParameters',
    type: {
      name: 'Composite',
      className: 'CheckAvailabilityParameters',
      modelProperties: {
        name: {
          required: true,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        location: {
          required: false,
          serializedName: 'location',
          type: {
            name: 'String'
          }
        },
        tags: {
          required: false,
          serializedName: 'tags',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        isAvailiable: {
          required: false,
          serializedName: 'isAvailiable',
          type: {
            name: 'Boolean'
          }
        }
      }
    }
  };
};

module.exports = CheckAvailabilityParameters;

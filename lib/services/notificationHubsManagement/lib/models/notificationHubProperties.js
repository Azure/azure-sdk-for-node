/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the NotificationHubProperties class.
 * @constructor
 * NotificationHub properties.
 * @member {string} [name] The NotificationHub name.
 * 
 * @member {string} [registrationTtl] The RegistrationTtl of the created
 * NotificationHub
 * 
 * @member {array} [authorizationRules] The AuthorizationRules of the created
 * NotificationHub
 * 
 * @member {object} [apnsCredential] The ApnsCredential of the created
 * NotificationHub
 * 
 * @member {object} [apnsCredential.properties] Gets or sets properties of
 * NotificationHub ApnsCredential.
 * 
 * @member {string} [apnsCredential.properties.apnsCertificate] Gets or sets
 * the APNS certificate.
 * 
 * @member {string} [apnsCredential.properties.certificateKey] Gets or sets
 * the certificate key.
 * 
 * @member {string} [apnsCredential.properties.endpoint] Gets or sets the
 * endpoint of this credential.
 * 
 * @member {string} [apnsCredential.properties.thumbprint] Gets or sets the
 * Apns certificate Thumbprint
 * 
 * @member {object} [wnsCredential] The WnsCredential of the created
 * NotificationHub
 * 
 * @member {object} [wnsCredential.properties] Gets or sets properties of
 * NotificationHub WnsCredential.
 * 
 * @member {string} [wnsCredential.properties.packageSid] Gets or sets the
 * package ID for this credential.
 * 
 * @member {string} [wnsCredential.properties.secretKey] Gets or sets the
 * secret key.
 * 
 * @member {string} [wnsCredential.properties.windowsLiveEndpoint] Gets or
 * sets the Windows Live endpoint.
 * 
 * @member {object} [gcmCredential] The GcmCredential of the created
 * NotificationHub
 * 
 * @member {object} [gcmCredential.properties] Gets or sets properties of
 * NotificationHub GcmCredential.
 * 
 * @member {string} [gcmCredential.properties.gcmEndpoint] Gets or sets the
 * GCM endpoint.
 * 
 * @member {string} [gcmCredential.properties.googleApiKey] Gets or sets the
 * Google API key.
 * 
 * @member {object} [mpnsCredential] The MpnsCredential of the created
 * NotificationHub
 * 
 * @member {object} [mpnsCredential.properties] Gets or sets properties of
 * NotificationHub MpnsCredential.
 * 
 * @member {string} [mpnsCredential.properties.mpnsCertificate] Gets or sets
 * the MPNS certificate.
 * 
 * @member {string} [mpnsCredential.properties.certificateKey] Gets or sets
 * the certificate key for this credential.
 * 
 * @member {string} [mpnsCredential.properties.thumbprint] Gets or sets the
 * Mpns certificate Thumbprint
 * 
 * @member {object} [admCredential] The AdmCredential of the created
 * NotificationHub
 * 
 * @member {object} [admCredential.properties] Gets or sets properties of
 * NotificationHub AdmCredential.
 * 
 * @member {string} [admCredential.properties.clientId] Gets or sets the
 * client identifier.
 * 
 * @member {string} [admCredential.properties.clientSecret] Gets or sets the
 * credential secret access key.
 * 
 * @member {string} [admCredential.properties.authTokenUrl] Gets or sets the
 * URL of the authorization token.
 * 
 * @member {object} [baiduCredential] The BaiduCredential of the created
 * NotificationHub
 * 
 * @member {object} [baiduCredential.properties] Gets or sets properties of
 * NotificationHub BaiduCredential.
 * 
 * @member {string} [baiduCredential.properties.baiduApiKey] Get or Set Baidu
 * Api Key.
 * 
 * @member {string} [baiduCredential.properties.baiduEndPoint] Get or Set
 * Baidu Endpoint.
 * 
 * @member {string} [baiduCredential.properties.baiduSecretKey] Get or Set
 * Baidu Secret Key
 * 
 */
function NotificationHubProperties() {
}

/**
 * Defines the metadata of NotificationHubProperties
 *
 * @returns {object} metadata of NotificationHubProperties
 *
 */
NotificationHubProperties.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'NotificationHubProperties',
    type: {
      name: 'Composite',
      className: 'NotificationHubProperties',
      modelProperties: {
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        registrationTtl: {
          required: false,
          serializedName: 'registrationTtl',
          type: {
            name: 'String'
          }
        },
        authorizationRules: {
          required: false,
          serializedName: 'authorizationRules',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'SharedAccessAuthorizationRulePropertiesElementType',
                type: {
                  name: 'Composite',
                  className: 'SharedAccessAuthorizationRuleProperties'
                }
            }
          }
        },
        apnsCredential: {
          required: false,
          serializedName: 'apnsCredential',
          type: {
            name: 'Composite',
            className: 'ApnsCredential'
          }
        },
        wnsCredential: {
          required: false,
          serializedName: 'wnsCredential',
          type: {
            name: 'Composite',
            className: 'WnsCredential'
          }
        },
        gcmCredential: {
          required: false,
          serializedName: 'gcmCredential',
          type: {
            name: 'Composite',
            className: 'GcmCredential'
          }
        },
        mpnsCredential: {
          required: false,
          serializedName: 'mpnsCredential',
          type: {
            name: 'Composite',
            className: 'MpnsCredential'
          }
        },
        admCredential: {
          required: false,
          serializedName: 'admCredential',
          type: {
            name: 'Composite',
            className: 'AdmCredential'
          }
        },
        baiduCredential: {
          required: false,
          serializedName: 'baiduCredential',
          type: {
            name: 'Composite',
            className: 'BaiduCredential'
          }
        }
      }
    }
  };
};

module.exports = NotificationHubProperties;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the NamespaceResource class.
 * @constructor
 * Description of a Namespace resource.
 * @member {string} [id] Gets or sets the id of the created Namespace.
 * 
 * @member {string} [location] Gets or sets datacenter location of the
 * Namespace.
 * 
 * @member {string} [name] Gets or sets name of the Namespace.
 * 
 * @member {string} [type] Gets or sets resource type of the Namespace.
 * 
 * @member {object} [tags] Gets or sets tags of the Namespace.
 * 
 * @member {object} [properties] Gets or sets properties of the Namespace.
 * 
 * @member {string} [properties.name] The name of the namespace.
 * 
 * @member {string} [properties.provisioningState] Gets or sets provisioning
 * state of the Namespace.
 * 
 * @member {string} [properties.region] Specifies the targeted region in which
 * the namespace should be created. It can be any of the following values:
 * Australia EastAustralia SoutheastCentral USEast USEast US 2West USNorth
 * Central USSouth Central USEast AsiaSoutheast AsiaBrazil SouthJapan
 * EastJapan WestNorth EuropeWest Europe
 * 
 * @member {string} [properties.status] Status of the namespace. It can be any
 * of these values:1 = Created/Active2 = Creating3 = Suspended4 = Deleting
 * 
 * @member {date} [properties.createdAt] The time the namespace was created.
 * 
 * @member {string} [properties.serviceBusEndpoint] Endpoint you can use to
 * perform NotificationHub operations.
 * 
 * @member {string} [properties.subscriptionId] The Id of the Azure
 * subscription associated with the namespace.
 * 
 * @member {string} [properties.scaleUnit] ScaleUnit where the namespace gets
 * created
 * 
 * @member {boolean} [properties.enabled] Whether or not the namespace is
 * currently enabled.
 * 
 * @member {boolean} [properties.critical] Whether or not the namespace is set
 * as Critical.
 * 
 * @member {string} [properties.namespaceType] Gets or sets the namespace
 * type. Possible values include: 'Messaging', 'NotificationHub'
 * 
 */
function NamespaceResource() {
}

/**
 * Defines the metadata of NamespaceResource
 *
 * @returns {object} metadata of NamespaceResource
 *
 */
NamespaceResource.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'NamespaceResource',
    type: {
      name: 'Composite',
      className: 'NamespaceResource',
      modelProperties: {
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        location: {
          required: false,
          serializedName: 'location',
          type: {
            name: 'String'
          }
        },
        name: {
          required: false,
          serializedName: 'name',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          serializedName: 'type',
          type: {
            name: 'String'
          }
        },
        tags: {
          required: false,
          serializedName: 'tags',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        properties: {
          required: false,
          serializedName: 'properties',
          type: {
            name: 'Composite',
            className: 'NamespaceProperties'
          }
        }
      }
    }
  };
};

module.exports = NamespaceResource;

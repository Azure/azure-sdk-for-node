/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the EncryptionIdentity class.
 * @constructor
 * @member {string} [type] The type of encryption being used. Currently the
 * only supported type is 'SystemAssigned'. Possible values include:
 * 'SystemAssigned'
 * 
 * @member {uuid} [principalId] The principal identifier associated with the
 * encryption.
 * 
 * @member {uuid} [tenantId] The tenant identifier associated with the
 * encryption.
 * 
 */
function EncryptionIdentity() {
}

/**
 * Defines the metadata of EncryptionIdentity
 *
 * @returns {object} metadata of EncryptionIdentity
 *
 */
EncryptionIdentity.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'EncryptionIdentity',
    type: {
      name: 'Composite',
      className: 'EncryptionIdentity',
      modelProperties: {
        type: {
          required: false,
          serializedName: 'type',
          type: {
            name: 'Enum',
            allowedValues: [ 'SystemAssigned' ]
          }
        },
        principalId: {
          required: false,
          readOnly: true,
          serializedName: 'principalId',
          type: {
            name: 'String'
          }
        },
        tenantId: {
          required: false,
          readOnly: true,
          serializedName: 'tenantId',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = EncryptionIdentity;

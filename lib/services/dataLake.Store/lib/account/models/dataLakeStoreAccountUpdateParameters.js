/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the DataLakeStoreAccountUpdateParameters class.
 * @constructor
 * Data Lake Store account information to update
 *
 * @member {object} [tags] Resource tags
 *
 * @member {string} [firewallState] The current state of the IP address
 * firewall for this Data Lake store account. Disabling the firewall does not
 * remove existing rules, they will just be ignored until the firewall is
 * re-enabled. Possible values include: 'Enabled', 'Disabled'
 *
 * @member {string} [trustedIdProviderState] The current state of the trusted
 * identity provider feature for this Data Lake store account. Disabling
 * trusted identity provider functionality does not remove the providers, they
 * will just be ignored until this feature is re-enabled. Possible values
 * include: 'Enabled', 'Disabled'
 *
 * @member {string} [defaultGroup] the default owner group for all new folders
 * and files created in the Data Lake Store account.
 *
 * @member {string} [newTier] the commitment tier to use for next month.
 * Possible values include: 'Consumption', 'Commitment_1TB', 'Commitment_10TB',
 * 'Commitment_100TB', 'Commitment_500TB', 'Commitment_1PB', 'Commitment_5PB'
 *
 * @member {string} [firewallAllowAzureIps] The current state of allowing or
 * disallowing IPs originating within Azure through the firewall. If the
 * firewall is disabled, this is not enforced. Possible values include:
 * 'Enabled', 'Disabled'
 *
 */
function DataLakeStoreAccountUpdateParameters() {
}

/**
 * Defines the metadata of DataLakeStoreAccountUpdateParameters
 *
 * @returns {object} metadata of DataLakeStoreAccountUpdateParameters
 *
 */
DataLakeStoreAccountUpdateParameters.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'DataLakeStoreAccountUpdateParameters',
    type: {
      name: 'Composite',
      className: 'DataLakeStoreAccountUpdateParameters',
      modelProperties: {
        tags: {
          required: false,
          serializedName: 'tags',
          type: {
            name: 'Dictionary',
            value: {
                required: false,
                serializedName: 'StringElementType',
                type: {
                  name: 'String'
                }
            }
          }
        },
        firewallState: {
          required: false,
          serializedName: 'properties.firewallState',
          type: {
            name: 'Enum',
            allowedValues: [ 'Enabled', 'Disabled' ]
          }
        },
        trustedIdProviderState: {
          required: false,
          serializedName: 'properties.trustedIdProviderState',
          type: {
            name: 'Enum',
            allowedValues: [ 'Enabled', 'Disabled' ]
          }
        },
        defaultGroup: {
          required: false,
          serializedName: 'properties.defaultGroup',
          type: {
            name: 'String'
          }
        },
        newTier: {
          required: false,
          serializedName: 'properties.newTier',
          type: {
            name: 'Enum',
            allowedValues: [ 'Consumption', 'Commitment_1TB', 'Commitment_10TB', 'Commitment_100TB', 'Commitment_500TB', 'Commitment_1PB', 'Commitment_5PB' ]
          }
        },
        firewallAllowAzureIps: {
          required: false,
          serializedName: 'properties.firewallAllowAzureIps',
          type: {
            name: 'Enum',
            allowedValues: [ 'Enabled', 'Disabled' ]
          }
        }
      }
    }
  };
};

module.exports = DataLakeStoreAccountUpdateParameters;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */


/**
 * @class
 * Initializes a new instance of the FirewallRuleProperties class.
 * @constructor
 * Data Lake Store firewall rule properties information
 *
 * @member {string} [startIpAddress] the start IP address for the firewall
 * rule.
 * 
 * @member {string} [endIpAddress] the end IP address for the firewall rule.
 * 
 */
export interface FirewallRuleProperties {
  startIpAddress?: string;
  endIpAddress?: string;
}

/**
 * @class
 * Initializes a new instance of the FirewallRule class.
 * @constructor
 * Data Lake Store firewall rule information
 *
 * @member {string} [name] the firewall rule's name.
 * 
 * @member {string} [type] the namespace and type of the firewall Rule.
 * 
 * @member {string} [id] the firewall rule's subscription ID.
 * 
 * @member {string} [location] the firewall rule's regional location.
 * 
 * @member {object} [properties] the properties of the firewall rule.
 * 
 * @member {string} [properties.startIpAddress] the start IP address for the
 * firewall rule.
 * 
 * @member {string} [properties.endIpAddress] the end IP address for the
 * firewall rule.
 * 
 */
export interface FirewallRule {
  name?: string;
  type?: string;
  id?: string;
  location?: string;
  properties?: FirewallRuleProperties;
}

/**
 * @class
 * Initializes a new instance of the EncryptionIdentity class.
 * @constructor
 * @member {string} [type] The type of encryption being used. Currently the
 * only supported type is 'SystemAssigned'. Possible values include:
 * 'SystemAssigned'
 * 
 * @member {uuid} [principalId] The principal identifier associated with the
 * encryption.
 * 
 * @member {uuid} [tenantId] The tenant identifier associated with the
 * encryption.
 * 
 */
export interface EncryptionIdentity {
  type?: string;
  principalId?: string;
  tenantId?: string;
}

/**
 * @class
 * Initializes a new instance of the EncryptionConfig class.
 * @constructor
 * @member {string} [type] The type of encryption configuration being used.
 * Currently the only supported types are 'UserManaged' and 'ServiceManaged'.
 * Possible values include: 'UserManaged', 'ServiceManaged'
 * 
 * @member {object} [keyVaultMetaInfo] The Key vault information for
 * connecting to user managed encryption keys.
 * 
 * @member {string} [keyVaultMetaInfo.keyVaultResourceId] The resource
 * identifier for the user managed Key Vault being used to encrypt.
 * 
 * @member {string} [keyVaultMetaInfo.encryptionKeyName] The name of the user
 * managed encryption key.
 * 
 * @member {string} [keyVaultMetaInfo.encryptionKeyVersion] The version of the
 * user managed encryption key.
 * 
 */
export interface EncryptionConfig {
  type?: string;
  keyVaultMetaInfo?: KeyVaultMetaInfo;
}

/**
 * @class
 * Initializes a new instance of the KeyVaultMetaInfo class.
 * @constructor
 * @member {string} [keyVaultResourceId] The resource identifier for the user
 * managed Key Vault being used to encrypt.
 * 
 * @member {string} [encryptionKeyName] The name of the user managed
 * encryption key.
 * 
 * @member {string} [encryptionKeyVersion] The version of the user managed
 * encryption key.
 * 
 */
export interface KeyVaultMetaInfo {
  keyVaultResourceId?: string;
  encryptionKeyName?: string;
  encryptionKeyVersion?: string;
}

/**
 * @class
 * Initializes a new instance of the DataLakeStoreAccountProperties class.
 * @constructor
 * Data Lake Store account properties information
 *
 * @member {string} [provisioningState] the status of the Data Lake Store
 * account while being provisioned. Possible values include: 'Failed',
 * 'Creating', 'Running', 'Succeeded', 'Patching', 'Suspending', 'Resuming',
 * 'Deleting', 'Deleted'
 * 
 * @member {string} [state] the status of the Data Lake Store account after
 * provisioning has completed. Possible values include: 'active', 'suspended'
 * 
 * @member {date} [creationTime] the account creation time.
 * 
 * @member {string} [encryptionState] The current state of encryption for this
 * Data Lake store account. Possible values include: 'Enabled', 'Disabled'
 * 
 * @member {string} [encryptionProvisioningState] The current state of
 * encryption provisioning for this Data Lake store account. Possible values
 * include: 'Creating', 'Succeeded'
 * 
 * @member {object} [encryptionConfig] The Key vault encryption configuration.
 * 
 * @member {string} [encryptionConfig.type] The type of encryption
 * configuration being used. Currently the only supported types are
 * 'UserManaged' and 'ServiceManaged'. Possible values include:
 * 'UserManaged', 'ServiceManaged'
 * 
 * @member {object} [encryptionConfig.keyVaultMetaInfo] The Key vault
 * information for connecting to user managed encryption keys.
 * 
 * @member {string} [encryptionConfig.keyVaultMetaInfo.keyVaultResourceId] The
 * resource identifier for the user managed Key Vault being used to encrypt.
 * 
 * @member {string} [encryptionConfig.keyVaultMetaInfo.encryptionKeyName] The
 * name of the user managed encryption key.
 * 
 * @member {string} [encryptionConfig.keyVaultMetaInfo.encryptionKeyVersion]
 * The version of the user managed encryption key.
 * 
 * @member {date} [lastModifiedTime] the account last modified time.
 * 
 * @member {string} [endpoint] the gateway host.
 * 
 * @member {string} [defaultGroup] the default owner group for all new folders
 * and files created in the Data Lake Store account.
 * 
 */
export interface DataLakeStoreAccountProperties {
  provisioningState?: string;
  state?: string;
  creationTime?: Date;
  encryptionState?: string;
  encryptionProvisioningState?: string;
  encryptionConfig?: EncryptionConfig;
  lastModifiedTime?: Date;
  endpoint?: string;
  defaultGroup?: string;
}

/**
 * @class
 * Initializes a new instance of the DataLakeStoreAccount class.
 * @constructor
 * Data Lake Store account information
 *
 * @member {string} [location] the account regional location.
 * 
 * @member {string} [name] the account name.
 * 
 * @member {string} [type] the namespace and type of the account.
 * 
 * @member {string} [id] the account subscription ID.
 * 
 * @member {object} [identity] The Key vault encryption identity, if any.
 * 
 * @member {string} [identity.type] The type of encryption being used.
 * Currently the only supported type is 'SystemAssigned'. Possible values
 * include: 'SystemAssigned'
 * 
 * @member {uuid} [identity.principalId] The principal identifier associated
 * with the encryption.
 * 
 * @member {uuid} [identity.tenantId] The tenant identifier associated with
 * the encryption.
 * 
 * @member {object} [tags] the value of custom properties.
 * 
 * @member {object} [properties] the Data Lake Store account properties.
 * 
 * @member {string} [properties.provisioningState] the status of the Data Lake
 * Store account while being provisioned. Possible values include: 'Failed',
 * 'Creating', 'Running', 'Succeeded', 'Patching', 'Suspending', 'Resuming',
 * 'Deleting', 'Deleted'
 * 
 * @member {string} [properties.state] the status of the Data Lake Store
 * account after provisioning has completed. Possible values include:
 * 'active', 'suspended'
 * 
 * @member {date} [properties.creationTime] the account creation time.
 * 
 * @member {string} [properties.encryptionState] The current state of
 * encryption for this Data Lake store account. Possible values include:
 * 'Enabled', 'Disabled'
 * 
 * @member {string} [properties.encryptionProvisioningState] The current state
 * of encryption provisioning for this Data Lake store account. Possible
 * values include: 'Creating', 'Succeeded'
 * 
 * @member {object} [properties.encryptionConfig] The Key vault encryption
 * configuration.
 * 
 * @member {string} [properties.encryptionConfig.type] The type of encryption
 * configuration being used. Currently the only supported types are
 * 'UserManaged' and 'ServiceManaged'. Possible values include:
 * 'UserManaged', 'ServiceManaged'
 * 
 * @member {object} [properties.encryptionConfig.keyVaultMetaInfo] The Key
 * vault information for connecting to user managed encryption keys.
 * 
 * @member {string}
 * [properties.encryptionConfig.keyVaultMetaInfo.keyVaultResourceId] The
 * resource identifier for the user managed Key Vault being used to encrypt.
 * 
 * @member {string}
 * [properties.encryptionConfig.keyVaultMetaInfo.encryptionKeyName] The name
 * of the user managed encryption key.
 * 
 * @member {string}
 * [properties.encryptionConfig.keyVaultMetaInfo.encryptionKeyVersion] The
 * version of the user managed encryption key.
 * 
 * @member {date} [properties.lastModifiedTime] the account last modified time.
 * 
 * @member {string} [properties.endpoint] the gateway host.
 * 
 * @member {string} [properties.defaultGroup] the default owner group for all
 * new folders and files created in the Data Lake Store account.
 * 
 */
export interface DataLakeStoreAccount {
  location?: string;
  name?: string;
  type?: string;
  id?: string;
  identity?: EncryptionIdentity;
  tags?: { [propertyName: string]: string };
  properties?: DataLakeStoreAccountProperties;
}

/**
 * @class
 * Initializes a new instance of the ErrorDetails class.
 * @constructor
 * Data Lake Store error details information
 *
 * @member {string} [code] the HTTP status code or error code associated with
 * this error
 * 
 * @member {string} [message] the error message localized based on
 * Accept-Language
 * 
 * @member {string} [target] the target of the particular error (for example,
 * the name of the property in error).
 * 
 */
export interface ErrorDetails {
  code?: string;
  message?: string;
  target?: string;
}

/**
 * @class
 * Initializes a new instance of the InnerError class.
 * @constructor
 * Data Lake Store inner error information
 *
 * @member {string} [trace] the stack trace for the error
 * 
 * @member {string} [context] the context for the error message
 * 
 */
export interface InnerError {
  trace?: string;
  context?: string;
}

/**
 * @class
 * Initializes a new instance of the ErrorModel class.
 * @constructor
 * Data Lake Store error information
 *
 * @member {string} [code] the HTTP status code or error code associated with
 * this error
 * 
 * @member {string} [message] the error message to display.
 * 
 * @member {string} [target] the target of the error.
 * 
 * @member {array} [details] the list of error details
 * 
 * @member {object} [innerError] the inner exceptions or errors, if any
 * 
 * @member {string} [innerError.trace] the stack trace for the error
 * 
 * @member {string} [innerError.context] the context for the error message
 * 
 */
export interface ErrorModel {
  code?: string;
  message?: string;
  target?: string;
  details?: ErrorDetails[];
  innerError?: InnerError;
}

/**
 * @class
 * Initializes a new instance of the AzureAsyncOperationResult class.
 * @constructor
 * The response body contains the status of the specified asynchronous
 * operation, indicating whether it has succeeded, is in progress, or has
 * failed. Note that this status is distinct from the HTTP status code
 * returned for the Get Operation Status operation itself. If the
 * asynchronous operation succeeded, the response body includes the HTTP
 * status code for the successful request. If the asynchronous operation
 * failed, the response body includes the HTTP status code for the failed
 * request and error information regarding the failure.
 *
 * @member {string} [status] the status of the AzureAsuncOperation. Possible
 * values include: 'InProgress', 'Succeeded', 'Failed'
 * 
 * @member {object} [error]
 * 
 * @member {string} [error.code] the HTTP status code or error code associated
 * with this error
 * 
 * @member {string} [error.message] the error message to display.
 * 
 * @member {string} [error.target] the target of the error.
 * 
 * @member {array} [error.details] the list of error details
 * 
 * @member {object} [error.innerError] the inner exceptions or errors, if any
 * 
 * @member {string} [error.innerError.trace] the stack trace for the error
 * 
 * @member {string} [error.innerError.context] the context for the error
 * message
 * 
 */
export interface AzureAsyncOperationResult {
  status?: string;
  error?: ErrorModel;
}


/**
 * @class
 * Initializes a new instance of the DataLakeStoreFirewallRuleListResult class.
 * @constructor
 * Data Lake Store firewall rule list information.
 *
 * @member {string} [nextLink] the link (url) to the next page of results.
 * 
 * @member {number} [count] the total count of results that are available, but
 * might not be returned in the current page.
 * 
 */
export interface DataLakeStoreFirewallRuleListResult extends Array<FirewallRule> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the DataLakeStoreAccountListResult class.
 * @constructor
 * Data Lake Store account list information response.
 *
 * @member {string} [nextLink] the link (url) to the next page of results.
 * 
 * @member {number} [count] the total count of results that are available, but
 * might not be returned in the current page.
 * 
 */
export interface DataLakeStoreAccountListResult extends Array<DataLakeStoreAccount> {
  nextLink?: string;
}

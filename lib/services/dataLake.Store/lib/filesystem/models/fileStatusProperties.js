/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Data Lake Store file or directory information.
 *
 */
class FileStatusProperties {
  /**
   * Create a FileStatusProperties.
   * @property {number} [accessTime] the last access time as ticks since the
   * epoch.
   * @property {number} [blockSize] the block size for the file.
   * @property {number} [expirationTime] Gets the expiration time, if any, as
   * ticks since the epoch. If the value is 0 or DateTime.MaxValue there is no
   * expiration.
   * @property {string} [group] the group owner.
   * @property {number} [length] the number of bytes in a file.
   * @property {number} [modificationTime] the modification time as ticks since
   * the epoch.
   * @property {string} [owner] the user who is the owner.
   * @property {string} [pathSuffix] the path suffix.
   * @property {string} [permission] the permission represented as an string.
   * @property {string} [type] the type of the path object. Possible values
   * include: 'FILE', 'DIRECTORY'
   * @property {boolean} [aclBit] flag to indicate if extended acls are enabled
   */
  constructor() {
  }

  /**
   * Defines the metadata of FileStatusProperties
   *
   * @returns {object} metadata of FileStatusProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'FileStatusProperties',
      type: {
        name: 'Composite',
        className: 'FileStatusProperties',
        modelProperties: {
          accessTime: {
            required: false,
            readOnly: true,
            serializedName: 'accessTime',
            type: {
              name: 'Number'
            }
          },
          blockSize: {
            required: false,
            readOnly: true,
            serializedName: 'blockSize',
            type: {
              name: 'Number'
            }
          },
          expirationTime: {
            required: false,
            readOnly: true,
            serializedName: 'msExpirationTime',
            type: {
              name: 'Number'
            }
          },
          group: {
            required: false,
            readOnly: true,
            serializedName: 'group',
            type: {
              name: 'String'
            }
          },
          length: {
            required: false,
            readOnly: true,
            serializedName: 'length',
            type: {
              name: 'Number'
            }
          },
          modificationTime: {
            required: false,
            readOnly: true,
            serializedName: 'modificationTime',
            type: {
              name: 'Number'
            }
          },
          owner: {
            required: false,
            readOnly: true,
            serializedName: 'owner',
            type: {
              name: 'String'
            }
          },
          pathSuffix: {
            required: false,
            readOnly: true,
            serializedName: 'pathSuffix',
            type: {
              name: 'String'
            }
          },
          permission: {
            required: false,
            readOnly: true,
            serializedName: 'permission',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'Enum',
              allowedValues: [ 'FILE', 'DIRECTORY' ]
            }
          },
          aclBit: {
            required: false,
            readOnly: true,
            serializedName: 'aclBit',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = FileStatusProperties;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the FileStatusProperties class.
 * @constructor
 * Data Lake Store file or directory information.
 * @member {number} [accessTime] Gets the last access time as ticks since the
 * epoch.
 * 
 * @member {number} [blockSize] Gets the block size for the file.
 * 
 * @member {number} [childrenNum] Gets the number of children in the directory.
 * 
 * @member {string} [group] Gets the group owner.
 * 
 * @member {number} [length] Gets the number of bytes in a file.
 * 
 * @member {number} [modificationTime] Gets the modification time as ticks
 * since the epoch.
 * 
 * @member {string} [owner] Gets the user who is the owner.
 * 
 * @member {string} [pathSuffix] Gets the path suffix.
 * 
 * @member {string} [permission] Gets the permission represented as an string.
 * 
 * @member {string} [type] Gets the type of the path object. Possible values
 * include: 'FILE', 'DIRECTORY'
 * 
 */
function FileStatusProperties() {
}

/**
 * Defines the metadata of FileStatusProperties
 *
 * @returns {object} metadata of FileStatusProperties
 *
 */
FileStatusProperties.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'FileStatusProperties',
    type: {
      name: 'Composite',
      className: 'FileStatusProperties',
      modelProperties: {
        accessTime: {
          required: false,
          readOnly: true,
          serializedName: 'accessTime',
          type: {
            name: 'Number'
          }
        },
        blockSize: {
          required: false,
          readOnly: true,
          serializedName: 'blockSize',
          type: {
            name: 'Number'
          }
        },
        childrenNum: {
          required: false,
          readOnly: true,
          serializedName: 'childrenNum',
          type: {
            name: 'Number'
          }
        },
        group: {
          required: false,
          readOnly: true,
          serializedName: 'group',
          type: {
            name: 'String'
          }
        },
        length: {
          required: false,
          readOnly: true,
          serializedName: 'length',
          type: {
            name: 'Number'
          }
        },
        modificationTime: {
          required: false,
          readOnly: true,
          serializedName: 'modificationTime',
          type: {
            name: 'Number'
          }
        },
        owner: {
          required: false,
          readOnly: true,
          serializedName: 'owner',
          type: {
            name: 'String'
          }
        },
        pathSuffix: {
          required: false,
          readOnly: true,
          serializedName: 'pathSuffix',
          type: {
            name: 'String'
          }
        },
        permission: {
          required: false,
          readOnly: true,
          serializedName: 'permission',
          type: {
            name: 'String'
          }
        },
        type: {
          required: false,
          readOnly: true,
          serializedName: 'type',
          type: {
            name: 'Enum',
            allowedValues: [ 'FILE', 'DIRECTORY' ]
          }
        }
      }
    }
  };
};

module.exports = FileStatusProperties;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * The properties used to create a new server.
 *
 * @extends models['ServerPropertiesForCreate']
 */
class ServerPropertiesForDefaultCreate extends models['ServerPropertiesForCreate'] {
  /**
   * Create a ServerPropertiesForDefaultCreate.
   * @property {string} administratorLogin The administrator's login name of a
   * server. Can only be specified when the server is being created (and is
   * required for creation).
   * @property {string} administratorLoginPassword The password of the
   * administrator login.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ServerPropertiesForDefaultCreate
   *
   * @returns {object} metadata of ServerPropertiesForDefaultCreate
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Default',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'createMode',
          clientName: 'createMode'
        },
        uberParent: 'ServerPropertiesForCreate',
        className: 'ServerPropertiesForDefaultCreate',
        modelProperties: {
          version: {
            required: false,
            serializedName: 'version',
            type: {
              name: 'String'
            }
          },
          sslEnforcement: {
            required: false,
            serializedName: 'sslEnforcement',
            type: {
              name: 'Enum',
              allowedValues: [ 'Enabled', 'Disabled' ]
            }
          },
          storageProfile: {
            required: false,
            serializedName: 'storageProfile',
            type: {
              name: 'Composite',
              className: 'StorageProfile'
            }
          },
          createMode: {
            required: true,
            serializedName: 'createMode',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          },
          administratorLogin: {
            required: true,
            serializedName: 'administratorLogin',
            type: {
              name: 'String'
            }
          },
          administratorLoginPassword: {
            required: true,
            serializedName: 'administratorLoginPassword',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ServerPropertiesForDefaultCreate;

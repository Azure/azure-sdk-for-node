/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Properties of the Event Subscription update
 *
 */
class EventSubscriptionUpdateParameters {
  /**
   * Create a EventSubscriptionUpdateParameters.
   * @member {object} [destination] Information about the destination where
   * events have to be delivered for the event subscription.
   * @member {string} [destination.endpointType] Polymorphic Discriminator
   * @member {object} [filter] Information about the filter for the event
   * subscription.
   * @member {string} [filter.subjectBeginsWith] An optional string to filter
   * events for an event subscription based on a resource path prefix.
   * The format of this depends on the publisher of the events.
   * Wildcard characters are not supported in this path.
   * @member {string} [filter.subjectEndsWith] An optional string to filter
   * events for an event subscription based on a resource path suffix.
   * Wildcard characters are not supported in this path.
   * @member {array} [filter.includedEventTypes] A list of applicable event
   * types that need to be part of the event subscription.
   * If it is desired to subscribe to all event types, the string "all" needs
   * to be specified as an element in this list.
   * @member {boolean} [filter.isSubjectCaseSensitive] Specifies if the
   * SubjectBeginsWith and SubjectEndsWith properties of the filter
   * should be compared in a case sensitive manner.
   * @member {array} [labels] List of user defined labels.
   */
  constructor() {
  }

  /**
   * Defines the metadata of EventSubscriptionUpdateParameters
   *
   * @returns {object} metadata of EventSubscriptionUpdateParameters
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'EventSubscriptionUpdateParameters',
      type: {
        name: 'Composite',
        className: 'EventSubscriptionUpdateParameters',
        modelProperties: {
          destination: {
            required: false,
            serializedName: 'destination',
            type: {
              name: 'Composite',
              polymorphicDiscriminator: {
                serializedName: 'endpointType',
                clientName: 'endpointType'
              },
              uberParent: 'EventSubscriptionDestination',
              className: 'EventSubscriptionDestination'
            }
          },
          filter: {
            required: false,
            serializedName: 'filter',
            type: {
              name: 'Composite',
              className: 'EventSubscriptionFilter'
            }
          },
          labels: {
            required: false,
            serializedName: 'labels',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = EventSubscriptionUpdateParameters;

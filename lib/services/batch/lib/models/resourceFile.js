/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the ResourceFile class.
 * @constructor
 * @summary A file to be downloaded from Azure blob storage to a compute node.
 *
 * @member {string} blobSource The URL of the file within Azure Blob Storage.
 * This URL must be readable using anonymous access; that is, the Batch service
 * does not present any credentials when downloading the blob. There are two
 * ways to get such a URL for a blob in Azure storage: include a Shared Access
 * Signature (SAS) granting read permissions on the blob, or set the ACL for
 * the blob or its container to allow public access.
 * 
 * @member {string} filePath The location on the compute node to which to
 * download the file, relative to the task's working directory.
 * 
 * @member {string} [fileMode] The file permission mode attribute in octal
 * format. This property applies only to files being downloaded to Linux
 * compute nodes. It will be ignored if it is specified for a resourceFile
 * which will be downloaded to a Windows node. If this property is not
 * specified for a Linux node, then a default value of 0770 is applied to the
 * file.
 * 
 */
function ResourceFile() {
}

/**
 * Defines the metadata of ResourceFile
 *
 * @returns {object} metadata of ResourceFile
 *
 */
ResourceFile.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'ResourceFile',
    type: {
      name: 'Composite',
      className: 'ResourceFile',
      modelProperties: {
        blobSource: {
          required: true,
          serializedName: 'blobSource',
          type: {
            name: 'String'
          }
        },
        filePath: {
          required: true,
          serializedName: 'filePath',
          type: {
            name: 'String'
          }
        },
        fileMode: {
          required: false,
          serializedName: 'fileMode',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = ResourceFile;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the PoolStatistics class.
 * @constructor
 * @summary Contains utilization and resource usage statistics for the lifetime
 * of a pool.
 *
 * @member {string} url The URL for the statistics.
 * 
 * @member {date} startTime The start time of the time range covered by the
 * statistics.
 * 
 * @member {date} lastUpdateTime The time at which the statistics were last
 * updated. All statistics are limited to the range between startTime and
 * lastUpdateTime.
 * 
 * @member {object} [usageStats] Statistics related to pool usage, such as the
 * amount of core-time used.
 * 
 * @member {date} [usageStats.startTime]
 * 
 * @member {date} [usageStats.lastUpdateTime]
 * 
 * @member {moment.duration} [usageStats.dedicatedCoreTime]
 * 
 * @member {object} [resourceStats] Statistics related to resource consumption
 * by compute nodes in the pool.
 * 
 * @member {date} [resourceStats.startTime]
 * 
 * @member {date} [resourceStats.lastUpdateTime]
 * 
 * @member {number} [resourceStats.avgCPUPercentage]
 * 
 * @member {number} [resourceStats.avgMemoryGiB]
 * 
 * @member {number} [resourceStats.peakMemoryGiB]
 * 
 * @member {number} [resourceStats.avgDiskGiB]
 * 
 * @member {number} [resourceStats.peakDiskGiB]
 * 
 * @member {number} [resourceStats.diskReadIOps]
 * 
 * @member {number} [resourceStats.diskWriteIOps]
 * 
 * @member {number} [resourceStats.diskReadGiB]
 * 
 * @member {number} [resourceStats.diskWriteGiB]
 * 
 * @member {number} [resourceStats.networkReadGiB]
 * 
 * @member {number} [resourceStats.networkWriteGiB]
 * 
 */
function PoolStatistics() {
}

/**
 * Defines the metadata of PoolStatistics
 *
 * @returns {object} metadata of PoolStatistics
 *
 */
PoolStatistics.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'PoolStatistics',
    type: {
      name: 'Composite',
      className: 'PoolStatistics',
      modelProperties: {
        url: {
          required: true,
          serializedName: 'url',
          type: {
            name: 'String'
          }
        },
        startTime: {
          required: true,
          serializedName: 'startTime',
          type: {
            name: 'DateTime'
          }
        },
        lastUpdateTime: {
          required: true,
          serializedName: 'lastUpdateTime',
          type: {
            name: 'DateTime'
          }
        },
        usageStats: {
          required: false,
          serializedName: 'usageStats',
          type: {
            name: 'Composite',
            className: 'UsageStatistics'
          }
        },
        resourceStats: {
          required: false,
          serializedName: 'resourceStats',
          type: {
            name: 'Composite',
            className: 'ResourceStatistics'
          }
        }
      }
    }
  };
};

module.exports = PoolStatistics;

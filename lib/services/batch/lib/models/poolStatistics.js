/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @summary Contains utilization and resource usage statistics for the lifetime
 * of a pool.
  *
 */
class PoolStatistics {
  /**
   * Create a PoolStatistics.
   * @property {string} url The URL for the statistics.
   * @property {date} startTime The start time of the time range covered by the
   * statistics.
   * @property {date} lastUpdateTime The time at which the statistics were last
   * updated. All statistics are limited to the range between startTime and
   * lastUpdateTime.
   * @property {object} [usageStats] Statistics related to pool usage, such as
   * the amount of core-time used.
   * @property {date} [usageStats.startTime]
   * @property {date} [usageStats.lastUpdateTime]
   * @property {moment.duration} [usageStats.dedicatedCoreTime]
   * @property {object} [resourceStats] Statistics related to resource
   * consumption by compute nodes in the pool.
   * @property {date} [resourceStats.startTime]
   * @property {date} [resourceStats.lastUpdateTime]
   * @property {number} [resourceStats.avgCPUPercentage]
   * @property {number} [resourceStats.avgMemoryGiB]
   * @property {number} [resourceStats.peakMemoryGiB]
   * @property {number} [resourceStats.avgDiskGiB]
   * @property {number} [resourceStats.peakDiskGiB]
   * @property {number} [resourceStats.diskReadIOps]
   * @property {number} [resourceStats.diskWriteIOps]
   * @property {number} [resourceStats.diskReadGiB]
   * @property {number} [resourceStats.diskWriteGiB]
   * @property {number} [resourceStats.networkReadGiB]
   * @property {number} [resourceStats.networkWriteGiB]
   */
  constructor() {
  }

  /**
   * Defines the metadata of PoolStatistics
   *
   * @returns {object} metadata of PoolStatistics
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PoolStatistics',
      type: {
        name: 'Composite',
        className: 'PoolStatistics',
        modelProperties: {
          url: {
            required: true,
            serializedName: 'url',
            type: {
              name: 'String'
            }
          },
          startTime: {
            required: true,
            serializedName: 'startTime',
            type: {
              name: 'DateTime'
            }
          },
          lastUpdateTime: {
            required: true,
            serializedName: 'lastUpdateTime',
            type: {
              name: 'DateTime'
            }
          },
          usageStats: {
            required: false,
            serializedName: 'usageStats',
            type: {
              name: 'Composite',
              className: 'UsageStatistics'
            }
          },
          resourceStats: {
            required: false,
            serializedName: 'resourceStats',
            type: {
              name: 'Composite',
              className: 'ResourceStatistics'
            }
          }
        }
      }
    };
  }
}

module.exports = PoolStatistics;

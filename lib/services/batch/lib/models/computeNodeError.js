/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @summary An error encountered by a compute node.
  *
 */
class ComputeNodeError {
  /**
   * Create a ComputeNodeError.
   * @property {string} [code] An identifier for the compute node error. Codes
   * are invariant and are intended to be consumed programmatically.
   * @property {string} [message] A message describing the compute node error,
   * intended to be suitable for display in a user interface.
   * @property {array} [errorDetails] The list of additional error details
   * related to the compute node error.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ComputeNodeError
   *
   * @returns {object} metadata of ComputeNodeError
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ComputeNodeError',
      type: {
        name: 'Composite',
        className: 'ComputeNodeError',
        modelProperties: {
          code: {
            required: false,
            serializedName: 'code',
            type: {
              name: 'String'
            }
          },
          message: {
            required: false,
            serializedName: 'message',
            type: {
              name: 'String'
            }
          },
          errorDetails: {
            required: false,
            serializedName: 'errorDetails',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'NameValuePairElementType',
                  type: {
                    name: 'Composite',
                    className: 'NameValuePair'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = ComputeNodeError;

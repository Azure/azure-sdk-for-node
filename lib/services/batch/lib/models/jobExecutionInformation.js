/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @summary Contains information about the execution of a job in the Azure
 * Batch service.
  *
 */
class JobExecutionInformation {
  /**
   * Create a JobExecutionInformation.
   * @property {date} startTime The start time of the job. This is the time at
   * which the job was created.
   * @property {date} [endTime] The completion time of the job. This property
   * is set only if the job is in the completed state.
   * @property {string} [poolId] The ID of the pool to which this job is
   * assigned. This element contains the actual pool where the job is assigned.
   * When you get job details from the service, they also contain a poolInfo
   * element, which contains the pool configuration data from when the job was
   * added or updated. That poolInfo element may also contain a poolId element.
   * If it does, the two IDs are the same. If it does not, it means the job ran
   * on an auto pool, and this property contains the ID of that auto pool.
   * @property {object} [schedulingError] Details of any error encountered by
   * the service in starting the job. This property is not set if there was no
   * error starting the job.
   * @property {string} [schedulingError.category] Possible values include:
   * 'userError', 'serverError'
   * @property {string} [schedulingError.code]
   * @property {string} [schedulingError.message]
   * @property {array} [schedulingError.details]
   * @property {string} [terminateReason] A string describing the reason the
   * job ended. This property is set only if the job is in the completed state.
   * If the Batch service terminates the job, it sets the reason as follows:
   * JMComplete - the Job Manager task completed, and killJobOnCompletion was
   * set to true. MaxWallClockTimeExpiry - the job reached its maxWallClockTime
   * constraint. TerminateJobSchedule - the job ran as part of a schedule, and
   * the schedule terminated. AllTasksComplete - the job's onAllTasksComplete
   * attribute is set to terminatejob, and all tasks in the job are complete.
   * TaskFailed - the job's onTaskFailure attribute is set to
   * performExitOptionsJobAction, and a task in the job failed with an exit
   * condition that specified a jobAction of terminatejob. Any other string is
   * a user-defined reason specified in a call to the 'Terminate a job'
   * operation.
   */
  constructor() {
  }

  /**
   * Defines the metadata of JobExecutionInformation
   *
   * @returns {object} metadata of JobExecutionInformation
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'JobExecutionInformation',
      type: {
        name: 'Composite',
        className: 'JobExecutionInformation',
        modelProperties: {
          startTime: {
            required: true,
            serializedName: 'startTime',
            type: {
              name: 'DateTime'
            }
          },
          endTime: {
            required: false,
            serializedName: 'endTime',
            type: {
              name: 'DateTime'
            }
          },
          poolId: {
            required: false,
            serializedName: 'poolId',
            type: {
              name: 'String'
            }
          },
          schedulingError: {
            required: false,
            serializedName: 'schedulingError',
            type: {
              name: 'Composite',
              className: 'JobSchedulingError'
            }
          },
          terminateReason: {
            required: false,
            serializedName: 'terminateReason',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = JobExecutionInformation;

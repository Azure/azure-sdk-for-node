/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the JobExecutionInformation class.
 * @constructor
 * Contains information about the execution of a job in the Azure Batch
 * service.
 *
 * @member {date} startTime The start time of the job.
 * 
 * @member {date} [endTime] The completion time of the job. This property is
 * set only if the job is in the completed state.
 * 
 * @member {string} [poolId] The id of the pool to which this job is assigned.
 * 
 * @member {object} [schedulingError] Details of any error encountered by the
 * service in starting the job.
 * 
 * @member {string} [schedulingError.category] The category of the job
 * scheduling error. Possible values include: 'usererror', 'servererror',
 * 'unmapped'
 * 
 * @member {string} [schedulingError.code] An identifier for the job
 * scheduling error. Codes are invariant and are intended to be consumed
 * programmatically.
 * 
 * @member {string} [schedulingError.message] A message describing the job
 * scheduling error, intended to be suitable for display in a user interface.
 * 
 * @member {array} [schedulingError.details] A list of additional error
 * details related to the scheduling error.
 * 
 * @member {string} [terminateReason] A string describing the reason the job
 * ended.
 * 
 */
function JobExecutionInformation() {
}

/**
 * Defines the metadata of JobExecutionInformation
 *
 * @returns {object} metadata of JobExecutionInformation
 *
 */
JobExecutionInformation.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'JobExecutionInformation',
    type: {
      name: 'Composite',
      className: 'JobExecutionInformation',
      modelProperties: {
        startTime: {
          required: true,
          serializedName: 'startTime',
          type: {
            name: 'DateTime'
          }
        },
        endTime: {
          required: false,
          serializedName: 'endTime',
          type: {
            name: 'DateTime'
          }
        },
        poolId: {
          required: false,
          serializedName: 'poolId',
          type: {
            name: 'String'
          }
        },
        schedulingError: {
          required: false,
          serializedName: 'schedulingError',
          type: {
            name: 'Composite',
            className: 'JobSchedulingError'
          }
        },
        terminateReason: {
          required: false,
          serializedName: 'terminateReason',
          type: {
            name: 'String'
          }
        }
      }
    }
  };
};

module.exports = JobExecutionInformation;

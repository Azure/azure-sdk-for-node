/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the NodeAgentSku class.
 * @constructor
 * A node agent SKU supported by the Batch service. The Batch node agent is a
 * program that runs on each node in the pool, and provides the
 * command-and-control interface between the node and the Batch service.
 * There are different implementations of the node agent, known as SKUs, for
 * different operating systems.
 *
 * @member {string} [id] The node agent SKU id.
 * 
 * @member {array} [verifiedImageReferences] The list of images verified to be
 * compatible with this node agent SKU. This collection is not exhaustive
 * (the node agent may be compatible with other images).
 * 
 * @member {string} [osType] The type of operating system compatible with the
 * node agent SKU. Possible values include: 'linux', 'windows', 'unmapped'
 * 
 */
function NodeAgentSku() {
}

/**
 * Defines the metadata of NodeAgentSku
 *
 * @returns {object} metadata of NodeAgentSku
 *
 */
NodeAgentSku.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'NodeAgentSku',
    type: {
      name: 'Composite',
      className: 'NodeAgentSku',
      modelProperties: {
        id: {
          required: false,
          serializedName: 'id',
          type: {
            name: 'String'
          }
        },
        verifiedImageReferences: {
          required: false,
          serializedName: 'verifiedImageReferences',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'ImageReferenceElementType',
                type: {
                  name: 'Composite',
                  className: 'ImageReference'
                }
            }
          }
        },
        osType: {
          required: false,
          serializedName: 'osType',
          type: {
            name: 'Enum',
            allowedValues: [ 'linux', 'windows', 'unmapped' ]
          }
        }
      }
    }
  };
};

module.exports = NodeAgentSku;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @summary Usage metrics for a pool across an aggregation interval.
  *
 */
class PoolUsageMetrics {
  /**
   * Create a PoolUsageMetrics.
   * @property {string} poolId The ID of the pool whose metrics are aggregated
   * in this entry.
   * @property {date} startTime The start time of the aggregation interval
   * covered by this entry.
   * @property {date} endTime The end time of the aggregation interval covered
   * by this entry.
   * @property {string} vmSize The size of virtual machines in the pool. All
   * VMs in a pool are the same size. For information about available sizes of
   * virtual machines in pools, see Choose a VM size for compute nodes in an
   * Azure Batch pool
   * (https://docs.microsoft.com/azure/batch/batch-pool-vm-sizes).
   * @property {number} totalCoreHours The total core hours used in the pool
   * during this aggregation interval.
   * @property {number} dataIngressGiB The cross data center network ingress to
   * the pool during this interval, in GiB.
   * @property {number} dataEgressGiB The cross data center network egress from
   * the pool during this interval, in GiB.
   */
  constructor() {
  }

  /**
   * Defines the metadata of PoolUsageMetrics
   *
   * @returns {object} metadata of PoolUsageMetrics
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PoolUsageMetrics',
      type: {
        name: 'Composite',
        className: 'PoolUsageMetrics',
        modelProperties: {
          poolId: {
            required: true,
            serializedName: 'poolId',
            type: {
              name: 'String'
            }
          },
          startTime: {
            required: true,
            serializedName: 'startTime',
            type: {
              name: 'DateTime'
            }
          },
          endTime: {
            required: true,
            serializedName: 'endTime',
            type: {
              name: 'DateTime'
            }
          },
          vmSize: {
            required: true,
            serializedName: 'vmSize',
            type: {
              name: 'String'
            }
          },
          totalCoreHours: {
            required: true,
            serializedName: 'totalCoreHours',
            type: {
              name: 'Number'
            }
          },
          dataIngressGiB: {
            required: true,
            serializedName: 'dataIngressGiB',
            type: {
              name: 'Number'
            }
          },
          dataEgressGiB: {
            required: true,
            serializedName: 'dataEgressGiB',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = PoolUsageMetrics;

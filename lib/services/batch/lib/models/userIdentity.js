/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @summary The definition of the user identity under which the task is run.
  *
 * Specify either the userName or autoUser property, but not both.
 *
 */
class UserIdentity {
  /**
   * Create a UserIdentity.
   * @property {string} [userName] The name of the user identity under which
   * the task is run. The userName and autoUser properties are mutually
   * exclusive; you must specify one but not both.
   * @property {object} [autoUser] The auto user under which the task is run.
   * The userName and autoUser properties are mutually exclusive; you must
   * specify one but not both.
   * @property {string} [autoUser.scope] The default value is task. Possible
   * values include: 'task', 'pool'
   * @property {string} [autoUser.elevationLevel] The default value is
   * nonAdmin. Possible values include: 'nonAdmin', 'admin'
   */
  constructor() {
  }

  /**
   * Defines the metadata of UserIdentity
   *
   * @returns {object} metadata of UserIdentity
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'UserIdentity',
      type: {
        name: 'Composite',
        className: 'UserIdentity',
        modelProperties: {
          userName: {
            required: false,
            serializedName: 'username',
            type: {
              name: 'String'
            }
          },
          autoUser: {
            required: false,
            serializedName: 'autoUser',
            type: {
              name: 'Composite',
              className: 'AutoUserSpecification'
            }
          }
        }
      }
    };
  }
}

module.exports = UserIdentity;

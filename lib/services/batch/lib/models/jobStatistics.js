/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var moment = require('moment');

/**
 * @class
 * Initializes a new instance of the JobStatistics class.
 * @constructor
 * Resource usage statistics for a job.
 * @member {string} url Gets or sets the URL for the statistics.
 * 
 * @member {date} startTime Gets or sets the start time of the time range
 * covered by the statistics.
 * 
 * @member {date} lastUpdateTime Gets or sets the time at which the statistics
 * were last updated. All statistics are limited to the range between
 * StartTime and LastUpdateTime.
 * 
 * @member {moment.duration} userCPUTime Gets or sets the total user mode CPU
 * time (summed across all cores and all compute nodes) consumed by all the
 * tasks in the job.
 * 
 * @member {moment.duration} kernelCPUTime Gets or sets the total kernel mode
 * CPU time (summed across all cores and all compute nodes) consumed by all
 * the tasks in the job.
 * 
 * @member {moment.duration} wallClockTime Gets or sets the total wall clock
 * time of all the tasks in the job.
 * 
 * @member {number} readIOps Gets or sets the total number of I/O read
 * operations performed by all the tasks in the job.
 * 
 * @member {number} writeIOps Gets or sets the total number of I/O write
 * operations performed by all the tasks in the job.
 * 
 * @member {number} readIOGiB Gets or sets the total amount of data in GiB of
 * I/O read by all the tasks in the job.
 * 
 * @member {number} writeIOGiB Gets or sets the total amount of data in GiB of
 * I/O written by all the tasks in the job.
 * 
 * @member {number} numSucceededTasks Gets or sets the total number of tasks
 * successfully completed in the job during the given time range.
 * 
 * @member {number} numFailedTasks Gets or sets the total number of tasks in
 * the job that failed during the given time range.
 * 
 * @member {number} numTaskRetries Gets or sets the total number of retries on
 * all the tasks in the job during the given time range.
 * 
 * @member {moment.duration} waitTime Gets or sets the total wait time of all
 * the tasks in the job.  The wait time for a task is defined as the elapsed
 * time between the creation of the task creation and the start of task
 * execution.  This value is reported only in the account lifetime
 * statistics; it is not included in individual job statistics.
 * 
 */
function JobStatistics() {
}

/**
 * Defines the metadata of JobStatistics
 *
 * @returns {object} metadata of JobStatistics
 *
 */
JobStatistics.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'JobStatistics',
    type: {
      name: 'Composite',
      className: 'JobStatistics',
      modelProperties: {
        url: {
          required: true,
          serializedName: 'url',
          type: {
            name: 'String'
          }
        },
        startTime: {
          required: true,
          serializedName: 'startTime',
          type: {
            name: 'DateTime'
          }
        },
        lastUpdateTime: {
          required: true,
          serializedName: 'lastUpdateTime',
          type: {
            name: 'DateTime'
          }
        },
        userCPUTime: {
          required: true,
          serializedName: 'userCPUTime',
          type: {
            name: 'TimeSpan'
          }
        },
        kernelCPUTime: {
          required: true,
          serializedName: 'kernelCPUTime',
          type: {
            name: 'TimeSpan'
          }
        },
        wallClockTime: {
          required: true,
          serializedName: 'wallClockTime',
          type: {
            name: 'TimeSpan'
          }
        },
        readIOps: {
          required: true,
          serializedName: 'readIOps',
          type: {
            name: 'Number'
          }
        },
        writeIOps: {
          required: true,
          serializedName: 'writeIOps',
          type: {
            name: 'Number'
          }
        },
        readIOGiB: {
          required: true,
          serializedName: 'readIOGiB',
          type: {
            name: 'Number'
          }
        },
        writeIOGiB: {
          required: true,
          serializedName: 'writeIOGiB',
          type: {
            name: 'Number'
          }
        },
        numSucceededTasks: {
          required: true,
          serializedName: 'numSucceededTasks',
          type: {
            name: 'Number'
          }
        },
        numFailedTasks: {
          required: true,
          serializedName: 'numFailedTasks',
          type: {
            name: 'Number'
          }
        },
        numTaskRetries: {
          required: true,
          serializedName: 'numTaskRetries',
          type: {
            name: 'Number'
          }
        },
        waitTime: {
          required: true,
          serializedName: 'waitTime',
          type: {
            name: 'TimeSpan'
          }
        }
      }
    }
  };
};

module.exports = JobStatistics;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @summary The number of nodes in each state for a pool.
  *
 */
class PoolNodeCounts {
  /**
   * Create a PoolNodeCounts.
   * @property {string} poolId The ID of the pool.
   * @property {object} [dedicated] The number of dedicated nodes in each
   * state.
   * @property {number} [dedicated.creating]
   * @property {number} [dedicated.idle]
   * @property {number} [dedicated.offline]
   * @property {number} [dedicated.preempted]
   * @property {number} [dedicated.rebooting]
   * @property {number} [dedicated.reimaging]
   * @property {number} [dedicated.running]
   * @property {number} [dedicated.starting]
   * @property {number} [dedicated.startTaskFailed]
   * @property {number} [dedicated.leavingPool]
   * @property {number} [dedicated.unknown]
   * @property {number} [dedicated.unusable]
   * @property {number} [dedicated.waitingForStartTask]
   * @property {number} [dedicated.total]
   * @property {object} [lowPriority] The number of low priority nodes in each
   * state.
   * @property {number} [lowPriority.creating]
   * @property {number} [lowPriority.idle]
   * @property {number} [lowPriority.offline]
   * @property {number} [lowPriority.preempted]
   * @property {number} [lowPriority.rebooting]
   * @property {number} [lowPriority.reimaging]
   * @property {number} [lowPriority.running]
   * @property {number} [lowPriority.starting]
   * @property {number} [lowPriority.startTaskFailed]
   * @property {number} [lowPriority.leavingPool]
   * @property {number} [lowPriority.unknown]
   * @property {number} [lowPriority.unusable]
   * @property {number} [lowPriority.waitingForStartTask]
   * @property {number} [lowPriority.total]
   */
  constructor() {
  }

  /**
   * Defines the metadata of PoolNodeCounts
   *
   * @returns {object} metadata of PoolNodeCounts
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'PoolNodeCounts',
      type: {
        name: 'Composite',
        className: 'PoolNodeCounts',
        modelProperties: {
          poolId: {
            required: true,
            serializedName: 'poolId',
            type: {
              name: 'String'
            }
          },
          dedicated: {
            required: false,
            serializedName: 'dedicated',
            type: {
              name: 'Composite',
              className: 'NodeCounts'
            }
          },
          lowPriority: {
            required: false,
            serializedName: 'lowPriority',
            type: {
              name: 'Composite',
              className: 'NodeCounts'
            }
          }
        }
      }
    };
  }
}

module.exports = PoolNodeCounts;

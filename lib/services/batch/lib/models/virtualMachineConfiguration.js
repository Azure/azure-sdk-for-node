/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the VirtualMachineConfiguration class.
 * @constructor
 * The configuration of virtual machines for a pool.
 * @member {object} imageReference Gets or sets information about the platform
 * or marketplace image to use.
 * 
 * @member {string} [imageReference.publisher] Gets or sets the publisher of
 * the image.
 * 
 * @member {string} [imageReference.offer] Gets or sets the offer of the image.
 * 
 * @member {string} [imageReference.sku] Gets or sets the SKU of the image.
 * 
 * @member {string} [imageReference.version] Gets or sets the version of the
 * image. A value of 'latest' can be specified to select the latest version
 * of an image.
 * 
 * @member {string} [nodeAgentSKUId] Gets or sets the SKU of Batch Node Agent
 * that needs to be provisioned on the compute node. This property must match
 * the ImageReference property.
 * 
 * @member {object} [windowsConfiguration] Gets or sets Windows operating
 * system settings on the virtual machine. This property must not be
 * specified if the ImageReference property referencs a Linux OS image.
 * 
 * @member {boolean} [windowsConfiguration.enableAutomaticUpdates] Gets or
 * sets whether virtual machine is enabled for automatic updates. If omitted,
 * the default value is true.
 * 
 */
function VirtualMachineConfiguration() {
}

/**
 * Defines the metadata of VirtualMachineConfiguration
 *
 * @returns {object} metadata of VirtualMachineConfiguration
 *
 */
VirtualMachineConfiguration.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'VirtualMachineConfiguration',
    type: {
      name: 'Composite',
      className: 'VirtualMachineConfiguration',
      modelProperties: {
        imageReference: {
          required: true,
          serializedName: 'imageReference',
          type: {
            name: 'Composite',
            className: 'ImageReference'
          }
        },
        nodeAgentSKUId: {
          required: false,
          serializedName: 'nodeAgentSKUId',
          type: {
            name: 'String'
          }
        },
        windowsConfiguration: {
          required: false,
          serializedName: 'windowsConfiguration',
          type: {
            name: 'Composite',
            className: 'WindowsConfiguration'
          }
        }
      }
    }
  };
};

module.exports = VirtualMachineConfiguration;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

/**
 * @class
 * Initializes a new instance of the VirtualMachineConfiguration class.
 * @constructor
 * The configuration for compute nodes in a pool based on the Azure Virtual
 * Machines infrastructure.
 * @member {object} imageReference A reference to the Azure Virtual Machines
 * Marketplace image to use.
 * 
 * @member {string} [imageReference.publisher] The publisher of the Azure
 * Virtual Machines Marketplace image. For example, Canonical or
 * MicrosoftWindowsServer.
 * 
 * @member {string} [imageReference.offer] The offer type of the Azure Virtual
 * Machines Marketplace image. For example, UbuntuServer or WindowsServer.
 * 
 * @member {string} [imageReference.sku] The SKU of the Azure Virtual Machines
 * Marketplace image. For example, 14.04.0-LTS or 2012-R2-Datacenter.
 * 
 * @member {string} [imageReference.version] The version of the Azure Virtual
 * Machines Marketplace image. A value of 'latest' can be specified to select
 * the latest version of an image. If omitted, the default is 'latest'.
 * 
 * @member {string} nodeAgentSKUId The SKU of Batch Node Agent to be
 * provisioned on the compute node. The Batch node agent is a program that
 * runs on each node in the pool, and provides the command-and-control
 * interface between the node and the Batch service. There are different
 * implementations of the node agent, known as SKUs, for different operating
 * systems.
 * 
 * @member {object} [windowsConfiguration] Windows operating system settings
 * on the virtual machine. This property must not be specified if the
 * ImageReference property specifies a Linux OS image.
 * 
 * @member {boolean} [windowsConfiguration.enableAutomaticUpdates] Whether
 * automatic updates are enabled on the virtual machine. If omitted, the
 * default value is true.
 * 
 */
function VirtualMachineConfiguration() {
}

/**
 * Defines the metadata of VirtualMachineConfiguration
 *
 * @returns {object} metadata of VirtualMachineConfiguration
 *
 */
VirtualMachineConfiguration.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'VirtualMachineConfiguration',
    type: {
      name: 'Composite',
      className: 'VirtualMachineConfiguration',
      modelProperties: {
        imageReference: {
          required: true,
          serializedName: 'imageReference',
          type: {
            name: 'Composite',
            className: 'ImageReference'
          }
        },
        nodeAgentSKUId: {
          required: true,
          serializedName: 'nodeAgentSKUId',
          type: {
            name: 'String'
          }
        },
        windowsConfiguration: {
          required: false,
          serializedName: 'windowsConfiguration',
          type: {
            name: 'Composite',
            className: 'WindowsConfiguration'
          }
        }
      }
    }
  };
};

module.exports = VirtualMachineConfiguration;

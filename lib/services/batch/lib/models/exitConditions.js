/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the ExitConditions class.
 * @constructor
 * @summary Specifies how the Batch service should respond when the task
 * completes.
 *
 * @member {array} [exitCodes] A list of individual task exit codes and how the
 * Batch service should respond to them.
 * 
 * @member {array} [exitCodeRanges] A list of task exit code ranges and how the
 * Batch service should respond to them.
 * 
 * @member {object} [schedulingError] How the Batch service should respond if
 * the task fails with a scheduling error.
 * 
 * @member {string} [schedulingError.jobAction] The default is none for exit
 * code 0 and terminate for all other exit conditions. It is an error to
 * specify this if the job's onTaskFailed is noaction. The add task request
 * fails with an invalid property value error; if you are calling the REST API
 * directly, the HTTP status code is 400 (Bad Request). Possible values
 * include: 'none', 'disable', 'terminate'
 * 
 * @member {object} [default] How the Batch service should respond if the task
 * fails with an exit condition not covered by any of the other properties â€“
 * that is, any nonzero exit code not listed in the exitCodes or exitCodeRanges
 * collection, or a scheduling error if the schedulingError property is not
 * present. Note that the default condition does not include exit code 0. If
 * you want non-default behaviour on exit code 0, you must list it explicitly
 * using the exitCodes or exitCodeRanges collection.
 * 
 * @member {string} [default.jobAction] The default is none for exit code 0 and
 * terminate for all other exit conditions. It is an error to specify this if
 * the job's onTaskFailed is noaction. The add task request fails with an
 * invalid property value error; if you are calling the REST API directly, the
 * HTTP status code is 400 (Bad Request). Possible values include: 'none',
 * 'disable', 'terminate'
 * 
 */
function ExitConditions() {
}

/**
 * Defines the metadata of ExitConditions
 *
 * @returns {object} metadata of ExitConditions
 *
 */
ExitConditions.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'ExitConditions',
    type: {
      name: 'Composite',
      className: 'ExitConditions',
      modelProperties: {
        exitCodes: {
          required: false,
          serializedName: 'exitCodes',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'ExitCodeMappingElementType',
                type: {
                  name: 'Composite',
                  className: 'ExitCodeMapping'
                }
            }
          }
        },
        exitCodeRanges: {
          required: false,
          serializedName: 'exitCodeRanges',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'ExitCodeRangeMappingElementType',
                type: {
                  name: 'Composite',
                  className: 'ExitCodeRangeMapping'
                }
            }
          }
        },
        schedulingError: {
          required: false,
          serializedName: 'schedulingError',
          type: {
            name: 'Composite',
            className: 'ExitOptions'
          }
        },
        default: {
          required: false,
          serializedName: 'default',
          type: {
            name: 'Composite',
            className: 'ExitOptions'
          }
        }
      }
    }
  };
};

module.exports = ExitConditions;

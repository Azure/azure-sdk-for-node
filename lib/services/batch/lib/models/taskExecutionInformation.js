/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @summary Information about the execution of a task.
  *
 */
class TaskExecutionInformation {
  /**
   * Create a TaskExecutionInformation.
   * @member {date} [startTime] The time at which the task started running.
   * 'Running' corresponds to the running state, so if the task specifies
   * resource files or application packages, then the start time reflects the
   * time at which the task started downloading or deploying these. If the task
   * has been restarted or retried, this is the most recent time at which the
   * task started running. This property is present only for tasks that are in
   * the running or completed state.
   * @member {date} [endTime] The time at which the task completed. This
   * property is set only if the task is in the Completed state.
   * @member {number} [exitCode] The exit code of the program specified on the
   * task command line. This property is set only if the task is in the
   * completed state. In general, the exit code for a process reflects the
   * specific convention implemented by the application developer for that
   * process. If you use the exit code value to make decisions in your code, be
   * sure that you know the exit code convention used by the application
   * process. However, if the Batch service terminates the task (due to
   * timeout, or user termination via the API) you may see an operating
   * system-defined exit code.
   * @member {object} [containerInfo] Information about the container under
   * which the task is executing. This property is set only if the task runs in
   * a container context.
   * @member {string} [containerInfo.containerId]
   * @member {string} [containerInfo.state] This is the state of the container
   * according to the Docker service. It is equivalent to the status field
   * returned by "docker inspect".
   * @member {string} [containerInfo.error] This is the detailed error string
   * from the Docker service, if available. It is equivalent to the error field
   * returned by "docker inspect".
   * @member {object} [failureInfo] Information describing the task failure, if
   * any. This property is set only if the task is in the completed state and
   * encountered a failure.
   * @member {string} [failureInfo.category] Possible values include:
   * 'userError', 'serverError'
   * @member {string} [failureInfo.code]
   * @member {string} [failureInfo.message]
   * @member {array} [failureInfo.details]
   * @member {number} retryCount The number of times the task has been retried
   * by the Batch service. Task application failures (non-zero exit code) are
   * retried, pre-processing errors (the task could not be run) and file upload
   * errors are not retried. The Batch service will retry the task up to the
   * limit specified by the constraints.
   * @member {date} [lastRetryTime] The most recent time at which a retry of
   * the task started running. This element is present only if the task was
   * retried (i.e. retryCount is nonzero). If present, this is typically the
   * same as startTime, but may be different if the task has been restarted for
   * reasons other than retry; for example, if the compute node was rebooted
   * during a retry, then the startTime is updated but the lastRetryTime is
   * not.
   * @member {number} requeueCount The number of times the task has been
   * requeued by the Batch service as the result of a user request. When the
   * user removes nodes from a pool (by resizing/shrinking the pool) or when
   * the job is being disabled, the user can specify that running tasks on the
   * nodes be requeued for execution. This count tracks how many times the task
   * has been requeued for these reasons.
   * @member {date} [lastRequeueTime] The most recent time at which the task
   * has been requeued by the Batch service as the result of a user request.
   * This property is set only if the requeueCount is nonzero.
   * @member {string} [result] The result of the task execution. If the value
   * is 'failed', then the details of the failure can be found in the
   * failureInfo property. Possible values include: 'success', 'failure'
   */
  constructor() {
  }

  /**
   * Defines the metadata of TaskExecutionInformation
   *
   * @returns {object} metadata of TaskExecutionInformation
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'TaskExecutionInformation',
      type: {
        name: 'Composite',
        className: 'TaskExecutionInformation',
        modelProperties: {
          startTime: {
            required: false,
            serializedName: 'startTime',
            type: {
              name: 'DateTime'
            }
          },
          endTime: {
            required: false,
            serializedName: 'endTime',
            type: {
              name: 'DateTime'
            }
          },
          exitCode: {
            required: false,
            serializedName: 'exitCode',
            type: {
              name: 'Number'
            }
          },
          containerInfo: {
            required: false,
            serializedName: 'containerInfo',
            type: {
              name: 'Composite',
              className: 'TaskContainerExecutionInformation'
            }
          },
          failureInfo: {
            required: false,
            serializedName: 'failureInfo',
            type: {
              name: 'Composite',
              className: 'TaskFailureInformation'
            }
          },
          retryCount: {
            required: true,
            serializedName: 'retryCount',
            type: {
              name: 'Number'
            }
          },
          lastRetryTime: {
            required: false,
            serializedName: 'lastRetryTime',
            type: {
              name: 'DateTime'
            }
          },
          requeueCount: {
            required: true,
            serializedName: 'requeueCount',
            type: {
              name: 'Number'
            }
          },
          lastRequeueTime: {
            required: false,
            serializedName: 'lastRequeueTime',
            type: {
              name: 'DateTime'
            }
          },
          result: {
            required: false,
            serializedName: 'result',
            type: {
              name: 'Enum',
              allowedValues: [ 'success', 'failure' ]
            }
          }
        }
      }
    };
  }
}

module.exports = TaskExecutionInformation;

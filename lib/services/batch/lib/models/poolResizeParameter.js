/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * @class
 * Initializes a new instance of the PoolResizeParameter class.
 * @constructor
 * @summary Options for changing the size of a pool.
 *
 * @member {number} targetDedicated The desired number of compute nodes in the
 * pool.
 * 
 * @member {moment.duration} [resizeTimeout] The timeout for allocation of
 * compute nodes to the pool or removal of compute nodes from the pool. The
 * default value is 15 minutes. The minimum value is 5 minutes. If you specify
 * a value less than 5 minutes, the Batch service returns an error; if you are
 * calling the REST API directly, the HTTP status code is 400 (Bad Request).
 * 
 * @member {string} [nodeDeallocationOption] When nodes may be removed from the
 * pool, if the pool size is decreasing. The default value is requeue. Possible
 * values include: 'requeue', 'terminate', 'taskcompletion', 'retaineddata'
 * 
 */
function PoolResizeParameter() {
}

/**
 * Defines the metadata of PoolResizeParameter
 *
 * @returns {object} metadata of PoolResizeParameter
 *
 */
PoolResizeParameter.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'PoolResizeParameter',
    type: {
      name: 'Composite',
      className: 'PoolResizeParameter',
      modelProperties: {
        targetDedicated: {
          required: true,
          serializedName: 'targetDedicated',
          type: {
            name: 'Number'
          }
        },
        resizeTimeout: {
          required: false,
          serializedName: 'resizeTimeout',
          type: {
            name: 'TimeSpan'
          }
        },
        nodeDeallocationOption: {
          required: false,
          serializedName: 'nodeDeallocationOption',
          type: {
            name: 'Enum',
            allowedValues: [ 'requeue', 'terminate', 'taskcompletion', 'retaineddata' ]
          }
        }
      }
    }
  };
};

module.exports = PoolResizeParameter;

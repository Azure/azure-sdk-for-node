/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 * 
 * Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

var models = require('./index');

var util = require('util');

/**
 * @class
 * Initializes a new instance of the JobPatchParameter class.
 * @constructor
 * Parameters for a CloudJobOperations.Patch request.
 * @member {number} [priority] Sets the priority of the job. Priority values
 * can range from -1000 to 1000, with -1000 being the lowest priority and
 * 1000 being the highest priority. If omitted, the priority of the job is
 * left unchanged.
 * 
 * @member {object} [constraints] Sets the execution constraints for the job.
 * If omitted, the existing execution constraints are left unchanged.
 * 
 * @member {moment.duration} [constraints.maxWallClockTime] Gets or sets the
 * maximum elapsed time that the job may run, measured from the time the job
 * starts. If the job does not complete within the time limit, the Batch
 * service terminates it and any tasks that are still running.
 * 
 * @member {number} [constraints.maxTaskRetryCount] Gets or sets the maximum
 * number of times each task may be retried. The Batch service retries a task
 * if its exit code is nonzero.
 * 
 * @member {object} [poolInfo] Sets the pool on which the Batch service runs
 * the job's tasks. If omitted, the job continues to run on its current pool.
 * 
 * @member {string} [poolInfo.poolId] Gets or sets the id of an existing pool.
 * All the tasks of the job will run on the specified pool. You must specify
 * either PoolId or AutoPoolSpecification, but not both.
 * 
 * @member {object} [poolInfo.autoPoolSpecification] Gets or sets
 * characteristics for a temporary 'auto pool'. The Batch service will create
 * this auto pool and run all of the tasks of the job on it, and will delete
 * the pool once the job has completed. You must specify either PoolId or
 * AutoPoolSpecification, but not both.
 * 
 * @member {string} [poolInfo.autoPoolSpecification.autoPoolIdPrefix] Gets or
 * sets a prefix to be added to the unique identifier when a pool is
 * automatically created. The prefix can be up to 20 characters long.
 * 
 * @member {string} [poolInfo.autoPoolSpecification.poolLifetimeOption] Gets
 * or sets the minimum lifetime of created auto pools, and how multiple jobs
 * on a schedule are assigned to pools. Possible values include:
 * 'jobschedule', 'job', 'unmapped'
 * 
 * @member {boolean} [poolInfo.autoPoolSpecification.keepAlive] Gets or sets
 * whether to keep an auto pool alive after its lifetime expires.
 * 
 * @member {object} [poolInfo.autoPoolSpecification.pool] Gets or sets the
 * pool specification for the auto pool.
 * 
 * @member {string} [poolInfo.autoPoolSpecification.pool.displayName] Gets or
 * sets the display name for the pool.
 * 
 * @member {string} [poolInfo.autoPoolSpecification.pool.vmSize] Gets or sets
 * the size of the virtual machines in the pool. All VMs in a pool are the
 * same size.
 * 
 * @member {object}
 * [poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration] Gets or
 * sets the cloud service configuration for the pool. This property and
 * VirtualMachineConfiguration are mutually exclusive and one of the
 * properties must be specified.
 * 
 * @member {string}
 * [poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.osFamily]
 * Gets or sets the Azure Guest OS family to be installed on the virtual
 * machines in the pool.
 * 
 * @member {string}
 * [poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.targetOSVersion]
 * Gets or sets the Azure Guest OS version to be installed on the virtual
 * machines in the pool. The default value is * which specifies the latest
 * operating system version for the specified OS family.
 * 
 * @member {string}
 * [poolInfo.autoPoolSpecification.pool.cloudServiceConfiguration.currentOSVersion]
 * Gets or sets the Azure Guest OS Version currently installed on the virtual
 * machines in the pool. This may differ from TargetOSVersion if the pool
 * state is Upgrading.
 * 
 * @member {object}
 * [poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration] Gets or
 * sets the virtual machine configuration for the pool. This property and
 * CloudServiceConfiguration are mutually exclusive and one of the properties
 * must be specified.
 * 
 * @member {object}
 * [poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference]
 * Gets or sets information about the platform or marketplace image to use.
 * 
 * @member {string}
 * [poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.publisher]
 * Gets or sets the publisher of the image.
 * 
 * @member {string}
 * [poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.offer]
 * Gets or sets the offer of the image.
 * 
 * @member {string}
 * [poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.sku]
 * Gets or sets the SKU of the image.
 * 
 * @member {string}
 * [poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.imageReference.version]
 * Gets or sets the version of the image. A value of 'latest' can be
 * specified to select the latest version of an image.
 * 
 * @member {string}
 * [poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.nodeAgentSKUId]
 * Gets or sets the SKU of Batch Node Agent that needs to be provisioned on
 * the compute node. This property must match the ImageReference property.
 * 
 * @member {object}
 * [poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration]
 * Gets or sets Windows operating system settings on the virtual machine.
 * This property must not be specified if the ImageReference property
 * referencs a Linux OS image.
 * 
 * @member {boolean}
 * [poolInfo.autoPoolSpecification.pool.virtualMachineConfiguration.windowsConfiguration.enableAutomaticUpdates]
 * Gets or sets whether virtual machine is enabled for automatic updates. If
 * omitted, the default value is true.
 * 
 * @member {number} [poolInfo.autoPoolSpecification.pool.maxTasksPerNode] Gets
 * or sets the maximum number of tasks that can run concurrently on a single
 * compute node in the pool.
 * 
 * @member {object} [poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy]
 * Gets or sets how tasks are distributed among compute nodes in the pool.
 * 
 * @member {string}
 * [poolInfo.autoPoolSpecification.pool.taskSchedulingPolicy.nodeFillType]
 * Gets or sets how tasks should be distributed across compute nodes.
 * Possible values include: 'spread', 'pack', 'unmapped'
 * 
 * @member {moment.duration}
 * [poolInfo.autoPoolSpecification.pool.resizeTimeout] Gets or sets the
 * timeout for allocation of compute nodes to the pool.
 * 
 * @member {number} [poolInfo.autoPoolSpecification.pool.targetDedicated] Gets
 * or sets the desired number of compute nodes in the pool.
 * 
 * @member {boolean} [poolInfo.autoPoolSpecification.pool.enableAutoScale]
 * Gets or sets whether the pool size should automatically adjust over time.
 * 
 * @member {string} [poolInfo.autoPoolSpecification.pool.autoScaleFormula]
 * Gets or sets the formula for the desired number of compute nodes in the
 * pool.
 * 
 * @member {moment.duration}
 * [poolInfo.autoPoolSpecification.pool.autoScaleEvaluationInterval] Gets or
 * sets a time interval for the desired AutoScale evaluation period in the
 * pool.
 * 
 * @member {boolean}
 * [poolInfo.autoPoolSpecification.pool.enableInterNodeCommunication] Gets or
 * sets whether the pool permits direct communication between nodes.
 * 
 * @member {object} [poolInfo.autoPoolSpecification.pool.startTask] Gets or
 * sets a task to run on each compute node as it joins the pool. The task
 * runs when the node is added to the pool or when the node is restarted.
 * 
 * @member {string}
 * [poolInfo.autoPoolSpecification.pool.startTask.commandLine] Gets or sets
 * the command line of the start task.
 * 
 * @member {array}
 * [poolInfo.autoPoolSpecification.pool.startTask.resourceFiles] Gets or sets
 * a list of files that Batch will download to the compute node before
 * running the command line.
 * 
 * @member {array}
 * [poolInfo.autoPoolSpecification.pool.startTask.environmentSettings] Gets
 * or sets a list of environment variable settings for the start task.
 * 
 * @member {boolean}
 * [poolInfo.autoPoolSpecification.pool.startTask.runElevated] Gets or sets
 * whether to run the start task in elevated mode. The default value is false.
 * 
 * @member {number}
 * [poolInfo.autoPoolSpecification.pool.startTask.maxTaskRetryCount] Gets or
 * sets the maximum number of times the task may be retried.
 * 
 * @member {boolean}
 * [poolInfo.autoPoolSpecification.pool.startTask.waitForSuccess] Gets or
 * sets whether the Batch Service should wait for the start task to complete
 * successfully (that is, to exit with exit code 0) before scheduling any
 * tasks on the compute node.
 * 
 * @member {array} [poolInfo.autoPoolSpecification.pool.certificateReferences]
 * Gets or sets a list of certificates to be installed on each compute node
 * in the pool.
 * 
 * @member {array}
 * [poolInfo.autoPoolSpecification.pool.applicationPackageReferences] Gets or
 * sets the list of application packages to be installed on each compute node
 * in the pool.
 * 
 * @member {array} [poolInfo.autoPoolSpecification.pool.metadata] Gets or sets
 * a list of name-value pairs associated with the pool as metadata.
 * 
 * @member {array} [metadata] Sets a list of name-value pairs associated with
 * the job as metadata. If omitted, the existing job metadata is left
 * unchanged.
 * 
 */
function JobPatchParameter() {
}

/**
 * Defines the metadata of JobPatchParameter
 *
 * @returns {object} metadata of JobPatchParameter
 *
 */
JobPatchParameter.prototype.mapper = function () {
  return {
    required: false,
    serializedName: 'JobPatchParameter',
    type: {
      name: 'Composite',
      className: 'JobPatchParameter',
      modelProperties: {
        priority: {
          required: false,
          serializedName: 'priority',
          type: {
            name: 'Number'
          }
        },
        constraints: {
          required: false,
          serializedName: 'constraints',
          type: {
            name: 'Composite',
            className: 'JobConstraints'
          }
        },
        poolInfo: {
          required: false,
          serializedName: 'poolInfo',
          type: {
            name: 'Composite',
            className: 'PoolInformation'
          }
        },
        metadata: {
          required: false,
          serializedName: 'metadata',
          type: {
            name: 'Sequence',
            element: {
                required: false,
                serializedName: 'MetadataItemElementType',
                type: {
                  name: 'Composite',
                  className: 'MetadataItem'
                }
            }
          }
        }
      }
    }
  };
};

module.exports = JobPatchParameter;

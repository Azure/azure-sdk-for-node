/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * The properties used to create a new server.
 *
 */
class ServerPropertiesForCreate {
  /**
   * Create a ServerPropertiesForCreate.
   * @member {string} [version] Server version. Possible values include: '5.6',
   * '5.7'
   * @member {string} [sslEnforcement] Enable ssl enforcement or not when
   * connect to server. Possible values include: 'Enabled', 'Disabled'
   * @member {object} [storageProfile] Storage profile of a server.
   * @member {number} [storageProfile.backupRetentionDays] Backup retention
   * days for the server.
   * @member {string} [storageProfile.geoRedundantBackup] Enable Geo-redundant
   * or not for server backup. Possible values include: 'Enabled', 'Disabled'
   * @member {number} [storageProfile.storageMB] Max storage allowed for a
   * server.
   * @member {string} createMode Polymorphic Discriminator
   */
  constructor() {
  }

  /**
   * Defines the metadata of ServerPropertiesForCreate
   *
   * @returns {object} metadata of ServerPropertiesForCreate
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ServerPropertiesForCreate',
      type: {
        name: 'Composite',
        polymorphicDiscriminator: {
          serializedName: 'createMode',
          clientName: 'createMode'
        },
        uberParent: 'ServerPropertiesForCreate',
        className: 'ServerPropertiesForCreate',
        modelProperties: {
          version: {
            required: false,
            serializedName: 'version',
            type: {
              name: 'String'
            }
          },
          sslEnforcement: {
            required: false,
            serializedName: 'sslEnforcement',
            type: {
              name: 'Enum',
              allowedValues: [ 'Enabled', 'Disabled' ]
            }
          },
          storageProfile: {
            required: false,
            serializedName: 'storageProfile',
            type: {
              name: 'Composite',
              className: 'StorageProfile'
            }
          },
          createMode: {
            required: true,
            serializedName: 'createMode',
            isPolymorphicDiscriminator: true,
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ServerPropertiesForCreate;

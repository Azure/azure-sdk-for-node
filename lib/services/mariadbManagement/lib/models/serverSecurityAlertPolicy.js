/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * A server security alert policy.
 *
 * @extends models['ProxyResource']
 */
class ServerSecurityAlertPolicy extends models['ProxyResource'] {
  /**
   * Create a ServerSecurityAlertPolicy.
   * @member {string} state Specifies the state of the policy, whether it is
   * enabled or disabled. Possible values include: 'Enabled', 'Disabled'
   * @member {array} [disabledAlerts] Specifies an array of alerts that are
   * disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability,
   * Access_Anomaly
   * @member {array} [emailAddresses] Specifies an array of e-mail addresses to
   * which the alert is sent.
   * @member {boolean} [emailAccountAdmins] Specifies that the alert is sent to
   * the account administrators.
   * @member {string} [storageEndpoint] Specifies the blob storage endpoint
   * (e.g. https://MyAccount.blob.core.windows.net). This blob storage will
   * hold all Threat Detection audit logs.
   * @member {string} [storageAccountAccessKey] Specifies the identifier key of
   * the Threat Detection audit storage account.
   * @member {number} [retentionDays] Specifies the number of days to keep in
   * the Threat Detection audit logs.
   */
  constructor() {
    super();
  }

  /**
   * Defines the metadata of ServerSecurityAlertPolicy
   *
   * @returns {object} metadata of ServerSecurityAlertPolicy
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ServerSecurityAlertPolicy',
      type: {
        name: 'Composite',
        className: 'ServerSecurityAlertPolicy',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          state: {
            required: true,
            serializedName: 'properties.state',
            type: {
              name: 'Enum',
              allowedValues: [ 'Enabled', 'Disabled' ]
            }
          },
          disabledAlerts: {
            required: false,
            serializedName: 'properties.disabledAlerts',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          emailAddresses: {
            required: false,
            serializedName: 'properties.emailAddresses',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          emailAccountAdmins: {
            required: false,
            serializedName: 'properties.emailAccountAdmins',
            type: {
              name: 'Boolean'
            }
          },
          storageEndpoint: {
            required: false,
            serializedName: 'properties.storageEndpoint',
            type: {
              name: 'String'
            }
          },
          storageAccountAccessKey: {
            required: false,
            serializedName: 'properties.storageAccountAccessKey',
            type: {
              name: 'String'
            }
          },
          retentionDays: {
            required: false,
            serializedName: 'properties.retentionDays',
            type: {
              name: 'Number'
            }
          }
        }
      }
    };
  }
}

module.exports = ServerSecurityAlertPolicy;

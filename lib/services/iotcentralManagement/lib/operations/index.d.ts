/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Apps
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the IotCentralClient.
 */
export interface Apps {


    /**
     * Get the metadata of an IoT Central application.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoT Central application.
     *
     * @param {string} resourceName The ARM resource name of the IoT Central
     * application.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<App>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.App>>;

    /**
     * Get the metadata of an IoT Central application.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoT Central application.
     *
     * @param {string} resourceName The ARM resource name of the IoT Central
     * application.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {App} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {App} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link App} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.App>;
    get(resourceGroupName: string, resourceName: string, callback: ServiceCallback<models.App>): void;
    get(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.App>): void;


    /**
     * Create or update the metadata of an IoT Central application. The usual
     * pattern to modify a property is to retrieve the IoT Central application
     * metadata and security metadata, and then combine them with the modified
     * values in a new body to update the IoT Central application.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoT Central application.
     *
     * @param {string} resourceName The ARM resource name of the IoT Central
     * application.
     *
     * @param {object} app The IoT Central application metadata and security
     * metadata.
     *
     * @param {string} [app.displayName] The display name of the application.
     *
     * @param {string} [app.subdomain] The subdomain of the application.
     *
     * @param {string} [app.template] The ID of the application template, which is
     * a blueprint that defines the characteristics and behaviors of an
     * application. Optional; if not specified, defaults to a blank blueprint and
     * allows the application to be defined from scratch.
     *
     * @param {object} app.sku A valid instance SKU.
     *
     * @param {string} app.sku.name The name of the SKU. Possible values include:
     * 'F1', 'S1'
     *
     * @param {string} app.location The resource location.
     *
     * @param {object} [app.tags] The resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<App>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, resourceName: string, app: models.App, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.App>>;

    /**
     * Create or update the metadata of an IoT Central application. The usual
     * pattern to modify a property is to retrieve the IoT Central application
     * metadata and security metadata, and then combine them with the modified
     * values in a new body to update the IoT Central application.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoT Central application.
     *
     * @param {string} resourceName The ARM resource name of the IoT Central
     * application.
     *
     * @param {object} app The IoT Central application metadata and security
     * metadata.
     *
     * @param {string} [app.displayName] The display name of the application.
     *
     * @param {string} [app.subdomain] The subdomain of the application.
     *
     * @param {string} [app.template] The ID of the application template, which is
     * a blueprint that defines the characteristics and behaviors of an
     * application. Optional; if not specified, defaults to a blank blueprint and
     * allows the application to be defined from scratch.
     *
     * @param {object} app.sku A valid instance SKU.
     *
     * @param {string} app.sku.name The name of the SKU. Possible values include:
     * 'F1', 'S1'
     *
     * @param {string} app.location The resource location.
     *
     * @param {object} [app.tags] The resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {App} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {App} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link App} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, resourceName: string, app: models.App, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.App>;
    createOrUpdate(resourceGroupName: string, resourceName: string, app: models.App, callback: ServiceCallback<models.App>): void;
    createOrUpdate(resourceGroupName: string, resourceName: string, app: models.App, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.App>): void;


    /**
     * Update the metadata of an IoT Central application.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoT Central application.
     *
     * @param {string} resourceName The ARM resource name of the IoT Central
     * application.
     *
     * @param {object} appPatch The IoT Central application metadata and security
     * metadata.
     *
     * @param {object} [appPatch.tags] Instance tags
     *
     * @param {string} [appPatch.displayName] The display name of the application.
     *
     * @param {string} [appPatch.subdomain] The subdomain of the application.
     *
     * @param {string} [appPatch.template] The ID of the application template,
     * which is a blueprint that defines the characteristics and behaviors of an
     * application. Optional; if not specified, defaults to a blank blueprint and
     * allows the application to be defined from scratch.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<App>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, resourceName: string, appPatch: models.AppPatch, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.App>>;

    /**
     * Update the metadata of an IoT Central application.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoT Central application.
     *
     * @param {string} resourceName The ARM resource name of the IoT Central
     * application.
     *
     * @param {object} appPatch The IoT Central application metadata and security
     * metadata.
     *
     * @param {object} [appPatch.tags] Instance tags
     *
     * @param {string} [appPatch.displayName] The display name of the application.
     *
     * @param {string} [appPatch.subdomain] The subdomain of the application.
     *
     * @param {string} [appPatch.template] The ID of the application template,
     * which is a blueprint that defines the characteristics and behaviors of an
     * application. Optional; if not specified, defaults to a blank blueprint and
     * allows the application to be defined from scratch.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {App} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {App} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link App} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, resourceName: string, appPatch: models.AppPatch, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.App>;
    update(resourceGroupName: string, resourceName: string, appPatch: models.AppPatch, callback: ServiceCallback<models.App>): void;
    update(resourceGroupName: string, resourceName: string, appPatch: models.AppPatch, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.App>): void;


    /**
     * Delete an IoT Central application.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoT Central application.
     *
     * @param {string} resourceName The ARM resource name of the IoT Central
     * application.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete an IoT Central application.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoT Central application.
     *
     * @param {string} resourceName The ARM resource name of the IoT Central
     * application.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, resourceName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Get all IoT Central Applications in a subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AppListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySubscriptionWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AppListResult>>;

    /**
     * Get all IoT Central Applications in a subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AppListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AppListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AppListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySubscription(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AppListResult>;
    listBySubscription(callback: ServiceCallback<models.AppListResult>): void;
    listBySubscription(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AppListResult>): void;


    /**
     * Get all the IoT Central Applications in a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoT Central application.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AppListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AppListResult>>;

    /**
     * Get all the IoT Central Applications in a resource group.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoT Central application.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AppListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AppListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AppListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AppListResult>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.AppListResult>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AppListResult>): void;


    /**
     * Check if an IoT Central application name is available.
     *
     * @param {string} name The name of the IoT Central application instance to
     * check.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AppNameAvailabilityInfo>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    checkNameAvailabilityWithHttpOperationResponse(name: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AppNameAvailabilityInfo>>;

    /**
     * Check if an IoT Central application name is available.
     *
     * @param {string} name The name of the IoT Central application instance to
     * check.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AppNameAvailabilityInfo} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AppNameAvailabilityInfo} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AppNameAvailabilityInfo} for more
     *                      information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    checkNameAvailability(name: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AppNameAvailabilityInfo>;
    checkNameAvailability(name: string, callback: ServiceCallback<models.AppNameAvailabilityInfo>): void;
    checkNameAvailability(name: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AppNameAvailabilityInfo>): void;


    /**
     * Create or update the metadata of an IoT Central application. The usual
     * pattern to modify a property is to retrieve the IoT Central application
     * metadata and security metadata, and then combine them with the modified
     * values in a new body to update the IoT Central application.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoT Central application.
     *
     * @param {string} resourceName The ARM resource name of the IoT Central
     * application.
     *
     * @param {object} app The IoT Central application metadata and security
     * metadata.
     *
     * @param {string} [app.displayName] The display name of the application.
     *
     * @param {string} [app.subdomain] The subdomain of the application.
     *
     * @param {string} [app.template] The ID of the application template, which is
     * a blueprint that defines the characteristics and behaviors of an
     * application. Optional; if not specified, defaults to a blank blueprint and
     * allows the application to be defined from scratch.
     *
     * @param {object} app.sku A valid instance SKU.
     *
     * @param {string} app.sku.name The name of the SKU. Possible values include:
     * 'F1', 'S1'
     *
     * @param {string} app.location The resource location.
     *
     * @param {object} [app.tags] The resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<App>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginCreateOrUpdateWithHttpOperationResponse(resourceGroupName: string, resourceName: string, app: models.App, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.App>>;

    /**
     * Create or update the metadata of an IoT Central application. The usual
     * pattern to modify a property is to retrieve the IoT Central application
     * metadata and security metadata, and then combine them with the modified
     * values in a new body to update the IoT Central application.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoT Central application.
     *
     * @param {string} resourceName The ARM resource name of the IoT Central
     * application.
     *
     * @param {object} app The IoT Central application metadata and security
     * metadata.
     *
     * @param {string} [app.displayName] The display name of the application.
     *
     * @param {string} [app.subdomain] The subdomain of the application.
     *
     * @param {string} [app.template] The ID of the application template, which is
     * a blueprint that defines the characteristics and behaviors of an
     * application. Optional; if not specified, defaults to a blank blueprint and
     * allows the application to be defined from scratch.
     *
     * @param {object} app.sku A valid instance SKU.
     *
     * @param {string} app.sku.name The name of the SKU. Possible values include:
     * 'F1', 'S1'
     *
     * @param {string} app.location The resource location.
     *
     * @param {object} [app.tags] The resource tags.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {App} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {App} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link App} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, app: models.App, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.App>;
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, app: models.App, callback: ServiceCallback<models.App>): void;
    beginCreateOrUpdate(resourceGroupName: string, resourceName: string, app: models.App, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.App>): void;


    /**
     * Update the metadata of an IoT Central application.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoT Central application.
     *
     * @param {string} resourceName The ARM resource name of the IoT Central
     * application.
     *
     * @param {object} appPatch The IoT Central application metadata and security
     * metadata.
     *
     * @param {object} [appPatch.tags] Instance tags
     *
     * @param {string} [appPatch.displayName] The display name of the application.
     *
     * @param {string} [appPatch.subdomain] The subdomain of the application.
     *
     * @param {string} [appPatch.template] The ID of the application template,
     * which is a blueprint that defines the characteristics and behaviors of an
     * application. Optional; if not specified, defaults to a blank blueprint and
     * allows the application to be defined from scratch.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<App>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginUpdateWithHttpOperationResponse(resourceGroupName: string, resourceName: string, appPatch: models.AppPatch, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.App>>;

    /**
     * Update the metadata of an IoT Central application.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoT Central application.
     *
     * @param {string} resourceName The ARM resource name of the IoT Central
     * application.
     *
     * @param {object} appPatch The IoT Central application metadata and security
     * metadata.
     *
     * @param {object} [appPatch.tags] Instance tags
     *
     * @param {string} [appPatch.displayName] The display name of the application.
     *
     * @param {string} [appPatch.subdomain] The subdomain of the application.
     *
     * @param {string} [appPatch.template] The ID of the application template,
     * which is a blueprint that defines the characteristics and behaviors of an
     * application. Optional; if not specified, defaults to a blank blueprint and
     * allows the application to be defined from scratch.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {App} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {App} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link App} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginUpdate(resourceGroupName: string, resourceName: string, appPatch: models.AppPatch, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.App>;
    beginUpdate(resourceGroupName: string, resourceName: string, appPatch: models.AppPatch, callback: ServiceCallback<models.App>): void;
    beginUpdate(resourceGroupName: string, resourceName: string, appPatch: models.AppPatch, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.App>): void;


    /**
     * Delete an IoT Central application.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoT Central application.
     *
     * @param {string} resourceName The ARM resource name of the IoT Central
     * application.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    beginDeleteMethodWithHttpOperationResponse(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Delete an IoT Central application.
     *
     * @param {string} resourceGroupName The name of the resource group that
     * contains the IoT Central application.
     *
     * @param {string} resourceName The ARM resource name of the IoT Central
     * application.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    beginDeleteMethod(resourceGroupName: string, resourceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    beginDeleteMethod(resourceGroupName: string, resourceName: string, callback: ServiceCallback<void>): void;
    beginDeleteMethod(resourceGroupName: string, resourceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Get all IoT Central Applications in a subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AppListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listBySubscriptionNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AppListResult>>;

    /**
     * Get all IoT Central Applications in a subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AppListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AppListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AppListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listBySubscriptionNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AppListResult>;
    listBySubscriptionNext(nextPageLink: string, callback: ServiceCallback<models.AppListResult>): void;
    listBySubscriptionNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AppListResult>): void;


    /**
     * Get all the IoT Central Applications in a resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AppListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AppListResult>>;

    /**
     * Get all the IoT Central Applications in a resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AppListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AppListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AppListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AppListResult>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.AppListResult>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AppListResult>): void;
}

/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the IotCentralClient.
 */
export interface Operations {


    /**
     * Lists all of the available IoT Central application REST API operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists all of the available IoT Central application REST API operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    list(callback: ServiceCallback<models.OperationListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;


    /**
     * Lists all of the available IoT Central application REST API operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists all of the available IoT Central application REST API operations.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.OperationListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;
}

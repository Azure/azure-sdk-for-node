/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * An object providing additional metadata describing color attributes.
 *
 */
class ColorInfo {
  /**
   * Create a ColorInfo.
   * @member {string} [dominantColorForeground] Possible dominant foreground
   * color.
   * @member {string} [dominantColorBackground] Possible dominant background
   * color.
   * @member {array} [dominantColors] An array of possible dominant colors.
   * @member {string} [accentColor] Possible accent color.
   * @member {boolean} [isBWImg] A value indicating if the image is black and
   * white.
   */
  constructor() {
  }

  /**
   * Defines the metadata of ColorInfo
   *
   * @returns {object} metadata of ColorInfo
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ColorInfo',
      type: {
        name: 'Composite',
        className: 'ColorInfo',
        modelProperties: {
          dominantColorForeground: {
            required: false,
            serializedName: 'dominantColorForeground',
            type: {
              name: 'String'
            }
          },
          dominantColorBackground: {
            required: false,
            serializedName: 'dominantColorBackground',
            type: {
              name: 'String'
            }
          },
          dominantColors: {
            required: false,
            serializedName: 'dominantColors',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          accentColor: {
            required: false,
            serializedName: 'accentColor',
            type: {
              name: 'String'
            }
          },
          isBWImg: {
            required: false,
            serializedName: 'isBWImg',
            type: {
              name: 'Boolean'
            }
          }
        }
      }
    };
  }
}

module.exports = ColorInfo;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Face Attributes
 *
 */
class FaceAttributes {
  /**
   * Create a FaceAttributes.
   * @member {number} [age] Age in years
   * @member {string} [gender] Gender: male or female. Possible values include:
   * 'male', 'female'
   * @member {number} [smile] Smile intensity, a number between [0,1]
   * @member {string} [glasses] Glasses type. Possible values are 'noGlasses',
   * 'readingGlasses', 'sunglasses', 'swimmingGoggles'. Possible values
   * include: 'noGlasses', 'readingGlasses', 'sunglasses', 'swimmingGoggles'
   * @member {object} [facialHair]
   * @member {number} [facialHair.mustache]
   * @member {number} [facialHair.beard]
   * @member {number} [facialHair.sideburns]
   * @member {object} [headPose]
   * @member {number} [headPose.roll]
   * @member {number} [headPose.yaw]
   * @member {number} [headPose.pitch]
   * @member {object} [emotion]
   * @member {number} [emotion.anger]
   * @member {number} [emotion.contempt]
   * @member {number} [emotion.disgust]
   * @member {number} [emotion.fear]
   * @member {number} [emotion.happiness]
   * @member {number} [emotion.neutral]
   * @member {number} [emotion.sadness]
   * @member {number} [emotion.surprise]
   */
  constructor() {
  }

  /**
   * Defines the metadata of FaceAttributes
   *
   * @returns {object} metadata of FaceAttributes
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'FaceAttributes',
      type: {
        name: 'Composite',
        className: 'FaceAttributes',
        modelProperties: {
          age: {
            required: false,
            serializedName: 'age',
            type: {
              name: 'Number'
            }
          },
          gender: {
            required: false,
            serializedName: 'gender',
            type: {
              name: 'String'
            }
          },
          smile: {
            required: false,
            serializedName: 'smile',
            constraints: {
              InclusiveMaximum: 1,
              InclusiveMinimum: 0
            },
            type: {
              name: 'Number'
            }
          },
          glasses: {
            required: false,
            serializedName: 'glasses',
            type: {
              name: 'String'
            }
          },
          facialHair: {
            required: false,
            serializedName: 'facialHair',
            type: {
              name: 'Composite',
              className: 'FacialHairProperties'
            }
          },
          headPose: {
            required: false,
            serializedName: 'headPose',
            type: {
              name: 'Composite',
              className: 'HeadPoseProperties'
            }
          },
          emotion: {
            required: false,
            serializedName: 'emotion',
            type: {
              name: 'Composite',
              className: 'EmotionProperties'
            }
          }
        }
      }
    };
  }
}

module.exports = FaceAttributes;

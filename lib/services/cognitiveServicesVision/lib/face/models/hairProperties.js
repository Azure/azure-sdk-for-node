/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Properties describing hair attributes.
 *
 */
class HairProperties {
  /**
   * Create a HairProperties.
   * @member {number} [bald] A number describing confidence level of whether
   * the person is bald.
   * @member {boolean} [invisible] A boolean value describing whether the hair
   * is visible in the image.
   * @member {array} [hairColor]
   */
  constructor() {
  }

  /**
   * Defines the metadata of HairProperties
   *
   * @returns {object} metadata of HairProperties
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'HairProperties',
      type: {
        name: 'Composite',
        className: 'HairProperties',
        modelProperties: {
          bald: {
            required: false,
            serializedName: 'bald',
            constraints: {
              InclusiveMaximum: 1,
              InclusiveMinimum: 0
            },
            type: {
              name: 'Number'
            }
          },
          invisible: {
            required: false,
            serializedName: 'invisible',
            type: {
              name: 'Boolean'
            }
          },
          hairColor: {
            required: false,
            serializedName: 'hairColor',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ColorPropertyElementType',
                  type: {
                    name: 'Composite',
                    className: 'ColorProperty'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = HairProperties;

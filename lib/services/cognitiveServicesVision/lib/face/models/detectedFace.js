/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * Detected Face object.
 *
 */
class DetectedFace {
  /**
   * Create a DetectedFace.
   * @member {string} [faceId]
   * @member {object} faceRectangle
   * @member {number} [faceRectangle.width] The width of the rectangle, in
   * pixels.
   * @member {number} [faceRectangle.height] The height of the rectangle, in
   * pixels.
   * @member {number} [faceRectangle.left] The distance from the left edge if
   * the image to the left edge of the rectangle, in pixels.
   * @member {number} [faceRectangle.top] The distance from the top edge if the
   * image to the top edge of the rectangle, in pixels.
   * @member {object} [faceLandmarks]
   * @member {object} [faceLandmarks.pupilLeft]
   * @member {number} [faceLandmarks.pupilLeft.x] The horizontal component, in
   * pixels.
   * @member {number} [faceLandmarks.pupilLeft.y] The vertical component, in
   * pixels.
   * @member {object} [faceLandmarks.pupilRight]
   * @member {number} [faceLandmarks.pupilRight.x] The horizontal component, in
   * pixels.
   * @member {number} [faceLandmarks.pupilRight.y] The vertical component, in
   * pixels.
   * @member {object} [faceLandmarks.noseTip]
   * @member {number} [faceLandmarks.noseTip.x] The horizontal component, in
   * pixels.
   * @member {number} [faceLandmarks.noseTip.y] The vertical component, in
   * pixels.
   * @member {object} [faceLandmarks.mouthLeft]
   * @member {number} [faceLandmarks.mouthLeft.x] The horizontal component, in
   * pixels.
   * @member {number} [faceLandmarks.mouthLeft.y] The vertical component, in
   * pixels.
   * @member {object} [faceLandmarks.mouthRight]
   * @member {number} [faceLandmarks.mouthRight.x] The horizontal component, in
   * pixels.
   * @member {number} [faceLandmarks.mouthRight.y] The vertical component, in
   * pixels.
   * @member {object} [faceLandmarks.eyebrowLeftOuter]
   * @member {number} [faceLandmarks.eyebrowLeftOuter.x] The horizontal
   * component, in pixels.
   * @member {number} [faceLandmarks.eyebrowLeftOuter.y] The vertical
   * component, in pixels.
   * @member {object} [faceLandmarks.eyebrowLeftInner]
   * @member {number} [faceLandmarks.eyebrowLeftInner.x] The horizontal
   * component, in pixels.
   * @member {number} [faceLandmarks.eyebrowLeftInner.y] The vertical
   * component, in pixels.
   * @member {object} [faceLandmarks.eyeLeftOuter]
   * @member {number} [faceLandmarks.eyeLeftOuter.x] The horizontal component,
   * in pixels.
   * @member {number} [faceLandmarks.eyeLeftOuter.y] The vertical component, in
   * pixels.
   * @member {object} [faceLandmarks.eyeLeftTop]
   * @member {number} [faceLandmarks.eyeLeftTop.x] The horizontal component, in
   * pixels.
   * @member {number} [faceLandmarks.eyeLeftTop.y] The vertical component, in
   * pixels.
   * @member {object} [faceLandmarks.eyeLeftBottom]
   * @member {number} [faceLandmarks.eyeLeftBottom.x] The horizontal component,
   * in pixels.
   * @member {number} [faceLandmarks.eyeLeftBottom.y] The vertical component,
   * in pixels.
   * @member {object} [faceLandmarks.eyeLeftInner]
   * @member {number} [faceLandmarks.eyeLeftInner.x] The horizontal component,
   * in pixels.
   * @member {number} [faceLandmarks.eyeLeftInner.y] The vertical component, in
   * pixels.
   * @member {object} [faceLandmarks.eyebrowRightInner]
   * @member {number} [faceLandmarks.eyebrowRightInner.x] The horizontal
   * component, in pixels.
   * @member {number} [faceLandmarks.eyebrowRightInner.y] The vertical
   * component, in pixels.
   * @member {object} [faceLandmarks.eyebrowRightOuter]
   * @member {number} [faceLandmarks.eyebrowRightOuter.x] The horizontal
   * component, in pixels.
   * @member {number} [faceLandmarks.eyebrowRightOuter.y] The vertical
   * component, in pixels.
   * @member {object} [faceLandmarks.eyeRightInner]
   * @member {number} [faceLandmarks.eyeRightInner.x] The horizontal component,
   * in pixels.
   * @member {number} [faceLandmarks.eyeRightInner.y] The vertical component,
   * in pixels.
   * @member {object} [faceLandmarks.eyeRightTop]
   * @member {number} [faceLandmarks.eyeRightTop.x] The horizontal component,
   * in pixels.
   * @member {number} [faceLandmarks.eyeRightTop.y] The vertical component, in
   * pixels.
   * @member {object} [faceLandmarks.eyeRightBottom]
   * @member {number} [faceLandmarks.eyeRightBottom.x] The horizontal
   * component, in pixels.
   * @member {number} [faceLandmarks.eyeRightBottom.y] The vertical component,
   * in pixels.
   * @member {object} [faceLandmarks.eyeRightOuter]
   * @member {number} [faceLandmarks.eyeRightOuter.x] The horizontal component,
   * in pixels.
   * @member {number} [faceLandmarks.eyeRightOuter.y] The vertical component,
   * in pixels.
   * @member {object} [faceLandmarks.noseRootLeft]
   * @member {number} [faceLandmarks.noseRootLeft.x] The horizontal component,
   * in pixels.
   * @member {number} [faceLandmarks.noseRootLeft.y] The vertical component, in
   * pixels.
   * @member {object} [faceLandmarks.noseRootRight]
   * @member {number} [faceLandmarks.noseRootRight.x] The horizontal component,
   * in pixels.
   * @member {number} [faceLandmarks.noseRootRight.y] The vertical component,
   * in pixels.
   * @member {object} [faceLandmarks.noseLeftAlarTop]
   * @member {number} [faceLandmarks.noseLeftAlarTop.x] The horizontal
   * component, in pixels.
   * @member {number} [faceLandmarks.noseLeftAlarTop.y] The vertical component,
   * in pixels.
   * @member {object} [faceLandmarks.noseRightAlarTop]
   * @member {number} [faceLandmarks.noseRightAlarTop.x] The horizontal
   * component, in pixels.
   * @member {number} [faceLandmarks.noseRightAlarTop.y] The vertical
   * component, in pixels.
   * @member {object} [faceLandmarks.noseLeftAlarOutTip]
   * @member {number} [faceLandmarks.noseLeftAlarOutTip.x] The horizontal
   * component, in pixels.
   * @member {number} [faceLandmarks.noseLeftAlarOutTip.y] The vertical
   * component, in pixels.
   * @member {object} [faceLandmarks.noseRightAlarOutTip]
   * @member {number} [faceLandmarks.noseRightAlarOutTip.x] The horizontal
   * component, in pixels.
   * @member {number} [faceLandmarks.noseRightAlarOutTip.y] The vertical
   * component, in pixels.
   * @member {object} [faceLandmarks.upperLipTop]
   * @member {number} [faceLandmarks.upperLipTop.x] The horizontal component,
   * in pixels.
   * @member {number} [faceLandmarks.upperLipTop.y] The vertical component, in
   * pixels.
   * @member {object} [faceLandmarks.upperLipBottom]
   * @member {number} [faceLandmarks.upperLipBottom.x] The horizontal
   * component, in pixels.
   * @member {number} [faceLandmarks.upperLipBottom.y] The vertical component,
   * in pixels.
   * @member {object} [faceLandmarks.underLipTop]
   * @member {number} [faceLandmarks.underLipTop.x] The horizontal component,
   * in pixels.
   * @member {number} [faceLandmarks.underLipTop.y] The vertical component, in
   * pixels.
   * @member {object} [faceLandmarks.underLipBottom]
   * @member {number} [faceLandmarks.underLipBottom.x] The horizontal
   * component, in pixels.
   * @member {number} [faceLandmarks.underLipBottom.y] The vertical component,
   * in pixels.
   */
  constructor() {
  }

  /**
   * Defines the metadata of DetectedFace
   *
   * @returns {object} metadata of DetectedFace
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DetectedFace',
      type: {
        name: 'Composite',
        className: 'DetectedFace',
        modelProperties: {
          faceId: {
            required: false,
            serializedName: 'faceId',
            constraints: {
              MaxLength: 64
            },
            type: {
              name: 'String'
            }
          },
          faceRectangle: {
            required: true,
            serializedName: 'faceRectangle',
            type: {
              name: 'Composite',
              className: 'FaceRectangle'
            }
          },
          faceLandmarks: {
            required: false,
            serializedName: 'faceLandmarks',
            type: {
              name: 'Composite',
              className: 'FaceLandmarks'
            }
          }
        }
      }
    };
  }
}

module.exports = DetectedFace;

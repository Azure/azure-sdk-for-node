/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the LabVirtualMachineCreationParameter class.
 * @constructor
 * Properties for creating a virtual machine.
 *
 * @member {object} [bulkCreationParameters] The number of virtual machine
 * instances to create.
 *
 * @member {number} [bulkCreationParameters.instanceCount] The number of
 * virtual machine instances to create.
 *
 * @member {string} [notes] The notes of the virtual machine.
 *
 * @member {string} [ownerObjectId] The object identifier of the owner of the
 * virtual machine.
 *
 * @member {string} [ownerUserPrincipalName] The user principal name of the
 * virtual machine owner.
 *
 * @member {string} [createdByUserId] The object identifier of the creator of
 * the virtual machine.
 *
 * @member {string} [createdByUser] The email address of creator of the virtual
 * machine.
 *
 * @member {date} [createdDate] The creation date of the virtual machine.
 *
 * @member {string} [customImageId] The custom image identifier of the virtual
 * machine.
 *
 * @member {string} [osType] The OS type of the virtual machine.
 *
 * @member {string} [size] The size of the virtual machine.
 *
 * @member {string} [userName] The user name of the virtual machine.
 *
 * @member {string} [password] The password of the virtual machine
 * administrator.
 *
 * @member {string} [sshKey] The SSH key of the virtual machine administrator.
 *
 * @member {boolean} [isAuthenticationWithSshKey] Indicates whether this
 * virtual machine uses an SSH key for authentication.
 *
 * @member {string} [fqdn] The fully-qualified domain name of the virtual
 * machine.
 *
 * @member {string} [labSubnetName] The lab subnet name of the virtual machine.
 *
 * @member {string} [labVirtualNetworkId] The lab virtual network identifier of
 * the virtual machine.
 *
 * @member {boolean} [disallowPublicIpAddress] Indicates whether the virtual
 * machine is to be created without a public IP address.
 *
 * @member {array} [artifacts] The artifacts to be installed on the virtual
 * machine.
 *
 * @member {object} [artifactDeploymentStatus] The artifact deployment status
 * for the virtual machine.
 *
 * @member {string} [artifactDeploymentStatus.deploymentStatus] The deployment
 * status of the artifact.
 *
 * @member {number} [artifactDeploymentStatus.artifactsApplied] The total count
 * of the artifacts that were successfully applied.
 *
 * @member {number} [artifactDeploymentStatus.totalArtifacts] The total count
 * of the artifacts that were tentatively applied.
 *
 * @member {object} [galleryImageReference] The Microsoft Azure Marketplace
 * image reference of the virtual machine.
 *
 * @member {string} [galleryImageReference.offer] The offer of the gallery
 * image.
 *
 * @member {string} [galleryImageReference.publisher] The publisher of the
 * gallery image.
 *
 * @member {string} [galleryImageReference.sku] The SKU of the gallery image.
 *
 * @member {string} [galleryImageReference.osType] The OS type of the gallery
 * image.
 *
 * @member {string} [galleryImageReference.version] The version of the gallery
 * image.
 *
 * @member {object} [computeVm] The compute virtual machine properties.
 *
 * @member {array} [computeVm.statuses] Gets the statuses of the virtual
 * machine.
 *
 * @member {string} [computeVm.osType] Gets the OS type of the virtual machine.
 *
 * @member {string} [computeVm.vmSize] Gets the size of the virtual machine.
 *
 * @member {string} [computeVm.networkInterfaceId] Gets the network interface
 * ID of the virtual machine.
 *
 * @member {string} [computeVm.osDiskId] Gets OS disk blob uri for the virtual
 * machine.
 *
 * @member {array} [computeVm.dataDiskIds] Gets data disks blob uri for the
 * virtual machine.
 *
 * @member {array} [computeVm.dataDisks] Gets all data disks attached to the
 * virtual machine.
 *
 * @member {object} [networkInterface] The network interface properties.
 *
 * @member {string} [networkInterface.virtualNetworkId] The resource ID of the
 * virtual network.
 *
 * @member {string} [networkInterface.subnetId] The resource ID of the sub net.
 *
 * @member {string} [networkInterface.publicIpAddressId] The resource ID of the
 * public IP address.
 *
 * @member {string} [networkInterface.publicIpAddress] The public IP address.
 *
 * @member {string} [networkInterface.privateIpAddress] The private IP address.
 *
 * @member {string} [networkInterface.dnsName] The DNS name.
 *
 * @member {string} [networkInterface.rdpAuthority] The RdpAuthority property
 * is a server DNS host name or IP address followed by the service port number
 * for RDP (Remote Desktop Protocol).
 *
 * @member {string} [networkInterface.sshAuthority] The SshAuthority property
 * is a server DNS host name or IP address followed by the service port number
 * for SSH.
 *
 * @member {object} [networkInterface.sharedPublicIpAddressConfiguration] The
 * configuration for sharing a public IP address across multiple virtual
 * machines.
 *
 * @member {array}
 * [networkInterface.sharedPublicIpAddressConfiguration.inboundNatRules] The
 * incoming NAT rules
 *
 * @member {object} [applicableSchedule] The applicable schedule for the
 * virtual machine.
 *
 * @member {object} [applicableSchedule.labVmsShutdown] The auto-shutdown
 * schedule, if one has been set at the lab or lab resource level.
 *
 * @member {string} [applicableSchedule.labVmsShutdown.status] The status of
 * the schedule (i.e. Enabled, Disabled). Possible values include: 'Enabled',
 * 'Disabled'
 *
 * @member {string} [applicableSchedule.labVmsShutdown.taskType] The task type
 * of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
 *
 * @member {object} [applicableSchedule.labVmsShutdown.weeklyRecurrence] If the
 * schedule will occur only some days of the week, specify the weekly
 * recurrence.
 *
 * @member {array}
 * [applicableSchedule.labVmsShutdown.weeklyRecurrence.weekdays] The days of
 * the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
 *
 * @member {string} [applicableSchedule.labVmsShutdown.weeklyRecurrence.time]
 * The time of the day the schedule will occur.
 *
 * @member {object} [applicableSchedule.labVmsShutdown.dailyRecurrence] If the
 * schedule will occur once each day of the week, specify the daily recurrence.
 *
 * @member {string} [applicableSchedule.labVmsShutdown.dailyRecurrence.time]
 * The time of day the schedule will occur.
 *
 * @member {object} [applicableSchedule.labVmsShutdown.hourlyRecurrence] If the
 * schedule will occur multiple times a day, specify the hourly recurrence.
 *
 * @member {number} [applicableSchedule.labVmsShutdown.hourlyRecurrence.minute]
 * Minutes of the hour the schedule will run.
 *
 * @member {string} [applicableSchedule.labVmsShutdown.timeZoneId] The time
 * zone ID (e.g. Pacific Standard time).
 *
 * @member {object} [applicableSchedule.labVmsShutdown.notificationSettings]
 * Notification settings.
 *
 * @member {string}
 * [applicableSchedule.labVmsShutdown.notificationSettings.status] If
 * notifications are enabled for this schedule (i.e. Enabled, Disabled).
 * Possible values include: 'Disabled', 'Enabled'
 *
 * @member {number}
 * [applicableSchedule.labVmsShutdown.notificationSettings.timeInMinutes] Time
 * in minutes before event at which notification will be sent.
 *
 * @member {string}
 * [applicableSchedule.labVmsShutdown.notificationSettings.webhookUrl] The
 * webhook URL to which the notification will be sent.
 *
 * @member {date} [applicableSchedule.labVmsShutdown.createdDate] The creation
 * date of the schedule.
 *
 * @member {string} [applicableSchedule.labVmsShutdown.targetResourceId] The
 * resource ID to which the schedule belongs
 *
 * @member {string} [applicableSchedule.labVmsShutdown.provisioningState] The
 * provisioning status of the resource.
 *
 * @member {string} [applicableSchedule.labVmsShutdown.uniqueIdentifier] The
 * unique immutable identifier of a resource (Guid).
 *
 * @member {object} [applicableSchedule.labVmsStartup] The auto-startup
 * schedule, if one has been set at the lab or lab resource level.
 *
 * @member {string} [applicableSchedule.labVmsStartup.status] The status of the
 * schedule (i.e. Enabled, Disabled). Possible values include: 'Enabled',
 * 'Disabled'
 *
 * @member {string} [applicableSchedule.labVmsStartup.taskType] The task type
 * of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
 *
 * @member {object} [applicableSchedule.labVmsStartup.weeklyRecurrence] If the
 * schedule will occur only some days of the week, specify the weekly
 * recurrence.
 *
 * @member {array} [applicableSchedule.labVmsStartup.weeklyRecurrence.weekdays]
 * The days of the week for which the schedule is set (e.g. Sunday, Monday,
 * Tuesday, etc.).
 *
 * @member {string} [applicableSchedule.labVmsStartup.weeklyRecurrence.time]
 * The time of the day the schedule will occur.
 *
 * @member {object} [applicableSchedule.labVmsStartup.dailyRecurrence] If the
 * schedule will occur once each day of the week, specify the daily recurrence.
 *
 * @member {string} [applicableSchedule.labVmsStartup.dailyRecurrence.time] The
 * time of day the schedule will occur.
 *
 * @member {object} [applicableSchedule.labVmsStartup.hourlyRecurrence] If the
 * schedule will occur multiple times a day, specify the hourly recurrence.
 *
 * @member {number} [applicableSchedule.labVmsStartup.hourlyRecurrence.minute]
 * Minutes of the hour the schedule will run.
 *
 * @member {string} [applicableSchedule.labVmsStartup.timeZoneId] The time zone
 * ID (e.g. Pacific Standard time).
 *
 * @member {object} [applicableSchedule.labVmsStartup.notificationSettings]
 * Notification settings.
 *
 * @member {string}
 * [applicableSchedule.labVmsStartup.notificationSettings.status] If
 * notifications are enabled for this schedule (i.e. Enabled, Disabled).
 * Possible values include: 'Disabled', 'Enabled'
 *
 * @member {number}
 * [applicableSchedule.labVmsStartup.notificationSettings.timeInMinutes] Time
 * in minutes before event at which notification will be sent.
 *
 * @member {string}
 * [applicableSchedule.labVmsStartup.notificationSettings.webhookUrl] The
 * webhook URL to which the notification will be sent.
 *
 * @member {date} [applicableSchedule.labVmsStartup.createdDate] The creation
 * date of the schedule.
 *
 * @member {string} [applicableSchedule.labVmsStartup.targetResourceId] The
 * resource ID to which the schedule belongs
 *
 * @member {string} [applicableSchedule.labVmsStartup.provisioningState] The
 * provisioning status of the resource.
 *
 * @member {string} [applicableSchedule.labVmsStartup.uniqueIdentifier] The
 * unique immutable identifier of a resource (Guid).
 *
 * @member {date} [expirationDate] The expiration date for VM.
 *
 * @member {boolean} [allowClaim] Indicates whether another user can take
 * ownership of the virtual machine
 *
 * @member {string} [storageType] Storage type to use for virtual machine (i.e.
 * Standard, Premium).
 *
 * @member {string} [virtualMachineCreationSource] Tells source of creation of
 * lab virtual machine. Output property only. Possible values include:
 * 'FromCustomImage', 'FromGalleryImage'
 *
 * @member {string} [environmentId] The resource ID of the environment that
 * contains this virtual machine, if any.
 *
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 *
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 *
 * @member {string} [name] The name of the virtual machine or environment
 *
 * @member {string} [location] The location of the new virtual machine or
 * environment
 *
 * @member {object} [tags] The tags of the resource.
 *
 */
class LabVirtualMachineCreationParameter {
  constructor() {
  }

  /**
   * Defines the metadata of LabVirtualMachineCreationParameter
   *
   * @returns {object} metadata of LabVirtualMachineCreationParameter
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'LabVirtualMachineCreationParameter',
      type: {
        name: 'Composite',
        className: 'LabVirtualMachineCreationParameter',
        modelProperties: {
          bulkCreationParameters: {
            required: false,
            serializedName: 'properties.bulkCreationParameters',
            type: {
              name: 'Composite',
              className: 'BulkCreationParameters'
            }
          },
          notes: {
            required: false,
            serializedName: 'properties.notes',
            type: {
              name: 'String'
            }
          },
          ownerObjectId: {
            required: false,
            serializedName: 'properties.ownerObjectId',
            type: {
              name: 'String'
            }
          },
          ownerUserPrincipalName: {
            required: false,
            serializedName: 'properties.ownerUserPrincipalName',
            type: {
              name: 'String'
            }
          },
          createdByUserId: {
            required: false,
            serializedName: 'properties.createdByUserId',
            type: {
              name: 'String'
            }
          },
          createdByUser: {
            required: false,
            serializedName: 'properties.createdByUser',
            type: {
              name: 'String'
            }
          },
          createdDate: {
            required: false,
            serializedName: 'properties.createdDate',
            type: {
              name: 'DateTime'
            }
          },
          customImageId: {
            required: false,
            serializedName: 'properties.customImageId',
            type: {
              name: 'String'
            }
          },
          osType: {
            required: false,
            serializedName: 'properties.osType',
            type: {
              name: 'String'
            }
          },
          size: {
            required: false,
            serializedName: 'properties.size',
            type: {
              name: 'String'
            }
          },
          userName: {
            required: false,
            serializedName: 'properties.userName',
            type: {
              name: 'String'
            }
          },
          password: {
            required: false,
            serializedName: 'properties.password',
            type: {
              name: 'String'
            }
          },
          sshKey: {
            required: false,
            serializedName: 'properties.sshKey',
            type: {
              name: 'String'
            }
          },
          isAuthenticationWithSshKey: {
            required: false,
            serializedName: 'properties.isAuthenticationWithSshKey',
            type: {
              name: 'Boolean'
            }
          },
          fqdn: {
            required: false,
            serializedName: 'properties.fqdn',
            type: {
              name: 'String'
            }
          },
          labSubnetName: {
            required: false,
            serializedName: 'properties.labSubnetName',
            type: {
              name: 'String'
            }
          },
          labVirtualNetworkId: {
            required: false,
            serializedName: 'properties.labVirtualNetworkId',
            type: {
              name: 'String'
            }
          },
          disallowPublicIpAddress: {
            required: false,
            serializedName: 'properties.disallowPublicIpAddress',
            type: {
              name: 'Boolean'
            }
          },
          artifacts: {
            required: false,
            serializedName: 'properties.artifacts',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ArtifactInstallPropertiesElementType',
                  type: {
                    name: 'Composite',
                    className: 'ArtifactInstallProperties'
                  }
              }
            }
          },
          artifactDeploymentStatus: {
            required: false,
            serializedName: 'properties.artifactDeploymentStatus',
            type: {
              name: 'Composite',
              className: 'ArtifactDeploymentStatusProperties'
            }
          },
          galleryImageReference: {
            required: false,
            serializedName: 'properties.galleryImageReference',
            type: {
              name: 'Composite',
              className: 'GalleryImageReference'
            }
          },
          computeVm: {
            required: false,
            serializedName: 'properties.computeVm',
            type: {
              name: 'Composite',
              className: 'ComputeVmProperties'
            }
          },
          networkInterface: {
            required: false,
            serializedName: 'properties.networkInterface',
            type: {
              name: 'Composite',
              className: 'NetworkInterfaceProperties'
            }
          },
          applicableSchedule: {
            required: false,
            serializedName: 'properties.applicableSchedule',
            type: {
              name: 'Composite',
              className: 'ApplicableSchedule'
            }
          },
          expirationDate: {
            required: false,
            serializedName: 'properties.expirationDate',
            type: {
              name: 'DateTime'
            }
          },
          allowClaim: {
            required: false,
            serializedName: 'properties.allowClaim',
            type: {
              name: 'Boolean'
            }
          },
          storageType: {
            required: false,
            serializedName: 'properties.storageType',
            type: {
              name: 'String'
            }
          },
          virtualMachineCreationSource: {
            required: false,
            serializedName: 'properties.virtualMachineCreationSource',
            type: {
              name: 'String'
            }
          },
          environmentId: {
            required: false,
            serializedName: 'properties.environmentId',
            type: {
              name: 'String'
            }
          },
          provisioningState: {
            required: false,
            serializedName: 'properties.provisioningState',
            type: {
              name: 'String'
            }
          },
          uniqueIdentifier: {
            required: false,
            serializedName: 'properties.uniqueIdentifier',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = LabVirtualMachineCreationParameter;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the LabCost class.
 * @constructor
 * A cost item.
 *
 * @member {object} [targetCost] The target cost properties
 *
 * @member {string} [targetCost.status] Target cost status. Possible values
 * include: 'Enabled', 'Disabled'
 *
 * @member {number} [targetCost.target] Lab target cost
 *
 * @member {array} [targetCost.costThresholds] Cost thresholds.
 *
 * @member {date} [targetCost.cycleStartDateTime] Reporting cycle start date.
 *
 * @member {date} [targetCost.cycleEndDateTime] Reporting cycle end date.
 *
 * @member {string} [targetCost.cycleType] Reporting cycle type. Possible
 * values include: 'CalendarMonth', 'Custom'
 *
 * @member {object} [labCostSummary] The lab cost summary component of the cost
 * data.
 *
 * @member {number} [labCostSummary.estimatedLabCost] The cost component of the
 * cost item.
 *
 * @member {array} [labCostDetails] The lab cost details component of the cost
 * data.
 *
 * @member {array} [resourceCosts] The resource cost component of the cost
 * data.
 *
 * @member {string} [currencyCode] The currency code of the cost.
 *
 * @member {date} [startDateTime] The start time of the cost data.
 *
 * @member {date} [endDateTime] The end time of the cost data.
 *
 * @member {date} [createdDate] The creation date of the cost.
 *
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 *
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 *
 */
class LabCost extends models['Resource'] {
  constructor() {
    super();
  }

  /**
   * Defines the metadata of LabCost
   *
   * @returns {object} metadata of LabCost
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'LabCost',
      type: {
        name: 'Composite',
        className: 'LabCost',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          targetCost: {
            required: false,
            serializedName: 'properties.targetCost',
            type: {
              name: 'Composite',
              className: 'TargetCostProperties'
            }
          },
          labCostSummary: {
            required: false,
            readOnly: true,
            serializedName: 'properties.labCostSummary',
            type: {
              name: 'Composite',
              className: 'LabCostSummaryProperties'
            }
          },
          labCostDetails: {
            required: false,
            readOnly: true,
            serializedName: 'properties.labCostDetails',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'LabCostDetailsPropertiesElementType',
                  type: {
                    name: 'Composite',
                    className: 'LabCostDetailsProperties'
                  }
              }
            }
          },
          resourceCosts: {
            required: false,
            readOnly: true,
            serializedName: 'properties.resourceCosts',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'LabResourceCostPropertiesElementType',
                  type: {
                    name: 'Composite',
                    className: 'LabResourceCostProperties'
                  }
              }
            }
          },
          currencyCode: {
            required: false,
            serializedName: 'properties.currencyCode',
            type: {
              name: 'String'
            }
          },
          startDateTime: {
            required: false,
            serializedName: 'properties.startDateTime',
            type: {
              name: 'DateTime'
            }
          },
          endDateTime: {
            required: false,
            serializedName: 'properties.endDateTime',
            type: {
              name: 'DateTime'
            }
          },
          createdDate: {
            required: false,
            serializedName: 'properties.createdDate',
            type: {
              name: 'DateTime'
            }
          },
          provisioningState: {
            required: false,
            serializedName: 'properties.provisioningState',
            type: {
              name: 'String'
            }
          },
          uniqueIdentifier: {
            required: false,
            serializedName: 'properties.uniqueIdentifier',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = LabCost;

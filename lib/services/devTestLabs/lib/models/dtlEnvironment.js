/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the DtlEnvironment class.
 * @constructor
 * An environment, which is essentially an ARM template deployment.
 *
 * @member {object} [deploymentProperties] The deployment properties of the
 * environment.
 *
 * @member {string} [deploymentProperties.armTemplateId] The Azure Resource
 * Manager template's identifier.
 *
 * @member {array} [deploymentProperties.parameters] The parameters of the
 * Azure Resource Manager template.
 *
 * @member {string} [armTemplateDisplayName] The display name of the Azure
 * Resource Manager template that produced the environment.
 *
 * @member {string} [resourceGroupId] The identifier of the resource group
 * containing the environment's resources.
 *
 * @member {string} [createdByUser] The creator of the environment.
 *
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 *
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 *
 */
class DtlEnvironment extends models['Resource'] {
  constructor() {
    super();
  }

  /**
   * Defines the metadata of DtlEnvironment
   *
   * @returns {object} metadata of DtlEnvironment
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'DtlEnvironment',
      type: {
        name: 'Composite',
        className: 'DtlEnvironment',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          deploymentProperties: {
            required: false,
            serializedName: 'properties.deploymentProperties',
            type: {
              name: 'Composite',
              className: 'EnvironmentDeploymentProperties'
            }
          },
          armTemplateDisplayName: {
            required: false,
            serializedName: 'properties.armTemplateDisplayName',
            type: {
              name: 'String'
            }
          },
          resourceGroupId: {
            required: false,
            readOnly: true,
            serializedName: 'properties.resourceGroupId',
            type: {
              name: 'String'
            }
          },
          createdByUser: {
            required: false,
            readOnly: true,
            serializedName: 'properties.createdByUser',
            type: {
              name: 'String'
            }
          },
          provisioningState: {
            required: false,
            serializedName: 'properties.provisioningState',
            type: {
              name: 'String'
            }
          },
          uniqueIdentifier: {
            required: false,
            serializedName: 'properties.uniqueIdentifier',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = DtlEnvironment;

/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the LabFragment class.
 * @constructor
 * A lab.
 *
 * @member {string} [labStorageType] Type of storage used by the lab. It can be
 * either Premium or Standard. Default is Premium. Possible values include:
 * 'Standard', 'Premium'
 *
 * @member {string} [premiumDataDisks] The setting to enable usage of premium
 * data disks.
 * When its value is 'Enabled', creation of standard or premium data disks is
 * allowed.
 * When its value is 'Disabled', only creation of standard data disks is
 * allowed. Possible values include: 'Disabled', 'Enabled'
 *
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 *
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 *
 */
class LabFragment extends models['Resource'] {
  constructor() {
    super();
  }

  /**
   * Defines the metadata of LabFragment
   *
   * @returns {object} metadata of LabFragment
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'LabFragment',
      type: {
        name: 'Composite',
        className: 'LabFragment',
        modelProperties: {
          id: {
            required: false,
            readOnly: true,
            serializedName: 'id',
            type: {
              name: 'String'
            }
          },
          name: {
            required: false,
            readOnly: true,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            readOnly: true,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          },
          location: {
            required: false,
            serializedName: 'location',
            type: {
              name: 'String'
            }
          },
          tags: {
            required: false,
            serializedName: 'tags',
            type: {
              name: 'Dictionary',
              value: {
                  required: false,
                  serializedName: 'StringElementType',
                  type: {
                    name: 'String'
                  }
              }
            }
          },
          labStorageType: {
            required: false,
            serializedName: 'properties.labStorageType',
            type: {
              name: 'String'
            }
          },
          premiumDataDisks: {
            required: false,
            serializedName: 'properties.premiumDataDisks',
            type: {
              name: 'String'
            }
          },
          provisioningState: {
            required: false,
            serializedName: 'properties.provisioningState',
            type: {
              name: 'String'
            }
          },
          uniqueIdentifier: {
            required: false,
            serializedName: 'properties.uniqueIdentifier',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = LabFragment;

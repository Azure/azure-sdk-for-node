/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * An Operation Result
 *
 */
class OperationResult {
  /**
   * Create a OperationResult.
   * @property {string} [status] The operation status.
   * @property {string} [statusCode] The status code for the operation.
   * Possible values include: 'Continue', 'SwitchingProtocols', 'OK',
   * 'Created', 'Accepted', 'NonAuthoritativeInformation', 'NoContent',
   * 'ResetContent', 'PartialContent', 'MultipleChoices', 'MovedPermanently',
   * 'Redirect', 'SeeOther', 'NotModified', 'UseProxy', 'Unused',
   * 'TemporaryRedirect', 'BadRequest', 'Unauthorized', 'PaymentRequired',
   * 'Forbidden', 'NotFound', 'MethodNotAllowed', 'NotAcceptable',
   * 'ProxyAuthenticationRequired', 'RequestTimeout', 'Conflict', 'Gone',
   * 'LengthRequired', 'PreconditionFailed', 'RequestEntityTooLarge',
   * 'RequestUriTooLong', 'UnsupportedMediaType',
   * 'RequestedRangeNotSatisfiable', 'ExpectationFailed', 'UpgradeRequired',
   * 'InternalServerError', 'NotImplemented', 'BadGateway',
   * 'ServiceUnavailable', 'GatewayTimeout', 'HttpVersionNotSupported'
   * @property {object} [error] Error details for the operation in case of a
   * failure.
   * @property {string} [error.code] The error code of the operation error.
   * @property {string} [error.message] The error message of the operation
   * error.
   */
  constructor() {
  }

  /**
   * Defines the metadata of OperationResult
   *
   * @returns {object} metadata of OperationResult
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'OperationResult',
      type: {
        name: 'Composite',
        className: 'OperationResult',
        modelProperties: {
          status: {
            required: false,
            serializedName: 'status',
            type: {
              name: 'String'
            }
          },
          statusCode: {
            required: false,
            serializedName: 'statusCode',
            type: {
              name: 'String'
            }
          },
          error: {
            required: false,
            serializedName: 'error',
            type: {
              name: 'Composite',
              className: 'OperationError'
            }
          }
        }
      }
    };
  }
}

module.exports = OperationResult;

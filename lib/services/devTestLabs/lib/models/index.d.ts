/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

import { BaseResource } from 'ms-rest-azure';
import { CloudError } from 'ms-rest-azure';
import * as moment from 'moment';

export { BaseResource } from 'ms-rest-azure';
export { CloudError } from 'ms-rest-azure';


/**
 * @class
 * Initializes a new instance of the WeekDetails class.
 * @constructor
 * Properties of a weekly schedule.
 *
 * @member {array} [weekdays] The days of the week for which the schedule is
 * set (e.g. Sunday, Monday, Tuesday, etc.).
 * @member {string} [time] The time of the day the schedule will occur.
 */
export interface WeekDetails {
  weekdays?: string[];
  time?: string;
}

/**
 * @class
 * Initializes a new instance of the DayDetails class.
 * @constructor
 * Properties of a daily schedule.
 *
 * @member {string} [time] The time of day the schedule will occur.
 */
export interface DayDetails {
  time?: string;
}

/**
 * @class
 * Initializes a new instance of the HourDetails class.
 * @constructor
 * Properties of an hourly schedule.
 *
 * @member {number} [minute] Minutes of the hour the schedule will run.
 */
export interface HourDetails {
  minute?: number;
}

/**
 * @class
 * Initializes a new instance of the NotificationSettings class.
 * @constructor
 * Notification settings for a schedule.
 *
 * @member {string} [status] If notifications are enabled for this schedule
 * (i.e. Enabled, Disabled). Possible values include: 'Enabled', 'Disabled'
 * @member {number} [timeInMinutes] Time in minutes before event at which
 * notification will be sent.
 * @member {string} [webhookUrl] The webhook URL to which the notification will
 * be sent.
 * @member {string} [emailRecipient] The email recipient to send notifications
 * to (can be a list of semi-colon seperated email addresses).
 * @member {string} [notificationLocale] The locale to use when sending a
 * notification (fallback for unsupported languages is EN).
 */
export interface NotificationSettings {
  status?: string;
  timeInMinutes?: number;
  webhookUrl?: string;
  emailRecipient?: string;
  notificationLocale?: string;
}

/**
 * @class
 * Initializes a new instance of the Resource class.
 * @constructor
 * An Azure resource.
 *
 * @member {string} [id] The identifier of the resource.
 * @member {string} [name] The name of the resource.
 * @member {string} [type] The type of the resource.
 * @member {string} [location] The location of the resource.
 * @member {object} [tags] The tags of the resource.
 */
export interface Resource extends BaseResource {
  readonly id?: string;
  readonly name?: string;
  readonly type?: string;
  location?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the Schedule class.
 * @constructor
 * A schedule.
 *
 * @member {string} [status] The status of the schedule (i.e. Enabled,
 * Disabled). Possible values include: 'Enabled', 'Disabled'
 * @member {string} [taskType] The task type of the schedule (e.g.
 * LabVmsShutdownTask, LabVmAutoStart).
 * @member {object} [weeklyRecurrence] If the schedule will occur only some
 * days of the week, specify the weekly recurrence.
 * @member {array} [weeklyRecurrence.weekdays] The days of the week for which
 * the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
 * @member {string} [weeklyRecurrence.time] The time of the day the schedule
 * will occur.
 * @member {object} [dailyRecurrence] If the schedule will occur once each day
 * of the week, specify the daily recurrence.
 * @member {string} [dailyRecurrence.time] The time of day the schedule will
 * occur.
 * @member {object} [hourlyRecurrence] If the schedule will occur multiple
 * times a day, specify the hourly recurrence.
 * @member {number} [hourlyRecurrence.minute] Minutes of the hour the schedule
 * will run.
 * @member {string} [timeZoneId] The time zone ID (e.g. Pacific Standard time).
 * @member {object} [notificationSettings] Notification settings.
 * @member {string} [notificationSettings.status] If notifications are enabled
 * for this schedule (i.e. Enabled, Disabled). Possible values include:
 * 'Enabled', 'Disabled'
 * @member {number} [notificationSettings.timeInMinutes] Time in minutes before
 * event at which notification will be sent.
 * @member {string} [notificationSettings.webhookUrl] The webhook URL to which
 * the notification will be sent.
 * @member {string} [notificationSettings.emailRecipient] The email recipient
 * to send notifications to (can be a list of semi-colon seperated email
 * addresses).
 * @member {string} [notificationSettings.notificationLocale] The locale to use
 * when sending a notification (fallback for unsupported languages is EN).
 * @member {date} [createdDate] The creation date of the schedule.
 * @member {string} [targetResourceId] The resource ID to which the schedule
 * belongs
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 */
export interface Schedule extends Resource {
  status?: string;
  taskType?: string;
  weeklyRecurrence?: WeekDetails;
  dailyRecurrence?: DayDetails;
  hourlyRecurrence?: HourDetails;
  timeZoneId?: string;
  notificationSettings?: NotificationSettings;
  readonly createdDate?: Date;
  targetResourceId?: string;
  readonly provisioningState?: string;
  readonly uniqueIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicableSchedule class.
 * @constructor
 * Schedules applicable to a virtual machine. The schedules may have been
 * defined on a VM or on lab level.
 *
 * @member {object} [labVmsShutdown] The auto-shutdown schedule, if one has
 * been set at the lab or lab resource level.
 * @member {string} [labVmsShutdown.status] The status of the schedule (i.e.
 * Enabled, Disabled). Possible values include: 'Enabled', 'Disabled'
 * @member {string} [labVmsShutdown.taskType] The task type of the schedule
 * (e.g. LabVmsShutdownTask, LabVmAutoStart).
 * @member {object} [labVmsShutdown.weeklyRecurrence] If the schedule will
 * occur only some days of the week, specify the weekly recurrence.
 * @member {array} [labVmsShutdown.weeklyRecurrence.weekdays] The days of the
 * week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
 * @member {string} [labVmsShutdown.weeklyRecurrence.time] The time of the day
 * the schedule will occur.
 * @member {object} [labVmsShutdown.dailyRecurrence] If the schedule will occur
 * once each day of the week, specify the daily recurrence.
 * @member {string} [labVmsShutdown.dailyRecurrence.time] The time of day the
 * schedule will occur.
 * @member {object} [labVmsShutdown.hourlyRecurrence] If the schedule will
 * occur multiple times a day, specify the hourly recurrence.
 * @member {number} [labVmsShutdown.hourlyRecurrence.minute] Minutes of the
 * hour the schedule will run.
 * @member {string} [labVmsShutdown.timeZoneId] The time zone ID (e.g. Pacific
 * Standard time).
 * @member {object} [labVmsShutdown.notificationSettings] Notification
 * settings.
 * @member {string} [labVmsShutdown.notificationSettings.status] If
 * notifications are enabled for this schedule (i.e. Enabled, Disabled).
 * Possible values include: 'Enabled', 'Disabled'
 * @member {number} [labVmsShutdown.notificationSettings.timeInMinutes] Time in
 * minutes before event at which notification will be sent.
 * @member {string} [labVmsShutdown.notificationSettings.webhookUrl] The
 * webhook URL to which the notification will be sent.
 * @member {string} [labVmsShutdown.notificationSettings.emailRecipient] The
 * email recipient to send notifications to (can be a list of semi-colon
 * seperated email addresses).
 * @member {string} [labVmsShutdown.notificationSettings.notificationLocale]
 * The locale to use when sending a notification (fallback for unsupported
 * languages is EN).
 * @member {date} [labVmsShutdown.createdDate] The creation date of the
 * schedule.
 * @member {string} [labVmsShutdown.targetResourceId] The resource ID to which
 * the schedule belongs
 * @member {string} [labVmsShutdown.provisioningState] The provisioning status
 * of the resource.
 * @member {string} [labVmsShutdown.uniqueIdentifier] The unique immutable
 * identifier of a resource (Guid).
 * @member {object} [labVmsStartup] The auto-startup schedule, if one has been
 * set at the lab or lab resource level.
 * @member {string} [labVmsStartup.status] The status of the schedule (i.e.
 * Enabled, Disabled). Possible values include: 'Enabled', 'Disabled'
 * @member {string} [labVmsStartup.taskType] The task type of the schedule
 * (e.g. LabVmsShutdownTask, LabVmAutoStart).
 * @member {object} [labVmsStartup.weeklyRecurrence] If the schedule will occur
 * only some days of the week, specify the weekly recurrence.
 * @member {array} [labVmsStartup.weeklyRecurrence.weekdays] The days of the
 * week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
 * @member {string} [labVmsStartup.weeklyRecurrence.time] The time of the day
 * the schedule will occur.
 * @member {object} [labVmsStartup.dailyRecurrence] If the schedule will occur
 * once each day of the week, specify the daily recurrence.
 * @member {string} [labVmsStartup.dailyRecurrence.time] The time of day the
 * schedule will occur.
 * @member {object} [labVmsStartup.hourlyRecurrence] If the schedule will occur
 * multiple times a day, specify the hourly recurrence.
 * @member {number} [labVmsStartup.hourlyRecurrence.minute] Minutes of the hour
 * the schedule will run.
 * @member {string} [labVmsStartup.timeZoneId] The time zone ID (e.g. Pacific
 * Standard time).
 * @member {object} [labVmsStartup.notificationSettings] Notification settings.
 * @member {string} [labVmsStartup.notificationSettings.status] If
 * notifications are enabled for this schedule (i.e. Enabled, Disabled).
 * Possible values include: 'Enabled', 'Disabled'
 * @member {number} [labVmsStartup.notificationSettings.timeInMinutes] Time in
 * minutes before event at which notification will be sent.
 * @member {string} [labVmsStartup.notificationSettings.webhookUrl] The webhook
 * URL to which the notification will be sent.
 * @member {string} [labVmsStartup.notificationSettings.emailRecipient] The
 * email recipient to send notifications to (can be a list of semi-colon
 * seperated email addresses).
 * @member {string} [labVmsStartup.notificationSettings.notificationLocale] The
 * locale to use when sending a notification (fallback for unsupported
 * languages is EN).
 * @member {date} [labVmsStartup.createdDate] The creation date of the
 * schedule.
 * @member {string} [labVmsStartup.targetResourceId] The resource ID to which
 * the schedule belongs
 * @member {string} [labVmsStartup.provisioningState] The provisioning status
 * of the resource.
 * @member {string} [labVmsStartup.uniqueIdentifier] The unique immutable
 * identifier of a resource (Guid).
 */
export interface ApplicableSchedule extends Resource {
  labVmsShutdown?: Schedule;
  labVmsStartup?: Schedule;
}

/**
 * @class
 * Initializes a new instance of the WeekDetailsFragment class.
 * @constructor
 * Properties of a weekly schedule.
 *
 * @member {array} [weekdays] The days of the week for which the schedule is
 * set (e.g. Sunday, Monday, Tuesday, etc.).
 * @member {string} [time] The time of the day the schedule will occur.
 */
export interface WeekDetailsFragment {
  weekdays?: string[];
  time?: string;
}

/**
 * @class
 * Initializes a new instance of the DayDetailsFragment class.
 * @constructor
 * Properties of a daily schedule.
 *
 * @member {string} [time] The time of day the schedule will occur.
 */
export interface DayDetailsFragment {
  time?: string;
}

/**
 * @class
 * Initializes a new instance of the HourDetailsFragment class.
 * @constructor
 * Properties of an hourly schedule.
 *
 * @member {number} [minute] Minutes of the hour the schedule will run.
 */
export interface HourDetailsFragment {
  minute?: number;
}

/**
 * @class
 * Initializes a new instance of the NotificationSettingsFragment class.
 * @constructor
 * Notification settings for a schedule.
 *
 * @member {string} [status] If notifications are enabled for this schedule
 * (i.e. Enabled, Disabled). Possible values include: 'Enabled', 'Disabled'
 * @member {number} [timeInMinutes] Time in minutes before event at which
 * notification will be sent.
 * @member {string} [webhookUrl] The webhook URL to which the notification will
 * be sent.
 * @member {string} [emailRecipient] The email recipient to send notifications
 * to (can be a list of semi-colon seperated email addresses).
 * @member {string} [notificationLocale] The locale to use when sending a
 * notification (fallback for unsupported languages is EN).
 */
export interface NotificationSettingsFragment {
  status?: string;
  timeInMinutes?: number;
  webhookUrl?: string;
  emailRecipient?: string;
  notificationLocale?: string;
}

/**
 * @class
 * Initializes a new instance of the UpdateResource class.
 * @constructor
 * Represents an update resource
 *
 * @member {object} [tags] The tags of the resource.
 */
export interface UpdateResource {
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the ScheduleFragment class.
 * @constructor
 * A schedule.
 *
 * @member {string} [status] The status of the schedule (i.e. Enabled,
 * Disabled). Possible values include: 'Enabled', 'Disabled'
 * @member {string} [taskType] The task type of the schedule (e.g.
 * LabVmsShutdownTask, LabVmAutoStart).
 * @member {object} [weeklyRecurrence] If the schedule will occur only some
 * days of the week, specify the weekly recurrence.
 * @member {array} [weeklyRecurrence.weekdays] The days of the week for which
 * the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
 * @member {string} [weeklyRecurrence.time] The time of the day the schedule
 * will occur.
 * @member {object} [dailyRecurrence] If the schedule will occur once each day
 * of the week, specify the daily recurrence.
 * @member {string} [dailyRecurrence.time] The time of day the schedule will
 * occur.
 * @member {object} [hourlyRecurrence] If the schedule will occur multiple
 * times a day, specify the hourly recurrence.
 * @member {number} [hourlyRecurrence.minute] Minutes of the hour the schedule
 * will run.
 * @member {string} [timeZoneId] The time zone ID (e.g. Pacific Standard time).
 * @member {object} [notificationSettings] Notification settings.
 * @member {string} [notificationSettings.status] If notifications are enabled
 * for this schedule (i.e. Enabled, Disabled). Possible values include:
 * 'Enabled', 'Disabled'
 * @member {number} [notificationSettings.timeInMinutes] Time in minutes before
 * event at which notification will be sent.
 * @member {string} [notificationSettings.webhookUrl] The webhook URL to which
 * the notification will be sent.
 * @member {string} [notificationSettings.emailRecipient] The email recipient
 * to send notifications to (can be a list of semi-colon seperated email
 * addresses).
 * @member {string} [notificationSettings.notificationLocale] The locale to use
 * when sending a notification (fallback for unsupported languages is EN).
 * @member {string} [targetResourceId] The resource ID to which the schedule
 * belongs
 */
export interface ScheduleFragment extends UpdateResource {
  status?: string;
  taskType?: string;
  weeklyRecurrence?: WeekDetailsFragment;
  dailyRecurrence?: DayDetailsFragment;
  hourlyRecurrence?: HourDetailsFragment;
  timeZoneId?: string;
  notificationSettings?: NotificationSettingsFragment;
  targetResourceId?: string;
}

/**
 * @class
 * Initializes a new instance of the ApplicableScheduleFragment class.
 * @constructor
 * Schedules applicable to a virtual machine. The schedules may have been
 * defined on a VM or on lab level.
 *
 * @member {object} [labVmsShutdown] The auto-shutdown schedule, if one has
 * been set at the lab or lab resource level.
 * @member {string} [labVmsShutdown.status] The status of the schedule (i.e.
 * Enabled, Disabled). Possible values include: 'Enabled', 'Disabled'
 * @member {string} [labVmsShutdown.taskType] The task type of the schedule
 * (e.g. LabVmsShutdownTask, LabVmAutoStart).
 * @member {object} [labVmsShutdown.weeklyRecurrence] If the schedule will
 * occur only some days of the week, specify the weekly recurrence.
 * @member {array} [labVmsShutdown.weeklyRecurrence.weekdays] The days of the
 * week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
 * @member {string} [labVmsShutdown.weeklyRecurrence.time] The time of the day
 * the schedule will occur.
 * @member {object} [labVmsShutdown.dailyRecurrence] If the schedule will occur
 * once each day of the week, specify the daily recurrence.
 * @member {string} [labVmsShutdown.dailyRecurrence.time] The time of day the
 * schedule will occur.
 * @member {object} [labVmsShutdown.hourlyRecurrence] If the schedule will
 * occur multiple times a day, specify the hourly recurrence.
 * @member {number} [labVmsShutdown.hourlyRecurrence.minute] Minutes of the
 * hour the schedule will run.
 * @member {string} [labVmsShutdown.timeZoneId] The time zone ID (e.g. Pacific
 * Standard time).
 * @member {object} [labVmsShutdown.notificationSettings] Notification
 * settings.
 * @member {string} [labVmsShutdown.notificationSettings.status] If
 * notifications are enabled for this schedule (i.e. Enabled, Disabled).
 * Possible values include: 'Enabled', 'Disabled'
 * @member {number} [labVmsShutdown.notificationSettings.timeInMinutes] Time in
 * minutes before event at which notification will be sent.
 * @member {string} [labVmsShutdown.notificationSettings.webhookUrl] The
 * webhook URL to which the notification will be sent.
 * @member {string} [labVmsShutdown.notificationSettings.emailRecipient] The
 * email recipient to send notifications to (can be a list of semi-colon
 * seperated email addresses).
 * @member {string} [labVmsShutdown.notificationSettings.notificationLocale]
 * The locale to use when sending a notification (fallback for unsupported
 * languages is EN).
 * @member {string} [labVmsShutdown.targetResourceId] The resource ID to which
 * the schedule belongs
 * @member {object} [labVmsStartup] The auto-startup schedule, if one has been
 * set at the lab or lab resource level.
 * @member {string} [labVmsStartup.status] The status of the schedule (i.e.
 * Enabled, Disabled). Possible values include: 'Enabled', 'Disabled'
 * @member {string} [labVmsStartup.taskType] The task type of the schedule
 * (e.g. LabVmsShutdownTask, LabVmAutoStart).
 * @member {object} [labVmsStartup.weeklyRecurrence] If the schedule will occur
 * only some days of the week, specify the weekly recurrence.
 * @member {array} [labVmsStartup.weeklyRecurrence.weekdays] The days of the
 * week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
 * @member {string} [labVmsStartup.weeklyRecurrence.time] The time of the day
 * the schedule will occur.
 * @member {object} [labVmsStartup.dailyRecurrence] If the schedule will occur
 * once each day of the week, specify the daily recurrence.
 * @member {string} [labVmsStartup.dailyRecurrence.time] The time of day the
 * schedule will occur.
 * @member {object} [labVmsStartup.hourlyRecurrence] If the schedule will occur
 * multiple times a day, specify the hourly recurrence.
 * @member {number} [labVmsStartup.hourlyRecurrence.minute] Minutes of the hour
 * the schedule will run.
 * @member {string} [labVmsStartup.timeZoneId] The time zone ID (e.g. Pacific
 * Standard time).
 * @member {object} [labVmsStartup.notificationSettings] Notification settings.
 * @member {string} [labVmsStartup.notificationSettings.status] If
 * notifications are enabled for this schedule (i.e. Enabled, Disabled).
 * Possible values include: 'Enabled', 'Disabled'
 * @member {number} [labVmsStartup.notificationSettings.timeInMinutes] Time in
 * minutes before event at which notification will be sent.
 * @member {string} [labVmsStartup.notificationSettings.webhookUrl] The webhook
 * URL to which the notification will be sent.
 * @member {string} [labVmsStartup.notificationSettings.emailRecipient] The
 * email recipient to send notifications to (can be a list of semi-colon
 * seperated email addresses).
 * @member {string} [labVmsStartup.notificationSettings.notificationLocale] The
 * locale to use when sending a notification (fallback for unsupported
 * languages is EN).
 * @member {string} [labVmsStartup.targetResourceId] The resource ID to which
 * the schedule belongs
 */
export interface ApplicableScheduleFragment extends UpdateResource {
  labVmsShutdown?: ScheduleFragment;
  labVmsStartup?: ScheduleFragment;
}

/**
 * @class
 * Initializes a new instance of the ArtifactParameterProperties class.
 * @constructor
 * Properties of an artifact parameter.
 *
 * @member {string} [name] The name of the artifact parameter.
 * @member {string} [value] The value of the artifact parameter.
 */
export interface ArtifactParameterProperties {
  name?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the ArtifactInstallProperties class.
 * @constructor
 * Properties of an artifact.
 *
 * @member {string} [artifactId] The artifact's identifier.
 * @member {string} [artifactTitle] The artifact's title.
 * @member {array} [parameters] The parameters of the artifact.
 * @member {string} [status] The status of the artifact.
 * @member {string} [deploymentStatusMessage] The status message from the
 * deployment.
 * @member {string} [vmExtensionStatusMessage] The status message from the
 * virtual machine extension.
 * @member {date} [installTime] The time that the artifact starts to install on
 * the virtual machine.
 */
export interface ArtifactInstallProperties {
  artifactId?: string;
  artifactTitle?: string;
  parameters?: ArtifactParameterProperties[];
  status?: string;
  deploymentStatusMessage?: string;
  vmExtensionStatusMessage?: string;
  installTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the ApplyArtifactsRequest class.
 * @constructor
 * Request body for applying artifacts to a virtual machine.
 *
 * @member {array} [artifacts] The list of artifacts to apply.
 */
export interface ApplyArtifactsRequest {
  artifacts?: ArtifactInstallProperties[];
}

/**
 * @class
 * Initializes a new instance of the ParametersValueFileInfo class.
 * @constructor
 * A file containing a set of parameter values for an ARM template.
 *
 * @member {string} [fileName] File name.
 * @member {object} [parametersValueInfo] Contents of the file.
 */
export interface ParametersValueFileInfo {
  fileName?: string;
  parametersValueInfo?: any;
}

/**
 * @class
 * Initializes a new instance of the ArmTemplate class.
 * @constructor
 * An Azure Resource Manager template.
 *
 * @member {string} [displayName] The display name of the ARM template.
 * @member {string} [description] The description of the ARM template.
 * @member {string} [publisher] The publisher of the ARM template.
 * @member {string} [icon] The URI to the icon of the ARM template.
 * @member {object} [contents] The contents of the ARM template.
 * @member {date} [createdDate] The creation date of the armTemplate.
 * @member {array} [parametersValueFilesInfo] File name and parameter values
 * information from all azuredeploy.*.parameters.json for the ARM template.
 * @member {boolean} [enabled] Whether or not ARM template is enabled for use
 * by lab user.
 */
export interface ArmTemplate extends Resource {
  readonly displayName?: string;
  readonly description?: string;
  readonly publisher?: string;
  readonly icon?: string;
  readonly contents?: any;
  readonly createdDate?: Date;
  readonly parametersValueFilesInfo?: ParametersValueFileInfo[];
  readonly enabled?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ArmTemplateInfo class.
 * @constructor
 * Information about a generated ARM template.
 *
 * @member {object} [template] The template's contents.
 * @member {object} [parameters] The parameters of the ARM template.
 */
export interface ArmTemplateInfo {
  template?: any;
  parameters?: any;
}

/**
 * @class
 * Initializes a new instance of the ArmTemplateParameterProperties class.
 * @constructor
 * Properties of an Azure Resource Manager template parameter.
 *
 * @member {string} [name] The name of the template parameter.
 * @member {string} [value] The value of the template parameter.
 */
export interface ArmTemplateParameterProperties {
  name?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the ArmTemplateParameterPropertiesFragment class.
 * @constructor
 * Properties of an Azure Resource Manager template parameter.
 *
 * @member {string} [name] The name of the template parameter.
 * @member {string} [value] The value of the template parameter.
 */
export interface ArmTemplateParameterPropertiesFragment {
  name?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the Artifact class.
 * @constructor
 * An artifact.
 *
 * @member {string} [title] The artifact's title.
 * @member {string} [description] The artifact's description.
 * @member {string} [publisher] The artifact's publisher.
 * @member {string} [filePath] The file path to the artifact.
 * @member {string} [icon] The URI to the artifact icon.
 * @member {string} [targetOsType] The artifact's target OS.
 * @member {object} [parameters] The artifact's parameters.
 * @member {date} [createdDate] The artifact's creation date.
 */
export interface Artifact extends Resource {
  readonly title?: string;
  readonly description?: string;
  readonly publisher?: string;
  readonly filePath?: string;
  readonly icon?: string;
  readonly targetOsType?: string;
  readonly parameters?: any;
  readonly createdDate?: Date;
}

/**
 * @class
 * Initializes a new instance of the ArtifactDeploymentStatusProperties class.
 * @constructor
 * Properties of an artifact deployment.
 *
 * @member {string} [deploymentStatus] The deployment status of the artifact.
 * @member {number} [artifactsApplied] The total count of the artifacts that
 * were successfully applied.
 * @member {number} [totalArtifacts] The total count of the artifacts that were
 * tentatively applied.
 */
export interface ArtifactDeploymentStatusProperties {
  deploymentStatus?: string;
  artifactsApplied?: number;
  totalArtifacts?: number;
}

/**
 * @class
 * Initializes a new instance of the ArtifactDeploymentStatusPropertiesFragment class.
 * @constructor
 * Properties of an artifact deployment.
 *
 * @member {string} [deploymentStatus] The deployment status of the artifact.
 * @member {number} [artifactsApplied] The total count of the artifacts that
 * were successfully applied.
 * @member {number} [totalArtifacts] The total count of the artifacts that were
 * tentatively applied.
 */
export interface ArtifactDeploymentStatusPropertiesFragment {
  deploymentStatus?: string;
  artifactsApplied?: number;
  totalArtifacts?: number;
}

/**
 * @class
 * Initializes a new instance of the ArtifactParameterPropertiesFragment class.
 * @constructor
 * Properties of an artifact parameter.
 *
 * @member {string} [name] The name of the artifact parameter.
 * @member {string} [value] The value of the artifact parameter.
 */
export interface ArtifactParameterPropertiesFragment {
  name?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the ArtifactInstallPropertiesFragment class.
 * @constructor
 * Properties of an artifact.
 *
 * @member {string} [artifactId] The artifact's identifier.
 * @member {string} [artifactTitle] The artifact's title.
 * @member {array} [parameters] The parameters of the artifact.
 * @member {string} [status] The status of the artifact.
 * @member {string} [deploymentStatusMessage] The status message from the
 * deployment.
 * @member {string} [vmExtensionStatusMessage] The status message from the
 * virtual machine extension.
 * @member {date} [installTime] The time that the artifact starts to install on
 * the virtual machine.
 */
export interface ArtifactInstallPropertiesFragment {
  artifactId?: string;
  artifactTitle?: string;
  parameters?: ArtifactParameterPropertiesFragment[];
  status?: string;
  deploymentStatusMessage?: string;
  vmExtensionStatusMessage?: string;
  installTime?: Date;
}

/**
 * @class
 * Initializes a new instance of the ArtifactSource class.
 * @constructor
 * Properties of an artifact source.
 *
 * @member {string} [displayName] The artifact source's display name.
 * @member {string} [uri] The artifact source's URI.
 * @member {string} [sourceType] The artifact source's type. Possible values
 * include: 'VsoGit', 'GitHub'
 * @member {string} [folderPath] The folder containing artifacts.
 * @member {string} [armTemplateFolderPath] The folder containing Azure
 * Resource Manager templates.
 * @member {string} [branchRef] The artifact source's branch reference.
 * @member {string} [securityToken] The security token to authenticate to the
 * artifact source.
 * @member {string} [status] Indicates if the artifact source is enabled
 * (values: Enabled, Disabled). Possible values include: 'Enabled', 'Disabled'
 * @member {date} [createdDate] The artifact source's creation date.
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 */
export interface ArtifactSource extends Resource {
  displayName?: string;
  uri?: string;
  sourceType?: string;
  folderPath?: string;
  armTemplateFolderPath?: string;
  branchRef?: string;
  securityToken?: string;
  status?: string;
  readonly createdDate?: Date;
  readonly provisioningState?: string;
  readonly uniqueIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the ArtifactSourceFragment class.
 * @constructor
 * Properties of an artifact source.
 *
 * @member {string} [displayName] The artifact source's display name.
 * @member {string} [uri] The artifact source's URI.
 * @member {string} [sourceType] The artifact source's type. Possible values
 * include: 'VsoGit', 'GitHub'
 * @member {string} [folderPath] The folder containing artifacts.
 * @member {string} [armTemplateFolderPath] The folder containing Azure
 * Resource Manager templates.
 * @member {string} [branchRef] The artifact source's branch reference.
 * @member {string} [securityToken] The security token to authenticate to the
 * artifact source.
 * @member {string} [status] Indicates if the artifact source is enabled
 * (values: Enabled, Disabled). Possible values include: 'Enabled', 'Disabled'
 */
export interface ArtifactSourceFragment extends UpdateResource {
  displayName?: string;
  uri?: string;
  sourceType?: string;
  folderPath?: string;
  armTemplateFolderPath?: string;
  branchRef?: string;
  securityToken?: string;
  status?: string;
}

/**
 * @class
 * Initializes a new instance of the AttachDiskProperties class.
 * @constructor
 * Properties of the disk to attach.
 *
 * @member {string} [leasedByLabVmId] The resource ID of the Lab virtual
 * machine to which the disk is attached.
 */
export interface AttachDiskProperties {
  leasedByLabVmId?: string;
}

/**
 * @class
 * Initializes a new instance of the AttachNewDataDiskOptions class.
 * @constructor
 * Properties to attach new disk to the Virtual Machine.
 *
 * @member {number} [diskSizeGiB] Size of the disk to be attached in GibiBytes.
 * @member {string} [diskName] The name of the disk to be attached.
 * @member {string} [diskType] The storage type for the disk (i.e. Standard,
 * Premium). Possible values include: 'Standard', 'Premium'
 */
export interface AttachNewDataDiskOptions {
  diskSizeGiB?: number;
  diskName?: string;
  diskType?: string;
}

/**
 * @class
 * Initializes a new instance of the AttachNewDataDiskOptionsFragment class.
 * @constructor
 * Properties to attach new disk to the Virtual Machine.
 *
 * @member {number} [diskSizeGiB] Size of the disk to be attached in GibiBytes.
 * @member {string} [diskName] The name of the disk to be attached.
 * @member {string} [diskType] The storage type for the disk (i.e. Standard,
 * Premium). Possible values include: 'Standard', 'Premium'
 */
export interface AttachNewDataDiskOptionsFragment {
  diskSizeGiB?: number;
  diskName?: string;
  diskType?: string;
}

/**
 * @class
 * Initializes a new instance of the BulkCreationParameters class.
 * @constructor
 * Parameters for creating multiple virtual machines as a single action.
 *
 * @member {number} [instanceCount] The number of virtual machine instances to
 * create.
 */
export interface BulkCreationParameters {
  instanceCount?: number;
}

/**
 * @class
 * Initializes a new instance of the BulkCreationParametersFragment class.
 * @constructor
 * Parameters for creating multiple virtual machines as a single action.
 *
 * @member {number} [instanceCount] The number of virtual machine instances to
 * create.
 */
export interface BulkCreationParametersFragment {
  instanceCount?: number;
}

/**
 * @class
 * Initializes a new instance of the ComputeDataDisk class.
 * @constructor
 * A data disks attached to a virtual machine.
 *
 * @member {string} [name] Gets data disk name.
 * @member {string} [diskUri] When backed by a blob, the URI of underlying
 * blob.
 * @member {string} [managedDiskId] When backed by managed disk, this is the ID
 * of the compute disk resource.
 * @member {number} [diskSizeGiB] Gets data disk size in GiB.
 */
export interface ComputeDataDisk {
  name?: string;
  diskUri?: string;
  managedDiskId?: string;
  diskSizeGiB?: number;
}

/**
 * @class
 * Initializes a new instance of the ComputeDataDiskFragment class.
 * @constructor
 * A data disks attached to a virtual machine.
 *
 * @member {string} [name] Gets data disk name.
 * @member {string} [diskUri] When backed by a blob, the URI of underlying
 * blob.
 * @member {string} [managedDiskId] When backed by managed disk, this is the ID
 * of the compute disk resource.
 * @member {number} [diskSizeGiB] Gets data disk size in GiB.
 */
export interface ComputeDataDiskFragment {
  name?: string;
  diskUri?: string;
  managedDiskId?: string;
  diskSizeGiB?: number;
}

/**
 * @class
 * Initializes a new instance of the ComputeVmInstanceViewStatus class.
 * @constructor
 * Status information about a virtual machine.
 *
 * @member {string} [code] Gets the status Code.
 * @member {string} [displayStatus] Gets the short localizable label for the
 * status.
 * @member {string} [message] Gets the message associated with the status.
 */
export interface ComputeVmInstanceViewStatus {
  code?: string;
  displayStatus?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the ComputeVmInstanceViewStatusFragment class.
 * @constructor
 * Status information about a virtual machine.
 *
 * @member {string} [code] Gets the status Code.
 * @member {string} [displayStatus] Gets the short localizable label for the
 * status.
 * @member {string} [message] Gets the message associated with the status.
 */
export interface ComputeVmInstanceViewStatusFragment {
  code?: string;
  displayStatus?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the ComputeVmProperties class.
 * @constructor
 * Properties of a virtual machine returned by the Microsoft.Compute API.
 *
 * @member {array} [statuses] Gets the statuses of the virtual machine.
 * @member {string} [osType] Gets the OS type of the virtual machine.
 * @member {string} [vmSize] Gets the size of the virtual machine.
 * @member {string} [networkInterfaceId] Gets the network interface ID of the
 * virtual machine.
 * @member {string} [osDiskId] Gets OS disk blob uri for the virtual machine.
 * @member {array} [dataDiskIds] Gets data disks blob uri for the virtual
 * machine.
 * @member {array} [dataDisks] Gets all data disks attached to the virtual
 * machine.
 */
export interface ComputeVmProperties {
  statuses?: ComputeVmInstanceViewStatus[];
  osType?: string;
  vmSize?: string;
  networkInterfaceId?: string;
  osDiskId?: string;
  dataDiskIds?: string[];
  dataDisks?: ComputeDataDisk[];
}

/**
 * @class
 * Initializes a new instance of the ComputeVmPropertiesFragment class.
 * @constructor
 * Properties of a virtual machine returned by the Microsoft.Compute API.
 *
 * @member {array} [statuses] Gets the statuses of the virtual machine.
 * @member {string} [osType] Gets the OS type of the virtual machine.
 * @member {string} [vmSize] Gets the size of the virtual machine.
 * @member {string} [networkInterfaceId] Gets the network interface ID of the
 * virtual machine.
 * @member {string} [osDiskId] Gets OS disk blob uri for the virtual machine.
 * @member {array} [dataDiskIds] Gets data disks blob uri for the virtual
 * machine.
 * @member {array} [dataDisks] Gets all data disks attached to the virtual
 * machine.
 */
export interface ComputeVmPropertiesFragment {
  statuses?: ComputeVmInstanceViewStatusFragment[];
  osType?: string;
  vmSize?: string;
  networkInterfaceId?: string;
  osDiskId?: string;
  dataDiskIds?: string[];
  dataDisks?: ComputeDataDiskFragment[];
}

/**
 * @class
 * Initializes a new instance of the PercentageCostThresholdProperties class.
 * @constructor
 * Properties of a percentage cost threshold.
 *
 * @member {number} [thresholdValue] The cost threshold value.
 */
export interface PercentageCostThresholdProperties {
  thresholdValue?: number;
}

/**
 * @class
 * Initializes a new instance of the CostThresholdProperties class.
 * @constructor
 * Properties of a cost threshold item.
 *
 * @member {string} [thresholdId] The ID of the cost threshold item.
 * @member {object} [percentageThreshold] The value of the percentage cost
 * threshold.
 * @member {number} [percentageThreshold.thresholdValue] The cost threshold
 * value.
 * @member {string} [displayOnChart] Indicates whether this threshold will be
 * displayed on cost charts. Possible values include: 'Enabled', 'Disabled'
 * @member {string} [sendNotificationWhenExceeded] Indicates whether
 * notifications will be sent when this threshold is exceeded. Possible values
 * include: 'Enabled', 'Disabled'
 * @member {string} [notificationSent] Indicates the datetime when
 * notifications were last sent for this threshold.
 */
export interface CostThresholdProperties {
  thresholdId?: string;
  percentageThreshold?: PercentageCostThresholdProperties;
  displayOnChart?: string;
  sendNotificationWhenExceeded?: string;
  notificationSent?: string;
}

/**
 * @class
 * Initializes a new instance of the WindowsOsInfo class.
 * @constructor
 * Information about a Windows OS.
 *
 * @member {string} [windowsOsState] The state of the Windows OS (i.e.
 * NonSysprepped, SysprepRequested, SysprepApplied). Possible values include:
 * 'NonSysprepped', 'SysprepRequested', 'SysprepApplied'
 */
export interface WindowsOsInfo {
  windowsOsState?: string;
}

/**
 * @class
 * Initializes a new instance of the LinuxOsInfo class.
 * @constructor
 * Information about a Linux OS.
 *
 * @member {string} [linuxOsState] The state of the Linux OS (i.e.
 * NonDeprovisioned, DeprovisionRequested, DeprovisionApplied). Possible values
 * include: 'NonDeprovisioned', 'DeprovisionRequested', 'DeprovisionApplied'
 */
export interface LinuxOsInfo {
  linuxOsState?: string;
}

/**
 * @class
 * Initializes a new instance of the CustomImagePropertiesFromVm class.
 * @constructor
 * Properties for creating a custom image from a virtual machine.
 *
 * @member {string} [sourceVmId] The source vm identifier.
 * @member {object} [windowsOsInfo] The Windows OS information of the VM.
 * @member {string} [windowsOsInfo.windowsOsState] The state of the Windows OS
 * (i.e. NonSysprepped, SysprepRequested, SysprepApplied). Possible values
 * include: 'NonSysprepped', 'SysprepRequested', 'SysprepApplied'
 * @member {object} [linuxOsInfo] The Linux OS information of the VM.
 * @member {string} [linuxOsInfo.linuxOsState] The state of the Linux OS (i.e.
 * NonDeprovisioned, DeprovisionRequested, DeprovisionApplied). Possible values
 * include: 'NonDeprovisioned', 'DeprovisionRequested', 'DeprovisionApplied'
 */
export interface CustomImagePropertiesFromVm {
  sourceVmId?: string;
  windowsOsInfo?: WindowsOsInfo;
  linuxOsInfo?: LinuxOsInfo;
}

/**
 * @class
 * Initializes a new instance of the CustomImagePropertiesCustom class.
 * @constructor
 * Properties for creating a custom image from a VHD.
 *
 * @member {string} [imageName] The image name.
 * @member {boolean} [sysPrep] Indicates whether sysprep has been run on the
 * VHD.
 * @member {string} osType The OS type of the custom image (i.e. Windows,
 * Linux). Possible values include: 'Windows', 'Linux', 'None'
 */
export interface CustomImagePropertiesCustom {
  imageName?: string;
  sysPrep?: boolean;
  osType: string;
}

/**
 * @class
 * Initializes a new instance of the DataDiskStorageTypeInfo class.
 * @constructor
 * Storage information about the data disks present in the custom image
 *
 * @member {string} [lun] Disk Lun
 * @member {string} [storageType] Disk Storage Type. Possible values include:
 * 'Standard', 'Premium'
 */
export interface DataDiskStorageTypeInfo {
  lun?: string;
  storageType?: string;
}

/**
 * @class
 * Initializes a new instance of the CustomImagePropertiesFromPlan class.
 * @constructor
 * Properties for plan on a custom image.
 *
 * @member {string} [id] The id of the plan, equivalent to name of the plan
 * @member {string} [publisher] The publisher for the plan from the marketplace
 * image the custom image is derived from
 * @member {string} [offer] The offer for the plan from the marketplace image
 * the custom image is derived from
 */
export interface CustomImagePropertiesFromPlan {
  id?: string;
  publisher?: string;
  offer?: string;
}

/**
 * @class
 * Initializes a new instance of the CustomImage class.
 * @constructor
 * A custom image.
 *
 * @member {object} [vm] The virtual machine from which the image is to be
 * created.
 * @member {string} [vm.sourceVmId] The source vm identifier.
 * @member {object} [vm.windowsOsInfo] The Windows OS information of the VM.
 * @member {string} [vm.windowsOsInfo.windowsOsState] The state of the Windows
 * OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied). Possible values
 * include: 'NonSysprepped', 'SysprepRequested', 'SysprepApplied'
 * @member {object} [vm.linuxOsInfo] The Linux OS information of the VM.
 * @member {string} [vm.linuxOsInfo.linuxOsState] The state of the Linux OS
 * (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied). Possible
 * values include: 'NonDeprovisioned', 'DeprovisionRequested',
 * 'DeprovisionApplied'
 * @member {object} [vhd] The VHD from which the image is to be created.
 * @member {string} [vhd.imageName] The image name.
 * @member {boolean} [vhd.sysPrep] Indicates whether sysprep has been run on
 * the VHD.
 * @member {string} [vhd.osType] The OS type of the custom image (i.e. Windows,
 * Linux). Possible values include: 'Windows', 'Linux', 'None'
 * @member {string} [description] The description of the custom image.
 * @member {string} [author] The author of the custom image.
 * @member {date} [creationDate] The creation date of the custom image.
 * @member {string} [managedImageId] The Managed Image Id backing the custom
 * image.
 * @member {string} [managedSnapshotId] The Managed Snapshot Id backing the
 * custom image.
 * @member {array} [dataDiskStorageInfo] Storage information about the data
 * disks present in the custom image
 * @member {object} [customImagePlan] Storage information about the plan
 * related to this custom image
 * @member {string} [customImagePlan.id] The id of the plan, equivalent to name
 * of the plan
 * @member {string} [customImagePlan.publisher] The publisher for the plan from
 * the marketplace image the custom image is derived from
 * @member {string} [customImagePlan.offer] The offer for the plan from the
 * marketplace image the custom image is derived from
 * @member {boolean} [isPlanAuthorized] Whether or not the custom images
 * underlying offer/plan has been enabled for programmatic deployment
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 */
export interface CustomImage extends Resource {
  vm?: CustomImagePropertiesFromVm;
  vhd?: CustomImagePropertiesCustom;
  description?: string;
  author?: string;
  readonly creationDate?: Date;
  managedImageId?: string;
  managedSnapshotId?: string;
  dataDiskStorageInfo?: DataDiskStorageTypeInfo[];
  customImagePlan?: CustomImagePropertiesFromPlan;
  isPlanAuthorized?: boolean;
  readonly provisioningState?: string;
  readonly uniqueIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the WindowsOsInfoFragment class.
 * @constructor
 * Information about a Windows OS.
 *
 * @member {string} [windowsOsState] The state of the Windows OS (i.e.
 * NonSysprepped, SysprepRequested, SysprepApplied). Possible values include:
 * 'NonSysprepped', 'SysprepRequested', 'SysprepApplied'
 */
export interface WindowsOsInfoFragment {
  windowsOsState?: string;
}

/**
 * @class
 * Initializes a new instance of the LinuxOsInfoFragment class.
 * @constructor
 * Information about a Linux OS.
 *
 * @member {string} [linuxOsState] The state of the Linux OS (i.e.
 * NonDeprovisioned, DeprovisionRequested, DeprovisionApplied). Possible values
 * include: 'NonDeprovisioned', 'DeprovisionRequested', 'DeprovisionApplied'
 */
export interface LinuxOsInfoFragment {
  linuxOsState?: string;
}

/**
 * @class
 * Initializes a new instance of the CustomImagePropertiesFromVmFragment class.
 * @constructor
 * Properties for creating a custom image from a virtual machine.
 *
 * @member {string} [sourceVmId] The source vm identifier.
 * @member {object} [windowsOsInfo] The Windows OS information of the VM.
 * @member {string} [windowsOsInfo.windowsOsState] The state of the Windows OS
 * (i.e. NonSysprepped, SysprepRequested, SysprepApplied). Possible values
 * include: 'NonSysprepped', 'SysprepRequested', 'SysprepApplied'
 * @member {object} [linuxOsInfo] The Linux OS information of the VM.
 * @member {string} [linuxOsInfo.linuxOsState] The state of the Linux OS (i.e.
 * NonDeprovisioned, DeprovisionRequested, DeprovisionApplied). Possible values
 * include: 'NonDeprovisioned', 'DeprovisionRequested', 'DeprovisionApplied'
 */
export interface CustomImagePropertiesFromVmFragment {
  sourceVmId?: string;
  windowsOsInfo?: WindowsOsInfoFragment;
  linuxOsInfo?: LinuxOsInfoFragment;
}

/**
 * @class
 * Initializes a new instance of the CustomImagePropertiesCustomFragment class.
 * @constructor
 * Properties for creating a custom image from a VHD.
 *
 * @member {string} [imageName] The image name.
 * @member {boolean} [sysPrep] Indicates whether sysprep has been run on the
 * VHD.
 * @member {string} [osType] The OS type of the custom image (i.e. Windows,
 * Linux). Possible values include: 'Windows', 'Linux', 'None'
 */
export interface CustomImagePropertiesCustomFragment {
  imageName?: string;
  sysPrep?: boolean;
  osType?: string;
}

/**
 * @class
 * Initializes a new instance of the DataDiskStorageTypeInfoFragment class.
 * @constructor
 * Storage information about the data disks present in the custom image
 *
 * @member {string} [lun] Disk Lun
 * @member {string} [storageType] Disk Storage Type. Possible values include:
 * 'Standard', 'Premium'
 */
export interface DataDiskStorageTypeInfoFragment {
  lun?: string;
  storageType?: string;
}

/**
 * @class
 * Initializes a new instance of the CustomImagePropertiesFromPlanFragment class.
 * @constructor
 * Properties for plan on a custom image.
 *
 * @member {string} [id] The id of the plan, equivalent to name of the plan
 * @member {string} [publisher] The publisher for the plan from the marketplace
 * image the custom image is derived from
 * @member {string} [offer] The offer for the plan from the marketplace image
 * the custom image is derived from
 */
export interface CustomImagePropertiesFromPlanFragment {
  id?: string;
  publisher?: string;
  offer?: string;
}

/**
 * @class
 * Initializes a new instance of the CustomImageFragment class.
 * @constructor
 * A custom image.
 *
 * @member {object} [vm] The virtual machine from which the image is to be
 * created.
 * @member {string} [vm.sourceVmId] The source vm identifier.
 * @member {object} [vm.windowsOsInfo] The Windows OS information of the VM.
 * @member {string} [vm.windowsOsInfo.windowsOsState] The state of the Windows
 * OS (i.e. NonSysprepped, SysprepRequested, SysprepApplied). Possible values
 * include: 'NonSysprepped', 'SysprepRequested', 'SysprepApplied'
 * @member {object} [vm.linuxOsInfo] The Linux OS information of the VM.
 * @member {string} [vm.linuxOsInfo.linuxOsState] The state of the Linux OS
 * (i.e. NonDeprovisioned, DeprovisionRequested, DeprovisionApplied). Possible
 * values include: 'NonDeprovisioned', 'DeprovisionRequested',
 * 'DeprovisionApplied'
 * @member {object} [vhd] The VHD from which the image is to be created.
 * @member {string} [vhd.imageName] The image name.
 * @member {boolean} [vhd.sysPrep] Indicates whether sysprep has been run on
 * the VHD.
 * @member {string} [vhd.osType] The OS type of the custom image (i.e. Windows,
 * Linux). Possible values include: 'Windows', 'Linux', 'None'
 * @member {string} [description] The description of the custom image.
 * @member {string} [author] The author of the custom image.
 * @member {string} [managedImageId] The Managed Image Id backing the custom
 * image.
 * @member {string} [managedSnapshotId] The Managed Snapshot Id backing the
 * custom image.
 * @member {array} [dataDiskStorageInfo] Storage information about the data
 * disks present in the custom image
 * @member {object} [customImagePlan] Storage information about the plan
 * related to this custom image
 * @member {string} [customImagePlan.id] The id of the plan, equivalent to name
 * of the plan
 * @member {string} [customImagePlan.publisher] The publisher for the plan from
 * the marketplace image the custom image is derived from
 * @member {string} [customImagePlan.offer] The offer for the plan from the
 * marketplace image the custom image is derived from
 * @member {boolean} [isPlanAuthorized] Whether or not the custom images
 * underlying offer/plan has been enabled for programmatic deployment
 */
export interface CustomImageFragment extends UpdateResource {
  vm?: CustomImagePropertiesFromVmFragment;
  vhd?: CustomImagePropertiesCustomFragment;
  description?: string;
  author?: string;
  managedImageId?: string;
  managedSnapshotId?: string;
  dataDiskStorageInfo?: DataDiskStorageTypeInfoFragment[];
  customImagePlan?: CustomImagePropertiesFromPlanFragment;
  isPlanAuthorized?: boolean;
}

/**
 * @class
 * Initializes a new instance of the DataDiskProperties class.
 * @constructor
 * Request body for adding a new or existing data disk to a virtual machine.
 *
 * @member {object} [attachNewDataDiskOptions] Specifies options to attach a
 * new disk to the virtual machine.
 * @member {number} [attachNewDataDiskOptions.diskSizeGiB] Size of the disk to
 * be attached in GibiBytes.
 * @member {string} [attachNewDataDiskOptions.diskName] The name of the disk to
 * be attached.
 * @member {string} [attachNewDataDiskOptions.diskType] The storage type for
 * the disk (i.e. Standard, Premium). Possible values include: 'Standard',
 * 'Premium'
 * @member {string} [existingLabDiskId] Specifies the existing lab disk id to
 * attach to virtual machine.
 * @member {string} [hostCaching] Caching option for a data disk (i.e. None,
 * ReadOnly, ReadWrite). Possible values include: 'None', 'ReadOnly',
 * 'ReadWrite'
 */
export interface DataDiskProperties {
  attachNewDataDiskOptions?: AttachNewDataDiskOptions;
  existingLabDiskId?: string;
  hostCaching?: string;
}

/**
 * @class
 * Initializes a new instance of the DataDiskPropertiesFragment class.
 * @constructor
 * Request body for adding a new or existing data disk to a virtual machine.
 *
 * @member {object} [attachNewDataDiskOptions] Specifies options to attach a
 * new disk to the virtual machine.
 * @member {number} [attachNewDataDiskOptions.diskSizeGiB] Size of the disk to
 * be attached in GibiBytes.
 * @member {string} [attachNewDataDiskOptions.diskName] The name of the disk to
 * be attached.
 * @member {string} [attachNewDataDiskOptions.diskType] The storage type for
 * the disk (i.e. Standard, Premium). Possible values include: 'Standard',
 * 'Premium'
 * @member {string} [existingLabDiskId] Specifies the existing lab disk id to
 * attach to virtual machine.
 * @member {string} [hostCaching] Caching option for a data disk (i.e. None,
 * ReadOnly, ReadWrite). Possible values include: 'None', 'ReadOnly',
 * 'ReadWrite'
 */
export interface DataDiskPropertiesFragment {
  attachNewDataDiskOptions?: AttachNewDataDiskOptionsFragment;
  existingLabDiskId?: string;
  hostCaching?: string;
}

/**
 * @class
 * Initializes a new instance of the DetachDataDiskProperties class.
 * @constructor
 * Request body for detaching data disk from a virtual machine.
 *
 * @member {string} [existingLabDiskId] Specifies the disk resource ID to
 * detach from virtual machine.
 */
export interface DetachDataDiskProperties {
  existingLabDiskId?: string;
}

/**
 * @class
 * Initializes a new instance of the DetachDiskProperties class.
 * @constructor
 * Properties of the disk to detach.
 *
 * @member {string} [leasedByLabVmId] The resource ID of the Lab VM to which
 * the disk is attached.
 */
export interface DetachDiskProperties {
  leasedByLabVmId?: string;
}

/**
 * @class
 * Initializes a new instance of the Disk class.
 * @constructor
 * A Disk.
 *
 * @member {string} [diskType] The storage type for the disk (i.e. Standard,
 * Premium). Possible values include: 'Standard', 'Premium'
 * @member {number} [diskSizeGiB] The size of the disk in GibiBytes.
 * @member {string} [leasedByLabVmId] The resource ID of the VM to which this
 * disk is leased.
 * @member {string} [diskBlobName] When backed by a blob, the name of the VHD
 * blob without extension.
 * @member {string} [diskUri] When backed by a blob, the URI of underlying
 * blob.
 * @member {date} [createdDate] The creation date of the disk.
 * @member {string} [hostCaching] The host caching policy of the disk (i.e.
 * None, ReadOnly, ReadWrite).
 * @member {string} [managedDiskId] When backed by managed disk, this is the ID
 * of the compute disk resource.
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 */
export interface Disk extends Resource {
  diskType?: string;
  diskSizeGiB?: number;
  leasedByLabVmId?: string;
  diskBlobName?: string;
  diskUri?: string;
  readonly createdDate?: Date;
  hostCaching?: string;
  managedDiskId?: string;
  readonly provisioningState?: string;
  readonly uniqueIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the DiskFragment class.
 * @constructor
 * A Disk.
 *
 * @member {string} [diskType] The storage type for the disk (i.e. Standard,
 * Premium). Possible values include: 'Standard', 'Premium'
 * @member {number} [diskSizeGiB] The size of the disk in GibiBytes.
 * @member {string} [leasedByLabVmId] The resource ID of the VM to which this
 * disk is leased.
 * @member {string} [diskBlobName] When backed by a blob, the name of the VHD
 * blob without extension.
 * @member {string} [diskUri] When backed by a blob, the URI of underlying
 * blob.
 * @member {string} [hostCaching] The host caching policy of the disk (i.e.
 * None, ReadOnly, ReadWrite).
 * @member {string} [managedDiskId] When backed by managed disk, this is the ID
 * of the compute disk resource.
 */
export interface DiskFragment extends UpdateResource {
  diskType?: string;
  diskSizeGiB?: number;
  leasedByLabVmId?: string;
  diskBlobName?: string;
  diskUri?: string;
  hostCaching?: string;
  managedDiskId?: string;
}

/**
 * @class
 * Initializes a new instance of the EnvironmentDeploymentProperties class.
 * @constructor
 * Properties of an environment deployment.
 *
 * @member {string} [armTemplateId] The Azure Resource Manager template's
 * identifier.
 * @member {array} [parameters] The parameters of the Azure Resource Manager
 * template.
 */
export interface EnvironmentDeploymentProperties {
  armTemplateId?: string;
  parameters?: ArmTemplateParameterProperties[];
}

/**
 * @class
 * Initializes a new instance of the DtlEnvironment class.
 * @constructor
 * An environment, which is essentially an ARM template deployment.
 *
 * @member {object} [deploymentProperties] The deployment properties of the
 * environment.
 * @member {string} [deploymentProperties.armTemplateId] The Azure Resource
 * Manager template's identifier.
 * @member {array} [deploymentProperties.parameters] The parameters of the
 * Azure Resource Manager template.
 * @member {string} [armTemplateDisplayName] The display name of the Azure
 * Resource Manager template that produced the environment.
 * @member {string} [resourceGroupId] The identifier of the resource group
 * containing the environment's resources.
 * @member {string} [createdByUser] The creator of the environment.
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 */
export interface DtlEnvironment extends Resource {
  deploymentProperties?: EnvironmentDeploymentProperties;
  armTemplateDisplayName?: string;
  readonly resourceGroupId?: string;
  readonly createdByUser?: string;
  readonly provisioningState?: string;
  readonly uniqueIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the EnvironmentDeploymentPropertiesFragment class.
 * @constructor
 * Properties of an environment deployment.
 *
 * @member {string} [armTemplateId] The Azure Resource Manager template's
 * identifier.
 * @member {array} [parameters] The parameters of the Azure Resource Manager
 * template.
 */
export interface EnvironmentDeploymentPropertiesFragment {
  armTemplateId?: string;
  parameters?: ArmTemplateParameterPropertiesFragment[];
}

/**
 * @class
 * Initializes a new instance of the DtlEnvironmentFragment class.
 * @constructor
 * An environment, which is essentially an ARM template deployment.
 *
 * @member {object} [deploymentProperties] The deployment properties of the
 * environment.
 * @member {string} [deploymentProperties.armTemplateId] The Azure Resource
 * Manager template's identifier.
 * @member {array} [deploymentProperties.parameters] The parameters of the
 * Azure Resource Manager template.
 * @member {string} [armTemplateDisplayName] The display name of the Azure
 * Resource Manager template that produced the environment.
 */
export interface DtlEnvironmentFragment extends UpdateResource {
  deploymentProperties?: EnvironmentDeploymentPropertiesFragment;
  armTemplateDisplayName?: string;
}

/**
 * @class
 * Initializes a new instance of the EvaluatePoliciesProperties class.
 * @constructor
 * Properties for evaluating a policy set.
 *
 * @member {string} [factName] The fact name.
 * @member {string} [factData] The fact data.
 * @member {string} [valueOffset] The value offset.
 * @member {string} [userObjectId] The user for which policies will be
 * evaluated
 */
export interface EvaluatePoliciesProperties {
  factName?: string;
  factData?: string;
  valueOffset?: string;
  userObjectId?: string;
}

/**
 * @class
 * Initializes a new instance of the EvaluatePoliciesRequest class.
 * @constructor
 * Request body for evaluating a policy set.
 *
 * @member {array} [policies] Policies to evaluate.
 */
export interface EvaluatePoliciesRequest {
  policies?: EvaluatePoliciesProperties[];
}

/**
 * @class
 * Initializes a new instance of the PolicyViolation class.
 * @constructor
 * Policy violation.
 *
 * @member {string} [code] The code of the policy violation.
 * @member {string} [message] The message of the policy violation.
 */
export interface PolicyViolation {
  code?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the PolicySetResult class.
 * @constructor
 * Result of a policy set evaluation.
 *
 * @member {boolean} [hasError] A value indicating whether this policy set
 * evaluation has discovered violations.
 * @member {array} [policyViolations] The list of policy violations.
 */
export interface PolicySetResult {
  hasError?: boolean;
  policyViolations?: PolicyViolation[];
}

/**
 * @class
 * Initializes a new instance of the EvaluatePoliciesResponse class.
 * @constructor
 * Response body for evaluating a policy set.
 *
 * @member {array} [results] Results of evaluating a policy set.
 */
export interface EvaluatePoliciesResponse {
  results?: PolicySetResult[];
}

/**
 * @class
 * Initializes a new instance of the Event class.
 * @constructor
 * An event to be notified for.
 *
 * @member {string} [eventName] The event type for which this notification is
 * enabled (i.e. AutoShutdown, Cost). Possible values include: 'AutoShutdown',
 * 'Cost'
 */
export interface Event {
  eventName?: string;
}

/**
 * @class
 * Initializes a new instance of the EventFragment class.
 * @constructor
 * An event to be notified for.
 *
 * @member {string} [eventName] The event type for which this notification is
 * enabled (i.e. AutoShutdown, Cost). Possible values include: 'AutoShutdown',
 * 'Cost'
 */
export interface EventFragment {
  eventName?: string;
}

/**
 * @class
 * Initializes a new instance of the ExportResourceUsageParameters class.
 * @constructor
 * The parameters of the export operation.
 *
 * @member {string} [blobStorageAbsoluteSasUri] The blob storage absolute sas
 * uri with write permission to the container which the usage data needs to be
 * uploaded to.
 * @member {date} [usageStartDate] The start time of the usage. If not
 * provided, usage will be reported since the beginning of data collection.
 */
export interface ExportResourceUsageParameters {
  blobStorageAbsoluteSasUri?: string;
  usageStartDate?: Date;
}

/**
 * @class
 * Initializes a new instance of the ExternalSubnet class.
 * @constructor
 * Subnet information as returned by the Microsoft.Network API.
 *
 * @member {string} [id] Gets or sets the identifier.
 * @member {string} [name] Gets or sets the name.
 */
export interface ExternalSubnet {
  id?: string;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the ExternalSubnetFragment class.
 * @constructor
 * Subnet information as returned by the Microsoft.Network API.
 *
 * @member {string} [id] Gets or sets the identifier.
 * @member {string} [name] Gets or sets the name.
 */
export interface ExternalSubnetFragment {
  id?: string;
  name?: string;
}

/**
 * @class
 * Initializes a new instance of the GalleryImageReference class.
 * @constructor
 * The reference information for an Azure Marketplace image.
 *
 * @member {string} [offer] The offer of the gallery image.
 * @member {string} [publisher] The publisher of the gallery image.
 * @member {string} [sku] The SKU of the gallery image.
 * @member {string} [osType] The OS type of the gallery image.
 * @member {string} [version] The version of the gallery image.
 */
export interface GalleryImageReference {
  offer?: string;
  publisher?: string;
  sku?: string;
  osType?: string;
  version?: string;
}

/**
 * @class
 * Initializes a new instance of the InboundNatRule class.
 * @constructor
 * A rule for NAT - exposing a VM's port (backendPort) on the public IP address
 * using a load balancer.
 *
 * @member {string} [transportProtocol] The transport protocol for the
 * endpoint. Possible values include: 'Tcp', 'Udp'
 * @member {number} [frontendPort] The external endpoint port of the inbound
 * connection. Possible values range between 1 and 65535, inclusive. If
 * unspecified, a value will be allocated automatically.
 * @member {number} [backendPort] The port to which the external traffic will
 * be redirected.
 */
export interface InboundNatRule {
  transportProtocol?: string;
  frontendPort?: number;
  backendPort?: number;
}

/**
 * @class
 * Initializes a new instance of the SharedPublicIpAddressConfiguration class.
 * @constructor
 * Properties of a virtual machine that determine how it is connected to a load
 * balancer.
 *
 * @member {array} [inboundNatRules] The incoming NAT rules
 */
export interface SharedPublicIpAddressConfiguration {
  inboundNatRules?: InboundNatRule[];
}

/**
 * @class
 * Initializes a new instance of the NetworkInterfaceProperties class.
 * @constructor
 * Properties of a network interface.
 *
 * @member {string} [virtualNetworkId] The resource ID of the virtual network.
 * @member {string} [subnetId] The resource ID of the sub net.
 * @member {string} [publicIpAddressId] The resource ID of the public IP
 * address.
 * @member {string} [publicIpAddress] The public IP address.
 * @member {string} [privateIpAddress] The private IP address.
 * @member {string} [dnsName] The DNS name.
 * @member {string} [rdpAuthority] The RdpAuthority property is a server DNS
 * host name or IP address followed by the service port number for RDP (Remote
 * Desktop Protocol).
 * @member {string} [sshAuthority] The SshAuthority property is a server DNS
 * host name or IP address followed by the service port number for SSH.
 * @member {object} [sharedPublicIpAddressConfiguration] The configuration for
 * sharing a public IP address across multiple virtual machines.
 * @member {array} [sharedPublicIpAddressConfiguration.inboundNatRules] The
 * incoming NAT rules
 */
export interface NetworkInterfaceProperties {
  virtualNetworkId?: string;
  subnetId?: string;
  publicIpAddressId?: string;
  publicIpAddress?: string;
  privateIpAddress?: string;
  dnsName?: string;
  rdpAuthority?: string;
  sshAuthority?: string;
  sharedPublicIpAddressConfiguration?: SharedPublicIpAddressConfiguration;
}

/**
 * @class
 * Initializes a new instance of the ScheduleCreationParameter class.
 * @constructor
 * Properties for creating a schedule.
 *
 * @member {string} [status] The status of the schedule (i.e. Enabled,
 * Disabled). Possible values include: 'Enabled', 'Disabled'
 * @member {string} [taskType] The task type of the schedule (e.g.
 * LabVmsShutdownTask, LabVmAutoStart).
 * @member {object} [weeklyRecurrence] If the schedule will occur only some
 * days of the week, specify the weekly recurrence.
 * @member {array} [weeklyRecurrence.weekdays] The days of the week for which
 * the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
 * @member {string} [weeklyRecurrence.time] The time of the day the schedule
 * will occur.
 * @member {object} [dailyRecurrence] If the schedule will occur once each day
 * of the week, specify the daily recurrence.
 * @member {string} [dailyRecurrence.time] The time of day the schedule will
 * occur.
 * @member {object} [hourlyRecurrence] If the schedule will occur multiple
 * times a day, specify the hourly recurrence.
 * @member {number} [hourlyRecurrence.minute] Minutes of the hour the schedule
 * will run.
 * @member {string} [timeZoneId] The time zone ID (e.g. Pacific Standard time).
 * @member {object} [notificationSettings] Notification settings.
 * @member {string} [notificationSettings.status] If notifications are enabled
 * for this schedule (i.e. Enabled, Disabled). Possible values include:
 * 'Enabled', 'Disabled'
 * @member {number} [notificationSettings.timeInMinutes] Time in minutes before
 * event at which notification will be sent.
 * @member {string} [notificationSettings.webhookUrl] The webhook URL to which
 * the notification will be sent.
 * @member {string} [notificationSettings.emailRecipient] The email recipient
 * to send notifications to (can be a list of semi-colon seperated email
 * addresses).
 * @member {string} [notificationSettings.notificationLocale] The locale to use
 * when sending a notification (fallback for unsupported languages is EN).
 * @member {string} [targetResourceId] The resource ID to which the schedule
 * belongs
 * @member {string} [name] The name of the virtual machine or environment
 * @member {string} [location] The location of the new virtual machine or
 * environment
 * @member {object} [tags] The tags of the resource.
 */
export interface ScheduleCreationParameter {
  status?: string;
  taskType?: string;
  weeklyRecurrence?: WeekDetails;
  dailyRecurrence?: DayDetails;
  hourlyRecurrence?: HourDetails;
  timeZoneId?: string;
  notificationSettings?: NotificationSettings;
  targetResourceId?: string;
  name?: string;
  location?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the LabVirtualMachineCreationParameter class.
 * @constructor
 * Properties for creating a virtual machine.
 *
 * @member {object} [bulkCreationParameters] The number of virtual machine
 * instances to create.
 * @member {number} [bulkCreationParameters.instanceCount] The number of
 * virtual machine instances to create.
 * @member {string} [notes] The notes of the virtual machine.
 * @member {string} [ownerObjectId] The object identifier of the owner of the
 * virtual machine.
 * @member {string} [ownerUserPrincipalName] The user principal name of the
 * virtual machine owner.
 * @member {string} [createdByUserId] The object identifier of the creator of
 * the virtual machine.
 * @member {string} [createdByUser] The email address of creator of the virtual
 * machine.
 * @member {date} [createdDate] The creation date of the virtual machine.
 * @member {string} [computeId] The resource identifier (Microsoft.Compute) of
 * the virtual machine.
 * @member {string} [customImageId] The custom image identifier of the virtual
 * machine.
 * @member {string} [osType] The OS type of the virtual machine.
 * @member {string} [size] The size of the virtual machine.
 * @member {string} [userName] The user name of the virtual machine.
 * @member {string} [password] The password of the virtual machine
 * administrator.
 * @member {string} [sshKey] The SSH key of the virtual machine administrator.
 * @member {boolean} [isAuthenticationWithSshKey] Indicates whether this
 * virtual machine uses an SSH key for authentication.
 * @member {string} [fqdn] The fully-qualified domain name of the virtual
 * machine.
 * @member {string} [labSubnetName] The lab subnet name of the virtual machine.
 * @member {string} [labVirtualNetworkId] The lab virtual network identifier of
 * the virtual machine.
 * @member {boolean} [disallowPublicIpAddress] Indicates whether the virtual
 * machine is to be created without a public IP address.
 * @member {array} [artifacts] The artifacts to be installed on the virtual
 * machine.
 * @member {object} [artifactDeploymentStatus] The artifact deployment status
 * for the virtual machine.
 * @member {string} [artifactDeploymentStatus.deploymentStatus] The deployment
 * status of the artifact.
 * @member {number} [artifactDeploymentStatus.artifactsApplied] The total count
 * of the artifacts that were successfully applied.
 * @member {number} [artifactDeploymentStatus.totalArtifacts] The total count
 * of the artifacts that were tentatively applied.
 * @member {object} [galleryImageReference] The Microsoft Azure Marketplace
 * image reference of the virtual machine.
 * @member {string} [galleryImageReference.offer] The offer of the gallery
 * image.
 * @member {string} [galleryImageReference.publisher] The publisher of the
 * gallery image.
 * @member {string} [galleryImageReference.sku] The SKU of the gallery image.
 * @member {string} [galleryImageReference.osType] The OS type of the gallery
 * image.
 * @member {string} [galleryImageReference.version] The version of the gallery
 * image.
 * @member {string} [planId] The id of the plan associated with the virtual
 * machine image
 * @member {object} [networkInterface] The network interface properties.
 * @member {string} [networkInterface.virtualNetworkId] The resource ID of the
 * virtual network.
 * @member {string} [networkInterface.subnetId] The resource ID of the sub net.
 * @member {string} [networkInterface.publicIpAddressId] The resource ID of the
 * public IP address.
 * @member {string} [networkInterface.publicIpAddress] The public IP address.
 * @member {string} [networkInterface.privateIpAddress] The private IP address.
 * @member {string} [networkInterface.dnsName] The DNS name.
 * @member {string} [networkInterface.rdpAuthority] The RdpAuthority property
 * is a server DNS host name or IP address followed by the service port number
 * for RDP (Remote Desktop Protocol).
 * @member {string} [networkInterface.sshAuthority] The SshAuthority property
 * is a server DNS host name or IP address followed by the service port number
 * for SSH.
 * @member {object} [networkInterface.sharedPublicIpAddressConfiguration] The
 * configuration for sharing a public IP address across multiple virtual
 * machines.
 * @member {array}
 * [networkInterface.sharedPublicIpAddressConfiguration.inboundNatRules] The
 * incoming NAT rules
 * @member {date} [expirationDate] The expiration date for VM.
 * @member {boolean} [allowClaim] Indicates whether another user can take
 * ownership of the virtual machine
 * @member {string} [storageType] Storage type to use for virtual machine (i.e.
 * Standard, Premium).
 * @member {string} [virtualMachineCreationSource] Tells source of creation of
 * lab virtual machine. Output property only. Possible values include:
 * 'FromCustomImage', 'FromGalleryImage'
 * @member {string} [environmentId] The resource ID of the environment that
 * contains this virtual machine, if any.
 * @member {array} [dataDiskParameters] New or existing data disks to attach to
 * the virtual machine after creation
 * @member {array} [scheduleParameters] Virtual Machine schedules to be created
 * @member {string} [lastKnownPowerState] Last known compute power state
 * captured in DTL
 * @member {string} [name] The name of the virtual machine or environment
 * @member {string} [location] The location of the new virtual machine or
 * environment
 * @member {object} [tags] The tags of the resource.
 */
export interface LabVirtualMachineCreationParameter {
  bulkCreationParameters?: BulkCreationParameters;
  notes?: string;
  ownerObjectId?: string;
  ownerUserPrincipalName?: string;
  createdByUserId?: string;
  createdByUser?: string;
  createdDate?: Date;
  computeId?: string;
  customImageId?: string;
  osType?: string;
  size?: string;
  userName?: string;
  password?: string;
  sshKey?: string;
  isAuthenticationWithSshKey?: boolean;
  fqdn?: string;
  labSubnetName?: string;
  labVirtualNetworkId?: string;
  disallowPublicIpAddress?: boolean;
  artifacts?: ArtifactInstallProperties[];
  artifactDeploymentStatus?: ArtifactDeploymentStatusProperties;
  galleryImageReference?: GalleryImageReference;
  planId?: string;
  networkInterface?: NetworkInterfaceProperties;
  expirationDate?: Date;
  allowClaim?: boolean;
  storageType?: string;
  virtualMachineCreationSource?: string;
  environmentId?: string;
  dataDiskParameters?: DataDiskProperties[];
  scheduleParameters?: ScheduleCreationParameter[];
  lastKnownPowerState?: string;
  name?: string;
  location?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the FormulaPropertiesFromVm class.
 * @constructor
 * Information about a VM from which a formula is to be created.
 *
 * @member {string} [labVmId] The identifier of the VM from which a formula is
 * to be created.
 */
export interface FormulaPropertiesFromVm {
  labVmId?: string;
}

/**
 * @class
 * Initializes a new instance of the Formula class.
 * @constructor
 * A formula for creating a VM, specifying an image base and other parameters
 *
 * @member {string} [description] The description of the formula.
 * @member {string} [author] The author of the formula.
 * @member {string} [osType] The OS type of the formula.
 * @member {date} [creationDate] The creation date of the formula.
 * @member {object} [formulaContent] The content of the formula.
 * @member {object} [formulaContent.bulkCreationParameters] The number of
 * virtual machine instances to create.
 * @member {number} [formulaContent.bulkCreationParameters.instanceCount] The
 * number of virtual machine instances to create.
 * @member {string} [formulaContent.notes] The notes of the virtual machine.
 * @member {string} [formulaContent.ownerObjectId] The object identifier of the
 * owner of the virtual machine.
 * @member {string} [formulaContent.ownerUserPrincipalName] The user principal
 * name of the virtual machine owner.
 * @member {string} [formulaContent.createdByUserId] The object identifier of
 * the creator of the virtual machine.
 * @member {string} [formulaContent.createdByUser] The email address of creator
 * of the virtual machine.
 * @member {date} [formulaContent.createdDate] The creation date of the virtual
 * machine.
 * @member {string} [formulaContent.computeId] The resource identifier
 * (Microsoft.Compute) of the virtual machine.
 * @member {string} [formulaContent.customImageId] The custom image identifier
 * of the virtual machine.
 * @member {string} [formulaContent.osType] The OS type of the virtual machine.
 * @member {string} [formulaContent.size] The size of the virtual machine.
 * @member {string} [formulaContent.userName] The user name of the virtual
 * machine.
 * @member {string} [formulaContent.password] The password of the virtual
 * machine administrator.
 * @member {string} [formulaContent.sshKey] The SSH key of the virtual machine
 * administrator.
 * @member {boolean} [formulaContent.isAuthenticationWithSshKey] Indicates
 * whether this virtual machine uses an SSH key for authentication.
 * @member {string} [formulaContent.fqdn] The fully-qualified domain name of
 * the virtual machine.
 * @member {string} [formulaContent.labSubnetName] The lab subnet name of the
 * virtual machine.
 * @member {string} [formulaContent.labVirtualNetworkId] The lab virtual
 * network identifier of the virtual machine.
 * @member {boolean} [formulaContent.disallowPublicIpAddress] Indicates whether
 * the virtual machine is to be created without a public IP address.
 * @member {array} [formulaContent.artifacts] The artifacts to be installed on
 * the virtual machine.
 * @member {object} [formulaContent.artifactDeploymentStatus] The artifact
 * deployment status for the virtual machine.
 * @member {string} [formulaContent.artifactDeploymentStatus.deploymentStatus]
 * The deployment status of the artifact.
 * @member {number} [formulaContent.artifactDeploymentStatus.artifactsApplied]
 * The total count of the artifacts that were successfully applied.
 * @member {number} [formulaContent.artifactDeploymentStatus.totalArtifacts]
 * The total count of the artifacts that were tentatively applied.
 * @member {object} [formulaContent.galleryImageReference] The Microsoft Azure
 * Marketplace image reference of the virtual machine.
 * @member {string} [formulaContent.galleryImageReference.offer] The offer of
 * the gallery image.
 * @member {string} [formulaContent.galleryImageReference.publisher] The
 * publisher of the gallery image.
 * @member {string} [formulaContent.galleryImageReference.sku] The SKU of the
 * gallery image.
 * @member {string} [formulaContent.galleryImageReference.osType] The OS type
 * of the gallery image.
 * @member {string} [formulaContent.galleryImageReference.version] The version
 * of the gallery image.
 * @member {string} [formulaContent.planId] The id of the plan associated with
 * the virtual machine image
 * @member {object} [formulaContent.networkInterface] The network interface
 * properties.
 * @member {string} [formulaContent.networkInterface.virtualNetworkId] The
 * resource ID of the virtual network.
 * @member {string} [formulaContent.networkInterface.subnetId] The resource ID
 * of the sub net.
 * @member {string} [formulaContent.networkInterface.publicIpAddressId] The
 * resource ID of the public IP address.
 * @member {string} [formulaContent.networkInterface.publicIpAddress] The
 * public IP address.
 * @member {string} [formulaContent.networkInterface.privateIpAddress] The
 * private IP address.
 * @member {string} [formulaContent.networkInterface.dnsName] The DNS name.
 * @member {string} [formulaContent.networkInterface.rdpAuthority] The
 * RdpAuthority property is a server DNS host name or IP address followed by
 * the service port number for RDP (Remote Desktop Protocol).
 * @member {string} [formulaContent.networkInterface.sshAuthority] The
 * SshAuthority property is a server DNS host name or IP address followed by
 * the service port number for SSH.
 * @member {object}
 * [formulaContent.networkInterface.sharedPublicIpAddressConfiguration] The
 * configuration for sharing a public IP address across multiple virtual
 * machines.
 * @member {array}
 * [formulaContent.networkInterface.sharedPublicIpAddressConfiguration.inboundNatRules]
 * The incoming NAT rules
 * @member {date} [formulaContent.expirationDate] The expiration date for VM.
 * @member {boolean} [formulaContent.allowClaim] Indicates whether another user
 * can take ownership of the virtual machine
 * @member {string} [formulaContent.storageType] Storage type to use for
 * virtual machine (i.e. Standard, Premium).
 * @member {string} [formulaContent.virtualMachineCreationSource] Tells source
 * of creation of lab virtual machine. Output property only. Possible values
 * include: 'FromCustomImage', 'FromGalleryImage'
 * @member {string} [formulaContent.environmentId] The resource ID of the
 * environment that contains this virtual machine, if any.
 * @member {array} [formulaContent.dataDiskParameters] New or existing data
 * disks to attach to the virtual machine after creation
 * @member {array} [formulaContent.scheduleParameters] Virtual Machine
 * schedules to be created
 * @member {string} [formulaContent.lastKnownPowerState] Last known compute
 * power state captured in DTL
 * @member {string} [formulaContent.name] The name of the virtual machine or
 * environment
 * @member {string} [formulaContent.location] The location of the new virtual
 * machine or environment
 * @member {object} [formulaContent.tags] The tags of the resource.
 * @member {object} [vm] Information about a VM from which a formula is to be
 * created.
 * @member {string} [vm.labVmId] The identifier of the VM from which a formula
 * is to be created.
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 */
export interface Formula extends Resource {
  description?: string;
  author?: string;
  osType?: string;
  readonly creationDate?: Date;
  formulaContent?: LabVirtualMachineCreationParameter;
  vm?: FormulaPropertiesFromVm;
  readonly provisioningState?: string;
  readonly uniqueIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the GalleryImageReferenceFragment class.
 * @constructor
 * The reference information for an Azure Marketplace image.
 *
 * @member {string} [offer] The offer of the gallery image.
 * @member {string} [publisher] The publisher of the gallery image.
 * @member {string} [sku] The SKU of the gallery image.
 * @member {string} [osType] The OS type of the gallery image.
 * @member {string} [version] The version of the gallery image.
 */
export interface GalleryImageReferenceFragment {
  offer?: string;
  publisher?: string;
  sku?: string;
  osType?: string;
  version?: string;
}

/**
 * @class
 * Initializes a new instance of the InboundNatRuleFragment class.
 * @constructor
 * A rule for NAT - exposing a VM's port (backendPort) on the public IP address
 * using a load balancer.
 *
 * @member {string} [transportProtocol] The transport protocol for the
 * endpoint. Possible values include: 'Tcp', 'Udp'
 * @member {number} [frontendPort] The external endpoint port of the inbound
 * connection. Possible values range between 1 and 65535, inclusive. If
 * unspecified, a value will be allocated automatically.
 * @member {number} [backendPort] The port to which the external traffic will
 * be redirected.
 */
export interface InboundNatRuleFragment {
  transportProtocol?: string;
  frontendPort?: number;
  backendPort?: number;
}

/**
 * @class
 * Initializes a new instance of the SharedPublicIpAddressConfigurationFragment class.
 * @constructor
 * Properties of a virtual machine that determine how it is connected to a load
 * balancer.
 *
 * @member {array} [inboundNatRules] The incoming NAT rules
 */
export interface SharedPublicIpAddressConfigurationFragment {
  inboundNatRules?: InboundNatRuleFragment[];
}

/**
 * @class
 * Initializes a new instance of the NetworkInterfacePropertiesFragment class.
 * @constructor
 * Properties of a network interface.
 *
 * @member {string} [virtualNetworkId] The resource ID of the virtual network.
 * @member {string} [subnetId] The resource ID of the sub net.
 * @member {string} [publicIpAddressId] The resource ID of the public IP
 * address.
 * @member {string} [publicIpAddress] The public IP address.
 * @member {string} [privateIpAddress] The private IP address.
 * @member {string} [dnsName] The DNS name.
 * @member {string} [rdpAuthority] The RdpAuthority property is a server DNS
 * host name or IP address followed by the service port number for RDP (Remote
 * Desktop Protocol).
 * @member {string} [sshAuthority] The SshAuthority property is a server DNS
 * host name or IP address followed by the service port number for SSH.
 * @member {object} [sharedPublicIpAddressConfiguration] The configuration for
 * sharing a public IP address across multiple virtual machines.
 * @member {array} [sharedPublicIpAddressConfiguration.inboundNatRules] The
 * incoming NAT rules
 */
export interface NetworkInterfacePropertiesFragment {
  virtualNetworkId?: string;
  subnetId?: string;
  publicIpAddressId?: string;
  publicIpAddress?: string;
  privateIpAddress?: string;
  dnsName?: string;
  rdpAuthority?: string;
  sshAuthority?: string;
  sharedPublicIpAddressConfiguration?: SharedPublicIpAddressConfigurationFragment;
}

/**
 * @class
 * Initializes a new instance of the ScheduleCreationParameterFragment class.
 * @constructor
 * Properties for creating a schedule.
 *
 * @member {string} [status] The status of the schedule (i.e. Enabled,
 * Disabled). Possible values include: 'Enabled', 'Disabled'
 * @member {string} [taskType] The task type of the schedule (e.g.
 * LabVmsShutdownTask, LabVmAutoStart).
 * @member {object} [weeklyRecurrence] If the schedule will occur only some
 * days of the week, specify the weekly recurrence.
 * @member {array} [weeklyRecurrence.weekdays] The days of the week for which
 * the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
 * @member {string} [weeklyRecurrence.time] The time of the day the schedule
 * will occur.
 * @member {object} [dailyRecurrence] If the schedule will occur once each day
 * of the week, specify the daily recurrence.
 * @member {string} [dailyRecurrence.time] The time of day the schedule will
 * occur.
 * @member {object} [hourlyRecurrence] If the schedule will occur multiple
 * times a day, specify the hourly recurrence.
 * @member {number} [hourlyRecurrence.minute] Minutes of the hour the schedule
 * will run.
 * @member {string} [timeZoneId] The time zone ID (e.g. Pacific Standard time).
 * @member {object} [notificationSettings] Notification settings.
 * @member {string} [notificationSettings.status] If notifications are enabled
 * for this schedule (i.e. Enabled, Disabled). Possible values include:
 * 'Enabled', 'Disabled'
 * @member {number} [notificationSettings.timeInMinutes] Time in minutes before
 * event at which notification will be sent.
 * @member {string} [notificationSettings.webhookUrl] The webhook URL to which
 * the notification will be sent.
 * @member {string} [notificationSettings.emailRecipient] The email recipient
 * to send notifications to (can be a list of semi-colon seperated email
 * addresses).
 * @member {string} [notificationSettings.notificationLocale] The locale to use
 * when sending a notification (fallback for unsupported languages is EN).
 * @member {string} [targetResourceId] The resource ID to which the schedule
 * belongs
 * @member {string} [name] The name of the virtual machine or environment
 * @member {string} [location] The location of the new virtual machine or
 * environment
 * @member {object} [tags] The tags of the resource.
 */
export interface ScheduleCreationParameterFragment {
  status?: string;
  taskType?: string;
  weeklyRecurrence?: WeekDetailsFragment;
  dailyRecurrence?: DayDetailsFragment;
  hourlyRecurrence?: HourDetailsFragment;
  timeZoneId?: string;
  notificationSettings?: NotificationSettingsFragment;
  targetResourceId?: string;
  name?: string;
  location?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the LabVirtualMachineCreationParameterFragment class.
 * @constructor
 * Properties for creating a virtual machine.
 *
 * @member {object} [bulkCreationParameters] The number of virtual machine
 * instances to create.
 * @member {number} [bulkCreationParameters.instanceCount] The number of
 * virtual machine instances to create.
 * @member {string} [notes] The notes of the virtual machine.
 * @member {string} [ownerObjectId] The object identifier of the owner of the
 * virtual machine.
 * @member {string} [ownerUserPrincipalName] The user principal name of the
 * virtual machine owner.
 * @member {string} [createdByUserId] The object identifier of the creator of
 * the virtual machine.
 * @member {string} [createdByUser] The email address of creator of the virtual
 * machine.
 * @member {date} [createdDate] The creation date of the virtual machine.
 * @member {string} [computeId] The resource identifier (Microsoft.Compute) of
 * the virtual machine.
 * @member {string} [customImageId] The custom image identifier of the virtual
 * machine.
 * @member {string} [osType] The OS type of the virtual machine.
 * @member {string} [size] The size of the virtual machine.
 * @member {string} [userName] The user name of the virtual machine.
 * @member {string} [password] The password of the virtual machine
 * administrator.
 * @member {string} [sshKey] The SSH key of the virtual machine administrator.
 * @member {boolean} [isAuthenticationWithSshKey] Indicates whether this
 * virtual machine uses an SSH key for authentication.
 * @member {string} [fqdn] The fully-qualified domain name of the virtual
 * machine.
 * @member {string} [labSubnetName] The lab subnet name of the virtual machine.
 * @member {string} [labVirtualNetworkId] The lab virtual network identifier of
 * the virtual machine.
 * @member {boolean} [disallowPublicIpAddress] Indicates whether the virtual
 * machine is to be created without a public IP address.
 * @member {array} [artifacts] The artifacts to be installed on the virtual
 * machine.
 * @member {object} [artifactDeploymentStatus] The artifact deployment status
 * for the virtual machine.
 * @member {string} [artifactDeploymentStatus.deploymentStatus] The deployment
 * status of the artifact.
 * @member {number} [artifactDeploymentStatus.artifactsApplied] The total count
 * of the artifacts that were successfully applied.
 * @member {number} [artifactDeploymentStatus.totalArtifacts] The total count
 * of the artifacts that were tentatively applied.
 * @member {object} [galleryImageReference] The Microsoft Azure Marketplace
 * image reference of the virtual machine.
 * @member {string} [galleryImageReference.offer] The offer of the gallery
 * image.
 * @member {string} [galleryImageReference.publisher] The publisher of the
 * gallery image.
 * @member {string} [galleryImageReference.sku] The SKU of the gallery image.
 * @member {string} [galleryImageReference.osType] The OS type of the gallery
 * image.
 * @member {string} [galleryImageReference.version] The version of the gallery
 * image.
 * @member {string} [planId] The id of the plan associated with the virtual
 * machine image
 * @member {object} [networkInterface] The network interface properties.
 * @member {string} [networkInterface.virtualNetworkId] The resource ID of the
 * virtual network.
 * @member {string} [networkInterface.subnetId] The resource ID of the sub net.
 * @member {string} [networkInterface.publicIpAddressId] The resource ID of the
 * public IP address.
 * @member {string} [networkInterface.publicIpAddress] The public IP address.
 * @member {string} [networkInterface.privateIpAddress] The private IP address.
 * @member {string} [networkInterface.dnsName] The DNS name.
 * @member {string} [networkInterface.rdpAuthority] The RdpAuthority property
 * is a server DNS host name or IP address followed by the service port number
 * for RDP (Remote Desktop Protocol).
 * @member {string} [networkInterface.sshAuthority] The SshAuthority property
 * is a server DNS host name or IP address followed by the service port number
 * for SSH.
 * @member {object} [networkInterface.sharedPublicIpAddressConfiguration] The
 * configuration for sharing a public IP address across multiple virtual
 * machines.
 * @member {array}
 * [networkInterface.sharedPublicIpAddressConfiguration.inboundNatRules] The
 * incoming NAT rules
 * @member {date} [expirationDate] The expiration date for VM.
 * @member {boolean} [allowClaim] Indicates whether another user can take
 * ownership of the virtual machine
 * @member {string} [storageType] Storage type to use for virtual machine (i.e.
 * Standard, Premium).
 * @member {string} [virtualMachineCreationSource] Tells source of creation of
 * lab virtual machine. Output property only. Possible values include:
 * 'FromCustomImage', 'FromGalleryImage'
 * @member {string} [environmentId] The resource ID of the environment that
 * contains this virtual machine, if any.
 * @member {array} [dataDiskParameters] New or existing data disks to attach to
 * the virtual machine after creation
 * @member {array} [scheduleParameters] Virtual Machine schedules to be created
 * @member {string} [lastKnownPowerState] Last known compute power state
 * captured in DTL
 * @member {string} [name] The name of the virtual machine or environment
 * @member {string} [location] The location of the new virtual machine or
 * environment
 * @member {object} [tags] The tags of the resource.
 */
export interface LabVirtualMachineCreationParameterFragment {
  bulkCreationParameters?: BulkCreationParametersFragment;
  notes?: string;
  ownerObjectId?: string;
  ownerUserPrincipalName?: string;
  createdByUserId?: string;
  createdByUser?: string;
  createdDate?: Date;
  computeId?: string;
  customImageId?: string;
  osType?: string;
  size?: string;
  userName?: string;
  password?: string;
  sshKey?: string;
  isAuthenticationWithSshKey?: boolean;
  fqdn?: string;
  labSubnetName?: string;
  labVirtualNetworkId?: string;
  disallowPublicIpAddress?: boolean;
  artifacts?: ArtifactInstallPropertiesFragment[];
  artifactDeploymentStatus?: ArtifactDeploymentStatusPropertiesFragment;
  galleryImageReference?: GalleryImageReferenceFragment;
  planId?: string;
  networkInterface?: NetworkInterfacePropertiesFragment;
  expirationDate?: Date;
  allowClaim?: boolean;
  storageType?: string;
  virtualMachineCreationSource?: string;
  environmentId?: string;
  dataDiskParameters?: DataDiskPropertiesFragment[];
  scheduleParameters?: ScheduleCreationParameterFragment[];
  lastKnownPowerState?: string;
  name?: string;
  location?: string;
  tags?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the FormulaPropertiesFromVmFragment class.
 * @constructor
 * Information about a VM from which a formula is to be created.
 *
 * @member {string} [labVmId] The identifier of the VM from which a formula is
 * to be created.
 */
export interface FormulaPropertiesFromVmFragment {
  labVmId?: string;
}

/**
 * @class
 * Initializes a new instance of the FormulaFragment class.
 * @constructor
 * A formula for creating a VM, specifying an image base and other parameters
 *
 * @member {string} [description] The description of the formula.
 * @member {string} [author] The author of the formula.
 * @member {string} [osType] The OS type of the formula.
 * @member {object} [formulaContent] The content of the formula.
 * @member {object} [formulaContent.bulkCreationParameters] The number of
 * virtual machine instances to create.
 * @member {number} [formulaContent.bulkCreationParameters.instanceCount] The
 * number of virtual machine instances to create.
 * @member {string} [formulaContent.notes] The notes of the virtual machine.
 * @member {string} [formulaContent.ownerObjectId] The object identifier of the
 * owner of the virtual machine.
 * @member {string} [formulaContent.ownerUserPrincipalName] The user principal
 * name of the virtual machine owner.
 * @member {string} [formulaContent.createdByUserId] The object identifier of
 * the creator of the virtual machine.
 * @member {string} [formulaContent.createdByUser] The email address of creator
 * of the virtual machine.
 * @member {date} [formulaContent.createdDate] The creation date of the virtual
 * machine.
 * @member {string} [formulaContent.computeId] The resource identifier
 * (Microsoft.Compute) of the virtual machine.
 * @member {string} [formulaContent.customImageId] The custom image identifier
 * of the virtual machine.
 * @member {string} [formulaContent.osType] The OS type of the virtual machine.
 * @member {string} [formulaContent.size] The size of the virtual machine.
 * @member {string} [formulaContent.userName] The user name of the virtual
 * machine.
 * @member {string} [formulaContent.password] The password of the virtual
 * machine administrator.
 * @member {string} [formulaContent.sshKey] The SSH key of the virtual machine
 * administrator.
 * @member {boolean} [formulaContent.isAuthenticationWithSshKey] Indicates
 * whether this virtual machine uses an SSH key for authentication.
 * @member {string} [formulaContent.fqdn] The fully-qualified domain name of
 * the virtual machine.
 * @member {string} [formulaContent.labSubnetName] The lab subnet name of the
 * virtual machine.
 * @member {string} [formulaContent.labVirtualNetworkId] The lab virtual
 * network identifier of the virtual machine.
 * @member {boolean} [formulaContent.disallowPublicIpAddress] Indicates whether
 * the virtual machine is to be created without a public IP address.
 * @member {array} [formulaContent.artifacts] The artifacts to be installed on
 * the virtual machine.
 * @member {object} [formulaContent.artifactDeploymentStatus] The artifact
 * deployment status for the virtual machine.
 * @member {string} [formulaContent.artifactDeploymentStatus.deploymentStatus]
 * The deployment status of the artifact.
 * @member {number} [formulaContent.artifactDeploymentStatus.artifactsApplied]
 * The total count of the artifacts that were successfully applied.
 * @member {number} [formulaContent.artifactDeploymentStatus.totalArtifacts]
 * The total count of the artifacts that were tentatively applied.
 * @member {object} [formulaContent.galleryImageReference] The Microsoft Azure
 * Marketplace image reference of the virtual machine.
 * @member {string} [formulaContent.galleryImageReference.offer] The offer of
 * the gallery image.
 * @member {string} [formulaContent.galleryImageReference.publisher] The
 * publisher of the gallery image.
 * @member {string} [formulaContent.galleryImageReference.sku] The SKU of the
 * gallery image.
 * @member {string} [formulaContent.galleryImageReference.osType] The OS type
 * of the gallery image.
 * @member {string} [formulaContent.galleryImageReference.version] The version
 * of the gallery image.
 * @member {string} [formulaContent.planId] The id of the plan associated with
 * the virtual machine image
 * @member {object} [formulaContent.networkInterface] The network interface
 * properties.
 * @member {string} [formulaContent.networkInterface.virtualNetworkId] The
 * resource ID of the virtual network.
 * @member {string} [formulaContent.networkInterface.subnetId] The resource ID
 * of the sub net.
 * @member {string} [formulaContent.networkInterface.publicIpAddressId] The
 * resource ID of the public IP address.
 * @member {string} [formulaContent.networkInterface.publicIpAddress] The
 * public IP address.
 * @member {string} [formulaContent.networkInterface.privateIpAddress] The
 * private IP address.
 * @member {string} [formulaContent.networkInterface.dnsName] The DNS name.
 * @member {string} [formulaContent.networkInterface.rdpAuthority] The
 * RdpAuthority property is a server DNS host name or IP address followed by
 * the service port number for RDP (Remote Desktop Protocol).
 * @member {string} [formulaContent.networkInterface.sshAuthority] The
 * SshAuthority property is a server DNS host name or IP address followed by
 * the service port number for SSH.
 * @member {object}
 * [formulaContent.networkInterface.sharedPublicIpAddressConfiguration] The
 * configuration for sharing a public IP address across multiple virtual
 * machines.
 * @member {array}
 * [formulaContent.networkInterface.sharedPublicIpAddressConfiguration.inboundNatRules]
 * The incoming NAT rules
 * @member {date} [formulaContent.expirationDate] The expiration date for VM.
 * @member {boolean} [formulaContent.allowClaim] Indicates whether another user
 * can take ownership of the virtual machine
 * @member {string} [formulaContent.storageType] Storage type to use for
 * virtual machine (i.e. Standard, Premium).
 * @member {string} [formulaContent.virtualMachineCreationSource] Tells source
 * of creation of lab virtual machine. Output property only. Possible values
 * include: 'FromCustomImage', 'FromGalleryImage'
 * @member {string} [formulaContent.environmentId] The resource ID of the
 * environment that contains this virtual machine, if any.
 * @member {array} [formulaContent.dataDiskParameters] New or existing data
 * disks to attach to the virtual machine after creation
 * @member {array} [formulaContent.scheduleParameters] Virtual Machine
 * schedules to be created
 * @member {string} [formulaContent.lastKnownPowerState] Last known compute
 * power state captured in DTL
 * @member {string} [formulaContent.name] The name of the virtual machine or
 * environment
 * @member {string} [formulaContent.location] The location of the new virtual
 * machine or environment
 * @member {object} [formulaContent.tags] The tags of the resource.
 * @member {object} [vm] Information about a VM from which a formula is to be
 * created.
 * @member {string} [vm.labVmId] The identifier of the VM from which a formula
 * is to be created.
 */
export interface FormulaFragment extends UpdateResource {
  description?: string;
  author?: string;
  osType?: string;
  formulaContent?: LabVirtualMachineCreationParameterFragment;
  vm?: FormulaPropertiesFromVmFragment;
}

/**
 * @class
 * Initializes a new instance of the GalleryImage class.
 * @constructor
 * A gallery image.
 *
 * @member {string} [author] The author of the gallery image.
 * @member {date} [createdDate] The creation date of the gallery image.
 * @member {string} [description] The description of the gallery image.
 * @member {object} [imageReference] The image reference of the gallery image.
 * @member {string} [imageReference.offer] The offer of the gallery image.
 * @member {string} [imageReference.publisher] The publisher of the gallery
 * image.
 * @member {string} [imageReference.sku] The SKU of the gallery image.
 * @member {string} [imageReference.osType] The OS type of the gallery image.
 * @member {string} [imageReference.version] The version of the gallery image.
 * @member {string} [icon] The icon of the gallery image.
 * @member {boolean} [enabled] Indicates whether this gallery image is enabled.
 * @member {string} [planId] The third party plan that applies to this image
 * @member {boolean} [isPlanAuthorized] Indicates if the plan has been
 * authorized for programmatic deployment.
 */
export interface GalleryImage extends Resource {
  author?: string;
  readonly createdDate?: Date;
  description?: string;
  imageReference?: GalleryImageReference;
  icon?: string;
  enabled?: boolean;
  planId?: string;
  isPlanAuthorized?: boolean;
}

/**
 * @class
 * Initializes a new instance of the ParameterInfo class.
 * @constructor
 * Information about an artifact's parameter.
 *
 * @member {string} [name] The name of the artifact parameter.
 * @member {string} [value] The value of the artifact parameter.
 */
export interface ParameterInfo {
  name?: string;
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the GenerateArmTemplateRequest class.
 * @constructor
 * Parameters for generating an ARM template for deploying artifacts.
 *
 * @member {string} [virtualMachineName] The resource name of the virtual
 * machine.
 * @member {array} [parameters] The parameters of the ARM template.
 * @member {string} [location] The location of the virtual machine.
 * @member {string} [fileUploadOptions] Options for uploading the files for the
 * artifact. UploadFilesAndGenerateSasTokens is the default value. Possible
 * values include: 'UploadFilesAndGenerateSasTokens', 'None'
 */
export interface GenerateArmTemplateRequest {
  virtualMachineName?: string;
  parameters?: ParameterInfo[];
  location?: string;
  fileUploadOptions?: string;
}

/**
 * @class
 * Initializes a new instance of the GenerateUploadUriParameter class.
 * @constructor
 * Properties for generating an upload URI.
 *
 * @member {string} [blobName] The blob name of the upload URI.
 */
export interface GenerateUploadUriParameter {
  blobName?: string;
}

/**
 * @class
 * Initializes a new instance of the GenerateUploadUriResponse class.
 * @constructor
 * Reponse body for generating an upload URI.
 *
 * @member {string} [uploadUri] The upload URI for the VHD.
 */
export interface GenerateUploadUriResponse {
  uploadUri?: string;
}

/**
 * @class
 * Initializes a new instance of the IdentityProperties class.
 * @constructor
 * Properties of a managed identity
 *
 * @member {string} [type] Managed identity.
 * @member {string} [principalId] The principal id of resource identity.
 * @member {string} [tenantId] The tenant identifier of resource.
 * @member {string} [clientSecretUrl] The client secret URL of the identity.
 */
export interface IdentityProperties {
  type?: string;
  principalId?: string;
  tenantId?: string;
  clientSecretUrl?: string;
}

/**
 * @class
 * Initializes a new instance of the ImportLabVirtualMachineRequest class.
 * @constructor
 * This represents the payload required to import a virtual machine from a
 * different lab into the current one
 *
 * @member {string} [sourceVirtualMachineResourceId] The full resource ID of
 * the virtual machine to be imported.
 * @member {string} [destinationVirtualMachineName] The name of the virtual
 * machine in the destination lab
 */
export interface ImportLabVirtualMachineRequest {
  sourceVirtualMachineResourceId?: string;
  destinationVirtualMachineName?: string;
}

/**
 * @class
 * Initializes a new instance of the LabAnnouncementProperties class.
 * @constructor
 * Properties of a lab's announcement banner
 *
 * @member {string} [title] The plain text title for the lab announcement
 * @member {string} [markdown] The markdown text (if any) that this lab
 * displays in the UI. If left empty/null, nothing will be shown.
 * @member {string} [enabled] Is the lab announcement active/enabled at this
 * time?. Possible values include: 'Enabled', 'Disabled'
 * @member {date} [expirationDate] The time at which the announcement expires
 * (null for never)
 * @member {boolean} [expired] Has this announcement expired?
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 */
export interface LabAnnouncementProperties {
  title?: string;
  markdown?: string;
  enabled?: string;
  expirationDate?: Date;
  expired?: boolean;
  readonly provisioningState?: string;
  readonly uniqueIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the LabSupportProperties class.
 * @constructor
 * Properties of a lab's support banner
 *
 * @member {string} [enabled] Is the lab support banner active/enabled at this
 * time?. Possible values include: 'Enabled', 'Disabled'
 * @member {string} [markdown] The markdown text (if any) that this lab
 * displays in the UI. If left empty/null, nothing will be shown.
 */
export interface LabSupportProperties {
  enabled?: string;
  markdown?: string;
}

/**
 * @class
 * Initializes a new instance of the Lab class.
 * @constructor
 * A lab.
 *
 * @member {string} [defaultStorageAccount] The lab's default storage account.
 * @member {string} [defaultPremiumStorageAccount] The lab's default premium
 * storage account.
 * @member {string} [artifactsStorageAccount] The lab's artifact storage
 * account.
 * @member {string} [premiumDataDiskStorageAccount] The lab's premium data disk
 * storage account.
 * @member {string} [vaultName] The lab's Key vault.
 * @member {string} [labStorageType] Type of storage used by the lab. It can be
 * either Premium or Standard. Default is Premium. Possible values include:
 * 'Standard', 'Premium'
 * @member {array} [mandatoryArtifactsResourceIdsLinux] The ordered list of
 * artifact resource IDs that should be applied on all Linux VM creations by
 * default, prior to the artifacts specified by the user.
 * @member {array} [mandatoryArtifactsResourceIdsWindows] The ordered list of
 * artifact resource IDs that should be applied on all Windows VM creations by
 * default, prior to the artifacts specified by the user.
 * @member {date} [createdDate] The creation date of the lab.
 * @member {string} [premiumDataDisks] The setting to enable usage of premium
 * data disks.
 * When its value is 'Enabled', creation of standard or premium data disks is
 * allowed.
 * When its value is 'Disabled', only creation of standard data disks is
 * allowed. Possible values include: 'Disabled', 'Enabled'
 * @member {string} [environmentPermission] The access rights to be granted to
 * the user when provisioning an environment. Possible values include:
 * 'Reader', 'Contributor'
 * @member {object} [announcement] The properties of any lab announcement
 * associated with this lab
 * @member {string} [announcement.title] The plain text title for the lab
 * announcement
 * @member {string} [announcement.markdown] The markdown text (if any) that
 * this lab displays in the UI. If left empty/null, nothing will be shown.
 * @member {string} [announcement.enabled] Is the lab announcement
 * active/enabled at this time?. Possible values include: 'Enabled', 'Disabled'
 * @member {date} [announcement.expirationDate] The time at which the
 * announcement expires (null for never)
 * @member {boolean} [announcement.expired] Has this announcement expired?
 * @member {string} [announcement.provisioningState] The provisioning status of
 * the resource.
 * @member {string} [announcement.uniqueIdentifier] The unique immutable
 * identifier of a resource (Guid).
 * @member {object} [support] The properties of any lab support message
 * associated with this lab
 * @member {string} [support.enabled] Is the lab support banner active/enabled
 * at this time?. Possible values include: 'Enabled', 'Disabled'
 * @member {string} [support.markdown] The markdown text (if any) that this lab
 * displays in the UI. If left empty/null, nothing will be shown.
 * @member {string} [vmCreationResourceGroup] The resource group in which lab
 * virtual machines will be created in.
 * @member {string} [publicIpId] The public IP address for the lab's load
 * balancer.
 * @member {string} [loadBalancerId] The load balancer used to for lab VMs that
 * use shared IP address.
 * @member {string} [networkSecurityGroupId] The Network Security Group
 * attached to the lab VMs Network interfaces to restrict open ports.
 * @member {object} [extendedProperties] Extended properties of the lab used
 * for experimental features
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 */
export interface Lab extends Resource {
  readonly defaultStorageAccount?: string;
  readonly defaultPremiumStorageAccount?: string;
  readonly artifactsStorageAccount?: string;
  readonly premiumDataDiskStorageAccount?: string;
  readonly vaultName?: string;
  labStorageType?: string;
  mandatoryArtifactsResourceIdsLinux?: string[];
  mandatoryArtifactsResourceIdsWindows?: string[];
  readonly createdDate?: Date;
  premiumDataDisks?: string;
  environmentPermission?: string;
  announcement?: LabAnnouncementProperties;
  support?: LabSupportProperties;
  readonly vmCreationResourceGroup?: string;
  readonly publicIpId?: string;
  readonly loadBalancerId?: string;
  readonly networkSecurityGroupId?: string;
  extendedProperties?: { [propertyName: string]: string };
  readonly provisioningState?: string;
  readonly uniqueIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the LabAnnouncementPropertiesFragment class.
 * @constructor
 * Properties of a lab's announcement banner
 *
 * @member {string} [title] The plain text title for the lab announcement
 * @member {string} [markdown] The markdown text (if any) that this lab
 * displays in the UI. If left empty/null, nothing will be shown.
 * @member {string} [enabled] Is the lab announcement active/enabled at this
 * time?. Possible values include: 'Enabled', 'Disabled'
 * @member {date} [expirationDate] The time at which the announcement expires
 * (null for never)
 * @member {boolean} [expired] Has this announcement expired?
 */
export interface LabAnnouncementPropertiesFragment {
  title?: string;
  markdown?: string;
  enabled?: string;
  expirationDate?: Date;
  expired?: boolean;
}

/**
 * @class
 * Initializes a new instance of the TargetCostProperties class.
 * @constructor
 * Properties of a cost target.
 *
 * @member {string} [status] Target cost status. Possible values include:
 * 'Enabled', 'Disabled'
 * @member {number} [target] Lab target cost
 * @member {array} [costThresholds] Cost thresholds.
 * @member {date} [cycleStartDateTime] Reporting cycle start date.
 * @member {date} [cycleEndDateTime] Reporting cycle end date.
 * @member {string} [cycleType] Reporting cycle type. Possible values include:
 * 'CalendarMonth', 'Custom'
 */
export interface TargetCostProperties {
  status?: string;
  target?: number;
  costThresholds?: CostThresholdProperties[];
  cycleStartDateTime?: Date;
  cycleEndDateTime?: Date;
  cycleType?: string;
}

/**
 * @class
 * Initializes a new instance of the LabCostSummaryProperties class.
 * @constructor
 * The properties of the cost summary.
 *
 * @member {number} [estimatedLabCost] The cost component of the cost item.
 */
export interface LabCostSummaryProperties {
  estimatedLabCost?: number;
}

/**
 * @class
 * Initializes a new instance of the LabCostDetailsProperties class.
 * @constructor
 * The properties of a lab cost item.
 *
 * @member {date} [date] The date of the cost item.
 * @member {number} [cost] The cost component of the cost item.
 * @member {string} [costType] The type of the cost. Possible values include:
 * 'Unavailable', 'Reported', 'Projected'
 */
export interface LabCostDetailsProperties {
  date?: Date;
  cost?: number;
  costType?: string;
}

/**
 * @class
 * Initializes a new instance of the LabResourceCostProperties class.
 * @constructor
 * The properties of a resource cost item.
 *
 * @member {string} [resourcename] The name of the resource.
 * @member {string} [resourceUId] The unique identifier of the resource.
 * @member {number} [resourceCost] The cost component of the resource cost
 * item.
 * @member {string} [resourceType] The logical resource type (ex.
 * virtualmachine, storageaccount)
 * @member {string} [resourceOwner] The owner of the resource (ex.
 * janedoe@microsoft.com)
 * @member {string} [resourcePricingTier] The category of the resource (ex.
 * Premium_LRS, Standard_DS1)
 * @member {string} [resourceStatus] The status of the resource (ex. Active)
 * @member {string} [resourceId] The ID of the resource
 * @member {string} [externalResourceId] The ID of the external resource
 */
export interface LabResourceCostProperties {
  resourcename?: string;
  resourceUId?: string;
  resourceCost?: number;
  resourceType?: string;
  resourceOwner?: string;
  resourcePricingTier?: string;
  resourceStatus?: string;
  resourceId?: string;
  externalResourceId?: string;
}

/**
 * @class
 * Initializes a new instance of the LabCost class.
 * @constructor
 * A cost item.
 *
 * @member {object} [targetCost] The target cost properties
 * @member {string} [targetCost.status] Target cost status. Possible values
 * include: 'Enabled', 'Disabled'
 * @member {number} [targetCost.target] Lab target cost
 * @member {array} [targetCost.costThresholds] Cost thresholds.
 * @member {date} [targetCost.cycleStartDateTime] Reporting cycle start date.
 * @member {date} [targetCost.cycleEndDateTime] Reporting cycle end date.
 * @member {string} [targetCost.cycleType] Reporting cycle type. Possible
 * values include: 'CalendarMonth', 'Custom'
 * @member {object} [labCostSummary] The lab cost summary component of the cost
 * data.
 * @member {number} [labCostSummary.estimatedLabCost] The cost component of the
 * cost item.
 * @member {array} [labCostDetails] The lab cost details component of the cost
 * data.
 * @member {array} [resourceCosts] The resource cost component of the cost
 * data.
 * @member {string} [currencyCode] The currency code of the cost.
 * @member {date} [startDateTime] The start time of the cost data.
 * @member {date} [endDateTime] The end time of the cost data.
 * @member {date} [createdDate] The creation date of the cost.
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 */
export interface LabCost extends Resource {
  targetCost?: TargetCostProperties;
  readonly labCostSummary?: LabCostSummaryProperties;
  readonly labCostDetails?: LabCostDetailsProperties[];
  readonly resourceCosts?: LabResourceCostProperties[];
  currencyCode?: string;
  startDateTime?: Date;
  endDateTime?: Date;
  createdDate?: Date;
  readonly provisioningState?: string;
  readonly uniqueIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the LabSupportPropertiesFragment class.
 * @constructor
 * Properties of a lab's support banner
 *
 * @member {string} [enabled] Is the lab support banner active/enabled at this
 * time?. Possible values include: 'Enabled', 'Disabled'
 * @member {string} [markdown] The markdown text (if any) that this lab
 * displays in the UI. If left empty/null, nothing will be shown.
 */
export interface LabSupportPropertiesFragment {
  enabled?: string;
  markdown?: string;
}

/**
 * @class
 * Initializes a new instance of the LabFragment class.
 * @constructor
 * A lab.
 *
 * @member {string} [labStorageType] Type of storage used by the lab. It can be
 * either Premium or Standard. Default is Premium. Possible values include:
 * 'Standard', 'Premium'
 * @member {array} [mandatoryArtifactsResourceIdsLinux] The ordered list of
 * artifact resource IDs that should be applied on all Linux VM creations by
 * default, prior to the artifacts specified by the user.
 * @member {array} [mandatoryArtifactsResourceIdsWindows] The ordered list of
 * artifact resource IDs that should be applied on all Windows VM creations by
 * default, prior to the artifacts specified by the user.
 * @member {string} [premiumDataDisks] The setting to enable usage of premium
 * data disks.
 * When its value is 'Enabled', creation of standard or premium data disks is
 * allowed.
 * When its value is 'Disabled', only creation of standard data disks is
 * allowed. Possible values include: 'Disabled', 'Enabled'
 * @member {string} [environmentPermission] The access rights to be granted to
 * the user when provisioning an environment. Possible values include:
 * 'Reader', 'Contributor'
 * @member {object} [announcement] The properties of any lab announcement
 * associated with this lab
 * @member {string} [announcement.title] The plain text title for the lab
 * announcement
 * @member {string} [announcement.markdown] The markdown text (if any) that
 * this lab displays in the UI. If left empty/null, nothing will be shown.
 * @member {string} [announcement.enabled] Is the lab announcement
 * active/enabled at this time?. Possible values include: 'Enabled', 'Disabled'
 * @member {date} [announcement.expirationDate] The time at which the
 * announcement expires (null for never)
 * @member {boolean} [announcement.expired] Has this announcement expired?
 * @member {object} [support] The properties of any lab support message
 * associated with this lab
 * @member {string} [support.enabled] Is the lab support banner active/enabled
 * at this time?. Possible values include: 'Enabled', 'Disabled'
 * @member {string} [support.markdown] The markdown text (if any) that this lab
 * displays in the UI. If left empty/null, nothing will be shown.
 * @member {object} [extendedProperties] Extended properties of the lab used
 * for experimental features
 */
export interface LabFragment extends UpdateResource {
  labStorageType?: string;
  mandatoryArtifactsResourceIdsLinux?: string[];
  mandatoryArtifactsResourceIdsWindows?: string[];
  premiumDataDisks?: string;
  environmentPermission?: string;
  announcement?: LabAnnouncementPropertiesFragment;
  support?: LabSupportPropertiesFragment;
  extendedProperties?: { [propertyName: string]: string };
}

/**
 * @class
 * Initializes a new instance of the LabVhd class.
 * @constructor
 * Properties of a VHD in the lab.
 *
 * @member {string} [id] The URI to the VHD.
 */
export interface LabVhd {
  id?: string;
}

/**
 * @class
 * Initializes a new instance of the LabVirtualMachine class.
 * @constructor
 * A virtual machine.
 *
 * @member {string} [notes] The notes of the virtual machine.
 * @member {string} [ownerObjectId] The object identifier of the owner of the
 * virtual machine.
 * @member {string} [ownerUserPrincipalName] The user principal name of the
 * virtual machine owner.
 * @member {string} [createdByUserId] The object identifier of the creator of
 * the virtual machine.
 * @member {string} [createdByUser] The email address of creator of the virtual
 * machine.
 * @member {date} [createdDate] The creation date of the virtual machine.
 * @member {string} [computeId] The resource identifier (Microsoft.Compute) of
 * the virtual machine.
 * @member {string} [customImageId] The custom image identifier of the virtual
 * machine.
 * @member {string} [osType] The OS type of the virtual machine.
 * @member {string} [size] The size of the virtual machine.
 * @member {string} [userName] The user name of the virtual machine.
 * @member {string} [password] The password of the virtual machine
 * administrator.
 * @member {string} [sshKey] The SSH key of the virtual machine administrator.
 * @member {boolean} [isAuthenticationWithSshKey] Indicates whether this
 * virtual machine uses an SSH key for authentication.
 * @member {string} [fqdn] The fully-qualified domain name of the virtual
 * machine.
 * @member {string} [labSubnetName] The lab subnet name of the virtual machine.
 * @member {string} [labVirtualNetworkId] The lab virtual network identifier of
 * the virtual machine.
 * @member {boolean} [disallowPublicIpAddress] Indicates whether the virtual
 * machine is to be created without a public IP address.
 * @member {array} [artifacts] The artifacts to be installed on the virtual
 * machine.
 * @member {object} [artifactDeploymentStatus] The artifact deployment status
 * for the virtual machine.
 * @member {string} [artifactDeploymentStatus.deploymentStatus] The deployment
 * status of the artifact.
 * @member {number} [artifactDeploymentStatus.artifactsApplied] The total count
 * of the artifacts that were successfully applied.
 * @member {number} [artifactDeploymentStatus.totalArtifacts] The total count
 * of the artifacts that were tentatively applied.
 * @member {object} [galleryImageReference] The Microsoft Azure Marketplace
 * image reference of the virtual machine.
 * @member {string} [galleryImageReference.offer] The offer of the gallery
 * image.
 * @member {string} [galleryImageReference.publisher] The publisher of the
 * gallery image.
 * @member {string} [galleryImageReference.sku] The SKU of the gallery image.
 * @member {string} [galleryImageReference.osType] The OS type of the gallery
 * image.
 * @member {string} [galleryImageReference.version] The version of the gallery
 * image.
 * @member {string} [planId] The id of the plan associated with the virtual
 * machine image
 * @member {object} [computeVm] The compute virtual machine properties.
 * @member {array} [computeVm.statuses] Gets the statuses of the virtual
 * machine.
 * @member {string} [computeVm.osType] Gets the OS type of the virtual machine.
 * @member {string} [computeVm.vmSize] Gets the size of the virtual machine.
 * @member {string} [computeVm.networkInterfaceId] Gets the network interface
 * ID of the virtual machine.
 * @member {string} [computeVm.osDiskId] Gets OS disk blob uri for the virtual
 * machine.
 * @member {array} [computeVm.dataDiskIds] Gets data disks blob uri for the
 * virtual machine.
 * @member {array} [computeVm.dataDisks] Gets all data disks attached to the
 * virtual machine.
 * @member {object} [networkInterface] The network interface properties.
 * @member {string} [networkInterface.virtualNetworkId] The resource ID of the
 * virtual network.
 * @member {string} [networkInterface.subnetId] The resource ID of the sub net.
 * @member {string} [networkInterface.publicIpAddressId] The resource ID of the
 * public IP address.
 * @member {string} [networkInterface.publicIpAddress] The public IP address.
 * @member {string} [networkInterface.privateIpAddress] The private IP address.
 * @member {string} [networkInterface.dnsName] The DNS name.
 * @member {string} [networkInterface.rdpAuthority] The RdpAuthority property
 * is a server DNS host name or IP address followed by the service port number
 * for RDP (Remote Desktop Protocol).
 * @member {string} [networkInterface.sshAuthority] The SshAuthority property
 * is a server DNS host name or IP address followed by the service port number
 * for SSH.
 * @member {object} [networkInterface.sharedPublicIpAddressConfiguration] The
 * configuration for sharing a public IP address across multiple virtual
 * machines.
 * @member {array}
 * [networkInterface.sharedPublicIpAddressConfiguration.inboundNatRules] The
 * incoming NAT rules
 * @member {object} [applicableSchedule] The applicable schedule for the
 * virtual machine.
 * @member {object} [applicableSchedule.labVmsShutdown] The auto-shutdown
 * schedule, if one has been set at the lab or lab resource level.
 * @member {string} [applicableSchedule.labVmsShutdown.status] The status of
 * the schedule (i.e. Enabled, Disabled). Possible values include: 'Enabled',
 * 'Disabled'
 * @member {string} [applicableSchedule.labVmsShutdown.taskType] The task type
 * of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
 * @member {object} [applicableSchedule.labVmsShutdown.weeklyRecurrence] If the
 * schedule will occur only some days of the week, specify the weekly
 * recurrence.
 * @member {array}
 * [applicableSchedule.labVmsShutdown.weeklyRecurrence.weekdays] The days of
 * the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
 * @member {string} [applicableSchedule.labVmsShutdown.weeklyRecurrence.time]
 * The time of the day the schedule will occur.
 * @member {object} [applicableSchedule.labVmsShutdown.dailyRecurrence] If the
 * schedule will occur once each day of the week, specify the daily recurrence.
 * @member {string} [applicableSchedule.labVmsShutdown.dailyRecurrence.time]
 * The time of day the schedule will occur.
 * @member {object} [applicableSchedule.labVmsShutdown.hourlyRecurrence] If the
 * schedule will occur multiple times a day, specify the hourly recurrence.
 * @member {number} [applicableSchedule.labVmsShutdown.hourlyRecurrence.minute]
 * Minutes of the hour the schedule will run.
 * @member {string} [applicableSchedule.labVmsShutdown.timeZoneId] The time
 * zone ID (e.g. Pacific Standard time).
 * @member {object} [applicableSchedule.labVmsShutdown.notificationSettings]
 * Notification settings.
 * @member {string}
 * [applicableSchedule.labVmsShutdown.notificationSettings.status] If
 * notifications are enabled for this schedule (i.e. Enabled, Disabled).
 * Possible values include: 'Enabled', 'Disabled'
 * @member {number}
 * [applicableSchedule.labVmsShutdown.notificationSettings.timeInMinutes] Time
 * in minutes before event at which notification will be sent.
 * @member {string}
 * [applicableSchedule.labVmsShutdown.notificationSettings.webhookUrl] The
 * webhook URL to which the notification will be sent.
 * @member {string}
 * [applicableSchedule.labVmsShutdown.notificationSettings.emailRecipient] The
 * email recipient to send notifications to (can be a list of semi-colon
 * seperated email addresses).
 * @member {string}
 * [applicableSchedule.labVmsShutdown.notificationSettings.notificationLocale]
 * The locale to use when sending a notification (fallback for unsupported
 * languages is EN).
 * @member {date} [applicableSchedule.labVmsShutdown.createdDate] The creation
 * date of the schedule.
 * @member {string} [applicableSchedule.labVmsShutdown.targetResourceId] The
 * resource ID to which the schedule belongs
 * @member {string} [applicableSchedule.labVmsShutdown.provisioningState] The
 * provisioning status of the resource.
 * @member {string} [applicableSchedule.labVmsShutdown.uniqueIdentifier] The
 * unique immutable identifier of a resource (Guid).
 * @member {object} [applicableSchedule.labVmsStartup] The auto-startup
 * schedule, if one has been set at the lab or lab resource level.
 * @member {string} [applicableSchedule.labVmsStartup.status] The status of the
 * schedule (i.e. Enabled, Disabled). Possible values include: 'Enabled',
 * 'Disabled'
 * @member {string} [applicableSchedule.labVmsStartup.taskType] The task type
 * of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
 * @member {object} [applicableSchedule.labVmsStartup.weeklyRecurrence] If the
 * schedule will occur only some days of the week, specify the weekly
 * recurrence.
 * @member {array} [applicableSchedule.labVmsStartup.weeklyRecurrence.weekdays]
 * The days of the week for which the schedule is set (e.g. Sunday, Monday,
 * Tuesday, etc.).
 * @member {string} [applicableSchedule.labVmsStartup.weeklyRecurrence.time]
 * The time of the day the schedule will occur.
 * @member {object} [applicableSchedule.labVmsStartup.dailyRecurrence] If the
 * schedule will occur once each day of the week, specify the daily recurrence.
 * @member {string} [applicableSchedule.labVmsStartup.dailyRecurrence.time] The
 * time of day the schedule will occur.
 * @member {object} [applicableSchedule.labVmsStartup.hourlyRecurrence] If the
 * schedule will occur multiple times a day, specify the hourly recurrence.
 * @member {number} [applicableSchedule.labVmsStartup.hourlyRecurrence.minute]
 * Minutes of the hour the schedule will run.
 * @member {string} [applicableSchedule.labVmsStartup.timeZoneId] The time zone
 * ID (e.g. Pacific Standard time).
 * @member {object} [applicableSchedule.labVmsStartup.notificationSettings]
 * Notification settings.
 * @member {string}
 * [applicableSchedule.labVmsStartup.notificationSettings.status] If
 * notifications are enabled for this schedule (i.e. Enabled, Disabled).
 * Possible values include: 'Enabled', 'Disabled'
 * @member {number}
 * [applicableSchedule.labVmsStartup.notificationSettings.timeInMinutes] Time
 * in minutes before event at which notification will be sent.
 * @member {string}
 * [applicableSchedule.labVmsStartup.notificationSettings.webhookUrl] The
 * webhook URL to which the notification will be sent.
 * @member {string}
 * [applicableSchedule.labVmsStartup.notificationSettings.emailRecipient] The
 * email recipient to send notifications to (can be a list of semi-colon
 * seperated email addresses).
 * @member {string}
 * [applicableSchedule.labVmsStartup.notificationSettings.notificationLocale]
 * The locale to use when sending a notification (fallback for unsupported
 * languages is EN).
 * @member {date} [applicableSchedule.labVmsStartup.createdDate] The creation
 * date of the schedule.
 * @member {string} [applicableSchedule.labVmsStartup.targetResourceId] The
 * resource ID to which the schedule belongs
 * @member {string} [applicableSchedule.labVmsStartup.provisioningState] The
 * provisioning status of the resource.
 * @member {string} [applicableSchedule.labVmsStartup.uniqueIdentifier] The
 * unique immutable identifier of a resource (Guid).
 * @member {date} [expirationDate] The expiration date for VM.
 * @member {boolean} [allowClaim] Indicates whether another user can take
 * ownership of the virtual machine
 * @member {string} [storageType] Storage type to use for virtual machine (i.e.
 * Standard, Premium).
 * @member {string} [virtualMachineCreationSource] Tells source of creation of
 * lab virtual machine. Output property only. Possible values include:
 * 'FromCustomImage', 'FromGalleryImage'
 * @member {string} [environmentId] The resource ID of the environment that
 * contains this virtual machine, if any.
 * @member {array} [dataDiskParameters] New or existing data disks to attach to
 * the virtual machine after creation
 * @member {array} [scheduleParameters] Virtual Machine schedules to be created
 * @member {string} [lastKnownPowerState] Last known compute power state
 * captured in DTL
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 */
export interface LabVirtualMachine extends Resource {
  notes?: string;
  ownerObjectId?: string;
  ownerUserPrincipalName?: string;
  createdByUserId?: string;
  createdByUser?: string;
  createdDate?: Date;
  computeId?: string;
  customImageId?: string;
  osType?: string;
  size?: string;
  userName?: string;
  password?: string;
  sshKey?: string;
  isAuthenticationWithSshKey?: boolean;
  fqdn?: string;
  labSubnetName?: string;
  labVirtualNetworkId?: string;
  disallowPublicIpAddress?: boolean;
  artifacts?: ArtifactInstallProperties[];
  artifactDeploymentStatus?: ArtifactDeploymentStatusProperties;
  galleryImageReference?: GalleryImageReference;
  planId?: string;
  readonly computeVm?: ComputeVmProperties;
  networkInterface?: NetworkInterfaceProperties;
  readonly applicableSchedule?: ApplicableSchedule;
  expirationDate?: Date;
  allowClaim?: boolean;
  storageType?: string;
  virtualMachineCreationSource?: string;
  environmentId?: string;
  dataDiskParameters?: DataDiskProperties[];
  scheduleParameters?: ScheduleCreationParameter[];
  lastKnownPowerState?: string;
  readonly provisioningState?: string;
  readonly uniqueIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the LabVirtualMachineFragment class.
 * @constructor
 * A virtual machine.
 *
 * @member {string} [notes] The notes of the virtual machine.
 * @member {string} [ownerObjectId] The object identifier of the owner of the
 * virtual machine.
 * @member {string} [ownerUserPrincipalName] The user principal name of the
 * virtual machine owner.
 * @member {string} [createdByUserId] The object identifier of the creator of
 * the virtual machine.
 * @member {string} [createdByUser] The email address of creator of the virtual
 * machine.
 * @member {date} [createdDate] The creation date of the virtual machine.
 * @member {string} [computeId] The resource identifier (Microsoft.Compute) of
 * the virtual machine.
 * @member {string} [customImageId] The custom image identifier of the virtual
 * machine.
 * @member {string} [osType] The OS type of the virtual machine.
 * @member {string} [size] The size of the virtual machine.
 * @member {string} [userName] The user name of the virtual machine.
 * @member {string} [password] The password of the virtual machine
 * administrator.
 * @member {string} [sshKey] The SSH key of the virtual machine administrator.
 * @member {boolean} [isAuthenticationWithSshKey] Indicates whether this
 * virtual machine uses an SSH key for authentication.
 * @member {string} [fqdn] The fully-qualified domain name of the virtual
 * machine.
 * @member {string} [labSubnetName] The lab subnet name of the virtual machine.
 * @member {string} [labVirtualNetworkId] The lab virtual network identifier of
 * the virtual machine.
 * @member {boolean} [disallowPublicIpAddress] Indicates whether the virtual
 * machine is to be created without a public IP address.
 * @member {array} [artifacts] The artifacts to be installed on the virtual
 * machine.
 * @member {object} [artifactDeploymentStatus] The artifact deployment status
 * for the virtual machine.
 * @member {string} [artifactDeploymentStatus.deploymentStatus] The deployment
 * status of the artifact.
 * @member {number} [artifactDeploymentStatus.artifactsApplied] The total count
 * of the artifacts that were successfully applied.
 * @member {number} [artifactDeploymentStatus.totalArtifacts] The total count
 * of the artifacts that were tentatively applied.
 * @member {object} [galleryImageReference] The Microsoft Azure Marketplace
 * image reference of the virtual machine.
 * @member {string} [galleryImageReference.offer] The offer of the gallery
 * image.
 * @member {string} [galleryImageReference.publisher] The publisher of the
 * gallery image.
 * @member {string} [galleryImageReference.sku] The SKU of the gallery image.
 * @member {string} [galleryImageReference.osType] The OS type of the gallery
 * image.
 * @member {string} [galleryImageReference.version] The version of the gallery
 * image.
 * @member {string} [planId] The id of the plan associated with the virtual
 * machine image
 * @member {object} [networkInterface] The network interface properties.
 * @member {string} [networkInterface.virtualNetworkId] The resource ID of the
 * virtual network.
 * @member {string} [networkInterface.subnetId] The resource ID of the sub net.
 * @member {string} [networkInterface.publicIpAddressId] The resource ID of the
 * public IP address.
 * @member {string} [networkInterface.publicIpAddress] The public IP address.
 * @member {string} [networkInterface.privateIpAddress] The private IP address.
 * @member {string} [networkInterface.dnsName] The DNS name.
 * @member {string} [networkInterface.rdpAuthority] The RdpAuthority property
 * is a server DNS host name or IP address followed by the service port number
 * for RDP (Remote Desktop Protocol).
 * @member {string} [networkInterface.sshAuthority] The SshAuthority property
 * is a server DNS host name or IP address followed by the service port number
 * for SSH.
 * @member {object} [networkInterface.sharedPublicIpAddressConfiguration] The
 * configuration for sharing a public IP address across multiple virtual
 * machines.
 * @member {array}
 * [networkInterface.sharedPublicIpAddressConfiguration.inboundNatRules] The
 * incoming NAT rules
 * @member {date} [expirationDate] The expiration date for VM.
 * @member {boolean} [allowClaim] Indicates whether another user can take
 * ownership of the virtual machine
 * @member {string} [storageType] Storage type to use for virtual machine (i.e.
 * Standard, Premium).
 * @member {string} [virtualMachineCreationSource] Tells source of creation of
 * lab virtual machine. Output property only. Possible values include:
 * 'FromCustomImage', 'FromGalleryImage'
 * @member {string} [environmentId] The resource ID of the environment that
 * contains this virtual machine, if any.
 * @member {array} [dataDiskParameters] New or existing data disks to attach to
 * the virtual machine after creation
 * @member {array} [scheduleParameters] Virtual Machine schedules to be created
 * @member {string} [lastKnownPowerState] Last known compute power state
 * captured in DTL
 */
export interface LabVirtualMachineFragment extends UpdateResource {
  notes?: string;
  ownerObjectId?: string;
  ownerUserPrincipalName?: string;
  createdByUserId?: string;
  createdByUser?: string;
  createdDate?: Date;
  computeId?: string;
  customImageId?: string;
  osType?: string;
  size?: string;
  userName?: string;
  password?: string;
  sshKey?: string;
  isAuthenticationWithSshKey?: boolean;
  fqdn?: string;
  labSubnetName?: string;
  labVirtualNetworkId?: string;
  disallowPublicIpAddress?: boolean;
  artifacts?: ArtifactInstallPropertiesFragment[];
  artifactDeploymentStatus?: ArtifactDeploymentStatusPropertiesFragment;
  galleryImageReference?: GalleryImageReferenceFragment;
  planId?: string;
  networkInterface?: NetworkInterfacePropertiesFragment;
  expirationDate?: Date;
  allowClaim?: boolean;
  storageType?: string;
  virtualMachineCreationSource?: string;
  environmentId?: string;
  dataDiskParameters?: DataDiskPropertiesFragment[];
  scheduleParameters?: ScheduleCreationParameterFragment[];
  lastKnownPowerState?: string;
}

/**
 * @class
 * Initializes a new instance of the NotificationChannel class.
 * @constructor
 * A notification.
 *
 * @member {string} [webHookUrl] The webhook URL to send notifications to.
 * @member {string} [emailRecipient] The email recipient to send notifications
 * to (can be a list of semi-colon seperated email addresses).
 * @member {string} [notificationLocale] The locale to use when sending a
 * notification (fallback for unsupported languages is EN).
 * @member {string} [description] Description of notification.
 * @member {array} [events] The list of event for which this notification is
 * enabled.
 * @member {date} [createdDate] The creation date of the notification channel.
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 */
export interface NotificationChannel extends Resource {
  webHookUrl?: string;
  emailRecipient?: string;
  notificationLocale?: string;
  description?: string;
  events?: Event[];
  readonly createdDate?: Date;
  readonly provisioningState?: string;
  readonly uniqueIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the NotificationChannelFragment class.
 * @constructor
 * A notification.
 *
 * @member {string} [webHookUrl] The webhook URL to send notifications to.
 * @member {string} [emailRecipient] The email recipient to send notifications
 * to (can be a list of semi-colon seperated email addresses).
 * @member {string} [notificationLocale] The locale to use when sending a
 * notification (fallback for unsupported languages is EN).
 * @member {string} [description] Description of notification.
 * @member {array} [events] The list of event for which this notification is
 * enabled.
 */
export interface NotificationChannelFragment extends UpdateResource {
  webHookUrl?: string;
  emailRecipient?: string;
  notificationLocale?: string;
  description?: string;
  events?: EventFragment[];
}

/**
 * @class
 * Initializes a new instance of the NotifyParameters class.
 * @constructor
 * Properties for generating a Notification.
 *
 * @member {string} [eventName] The type of event (i.e. AutoShutdown, Cost).
 * Possible values include: 'AutoShutdown', 'Cost'
 * @member {string} [jsonPayload] Properties for the notification in json
 * format.
 */
export interface NotifyParameters {
  eventName?: string;
  jsonPayload?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationError class.
 * @constructor
 * Error details for the operation in case of a failure.
 *
 * @member {string} [code] The error code of the operation error.
 * @member {string} [message] The error message of the operation error.
 */
export interface OperationError {
  code?: string;
  message?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationMetadataDisplay class.
 * @constructor
 * The object that describes the operations
 *
 * @member {string} [provider] Friendly name of the resource provider
 * @member {string} [resource] Resource type on which the operation is
 * performed.
 * @member {string} [operation] Operation type: read, write, delete,
 * listKeys/action, etc.
 * @member {string} [description] Friendly name of the operation
 */
export interface OperationMetadataDisplay {
  provider?: string;
  resource?: string;
  operation?: string;
  description?: string;
}

/**
 * @class
 * Initializes a new instance of the OperationMetadata class.
 * @constructor
 * The REST API operation supported by DevTestLab ResourceProvider.
 *
 * @member {string} [name] Operation name: {provider}/{resource}/{operation}
 * @member {object} [display] The object that describes the operations
 * @member {string} [display.provider] Friendly name of the resource provider
 * @member {string} [display.resource] Resource type on which the operation is
 * performed.
 * @member {string} [display.operation] Operation type: read, write, delete,
 * listKeys/action, etc.
 * @member {string} [display.description] Friendly name of the operation
 */
export interface OperationMetadata {
  name?: string;
  display?: OperationMetadataDisplay;
}

/**
 * @class
 * Initializes a new instance of the OperationResult class.
 * @constructor
 * An Operation Result
 *
 * @member {string} [status] The operation status.
 * @member {string} [statusCode] The status code for the operation. Possible
 * values include: 'Continue', 'SwitchingProtocols', 'OK', 'Created',
 * 'Accepted', 'NonAuthoritativeInformation', 'NoContent', 'ResetContent',
 * 'PartialContent', 'MultipleChoices', 'MovedPermanently', 'Redirect',
 * 'SeeOther', 'NotModified', 'UseProxy', 'Unused', 'TemporaryRedirect',
 * 'BadRequest', 'Unauthorized', 'PaymentRequired', 'Forbidden', 'NotFound',
 * 'MethodNotAllowed', 'NotAcceptable', 'ProxyAuthenticationRequired',
 * 'RequestTimeout', 'Conflict', 'Gone', 'LengthRequired',
 * 'PreconditionFailed', 'RequestEntityTooLarge', 'RequestUriTooLong',
 * 'UnsupportedMediaType', 'RequestedRangeNotSatisfiable', 'ExpectationFailed',
 * 'UpgradeRequired', 'InternalServerError', 'NotImplemented', 'BadGateway',
 * 'ServiceUnavailable', 'GatewayTimeout', 'HttpVersionNotSupported'
 * @member {object} [error] Error details for the operation in case of a
 * failure.
 * @member {string} [error.code] The error code of the operation error.
 * @member {string} [error.message] The error message of the operation error.
 */
export interface OperationResult {
  status?: string;
  statusCode?: string;
  error?: OperationError;
}

/**
 * @class
 * Initializes a new instance of the Policy class.
 * @constructor
 * A Policy.
 *
 * @member {string} [description] The description of the policy.
 * @member {string} [status] The status of the policy. Possible values include:
 * 'Enabled', 'Disabled'
 * @member {string} [factName] The fact name of the policy (e.g. LabVmCount,
 * LabVmSize, MaxVmsAllowedPerLab, etc. Possible values include:
 * 'UserOwnedLabVmCount', 'UserOwnedLabPremiumVmCount', 'LabVmCount',
 * 'LabPremiumVmCount', 'LabVmSize', 'GalleryImage',
 * 'UserOwnedLabVmCountInSubnet', 'LabTargetCost', 'EnvironmentTemplate',
 * 'ScheduleEditPermission'
 * @member {string} [factData] The fact data of the policy.
 * @member {string} [threshold] The threshold of the policy (i.e. a number for
 * MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).
 * @member {string} [evaluatorType] The evaluator type of the policy (i.e.
 * AllowedValuesPolicy, MaxValuePolicy). Possible values include:
 * 'AllowedValuesPolicy', 'MaxValuePolicy'
 * @member {date} [createdDate] The creation date of the policy.
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 */
export interface Policy extends Resource {
  description?: string;
  status?: string;
  factName?: string;
  factData?: string;
  threshold?: string;
  evaluatorType?: string;
  readonly createdDate?: Date;
  readonly provisioningState?: string;
  readonly uniqueIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the PolicyFragment class.
 * @constructor
 * A Policy.
 *
 * @member {string} [description] The description of the policy.
 * @member {string} [status] The status of the policy. Possible values include:
 * 'Enabled', 'Disabled'
 * @member {string} [factName] The fact name of the policy (e.g. LabVmCount,
 * LabVmSize, MaxVmsAllowedPerLab, etc. Possible values include:
 * 'UserOwnedLabVmCount', 'UserOwnedLabPremiumVmCount', 'LabVmCount',
 * 'LabPremiumVmCount', 'LabVmSize', 'GalleryImage',
 * 'UserOwnedLabVmCountInSubnet', 'LabTargetCost', 'EnvironmentTemplate',
 * 'ScheduleEditPermission'
 * @member {string} [factData] The fact data of the policy.
 * @member {string} [threshold] The threshold of the policy (i.e. a number for
 * MaxValuePolicy, and a JSON array of values for AllowedValuesPolicy).
 * @member {string} [evaluatorType] The evaluator type of the policy (i.e.
 * AllowedValuesPolicy, MaxValuePolicy). Possible values include:
 * 'AllowedValuesPolicy', 'MaxValuePolicy'
 */
export interface PolicyFragment extends UpdateResource {
  description?: string;
  status?: string;
  factName?: string;
  factData?: string;
  threshold?: string;
  evaluatorType?: string;
}

/**
 * @class
 * Initializes a new instance of the Port class.
 * @constructor
 * Properties of a network port.
 *
 * @member {string} [transportProtocol] Protocol type of the port. Possible
 * values include: 'Tcp', 'Udp'
 * @member {number} [backendPort] Backend port of the target virtual machine.
 */
export interface Port {
  transportProtocol?: string;
  backendPort?: number;
}

/**
 * @class
 * Initializes a new instance of the PortFragment class.
 * @constructor
 * Properties of a network port.
 *
 * @member {string} [transportProtocol] Protocol type of the port. Possible
 * values include: 'Tcp', 'Udp'
 * @member {number} [backendPort] Backend port of the target virtual machine.
 */
export interface PortFragment {
  transportProtocol?: string;
  backendPort?: number;
}

/**
 * @class
 * Initializes a new instance of the RdpConnection class.
 * @constructor
 * Represents a .rdp file
 *
 * @member {string} [contents] The contents of the .rdp file
 */
export interface RdpConnection {
  contents?: string;
}

/**
 * @class
 * Initializes a new instance of the ResizeLabVirtualMachineProperties class.
 * @constructor
 * Request body for resizing a virtual machine.
 *
 * @member {string} [size] Specifies the size of the virtual machine.
 */
export interface ResizeLabVirtualMachineProperties {
  size?: string;
}

/**
 * @class
 * Initializes a new instance of the RetargetScheduleProperties class.
 * @constructor
 * Properties for retargeting a virtual machine schedule.
 *
 * @member {string} [currentResourceId] The resource Id of the virtual machine
 * on which the schedule operates
 * @member {string} [targetResourceId] The resource Id of the virtual machine
 * that the schedule should be retargeted to
 */
export interface RetargetScheduleProperties {
  currentResourceId?: string;
  targetResourceId?: string;
}

/**
 * @class
 * Initializes a new instance of the Secret class.
 * @constructor
 * A secret.
 *
 * @member {string} [value] The value of the secret for secret creation.
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 */
export interface Secret extends Resource {
  value?: string;
  readonly provisioningState?: string;
  readonly uniqueIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the SecretFragment class.
 * @constructor
 * A secret.
 *
 * @member {string} [value] The value of the secret for secret creation.
 */
export interface SecretFragment extends UpdateResource {
  value?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceFabric class.
 * @constructor
 * A Service Fabric.
 *
 * @member {string} [externalServiceFabricId] The backing service fabric
 * resource's id
 * @member {string} [environmentId] The resource id of the environment under
 * which the service fabric resource is present
 * @member {object} [applicableSchedule] The applicable schedule for the
 * virtual machine.
 * @member {object} [applicableSchedule.labVmsShutdown] The auto-shutdown
 * schedule, if one has been set at the lab or lab resource level.
 * @member {string} [applicableSchedule.labVmsShutdown.status] The status of
 * the schedule (i.e. Enabled, Disabled). Possible values include: 'Enabled',
 * 'Disabled'
 * @member {string} [applicableSchedule.labVmsShutdown.taskType] The task type
 * of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
 * @member {object} [applicableSchedule.labVmsShutdown.weeklyRecurrence] If the
 * schedule will occur only some days of the week, specify the weekly
 * recurrence.
 * @member {array}
 * [applicableSchedule.labVmsShutdown.weeklyRecurrence.weekdays] The days of
 * the week for which the schedule is set (e.g. Sunday, Monday, Tuesday, etc.).
 * @member {string} [applicableSchedule.labVmsShutdown.weeklyRecurrence.time]
 * The time of the day the schedule will occur.
 * @member {object} [applicableSchedule.labVmsShutdown.dailyRecurrence] If the
 * schedule will occur once each day of the week, specify the daily recurrence.
 * @member {string} [applicableSchedule.labVmsShutdown.dailyRecurrence.time]
 * The time of day the schedule will occur.
 * @member {object} [applicableSchedule.labVmsShutdown.hourlyRecurrence] If the
 * schedule will occur multiple times a day, specify the hourly recurrence.
 * @member {number} [applicableSchedule.labVmsShutdown.hourlyRecurrence.minute]
 * Minutes of the hour the schedule will run.
 * @member {string} [applicableSchedule.labVmsShutdown.timeZoneId] The time
 * zone ID (e.g. Pacific Standard time).
 * @member {object} [applicableSchedule.labVmsShutdown.notificationSettings]
 * Notification settings.
 * @member {string}
 * [applicableSchedule.labVmsShutdown.notificationSettings.status] If
 * notifications are enabled for this schedule (i.e. Enabled, Disabled).
 * Possible values include: 'Enabled', 'Disabled'
 * @member {number}
 * [applicableSchedule.labVmsShutdown.notificationSettings.timeInMinutes] Time
 * in minutes before event at which notification will be sent.
 * @member {string}
 * [applicableSchedule.labVmsShutdown.notificationSettings.webhookUrl] The
 * webhook URL to which the notification will be sent.
 * @member {string}
 * [applicableSchedule.labVmsShutdown.notificationSettings.emailRecipient] The
 * email recipient to send notifications to (can be a list of semi-colon
 * seperated email addresses).
 * @member {string}
 * [applicableSchedule.labVmsShutdown.notificationSettings.notificationLocale]
 * The locale to use when sending a notification (fallback for unsupported
 * languages is EN).
 * @member {date} [applicableSchedule.labVmsShutdown.createdDate] The creation
 * date of the schedule.
 * @member {string} [applicableSchedule.labVmsShutdown.targetResourceId] The
 * resource ID to which the schedule belongs
 * @member {string} [applicableSchedule.labVmsShutdown.provisioningState] The
 * provisioning status of the resource.
 * @member {string} [applicableSchedule.labVmsShutdown.uniqueIdentifier] The
 * unique immutable identifier of a resource (Guid).
 * @member {object} [applicableSchedule.labVmsStartup] The auto-startup
 * schedule, if one has been set at the lab or lab resource level.
 * @member {string} [applicableSchedule.labVmsStartup.status] The status of the
 * schedule (i.e. Enabled, Disabled). Possible values include: 'Enabled',
 * 'Disabled'
 * @member {string} [applicableSchedule.labVmsStartup.taskType] The task type
 * of the schedule (e.g. LabVmsShutdownTask, LabVmAutoStart).
 * @member {object} [applicableSchedule.labVmsStartup.weeklyRecurrence] If the
 * schedule will occur only some days of the week, specify the weekly
 * recurrence.
 * @member {array} [applicableSchedule.labVmsStartup.weeklyRecurrence.weekdays]
 * The days of the week for which the schedule is set (e.g. Sunday, Monday,
 * Tuesday, etc.).
 * @member {string} [applicableSchedule.labVmsStartup.weeklyRecurrence.time]
 * The time of the day the schedule will occur.
 * @member {object} [applicableSchedule.labVmsStartup.dailyRecurrence] If the
 * schedule will occur once each day of the week, specify the daily recurrence.
 * @member {string} [applicableSchedule.labVmsStartup.dailyRecurrence.time] The
 * time of day the schedule will occur.
 * @member {object} [applicableSchedule.labVmsStartup.hourlyRecurrence] If the
 * schedule will occur multiple times a day, specify the hourly recurrence.
 * @member {number} [applicableSchedule.labVmsStartup.hourlyRecurrence.minute]
 * Minutes of the hour the schedule will run.
 * @member {string} [applicableSchedule.labVmsStartup.timeZoneId] The time zone
 * ID (e.g. Pacific Standard time).
 * @member {object} [applicableSchedule.labVmsStartup.notificationSettings]
 * Notification settings.
 * @member {string}
 * [applicableSchedule.labVmsStartup.notificationSettings.status] If
 * notifications are enabled for this schedule (i.e. Enabled, Disabled).
 * Possible values include: 'Enabled', 'Disabled'
 * @member {number}
 * [applicableSchedule.labVmsStartup.notificationSettings.timeInMinutes] Time
 * in minutes before event at which notification will be sent.
 * @member {string}
 * [applicableSchedule.labVmsStartup.notificationSettings.webhookUrl] The
 * webhook URL to which the notification will be sent.
 * @member {string}
 * [applicableSchedule.labVmsStartup.notificationSettings.emailRecipient] The
 * email recipient to send notifications to (can be a list of semi-colon
 * seperated email addresses).
 * @member {string}
 * [applicableSchedule.labVmsStartup.notificationSettings.notificationLocale]
 * The locale to use when sending a notification (fallback for unsupported
 * languages is EN).
 * @member {date} [applicableSchedule.labVmsStartup.createdDate] The creation
 * date of the schedule.
 * @member {string} [applicableSchedule.labVmsStartup.targetResourceId] The
 * resource ID to which the schedule belongs
 * @member {string} [applicableSchedule.labVmsStartup.provisioningState] The
 * provisioning status of the resource.
 * @member {string} [applicableSchedule.labVmsStartup.uniqueIdentifier] The
 * unique immutable identifier of a resource (Guid).
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 */
export interface ServiceFabric extends Resource {
  externalServiceFabricId?: string;
  environmentId?: string;
  readonly applicableSchedule?: ApplicableSchedule;
  readonly provisioningState?: string;
  readonly uniqueIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceFabricFragment class.
 * @constructor
 * A Service Fabric.
 *
 * @member {string} [externalServiceFabricId] The backing service fabric
 * resource's id
 * @member {string} [environmentId] The resource id of the environment under
 * which the service fabric resource is present
 */
export interface ServiceFabricFragment extends UpdateResource {
  externalServiceFabricId?: string;
  environmentId?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceRunner class.
 * @constructor
 * A container for a managed identity to execute DevTest lab services.
 *
 * @member {object} [identity] The identity of the resource.
 * @member {string} [identity.type] Managed identity.
 * @member {string} [identity.principalId] The principal id of resource
 * identity.
 * @member {string} [identity.tenantId] The tenant identifier of resource.
 * @member {string} [identity.clientSecretUrl] The client secret URL of the
 * identity.
 */
export interface ServiceRunner extends Resource {
  identity?: IdentityProperties;
}

/**
 * @class
 * Initializes a new instance of the ShutdownNotificationContent class.
 * @constructor
 * The contents of a shutdown notification. Webhooks can use this type to
 * deserialize the request body when they get notified of an imminent shutdown.
 *
 * @member {string} [skipUrl] The URL to skip auto-shutdown.
 * @member {string} [delayUrl60] The URL to delay shutdown by 60 minutes.
 * @member {string} [delayUrl120] The URL to delay shutdown by 2 hours.
 * @member {string} [vmName] The virtual machine to be shut down.
 * @member {string} [guid] The GUID for the virtual machine to be shut down.
 * @member {string} [owner] The owner of the virtual machine.
 * @member {string} [vmUrl] The URL of the virtual machine.
 * @member {string} [minutesUntilShutdown] Minutes remaining until shutdown
 * @member {string} [eventType] The event for which a notification will be
 * sent.
 * @member {string} [text] The text for the notification.
 * @member {string} [subscriptionId] The subscription ID for the schedule.
 * @member {string} [resourceGroupName] The resource group name for the
 * schedule.
 * @member {string} [labName] The lab for the schedule.
 */
export interface ShutdownNotificationContent {
  skipUrl?: string;
  delayUrl60?: string;
  delayUrl120?: string;
  vmName?: string;
  guid?: string;
  owner?: string;
  vmUrl?: string;
  minutesUntilShutdown?: string;
  eventType?: string;
  text?: string;
  subscriptionId?: string;
  resourceGroupName?: string;
  labName?: string;
}

/**
 * @class
 * Initializes a new instance of the Subnet class.
 * @constructor
 * Subnet information.
 *
 * @member {string} [resourceId] The resource ID of the subnet.
 * @member {string} [labSubnetName] The name of the subnet as seen in the lab.
 * @member {string} [allowPublicIp] The permission policy of the subnet for
 * allowing public IP addresses (i.e. Allow, Deny)). Possible values include:
 * 'Default', 'Deny', 'Allow'
 */
export interface Subnet {
  resourceId?: string;
  labSubnetName?: string;
  allowPublicIp?: string;
}

/**
 * @class
 * Initializes a new instance of the SubnetFragment class.
 * @constructor
 * Subnet information.
 *
 * @member {string} [resourceId] The resource ID of the subnet.
 * @member {string} [labSubnetName] The name of the subnet as seen in the lab.
 * @member {string} [allowPublicIp] The permission policy of the subnet for
 * allowing public IP addresses (i.e. Allow, Deny)). Possible values include:
 * 'Default', 'Deny', 'Allow'
 */
export interface SubnetFragment {
  resourceId?: string;
  labSubnetName?: string;
  allowPublicIp?: string;
}

/**
 * @class
 * Initializes a new instance of the SubnetSharedPublicIpAddressConfiguration class.
 * @constructor
 * Configuration for public IP address sharing.
 *
 * @member {array} [allowedPorts] Backend ports that virtual machines on this
 * subnet are allowed to expose
 */
export interface SubnetSharedPublicIpAddressConfiguration {
  allowedPorts?: Port[];
}

/**
 * @class
 * Initializes a new instance of the SubnetOverride class.
 * @constructor
 * Property overrides on a subnet of a virtual network.
 *
 * @member {string} [resourceId] The resource ID of the subnet.
 * @member {string} [labSubnetName] The name given to the subnet within the
 * lab.
 * @member {string} [useInVmCreationPermission] Indicates whether this subnet
 * can be used during virtual machine creation (i.e. Allow, Deny). Possible
 * values include: 'Default', 'Deny', 'Allow'
 * @member {string} [usePublicIpAddressPermission] Indicates whether public IP
 * addresses can be assigned to virtual machines on this subnet (i.e. Allow,
 * Deny). Possible values include: 'Default', 'Deny', 'Allow'
 * @member {object} [sharedPublicIpAddressConfiguration] Properties that
 * virtual machines on this subnet will share.
 * @member {array} [sharedPublicIpAddressConfiguration.allowedPorts] Backend
 * ports that virtual machines on this subnet are allowed to expose
 * @member {string} [virtualNetworkPoolName] The virtual network pool
 * associated with this subnet.
 */
export interface SubnetOverride {
  resourceId?: string;
  labSubnetName?: string;
  useInVmCreationPermission?: string;
  usePublicIpAddressPermission?: string;
  sharedPublicIpAddressConfiguration?: SubnetSharedPublicIpAddressConfiguration;
  virtualNetworkPoolName?: string;
}

/**
 * @class
 * Initializes a new instance of the SubnetSharedPublicIpAddressConfigurationFragment class.
 * @constructor
 * Configuration for public IP address sharing.
 *
 * @member {array} [allowedPorts] Backend ports that virtual machines on this
 * subnet are allowed to expose
 */
export interface SubnetSharedPublicIpAddressConfigurationFragment {
  allowedPorts?: PortFragment[];
}

/**
 * @class
 * Initializes a new instance of the SubnetOverrideFragment class.
 * @constructor
 * Property overrides on a subnet of a virtual network.
 *
 * @member {string} [resourceId] The resource ID of the subnet.
 * @member {string} [labSubnetName] The name given to the subnet within the
 * lab.
 * @member {string} [useInVmCreationPermission] Indicates whether this subnet
 * can be used during virtual machine creation (i.e. Allow, Deny). Possible
 * values include: 'Default', 'Deny', 'Allow'
 * @member {string} [usePublicIpAddressPermission] Indicates whether public IP
 * addresses can be assigned to virtual machines on this subnet (i.e. Allow,
 * Deny). Possible values include: 'Default', 'Deny', 'Allow'
 * @member {object} [sharedPublicIpAddressConfiguration] Properties that
 * virtual machines on this subnet will share.
 * @member {array} [sharedPublicIpAddressConfiguration.allowedPorts] Backend
 * ports that virtual machines on this subnet are allowed to expose
 * @member {string} [virtualNetworkPoolName] The virtual network pool
 * associated with this subnet.
 */
export interface SubnetOverrideFragment {
  resourceId?: string;
  labSubnetName?: string;
  useInVmCreationPermission?: string;
  usePublicIpAddressPermission?: string;
  sharedPublicIpAddressConfiguration?: SubnetSharedPublicIpAddressConfigurationFragment;
  virtualNetworkPoolName?: string;
}

/**
 * @class
 * Initializes a new instance of the UserIdentity class.
 * @constructor
 * Identity attributes of a lab user.
 *
 * @member {string} [principalName] Set to the principal name / UPN of the
 * client JWT making the request.
 * @member {string} [principalId] Set to the principal Id of the client JWT
 * making the request. Service principal will not have the principal Id.
 * @member {string} [tenantId] Set to the tenant ID of the client JWT making
 * the request.
 * @member {string} [objectId] Set to the object Id of the client JWT making
 * the request. Not all users have object Id. For CSP (reseller) scenarios for
 * example, object Id is not available.
 * @member {string} [appId] Set to the app Id of the client JWT making the
 * request.
 */
export interface UserIdentity {
  principalName?: string;
  principalId?: string;
  tenantId?: string;
  objectId?: string;
  appId?: string;
}

/**
 * @class
 * Initializes a new instance of the UserSecretStore class.
 * @constructor
 * Properties of a user's secret store.
 *
 * @member {string} [keyVaultUri] The URI of the user's Key vault.
 * @member {string} [keyVaultId] The ID of the user's Key vault.
 */
export interface UserSecretStore {
  keyVaultUri?: string;
  keyVaultId?: string;
}

/**
 * @class
 * Initializes a new instance of the User class.
 * @constructor
 * Profile of a lab user.
 *
 * @member {object} [identity] The identity of the user.
 * @member {string} [identity.principalName] Set to the principal name / UPN of
 * the client JWT making the request.
 * @member {string} [identity.principalId] Set to the principal Id of the
 * client JWT making the request. Service principal will not have the principal
 * Id.
 * @member {string} [identity.tenantId] Set to the tenant ID of the client JWT
 * making the request.
 * @member {string} [identity.objectId] Set to the object Id of the client JWT
 * making the request. Not all users have object Id. For CSP (reseller)
 * scenarios for example, object Id is not available.
 * @member {string} [identity.appId] Set to the app Id of the client JWT making
 * the request.
 * @member {object} [secretStore] The secret store of the user.
 * @member {string} [secretStore.keyVaultUri] The URI of the user's Key vault.
 * @member {string} [secretStore.keyVaultId] The ID of the user's Key vault.
 * @member {date} [createdDate] The creation date of the user profile.
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 */
export interface User extends Resource {
  identity?: UserIdentity;
  secretStore?: UserSecretStore;
  readonly createdDate?: Date;
  readonly provisioningState?: string;
  readonly uniqueIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the UserIdentityFragment class.
 * @constructor
 * Identity attributes of a lab user.
 *
 * @member {string} [principalName] Set to the principal name / UPN of the
 * client JWT making the request.
 * @member {string} [principalId] Set to the principal Id of the client JWT
 * making the request. Service principal will not have the principal Id.
 * @member {string} [tenantId] Set to the tenant ID of the client JWT making
 * the request.
 * @member {string} [objectId] Set to the object Id of the client JWT making
 * the request. Not all users have object Id. For CSP (reseller) scenarios for
 * example, object Id is not available.
 * @member {string} [appId] Set to the app Id of the client JWT making the
 * request.
 */
export interface UserIdentityFragment {
  principalName?: string;
  principalId?: string;
  tenantId?: string;
  objectId?: string;
  appId?: string;
}

/**
 * @class
 * Initializes a new instance of the UserSecretStoreFragment class.
 * @constructor
 * Properties of a user's secret store.
 *
 * @member {string} [keyVaultUri] The URI of the user's Key vault.
 * @member {string} [keyVaultId] The ID of the user's Key vault.
 */
export interface UserSecretStoreFragment {
  keyVaultUri?: string;
  keyVaultId?: string;
}

/**
 * @class
 * Initializes a new instance of the UserFragment class.
 * @constructor
 * Profile of a lab user.
 *
 * @member {object} [identity] The identity of the user.
 * @member {string} [identity.principalName] Set to the principal name / UPN of
 * the client JWT making the request.
 * @member {string} [identity.principalId] Set to the principal Id of the
 * client JWT making the request. Service principal will not have the principal
 * Id.
 * @member {string} [identity.tenantId] Set to the tenant ID of the client JWT
 * making the request.
 * @member {string} [identity.objectId] Set to the object Id of the client JWT
 * making the request. Not all users have object Id. For CSP (reseller)
 * scenarios for example, object Id is not available.
 * @member {string} [identity.appId] Set to the app Id of the client JWT making
 * the request.
 * @member {object} [secretStore] The secret store of the user.
 * @member {string} [secretStore.keyVaultUri] The URI of the user's Key vault.
 * @member {string} [secretStore.keyVaultId] The ID of the user's Key vault.
 */
export interface UserFragment extends UpdateResource {
  identity?: UserIdentityFragment;
  secretStore?: UserSecretStoreFragment;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetwork class.
 * @constructor
 * A virtual network.
 *
 * @member {array} [allowedSubnets] The allowed subnets of the virtual network.
 * @member {string} [description] The description of the virtual network.
 * @member {string} [externalProviderResourceId] The Microsoft.Network resource
 * identifier of the virtual network.
 * @member {array} [externalSubnets] The external subnet properties.
 * @member {array} [subnetOverrides] The subnet overrides of the virtual
 * network.
 * @member {date} [createdDate] The creation date of the virtual network.
 * @member {string} [provisioningState] The provisioning status of the
 * resource.
 * @member {string} [uniqueIdentifier] The unique immutable identifier of a
 * resource (Guid).
 */
export interface VirtualNetwork extends Resource {
  allowedSubnets?: Subnet[];
  description?: string;
  externalProviderResourceId?: string;
  readonly externalSubnets?: ExternalSubnet[];
  subnetOverrides?: SubnetOverride[];
  readonly createdDate?: Date;
  readonly provisioningState?: string;
  readonly uniqueIdentifier?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkFragment class.
 * @constructor
 * A virtual network.
 *
 * @member {array} [allowedSubnets] The allowed subnets of the virtual network.
 * @member {string} [description] The description of the virtual network.
 * @member {string} [externalProviderResourceId] The Microsoft.Network resource
 * identifier of the virtual network.
 * @member {array} [subnetOverrides] The subnet overrides of the virtual
 * network.
 */
export interface VirtualNetworkFragment extends UpdateResource {
  allowedSubnets?: SubnetFragment[];
  description?: string;
  externalProviderResourceId?: string;
  subnetOverrides?: SubnetOverrideFragment[];
}


/**
 * @class
 * Initializes a new instance of the ProviderOperationResult class.
 * @constructor
 * Result of the request to list REST API operations
 *
 * @member {string} [nextLink] URL to get the next set of operation list
 * results if there are any.
 */
export interface ProviderOperationResult extends Array<OperationMetadata> {
  readonly nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the LabList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface LabList extends Array<Lab> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the LabVhdList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface LabVhdList extends Array<LabVhd> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ScheduleList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface ScheduleList extends Array<Schedule> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ArtifactSourceList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface ArtifactSourceList extends Array<ArtifactSource> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ArmTemplateList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface ArmTemplateList extends Array<ArmTemplate> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ArtifactList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface ArtifactList extends Array<Artifact> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the CustomImageList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface CustomImageList extends Array<CustomImage> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the FormulaList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface FormulaList extends Array<Formula> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the GalleryImageList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface GalleryImageList extends Array<GalleryImage> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the NotificationChannelList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface NotificationChannelList extends Array<NotificationChannel> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the PolicyList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface PolicyList extends Array<Policy> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceRunnerList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface ServiceRunnerList extends Array<ServiceRunner> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the UserList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface UserList extends Array<User> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the DiskList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface DiskList extends Array<Disk> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the DtlEnvironmentList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface DtlEnvironmentList extends Array<DtlEnvironment> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the SecretList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface SecretList extends Array<Secret> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the ServiceFabricList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface ServiceFabricList extends Array<ServiceFabric> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the LabVirtualMachineList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface LabVirtualMachineList extends Array<LabVirtualMachine> {
  nextLink?: string;
}

/**
 * @class
 * Initializes a new instance of the VirtualNetworkList class.
 * @constructor
 * The response of a list operation.
 *
 * @member {string} [nextLink] Link for next set of results.
 */
export interface VirtualNetworkList extends Array<VirtualNetwork> {
  nextLink?: string;
}

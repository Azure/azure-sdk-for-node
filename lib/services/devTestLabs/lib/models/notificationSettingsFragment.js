/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * Notification settings for a schedule.
 *
 */
class NotificationSettingsFragment {
  /**
   * Create a NotificationSettingsFragment.
   * @property {string} [status] If notifications are enabled for this schedule
   * (i.e. Enabled, Disabled). Possible values include: 'Enabled', 'Disabled'
   * @property {number} [timeInMinutes] Time in minutes before event at which
   * notification will be sent.
   * @property {string} [webhookUrl] The webhook URL to which the notification
   * will be sent.
   * @property {string} [emailRecipient] The email recipient to send
   * notifications to (can be a list of semi-colon separated email addresses).
   * @property {string} [notificationLocale] The locale to use when sending a
   * notification (fallback for unsupported languages is EN).
   */
  constructor() {
  }

  /**
   * Defines the metadata of NotificationSettingsFragment
   *
   * @returns {object} metadata of NotificationSettingsFragment
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'NotificationSettingsFragment',
      type: {
        name: 'Composite',
        className: 'NotificationSettingsFragment',
        modelProperties: {
          status: {
            required: false,
            serializedName: 'status',
            type: {
              name: 'String'
            }
          },
          timeInMinutes: {
            required: false,
            serializedName: 'timeInMinutes',
            type: {
              name: 'Number'
            }
          },
          webhookUrl: {
            required: false,
            serializedName: 'webhookUrl',
            type: {
              name: 'String'
            }
          },
          emailRecipient: {
            required: false,
            serializedName: 'emailRecipient',
            type: {
              name: 'String'
            }
          },
          notificationLocale: {
            required: false,
            serializedName: 'notificationLocale',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = NotificationSettingsFragment;

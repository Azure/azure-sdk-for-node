/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
*/

import { ServiceClientOptions, RequestOptions, ServiceCallback, HttpOperationResponse } from 'ms-rest';
import * as models from '../models';


/**
 * @class
 * Operations
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the MLTeamAccountManagementClient.
 */
export interface Operations {


    /**
     * Lists all of the available Azure Machine Learning Team Accounts REST API
     * operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<OperationListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.OperationListResult>>;

    /**
     * Lists all of the available Azure Machine Learning Team Accounts REST API
     * operations.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {OperationListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {OperationListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link OperationListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.OperationListResult>;
    list(callback: ServiceCallback<models.OperationListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.OperationListResult>): void;
}

/**
 * @class
 * Accounts
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the MLTeamAccountManagementClient.
 */
export interface Accounts {


    /**
     * Gets the properties of the specified machine learning team account.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Account>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Account>>;

    /**
     * Gets the properties of the specified machine learning team account.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Account} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Account} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Account} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Account>;
    get(resourceGroupName: string, accountName: string, callback: ServiceCallback<models.Account>): void;
    get(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Account>): void;


    /**
     * Creates or updates a team account with the specified parameters.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {object} parameters The parameters for creating or updating a machine
     * learning team account.
     *
     * @param {string} parameters.vsoAccountId The fully qualified arm id of the
     * vso account to be used for this team account.
     *
     * @param {string} [parameters.description] The description of this workspace.
     *
     * @param {string} [parameters.friendlyName] The friendly name for this
     * workspace. This will be the workspace name in the arm id when the workspace
     * object gets created
     *
     * @param {string} parameters.keyVaultId The fully qualified arm id of the user
     * key vault.
     *
     * @param {string} [parameters.seats] The no of users/seats who can access this
     * team account. This property defines the charge on the team account.
     *
     * @param {object} parameters.storageAccount The properties of the storage
     * account for the machine learning team account.
     *
     * @param {string} parameters.storageAccount.storageAccountId The fully
     * qualified arm Id of the storage account.
     *
     * @param {string} parameters.storageAccount.accessKey The access key to the
     * storage account.
     *
     * @param {string} parameters.location The location of the resource. This
     * cannot be changed after the resource is created.
     *
     * @param {object} [parameters.tags] The tags of the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Account>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: models.Account, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Account>>;

    /**
     * Creates or updates a team account with the specified parameters.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {object} parameters The parameters for creating or updating a machine
     * learning team account.
     *
     * @param {string} parameters.vsoAccountId The fully qualified arm id of the
     * vso account to be used for this team account.
     *
     * @param {string} [parameters.description] The description of this workspace.
     *
     * @param {string} [parameters.friendlyName] The friendly name for this
     * workspace. This will be the workspace name in the arm id when the workspace
     * object gets created
     *
     * @param {string} parameters.keyVaultId The fully qualified arm id of the user
     * key vault.
     *
     * @param {string} [parameters.seats] The no of users/seats who can access this
     * team account. This property defines the charge on the team account.
     *
     * @param {object} parameters.storageAccount The properties of the storage
     * account for the machine learning team account.
     *
     * @param {string} parameters.storageAccount.storageAccountId The fully
     * qualified arm Id of the storage account.
     *
     * @param {string} parameters.storageAccount.accessKey The access key to the
     * storage account.
     *
     * @param {string} parameters.location The location of the resource. This
     * cannot be changed after the resource is created.
     *
     * @param {object} [parameters.tags] The tags of the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Account} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Account} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Account} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, accountName: string, parameters: models.Account, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Account>;
    createOrUpdate(resourceGroupName: string, accountName: string, parameters: models.Account, callback: ServiceCallback<models.Account>): void;
    createOrUpdate(resourceGroupName: string, accountName: string, parameters: models.Account, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Account>): void;


    /**
     * Deletes a machine learning team account.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a machine learning team account.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, accountName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, accountName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, accountName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Updates a machine learning team account with the specified parameters.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {object} parameters The parameters for updating a machine learning
     * team account.
     *
     * @param {object} [parameters.tags] The resource tags for the machine learning
     * team account.
     *
     * @param {string} [parameters.description] The description of this workspace.
     *
     * @param {string} [parameters.friendlyName] The friendly name for this
     * workspace. This will be the workspace name in the arm id when the workspace
     * object gets created
     *
     * @param {string} [parameters.seats] The no of users/seats who can access this
     * team account. This property defines the charge on the team account.
     *
     * @param {string} [parameters.storageAccountKey] The key for storage account
     * associated with this team account
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Account>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, parameters: models.AccountUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Account>>;

    /**
     * Updates a machine learning team account with the specified parameters.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {object} parameters The parameters for updating a machine learning
     * team account.
     *
     * @param {object} [parameters.tags] The resource tags for the machine learning
     * team account.
     *
     * @param {string} [parameters.description] The description of this workspace.
     *
     * @param {string} [parameters.friendlyName] The friendly name for this
     * workspace. This will be the workspace name in the arm id when the workspace
     * object gets created
     *
     * @param {string} [parameters.seats] The no of users/seats who can access this
     * team account. This property defines the charge on the team account.
     *
     * @param {string} [parameters.storageAccountKey] The key for storage account
     * associated with this team account
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Account} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Account} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Account} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, accountName: string, parameters: models.AccountUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Account>;
    update(resourceGroupName: string, accountName: string, parameters: models.AccountUpdateParameters, callback: ServiceCallback<models.Account>): void;
    update(resourceGroupName: string, accountName: string, parameters: models.AccountUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Account>): void;


    /**
     * Lists all the available machine learning team accounts under the specified
     * resource group.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AccountListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupWithHttpOperationResponse(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AccountListResult>>;

    /**
     * Lists all the available machine learning team accounts under the specified
     * resource group.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AccountListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AccountListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AccountListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroup(resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AccountListResult>;
    listByResourceGroup(resourceGroupName: string, callback: ServiceCallback<models.AccountListResult>): void;
    listByResourceGroup(resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AccountListResult>): void;


    /**
     * Lists all the available machine learning team accounts under the specified
     * subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AccountListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listWithHttpOperationResponse(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AccountListResult>>;

    /**
     * Lists all the available machine learning team accounts under the specified
     * subscription.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AccountListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AccountListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AccountListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    list(options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AccountListResult>;
    list(callback: ServiceCallback<models.AccountListResult>): void;
    list(options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AccountListResult>): void;


    /**
     * Lists all the available machine learning team accounts under the specified
     * resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AccountListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByResourceGroupNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AccountListResult>>;

    /**
     * Lists all the available machine learning team accounts under the specified
     * resource group.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AccountListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AccountListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AccountListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByResourceGroupNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AccountListResult>;
    listByResourceGroupNext(nextPageLink: string, callback: ServiceCallback<models.AccountListResult>): void;
    listByResourceGroupNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AccountListResult>): void;


    /**
     * Lists all the available machine learning team accounts under the specified
     * subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<AccountListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.AccountListResult>>;

    /**
     * Lists all the available machine learning team accounts under the specified
     * subscription.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {AccountListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {AccountListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link AccountListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.AccountListResult>;
    listNext(nextPageLink: string, callback: ServiceCallback<models.AccountListResult>): void;
    listNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.AccountListResult>): void;
}

/**
 * @class
 * Workspaces
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the MLTeamAccountManagementClient.
 */
export interface Workspaces {


    /**
     * Gets the properties of the specified machine learning workspace.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Workspace>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, accountName: string, workspaceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Workspace>>;

    /**
     * Gets the properties of the specified machine learning workspace.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Workspace} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Workspace} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Workspace} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, accountName: string, workspaceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Workspace>;
    get(resourceGroupName: string, accountName: string, workspaceName: string, callback: ServiceCallback<models.Workspace>): void;
    get(resourceGroupName: string, accountName: string, workspaceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Workspace>): void;


    /**
     * Creates or updates a machine learning workspace with the specified
     * parameters.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {object} parameters The parameters for creating or updating a machine
     * learning workspace.
     *
     * @param {string} [parameters.description] The description of this workspace.
     *
     * @param {string} parameters.friendlyName The friendly name for this
     * workspace. This will be the workspace name in the arm id when the workspace
     * object gets created
     *
     * @param {string} parameters.location The location of the resource. This
     * cannot be changed after the resource is created.
     *
     * @param {object} [parameters.tags] The tags of the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Workspace>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, accountName: string, workspaceName: string, parameters: models.Workspace, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Workspace>>;

    /**
     * Creates or updates a machine learning workspace with the specified
     * parameters.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {object} parameters The parameters for creating or updating a machine
     * learning workspace.
     *
     * @param {string} [parameters.description] The description of this workspace.
     *
     * @param {string} parameters.friendlyName The friendly name for this
     * workspace. This will be the workspace name in the arm id when the workspace
     * object gets created
     *
     * @param {string} parameters.location The location of the resource. This
     * cannot be changed after the resource is created.
     *
     * @param {object} [parameters.tags] The tags of the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Workspace} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Workspace} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Workspace} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, accountName: string, workspaceName: string, parameters: models.Workspace, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Workspace>;
    createOrUpdate(resourceGroupName: string, accountName: string, workspaceName: string, parameters: models.Workspace, callback: ServiceCallback<models.Workspace>): void;
    createOrUpdate(resourceGroupName: string, accountName: string, workspaceName: string, parameters: models.Workspace, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Workspace>): void;


    /**
     * Deletes a machine learning workspace.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, workspaceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a machine learning workspace.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, accountName: string, workspaceName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, accountName: string, workspaceName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, accountName: string, workspaceName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Updates a machine learning workspace with the specified parameters.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {object} parameters The parameters for updating a machine learning
     * workspace.
     *
     * @param {object} [parameters.tags] The resource tags for the machine learning
     * team account workspace.
     *
     * @param {string} [parameters.friendlyName] Friendly name of this workspace.
     *
     * @param {string} [parameters.description] Description for this workspace.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Workspace>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, workspaceName: string, parameters: models.WorkspaceUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Workspace>>;

    /**
     * Updates a machine learning workspace with the specified parameters.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {object} parameters The parameters for updating a machine learning
     * workspace.
     *
     * @param {object} [parameters.tags] The resource tags for the machine learning
     * team account workspace.
     *
     * @param {string} [parameters.friendlyName] Friendly name of this workspace.
     *
     * @param {string} [parameters.description] Description for this workspace.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Workspace} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Workspace} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Workspace} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, accountName: string, workspaceName: string, parameters: models.WorkspaceUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Workspace>;
    update(resourceGroupName: string, accountName: string, workspaceName: string, parameters: models.WorkspaceUpdateParameters, callback: ServiceCallback<models.Workspace>): void;
    update(resourceGroupName: string, accountName: string, workspaceName: string, parameters: models.WorkspaceUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Workspace>): void;


    /**
     * Lists all the available machine learning workspaces under the specified team
     * account.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WorkspaceListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAccountsWithHttpOperationResponse(accountName: string, resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WorkspaceListResult>>;

    /**
     * Lists all the available machine learning workspaces under the specified team
     * account.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WorkspaceListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WorkspaceListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WorkspaceListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAccounts(accountName: string, resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WorkspaceListResult>;
    listByAccounts(accountName: string, resourceGroupName: string, callback: ServiceCallback<models.WorkspaceListResult>): void;
    listByAccounts(accountName: string, resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WorkspaceListResult>): void;


    /**
     * Lists all the available machine learning workspaces under the specified team
     * account.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<WorkspaceListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByAccountsNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.WorkspaceListResult>>;

    /**
     * Lists all the available machine learning workspaces under the specified team
     * account.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {WorkspaceListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {WorkspaceListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link WorkspaceListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByAccountsNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.WorkspaceListResult>;
    listByAccountsNext(nextPageLink: string, callback: ServiceCallback<models.WorkspaceListResult>): void;
    listByAccountsNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.WorkspaceListResult>): void;
}

/**
 * @class
 * Projects
 * __NOTE__: An instance of this class is automatically created for an
 * instance of the MLTeamAccountManagementClient.
 */
export interface Projects {


    /**
     * Gets the properties of the specified machine learning project.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {string} projectName The name of the machine learning project under a
     * team account workspace.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Project>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    getWithHttpOperationResponse(resourceGroupName: string, accountName: string, workspaceName: string, projectName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Project>>;

    /**
     * Gets the properties of the specified machine learning project.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {string} projectName The name of the machine learning project under a
     * team account workspace.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Project} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Project} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Project} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    get(resourceGroupName: string, accountName: string, workspaceName: string, projectName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Project>;
    get(resourceGroupName: string, accountName: string, workspaceName: string, projectName: string, callback: ServiceCallback<models.Project>): void;
    get(resourceGroupName: string, accountName: string, workspaceName: string, projectName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Project>): void;


    /**
     * Creates or updates a project with the specified parameters.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {string} projectName The name of the machine learning project under a
     * team account workspace.
     *
     * @param {object} parameters The parameters for creating or updating a
     * project.
     *
     * @param {string} [parameters.description] The description of this project.
     *
     * @param {string} [parameters.gitrepo] The reference to git repo for this
     * project.
     *
     * @param {string} parameters.friendlyName The friendly name for this project.
     *
     * @param {string} parameters.location The location of the resource. This
     * cannot be changed after the resource is created.
     *
     * @param {object} [parameters.tags] The tags of the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Project>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    createOrUpdateWithHttpOperationResponse(resourceGroupName: string, accountName: string, workspaceName: string, projectName: string, parameters: models.Project, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Project>>;

    /**
     * Creates or updates a project with the specified parameters.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {string} projectName The name of the machine learning project under a
     * team account workspace.
     *
     * @param {object} parameters The parameters for creating or updating a
     * project.
     *
     * @param {string} [parameters.description] The description of this project.
     *
     * @param {string} [parameters.gitrepo] The reference to git repo for this
     * project.
     *
     * @param {string} parameters.friendlyName The friendly name for this project.
     *
     * @param {string} parameters.location The location of the resource. This
     * cannot be changed after the resource is created.
     *
     * @param {object} [parameters.tags] The tags of the resource.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Project} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Project} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Project} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    createOrUpdate(resourceGroupName: string, accountName: string, workspaceName: string, projectName: string, parameters: models.Project, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Project>;
    createOrUpdate(resourceGroupName: string, accountName: string, workspaceName: string, projectName: string, parameters: models.Project, callback: ServiceCallback<models.Project>): void;
    createOrUpdate(resourceGroupName: string, accountName: string, workspaceName: string, projectName: string, parameters: models.Project, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Project>): void;


    /**
     * Deletes a project.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {string} projectName The name of the machine learning project under a
     * team account workspace.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<null>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, workspaceName: string, projectName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<void>>;

    /**
     * Deletes a project.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {string} projectName The name of the machine learning project under a
     * team account workspace.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {null} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {null} [result]   - The deserialized result object if an error did not occur.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    deleteMethod(resourceGroupName: string, accountName: string, workspaceName: string, projectName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<void>;
    deleteMethod(resourceGroupName: string, accountName: string, workspaceName: string, projectName: string, callback: ServiceCallback<void>): void;
    deleteMethod(resourceGroupName: string, accountName: string, workspaceName: string, projectName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<void>): void;


    /**
     * Updates a project with the specified parameters.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {string} projectName The name of the machine learning project under a
     * team account workspace.
     *
     * @param {object} parameters The parameters for updating a machine learning
     * team account.
     *
     * @param {object} [parameters.tags] The resource tags for the machine learning
     * project.
     *
     * @param {string} [parameters.friendlyName] The friendly name for this
     * project.
     *
     * @param {string} [parameters.description] The description of this project.
     *
     * @param {string} [parameters.gitrepo] The reference to git repo for this
     * project.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<Project>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, workspaceName: string, projectName: string, parameters: models.ProjectUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.Project>>;

    /**
     * Updates a project with the specified parameters.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {string} projectName The name of the machine learning project under a
     * team account workspace.
     *
     * @param {object} parameters The parameters for updating a machine learning
     * team account.
     *
     * @param {object} [parameters.tags] The resource tags for the machine learning
     * project.
     *
     * @param {string} [parameters.friendlyName] The friendly name for this
     * project.
     *
     * @param {string} [parameters.description] The description of this project.
     *
     * @param {string} [parameters.gitrepo] The reference to git repo for this
     * project.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {Project} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {Project} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link Project} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    update(resourceGroupName: string, accountName: string, workspaceName: string, projectName: string, parameters: models.ProjectUpdateParameters, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.Project>;
    update(resourceGroupName: string, accountName: string, workspaceName: string, projectName: string, parameters: models.ProjectUpdateParameters, callback: ServiceCallback<models.Project>): void;
    update(resourceGroupName: string, accountName: string, workspaceName: string, projectName: string, parameters: models.ProjectUpdateParameters, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.Project>): void;


    /**
     * Lists all the available machine learning projects under the specified
     * workspace.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProjectListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByWorkspaceWithHttpOperationResponse(accountName: string, workspaceName: string, resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProjectListResult>>;

    /**
     * Lists all the available machine learning projects under the specified
     * workspace.
     *
     * @param {string} accountName The name of the machine learning team account.
     *
     * @param {string} workspaceName The name of the machine learning team account
     * workspace.
     *
     * @param {string} resourceGroupName The name of the resource group to which
     * the machine learning team account belongs.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProjectListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProjectListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProjectListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByWorkspace(accountName: string, workspaceName: string, resourceGroupName: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProjectListResult>;
    listByWorkspace(accountName: string, workspaceName: string, resourceGroupName: string, callback: ServiceCallback<models.ProjectListResult>): void;
    listByWorkspace(accountName: string, workspaceName: string, resourceGroupName: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProjectListResult>): void;


    /**
     * Lists all the available machine learning projects under the specified
     * workspace.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse<ProjectListResult>} - The deserialized result object.
     *
     * @reject {Error|ServiceError} - The error object.
     */
    listByWorkspaceNextWithHttpOperationResponse(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<HttpOperationResponse<models.ProjectListResult>>;

    /**
     * Lists all the available machine learning projects under the specified
     * workspace.
     *
     * @param {string} nextPageLink The NextLink from the previous successful call
     * to List operation.
     *
     * @param {object} [options] Optional Parameters.
     *
     * @param {object} [options.customHeaders] Headers that will be added to the
     * request
     *
     * @param {ServiceCallback} [optionalCallback] - The optional callback.
     *
     * @returns {ServiceCallback|Promise} If a callback was passed as the last
     * parameter then it returns the callback else returns a Promise.
     *
     * {Promise} A promise is returned.
     *
     *                      @resolve {ProjectListResult} - The deserialized result object.
     *
     *                      @reject {Error|ServiceError} - The error object.
     *
     * {ServiceCallback} optionalCallback(err, result, request, response)
     *
     *                      {Error|ServiceError}  err        - The Error object if an error occurred, null otherwise.
     *
     *                      {ProjectListResult} [result]   - The deserialized result object if an error did not occur.
     *                      See {@link ProjectListResult} for more information.
     *
     *                      {WebResource} [request]  - The HTTP Request object if an error did not occur.
     *
     *                      {http.IncomingMessage} [response] - The HTTP Response stream if an error did not occur.
     */
    listByWorkspaceNext(nextPageLink: string, options?: { customHeaders? : { [headerName: string]: string; } }): Promise<models.ProjectListResult>;
    listByWorkspaceNext(nextPageLink: string, callback: ServiceCallback<models.ProjectListResult>): void;
    listByWorkspaceNext(nextPageLink: string, options: { customHeaders? : { [headerName: string]: string; } }, callback: ServiceCallback<models.ProjectListResult>): void;
}

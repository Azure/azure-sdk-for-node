/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

/**
 * A container group or container instance event.
 *
 */
class Event {
  /**
   * Create a Event.
   * @property {number} [count] The count of the event.
   * @property {date} [firstTimestamp] The date-time of the earliest logged
   * event.
   * @property {date} [lastTimestamp] The date-time of the latest logged event.
   * @property {string} [name] The event name.
   * @property {string} [message] The event message.
   * @property {string} [type] The event type.
   */
  constructor() {
  }

  /**
   * Defines the metadata of Event
   *
   * @returns {object} metadata of Event
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'Event',
      type: {
        name: 'Composite',
        className: 'Event',
        modelProperties: {
          count: {
            required: false,
            serializedName: 'count',
            type: {
              name: 'Number'
            }
          },
          firstTimestamp: {
            required: false,
            serializedName: 'firstTimestamp',
            type: {
              name: 'DateTime'
            }
          },
          lastTimestamp: {
            required: false,
            serializedName: 'lastTimestamp',
            type: {
              name: 'DateTime'
            }
          },
          name: {
            required: false,
            serializedName: 'name',
            type: {
              name: 'String'
            }
          },
          message: {
            required: false,
            serializedName: 'message',
            type: {
              name: 'String'
            }
          },
          type: {
            required: false,
            serializedName: 'type',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = Event;
